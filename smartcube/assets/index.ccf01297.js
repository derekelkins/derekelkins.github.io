(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))i(r);new MutationObserver(r=>{for(const s of r)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function t(r){const s={};return r.integrity&&(s.integrity=r.integrity),r.referrerpolicy&&(s.referrerPolicy=r.referrerpolicy),r.crossorigin==="use-credentials"?s.credentials="include":r.crossorigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(r){if(r.ep)return;r.ep=!0;const s=t(r);fetch(r.href,s)}})();/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const D0="143",Cy=0,Op=1,Ry=2,m1=1,Py=2,qo=3,Yo=0,Qn=1,qa=2,Iy=1,br=0,Pa=1,zp=2,Fp=3,qp=4,Dy=5,Aa=100,Oy=101,zy=102,Np=103,Bp=104,Fy=200,qy=201,Ny=202,By=203,x1=204,g1=205,Uy=206,Gy=207,ky=208,Hy=209,Vy=210,Wy=0,$y=1,jy=2,yh=3,Xy=4,Yy=5,Zy=6,Jy=7,O0=0,Ky=1,Qy=2,$i=0,eb=1,tb=2,nb=3,ib=4,rb=5,v1=300,Na=301,Ba=302,bh=303,_h=304,pu=306,wh=1e3,Jn=1001,Mh=1002,hn=1003,Up=1004,Gp=1005,In=1006,sb=1007,mu=1008,gs=1009,ab=1010,ob=1011,y1=1012,cb=1013,ss=1014,as=1015,Zo=1016,lb=1017,db=1018,Ia=1020,ub=1021,fb=1022,hi=1023,hb=1024,pb=1025,us=1026,Ua=1027,mb=1028,xb=1029,gb=1030,vb=1031,yb=1033,Iu=33776,Du=33777,Ou=33778,zu=33779,kp=35840,Hp=35841,Vp=35842,Wp=35843,bb=36196,$p=37492,jp=37496,Xp=37808,Yp=37809,Zp=37810,Jp=37811,Kp=37812,Qp=37813,em=37814,tm=37815,nm=37816,im=37817,rm=37818,sm=37819,am=37820,om=37821,cm=36492,vs=3e3,It=3001,_b=3200,wb=3201,b1=0,Mb=1,Bi="srgb",os="srgb-linear",Fu=7680,Sb=519,lm=35044,dm="300 es",Sh=1035;class io{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(t)===-1&&i[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const i=this._listeners;return i[e]!==void 0&&i[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const r=this._listeners[e];if(r!==void 0){const s=r.indexOf(t);s!==-1&&r.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const i=this._listeners[e.type];if(i!==void 0){e.target=this;const r=i.slice(0);for(let s=0,a=r.length;s<a;s++)r[s].call(this,e);e.target=null}}}const Yt=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],qu=Math.PI/180,um=180/Math.PI;function Ic(){const n=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(Yt[n&255]+Yt[n>>8&255]+Yt[n>>16&255]+Yt[n>>24&255]+"-"+Yt[e&255]+Yt[e>>8&255]+"-"+Yt[e>>16&15|64]+Yt[e>>24&255]+"-"+Yt[t&63|128]+Yt[t>>8&255]+"-"+Yt[t>>16&255]+Yt[t>>24&255]+Yt[i&255]+Yt[i>>8&255]+Yt[i>>16&255]+Yt[i>>24&255]).toLowerCase()}function wn(n,e,t){return Math.max(e,Math.min(t,n))}function Eb(n,e){return(n%e+e)%e}function Nu(n,e,t){return(1-t)*n+t*e}function fm(n){return(n&n-1)===0&&n!==0}function Eh(n){return Math.pow(2,Math.floor(Math.log(n)/Math.LN2))}class vt{constructor(e=0,t=0){vt.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,i=this.y,r=e.elements;return this.x=r[0]*t+r[3]*i+r[6],this.y=r[1]*t+r[4]*i+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const i=Math.cos(t),r=Math.sin(t),s=this.x-e.x,a=this.y-e.y;return this.x=s*i-a*r+e.x,this.y=s*r+a*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class On{constructor(){On.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(e,t,i,r,s,a,o,l,c){const d=this.elements;return d[0]=e,d[1]=r,d[2]=o,d[3]=t,d[4]=s,d[5]=l,d[6]=i,d[7]=a,d[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,r=t.elements,s=this.elements,a=i[0],o=i[3],l=i[6],c=i[1],d=i[4],u=i[7],f=i[2],h=i[5],m=i[8],x=r[0],p=r[3],v=r[6],g=r[1],_=r[4],y=r[7],M=r[2],w=r[5],b=r[8];return s[0]=a*x+o*g+l*M,s[3]=a*p+o*_+l*w,s[6]=a*v+o*y+l*b,s[1]=c*x+d*g+u*M,s[4]=c*p+d*_+u*w,s[7]=c*v+d*y+u*b,s[2]=f*x+h*g+m*M,s[5]=f*p+h*_+m*w,s[8]=f*v+h*y+m*b,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],a=e[4],o=e[5],l=e[6],c=e[7],d=e[8];return t*a*d-t*o*c-i*s*d+i*o*l+r*s*c-r*a*l}invert(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],a=e[4],o=e[5],l=e[6],c=e[7],d=e[8],u=d*a-o*c,f=o*l-d*s,h=c*s-a*l,m=t*u+i*f+r*h;if(m===0)return this.set(0,0,0,0,0,0,0,0,0);const x=1/m;return e[0]=u*x,e[1]=(r*c-d*i)*x,e[2]=(o*i-r*a)*x,e[3]=f*x,e[4]=(d*t-r*l)*x,e[5]=(r*s-o*t)*x,e[6]=h*x,e[7]=(i*l-c*t)*x,e[8]=(a*t-i*s)*x,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,r,s,a,o){const l=Math.cos(s),c=Math.sin(s);return this.set(i*l,i*c,-i*(l*a+c*o)+a+e,-r*c,r*l,-r*(-c*a+l*o)+o+t,0,0,1),this}scale(e,t){const i=this.elements;return i[0]*=e,i[3]*=e,i[6]*=e,i[1]*=t,i[4]*=t,i[7]*=t,this}rotate(e){const t=Math.cos(e),i=Math.sin(e),r=this.elements,s=r[0],a=r[3],o=r[6],l=r[1],c=r[4],d=r[7];return r[0]=t*s+i*l,r[3]=t*a+i*c,r[6]=t*o+i*d,r[1]=-i*s+t*l,r[4]=-i*a+t*c,r[7]=-i*o+t*d,this}translate(e,t){const i=this.elements;return i[0]+=e*i[2],i[3]+=e*i[5],i[6]+=e*i[8],i[1]+=t*i[2],i[4]+=t*i[5],i[7]+=t*i[8],this}equals(e){const t=this.elements,i=e.elements;for(let r=0;r<9;r++)if(t[r]!==i[r])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}function _1(n){for(let e=n.length-1;e>=0;--e)if(n[e]>65535)return!0;return!1}function Td(n){return document.createElementNS("http://www.w3.org/1999/xhtml",n)}function fs(n){return n<.04045?n*.0773993808:Math.pow(n*.9478672986+.0521327014,2.4)}function gd(n){return n<.0031308?n*12.92:1.055*Math.pow(n,.41666)-.055}const Bu={[Bi]:{[os]:fs},[os]:{[Bi]:gd}},Gn={legacyMode:!0,get workingColorSpace(){return os},set workingColorSpace(n){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(n,e,t){if(this.legacyMode||e===t||!e||!t)return n;if(Bu[e]&&Bu[e][t]!==void 0){const i=Bu[e][t];return n.r=i(n.r),n.g=i(n.g),n.b=i(n.b),n}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(n,e){return this.convert(n,this.workingColorSpace,e)},toWorkingColorSpace:function(n,e){return this.convert(n,e,this.workingColorSpace)}},w1={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Bt={r:0,g:0,b:0},kn={h:0,s:0,l:0},Jc={h:0,s:0,l:0};function Uu(n,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?n+(e-n)*6*t:t<1/2?e:t<2/3?n+(e-n)*6*(2/3-t):n}function Kc(n,e){return e.r=n.r,e.g=n.g,e.b=n.b,e}class mt{constructor(e,t,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,t===void 0&&i===void 0?this.set(e):this.setRGB(e,t,i)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Bi){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Gn.toWorkingColorSpace(this,t),this}setRGB(e,t,i,r=os){return this.r=e,this.g=t,this.b=i,Gn.toWorkingColorSpace(this,r),this}setHSL(e,t,i,r=os){if(e=Eb(e,1),t=wn(t,0,1),i=wn(i,0,1),t===0)this.r=this.g=this.b=i;else{const s=i<=.5?i*(1+t):i+t-i*t,a=2*i-s;this.r=Uu(a,s,e+1/3),this.g=Uu(a,s,e),this.b=Uu(a,s,e-1/3)}return Gn.toWorkingColorSpace(this,r),this}setStyle(e,t=Bi){function i(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let s;const a=r[1],o=r[2];switch(a){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(255,parseInt(s[1],10))/255,this.g=Math.min(255,parseInt(s[2],10))/255,this.b=Math.min(255,parseInt(s[3],10))/255,Gn.toWorkingColorSpace(this,t),i(s[4]),this;if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(100,parseInt(s[1],10))/100,this.g=Math.min(100,parseInt(s[2],10))/100,this.b=Math.min(100,parseInt(s[3],10))/100,Gn.toWorkingColorSpace(this,t),i(s[4]),this;break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)){const l=parseFloat(s[1])/360,c=parseInt(s[2],10)/100,d=parseInt(s[3],10)/100;return i(s[4]),this.setHSL(l,c,d,t)}break}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=r[1],a=s.length;if(a===3)return this.r=parseInt(s.charAt(0)+s.charAt(0),16)/255,this.g=parseInt(s.charAt(1)+s.charAt(1),16)/255,this.b=parseInt(s.charAt(2)+s.charAt(2),16)/255,Gn.toWorkingColorSpace(this,t),this;if(a===6)return this.r=parseInt(s.charAt(0)+s.charAt(1),16)/255,this.g=parseInt(s.charAt(2)+s.charAt(3),16)/255,this.b=parseInt(s.charAt(4)+s.charAt(5),16)/255,Gn.toWorkingColorSpace(this,t),this}return e&&e.length>0?this.setColorName(e,t):this}setColorName(e,t=Bi){const i=w1[e.toLowerCase()];return i!==void 0?this.setHex(i,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=fs(e.r),this.g=fs(e.g),this.b=fs(e.b),this}copyLinearToSRGB(e){return this.r=gd(e.r),this.g=gd(e.g),this.b=gd(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Bi){return Gn.fromWorkingColorSpace(Kc(this,Bt),e),wn(Bt.r*255,0,255)<<16^wn(Bt.g*255,0,255)<<8^wn(Bt.b*255,0,255)<<0}getHexString(e=Bi){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=os){Gn.fromWorkingColorSpace(Kc(this,Bt),t);const i=Bt.r,r=Bt.g,s=Bt.b,a=Math.max(i,r,s),o=Math.min(i,r,s);let l,c;const d=(o+a)/2;if(o===a)l=0,c=0;else{const u=a-o;switch(c=d<=.5?u/(a+o):u/(2-a-o),a){case i:l=(r-s)/u+(r<s?6:0);break;case r:l=(s-i)/u+2;break;case s:l=(i-r)/u+4;break}l/=6}return e.h=l,e.s=c,e.l=d,e}getRGB(e,t=os){return Gn.fromWorkingColorSpace(Kc(this,Bt),t),e.r=Bt.r,e.g=Bt.g,e.b=Bt.b,e}getStyle(e=Bi){return Gn.fromWorkingColorSpace(Kc(this,Bt),e),e!==Bi?`color(${e} ${Bt.r} ${Bt.g} ${Bt.b})`:`rgb(${Bt.r*255|0},${Bt.g*255|0},${Bt.b*255|0})`}offsetHSL(e,t,i){return this.getHSL(kn),kn.h+=e,kn.s+=t,kn.l+=i,this.setHSL(kn.h,kn.s,kn.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(kn),e.getHSL(Jc);const i=Nu(kn.h,Jc.h,t),r=Nu(kn.s,Jc.s,t),s=Nu(kn.l,Jc.l,t);return this.setHSL(i,r,s),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),e.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}mt.NAMES=w1;let $s;class M1{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{$s===void 0&&($s=Td("canvas")),$s.width=e.width,$s.height=e.height;const i=$s.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),t=$s}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Td("canvas");t.width=e.width,t.height=e.height;const i=t.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const r=i.getImageData(0,0,e.width,e.height),s=r.data;for(let a=0;a<s.length;a++)s[a]=fs(s[a]/255)*255;return i.putImageData(r,0,0),t}else if(e.data){const t=e.data.slice(0);for(let i=0;i<t.length;i++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[i]=Math.floor(fs(t[i]/255)*255):t[i]=fs(t[i]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class S1{constructor(e=null){this.isSource=!0,this.uuid=Ic(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const i={uuid:this.uuid,url:""},r=this.data;if(r!==null){let s;if(Array.isArray(r)){s=[];for(let a=0,o=r.length;a<o;a++)r[a].isDataTexture?s.push(Gu(r[a].image)):s.push(Gu(r[a]))}else s=Gu(r);i.url=s}return t||(e.images[this.uuid]=i),i}}function Gu(n){return typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&n instanceof ImageBitmap?M1.getDataURL(n):n.data?{data:Array.from(n.data),width:n.width,height:n.height,type:n.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Tb=0;class ei extends io{constructor(e=ei.DEFAULT_IMAGE,t=ei.DEFAULT_MAPPING,i=Jn,r=Jn,s=In,a=mu,o=hi,l=gs,c=1,d=vs){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Tb++}),this.uuid=Ic(),this.name="",this.source=new S1(e),this.mipmaps=[],this.mapping=t,this.wrapS=i,this.wrapT=r,this.magFilter=s,this.minFilter=a,this.anisotropy=c,this.format=o,this.internalFormat=null,this.type=l,this.offset=new vt(0,0),this.repeat=new vt(1,1),this.center=new vt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new On,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=d,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==v1)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case wh:e.x=e.x-Math.floor(e.x);break;case Jn:e.x=e.x<0?0:1;break;case Mh:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case wh:e.y=e.y-Math.floor(e.y);break;case Jn:e.y=e.y<0?0:1;break;case Mh:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}}ei.DEFAULT_IMAGE=null;ei.DEFAULT_MAPPING=v1;class Ht{constructor(e=0,t=0,i=0,r=1){Ht.prototype.isVector4=!0,this.x=e,this.y=t,this.z=i,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,r){return this.x=e,this.y=t,this.z=i,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,i=this.y,r=this.z,s=this.w,a=e.elements;return this.x=a[0]*t+a[4]*i+a[8]*r+a[12]*s,this.y=a[1]*t+a[5]*i+a[9]*r+a[13]*s,this.z=a[2]*t+a[6]*i+a[10]*r+a[14]*s,this.w=a[3]*t+a[7]*i+a[11]*r+a[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,r,s;const l=e.elements,c=l[0],d=l[4],u=l[8],f=l[1],h=l[5],m=l[9],x=l[2],p=l[6],v=l[10];if(Math.abs(d-f)<.01&&Math.abs(u-x)<.01&&Math.abs(m-p)<.01){if(Math.abs(d+f)<.1&&Math.abs(u+x)<.1&&Math.abs(m+p)<.1&&Math.abs(c+h+v-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const _=(c+1)/2,y=(h+1)/2,M=(v+1)/2,w=(d+f)/4,b=(u+x)/4,S=(m+p)/4;return _>y&&_>M?_<.01?(i=0,r=.707106781,s=.707106781):(i=Math.sqrt(_),r=w/i,s=b/i):y>M?y<.01?(i=.707106781,r=0,s=.707106781):(r=Math.sqrt(y),i=w/r,s=S/r):M<.01?(i=.707106781,r=.707106781,s=0):(s=Math.sqrt(M),i=b/s,r=S/s),this.set(i,r,s,t),this}let g=Math.sqrt((p-m)*(p-m)+(u-x)*(u-x)+(f-d)*(f-d));return Math.abs(g)<.001&&(g=1),this.x=(p-m)/g,this.y=(u-x)/g,this.z=(f-d)/g,this.w=Math.acos((c+h+v-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class ys extends io{constructor(e,t,i={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Ht(0,0,e,t),this.scissorTest=!1,this.viewport=new Ht(0,0,e,t);const r={width:e,height:t,depth:1};this.texture=new ei(r,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=i.generateMipmaps!==void 0?i.generateMipmaps:!1,this.texture.internalFormat=i.internalFormat!==void 0?i.internalFormat:null,this.texture.minFilter=i.minFilter!==void 0?i.minFilter:In,this.depthBuffer=i.depthBuffer!==void 0?i.depthBuffer:!0,this.stencilBuffer=i.stencilBuffer!==void 0?i.stencilBuffer:!1,this.depthTexture=i.depthTexture!==void 0?i.depthTexture:null,this.samples=i.samples!==void 0?i.samples:0}setSize(e,t,i=1){(this.width!==e||this.height!==t||this.depth!==i)&&(this.width=e,this.height=t,this.depth=i,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=i,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new S1(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class E1 extends ei{constructor(e=null,t=1,i=1,r=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:i,depth:r},this.magFilter=hn,this.minFilter=hn,this.wrapR=Jn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Ab extends ei{constructor(e=null,t=1,i=1,r=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:i,depth:r},this.magFilter=hn,this.minFilter=hn,this.wrapR=Jn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Dt{constructor(e=0,t=0,i=0,r=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=i,this._w=r}static slerpFlat(e,t,i,r,s,a,o){let l=i[r+0],c=i[r+1],d=i[r+2],u=i[r+3];const f=s[a+0],h=s[a+1],m=s[a+2],x=s[a+3];if(o===0){e[t+0]=l,e[t+1]=c,e[t+2]=d,e[t+3]=u;return}if(o===1){e[t+0]=f,e[t+1]=h,e[t+2]=m,e[t+3]=x;return}if(u!==x||l!==f||c!==h||d!==m){let p=1-o;const v=l*f+c*h+d*m+u*x,g=v>=0?1:-1,_=1-v*v;if(_>Number.EPSILON){const M=Math.sqrt(_),w=Math.atan2(M,v*g);p=Math.sin(p*w)/M,o=Math.sin(o*w)/M}const y=o*g;if(l=l*p+f*y,c=c*p+h*y,d=d*p+m*y,u=u*p+x*y,p===1-o){const M=1/Math.sqrt(l*l+c*c+d*d+u*u);l*=M,c*=M,d*=M,u*=M}}e[t]=l,e[t+1]=c,e[t+2]=d,e[t+3]=u}static multiplyQuaternionsFlat(e,t,i,r,s,a){const o=i[r],l=i[r+1],c=i[r+2],d=i[r+3],u=s[a],f=s[a+1],h=s[a+2],m=s[a+3];return e[t]=o*m+d*u+l*h-c*f,e[t+1]=l*m+d*f+c*u-o*h,e[t+2]=c*m+d*h+o*f-l*u,e[t+3]=d*m-o*u-l*f-c*h,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,r){return this._x=e,this._y=t,this._z=i,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const i=e._x,r=e._y,s=e._z,a=e._order,o=Math.cos,l=Math.sin,c=o(i/2),d=o(r/2),u=o(s/2),f=l(i/2),h=l(r/2),m=l(s/2);switch(a){case"XYZ":this._x=f*d*u+c*h*m,this._y=c*h*u-f*d*m,this._z=c*d*m+f*h*u,this._w=c*d*u-f*h*m;break;case"YXZ":this._x=f*d*u+c*h*m,this._y=c*h*u-f*d*m,this._z=c*d*m-f*h*u,this._w=c*d*u+f*h*m;break;case"ZXY":this._x=f*d*u-c*h*m,this._y=c*h*u+f*d*m,this._z=c*d*m+f*h*u,this._w=c*d*u-f*h*m;break;case"ZYX":this._x=f*d*u-c*h*m,this._y=c*h*u+f*d*m,this._z=c*d*m-f*h*u,this._w=c*d*u+f*h*m;break;case"YZX":this._x=f*d*u+c*h*m,this._y=c*h*u+f*d*m,this._z=c*d*m-f*h*u,this._w=c*d*u-f*h*m;break;case"XZY":this._x=f*d*u-c*h*m,this._y=c*h*u-f*d*m,this._z=c*d*m+f*h*u,this._w=c*d*u+f*h*m;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const i=t/2,r=Math.sin(i);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,i=t[0],r=t[4],s=t[8],a=t[1],o=t[5],l=t[9],c=t[2],d=t[6],u=t[10],f=i+o+u;if(f>0){const h=.5/Math.sqrt(f+1);this._w=.25/h,this._x=(d-l)*h,this._y=(s-c)*h,this._z=(a-r)*h}else if(i>o&&i>u){const h=2*Math.sqrt(1+i-o-u);this._w=(d-l)/h,this._x=.25*h,this._y=(r+a)/h,this._z=(s+c)/h}else if(o>u){const h=2*Math.sqrt(1+o-i-u);this._w=(s-c)/h,this._x=(r+a)/h,this._y=.25*h,this._z=(l+d)/h}else{const h=2*Math.sqrt(1+u-i-o);this._w=(a-r)/h,this._x=(s+c)/h,this._y=(l+d)/h,this._z=.25*h}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(wn(this.dot(e),-1,1)))}rotateTowards(e,t){const i=this.angleTo(e);if(i===0)return this;const r=Math.min(1,t/i);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const i=e._x,r=e._y,s=e._z,a=e._w,o=t._x,l=t._y,c=t._z,d=t._w;return this._x=i*d+a*o+r*c-s*l,this._y=r*d+a*l+s*o-i*c,this._z=s*d+a*c+i*l-r*o,this._w=a*d-i*o-r*l-s*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const i=this._x,r=this._y,s=this._z,a=this._w;let o=a*e._w+i*e._x+r*e._y+s*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=i,this._y=r,this._z=s,this;const l=1-o*o;if(l<=Number.EPSILON){const h=1-t;return this._w=h*a+t*this._w,this._x=h*i+t*this._x,this._y=h*r+t*this._y,this._z=h*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),d=Math.atan2(c,o),u=Math.sin((1-t)*d)/c,f=Math.sin(t*d)/c;return this._w=a*u+this._w*f,this._x=i*u+this._x*f,this._y=r*u+this._y*f,this._z=s*u+this._z*f,this._onChangeCallback(),this}slerpQuaternions(e,t,i){return this.copy(e).slerp(t,i)}random(){const e=Math.random(),t=Math.sqrt(1-e),i=Math.sqrt(e),r=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(r),i*Math.sin(s),i*Math.cos(s),t*Math.sin(r))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class ce{constructor(e=0,t=0,i=0){ce.prototype.isVector3=!0,this.x=e,this.y=t,this.z=i}set(e,t,i){return i===void 0&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(hm.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(hm.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[3]*i+s[6]*r,this.y=s[1]*t+s[4]*i+s[7]*r,this.z=s[2]*t+s[5]*i+s[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,i=this.y,r=this.z,s=e.elements,a=1/(s[3]*t+s[7]*i+s[11]*r+s[15]);return this.x=(s[0]*t+s[4]*i+s[8]*r+s[12])*a,this.y=(s[1]*t+s[5]*i+s[9]*r+s[13])*a,this.z=(s[2]*t+s[6]*i+s[10]*r+s[14])*a,this}applyQuaternion(e){const t=this.x,i=this.y,r=this.z,s=e.x,a=e.y,o=e.z,l=e.w,c=l*t+a*r-o*i,d=l*i+o*t-s*r,u=l*r+s*i-a*t,f=-s*t-a*i-o*r;return this.x=c*l+f*-s+d*-o-u*-a,this.y=d*l+f*-a+u*-s-c*-o,this.z=u*l+f*-o+c*-a-d*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[4]*i+s[8]*r,this.y=s[1]*t+s[5]*i+s[9]*r,this.z=s[2]*t+s[6]*i+s[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const i=e.x,r=e.y,s=e.z,a=t.x,o=t.y,l=t.z;return this.x=r*l-s*o,this.y=s*a-i*l,this.z=i*o-r*a,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return ku.copy(this).projectOnVector(e),this.sub(ku)}reflect(e){return this.sub(ku.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(wn(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y,r=this.z-e.z;return t*t+i*i+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){const r=Math.sin(t)*e;return this.x=r*Math.sin(i),this.y=Math.cos(t)*e,this.z=r*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,i=Math.sqrt(1-e**2);return this.x=i*Math.cos(t),this.y=i*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const ku=new ce,hm=new Dt;class Dc{constructor(e=new ce(1/0,1/0,1/0),t=new ce(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,i=1/0,r=1/0,s=-1/0,a=-1/0,o=-1/0;for(let l=0,c=e.length;l<c;l+=3){const d=e[l],u=e[l+1],f=e[l+2];d<t&&(t=d),u<i&&(i=u),f<r&&(r=f),d>s&&(s=d),u>a&&(a=u),f>o&&(o=f)}return this.min.set(t,i,r),this.max.set(s,a,o),this}setFromBufferAttribute(e){let t=1/0,i=1/0,r=1/0,s=-1/0,a=-1/0,o=-1/0;for(let l=0,c=e.count;l<c;l++){const d=e.getX(l),u=e.getY(l),f=e.getZ(l);d<t&&(t=d),u<i&&(i=u),f<r&&(r=f),d>s&&(s=d),u>a&&(a=u),f>o&&(o=f)}return this.min.set(t,i,r),this.max.set(s,a,o),this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=Ur.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(i!==void 0)if(t&&i.attributes!=null&&i.attributes.position!==void 0){const s=i.attributes.position;for(let a=0,o=s.count;a<o;a++)Ur.fromBufferAttribute(s,a).applyMatrix4(e.matrixWorld),this.expandByPoint(Ur)}else i.boundingBox===null&&i.computeBoundingBox(),Hu.copy(i.boundingBox),Hu.applyMatrix4(e.matrixWorld),this.union(Hu);const r=e.children;for(let s=0,a=r.length;s<a;s++)this.expandByObject(r[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Ur),Ur.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(bo),Qc.subVectors(this.max,bo),js.subVectors(e.a,bo),Xs.subVectors(e.b,bo),Ys.subVectors(e.c,bo),tr.subVectors(Xs,js),nr.subVectors(Ys,Xs),Gr.subVectors(js,Ys);let t=[0,-tr.z,tr.y,0,-nr.z,nr.y,0,-Gr.z,Gr.y,tr.z,0,-tr.x,nr.z,0,-nr.x,Gr.z,0,-Gr.x,-tr.y,tr.x,0,-nr.y,nr.x,0,-Gr.y,Gr.x,0];return!Vu(t,js,Xs,Ys,Qc)||(t=[1,0,0,0,1,0,0,0,1],!Vu(t,js,Xs,Ys,Qc))?!1:(el.crossVectors(tr,nr),t=[el.x,el.y,el.z],Vu(t,js,Xs,Ys,Qc))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Ur.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=this.getSize(Ur).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Li[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Li[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Li[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Li[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Li[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Li[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Li[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Li[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Li),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Li=[new ce,new ce,new ce,new ce,new ce,new ce,new ce,new ce],Ur=new ce,Hu=new Dc,js=new ce,Xs=new ce,Ys=new ce,tr=new ce,nr=new ce,Gr=new ce,bo=new ce,Qc=new ce,el=new ce,kr=new ce;function Vu(n,e,t,i,r){for(let s=0,a=n.length-3;s<=a;s+=3){kr.fromArray(n,s);const o=r.x*Math.abs(kr.x)+r.y*Math.abs(kr.y)+r.z*Math.abs(kr.z),l=e.dot(kr),c=t.dot(kr),d=i.dot(kr);if(Math.max(-Math.max(l,c,d),Math.min(l,c,d))>o)return!1}return!0}const Lb=new Dc,pm=new ce,tl=new ce,Wu=new ce;class z0{constructor(e=new ce,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const i=this.center;t!==void 0?i.copy(t):Lb.setFromPoints(e).getCenter(i);let r=0;for(let s=0,a=e.length;s<a;s++)r=Math.max(r,i.distanceToSquared(e[s]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){Wu.subVectors(e,this.center);const t=Wu.lengthSq();if(t>this.radius*this.radius){const i=Math.sqrt(t),r=(i-this.radius)*.5;this.center.add(Wu.multiplyScalar(r/i)),this.radius+=r}return this}union(e){return this.center.equals(e.center)===!0?tl.set(0,0,1).multiplyScalar(e.radius):tl.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(pm.copy(e.center).add(tl)),this.expandByPoint(pm.copy(e.center).sub(tl)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Ci=new ce,$u=new ce,nl=new ce,ir=new ce,ju=new ce,il=new ce,Xu=new ce;class Cb{constructor(e=new ce,t=new ce(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Ci)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(i).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Ci.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Ci.copy(this.direction).multiplyScalar(t).add(this.origin),Ci.distanceToSquared(e))}distanceSqToSegment(e,t,i,r){$u.copy(e).add(t).multiplyScalar(.5),nl.copy(t).sub(e).normalize(),ir.copy(this.origin).sub($u);const s=e.distanceTo(t)*.5,a=-this.direction.dot(nl),o=ir.dot(this.direction),l=-ir.dot(nl),c=ir.lengthSq(),d=Math.abs(1-a*a);let u,f,h,m;if(d>0)if(u=a*l-o,f=a*o-l,m=s*d,u>=0)if(f>=-m)if(f<=m){const x=1/d;u*=x,f*=x,h=u*(u+a*f+2*o)+f*(a*u+f+2*l)+c}else f=s,u=Math.max(0,-(a*f+o)),h=-u*u+f*(f+2*l)+c;else f=-s,u=Math.max(0,-(a*f+o)),h=-u*u+f*(f+2*l)+c;else f<=-m?(u=Math.max(0,-(-a*s+o)),f=u>0?-s:Math.min(Math.max(-s,-l),s),h=-u*u+f*(f+2*l)+c):f<=m?(u=0,f=Math.min(Math.max(-s,-l),s),h=f*(f+2*l)+c):(u=Math.max(0,-(a*s+o)),f=u>0?s:Math.min(Math.max(-s,-l),s),h=-u*u+f*(f+2*l)+c);else f=a>0?-s:s,u=Math.max(0,-(a*f+o)),h=-u*u+f*(f+2*l)+c;return i&&i.copy(this.direction).multiplyScalar(u).add(this.origin),r&&r.copy(nl).multiplyScalar(f).add($u),h}intersectSphere(e,t){Ci.subVectors(e.center,this.origin);const i=Ci.dot(this.direction),r=Ci.dot(Ci)-i*i,s=e.radius*e.radius;if(r>s)return null;const a=Math.sqrt(s-r),o=i-a,l=i+a;return o<0&&l<0?null:o<0?this.at(l,t):this.at(o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){const i=this.distanceToPlane(e);return i===null?null:this.at(i,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let i,r,s,a,o,l;const c=1/this.direction.x,d=1/this.direction.y,u=1/this.direction.z,f=this.origin;return c>=0?(i=(e.min.x-f.x)*c,r=(e.max.x-f.x)*c):(i=(e.max.x-f.x)*c,r=(e.min.x-f.x)*c),d>=0?(s=(e.min.y-f.y)*d,a=(e.max.y-f.y)*d):(s=(e.max.y-f.y)*d,a=(e.min.y-f.y)*d),i>a||s>r||((s>i||i!==i)&&(i=s),(a<r||r!==r)&&(r=a),u>=0?(o=(e.min.z-f.z)*u,l=(e.max.z-f.z)*u):(o=(e.max.z-f.z)*u,l=(e.min.z-f.z)*u),i>l||o>r)||((o>i||i!==i)&&(i=o),(l<r||r!==r)&&(r=l),r<0)?null:this.at(i>=0?i:r,t)}intersectsBox(e){return this.intersectBox(e,Ci)!==null}intersectTriangle(e,t,i,r,s){ju.subVectors(t,e),il.subVectors(i,e),Xu.crossVectors(ju,il);let a=this.direction.dot(Xu),o;if(a>0){if(r)return null;o=1}else if(a<0)o=-1,a=-a;else return null;ir.subVectors(this.origin,e);const l=o*this.direction.dot(il.crossVectors(ir,il));if(l<0)return null;const c=o*this.direction.dot(ju.cross(ir));if(c<0||l+c>a)return null;const d=-o*ir.dot(Xu);return d<0?null:this.at(d/a,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class jt{constructor(){jt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(e,t,i,r,s,a,o,l,c,d,u,f,h,m,x,p){const v=this.elements;return v[0]=e,v[4]=t,v[8]=i,v[12]=r,v[1]=s,v[5]=a,v[9]=o,v[13]=l,v[2]=c,v[6]=d,v[10]=u,v[14]=f,v[3]=h,v[7]=m,v[11]=x,v[15]=p,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new jt().fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){const t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,i=e.elements,r=1/Zs.setFromMatrixColumn(e,0).length(),s=1/Zs.setFromMatrixColumn(e,1).length(),a=1/Zs.setFromMatrixColumn(e,2).length();return t[0]=i[0]*r,t[1]=i[1]*r,t[2]=i[2]*r,t[3]=0,t[4]=i[4]*s,t[5]=i[5]*s,t[6]=i[6]*s,t[7]=0,t[8]=i[8]*a,t[9]=i[9]*a,t[10]=i[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,i=e.x,r=e.y,s=e.z,a=Math.cos(i),o=Math.sin(i),l=Math.cos(r),c=Math.sin(r),d=Math.cos(s),u=Math.sin(s);if(e.order==="XYZ"){const f=a*d,h=a*u,m=o*d,x=o*u;t[0]=l*d,t[4]=-l*u,t[8]=c,t[1]=h+m*c,t[5]=f-x*c,t[9]=-o*l,t[2]=x-f*c,t[6]=m+h*c,t[10]=a*l}else if(e.order==="YXZ"){const f=l*d,h=l*u,m=c*d,x=c*u;t[0]=f+x*o,t[4]=m*o-h,t[8]=a*c,t[1]=a*u,t[5]=a*d,t[9]=-o,t[2]=h*o-m,t[6]=x+f*o,t[10]=a*l}else if(e.order==="ZXY"){const f=l*d,h=l*u,m=c*d,x=c*u;t[0]=f-x*o,t[4]=-a*u,t[8]=m+h*o,t[1]=h+m*o,t[5]=a*d,t[9]=x-f*o,t[2]=-a*c,t[6]=o,t[10]=a*l}else if(e.order==="ZYX"){const f=a*d,h=a*u,m=o*d,x=o*u;t[0]=l*d,t[4]=m*c-h,t[8]=f*c+x,t[1]=l*u,t[5]=x*c+f,t[9]=h*c-m,t[2]=-c,t[6]=o*l,t[10]=a*l}else if(e.order==="YZX"){const f=a*l,h=a*c,m=o*l,x=o*c;t[0]=l*d,t[4]=x-f*u,t[8]=m*u+h,t[1]=u,t[5]=a*d,t[9]=-o*d,t[2]=-c*d,t[6]=h*u+m,t[10]=f-x*u}else if(e.order==="XZY"){const f=a*l,h=a*c,m=o*l,x=o*c;t[0]=l*d,t[4]=-u,t[8]=c*d,t[1]=f*u+x,t[5]=a*d,t[9]=h*u-m,t[2]=m*u-h,t[6]=o*d,t[10]=x*u+f}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Rb,e,Pb)}lookAt(e,t,i){const r=this.elements;return gn.subVectors(e,t),gn.lengthSq()===0&&(gn.z=1),gn.normalize(),rr.crossVectors(i,gn),rr.lengthSq()===0&&(Math.abs(i.z)===1?gn.x+=1e-4:gn.z+=1e-4,gn.normalize(),rr.crossVectors(i,gn)),rr.normalize(),rl.crossVectors(gn,rr),r[0]=rr.x,r[4]=rl.x,r[8]=gn.x,r[1]=rr.y,r[5]=rl.y,r[9]=gn.y,r[2]=rr.z,r[6]=rl.z,r[10]=gn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,r=t.elements,s=this.elements,a=i[0],o=i[4],l=i[8],c=i[12],d=i[1],u=i[5],f=i[9],h=i[13],m=i[2],x=i[6],p=i[10],v=i[14],g=i[3],_=i[7],y=i[11],M=i[15],w=r[0],b=r[4],S=r[8],E=r[12],C=r[1],I=r[5],W=r[9],H=r[13],A=r[2],q=r[6],N=r[10],X=r[14],Z=r[3],$=r[7],J=r[11],R=r[15];return s[0]=a*w+o*C+l*A+c*Z,s[4]=a*b+o*I+l*q+c*$,s[8]=a*S+o*W+l*N+c*J,s[12]=a*E+o*H+l*X+c*R,s[1]=d*w+u*C+f*A+h*Z,s[5]=d*b+u*I+f*q+h*$,s[9]=d*S+u*W+f*N+h*J,s[13]=d*E+u*H+f*X+h*R,s[2]=m*w+x*C+p*A+v*Z,s[6]=m*b+x*I+p*q+v*$,s[10]=m*S+x*W+p*N+v*J,s[14]=m*E+x*H+p*X+v*R,s[3]=g*w+_*C+y*A+M*Z,s[7]=g*b+_*I+y*q+M*$,s[11]=g*S+_*W+y*N+M*J,s[15]=g*E+_*H+y*X+M*R,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[4],r=e[8],s=e[12],a=e[1],o=e[5],l=e[9],c=e[13],d=e[2],u=e[6],f=e[10],h=e[14],m=e[3],x=e[7],p=e[11],v=e[15];return m*(+s*l*u-r*c*u-s*o*f+i*c*f+r*o*h-i*l*h)+x*(+t*l*h-t*c*f+s*a*f-r*a*h+r*c*d-s*l*d)+p*(+t*c*u-t*o*h-s*a*u+i*a*h+s*o*d-i*c*d)+v*(-r*o*d-t*l*u+t*o*f+r*a*u-i*a*f+i*l*d)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=i),this}invert(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],a=e[4],o=e[5],l=e[6],c=e[7],d=e[8],u=e[9],f=e[10],h=e[11],m=e[12],x=e[13],p=e[14],v=e[15],g=u*p*c-x*f*c+x*l*h-o*p*h-u*l*v+o*f*v,_=m*f*c-d*p*c-m*l*h+a*p*h+d*l*v-a*f*v,y=d*x*c-m*u*c+m*o*h-a*x*h-d*o*v+a*u*v,M=m*u*l-d*x*l-m*o*f+a*x*f+d*o*p-a*u*p,w=t*g+i*_+r*y+s*M;if(w===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const b=1/w;return e[0]=g*b,e[1]=(x*f*s-u*p*s-x*r*h+i*p*h+u*r*v-i*f*v)*b,e[2]=(o*p*s-x*l*s+x*r*c-i*p*c-o*r*v+i*l*v)*b,e[3]=(u*l*s-o*f*s-u*r*c+i*f*c+o*r*h-i*l*h)*b,e[4]=_*b,e[5]=(d*p*s-m*f*s+m*r*h-t*p*h-d*r*v+t*f*v)*b,e[6]=(m*l*s-a*p*s-m*r*c+t*p*c+a*r*v-t*l*v)*b,e[7]=(a*f*s-d*l*s+d*r*c-t*f*c-a*r*h+t*l*h)*b,e[8]=y*b,e[9]=(m*u*s-d*x*s-m*i*h+t*x*h+d*i*v-t*u*v)*b,e[10]=(a*x*s-m*o*s+m*i*c-t*x*c-a*i*v+t*o*v)*b,e[11]=(d*o*s-a*u*s-d*i*c+t*u*c+a*i*h-t*o*h)*b,e[12]=M*b,e[13]=(d*x*r-m*u*r+m*i*f-t*x*f-d*i*p+t*u*p)*b,e[14]=(m*o*r-a*x*r-m*i*l+t*x*l+a*i*p-t*o*p)*b,e[15]=(a*u*r-d*o*r+d*i*l-t*u*l-a*i*f+t*o*f)*b,this}scale(e){const t=this.elements,i=e.x,r=e.y,s=e.z;return t[0]*=i,t[4]*=r,t[8]*=s,t[1]*=i,t[5]*=r,t[9]*=s,t[2]*=i,t[6]*=r,t[10]*=s,t[3]*=i,t[7]*=r,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,r))}makeTranslation(e,t,i){return this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const i=Math.cos(t),r=Math.sin(t),s=1-i,a=e.x,o=e.y,l=e.z,c=s*a,d=s*o;return this.set(c*a+i,c*o-r*l,c*l+r*o,0,c*o+r*l,d*o+i,d*l-r*a,0,c*l-r*o,d*l+r*a,s*l*l+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,r,s,a){return this.set(1,i,s,0,e,1,a,0,t,r,1,0,0,0,0,1),this}compose(e,t,i){const r=this.elements,s=t._x,a=t._y,o=t._z,l=t._w,c=s+s,d=a+a,u=o+o,f=s*c,h=s*d,m=s*u,x=a*d,p=a*u,v=o*u,g=l*c,_=l*d,y=l*u,M=i.x,w=i.y,b=i.z;return r[0]=(1-(x+v))*M,r[1]=(h+y)*M,r[2]=(m-_)*M,r[3]=0,r[4]=(h-y)*w,r[5]=(1-(f+v))*w,r[6]=(p+g)*w,r[7]=0,r[8]=(m+_)*b,r[9]=(p-g)*b,r[10]=(1-(f+x))*b,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,i){const r=this.elements;let s=Zs.set(r[0],r[1],r[2]).length();const a=Zs.set(r[4],r[5],r[6]).length(),o=Zs.set(r[8],r[9],r[10]).length();this.determinant()<0&&(s=-s),e.x=r[12],e.y=r[13],e.z=r[14],Hn.copy(this);const c=1/s,d=1/a,u=1/o;return Hn.elements[0]*=c,Hn.elements[1]*=c,Hn.elements[2]*=c,Hn.elements[4]*=d,Hn.elements[5]*=d,Hn.elements[6]*=d,Hn.elements[8]*=u,Hn.elements[9]*=u,Hn.elements[10]*=u,t.setFromRotationMatrix(Hn),i.x=s,i.y=a,i.z=o,this}makePerspective(e,t,i,r,s,a){const o=this.elements,l=2*s/(t-e),c=2*s/(i-r),d=(t+e)/(t-e),u=(i+r)/(i-r),f=-(a+s)/(a-s),h=-2*a*s/(a-s);return o[0]=l,o[4]=0,o[8]=d,o[12]=0,o[1]=0,o[5]=c,o[9]=u,o[13]=0,o[2]=0,o[6]=0,o[10]=f,o[14]=h,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(e,t,i,r,s,a){const o=this.elements,l=1/(t-e),c=1/(i-r),d=1/(a-s),u=(t+e)*l,f=(i+r)*c,h=(a+s)*d;return o[0]=2*l,o[4]=0,o[8]=0,o[12]=-u,o[1]=0,o[5]=2*c,o[9]=0,o[13]=-f,o[2]=0,o[6]=0,o[10]=-2*d,o[14]=-h,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(e){const t=this.elements,i=e.elements;for(let r=0;r<16;r++)if(t[r]!==i[r])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}const Zs=new ce,Hn=new jt,Rb=new ce(0,0,0),Pb=new ce(1,1,1),rr=new ce,rl=new ce,gn=new ce,mm=new jt,xm=new Dt;class Oc{constructor(e=0,t=0,i=0,r=Oc.DefaultOrder){this.isEuler=!0,this._x=e,this._y=t,this._z=i,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,r=this._order){return this._x=e,this._y=t,this._z=i,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){const r=e.elements,s=r[0],a=r[4],o=r[8],l=r[1],c=r[5],d=r[9],u=r[2],f=r[6],h=r[10];switch(t){case"XYZ":this._y=Math.asin(wn(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-d,h),this._z=Math.atan2(-a,s)):(this._x=Math.atan2(f,c),this._z=0);break;case"YXZ":this._x=Math.asin(-wn(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(o,h),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-u,s),this._z=0);break;case"ZXY":this._x=Math.asin(wn(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-u,h),this._z=Math.atan2(-a,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-wn(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(f,h),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-a,c));break;case"YZX":this._z=Math.asin(wn(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-d,c),this._y=Math.atan2(-u,s)):(this._x=0,this._y=Math.atan2(o,h));break;case"XZY":this._z=Math.asin(-wn(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(f,c),this._y=Math.atan2(o,s)):(this._x=Math.atan2(-d,h),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return mm.makeRotationFromQuaternion(e),this.setFromRotationMatrix(mm,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return xm.setFromEuler(this),this.setFromQuaternion(xm,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}Oc.DefaultOrder="XYZ";Oc.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class T1{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let Ib=0;const gm=new ce,Js=new Dt,Ri=new jt,sl=new ce,_o=new ce,Db=new ce,Ob=new Dt,vm=new ce(1,0,0),ym=new ce(0,1,0),bm=new ce(0,0,1),zb={type:"added"},_m={type:"removed"};class Fn extends io{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Ib++}),this.uuid=Ic(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Fn.DefaultUp.clone();const e=new ce,t=new Oc,i=new Dt,r=new ce(1,1,1);function s(){i.setFromEuler(t,!1)}function a(){t.setFromQuaternion(i,void 0,!1)}t._onChange(s),i._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new jt},normalMatrix:{value:new On}}),this.matrix=new jt,this.matrixWorld=new jt,this.matrixAutoUpdate=Fn.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new T1,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Js.setFromAxisAngle(e,t),this.quaternion.multiply(Js),this}rotateOnWorldAxis(e,t){return Js.setFromAxisAngle(e,t),this.quaternion.premultiply(Js),this}rotateX(e){return this.rotateOnAxis(vm,e)}rotateY(e){return this.rotateOnAxis(ym,e)}rotateZ(e){return this.rotateOnAxis(bm,e)}translateOnAxis(e,t){return gm.copy(e).applyQuaternion(this.quaternion),this.position.add(gm.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(vm,e)}translateY(e){return this.translateOnAxis(ym,e)}translateZ(e){return this.translateOnAxis(bm,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(Ri.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?sl.copy(e):sl.set(e,t,i);const r=this.parent;this.updateWorldMatrix(!0,!1),_o.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ri.lookAt(_o,sl,this.up):Ri.lookAt(sl,_o,this.up),this.quaternion.setFromRotationMatrix(Ri),r&&(Ri.extractRotation(r.matrixWorld),Js.setFromRotationMatrix(Ri),this.quaternion.premultiply(Js.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(zb)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(_m)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(_m)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),Ri.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Ri.multiply(e.parent.matrixWorld)),e.applyMatrix4(Ri),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,r=this.children.length;i<r;i++){const a=this.children[i].getObjectByProperty(e,t);if(a!==void 0)return a}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(_o,e,Db),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(_o,Ob,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].updateMatrixWorld(e)}updateWorldMatrix(e,t){const i=this.parent;if(e===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const r=this.children;for(let s=0,a=r.length;s<a;s++)r[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(r.instanceColor=this.instanceColor.toJSON()));function s(o,l){return o[l.uuid]===void 0&&(o[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=s(e.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const l=o.shapes;if(Array.isArray(l))for(let c=0,d=l.length;c<d;c++){const u=l[c];s(e.shapes,u)}else s(e.shapes,l)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let l=0,c=this.material.length;l<c;l++)o.push(s(e.materials,this.material[l]));r.material=o}else r.material=s(e.materials,this.material);if(this.children.length>0){r.children=[];for(let o=0;o<this.children.length;o++)r.children.push(this.children[o].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let o=0;o<this.animations.length;o++){const l=this.animations[o];r.animations.push(s(e.animations,l))}}if(t){const o=a(e.geometries),l=a(e.materials),c=a(e.textures),d=a(e.images),u=a(e.shapes),f=a(e.skeletons),h=a(e.animations),m=a(e.nodes);o.length>0&&(i.geometries=o),l.length>0&&(i.materials=l),c.length>0&&(i.textures=c),d.length>0&&(i.images=d),u.length>0&&(i.shapes=u),f.length>0&&(i.skeletons=f),h.length>0&&(i.animations=h),m.length>0&&(i.nodes=m)}return i.object=r,i;function a(o){const l=[];for(const c in o){const d=o[c];delete d.metadata,l.push(d)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let i=0;i<e.children.length;i++){const r=e.children[i];this.add(r.clone())}return this}}Fn.DefaultUp=new ce(0,1,0);Fn.DefaultMatrixAutoUpdate=!0;const Vn=new ce,Pi=new ce,Yu=new ce,Ii=new ce,Ks=new ce,Qs=new ce,wm=new ce,Zu=new ce,Ju=new ce,Ku=new ce;class Gi{constructor(e=new ce,t=new ce,i=new ce){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,r){r.subVectors(i,t),Vn.subVectors(e,t),r.cross(Vn);const s=r.lengthSq();return s>0?r.multiplyScalar(1/Math.sqrt(s)):r.set(0,0,0)}static getBarycoord(e,t,i,r,s){Vn.subVectors(r,t),Pi.subVectors(i,t),Yu.subVectors(e,t);const a=Vn.dot(Vn),o=Vn.dot(Pi),l=Vn.dot(Yu),c=Pi.dot(Pi),d=Pi.dot(Yu),u=a*c-o*o;if(u===0)return s.set(-2,-1,-1);const f=1/u,h=(c*l-o*d)*f,m=(a*d-o*l)*f;return s.set(1-h-m,m,h)}static containsPoint(e,t,i,r){return this.getBarycoord(e,t,i,r,Ii),Ii.x>=0&&Ii.y>=0&&Ii.x+Ii.y<=1}static getUV(e,t,i,r,s,a,o,l){return this.getBarycoord(e,t,i,r,Ii),l.set(0,0),l.addScaledVector(s,Ii.x),l.addScaledVector(a,Ii.y),l.addScaledVector(o,Ii.z),l}static isFrontFacing(e,t,i,r){return Vn.subVectors(i,t),Pi.subVectors(e,t),Vn.cross(Pi).dot(r)<0}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,r){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,i,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Vn.subVectors(this.c,this.b),Pi.subVectors(this.a,this.b),Vn.cross(Pi).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Gi.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Gi.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,i,r,s){return Gi.getUV(e,this.a,this.b,this.c,t,i,r,s)}containsPoint(e){return Gi.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Gi.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const i=this.a,r=this.b,s=this.c;let a,o;Ks.subVectors(r,i),Qs.subVectors(s,i),Zu.subVectors(e,i);const l=Ks.dot(Zu),c=Qs.dot(Zu);if(l<=0&&c<=0)return t.copy(i);Ju.subVectors(e,r);const d=Ks.dot(Ju),u=Qs.dot(Ju);if(d>=0&&u<=d)return t.copy(r);const f=l*u-d*c;if(f<=0&&l>=0&&d<=0)return a=l/(l-d),t.copy(i).addScaledVector(Ks,a);Ku.subVectors(e,s);const h=Ks.dot(Ku),m=Qs.dot(Ku);if(m>=0&&h<=m)return t.copy(s);const x=h*c-l*m;if(x<=0&&c>=0&&m<=0)return o=c/(c-m),t.copy(i).addScaledVector(Qs,o);const p=d*m-h*u;if(p<=0&&u-d>=0&&h-m>=0)return wm.subVectors(s,r),o=(u-d)/(u-d+(h-m)),t.copy(r).addScaledVector(wm,o);const v=1/(p+x+f);return a=x*v,o=f*v,t.copy(i).addScaledVector(Ks,a).addScaledVector(Qs,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let Fb=0;class zc extends io{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Fb++}),this.uuid=Ic(),this.name="",this.type="Material",this.blending=Pa,this.side=Yo,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=x1,this.blendDst=g1,this.blendEquation=Aa,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=yh,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Sb,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Fu,this.stencilZFail=Fu,this.stencilZPass=Fu,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const i=e[t];if(i===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if(t==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=i===Iy;continue}const r=this[t];if(r===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}r&&r.isColor?r.set(i):r&&r.isVector3&&i&&i.isVector3?r.copy(i):this[t]=i}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const i={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==Pa&&(i.blending=this.blending),this.side!==Yo&&(i.side=this.side),this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.colorWrite=this.colorWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(i.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(i.wireframe=this.wireframe),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=this.flatShading),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData);function r(s){const a=[];for(const o in s){const l=s[o];delete l.metadata,a.push(l)}return a}if(t){const s=r(e.textures),a=r(e.images);s.length>0&&(i.textures=s),a.length>0&&(i.images=a)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let i=null;if(t!==null){const r=t.length;i=new Array(r);for(let s=0;s!==r;++s)i[s]=t[s].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class A1 extends zc{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new mt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=O0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const zt=new ce,al=new vt;class mi{constructor(e,t,i){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=i===!0,this.usage=lm,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let r=0,s=this.itemSize;r<s;r++)this.array[e+r]=t.array[i+r];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){const t=this.array;let i=0;for(let r=0,s=e.length;r<s;r++){let a=e[r];a===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),a=new mt),t[i++]=a.r,t[i++]=a.g,t[i++]=a.b}return this}copyVector2sArray(e){const t=this.array;let i=0;for(let r=0,s=e.length;r<s;r++){let a=e[r];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),a=new vt),t[i++]=a.x,t[i++]=a.y}return this}copyVector3sArray(e){const t=this.array;let i=0;for(let r=0,s=e.length;r<s;r++){let a=e[r];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),a=new ce),t[i++]=a.x,t[i++]=a.y,t[i++]=a.z}return this}copyVector4sArray(e){const t=this.array;let i=0;for(let r=0,s=e.length;r<s;r++){let a=e[r];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",r),a=new Ht),t[i++]=a.x,t[i++]=a.y,t[i++]=a.z,t[i++]=a.w}return this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,i=this.count;t<i;t++)al.fromBufferAttribute(this,t),al.applyMatrix3(e),this.setXY(t,al.x,al.y);else if(this.itemSize===3)for(let t=0,i=this.count;t<i;t++)zt.fromBufferAttribute(this,t),zt.applyMatrix3(e),this.setXYZ(t,zt.x,zt.y,zt.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)zt.fromBufferAttribute(this,t),zt.applyMatrix4(e),this.setXYZ(t,zt.x,zt.y,zt.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)zt.fromBufferAttribute(this,t),zt.applyNormalMatrix(e),this.setXYZ(t,zt.x,zt.y,zt.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)zt.fromBufferAttribute(this,t),zt.transformDirection(e),this.setXYZ(t,zt.x,zt.y,zt.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=r,this}setXYZW(e,t,i,r,s){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=r,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==lm&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}}class L1 extends mi{constructor(e,t,i){super(new Uint16Array(e),t,i)}}class C1 extends mi{constructor(e,t,i){super(new Uint32Array(e),t,i)}}class hs extends mi{constructor(e,t,i){super(new Float32Array(e),t,i)}}let qb=0;const Pn=new jt,Qu=new Fn,ea=new ce,vn=new Dc,wo=new Dc,Gt=new ce;class ks extends io{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:qb++}),this.uuid=Ic(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(_1(e)?C1:L1)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const s=new On().getNormalMatrix(e);i.applyNormalMatrix(s),i.needsUpdate=!0}const r=this.attributes.tangent;return r!==void 0&&(r.transformDirection(e),r.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Pn.makeRotationFromQuaternion(e),this.applyMatrix4(Pn),this}rotateX(e){return Pn.makeRotationX(e),this.applyMatrix4(Pn),this}rotateY(e){return Pn.makeRotationY(e),this.applyMatrix4(Pn),this}rotateZ(e){return Pn.makeRotationZ(e),this.applyMatrix4(Pn),this}translate(e,t,i){return Pn.makeTranslation(e,t,i),this.applyMatrix4(Pn),this}scale(e,t,i){return Pn.makeScale(e,t,i),this.applyMatrix4(Pn),this}lookAt(e){return Qu.lookAt(e),Qu.updateMatrix(),this.applyMatrix4(Qu.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(ea).negate(),this.translate(ea.x,ea.y,ea.z),this}setFromPoints(e){const t=[];for(let i=0,r=e.length;i<r;i++){const s=e[i];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new hs(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Dc);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new ce(-1/0,-1/0,-1/0),new ce(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let i=0,r=t.length;i<r;i++){const s=t[i];vn.setFromBufferAttribute(s),this.morphTargetsRelative?(Gt.addVectors(this.boundingBox.min,vn.min),this.boundingBox.expandByPoint(Gt),Gt.addVectors(this.boundingBox.max,vn.max),this.boundingBox.expandByPoint(Gt)):(this.boundingBox.expandByPoint(vn.min),this.boundingBox.expandByPoint(vn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new z0);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new ce,1/0);return}if(e){const i=this.boundingSphere.center;if(vn.setFromBufferAttribute(e),t)for(let s=0,a=t.length;s<a;s++){const o=t[s];wo.setFromBufferAttribute(o),this.morphTargetsRelative?(Gt.addVectors(vn.min,wo.min),vn.expandByPoint(Gt),Gt.addVectors(vn.max,wo.max),vn.expandByPoint(Gt)):(vn.expandByPoint(wo.min),vn.expandByPoint(wo.max))}vn.getCenter(i);let r=0;for(let s=0,a=e.count;s<a;s++)Gt.fromBufferAttribute(e,s),r=Math.max(r,i.distanceToSquared(Gt));if(t)for(let s=0,a=t.length;s<a;s++){const o=t[s],l=this.morphTargetsRelative;for(let c=0,d=o.count;c<d;c++)Gt.fromBufferAttribute(o,c),l&&(ea.fromBufferAttribute(e,c),Gt.add(ea)),r=Math.max(r,i.distanceToSquared(Gt))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=e.array,r=t.position.array,s=t.normal.array,a=t.uv.array,o=r.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new mi(new Float32Array(4*o),4));const l=this.getAttribute("tangent").array,c=[],d=[];for(let C=0;C<o;C++)c[C]=new ce,d[C]=new ce;const u=new ce,f=new ce,h=new ce,m=new vt,x=new vt,p=new vt,v=new ce,g=new ce;function _(C,I,W){u.fromArray(r,C*3),f.fromArray(r,I*3),h.fromArray(r,W*3),m.fromArray(a,C*2),x.fromArray(a,I*2),p.fromArray(a,W*2),f.sub(u),h.sub(u),x.sub(m),p.sub(m);const H=1/(x.x*p.y-p.x*x.y);!isFinite(H)||(v.copy(f).multiplyScalar(p.y).addScaledVector(h,-x.y).multiplyScalar(H),g.copy(h).multiplyScalar(x.x).addScaledVector(f,-p.x).multiplyScalar(H),c[C].add(v),c[I].add(v),c[W].add(v),d[C].add(g),d[I].add(g),d[W].add(g))}let y=this.groups;y.length===0&&(y=[{start:0,count:i.length}]);for(let C=0,I=y.length;C<I;++C){const W=y[C],H=W.start,A=W.count;for(let q=H,N=H+A;q<N;q+=3)_(i[q+0],i[q+1],i[q+2])}const M=new ce,w=new ce,b=new ce,S=new ce;function E(C){b.fromArray(s,C*3),S.copy(b);const I=c[C];M.copy(I),M.sub(b.multiplyScalar(b.dot(I))).normalize(),w.crossVectors(S,I);const H=w.dot(d[C])<0?-1:1;l[C*4]=M.x,l[C*4+1]=M.y,l[C*4+2]=M.z,l[C*4+3]=H}for(let C=0,I=y.length;C<I;++C){const W=y[C],H=W.start,A=W.count;for(let q=H,N=H+A;q<N;q+=3)E(i[q+0]),E(i[q+1]),E(i[q+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new mi(new Float32Array(t.count*3),3),this.setAttribute("normal",i);else for(let f=0,h=i.count;f<h;f++)i.setXYZ(f,0,0,0);const r=new ce,s=new ce,a=new ce,o=new ce,l=new ce,c=new ce,d=new ce,u=new ce;if(e)for(let f=0,h=e.count;f<h;f+=3){const m=e.getX(f+0),x=e.getX(f+1),p=e.getX(f+2);r.fromBufferAttribute(t,m),s.fromBufferAttribute(t,x),a.fromBufferAttribute(t,p),d.subVectors(a,s),u.subVectors(r,s),d.cross(u),o.fromBufferAttribute(i,m),l.fromBufferAttribute(i,x),c.fromBufferAttribute(i,p),o.add(d),l.add(d),c.add(d),i.setXYZ(m,o.x,o.y,o.z),i.setXYZ(x,l.x,l.y,l.z),i.setXYZ(p,c.x,c.y,c.z)}else for(let f=0,h=t.count;f<h;f+=3)r.fromBufferAttribute(t,f+0),s.fromBufferAttribute(t,f+1),a.fromBufferAttribute(t,f+2),d.subVectors(a,s),u.subVectors(r,s),d.cross(u),i.setXYZ(f+0,d.x,d.y,d.z),i.setXYZ(f+1,d.x,d.y,d.z),i.setXYZ(f+2,d.x,d.y,d.z);this.normalizeNormals(),i.needsUpdate=!0}}merge(e,t){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}t===void 0&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const i=this.attributes;for(const r in i){if(e.attributes[r]===void 0)continue;const a=i[r].array,o=e.attributes[r],l=o.array,c=o.itemSize*t,d=Math.min(l.length,a.length-c);for(let u=0,f=c;u<d;u++,f++)a[f]=l[u]}return this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)Gt.fromBufferAttribute(e,t),Gt.normalize(),e.setXYZ(t,Gt.x,Gt.y,Gt.z)}toNonIndexed(){function e(o,l){const c=o.array,d=o.itemSize,u=o.normalized,f=new c.constructor(l.length*d);let h=0,m=0;for(let x=0,p=l.length;x<p;x++){o.isInterleavedBufferAttribute?h=l[x]*o.data.stride+o.offset:h=l[x]*d;for(let v=0;v<d;v++)f[m++]=c[h++]}return new mi(f,d,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new ks,i=this.index.array,r=this.attributes;for(const o in r){const l=r[o],c=e(l,i);t.setAttribute(o,c)}const s=this.morphAttributes;for(const o in s){const l=[],c=s[o];for(let d=0,u=c.length;d<u;d++){const f=c[d],h=e(f,i);l.push(h)}t.morphAttributes[o]=l}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let o=0,l=a.length;o<l;o++){const c=a[o];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const i=this.attributes;for(const l in i){const c=i[l];e.data.attributes[l]=c.toJSON(e.data)}const r={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],d=[];for(let u=0,f=c.length;u<f;u++){const h=c[u];d.push(h.toJSON(e.data))}d.length>0&&(r[l]=d,s=!0)}s&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return o!==null&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone(t));const r=e.attributes;for(const c in r){const d=r[c];this.setAttribute(c,d.clone(t))}const s=e.morphAttributes;for(const c in s){const d=[],u=s[c];for(let f=0,h=u.length;f<h;f++)d.push(u[f].clone(t));this.morphAttributes[c]=d}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let c=0,d=a.length;c<d;c++){const u=a[c];this.addGroup(u.start,u.count,u.materialIndex)}const o=e.boundingBox;o!==null&&(this.boundingBox=o.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,e.parameters!==void 0&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const Mm=new jt,ta=new Cb,ef=new z0,sr=new ce,ar=new ce,or=new ce,tf=new ce,nf=new ce,rf=new ce,ol=new ce,cl=new ce,ll=new ce,dl=new vt,ul=new vt,fl=new vt,sf=new ce,hl=new ce;class Hi extends Fn{constructor(e=new ks,t=new A1){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const r=t[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=r.length;s<a;s++){const o=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}raycast(e,t){const i=this.geometry,r=this.material,s=this.matrixWorld;if(r===void 0||(i.boundingSphere===null&&i.computeBoundingSphere(),ef.copy(i.boundingSphere),ef.applyMatrix4(s),e.ray.intersectsSphere(ef)===!1)||(Mm.copy(s).invert(),ta.copy(e.ray).applyMatrix4(Mm),i.boundingBox!==null&&ta.intersectsBox(i.boundingBox)===!1))return;let a;const o=i.index,l=i.attributes.position,c=i.morphAttributes.position,d=i.morphTargetsRelative,u=i.attributes.uv,f=i.attributes.uv2,h=i.groups,m=i.drawRange;if(o!==null)if(Array.isArray(r))for(let x=0,p=h.length;x<p;x++){const v=h[x],g=r[v.materialIndex],_=Math.max(v.start,m.start),y=Math.min(o.count,Math.min(v.start+v.count,m.start+m.count));for(let M=_,w=y;M<w;M+=3){const b=o.getX(M),S=o.getX(M+1),E=o.getX(M+2);a=pl(this,g,e,ta,l,c,d,u,f,b,S,E),a&&(a.faceIndex=Math.floor(M/3),a.face.materialIndex=v.materialIndex,t.push(a))}}else{const x=Math.max(0,m.start),p=Math.min(o.count,m.start+m.count);for(let v=x,g=p;v<g;v+=3){const _=o.getX(v),y=o.getX(v+1),M=o.getX(v+2);a=pl(this,r,e,ta,l,c,d,u,f,_,y,M),a&&(a.faceIndex=Math.floor(v/3),t.push(a))}}else if(l!==void 0)if(Array.isArray(r))for(let x=0,p=h.length;x<p;x++){const v=h[x],g=r[v.materialIndex],_=Math.max(v.start,m.start),y=Math.min(l.count,Math.min(v.start+v.count,m.start+m.count));for(let M=_,w=y;M<w;M+=3){const b=M,S=M+1,E=M+2;a=pl(this,g,e,ta,l,c,d,u,f,b,S,E),a&&(a.faceIndex=Math.floor(M/3),a.face.materialIndex=v.materialIndex,t.push(a))}}else{const x=Math.max(0,m.start),p=Math.min(l.count,m.start+m.count);for(let v=x,g=p;v<g;v+=3){const _=v,y=v+1,M=v+2;a=pl(this,r,e,ta,l,c,d,u,f,_,y,M),a&&(a.faceIndex=Math.floor(v/3),t.push(a))}}}}function Nb(n,e,t,i,r,s,a,o){let l;if(e.side===Qn?l=i.intersectTriangle(a,s,r,!0,o):l=i.intersectTriangle(r,s,a,e.side!==qa,o),l===null)return null;hl.copy(o),hl.applyMatrix4(n.matrixWorld);const c=t.ray.origin.distanceTo(hl);return c<t.near||c>t.far?null:{distance:c,point:hl.clone(),object:n}}function pl(n,e,t,i,r,s,a,o,l,c,d,u){sr.fromBufferAttribute(r,c),ar.fromBufferAttribute(r,d),or.fromBufferAttribute(r,u);const f=n.morphTargetInfluences;if(s&&f){ol.set(0,0,0),cl.set(0,0,0),ll.set(0,0,0);for(let m=0,x=s.length;m<x;m++){const p=f[m],v=s[m];p!==0&&(tf.fromBufferAttribute(v,c),nf.fromBufferAttribute(v,d),rf.fromBufferAttribute(v,u),a?(ol.addScaledVector(tf,p),cl.addScaledVector(nf,p),ll.addScaledVector(rf,p)):(ol.addScaledVector(tf.sub(sr),p),cl.addScaledVector(nf.sub(ar),p),ll.addScaledVector(rf.sub(or),p)))}sr.add(ol),ar.add(cl),or.add(ll)}n.isSkinnedMesh&&(n.boneTransform(c,sr),n.boneTransform(d,ar),n.boneTransform(u,or));const h=Nb(n,e,t,i,sr,ar,or,sf);if(h){o&&(dl.fromBufferAttribute(o,c),ul.fromBufferAttribute(o,d),fl.fromBufferAttribute(o,u),h.uv=Gi.getUV(sf,sr,ar,or,dl,ul,fl,new vt)),l&&(dl.fromBufferAttribute(l,c),ul.fromBufferAttribute(l,d),fl.fromBufferAttribute(l,u),h.uv2=Gi.getUV(sf,sr,ar,or,dl,ul,fl,new vt));const m={a:c,b:d,c:u,normal:new ce,materialIndex:0};Gi.getNormal(sr,ar,or,m.normal),h.face=m}return h}class ro extends ks{constructor(e=1,t=1,i=1,r=1,s=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:r,heightSegments:s,depthSegments:a};const o=this;r=Math.floor(r),s=Math.floor(s),a=Math.floor(a);const l=[],c=[],d=[],u=[];let f=0,h=0;m("z","y","x",-1,-1,i,t,e,a,s,0),m("z","y","x",1,-1,i,t,-e,a,s,1),m("x","z","y",1,1,e,i,t,r,a,2),m("x","z","y",1,-1,e,i,-t,r,a,3),m("x","y","z",1,-1,e,t,i,r,s,4),m("x","y","z",-1,-1,e,t,-i,r,s,5),this.setIndex(l),this.setAttribute("position",new hs(c,3)),this.setAttribute("normal",new hs(d,3)),this.setAttribute("uv",new hs(u,2));function m(x,p,v,g,_,y,M,w,b,S,E){const C=y/b,I=M/S,W=y/2,H=M/2,A=w/2,q=b+1,N=S+1;let X=0,Z=0;const $=new ce;for(let J=0;J<N;J++){const R=J*I-H;for(let k=0;k<q;k++){const j=k*C-W;$[x]=j*g,$[p]=R*_,$[v]=A,c.push($.x,$.y,$.z),$[x]=0,$[p]=0,$[v]=w>0?1:-1,d.push($.x,$.y,$.z),u.push(k/b),u.push(1-J/S),X+=1}}for(let J=0;J<S;J++)for(let R=0;R<b;R++){const k=f+R+q*J,j=f+R+q*(J+1),K=f+(R+1)+q*(J+1),B=f+(R+1)+q*J;l.push(k,j,B),l.push(j,K,B),Z+=6}o.addGroup(h,Z,E),h+=Z,f+=X}}static fromJSON(e){return new ro(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Ga(n){const e={};for(const t in n){e[t]={};for(const i in n[t]){const r=n[t][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?e[t][i]=r.clone():Array.isArray(r)?e[t][i]=r.slice():e[t][i]=r}}return e}function Zt(n){const e={};for(let t=0;t<n.length;t++){const i=Ga(n[t]);for(const r in i)e[r]=i[r]}return e}function Bb(n){const e=[];for(let t=0;t<n.length;t++)e.push(n[t].clone());return e}const Ub={clone:Ga,merge:Zt};var Gb=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,kb=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class bs extends zc{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=Gb,this.fragmentShader=kb,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&(e.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Ga(e.uniforms),this.uniformsGroups=Bb(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const r in this.uniforms){const a=this.uniforms[r].value;a&&a.isTexture?t.uniforms[r]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?t.uniforms[r]={type:"c",value:a.getHex()}:a&&a.isVector2?t.uniforms[r]={type:"v2",value:a.toArray()}:a&&a.isVector3?t.uniforms[r]={type:"v3",value:a.toArray()}:a&&a.isVector4?t.uniforms[r]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?t.uniforms[r]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?t.uniforms[r]={type:"m4",value:a.toArray()}:t.uniforms[r]={value:a}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const i={};for(const r in this.extensions)this.extensions[r]===!0&&(i[r]=!0);return Object.keys(i).length>0&&(t.extensions=i),t}}class R1 extends Fn{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new jt,this.projectionMatrix=new jt,this.projectionMatrixInverse=new jt}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class Dn extends R1{constructor(e=50,t=1,i=.1,r=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=um*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(qu*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return um*2*Math.atan(Math.tan(qu*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,i,r,s,a){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=r,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(qu*.5*this.fov)/this.zoom,i=2*t,r=this.aspect*i,s=-.5*r;const a=this.view;if(this.view!==null&&this.view.enabled){const l=a.fullWidth,c=a.fullHeight;s+=a.offsetX*r/l,t-=a.offsetY*i/c,r*=a.width/l,i*=a.height/c}const o=this.filmOffset;o!==0&&(s+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+r,t,t-i,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const na=90,ia=1;class Hb extends Fn{constructor(e,t,i){if(super(),this.type="CubeCamera",i.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=i;const r=new Dn(na,ia,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new ce(1,0,0)),this.add(r);const s=new Dn(na,ia,e,t);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new ce(-1,0,0)),this.add(s);const a=new Dn(na,ia,e,t);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(new ce(0,1,0)),this.add(a);const o=new Dn(na,ia,e,t);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(new ce(0,-1,0)),this.add(o);const l=new Dn(na,ia,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new ce(0,0,1)),this.add(l);const c=new Dn(na,ia,e,t);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new ce(0,0,-1)),this.add(c)}update(e,t){this.parent===null&&this.updateMatrixWorld();const i=this.renderTarget,[r,s,a,o,l,c]=this.children,d=e.getRenderTarget(),u=e.toneMapping,f=e.xr.enabled;e.toneMapping=$i,e.xr.enabled=!1;const h=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0),e.render(t,r),e.setRenderTarget(i,1),e.render(t,s),e.setRenderTarget(i,2),e.render(t,a),e.setRenderTarget(i,3),e.render(t,o),e.setRenderTarget(i,4),e.render(t,l),i.texture.generateMipmaps=h,e.setRenderTarget(i,5),e.render(t,c),e.setRenderTarget(d),e.toneMapping=u,e.xr.enabled=f,i.texture.needsPMREMUpdate=!0}}class P1 extends ei{constructor(e,t,i,r,s,a,o,l,c,d){e=e!==void 0?e:[],t=t!==void 0?t:Na,super(e,t,i,r,s,a,o,l,c,d),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class Vb extends ys{constructor(e,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const i={width:e,height:e,depth:1},r=[i,i,i,i,i,i];this.texture=new P1(r,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:In}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new ro(5,5,5),s=new bs({name:"CubemapFromEquirect",uniforms:Ga(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:Qn,blending:br});s.uniforms.tEquirect.value=t;const a=new Hi(r,s),o=t.minFilter;return t.minFilter===mu&&(t.minFilter=In),new Hb(1,10,this).update(e,a),t.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,i,r){const s=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,i,r);e.setRenderTarget(s)}}const af=new ce,Wb=new ce,$b=new On;class Qr{constructor(e=new ce(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,r){return this.normal.set(e,t,i),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){const r=af.subVectors(i,t).cross(Wb.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const i=e.delta(af),r=this.normal.dot(i);if(r===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/r;return s<0||s>1?null:t.copy(i).multiplyScalar(s).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const i=t||$b.getNormalMatrix(e),r=this.coplanarPoint(af).applyMatrix4(e),s=this.normal.applyMatrix3(i).normalize();return this.constant=-r.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const ra=new z0,ml=new ce;class I1{constructor(e=new Qr,t=new Qr,i=new Qr,r=new Qr,s=new Qr,a=new Qr){this.planes=[e,t,i,r,s,a]}set(e,t,i,r,s,a){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(i),o[3].copy(r),o[4].copy(s),o[5].copy(a),this}copy(e){const t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e){const t=this.planes,i=e.elements,r=i[0],s=i[1],a=i[2],o=i[3],l=i[4],c=i[5],d=i[6],u=i[7],f=i[8],h=i[9],m=i[10],x=i[11],p=i[12],v=i[13],g=i[14],_=i[15];return t[0].setComponents(o-r,u-l,x-f,_-p).normalize(),t[1].setComponents(o+r,u+l,x+f,_+p).normalize(),t[2].setComponents(o+s,u+c,x+h,_+v).normalize(),t[3].setComponents(o-s,u-c,x-h,_-v).normalize(),t[4].setComponents(o-a,u-d,x-m,_-g).normalize(),t[5].setComponents(o+a,u+d,x+m,_+g).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),ra.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(ra)}intersectsSprite(e){return ra.center.set(0,0,0),ra.radius=.7071067811865476,ra.applyMatrix4(e.matrixWorld),this.intersectsSphere(ra)}intersectsSphere(e){const t=this.planes,i=e.center,r=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(i)<r)return!1;return!0}intersectsBox(e){const t=this.planes;for(let i=0;i<6;i++){const r=t[i];if(ml.x=r.normal.x>0?e.max.x:e.min.x,ml.y=r.normal.y>0?e.max.y:e.min.y,ml.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(ml)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function D1(){let n=null,e=!1,t=null,i=null;function r(s,a){t(s,a),i=n.requestAnimationFrame(r)}return{start:function(){e!==!0&&t!==null&&(i=n.requestAnimationFrame(r),e=!0)},stop:function(){n.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){n=s}}}function jb(n,e){const t=e.isWebGL2,i=new WeakMap;function r(c,d){const u=c.array,f=c.usage,h=n.createBuffer();n.bindBuffer(d,h),n.bufferData(d,u,f),c.onUploadCallback();let m;if(u instanceof Float32Array)m=5126;else if(u instanceof Uint16Array)if(c.isFloat16BufferAttribute)if(t)m=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else m=5123;else if(u instanceof Int16Array)m=5122;else if(u instanceof Uint32Array)m=5125;else if(u instanceof Int32Array)m=5124;else if(u instanceof Int8Array)m=5120;else if(u instanceof Uint8Array)m=5121;else if(u instanceof Uint8ClampedArray)m=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+u);return{buffer:h,type:m,bytesPerElement:u.BYTES_PER_ELEMENT,version:c.version}}function s(c,d,u){const f=d.array,h=d.updateRange;n.bindBuffer(u,c),h.count===-1?n.bufferSubData(u,0,f):(t?n.bufferSubData(u,h.offset*f.BYTES_PER_ELEMENT,f,h.offset,h.count):n.bufferSubData(u,h.offset*f.BYTES_PER_ELEMENT,f.subarray(h.offset,h.offset+h.count)),h.count=-1)}function a(c){return c.isInterleavedBufferAttribute&&(c=c.data),i.get(c)}function o(c){c.isInterleavedBufferAttribute&&(c=c.data);const d=i.get(c);d&&(n.deleteBuffer(d.buffer),i.delete(c))}function l(c,d){if(c.isGLBufferAttribute){const f=i.get(c);(!f||f.version<c.version)&&i.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const u=i.get(c);u===void 0?i.set(c,r(c,d)):u.version<c.version&&(s(u.buffer,c,d),u.version=c.version)}return{get:a,remove:o,update:l}}class F0 extends ks{constructor(e=1,t=1,i=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:r};const s=e/2,a=t/2,o=Math.floor(i),l=Math.floor(r),c=o+1,d=l+1,u=e/o,f=t/l,h=[],m=[],x=[],p=[];for(let v=0;v<d;v++){const g=v*f-a;for(let _=0;_<c;_++){const y=_*u-s;m.push(y,-g,0),x.push(0,0,1),p.push(_/o),p.push(1-v/l)}}for(let v=0;v<l;v++)for(let g=0;g<o;g++){const _=g+c*v,y=g+c*(v+1),M=g+1+c*(v+1),w=g+1+c*v;h.push(_,y,w),h.push(y,M,w)}this.setIndex(h),this.setAttribute("position",new hs(m,3)),this.setAttribute("normal",new hs(x,3)),this.setAttribute("uv",new hs(p,2))}static fromJSON(e){return new F0(e.width,e.height,e.widthSegments,e.heightSegments)}}var Xb=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,Yb=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Zb=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,Jb=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,Kb=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,Qb=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,e9="vec3 transformed = vec3( position );",t9=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,n9=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
#ifdef USE_IRIDESCENCE
	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,i9=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,r9=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,s9=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,a9=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,o9=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,c9=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,l9=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,d9=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,u9=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,f9=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,h9=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,p9=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,m9=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,x9=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,g9=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,v9=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,y9=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,b9="gl_FragColor = linearToOutputTexel( gl_FragColor );",_9=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,w9=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,M9=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,S9=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,E9=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,T9=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,A9=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,L9=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,C9=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,R9=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,P9=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,I9=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,D9=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,O9=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointLightInfo( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotLightInfo( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );
		#endif
	}
	#pragma unroll_loop_end
#endif`,z9=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,F9=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,q9=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,N9=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,B9=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,U9=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,G9=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,k9=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	#ifdef USE_IRIDESCENCE
		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );
	#else
		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,H9=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,V9=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,W9=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,$9=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,j9=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,X9=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,Y9=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,Z9=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,J9=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,K9=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Q9=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,e_=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,t_=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,n_=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,i_=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,r_=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,s_=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,a_=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,o_=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,c_=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,l_=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,d_=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,u_=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,f_=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,h_=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,p_=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,m_=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,x_=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,g_=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,v_=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,y_=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,b_=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,__=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,w_=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,M_=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,S_=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,E_=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,T_=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,A_=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,L_=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,C_=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,R_=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,P_=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,I_=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,D_=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,O_=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,z_=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,F_=`#ifdef USE_TRANSMISSION
	float transmissionAlpha = 1.0;
	float transmissionFactor = transmission;
	float thicknessFactor = thickness;
	#ifdef USE_TRANSMISSIONMAP
		transmissionFactor *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		thicknessFactor *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,
		attenuationColor, attenuationDistance );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );
	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );
#endif`,q_=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( attenuationDistance == 0.0 ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,N_=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,B_=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,U_=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,G_=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,k_=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,H_=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,V_=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const W_=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,$_=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	gl_FragColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );
	#endif
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,j_=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,X_=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Y_=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,Z_=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,J_=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,K_=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,Q_=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,e5=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,t5=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,n5=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,i5=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,r5=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,s5=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,a5=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,o5=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,c5=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,l5=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,d5=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,u5=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,f5=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,h5=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,p5=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,m5=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,x5=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,g5=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,v5=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,y5=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,b5=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,_5=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,w5=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,lt={alphamap_fragment:Xb,alphamap_pars_fragment:Yb,alphatest_fragment:Zb,alphatest_pars_fragment:Jb,aomap_fragment:Kb,aomap_pars_fragment:Qb,begin_vertex:e9,beginnormal_vertex:t9,bsdfs:n9,iridescence_fragment:i9,bumpmap_pars_fragment:r9,clipping_planes_fragment:s9,clipping_planes_pars_fragment:a9,clipping_planes_pars_vertex:o9,clipping_planes_vertex:c9,color_fragment:l9,color_pars_fragment:d9,color_pars_vertex:u9,color_vertex:f9,common:h9,cube_uv_reflection_fragment:p9,defaultnormal_vertex:m9,displacementmap_pars_vertex:x9,displacementmap_vertex:g9,emissivemap_fragment:v9,emissivemap_pars_fragment:y9,encodings_fragment:b9,encodings_pars_fragment:_9,envmap_fragment:w9,envmap_common_pars_fragment:M9,envmap_pars_fragment:S9,envmap_pars_vertex:E9,envmap_physical_pars_fragment:F9,envmap_vertex:T9,fog_vertex:A9,fog_pars_vertex:L9,fog_fragment:C9,fog_pars_fragment:R9,gradientmap_pars_fragment:P9,lightmap_fragment:I9,lightmap_pars_fragment:D9,lights_lambert_vertex:O9,lights_pars_begin:z9,lights_toon_fragment:q9,lights_toon_pars_fragment:N9,lights_phong_fragment:B9,lights_phong_pars_fragment:U9,lights_physical_fragment:G9,lights_physical_pars_fragment:k9,lights_fragment_begin:H9,lights_fragment_maps:V9,lights_fragment_end:W9,logdepthbuf_fragment:$9,logdepthbuf_pars_fragment:j9,logdepthbuf_pars_vertex:X9,logdepthbuf_vertex:Y9,map_fragment:Z9,map_pars_fragment:J9,map_particle_fragment:K9,map_particle_pars_fragment:Q9,metalnessmap_fragment:e_,metalnessmap_pars_fragment:t_,morphcolor_vertex:n_,morphnormal_vertex:i_,morphtarget_pars_vertex:r_,morphtarget_vertex:s_,normal_fragment_begin:a_,normal_fragment_maps:o_,normal_pars_fragment:c_,normal_pars_vertex:l_,normal_vertex:d_,normalmap_pars_fragment:u_,clearcoat_normal_fragment_begin:f_,clearcoat_normal_fragment_maps:h_,clearcoat_pars_fragment:p_,iridescence_pars_fragment:m_,output_fragment:x_,packing:g_,premultiplied_alpha_fragment:v_,project_vertex:y_,dithering_fragment:b_,dithering_pars_fragment:__,roughnessmap_fragment:w_,roughnessmap_pars_fragment:M_,shadowmap_pars_fragment:S_,shadowmap_pars_vertex:E_,shadowmap_vertex:T_,shadowmask_pars_fragment:A_,skinbase_vertex:L_,skinning_pars_vertex:C_,skinning_vertex:R_,skinnormal_vertex:P_,specularmap_fragment:I_,specularmap_pars_fragment:D_,tonemapping_fragment:O_,tonemapping_pars_fragment:z_,transmission_fragment:F_,transmission_pars_fragment:q_,uv_pars_fragment:N_,uv_pars_vertex:B_,uv_vertex:U_,uv2_pars_fragment:G_,uv2_pars_vertex:k_,uv2_vertex:H_,worldpos_vertex:V_,background_vert:W_,background_frag:$_,cube_vert:j_,cube_frag:X_,depth_vert:Y_,depth_frag:Z_,distanceRGBA_vert:J_,distanceRGBA_frag:K_,equirect_vert:Q_,equirect_frag:e5,linedashed_vert:t5,linedashed_frag:n5,meshbasic_vert:i5,meshbasic_frag:r5,meshlambert_vert:s5,meshlambert_frag:a5,meshmatcap_vert:o5,meshmatcap_frag:c5,meshnormal_vert:l5,meshnormal_frag:d5,meshphong_vert:u5,meshphong_frag:f5,meshphysical_vert:h5,meshphysical_frag:p5,meshtoon_vert:m5,meshtoon_frag:x5,points_vert:g5,points_frag:v5,shadow_vert:y5,shadow_frag:b5,sprite_vert:_5,sprite_frag:w5},Ue={common:{diffuse:{value:new mt(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new On},uv2Transform:{value:new On},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new vt(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new mt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new mt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new On}},sprite:{diffuse:{value:new mt(16777215)},opacity:{value:1},center:{value:new vt(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new On}}},ui={basic:{uniforms:Zt([Ue.common,Ue.specularmap,Ue.envmap,Ue.aomap,Ue.lightmap,Ue.fog]),vertexShader:lt.meshbasic_vert,fragmentShader:lt.meshbasic_frag},lambert:{uniforms:Zt([Ue.common,Ue.specularmap,Ue.envmap,Ue.aomap,Ue.lightmap,Ue.emissivemap,Ue.fog,Ue.lights,{emissive:{value:new mt(0)}}]),vertexShader:lt.meshlambert_vert,fragmentShader:lt.meshlambert_frag},phong:{uniforms:Zt([Ue.common,Ue.specularmap,Ue.envmap,Ue.aomap,Ue.lightmap,Ue.emissivemap,Ue.bumpmap,Ue.normalmap,Ue.displacementmap,Ue.fog,Ue.lights,{emissive:{value:new mt(0)},specular:{value:new mt(1118481)},shininess:{value:30}}]),vertexShader:lt.meshphong_vert,fragmentShader:lt.meshphong_frag},standard:{uniforms:Zt([Ue.common,Ue.envmap,Ue.aomap,Ue.lightmap,Ue.emissivemap,Ue.bumpmap,Ue.normalmap,Ue.displacementmap,Ue.roughnessmap,Ue.metalnessmap,Ue.fog,Ue.lights,{emissive:{value:new mt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:lt.meshphysical_vert,fragmentShader:lt.meshphysical_frag},toon:{uniforms:Zt([Ue.common,Ue.aomap,Ue.lightmap,Ue.emissivemap,Ue.bumpmap,Ue.normalmap,Ue.displacementmap,Ue.gradientmap,Ue.fog,Ue.lights,{emissive:{value:new mt(0)}}]),vertexShader:lt.meshtoon_vert,fragmentShader:lt.meshtoon_frag},matcap:{uniforms:Zt([Ue.common,Ue.bumpmap,Ue.normalmap,Ue.displacementmap,Ue.fog,{matcap:{value:null}}]),vertexShader:lt.meshmatcap_vert,fragmentShader:lt.meshmatcap_frag},points:{uniforms:Zt([Ue.points,Ue.fog]),vertexShader:lt.points_vert,fragmentShader:lt.points_frag},dashed:{uniforms:Zt([Ue.common,Ue.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:lt.linedashed_vert,fragmentShader:lt.linedashed_frag},depth:{uniforms:Zt([Ue.common,Ue.displacementmap]),vertexShader:lt.depth_vert,fragmentShader:lt.depth_frag},normal:{uniforms:Zt([Ue.common,Ue.bumpmap,Ue.normalmap,Ue.displacementmap,{opacity:{value:1}}]),vertexShader:lt.meshnormal_vert,fragmentShader:lt.meshnormal_frag},sprite:{uniforms:Zt([Ue.sprite,Ue.fog]),vertexShader:lt.sprite_vert,fragmentShader:lt.sprite_frag},background:{uniforms:{uvTransform:{value:new On},t2D:{value:null}},vertexShader:lt.background_vert,fragmentShader:lt.background_frag},cube:{uniforms:Zt([Ue.envmap,{opacity:{value:1}}]),vertexShader:lt.cube_vert,fragmentShader:lt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:lt.equirect_vert,fragmentShader:lt.equirect_frag},distanceRGBA:{uniforms:Zt([Ue.common,Ue.displacementmap,{referencePosition:{value:new ce},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:lt.distanceRGBA_vert,fragmentShader:lt.distanceRGBA_frag},shadow:{uniforms:Zt([Ue.lights,Ue.fog,{color:{value:new mt(0)},opacity:{value:1}}]),vertexShader:lt.shadow_vert,fragmentShader:lt.shadow_frag}};ui.physical={uniforms:Zt([ui.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new vt(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new mt(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new vt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new mt(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new mt(1,1,1)},specularColorMap:{value:null}}]),vertexShader:lt.meshphysical_vert,fragmentShader:lt.meshphysical_frag};function M5(n,e,t,i,r,s){const a=new mt(0);let o=r===!0?0:1,l,c,d=null,u=0,f=null;function h(x,p){let v=!1,g=p.isScene===!0?p.background:null;g&&g.isTexture&&(g=e.get(g));const _=n.xr,y=_.getSession&&_.getSession();y&&y.environmentBlendMode==="additive"&&(g=null),g===null?m(a,o):g&&g.isColor&&(m(g,1),v=!0),(n.autoClear||v)&&n.clear(n.autoClearColor,n.autoClearDepth,n.autoClearStencil),g&&(g.isCubeTexture||g.mapping===pu)?(c===void 0&&(c=new Hi(new ro(1,1,1),new bs({name:"BackgroundCubeMaterial",uniforms:Ga(ui.cube.uniforms),vertexShader:ui.cube.vertexShader,fragmentShader:ui.cube.fragmentShader,side:Qn,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(M,w,b){this.matrixWorld.copyPosition(b.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(c)),c.material.uniforms.envMap.value=g,c.material.uniforms.flipEnvMap.value=g.isCubeTexture&&g.isRenderTargetTexture===!1?-1:1,(d!==g||u!==g.version||f!==n.toneMapping)&&(c.material.needsUpdate=!0,d=g,u=g.version,f=n.toneMapping),c.layers.enableAll(),x.unshift(c,c.geometry,c.material,0,0,null)):g&&g.isTexture&&(l===void 0&&(l=new Hi(new F0(2,2),new bs({name:"BackgroundMaterial",uniforms:Ga(ui.background.uniforms),vertexShader:ui.background.vertexShader,fragmentShader:ui.background.fragmentShader,side:Yo,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(l)),l.material.uniforms.t2D.value=g,g.matrixAutoUpdate===!0&&g.updateMatrix(),l.material.uniforms.uvTransform.value.copy(g.matrix),(d!==g||u!==g.version||f!==n.toneMapping)&&(l.material.needsUpdate=!0,d=g,u=g.version,f=n.toneMapping),l.layers.enableAll(),x.unshift(l,l.geometry,l.material,0,0,null))}function m(x,p){t.buffers.color.setClear(x.r,x.g,x.b,p,s)}return{getClearColor:function(){return a},setClearColor:function(x,p=1){a.set(x),o=p,m(a,o)},getClearAlpha:function(){return o},setClearAlpha:function(x){o=x,m(a,o)},render:h}}function S5(n,e,t,i){const r=n.getParameter(34921),s=i.isWebGL2?null:e.get("OES_vertex_array_object"),a=i.isWebGL2||s!==null,o={},l=p(null);let c=l,d=!1;function u(A,q,N,X,Z){let $=!1;if(a){const J=x(X,N,q);c!==J&&(c=J,h(c.object)),$=v(A,X,N,Z),$&&g(A,X,N,Z)}else{const J=q.wireframe===!0;(c.geometry!==X.id||c.program!==N.id||c.wireframe!==J)&&(c.geometry=X.id,c.program=N.id,c.wireframe=J,$=!0)}Z!==null&&t.update(Z,34963),($||d)&&(d=!1,S(A,q,N,X),Z!==null&&n.bindBuffer(34963,t.get(Z).buffer))}function f(){return i.isWebGL2?n.createVertexArray():s.createVertexArrayOES()}function h(A){return i.isWebGL2?n.bindVertexArray(A):s.bindVertexArrayOES(A)}function m(A){return i.isWebGL2?n.deleteVertexArray(A):s.deleteVertexArrayOES(A)}function x(A,q,N){const X=N.wireframe===!0;let Z=o[A.id];Z===void 0&&(Z={},o[A.id]=Z);let $=Z[q.id];$===void 0&&($={},Z[q.id]=$);let J=$[X];return J===void 0&&(J=p(f()),$[X]=J),J}function p(A){const q=[],N=[],X=[];for(let Z=0;Z<r;Z++)q[Z]=0,N[Z]=0,X[Z]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:q,enabledAttributes:N,attributeDivisors:X,object:A,attributes:{},index:null}}function v(A,q,N,X){const Z=c.attributes,$=q.attributes;let J=0;const R=N.getAttributes();for(const k in R)if(R[k].location>=0){const K=Z[k];let B=$[k];if(B===void 0&&(k==="instanceMatrix"&&A.instanceMatrix&&(B=A.instanceMatrix),k==="instanceColor"&&A.instanceColor&&(B=A.instanceColor)),K===void 0||K.attribute!==B||B&&K.data!==B.data)return!0;J++}return c.attributesNum!==J||c.index!==X}function g(A,q,N,X){const Z={},$=q.attributes;let J=0;const R=N.getAttributes();for(const k in R)if(R[k].location>=0){let K=$[k];K===void 0&&(k==="instanceMatrix"&&A.instanceMatrix&&(K=A.instanceMatrix),k==="instanceColor"&&A.instanceColor&&(K=A.instanceColor));const B={};B.attribute=K,K&&K.data&&(B.data=K.data),Z[k]=B,J++}c.attributes=Z,c.attributesNum=J,c.index=X}function _(){const A=c.newAttributes;for(let q=0,N=A.length;q<N;q++)A[q]=0}function y(A){M(A,0)}function M(A,q){const N=c.newAttributes,X=c.enabledAttributes,Z=c.attributeDivisors;N[A]=1,X[A]===0&&(n.enableVertexAttribArray(A),X[A]=1),Z[A]!==q&&((i.isWebGL2?n:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](A,q),Z[A]=q)}function w(){const A=c.newAttributes,q=c.enabledAttributes;for(let N=0,X=q.length;N<X;N++)q[N]!==A[N]&&(n.disableVertexAttribArray(N),q[N]=0)}function b(A,q,N,X,Z,$){i.isWebGL2===!0&&(N===5124||N===5125)?n.vertexAttribIPointer(A,q,N,Z,$):n.vertexAttribPointer(A,q,N,X,Z,$)}function S(A,q,N,X){if(i.isWebGL2===!1&&(A.isInstancedMesh||X.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;_();const Z=X.attributes,$=N.getAttributes(),J=q.defaultAttributeValues;for(const R in $){const k=$[R];if(k.location>=0){let j=Z[R];if(j===void 0&&(R==="instanceMatrix"&&A.instanceMatrix&&(j=A.instanceMatrix),R==="instanceColor"&&A.instanceColor&&(j=A.instanceColor)),j!==void 0){const K=j.normalized,B=j.itemSize,oe=t.get(j);if(oe===void 0)continue;const Re=oe.buffer,Ae=oe.type,pe=oe.bytesPerElement;if(j.isInterleavedBufferAttribute){const _e=j.data,Ie=_e.stride,me=j.offset;if(_e.isInstancedInterleavedBuffer){for(let xe=0;xe<k.locationSize;xe++)M(k.location+xe,_e.meshPerAttribute);A.isInstancedMesh!==!0&&X._maxInstanceCount===void 0&&(X._maxInstanceCount=_e.meshPerAttribute*_e.count)}else for(let xe=0;xe<k.locationSize;xe++)y(k.location+xe);n.bindBuffer(34962,Re);for(let xe=0;xe<k.locationSize;xe++)b(k.location+xe,B/k.locationSize,Ae,K,Ie*pe,(me+B/k.locationSize*xe)*pe)}else{if(j.isInstancedBufferAttribute){for(let _e=0;_e<k.locationSize;_e++)M(k.location+_e,j.meshPerAttribute);A.isInstancedMesh!==!0&&X._maxInstanceCount===void 0&&(X._maxInstanceCount=j.meshPerAttribute*j.count)}else for(let _e=0;_e<k.locationSize;_e++)y(k.location+_e);n.bindBuffer(34962,Re);for(let _e=0;_e<k.locationSize;_e++)b(k.location+_e,B/k.locationSize,Ae,K,B*pe,B/k.locationSize*_e*pe)}}else if(J!==void 0){const K=J[R];if(K!==void 0)switch(K.length){case 2:n.vertexAttrib2fv(k.location,K);break;case 3:n.vertexAttrib3fv(k.location,K);break;case 4:n.vertexAttrib4fv(k.location,K);break;default:n.vertexAttrib1fv(k.location,K)}}}}w()}function E(){W();for(const A in o){const q=o[A];for(const N in q){const X=q[N];for(const Z in X)m(X[Z].object),delete X[Z];delete q[N]}delete o[A]}}function C(A){if(o[A.id]===void 0)return;const q=o[A.id];for(const N in q){const X=q[N];for(const Z in X)m(X[Z].object),delete X[Z];delete q[N]}delete o[A.id]}function I(A){for(const q in o){const N=o[q];if(N[A.id]===void 0)continue;const X=N[A.id];for(const Z in X)m(X[Z].object),delete X[Z];delete N[A.id]}}function W(){H(),d=!0,c!==l&&(c=l,h(c.object))}function H(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:u,reset:W,resetDefaultState:H,dispose:E,releaseStatesOfGeometry:C,releaseStatesOfProgram:I,initAttributes:_,enableAttribute:y,disableUnusedAttributes:w}}function E5(n,e,t,i){const r=i.isWebGL2;let s;function a(c){s=c}function o(c,d){n.drawArrays(s,c,d),t.update(d,s,1)}function l(c,d,u){if(u===0)return;let f,h;if(r)f=n,h="drawArraysInstanced";else if(f=e.get("ANGLE_instanced_arrays"),h="drawArraysInstancedANGLE",f===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[h](s,c,d,u),t.update(d,s,u)}this.setMode=a,this.render=o,this.renderInstances=l}function T5(n,e,t){let i;function r(){if(i!==void 0)return i;if(e.has("EXT_texture_filter_anisotropic")===!0){const b=e.get("EXT_texture_filter_anisotropic");i=n.getParameter(b.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function s(b){if(b==="highp"){if(n.getShaderPrecisionFormat(35633,36338).precision>0&&n.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";b="mediump"}return b==="mediump"&&n.getShaderPrecisionFormat(35633,36337).precision>0&&n.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const a=typeof WebGL2RenderingContext<"u"&&n instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext<"u"&&n instanceof WebGL2ComputeRenderingContext;let o=t.precision!==void 0?t.precision:"highp";const l=s(o);l!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",l,"instead."),o=l);const c=a||e.has("WEBGL_draw_buffers"),d=t.logarithmicDepthBuffer===!0,u=n.getParameter(34930),f=n.getParameter(35660),h=n.getParameter(3379),m=n.getParameter(34076),x=n.getParameter(34921),p=n.getParameter(36347),v=n.getParameter(36348),g=n.getParameter(36349),_=f>0,y=a||e.has("OES_texture_float"),M=_&&y,w=a?n.getParameter(36183):0;return{isWebGL2:a,drawBuffers:c,getMaxAnisotropy:r,getMaxPrecision:s,precision:o,logarithmicDepthBuffer:d,maxTextures:u,maxVertexTextures:f,maxTextureSize:h,maxCubemapSize:m,maxAttributes:x,maxVertexUniforms:p,maxVaryings:v,maxFragmentUniforms:g,vertexTextures:_,floatFragmentTextures:y,floatVertexTextures:M,maxSamples:w}}function A5(n){const e=this;let t=null,i=0,r=!1,s=!1;const a=new Qr,o=new On,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(u,f,h){const m=u.length!==0||f||i!==0||r;return r=f,t=d(u,h,0),i=u.length,m},this.beginShadows=function(){s=!0,d(null)},this.endShadows=function(){s=!1,c()},this.setState=function(u,f,h){const m=u.clippingPlanes,x=u.clipIntersection,p=u.clipShadows,v=n.get(u);if(!r||m===null||m.length===0||s&&!p)s?d(null):c();else{const g=s?0:i,_=g*4;let y=v.clippingState||null;l.value=y,y=d(m,f,_,h);for(let M=0;M!==_;++M)y[M]=t[M];v.clippingState=y,this.numIntersection=x?this.numPlanes:0,this.numPlanes+=g}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function d(u,f,h,m){const x=u!==null?u.length:0;let p=null;if(x!==0){if(p=l.value,m!==!0||p===null){const v=h+x*4,g=f.matrixWorldInverse;o.getNormalMatrix(g),(p===null||p.length<v)&&(p=new Float32Array(v));for(let _=0,y=h;_!==x;++_,y+=4)a.copy(u[_]).applyMatrix4(g,o),a.normal.toArray(p,y),p[y+3]=a.constant}l.value=p,l.needsUpdate=!0}return e.numPlanes=x,e.numIntersection=0,p}}function L5(n){let e=new WeakMap;function t(a,o){return o===bh?a.mapping=Na:o===_h&&(a.mapping=Ba),a}function i(a){if(a&&a.isTexture&&a.isRenderTargetTexture===!1){const o=a.mapping;if(o===bh||o===_h)if(e.has(a)){const l=e.get(a).texture;return t(l,a.mapping)}else{const l=a.image;if(l&&l.height>0){const c=new Vb(l.height/2);return c.fromEquirectangularTexture(n,a),e.set(a,c),a.addEventListener("dispose",r),t(c.texture,a.mapping)}else return null}}return a}function r(a){const o=a.target;o.removeEventListener("dispose",r);const l=e.get(o);l!==void 0&&(e.delete(o),l.dispose())}function s(){e=new WeakMap}return{get:i,dispose:s}}class C5 extends R1{constructor(e=-1,t=1,i=1,r=-1,s=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=r,this.near=s,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,i,r,s,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=r,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let s=i-e,a=i+e,o=r+t,l=r-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,d=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,a=s+c*this.view.width,o-=d*this.view.offsetY,l=o-d*this.view.height}this.projectionMatrix.makeOrthographic(s,a,o,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const La=4,Sm=[.125,.215,.35,.446,.526,.582],is=20,of=new C5,Em=new mt;let cf=null;const es=(1+Math.sqrt(5))/2,sa=1/es,Tm=[new ce(1,1,1),new ce(-1,1,1),new ce(1,1,-1),new ce(-1,1,-1),new ce(0,es,sa),new ce(0,es,-sa),new ce(sa,0,es),new ce(-sa,0,es),new ce(es,sa,0),new ce(-es,sa,0)];class Am{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,r=100){cf=this._renderer.getRenderTarget(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,i,r,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Rm(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Cm(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(cf),e.scissorTest=!1,xl(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Na||e.mapping===Ba?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),cf=this._renderer.getRenderTarget();const i=t||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,i={magFilter:In,minFilter:In,generateMipmaps:!1,type:Zo,format:hi,encoding:vs,depthBuffer:!1},r=Lm(e,t,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Lm(e,t,i);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=R5(s)),this._blurMaterial=P5(s,e,t)}return r}_compileMaterial(e){const t=new Hi(this._lodPlanes[0],e);this._renderer.compile(t,of)}_sceneToCubeUV(e,t,i,r){const o=new Dn(90,1,t,i),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],d=this._renderer,u=d.autoClear,f=d.toneMapping;d.getClearColor(Em),d.toneMapping=$i,d.autoClear=!1;const h=new A1({name:"PMREM.Background",side:Qn,depthWrite:!1,depthTest:!1}),m=new Hi(new ro,h);let x=!1;const p=e.background;p?p.isColor&&(h.color.copy(p),e.background=null,x=!0):(h.color.copy(Em),x=!0);for(let v=0;v<6;v++){const g=v%3;g===0?(o.up.set(0,l[v],0),o.lookAt(c[v],0,0)):g===1?(o.up.set(0,0,l[v]),o.lookAt(0,c[v],0)):(o.up.set(0,l[v],0),o.lookAt(0,0,c[v]));const _=this._cubeSize;xl(r,g*_,v>2?_:0,_,_),d.setRenderTarget(r),x&&d.render(m,o),d.render(e,o)}m.geometry.dispose(),m.material.dispose(),d.toneMapping=f,d.autoClear=u,e.background=p}_textureToCubeUV(e,t){const i=this._renderer,r=e.mapping===Na||e.mapping===Ba;r?(this._cubemapMaterial===null&&(this._cubemapMaterial=Rm()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Cm());const s=r?this._cubemapMaterial:this._equirectMaterial,a=new Hi(this._lodPlanes[0],s),o=s.uniforms;o.envMap.value=e;const l=this._cubeSize;xl(t,0,0,3*l,2*l),i.setRenderTarget(t),i.render(a,of)}_applyPMREM(e){const t=this._renderer,i=t.autoClear;t.autoClear=!1;for(let r=1;r<this._lodPlanes.length;r++){const s=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),a=Tm[(r-1)%Tm.length];this._blur(e,r-1,r,s,a)}t.autoClear=i}_blur(e,t,i,r,s){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,i,r,"latitudinal",s),this._halfBlur(a,e,i,i,r,"longitudinal",s)}_halfBlur(e,t,i,r,s,a,o){const l=this._renderer,c=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const d=3,u=new Hi(this._lodPlanes[r],c),f=c.uniforms,h=this._sizeLods[i]-1,m=isFinite(s)?Math.PI/(2*h):2*Math.PI/(2*is-1),x=s/m,p=isFinite(s)?1+Math.floor(d*x):is;p>is&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${p} samples when the maximum is set to ${is}`);const v=[];let g=0;for(let b=0;b<is;++b){const S=b/x,E=Math.exp(-S*S/2);v.push(E),b===0?g+=E:b<p&&(g+=2*E)}for(let b=0;b<v.length;b++)v[b]=v[b]/g;f.envMap.value=e.texture,f.samples.value=p,f.weights.value=v,f.latitudinal.value=a==="latitudinal",o&&(f.poleAxis.value=o);const{_lodMax:_}=this;f.dTheta.value=m,f.mipInt.value=_-i;const y=this._sizeLods[r],M=3*y*(r>_-La?r-_+La:0),w=4*(this._cubeSize-y);xl(t,M,w,3*y,2*y),l.setRenderTarget(t),l.render(u,of)}}function R5(n){const e=[],t=[],i=[];let r=n;const s=n-La+1+Sm.length;for(let a=0;a<s;a++){const o=Math.pow(2,r);t.push(o);let l=1/o;a>n-La?l=Sm[a-n+La-1]:a===0&&(l=0),i.push(l);const c=1/(o-2),d=-c,u=1+c,f=[d,d,u,d,u,u,d,d,u,u,d,u],h=6,m=6,x=3,p=2,v=1,g=new Float32Array(x*m*h),_=new Float32Array(p*m*h),y=new Float32Array(v*m*h);for(let w=0;w<h;w++){const b=w%3*2/3-1,S=w>2?0:-1,E=[b,S,0,b+2/3,S,0,b+2/3,S+1,0,b,S,0,b+2/3,S+1,0,b,S+1,0];g.set(E,x*m*w),_.set(f,p*m*w);const C=[w,w,w,w,w,w];y.set(C,v*m*w)}const M=new ks;M.setAttribute("position",new mi(g,x)),M.setAttribute("uv",new mi(_,p)),M.setAttribute("faceIndex",new mi(y,v)),e.push(M),r>La&&r--}return{lodPlanes:e,sizeLods:t,sigmas:i}}function Lm(n,e,t){const i=new ys(n,e,t);return i.texture.mapping=pu,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function xl(n,e,t,i,r){n.viewport.set(e,t,i,r),n.scissor.set(e,t,i,r)}function P5(n,e,t){const i=new Float32Array(is),r=new ce(0,1,0);return new bs({name:"SphericalGaussianBlur",defines:{n:is,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${n}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:q0(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:br,depthTest:!1,depthWrite:!1})}function Cm(){return new bs({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:q0(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:br,depthTest:!1,depthWrite:!1})}function Rm(){return new bs({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:q0(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:br,depthTest:!1,depthWrite:!1})}function q0(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function I5(n){let e=new WeakMap,t=null;function i(o){if(o&&o.isTexture){const l=o.mapping,c=l===bh||l===_h,d=l===Na||l===Ba;if(c||d)if(o.isRenderTargetTexture&&o.needsPMREMUpdate===!0){o.needsPMREMUpdate=!1;let u=e.get(o);return t===null&&(t=new Am(n)),u=c?t.fromEquirectangular(o,u):t.fromCubemap(o,u),e.set(o,u),u.texture}else{if(e.has(o))return e.get(o).texture;{const u=o.image;if(c&&u&&u.height>0||d&&u&&r(u)){t===null&&(t=new Am(n));const f=c?t.fromEquirectangular(o):t.fromCubemap(o);return e.set(o,f),o.addEventListener("dispose",s),f.texture}else return null}}}return o}function r(o){let l=0;const c=6;for(let d=0;d<c;d++)o[d]!==void 0&&l++;return l===c}function s(o){const l=o.target;l.removeEventListener("dispose",s);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function a(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:i,dispose:a}}function D5(n){const e={};function t(i){if(e[i]!==void 0)return e[i];let r;switch(i){case"WEBGL_depth_texture":r=n.getExtension("WEBGL_depth_texture")||n.getExtension("MOZ_WEBGL_depth_texture")||n.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=n.getExtension("WEBGL_compressed_texture_pvrtc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=n.getExtension(i)}return e[i]=r,r}return{has:function(i){return t(i)!==null},init:function(i){i.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(i){const r=t(i);return r===null&&console.warn("THREE.WebGLRenderer: "+i+" extension not supported."),r}}}function O5(n,e,t,i){const r={},s=new WeakMap;function a(u){const f=u.target;f.index!==null&&e.remove(f.index);for(const m in f.attributes)e.remove(f.attributes[m]);f.removeEventListener("dispose",a),delete r[f.id];const h=s.get(f);h&&(e.remove(h),s.delete(f)),i.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,t.memory.geometries--}function o(u,f){return r[f.id]===!0||(f.addEventListener("dispose",a),r[f.id]=!0,t.memory.geometries++),f}function l(u){const f=u.attributes;for(const m in f)e.update(f[m],34962);const h=u.morphAttributes;for(const m in h){const x=h[m];for(let p=0,v=x.length;p<v;p++)e.update(x[p],34962)}}function c(u){const f=[],h=u.index,m=u.attributes.position;let x=0;if(h!==null){const g=h.array;x=h.version;for(let _=0,y=g.length;_<y;_+=3){const M=g[_+0],w=g[_+1],b=g[_+2];f.push(M,w,w,b,b,M)}}else{const g=m.array;x=m.version;for(let _=0,y=g.length/3-1;_<y;_+=3){const M=_+0,w=_+1,b=_+2;f.push(M,w,w,b,b,M)}}const p=new(_1(f)?C1:L1)(f,1);p.version=x;const v=s.get(u);v&&e.remove(v),s.set(u,p)}function d(u){const f=s.get(u);if(f){const h=u.index;h!==null&&f.version<h.version&&c(u)}else c(u);return s.get(u)}return{get:o,update:l,getWireframeAttribute:d}}function z5(n,e,t,i){const r=i.isWebGL2;let s;function a(f){s=f}let o,l;function c(f){o=f.type,l=f.bytesPerElement}function d(f,h){n.drawElements(s,h,o,f*l),t.update(h,s,1)}function u(f,h,m){if(m===0)return;let x,p;if(r)x=n,p="drawElementsInstanced";else if(x=e.get("ANGLE_instanced_arrays"),p="drawElementsInstancedANGLE",x===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}x[p](s,h,o,f*l,m),t.update(h,s,m)}this.setMode=a,this.setIndex=c,this.render=d,this.renderInstances=u}function F5(n){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function i(s,a,o){switch(t.calls++,a){case 4:t.triangles+=o*(s/3);break;case 1:t.lines+=o*(s/2);break;case 3:t.lines+=o*(s-1);break;case 2:t.lines+=o*s;break;case 0:t.points+=o*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function r(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:r,update:i}}function q5(n,e){return n[0]-e[0]}function N5(n,e){return Math.abs(e[1])-Math.abs(n[1])}function lf(n,e){let t=1;const i=e.isInterleavedBufferAttribute?e.data.array:e.array;i instanceof Int8Array?t=127:i instanceof Uint8Array?t=255:i instanceof Uint16Array?t=65535:i instanceof Int16Array?t=32767:i instanceof Int32Array?t=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",i),n.divideScalar(t)}function B5(n,e,t){const i={},r=new Float32Array(8),s=new WeakMap,a=new Ht,o=[];for(let c=0;c<8;c++)o[c]=[c,0];function l(c,d,u,f){const h=c.morphTargetInfluences;if(e.isWebGL2===!0){const x=d.morphAttributes.position||d.morphAttributes.normal||d.morphAttributes.color,p=x!==void 0?x.length:0;let v=s.get(d);if(v===void 0||v.count!==p){let N=function(){A.dispose(),s.delete(d),d.removeEventListener("dispose",N)};var m=N;v!==void 0&&v.texture.dispose();const y=d.morphAttributes.position!==void 0,M=d.morphAttributes.normal!==void 0,w=d.morphAttributes.color!==void 0,b=d.morphAttributes.position||[],S=d.morphAttributes.normal||[],E=d.morphAttributes.color||[];let C=0;y===!0&&(C=1),M===!0&&(C=2),w===!0&&(C=3);let I=d.attributes.position.count*C,W=1;I>e.maxTextureSize&&(W=Math.ceil(I/e.maxTextureSize),I=e.maxTextureSize);const H=new Float32Array(I*W*4*p),A=new E1(H,I,W,p);A.type=as,A.needsUpdate=!0;const q=C*4;for(let X=0;X<p;X++){const Z=b[X],$=S[X],J=E[X],R=I*W*4*X;for(let k=0;k<Z.count;k++){const j=k*q;y===!0&&(a.fromBufferAttribute(Z,k),Z.normalized===!0&&lf(a,Z),H[R+j+0]=a.x,H[R+j+1]=a.y,H[R+j+2]=a.z,H[R+j+3]=0),M===!0&&(a.fromBufferAttribute($,k),$.normalized===!0&&lf(a,$),H[R+j+4]=a.x,H[R+j+5]=a.y,H[R+j+6]=a.z,H[R+j+7]=0),w===!0&&(a.fromBufferAttribute(J,k),J.normalized===!0&&lf(a,J),H[R+j+8]=a.x,H[R+j+9]=a.y,H[R+j+10]=a.z,H[R+j+11]=J.itemSize===4?a.w:1)}}v={count:p,texture:A,size:new vt(I,W)},s.set(d,v),d.addEventListener("dispose",N)}let g=0;for(let y=0;y<h.length;y++)g+=h[y];const _=d.morphTargetsRelative?1:1-g;f.getUniforms().setValue(n,"morphTargetBaseInfluence",_),f.getUniforms().setValue(n,"morphTargetInfluences",h),f.getUniforms().setValue(n,"morphTargetsTexture",v.texture,t),f.getUniforms().setValue(n,"morphTargetsTextureSize",v.size)}else{const x=h===void 0?0:h.length;let p=i[d.id];if(p===void 0||p.length!==x){p=[];for(let M=0;M<x;M++)p[M]=[M,0];i[d.id]=p}for(let M=0;M<x;M++){const w=p[M];w[0]=M,w[1]=h[M]}p.sort(N5);for(let M=0;M<8;M++)M<x&&p[M][1]?(o[M][0]=p[M][0],o[M][1]=p[M][1]):(o[M][0]=Number.MAX_SAFE_INTEGER,o[M][1]=0);o.sort(q5);const v=d.morphAttributes.position,g=d.morphAttributes.normal;let _=0;for(let M=0;M<8;M++){const w=o[M],b=w[0],S=w[1];b!==Number.MAX_SAFE_INTEGER&&S?(v&&d.getAttribute("morphTarget"+M)!==v[b]&&d.setAttribute("morphTarget"+M,v[b]),g&&d.getAttribute("morphNormal"+M)!==g[b]&&d.setAttribute("morphNormal"+M,g[b]),r[M]=S,_+=S):(v&&d.hasAttribute("morphTarget"+M)===!0&&d.deleteAttribute("morphTarget"+M),g&&d.hasAttribute("morphNormal"+M)===!0&&d.deleteAttribute("morphNormal"+M),r[M]=0)}const y=d.morphTargetsRelative?1:1-_;f.getUniforms().setValue(n,"morphTargetBaseInfluence",y),f.getUniforms().setValue(n,"morphTargetInfluences",r)}}return{update:l}}function U5(n,e,t,i){let r=new WeakMap;function s(l){const c=i.render.frame,d=l.geometry,u=e.get(l,d);return r.get(u)!==c&&(e.update(u),r.set(u,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",o)===!1&&l.addEventListener("dispose",o),t.update(l.instanceMatrix,34962),l.instanceColor!==null&&t.update(l.instanceColor,34962)),u}function a(){r=new WeakMap}function o(l){const c=l.target;c.removeEventListener("dispose",o),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:s,dispose:a}}const O1=new ei,z1=new E1,F1=new Ab,q1=new P1,Pm=[],Im=[],Dm=new Float32Array(16),Om=new Float32Array(9),zm=new Float32Array(4);function so(n,e,t){const i=n[0];if(i<=0||i>0)return n;const r=e*t;let s=Pm[r];if(s===void 0&&(s=new Float32Array(r),Pm[r]=s),e!==0){i.toArray(s,0);for(let a=1,o=0;a!==e;++a)o+=t,n[a].toArray(s,o)}return s}function on(n,e){if(n.length!==e.length)return!1;for(let t=0,i=n.length;t<i;t++)if(n[t]!==e[t])return!1;return!0}function cn(n,e){for(let t=0,i=e.length;t<i;t++)n[t]=e[t]}function xu(n,e){let t=Im[e];t===void 0&&(t=new Int32Array(e),Im[e]=t);for(let i=0;i!==e;++i)t[i]=n.allocateTextureUnit();return t}function G5(n,e){const t=this.cache;t[0]!==e&&(n.uniform1f(this.addr,e),t[0]=e)}function k5(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(on(t,e))return;n.uniform2fv(this.addr,e),cn(t,e)}}function H5(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(n.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(on(t,e))return;n.uniform3fv(this.addr,e),cn(t,e)}}function V5(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(on(t,e))return;n.uniform4fv(this.addr,e),cn(t,e)}}function W5(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(on(t,e))return;n.uniformMatrix2fv(this.addr,!1,e),cn(t,e)}else{if(on(t,i))return;zm.set(i),n.uniformMatrix2fv(this.addr,!1,zm),cn(t,i)}}function $5(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(on(t,e))return;n.uniformMatrix3fv(this.addr,!1,e),cn(t,e)}else{if(on(t,i))return;Om.set(i),n.uniformMatrix3fv(this.addr,!1,Om),cn(t,i)}}function j5(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(on(t,e))return;n.uniformMatrix4fv(this.addr,!1,e),cn(t,e)}else{if(on(t,i))return;Dm.set(i),n.uniformMatrix4fv(this.addr,!1,Dm),cn(t,i)}}function X5(n,e){const t=this.cache;t[0]!==e&&(n.uniform1i(this.addr,e),t[0]=e)}function Y5(n,e){const t=this.cache;on(t,e)||(n.uniform2iv(this.addr,e),cn(t,e))}function Z5(n,e){const t=this.cache;on(t,e)||(n.uniform3iv(this.addr,e),cn(t,e))}function J5(n,e){const t=this.cache;on(t,e)||(n.uniform4iv(this.addr,e),cn(t,e))}function K5(n,e){const t=this.cache;t[0]!==e&&(n.uniform1ui(this.addr,e),t[0]=e)}function Q5(n,e){const t=this.cache;on(t,e)||(n.uniform2uiv(this.addr,e),cn(t,e))}function e4(n,e){const t=this.cache;on(t,e)||(n.uniform3uiv(this.addr,e),cn(t,e))}function t4(n,e){const t=this.cache;on(t,e)||(n.uniform4uiv(this.addr,e),cn(t,e))}function n4(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTexture2D(e||O1,r)}function i4(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTexture3D(e||F1,r)}function r4(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTextureCube(e||q1,r)}function s4(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTexture2DArray(e||z1,r)}function a4(n){switch(n){case 5126:return G5;case 35664:return k5;case 35665:return H5;case 35666:return V5;case 35674:return W5;case 35675:return $5;case 35676:return j5;case 5124:case 35670:return X5;case 35667:case 35671:return Y5;case 35668:case 35672:return Z5;case 35669:case 35673:return J5;case 5125:return K5;case 36294:return Q5;case 36295:return e4;case 36296:return t4;case 35678:case 36198:case 36298:case 36306:case 35682:return n4;case 35679:case 36299:case 36307:return i4;case 35680:case 36300:case 36308:case 36293:return r4;case 36289:case 36303:case 36311:case 36292:return s4}}function o4(n,e){n.uniform1fv(this.addr,e)}function c4(n,e){const t=so(e,this.size,2);n.uniform2fv(this.addr,t)}function l4(n,e){const t=so(e,this.size,3);n.uniform3fv(this.addr,t)}function d4(n,e){const t=so(e,this.size,4);n.uniform4fv(this.addr,t)}function u4(n,e){const t=so(e,this.size,4);n.uniformMatrix2fv(this.addr,!1,t)}function f4(n,e){const t=so(e,this.size,9);n.uniformMatrix3fv(this.addr,!1,t)}function h4(n,e){const t=so(e,this.size,16);n.uniformMatrix4fv(this.addr,!1,t)}function p4(n,e){n.uniform1iv(this.addr,e)}function m4(n,e){n.uniform2iv(this.addr,e)}function x4(n,e){n.uniform3iv(this.addr,e)}function g4(n,e){n.uniform4iv(this.addr,e)}function v4(n,e){n.uniform1uiv(this.addr,e)}function y4(n,e){n.uniform2uiv(this.addr,e)}function b4(n,e){n.uniform3uiv(this.addr,e)}function _4(n,e){n.uniform4uiv(this.addr,e)}function w4(n,e,t){const i=e.length,r=xu(t,i);n.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)t.setTexture2D(e[s]||O1,r[s])}function M4(n,e,t){const i=e.length,r=xu(t,i);n.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)t.setTexture3D(e[s]||F1,r[s])}function S4(n,e,t){const i=e.length,r=xu(t,i);n.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)t.setTextureCube(e[s]||q1,r[s])}function E4(n,e,t){const i=e.length,r=xu(t,i);n.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)t.setTexture2DArray(e[s]||z1,r[s])}function T4(n){switch(n){case 5126:return o4;case 35664:return c4;case 35665:return l4;case 35666:return d4;case 35674:return u4;case 35675:return f4;case 35676:return h4;case 5124:case 35670:return p4;case 35667:case 35671:return m4;case 35668:case 35672:return x4;case 35669:case 35673:return g4;case 5125:return v4;case 36294:return y4;case 36295:return b4;case 36296:return _4;case 35678:case 36198:case 36298:case 36306:case 35682:return w4;case 35679:case 36299:case 36307:return M4;case 35680:case 36300:case 36308:case 36293:return S4;case 36289:case 36303:case 36311:case 36292:return E4}}class A4{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.setValue=a4(t.type)}}class L4{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.size=t.size,this.setValue=T4(t.type)}}class C4{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,i){const r=this.seq;for(let s=0,a=r.length;s!==a;++s){const o=r[s];o.setValue(e,t[o.id],i)}}}const df=/(\w+)(\])?(\[|\.)?/g;function Fm(n,e){n.seq.push(e),n.map[e.id]=e}function R4(n,e,t){const i=n.name,r=i.length;for(df.lastIndex=0;;){const s=df.exec(i),a=df.lastIndex;let o=s[1];const l=s[2]==="]",c=s[3];if(l&&(o=o|0),c===void 0||c==="["&&a+2===r){Fm(t,c===void 0?new A4(o,n,e):new L4(o,n,e));break}else{let u=t.map[o];u===void 0&&(u=new C4(o),Fm(t,u)),t=u}}}class vd{constructor(e,t){this.seq=[],this.map={};const i=e.getProgramParameter(t,35718);for(let r=0;r<i;++r){const s=e.getActiveUniform(t,r),a=e.getUniformLocation(t,s.name);R4(s,a,this)}}setValue(e,t,i,r){const s=this.map[t];s!==void 0&&s.setValue(e,i,r)}setOptional(e,t,i){const r=t[i];r!==void 0&&this.setValue(e,i,r)}static upload(e,t,i,r){for(let s=0,a=t.length;s!==a;++s){const o=t[s],l=i[o.id];l.needsUpdate!==!1&&o.setValue(e,l.value,r)}}static seqWithValue(e,t){const i=[];for(let r=0,s=e.length;r!==s;++r){const a=e[r];a.id in t&&i.push(a)}return i}}function qm(n,e,t){const i=n.createShader(e);return n.shaderSource(i,t),n.compileShader(i),i}let P4=0;function I4(n,e){const t=n.split(`
`),i=[],r=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let a=r;a<s;a++){const o=a+1;i.push(`${o===e?">":" "} ${o}: ${t[a]}`)}return i.join(`
`)}function D4(n){switch(n){case vs:return["Linear","( value )"];case It:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",n),["Linear","( value )"]}}function Nm(n,e,t){const i=n.getShaderParameter(e,35713),r=n.getShaderInfoLog(e).trim();if(i&&r==="")return"";const s=/ERROR: 0:(\d+)/.exec(r);if(s){const a=parseInt(s[1]);return t.toUpperCase()+`

`+r+`

`+I4(n.getShaderSource(e),a)}else return r}function O4(n,e){const t=D4(e);return"vec4 "+n+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function z4(n,e){let t;switch(e){case eb:t="Linear";break;case tb:t="Reinhard";break;case nb:t="OptimizedCineon";break;case ib:t="ACESFilmic";break;case rb:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+n+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function F4(n){return[n.extensionDerivatives||!!n.envMapCubeUVHeight||n.bumpMap||n.tangentSpaceNormalMap||n.clearcoatNormalMap||n.flatShading||n.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(n.extensionFragDepth||n.logarithmicDepthBuffer)&&n.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",n.extensionDrawBuffers&&n.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(n.extensionShaderTextureLOD||n.envMap||n.transmission)&&n.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(No).join(`
`)}function q4(n){const e=[];for(const t in n){const i=n[t];i!==!1&&e.push("#define "+t+" "+i)}return e.join(`
`)}function N4(n,e){const t={},i=n.getProgramParameter(e,35721);for(let r=0;r<i;r++){const s=n.getActiveAttrib(e,r),a=s.name;let o=1;s.type===35674&&(o=2),s.type===35675&&(o=3),s.type===35676&&(o=4),t[a]={type:s.type,location:n.getAttribLocation(e,a),locationSize:o}}return t}function No(n){return n!==""}function Bm(n,e){return n.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Um(n,e){return n.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const B4=/^[ \t]*#include +<([\w\d./]+)>/gm;function Th(n){return n.replace(B4,U4)}function U4(n,e){const t=lt[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return Th(t)}const G4=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,k4=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Gm(n){return n.replace(k4,N1).replace(G4,H4)}function H4(n,e,t,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),N1(n,e,t,i)}function N1(n,e,t,i){let r="";for(let s=parseInt(e);s<parseInt(t);s++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function km(n){let e="precision "+n.precision+` float;
precision `+n.precision+" int;";return n.precision==="highp"?e+=`
#define HIGH_PRECISION`:n.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:n.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function V4(n){let e="SHADOWMAP_TYPE_BASIC";return n.shadowMapType===m1?e="SHADOWMAP_TYPE_PCF":n.shadowMapType===Py?e="SHADOWMAP_TYPE_PCF_SOFT":n.shadowMapType===qo&&(e="SHADOWMAP_TYPE_VSM"),e}function W4(n){let e="ENVMAP_TYPE_CUBE";if(n.envMap)switch(n.envMapMode){case Na:case Ba:e="ENVMAP_TYPE_CUBE";break;case pu:e="ENVMAP_TYPE_CUBE_UV";break}return e}function $4(n){let e="ENVMAP_MODE_REFLECTION";if(n.envMap)switch(n.envMapMode){case Ba:e="ENVMAP_MODE_REFRACTION";break}return e}function j4(n){let e="ENVMAP_BLENDING_NONE";if(n.envMap)switch(n.combine){case O0:e="ENVMAP_BLENDING_MULTIPLY";break;case Ky:e="ENVMAP_BLENDING_MIX";break;case Qy:e="ENVMAP_BLENDING_ADD";break}return e}function X4(n){const e=n.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:i,maxMip:t}}function Y4(n,e,t,i){const r=n.getContext(),s=t.defines;let a=t.vertexShader,o=t.fragmentShader;const l=V4(t),c=W4(t),d=$4(t),u=j4(t),f=X4(t),h=t.isWebGL2?"":F4(t),m=q4(s),x=r.createProgram();let p,v,g=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(p=[m].filter(No).join(`
`),p.length>0&&(p+=`
`),v=[h,m].filter(No).join(`
`),v.length>0&&(v+=`
`)):(p=[km(t),"#define SHADER_NAME "+t.shaderName,m,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+d:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(No).join(`
`),v=[h,km(t),"#define SHADER_NAME "+t.shaderName,m,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+d:"",t.envMap?"#define "+u:"",f?"#define CUBEUV_TEXEL_WIDTH "+f.texelWidth:"",f?"#define CUBEUV_TEXEL_HEIGHT "+f.texelHeight:"",f?"#define CUBEUV_MAX_MIP "+f.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==$i?"#define TONE_MAPPING":"",t.toneMapping!==$i?lt.tonemapping_pars_fragment:"",t.toneMapping!==$i?z4("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",lt.encodings_pars_fragment,O4("linearToOutputTexel",t.outputEncoding),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(No).join(`
`)),a=Th(a),a=Bm(a,t),a=Um(a,t),o=Th(o),o=Bm(o,t),o=Um(o,t),a=Gm(a),o=Gm(o),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(g=`#version 300 es
`,p=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+p,v=["#define varying in",t.glslVersion===dm?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===dm?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+v);const _=g+p+a,y=g+v+o,M=qm(r,35633,_),w=qm(r,35632,y);if(r.attachShader(x,M),r.attachShader(x,w),t.index0AttributeName!==void 0?r.bindAttribLocation(x,0,t.index0AttributeName):t.morphTargets===!0&&r.bindAttribLocation(x,0,"position"),r.linkProgram(x),n.debug.checkShaderErrors){const E=r.getProgramInfoLog(x).trim(),C=r.getShaderInfoLog(M).trim(),I=r.getShaderInfoLog(w).trim();let W=!0,H=!0;if(r.getProgramParameter(x,35714)===!1){W=!1;const A=Nm(r,M,"vertex"),q=Nm(r,w,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(x,35715)+`

Program Info Log: `+E+`
`+A+`
`+q)}else E!==""?console.warn("THREE.WebGLProgram: Program Info Log:",E):(C===""||I==="")&&(H=!1);H&&(this.diagnostics={runnable:W,programLog:E,vertexShader:{log:C,prefix:p},fragmentShader:{log:I,prefix:v}})}r.deleteShader(M),r.deleteShader(w);let b;this.getUniforms=function(){return b===void 0&&(b=new vd(r,x)),b};let S;return this.getAttributes=function(){return S===void 0&&(S=N4(r,x)),S},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(x),this.program=void 0},this.name=t.shaderName,this.id=P4++,this.cacheKey=e,this.usedTimes=1,this.program=x,this.vertexShader=M,this.fragmentShader=w,this}let Z4=0;class J4{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,i=e.fragmentShader,r=this._getShaderStage(t),s=this._getShaderStage(i),a=this._getShaderCacheForMaterial(e);return a.has(r)===!1&&(a.add(r),r.usedTimes++),a.has(s)===!1&&(a.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const i of t)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;return t.has(e)===!1&&t.set(e,new Set),t.get(e)}_getShaderStage(e){const t=this.shaderCache;if(t.has(e)===!1){const i=new K4(e);t.set(e,i)}return t.get(e)}}class K4{constructor(e){this.id=Z4++,this.code=e,this.usedTimes=0}}function Q4(n,e,t,i,r,s,a){const o=new T1,l=new J4,c=[],d=r.isWebGL2,u=r.logarithmicDepthBuffer,f=r.vertexTextures;let h=r.precision;const m={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function x(S,E,C,I,W){const H=I.fog,A=W.geometry,q=S.isMeshStandardMaterial?I.environment:null,N=(S.isMeshStandardMaterial?t:e).get(S.envMap||q),X=!!N&&N.mapping===pu?N.image.height:null,Z=m[S.type];S.precision!==null&&(h=r.getMaxPrecision(S.precision),h!==S.precision&&console.warn("THREE.WebGLProgram.getParameters:",S.precision,"not supported, using",h,"instead."));const $=A.morphAttributes.position||A.morphAttributes.normal||A.morphAttributes.color,J=$!==void 0?$.length:0;let R=0;A.morphAttributes.position!==void 0&&(R=1),A.morphAttributes.normal!==void 0&&(R=2),A.morphAttributes.color!==void 0&&(R=3);let k,j,K,B;if(Z){const Ie=ui[Z];k=Ie.vertexShader,j=Ie.fragmentShader}else k=S.vertexShader,j=S.fragmentShader,l.update(S),K=l.getVertexShaderID(S),B=l.getFragmentShaderID(S);const oe=n.getRenderTarget(),Re=S.alphaTest>0,Ae=S.clearcoat>0,pe=S.iridescence>0;return{isWebGL2:d,shaderID:Z,shaderName:S.type,vertexShader:k,fragmentShader:j,defines:S.defines,customVertexShaderID:K,customFragmentShaderID:B,isRawShaderMaterial:S.isRawShaderMaterial===!0,glslVersion:S.glslVersion,precision:h,instancing:W.isInstancedMesh===!0,instancingColor:W.isInstancedMesh===!0&&W.instanceColor!==null,supportsVertexTextures:f,outputEncoding:oe===null?n.outputEncoding:oe.isXRRenderTarget===!0?oe.texture.encoding:vs,map:!!S.map,matcap:!!S.matcap,envMap:!!N,envMapMode:N&&N.mapping,envMapCubeUVHeight:X,lightMap:!!S.lightMap,aoMap:!!S.aoMap,emissiveMap:!!S.emissiveMap,bumpMap:!!S.bumpMap,normalMap:!!S.normalMap,objectSpaceNormalMap:S.normalMapType===Mb,tangentSpaceNormalMap:S.normalMapType===b1,decodeVideoTexture:!!S.map&&S.map.isVideoTexture===!0&&S.map.encoding===It,clearcoat:Ae,clearcoatMap:Ae&&!!S.clearcoatMap,clearcoatRoughnessMap:Ae&&!!S.clearcoatRoughnessMap,clearcoatNormalMap:Ae&&!!S.clearcoatNormalMap,iridescence:pe,iridescenceMap:pe&&!!S.iridescenceMap,iridescenceThicknessMap:pe&&!!S.iridescenceThicknessMap,displacementMap:!!S.displacementMap,roughnessMap:!!S.roughnessMap,metalnessMap:!!S.metalnessMap,specularMap:!!S.specularMap,specularIntensityMap:!!S.specularIntensityMap,specularColorMap:!!S.specularColorMap,opaque:S.transparent===!1&&S.blending===Pa,alphaMap:!!S.alphaMap,alphaTest:Re,gradientMap:!!S.gradientMap,sheen:S.sheen>0,sheenColorMap:!!S.sheenColorMap,sheenRoughnessMap:!!S.sheenRoughnessMap,transmission:S.transmission>0,transmissionMap:!!S.transmissionMap,thicknessMap:!!S.thicknessMap,combine:S.combine,vertexTangents:!!S.normalMap&&!!A.attributes.tangent,vertexColors:S.vertexColors,vertexAlphas:S.vertexColors===!0&&!!A.attributes.color&&A.attributes.color.itemSize===4,vertexUvs:!!S.map||!!S.bumpMap||!!S.normalMap||!!S.specularMap||!!S.alphaMap||!!S.emissiveMap||!!S.roughnessMap||!!S.metalnessMap||!!S.clearcoatMap||!!S.clearcoatRoughnessMap||!!S.clearcoatNormalMap||!!S.iridescenceMap||!!S.iridescenceThicknessMap||!!S.displacementMap||!!S.transmissionMap||!!S.thicknessMap||!!S.specularIntensityMap||!!S.specularColorMap||!!S.sheenColorMap||!!S.sheenRoughnessMap,uvsVertexOnly:!(!!S.map||!!S.bumpMap||!!S.normalMap||!!S.specularMap||!!S.alphaMap||!!S.emissiveMap||!!S.roughnessMap||!!S.metalnessMap||!!S.clearcoatNormalMap||!!S.iridescenceMap||!!S.iridescenceThicknessMap||S.transmission>0||!!S.transmissionMap||!!S.thicknessMap||!!S.specularIntensityMap||!!S.specularColorMap||S.sheen>0||!!S.sheenColorMap||!!S.sheenRoughnessMap)&&!!S.displacementMap,fog:!!H,useFog:S.fog===!0,fogExp2:H&&H.isFogExp2,flatShading:!!S.flatShading,sizeAttenuation:S.sizeAttenuation,logarithmicDepthBuffer:u,skinning:W.isSkinnedMesh===!0,morphTargets:A.morphAttributes.position!==void 0,morphNormals:A.morphAttributes.normal!==void 0,morphColors:A.morphAttributes.color!==void 0,morphTargetsCount:J,morphTextureStride:R,numDirLights:E.directional.length,numPointLights:E.point.length,numSpotLights:E.spot.length,numRectAreaLights:E.rectArea.length,numHemiLights:E.hemi.length,numDirLightShadows:E.directionalShadowMap.length,numPointLightShadows:E.pointShadowMap.length,numSpotLightShadows:E.spotShadowMap.length,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:S.dithering,shadowMapEnabled:n.shadowMap.enabled&&C.length>0,shadowMapType:n.shadowMap.type,toneMapping:S.toneMapped?n.toneMapping:$i,physicallyCorrectLights:n.physicallyCorrectLights,premultipliedAlpha:S.premultipliedAlpha,doubleSided:S.side===qa,flipSided:S.side===Qn,useDepthPacking:!!S.depthPacking,depthPacking:S.depthPacking||0,index0AttributeName:S.index0AttributeName,extensionDerivatives:S.extensions&&S.extensions.derivatives,extensionFragDepth:S.extensions&&S.extensions.fragDepth,extensionDrawBuffers:S.extensions&&S.extensions.drawBuffers,extensionShaderTextureLOD:S.extensions&&S.extensions.shaderTextureLOD,rendererExtensionFragDepth:d||i.has("EXT_frag_depth"),rendererExtensionDrawBuffers:d||i.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:d||i.has("EXT_shader_texture_lod"),customProgramCacheKey:S.customProgramCacheKey()}}function p(S){const E=[];if(S.shaderID?E.push(S.shaderID):(E.push(S.customVertexShaderID),E.push(S.customFragmentShaderID)),S.defines!==void 0)for(const C in S.defines)E.push(C),E.push(S.defines[C]);return S.isRawShaderMaterial===!1&&(v(E,S),g(E,S),E.push(n.outputEncoding)),E.push(S.customProgramCacheKey),E.join()}function v(S,E){S.push(E.precision),S.push(E.outputEncoding),S.push(E.envMapMode),S.push(E.envMapCubeUVHeight),S.push(E.combine),S.push(E.vertexUvs),S.push(E.fogExp2),S.push(E.sizeAttenuation),S.push(E.morphTargetsCount),S.push(E.morphAttributeCount),S.push(E.numDirLights),S.push(E.numPointLights),S.push(E.numSpotLights),S.push(E.numHemiLights),S.push(E.numRectAreaLights),S.push(E.numDirLightShadows),S.push(E.numPointLightShadows),S.push(E.numSpotLightShadows),S.push(E.shadowMapType),S.push(E.toneMapping),S.push(E.numClippingPlanes),S.push(E.numClipIntersection),S.push(E.depthPacking)}function g(S,E){o.disableAll(),E.isWebGL2&&o.enable(0),E.supportsVertexTextures&&o.enable(1),E.instancing&&o.enable(2),E.instancingColor&&o.enable(3),E.map&&o.enable(4),E.matcap&&o.enable(5),E.envMap&&o.enable(6),E.lightMap&&o.enable(7),E.aoMap&&o.enable(8),E.emissiveMap&&o.enable(9),E.bumpMap&&o.enable(10),E.normalMap&&o.enable(11),E.objectSpaceNormalMap&&o.enable(12),E.tangentSpaceNormalMap&&o.enable(13),E.clearcoat&&o.enable(14),E.clearcoatMap&&o.enable(15),E.clearcoatRoughnessMap&&o.enable(16),E.clearcoatNormalMap&&o.enable(17),E.iridescence&&o.enable(18),E.iridescenceMap&&o.enable(19),E.iridescenceThicknessMap&&o.enable(20),E.displacementMap&&o.enable(21),E.specularMap&&o.enable(22),E.roughnessMap&&o.enable(23),E.metalnessMap&&o.enable(24),E.gradientMap&&o.enable(25),E.alphaMap&&o.enable(26),E.alphaTest&&o.enable(27),E.vertexColors&&o.enable(28),E.vertexAlphas&&o.enable(29),E.vertexUvs&&o.enable(30),E.vertexTangents&&o.enable(31),E.uvsVertexOnly&&o.enable(32),E.fog&&o.enable(33),S.push(o.mask),o.disableAll(),E.useFog&&o.enable(0),E.flatShading&&o.enable(1),E.logarithmicDepthBuffer&&o.enable(2),E.skinning&&o.enable(3),E.morphTargets&&o.enable(4),E.morphNormals&&o.enable(5),E.morphColors&&o.enable(6),E.premultipliedAlpha&&o.enable(7),E.shadowMapEnabled&&o.enable(8),E.physicallyCorrectLights&&o.enable(9),E.doubleSided&&o.enable(10),E.flipSided&&o.enable(11),E.useDepthPacking&&o.enable(12),E.dithering&&o.enable(13),E.specularIntensityMap&&o.enable(14),E.specularColorMap&&o.enable(15),E.transmission&&o.enable(16),E.transmissionMap&&o.enable(17),E.thicknessMap&&o.enable(18),E.sheen&&o.enable(19),E.sheenColorMap&&o.enable(20),E.sheenRoughnessMap&&o.enable(21),E.decodeVideoTexture&&o.enable(22),E.opaque&&o.enable(23),S.push(o.mask)}function _(S){const E=m[S.type];let C;if(E){const I=ui[E];C=Ub.clone(I.uniforms)}else C=S.uniforms;return C}function y(S,E){let C;for(let I=0,W=c.length;I<W;I++){const H=c[I];if(H.cacheKey===E){C=H,++C.usedTimes;break}}return C===void 0&&(C=new Y4(n,E,S,s),c.push(C)),C}function M(S){if(--S.usedTimes===0){const E=c.indexOf(S);c[E]=c[c.length-1],c.pop(),S.destroy()}}function w(S){l.remove(S)}function b(){l.dispose()}return{getParameters:x,getProgramCacheKey:p,getUniforms:_,acquireProgram:y,releaseProgram:M,releaseShaderCache:w,programs:c,dispose:b}}function ew(){let n=new WeakMap;function e(s){let a=n.get(s);return a===void 0&&(a={},n.set(s,a)),a}function t(s){n.delete(s)}function i(s,a,o){n.get(s)[a]=o}function r(){n=new WeakMap}return{get:e,remove:t,update:i,dispose:r}}function tw(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.material.id!==e.material.id?n.material.id-e.material.id:n.z!==e.z?n.z-e.z:n.id-e.id}function Hm(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.z!==e.z?e.z-n.z:n.id-e.id}function Vm(){const n=[];let e=0;const t=[],i=[],r=[];function s(){e=0,t.length=0,i.length=0,r.length=0}function a(u,f,h,m,x,p){let v=n[e];return v===void 0?(v={id:u.id,object:u,geometry:f,material:h,groupOrder:m,renderOrder:u.renderOrder,z:x,group:p},n[e]=v):(v.id=u.id,v.object=u,v.geometry=f,v.material=h,v.groupOrder=m,v.renderOrder=u.renderOrder,v.z=x,v.group=p),e++,v}function o(u,f,h,m,x,p){const v=a(u,f,h,m,x,p);h.transmission>0?i.push(v):h.transparent===!0?r.push(v):t.push(v)}function l(u,f,h,m,x,p){const v=a(u,f,h,m,x,p);h.transmission>0?i.unshift(v):h.transparent===!0?r.unshift(v):t.unshift(v)}function c(u,f){t.length>1&&t.sort(u||tw),i.length>1&&i.sort(f||Hm),r.length>1&&r.sort(f||Hm)}function d(){for(let u=e,f=n.length;u<f;u++){const h=n[u];if(h.id===null)break;h.id=null,h.object=null,h.geometry=null,h.material=null,h.group=null}}return{opaque:t,transmissive:i,transparent:r,init:s,push:o,unshift:l,finish:d,sort:c}}function nw(){let n=new WeakMap;function e(i,r){let s;return n.has(i)===!1?(s=new Vm,n.set(i,[s])):r>=n.get(i).length?(s=new Vm,n.get(i).push(s)):s=n.get(i)[r],s}function t(){n=new WeakMap}return{get:e,dispose:t}}function iw(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new ce,color:new mt};break;case"SpotLight":t={position:new ce,direction:new ce,color:new mt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new ce,color:new mt,distance:0,decay:0};break;case"HemisphereLight":t={direction:new ce,skyColor:new mt,groundColor:new mt};break;case"RectAreaLight":t={color:new mt,position:new ce,halfWidth:new ce,halfHeight:new ce};break}return n[e.id]=t,t}}}function rw(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new vt};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new vt};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new vt,shadowCameraNear:1,shadowCameraFar:1e3};break}return n[e.id]=t,t}}}let sw=0;function aw(n,e){return(e.castShadow?1:0)-(n.castShadow?1:0)}function ow(n,e){const t=new iw,i=rw(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let d=0;d<9;d++)r.probe.push(new ce);const s=new ce,a=new jt,o=new jt;function l(d,u){let f=0,h=0,m=0;for(let E=0;E<9;E++)r.probe[E].set(0,0,0);let x=0,p=0,v=0,g=0,_=0,y=0,M=0,w=0;d.sort(aw);const b=u!==!0?Math.PI:1;for(let E=0,C=d.length;E<C;E++){const I=d[E],W=I.color,H=I.intensity,A=I.distance,q=I.shadow&&I.shadow.map?I.shadow.map.texture:null;if(I.isAmbientLight)f+=W.r*H*b,h+=W.g*H*b,m+=W.b*H*b;else if(I.isLightProbe)for(let N=0;N<9;N++)r.probe[N].addScaledVector(I.sh.coefficients[N],H);else if(I.isDirectionalLight){const N=t.get(I);if(N.color.copy(I.color).multiplyScalar(I.intensity*b),I.castShadow){const X=I.shadow,Z=i.get(I);Z.shadowBias=X.bias,Z.shadowNormalBias=X.normalBias,Z.shadowRadius=X.radius,Z.shadowMapSize=X.mapSize,r.directionalShadow[x]=Z,r.directionalShadowMap[x]=q,r.directionalShadowMatrix[x]=I.shadow.matrix,y++}r.directional[x]=N,x++}else if(I.isSpotLight){const N=t.get(I);if(N.position.setFromMatrixPosition(I.matrixWorld),N.color.copy(W).multiplyScalar(H*b),N.distance=A,N.coneCos=Math.cos(I.angle),N.penumbraCos=Math.cos(I.angle*(1-I.penumbra)),N.decay=I.decay,I.castShadow){const X=I.shadow,Z=i.get(I);Z.shadowBias=X.bias,Z.shadowNormalBias=X.normalBias,Z.shadowRadius=X.radius,Z.shadowMapSize=X.mapSize,r.spotShadow[v]=Z,r.spotShadowMap[v]=q,r.spotShadowMatrix[v]=I.shadow.matrix,w++}r.spot[v]=N,v++}else if(I.isRectAreaLight){const N=t.get(I);N.color.copy(W).multiplyScalar(H),N.halfWidth.set(I.width*.5,0,0),N.halfHeight.set(0,I.height*.5,0),r.rectArea[g]=N,g++}else if(I.isPointLight){const N=t.get(I);if(N.color.copy(I.color).multiplyScalar(I.intensity*b),N.distance=I.distance,N.decay=I.decay,I.castShadow){const X=I.shadow,Z=i.get(I);Z.shadowBias=X.bias,Z.shadowNormalBias=X.normalBias,Z.shadowRadius=X.radius,Z.shadowMapSize=X.mapSize,Z.shadowCameraNear=X.camera.near,Z.shadowCameraFar=X.camera.far,r.pointShadow[p]=Z,r.pointShadowMap[p]=q,r.pointShadowMatrix[p]=I.shadow.matrix,M++}r.point[p]=N,p++}else if(I.isHemisphereLight){const N=t.get(I);N.skyColor.copy(I.color).multiplyScalar(H*b),N.groundColor.copy(I.groundColor).multiplyScalar(H*b),r.hemi[_]=N,_++}}g>0&&(e.isWebGL2||n.has("OES_texture_float_linear")===!0?(r.rectAreaLTC1=Ue.LTC_FLOAT_1,r.rectAreaLTC2=Ue.LTC_FLOAT_2):n.has("OES_texture_half_float_linear")===!0?(r.rectAreaLTC1=Ue.LTC_HALF_1,r.rectAreaLTC2=Ue.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=f,r.ambient[1]=h,r.ambient[2]=m;const S=r.hash;(S.directionalLength!==x||S.pointLength!==p||S.spotLength!==v||S.rectAreaLength!==g||S.hemiLength!==_||S.numDirectionalShadows!==y||S.numPointShadows!==M||S.numSpotShadows!==w)&&(r.directional.length=x,r.spot.length=v,r.rectArea.length=g,r.point.length=p,r.hemi.length=_,r.directionalShadow.length=y,r.directionalShadowMap.length=y,r.pointShadow.length=M,r.pointShadowMap.length=M,r.spotShadow.length=w,r.spotShadowMap.length=w,r.directionalShadowMatrix.length=y,r.pointShadowMatrix.length=M,r.spotShadowMatrix.length=w,S.directionalLength=x,S.pointLength=p,S.spotLength=v,S.rectAreaLength=g,S.hemiLength=_,S.numDirectionalShadows=y,S.numPointShadows=M,S.numSpotShadows=w,r.version=sw++)}function c(d,u){let f=0,h=0,m=0,x=0,p=0;const v=u.matrixWorldInverse;for(let g=0,_=d.length;g<_;g++){const y=d[g];if(y.isDirectionalLight){const M=r.directional[f];M.direction.setFromMatrixPosition(y.matrixWorld),s.setFromMatrixPosition(y.target.matrixWorld),M.direction.sub(s),M.direction.transformDirection(v),f++}else if(y.isSpotLight){const M=r.spot[m];M.position.setFromMatrixPosition(y.matrixWorld),M.position.applyMatrix4(v),M.direction.setFromMatrixPosition(y.matrixWorld),s.setFromMatrixPosition(y.target.matrixWorld),M.direction.sub(s),M.direction.transformDirection(v),m++}else if(y.isRectAreaLight){const M=r.rectArea[x];M.position.setFromMatrixPosition(y.matrixWorld),M.position.applyMatrix4(v),o.identity(),a.copy(y.matrixWorld),a.premultiply(v),o.extractRotation(a),M.halfWidth.set(y.width*.5,0,0),M.halfHeight.set(0,y.height*.5,0),M.halfWidth.applyMatrix4(o),M.halfHeight.applyMatrix4(o),x++}else if(y.isPointLight){const M=r.point[h];M.position.setFromMatrixPosition(y.matrixWorld),M.position.applyMatrix4(v),h++}else if(y.isHemisphereLight){const M=r.hemi[p];M.direction.setFromMatrixPosition(y.matrixWorld),M.direction.transformDirection(v),p++}}}return{setup:l,setupView:c,state:r}}function Wm(n,e){const t=new ow(n,e),i=[],r=[];function s(){i.length=0,r.length=0}function a(u){i.push(u)}function o(u){r.push(u)}function l(u){t.setup(i,u)}function c(u){t.setupView(i,u)}return{init:s,state:{lightsArray:i,shadowsArray:r,lights:t},setupLights:l,setupLightsView:c,pushLight:a,pushShadow:o}}function cw(n,e){let t=new WeakMap;function i(s,a=0){let o;return t.has(s)===!1?(o=new Wm(n,e),t.set(s,[o])):a>=t.get(s).length?(o=new Wm(n,e),t.get(s).push(o)):o=t.get(s)[a],o}function r(){t=new WeakMap}return{get:i,dispose:r}}class lw extends zc{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=_b,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class dw extends zc{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new ce,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const uw=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,fw=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function hw(n,e,t){let i=new I1;const r=new vt,s=new vt,a=new Ht,o=new lw({depthPacking:wb}),l=new dw,c={},d=t.maxTextureSize,u={0:Qn,1:Yo,2:qa},f=new bs({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new vt},radius:{value:4}},vertexShader:uw,fragmentShader:fw}),h=f.clone();h.defines.HORIZONTAL_PASS=1;const m=new ks;m.setAttribute("position",new mi(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const x=new Hi(m,f),p=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=m1,this.render=function(y,M,w){if(p.enabled===!1||p.autoUpdate===!1&&p.needsUpdate===!1||y.length===0)return;const b=n.getRenderTarget(),S=n.getActiveCubeFace(),E=n.getActiveMipmapLevel(),C=n.state;C.setBlending(br),C.buffers.color.setClear(1,1,1,1),C.buffers.depth.setTest(!0),C.setScissorTest(!1);for(let I=0,W=y.length;I<W;I++){const H=y[I],A=H.shadow;if(A===void 0){console.warn("THREE.WebGLShadowMap:",H,"has no shadow.");continue}if(A.autoUpdate===!1&&A.needsUpdate===!1)continue;r.copy(A.mapSize);const q=A.getFrameExtents();if(r.multiply(q),s.copy(A.mapSize),(r.x>d||r.y>d)&&(r.x>d&&(s.x=Math.floor(d/q.x),r.x=s.x*q.x,A.mapSize.x=s.x),r.y>d&&(s.y=Math.floor(d/q.y),r.y=s.y*q.y,A.mapSize.y=s.y)),A.map===null){const X=this.type!==qo?{minFilter:hn,magFilter:hn}:{};A.map=new ys(r.x,r.y,X),A.map.texture.name=H.name+".shadowMap",A.camera.updateProjectionMatrix()}n.setRenderTarget(A.map),n.clear();const N=A.getViewportCount();for(let X=0;X<N;X++){const Z=A.getViewport(X);a.set(s.x*Z.x,s.y*Z.y,s.x*Z.z,s.y*Z.w),C.viewport(a),A.updateMatrices(H,X),i=A.getFrustum(),_(M,w,A.camera,H,this.type)}A.isPointLightShadow!==!0&&this.type===qo&&v(A,w),A.needsUpdate=!1}p.needsUpdate=!1,n.setRenderTarget(b,S,E)};function v(y,M){const w=e.update(x);f.defines.VSM_SAMPLES!==y.blurSamples&&(f.defines.VSM_SAMPLES=y.blurSamples,h.defines.VSM_SAMPLES=y.blurSamples,f.needsUpdate=!0,h.needsUpdate=!0),y.mapPass===null&&(y.mapPass=new ys(r.x,r.y)),f.uniforms.shadow_pass.value=y.map.texture,f.uniforms.resolution.value=y.mapSize,f.uniforms.radius.value=y.radius,n.setRenderTarget(y.mapPass),n.clear(),n.renderBufferDirect(M,null,w,f,x,null),h.uniforms.shadow_pass.value=y.mapPass.texture,h.uniforms.resolution.value=y.mapSize,h.uniforms.radius.value=y.radius,n.setRenderTarget(y.map),n.clear(),n.renderBufferDirect(M,null,w,h,x,null)}function g(y,M,w,b,S,E){let C=null;const I=w.isPointLight===!0?y.customDistanceMaterial:y.customDepthMaterial;if(I!==void 0?C=I:C=w.isPointLight===!0?l:o,n.localClippingEnabled&&M.clipShadows===!0&&Array.isArray(M.clippingPlanes)&&M.clippingPlanes.length!==0||M.displacementMap&&M.displacementScale!==0||M.alphaMap&&M.alphaTest>0){const W=C.uuid,H=M.uuid;let A=c[W];A===void 0&&(A={},c[W]=A);let q=A[H];q===void 0&&(q=C.clone(),A[H]=q),C=q}return C.visible=M.visible,C.wireframe=M.wireframe,E===qo?C.side=M.shadowSide!==null?M.shadowSide:M.side:C.side=M.shadowSide!==null?M.shadowSide:u[M.side],C.alphaMap=M.alphaMap,C.alphaTest=M.alphaTest,C.clipShadows=M.clipShadows,C.clippingPlanes=M.clippingPlanes,C.clipIntersection=M.clipIntersection,C.displacementMap=M.displacementMap,C.displacementScale=M.displacementScale,C.displacementBias=M.displacementBias,C.wireframeLinewidth=M.wireframeLinewidth,C.linewidth=M.linewidth,w.isPointLight===!0&&C.isMeshDistanceMaterial===!0&&(C.referencePosition.setFromMatrixPosition(w.matrixWorld),C.nearDistance=b,C.farDistance=S),C}function _(y,M,w,b,S){if(y.visible===!1)return;if(y.layers.test(M.layers)&&(y.isMesh||y.isLine||y.isPoints)&&(y.castShadow||y.receiveShadow&&S===qo)&&(!y.frustumCulled||i.intersectsObject(y))){y.modelViewMatrix.multiplyMatrices(w.matrixWorldInverse,y.matrixWorld);const I=e.update(y),W=y.material;if(Array.isArray(W)){const H=I.groups;for(let A=0,q=H.length;A<q;A++){const N=H[A],X=W[N.materialIndex];if(X&&X.visible){const Z=g(y,X,b,w.near,w.far,S);n.renderBufferDirect(w,null,I,Z,y,N)}}}else if(W.visible){const H=g(y,W,b,w.near,w.far,S);n.renderBufferDirect(w,null,I,H,y,null)}}const C=y.children;for(let I=0,W=C.length;I<W;I++)_(C[I],M,w,b,S)}}function pw(n,e,t){const i=t.isWebGL2;function r(){let ie=!1;const He=new Ht;let ve=null;const Ge=new Ht(0,0,0,0);return{setMask:function(Be){ve!==Be&&!ie&&(n.colorMask(Be,Be,Be,Be),ve=Be)},setLocked:function(Be){ie=Be},setClear:function(Be,it,pt,ht,xn){xn===!0&&(Be*=ht,it*=ht,pt*=ht),He.set(Be,it,pt,ht),Ge.equals(He)===!1&&(n.clearColor(Be,it,pt,ht),Ge.copy(He))},reset:function(){ie=!1,ve=null,Ge.set(-1,0,0,0)}}}function s(){let ie=!1,He=null,ve=null,Ge=null;return{setTest:function(Be){Be?Re(2929):Ae(2929)},setMask:function(Be){He!==Be&&!ie&&(n.depthMask(Be),He=Be)},setFunc:function(Be){if(ve!==Be){if(Be)switch(Be){case Wy:n.depthFunc(512);break;case $y:n.depthFunc(519);break;case jy:n.depthFunc(513);break;case yh:n.depthFunc(515);break;case Xy:n.depthFunc(514);break;case Yy:n.depthFunc(518);break;case Zy:n.depthFunc(516);break;case Jy:n.depthFunc(517);break;default:n.depthFunc(515)}else n.depthFunc(515);ve=Be}},setLocked:function(Be){ie=Be},setClear:function(Be){Ge!==Be&&(n.clearDepth(Be),Ge=Be)},reset:function(){ie=!1,He=null,ve=null,Ge=null}}}function a(){let ie=!1,He=null,ve=null,Ge=null,Be=null,it=null,pt=null,ht=null,xn=null;return{setTest:function(bt){ie||(bt?Re(2960):Ae(2960))},setMask:function(bt){He!==bt&&!ie&&(n.stencilMask(bt),He=bt)},setFunc:function(bt,z,he){(ve!==bt||Ge!==z||Be!==he)&&(n.stencilFunc(bt,z,he),ve=bt,Ge=z,Be=he)},setOp:function(bt,z,he){(it!==bt||pt!==z||ht!==he)&&(n.stencilOp(bt,z,he),it=bt,pt=z,ht=he)},setLocked:function(bt){ie=bt},setClear:function(bt){xn!==bt&&(n.clearStencil(bt),xn=bt)},reset:function(){ie=!1,He=null,ve=null,Ge=null,Be=null,it=null,pt=null,ht=null,xn=null}}}const o=new r,l=new s,c=new a,d=new WeakMap,u=new WeakMap;let f={},h={},m=new WeakMap,x=[],p=null,v=!1,g=null,_=null,y=null,M=null,w=null,b=null,S=null,E=!1,C=null,I=null,W=null,H=null,A=null;const q=n.getParameter(35661);let N=!1,X=0;const Z=n.getParameter(7938);Z.indexOf("WebGL")!==-1?(X=parseFloat(/^WebGL (\d)/.exec(Z)[1]),N=X>=1):Z.indexOf("OpenGL ES")!==-1&&(X=parseFloat(/^OpenGL ES (\d)/.exec(Z)[1]),N=X>=2);let $=null,J={};const R=n.getParameter(3088),k=n.getParameter(2978),j=new Ht().fromArray(R),K=new Ht().fromArray(k);function B(ie,He,ve){const Ge=new Uint8Array(4),Be=n.createTexture();n.bindTexture(ie,Be),n.texParameteri(ie,10241,9728),n.texParameteri(ie,10240,9728);for(let it=0;it<ve;it++)n.texImage2D(He+it,0,6408,1,1,0,6408,5121,Ge);return Be}const oe={};oe[3553]=B(3553,3553,1),oe[34067]=B(34067,34069,6),o.setClear(0,0,0,1),l.setClear(1),c.setClear(0),Re(2929),l.setFunc(yh),Pe(!1),U(Op),Re(2884),Ee(br);function Re(ie){f[ie]!==!0&&(n.enable(ie),f[ie]=!0)}function Ae(ie){f[ie]!==!1&&(n.disable(ie),f[ie]=!1)}function pe(ie,He){return h[ie]!==He?(n.bindFramebuffer(ie,He),h[ie]=He,i&&(ie===36009&&(h[36160]=He),ie===36160&&(h[36009]=He)),!0):!1}function _e(ie,He){let ve=x,Ge=!1;if(ie)if(ve=m.get(He),ve===void 0&&(ve=[],m.set(He,ve)),ie.isWebGLMultipleRenderTargets){const Be=ie.texture;if(ve.length!==Be.length||ve[0]!==36064){for(let it=0,pt=Be.length;it<pt;it++)ve[it]=36064+it;ve.length=Be.length,Ge=!0}}else ve[0]!==36064&&(ve[0]=36064,Ge=!0);else ve[0]!==1029&&(ve[0]=1029,Ge=!0);Ge&&(t.isWebGL2?n.drawBuffers(ve):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(ve))}function Ie(ie){return p!==ie?(n.useProgram(ie),p=ie,!0):!1}const me={[Aa]:32774,[Oy]:32778,[zy]:32779};if(i)me[Np]=32775,me[Bp]=32776;else{const ie=e.get("EXT_blend_minmax");ie!==null&&(me[Np]=ie.MIN_EXT,me[Bp]=ie.MAX_EXT)}const xe={[Fy]:0,[qy]:1,[Ny]:768,[x1]:770,[Vy]:776,[ky]:774,[Uy]:772,[By]:769,[g1]:771,[Hy]:775,[Gy]:773};function Ee(ie,He,ve,Ge,Be,it,pt,ht){if(ie===br){v===!0&&(Ae(3042),v=!1);return}if(v===!1&&(Re(3042),v=!0),ie!==Dy){if(ie!==g||ht!==E){if((_!==Aa||w!==Aa)&&(n.blendEquation(32774),_=Aa,w=Aa),ht)switch(ie){case Pa:n.blendFuncSeparate(1,771,1,771);break;case zp:n.blendFunc(1,1);break;case Fp:n.blendFuncSeparate(0,769,0,1);break;case qp:n.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",ie);break}else switch(ie){case Pa:n.blendFuncSeparate(770,771,1,771);break;case zp:n.blendFunc(770,1);break;case Fp:n.blendFuncSeparate(0,769,0,1);break;case qp:n.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",ie);break}y=null,M=null,b=null,S=null,g=ie,E=ht}return}Be=Be||He,it=it||ve,pt=pt||Ge,(He!==_||Be!==w)&&(n.blendEquationSeparate(me[He],me[Be]),_=He,w=Be),(ve!==y||Ge!==M||it!==b||pt!==S)&&(n.blendFuncSeparate(xe[ve],xe[Ge],xe[it],xe[pt]),y=ve,M=Ge,b=it,S=pt),g=ie,E=null}function Fe(ie,He){ie.side===qa?Ae(2884):Re(2884);let ve=ie.side===Qn;He&&(ve=!ve),Pe(ve),ie.blending===Pa&&ie.transparent===!1?Ee(br):Ee(ie.blending,ie.blendEquation,ie.blendSrc,ie.blendDst,ie.blendEquationAlpha,ie.blendSrcAlpha,ie.blendDstAlpha,ie.premultipliedAlpha),l.setFunc(ie.depthFunc),l.setTest(ie.depthTest),l.setMask(ie.depthWrite),o.setMask(ie.colorWrite);const Ge=ie.stencilWrite;c.setTest(Ge),Ge&&(c.setMask(ie.stencilWriteMask),c.setFunc(ie.stencilFunc,ie.stencilRef,ie.stencilFuncMask),c.setOp(ie.stencilFail,ie.stencilZFail,ie.stencilZPass)),be(ie.polygonOffset,ie.polygonOffsetFactor,ie.polygonOffsetUnits),ie.alphaToCoverage===!0?Re(32926):Ae(32926)}function Pe(ie){C!==ie&&(ie?n.frontFace(2304):n.frontFace(2305),C=ie)}function U(ie){ie!==Cy?(Re(2884),ie!==I&&(ie===Op?n.cullFace(1029):ie===Ry?n.cullFace(1028):n.cullFace(1032))):Ae(2884),I=ie}function D(ie){ie!==W&&(N&&n.lineWidth(ie),W=ie)}function be(ie,He,ve){ie?(Re(32823),(H!==He||A!==ve)&&(n.polygonOffset(He,ve),H=He,A=ve)):Ae(32823)}function Me(ie){ie?Re(3089):Ae(3089)}function Y(ie){ie===void 0&&(ie=33984+q-1),$!==ie&&(n.activeTexture(ie),$=ie)}function L(ie,He){$===null&&Y();let ve=J[$];ve===void 0&&(ve={type:void 0,texture:void 0},J[$]=ve),(ve.type!==ie||ve.texture!==He)&&(n.bindTexture(ie,He||oe[ie]),ve.type=ie,ve.texture=He)}function T(){const ie=J[$];ie!==void 0&&ie.type!==void 0&&(n.bindTexture(ie.type,null),ie.type=void 0,ie.texture=void 0)}function ne(){try{n.compressedTexImage2D.apply(n,arguments)}catch(ie){console.error("THREE.WebGLState:",ie)}}function se(){try{n.texSubImage2D.apply(n,arguments)}catch(ie){console.error("THREE.WebGLState:",ie)}}function de(){try{n.texSubImage3D.apply(n,arguments)}catch(ie){console.error("THREE.WebGLState:",ie)}}function ye(){try{n.compressedTexSubImage2D.apply(n,arguments)}catch(ie){console.error("THREE.WebGLState:",ie)}}function De(){try{n.texStorage2D.apply(n,arguments)}catch(ie){console.error("THREE.WebGLState:",ie)}}function Q(){try{n.texStorage3D.apply(n,arguments)}catch(ie){console.error("THREE.WebGLState:",ie)}}function Te(){try{n.texImage2D.apply(n,arguments)}catch(ie){console.error("THREE.WebGLState:",ie)}}function Ce(){try{n.texImage3D.apply(n,arguments)}catch(ie){console.error("THREE.WebGLState:",ie)}}function Ne(ie){j.equals(ie)===!1&&(n.scissor(ie.x,ie.y,ie.z,ie.w),j.copy(ie))}function ke(ie){K.equals(ie)===!1&&(n.viewport(ie.x,ie.y,ie.z,ie.w),K.copy(ie))}function et(ie,He){let ve=u.get(He);ve===void 0&&(ve=new WeakMap,u.set(He,ve));let Ge=ve.get(ie);Ge===void 0&&(Ge=n.getUniformBlockIndex(He,ie.name),ve.set(ie,Ge))}function dt(ie,He){const Ge=u.get(He).get(ie);d.get(ie)!==Ge&&(n.uniformBlockBinding(He,Ge,ie.__bindingPointIndex),d.set(ie,Ge))}function wt(){n.disable(3042),n.disable(2884),n.disable(2929),n.disable(32823),n.disable(3089),n.disable(2960),n.disable(32926),n.blendEquation(32774),n.blendFunc(1,0),n.blendFuncSeparate(1,0,1,0),n.colorMask(!0,!0,!0,!0),n.clearColor(0,0,0,0),n.depthMask(!0),n.depthFunc(513),n.clearDepth(1),n.stencilMask(4294967295),n.stencilFunc(519,0,4294967295),n.stencilOp(7680,7680,7680),n.clearStencil(0),n.cullFace(1029),n.frontFace(2305),n.polygonOffset(0,0),n.activeTexture(33984),n.bindFramebuffer(36160,null),i===!0&&(n.bindFramebuffer(36009,null),n.bindFramebuffer(36008,null)),n.useProgram(null),n.lineWidth(1),n.scissor(0,0,n.canvas.width,n.canvas.height),n.viewport(0,0,n.canvas.width,n.canvas.height),f={},$=null,J={},h={},m=new WeakMap,x=[],p=null,v=!1,g=null,_=null,y=null,M=null,w=null,b=null,S=null,E=!1,C=null,I=null,W=null,H=null,A=null,j.set(0,0,n.canvas.width,n.canvas.height),K.set(0,0,n.canvas.width,n.canvas.height),o.reset(),l.reset(),c.reset()}return{buffers:{color:o,depth:l,stencil:c},enable:Re,disable:Ae,bindFramebuffer:pe,drawBuffers:_e,useProgram:Ie,setBlending:Ee,setMaterial:Fe,setFlipSided:Pe,setCullFace:U,setLineWidth:D,setPolygonOffset:be,setScissorTest:Me,activeTexture:Y,bindTexture:L,unbindTexture:T,compressedTexImage2D:ne,texImage2D:Te,texImage3D:Ce,updateUBOMapping:et,uniformBlockBinding:dt,texStorage2D:De,texStorage3D:Q,texSubImage2D:se,texSubImage3D:de,compressedTexSubImage2D:ye,scissor:Ne,viewport:ke,reset:wt}}function mw(n,e,t,i,r,s,a){const o=r.isWebGL2,l=r.maxTextures,c=r.maxCubemapSize,d=r.maxTextureSize,u=r.maxSamples,f=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,h=/OculusBrowser/g.test(navigator.userAgent),m=new WeakMap;let x;const p=new WeakMap;let v=!1;try{v=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function g(L,T){return v?new OffscreenCanvas(L,T):Td("canvas")}function _(L,T,ne,se){let de=1;if((L.width>se||L.height>se)&&(de=se/Math.max(L.width,L.height)),de<1||T===!0)if(typeof HTMLImageElement<"u"&&L instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&L instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&L instanceof ImageBitmap){const ye=T?Eh:Math.floor,De=ye(de*L.width),Q=ye(de*L.height);x===void 0&&(x=g(De,Q));const Te=ne?g(De,Q):x;return Te.width=De,Te.height=Q,Te.getContext("2d").drawImage(L,0,0,De,Q),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+L.width+"x"+L.height+") to ("+De+"x"+Q+")."),Te}else return"data"in L&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+L.width+"x"+L.height+")."),L;return L}function y(L){return fm(L.width)&&fm(L.height)}function M(L){return o?!1:L.wrapS!==Jn||L.wrapT!==Jn||L.minFilter!==hn&&L.minFilter!==In}function w(L,T){return L.generateMipmaps&&T&&L.minFilter!==hn&&L.minFilter!==In}function b(L){n.generateMipmap(L)}function S(L,T,ne,se,de=!1){if(o===!1)return T;if(L!==null){if(n[L]!==void 0)return n[L];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+L+"'")}let ye=T;return T===6403&&(ne===5126&&(ye=33326),ne===5131&&(ye=33325),ne===5121&&(ye=33321)),T===33319&&(ne===5126&&(ye=33328),ne===5131&&(ye=33327),ne===5121&&(ye=33323)),T===6408&&(ne===5126&&(ye=34836),ne===5131&&(ye=34842),ne===5121&&(ye=se===It&&de===!1?35907:32856),ne===32819&&(ye=32854),ne===32820&&(ye=32855)),(ye===33325||ye===33326||ye===33327||ye===33328||ye===34842||ye===34836)&&e.get("EXT_color_buffer_float"),ye}function E(L,T,ne){return w(L,ne)===!0||L.isFramebufferTexture&&L.minFilter!==hn&&L.minFilter!==In?Math.log2(Math.max(T.width,T.height))+1:L.mipmaps!==void 0&&L.mipmaps.length>0?L.mipmaps.length:L.isCompressedTexture&&Array.isArray(L.image)?T.mipmaps.length:1}function C(L){return L===hn||L===Up||L===Gp?9728:9729}function I(L){const T=L.target;T.removeEventListener("dispose",I),H(T),T.isVideoTexture&&m.delete(T)}function W(L){const T=L.target;T.removeEventListener("dispose",W),q(T)}function H(L){const T=i.get(L);if(T.__webglInit===void 0)return;const ne=L.source,se=p.get(ne);if(se){const de=se[T.__cacheKey];de.usedTimes--,de.usedTimes===0&&A(L),Object.keys(se).length===0&&p.delete(ne)}i.remove(L)}function A(L){const T=i.get(L);n.deleteTexture(T.__webglTexture);const ne=L.source,se=p.get(ne);delete se[T.__cacheKey],a.memory.textures--}function q(L){const T=L.texture,ne=i.get(L),se=i.get(T);if(se.__webglTexture!==void 0&&(n.deleteTexture(se.__webglTexture),a.memory.textures--),L.depthTexture&&L.depthTexture.dispose(),L.isWebGLCubeRenderTarget)for(let de=0;de<6;de++)n.deleteFramebuffer(ne.__webglFramebuffer[de]),ne.__webglDepthbuffer&&n.deleteRenderbuffer(ne.__webglDepthbuffer[de]);else{if(n.deleteFramebuffer(ne.__webglFramebuffer),ne.__webglDepthbuffer&&n.deleteRenderbuffer(ne.__webglDepthbuffer),ne.__webglMultisampledFramebuffer&&n.deleteFramebuffer(ne.__webglMultisampledFramebuffer),ne.__webglColorRenderbuffer)for(let de=0;de<ne.__webglColorRenderbuffer.length;de++)ne.__webglColorRenderbuffer[de]&&n.deleteRenderbuffer(ne.__webglColorRenderbuffer[de]);ne.__webglDepthRenderbuffer&&n.deleteRenderbuffer(ne.__webglDepthRenderbuffer)}if(L.isWebGLMultipleRenderTargets)for(let de=0,ye=T.length;de<ye;de++){const De=i.get(T[de]);De.__webglTexture&&(n.deleteTexture(De.__webglTexture),a.memory.textures--),i.remove(T[de])}i.remove(T),i.remove(L)}let N=0;function X(){N=0}function Z(){const L=N;return L>=l&&console.warn("THREE.WebGLTextures: Trying to use "+L+" texture units while this GPU supports only "+l),N+=1,L}function $(L){const T=[];return T.push(L.wrapS),T.push(L.wrapT),T.push(L.magFilter),T.push(L.minFilter),T.push(L.anisotropy),T.push(L.internalFormat),T.push(L.format),T.push(L.type),T.push(L.generateMipmaps),T.push(L.premultiplyAlpha),T.push(L.flipY),T.push(L.unpackAlignment),T.push(L.encoding),T.join()}function J(L,T){const ne=i.get(L);if(L.isVideoTexture&&Me(L),L.isRenderTargetTexture===!1&&L.version>0&&ne.__version!==L.version){const se=L.image;if(se===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(se.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Ae(ne,L,T);return}}t.activeTexture(33984+T),t.bindTexture(3553,ne.__webglTexture)}function R(L,T){const ne=i.get(L);if(L.version>0&&ne.__version!==L.version){Ae(ne,L,T);return}t.activeTexture(33984+T),t.bindTexture(35866,ne.__webglTexture)}function k(L,T){const ne=i.get(L);if(L.version>0&&ne.__version!==L.version){Ae(ne,L,T);return}t.activeTexture(33984+T),t.bindTexture(32879,ne.__webglTexture)}function j(L,T){const ne=i.get(L);if(L.version>0&&ne.__version!==L.version){pe(ne,L,T);return}t.activeTexture(33984+T),t.bindTexture(34067,ne.__webglTexture)}const K={[wh]:10497,[Jn]:33071,[Mh]:33648},B={[hn]:9728,[Up]:9984,[Gp]:9986,[In]:9729,[sb]:9985,[mu]:9987};function oe(L,T,ne){if(ne?(n.texParameteri(L,10242,K[T.wrapS]),n.texParameteri(L,10243,K[T.wrapT]),(L===32879||L===35866)&&n.texParameteri(L,32882,K[T.wrapR]),n.texParameteri(L,10240,B[T.magFilter]),n.texParameteri(L,10241,B[T.minFilter])):(n.texParameteri(L,10242,33071),n.texParameteri(L,10243,33071),(L===32879||L===35866)&&n.texParameteri(L,32882,33071),(T.wrapS!==Jn||T.wrapT!==Jn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),n.texParameteri(L,10240,C(T.magFilter)),n.texParameteri(L,10241,C(T.minFilter)),T.minFilter!==hn&&T.minFilter!==In&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const se=e.get("EXT_texture_filter_anisotropic");if(T.type===as&&e.has("OES_texture_float_linear")===!1||o===!1&&T.type===Zo&&e.has("OES_texture_half_float_linear")===!1)return;(T.anisotropy>1||i.get(T).__currentAnisotropy)&&(n.texParameterf(L,se.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(T.anisotropy,r.getMaxAnisotropy())),i.get(T).__currentAnisotropy=T.anisotropy)}}function Re(L,T){let ne=!1;L.__webglInit===void 0&&(L.__webglInit=!0,T.addEventListener("dispose",I));const se=T.source;let de=p.get(se);de===void 0&&(de={},p.set(se,de));const ye=$(T);if(ye!==L.__cacheKey){de[ye]===void 0&&(de[ye]={texture:n.createTexture(),usedTimes:0},a.memory.textures++,ne=!0),de[ye].usedTimes++;const De=de[L.__cacheKey];De!==void 0&&(de[L.__cacheKey].usedTimes--,De.usedTimes===0&&A(T)),L.__cacheKey=ye,L.__webglTexture=de[ye].texture}return ne}function Ae(L,T,ne){let se=3553;T.isDataArrayTexture&&(se=35866),T.isData3DTexture&&(se=32879);const de=Re(L,T),ye=T.source;if(t.activeTexture(33984+ne),t.bindTexture(se,L.__webglTexture),ye.version!==ye.__currentVersion||de===!0){n.pixelStorei(37440,T.flipY),n.pixelStorei(37441,T.premultiplyAlpha),n.pixelStorei(3317,T.unpackAlignment),n.pixelStorei(37443,0);const De=M(T)&&y(T.image)===!1;let Q=_(T.image,De,!1,d);Q=Y(T,Q);const Te=y(Q)||o,Ce=s.convert(T.format,T.encoding);let Ne=s.convert(T.type),ke=S(T.internalFormat,Ce,Ne,T.encoding,T.isVideoTexture);oe(se,T,Te);let et;const dt=T.mipmaps,wt=o&&T.isVideoTexture!==!0,ie=ye.__currentVersion===void 0||de===!0,He=E(T,Q,Te);if(T.isDepthTexture)ke=6402,o?T.type===as?ke=36012:T.type===ss?ke=33190:T.type===Ia?ke=35056:ke=33189:T.type===as&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),T.format===us&&ke===6402&&T.type!==y1&&T.type!==ss&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),T.type=ss,Ne=s.convert(T.type)),T.format===Ua&&ke===6402&&(ke=34041,T.type!==Ia&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),T.type=Ia,Ne=s.convert(T.type))),ie&&(wt?t.texStorage2D(3553,1,ke,Q.width,Q.height):t.texImage2D(3553,0,ke,Q.width,Q.height,0,Ce,Ne,null));else if(T.isDataTexture)if(dt.length>0&&Te){wt&&ie&&t.texStorage2D(3553,He,ke,dt[0].width,dt[0].height);for(let ve=0,Ge=dt.length;ve<Ge;ve++)et=dt[ve],wt?t.texSubImage2D(3553,ve,0,0,et.width,et.height,Ce,Ne,et.data):t.texImage2D(3553,ve,ke,et.width,et.height,0,Ce,Ne,et.data);T.generateMipmaps=!1}else wt?(ie&&t.texStorage2D(3553,He,ke,Q.width,Q.height),t.texSubImage2D(3553,0,0,0,Q.width,Q.height,Ce,Ne,Q.data)):t.texImage2D(3553,0,ke,Q.width,Q.height,0,Ce,Ne,Q.data);else if(T.isCompressedTexture){wt&&ie&&t.texStorage2D(3553,He,ke,dt[0].width,dt[0].height);for(let ve=0,Ge=dt.length;ve<Ge;ve++)et=dt[ve],T.format!==hi?Ce!==null?wt?t.compressedTexSubImage2D(3553,ve,0,0,et.width,et.height,Ce,et.data):t.compressedTexImage2D(3553,ve,ke,et.width,et.height,0,et.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):wt?t.texSubImage2D(3553,ve,0,0,et.width,et.height,Ce,Ne,et.data):t.texImage2D(3553,ve,ke,et.width,et.height,0,Ce,Ne,et.data)}else if(T.isDataArrayTexture)wt?(ie&&t.texStorage3D(35866,He,ke,Q.width,Q.height,Q.depth),t.texSubImage3D(35866,0,0,0,0,Q.width,Q.height,Q.depth,Ce,Ne,Q.data)):t.texImage3D(35866,0,ke,Q.width,Q.height,Q.depth,0,Ce,Ne,Q.data);else if(T.isData3DTexture)wt?(ie&&t.texStorage3D(32879,He,ke,Q.width,Q.height,Q.depth),t.texSubImage3D(32879,0,0,0,0,Q.width,Q.height,Q.depth,Ce,Ne,Q.data)):t.texImage3D(32879,0,ke,Q.width,Q.height,Q.depth,0,Ce,Ne,Q.data);else if(T.isFramebufferTexture){if(ie)if(wt)t.texStorage2D(3553,He,ke,Q.width,Q.height);else{let ve=Q.width,Ge=Q.height;for(let Be=0;Be<He;Be++)t.texImage2D(3553,Be,ke,ve,Ge,0,Ce,Ne,null),ve>>=1,Ge>>=1}}else if(dt.length>0&&Te){wt&&ie&&t.texStorage2D(3553,He,ke,dt[0].width,dt[0].height);for(let ve=0,Ge=dt.length;ve<Ge;ve++)et=dt[ve],wt?t.texSubImage2D(3553,ve,0,0,Ce,Ne,et):t.texImage2D(3553,ve,ke,Ce,Ne,et);T.generateMipmaps=!1}else wt?(ie&&t.texStorage2D(3553,He,ke,Q.width,Q.height),t.texSubImage2D(3553,0,0,0,Ce,Ne,Q)):t.texImage2D(3553,0,ke,Ce,Ne,Q);w(T,Te)&&b(se),ye.__currentVersion=ye.version,T.onUpdate&&T.onUpdate(T)}L.__version=T.version}function pe(L,T,ne){if(T.image.length!==6)return;const se=Re(L,T),de=T.source;if(t.activeTexture(33984+ne),t.bindTexture(34067,L.__webglTexture),de.version!==de.__currentVersion||se===!0){n.pixelStorei(37440,T.flipY),n.pixelStorei(37441,T.premultiplyAlpha),n.pixelStorei(3317,T.unpackAlignment),n.pixelStorei(37443,0);const ye=T.isCompressedTexture||T.image[0].isCompressedTexture,De=T.image[0]&&T.image[0].isDataTexture,Q=[];for(let ve=0;ve<6;ve++)!ye&&!De?Q[ve]=_(T.image[ve],!1,!0,c):Q[ve]=De?T.image[ve].image:T.image[ve],Q[ve]=Y(T,Q[ve]);const Te=Q[0],Ce=y(Te)||o,Ne=s.convert(T.format,T.encoding),ke=s.convert(T.type),et=S(T.internalFormat,Ne,ke,T.encoding),dt=o&&T.isVideoTexture!==!0,wt=de.__currentVersion===void 0||se===!0;let ie=E(T,Te,Ce);oe(34067,T,Ce);let He;if(ye){dt&&wt&&t.texStorage2D(34067,ie,et,Te.width,Te.height);for(let ve=0;ve<6;ve++){He=Q[ve].mipmaps;for(let Ge=0;Ge<He.length;Ge++){const Be=He[Ge];T.format!==hi?Ne!==null?dt?t.compressedTexSubImage2D(34069+ve,Ge,0,0,Be.width,Be.height,Ne,Be.data):t.compressedTexImage2D(34069+ve,Ge,et,Be.width,Be.height,0,Be.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):dt?t.texSubImage2D(34069+ve,Ge,0,0,Be.width,Be.height,Ne,ke,Be.data):t.texImage2D(34069+ve,Ge,et,Be.width,Be.height,0,Ne,ke,Be.data)}}}else{He=T.mipmaps,dt&&wt&&(He.length>0&&ie++,t.texStorage2D(34067,ie,et,Q[0].width,Q[0].height));for(let ve=0;ve<6;ve++)if(De){dt?t.texSubImage2D(34069+ve,0,0,0,Q[ve].width,Q[ve].height,Ne,ke,Q[ve].data):t.texImage2D(34069+ve,0,et,Q[ve].width,Q[ve].height,0,Ne,ke,Q[ve].data);for(let Ge=0;Ge<He.length;Ge++){const it=He[Ge].image[ve].image;dt?t.texSubImage2D(34069+ve,Ge+1,0,0,it.width,it.height,Ne,ke,it.data):t.texImage2D(34069+ve,Ge+1,et,it.width,it.height,0,Ne,ke,it.data)}}else{dt?t.texSubImage2D(34069+ve,0,0,0,Ne,ke,Q[ve]):t.texImage2D(34069+ve,0,et,Ne,ke,Q[ve]);for(let Ge=0;Ge<He.length;Ge++){const Be=He[Ge];dt?t.texSubImage2D(34069+ve,Ge+1,0,0,Ne,ke,Be.image[ve]):t.texImage2D(34069+ve,Ge+1,et,Ne,ke,Be.image[ve])}}}w(T,Ce)&&b(34067),de.__currentVersion=de.version,T.onUpdate&&T.onUpdate(T)}L.__version=T.version}function _e(L,T,ne,se,de){const ye=s.convert(ne.format,ne.encoding),De=s.convert(ne.type),Q=S(ne.internalFormat,ye,De,ne.encoding);i.get(T).__hasExternalTextures||(de===32879||de===35866?t.texImage3D(de,0,Q,T.width,T.height,T.depth,0,ye,De,null):t.texImage2D(de,0,Q,T.width,T.height,0,ye,De,null)),t.bindFramebuffer(36160,L),be(T)?f.framebufferTexture2DMultisampleEXT(36160,se,de,i.get(ne).__webglTexture,0,D(T)):n.framebufferTexture2D(36160,se,de,i.get(ne).__webglTexture,0),t.bindFramebuffer(36160,null)}function Ie(L,T,ne){if(n.bindRenderbuffer(36161,L),T.depthBuffer&&!T.stencilBuffer){let se=33189;if(ne||be(T)){const de=T.depthTexture;de&&de.isDepthTexture&&(de.type===as?se=36012:de.type===ss&&(se=33190));const ye=D(T);be(T)?f.renderbufferStorageMultisampleEXT(36161,ye,se,T.width,T.height):n.renderbufferStorageMultisample(36161,ye,se,T.width,T.height)}else n.renderbufferStorage(36161,se,T.width,T.height);n.framebufferRenderbuffer(36160,36096,36161,L)}else if(T.depthBuffer&&T.stencilBuffer){const se=D(T);ne&&be(T)===!1?n.renderbufferStorageMultisample(36161,se,35056,T.width,T.height):be(T)?f.renderbufferStorageMultisampleEXT(36161,se,35056,T.width,T.height):n.renderbufferStorage(36161,34041,T.width,T.height),n.framebufferRenderbuffer(36160,33306,36161,L)}else{const se=T.isWebGLMultipleRenderTargets===!0?T.texture:[T.texture];for(let de=0;de<se.length;de++){const ye=se[de],De=s.convert(ye.format,ye.encoding),Q=s.convert(ye.type),Te=S(ye.internalFormat,De,Q,ye.encoding),Ce=D(T);ne&&be(T)===!1?n.renderbufferStorageMultisample(36161,Ce,Te,T.width,T.height):be(T)?f.renderbufferStorageMultisampleEXT(36161,Ce,Te,T.width,T.height):n.renderbufferStorage(36161,Te,T.width,T.height)}}n.bindRenderbuffer(36161,null)}function me(L,T){if(T&&T.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,L),!(T.depthTexture&&T.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(T.depthTexture).__webglTexture||T.depthTexture.image.width!==T.width||T.depthTexture.image.height!==T.height)&&(T.depthTexture.image.width=T.width,T.depthTexture.image.height=T.height,T.depthTexture.needsUpdate=!0),J(T.depthTexture,0);const se=i.get(T.depthTexture).__webglTexture,de=D(T);if(T.depthTexture.format===us)be(T)?f.framebufferTexture2DMultisampleEXT(36160,36096,3553,se,0,de):n.framebufferTexture2D(36160,36096,3553,se,0);else if(T.depthTexture.format===Ua)be(T)?f.framebufferTexture2DMultisampleEXT(36160,33306,3553,se,0,de):n.framebufferTexture2D(36160,33306,3553,se,0);else throw new Error("Unknown depthTexture format")}function xe(L){const T=i.get(L),ne=L.isWebGLCubeRenderTarget===!0;if(L.depthTexture&&!T.__autoAllocateDepthBuffer){if(ne)throw new Error("target.depthTexture not supported in Cube render targets");me(T.__webglFramebuffer,L)}else if(ne){T.__webglDepthbuffer=[];for(let se=0;se<6;se++)t.bindFramebuffer(36160,T.__webglFramebuffer[se]),T.__webglDepthbuffer[se]=n.createRenderbuffer(),Ie(T.__webglDepthbuffer[se],L,!1)}else t.bindFramebuffer(36160,T.__webglFramebuffer),T.__webglDepthbuffer=n.createRenderbuffer(),Ie(T.__webglDepthbuffer,L,!1);t.bindFramebuffer(36160,null)}function Ee(L,T,ne){const se=i.get(L);T!==void 0&&_e(se.__webglFramebuffer,L,L.texture,36064,3553),ne!==void 0&&xe(L)}function Fe(L){const T=L.texture,ne=i.get(L),se=i.get(T);L.addEventListener("dispose",W),L.isWebGLMultipleRenderTargets!==!0&&(se.__webglTexture===void 0&&(se.__webglTexture=n.createTexture()),se.__version=T.version,a.memory.textures++);const de=L.isWebGLCubeRenderTarget===!0,ye=L.isWebGLMultipleRenderTargets===!0,De=y(L)||o;if(de){ne.__webglFramebuffer=[];for(let Q=0;Q<6;Q++)ne.__webglFramebuffer[Q]=n.createFramebuffer()}else{if(ne.__webglFramebuffer=n.createFramebuffer(),ye)if(r.drawBuffers){const Q=L.texture;for(let Te=0,Ce=Q.length;Te<Ce;Te++){const Ne=i.get(Q[Te]);Ne.__webglTexture===void 0&&(Ne.__webglTexture=n.createTexture(),a.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(o&&L.samples>0&&be(L)===!1){const Q=ye?T:[T];ne.__webglMultisampledFramebuffer=n.createFramebuffer(),ne.__webglColorRenderbuffer=[],t.bindFramebuffer(36160,ne.__webglMultisampledFramebuffer);for(let Te=0;Te<Q.length;Te++){const Ce=Q[Te];ne.__webglColorRenderbuffer[Te]=n.createRenderbuffer(),n.bindRenderbuffer(36161,ne.__webglColorRenderbuffer[Te]);const Ne=s.convert(Ce.format,Ce.encoding),ke=s.convert(Ce.type),et=S(Ce.internalFormat,Ne,ke,Ce.encoding),dt=D(L);n.renderbufferStorageMultisample(36161,dt,et,L.width,L.height),n.framebufferRenderbuffer(36160,36064+Te,36161,ne.__webglColorRenderbuffer[Te])}n.bindRenderbuffer(36161,null),L.depthBuffer&&(ne.__webglDepthRenderbuffer=n.createRenderbuffer(),Ie(ne.__webglDepthRenderbuffer,L,!0)),t.bindFramebuffer(36160,null)}}if(de){t.bindTexture(34067,se.__webglTexture),oe(34067,T,De);for(let Q=0;Q<6;Q++)_e(ne.__webglFramebuffer[Q],L,T,36064,34069+Q);w(T,De)&&b(34067),t.unbindTexture()}else if(ye){const Q=L.texture;for(let Te=0,Ce=Q.length;Te<Ce;Te++){const Ne=Q[Te],ke=i.get(Ne);t.bindTexture(3553,ke.__webglTexture),oe(3553,Ne,De),_e(ne.__webglFramebuffer,L,Ne,36064+Te,3553),w(Ne,De)&&b(3553)}t.unbindTexture()}else{let Q=3553;(L.isWebGL3DRenderTarget||L.isWebGLArrayRenderTarget)&&(o?Q=L.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(Q,se.__webglTexture),oe(Q,T,De),_e(ne.__webglFramebuffer,L,T,36064,Q),w(T,De)&&b(Q),t.unbindTexture()}L.depthBuffer&&xe(L)}function Pe(L){const T=y(L)||o,ne=L.isWebGLMultipleRenderTargets===!0?L.texture:[L.texture];for(let se=0,de=ne.length;se<de;se++){const ye=ne[se];if(w(ye,T)){const De=L.isWebGLCubeRenderTarget?34067:3553,Q=i.get(ye).__webglTexture;t.bindTexture(De,Q),b(De),t.unbindTexture()}}}function U(L){if(o&&L.samples>0&&be(L)===!1){const T=L.isWebGLMultipleRenderTargets?L.texture:[L.texture],ne=L.width,se=L.height;let de=16384;const ye=[],De=L.stencilBuffer?33306:36096,Q=i.get(L),Te=L.isWebGLMultipleRenderTargets===!0;if(Te)for(let Ce=0;Ce<T.length;Ce++)t.bindFramebuffer(36160,Q.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(36160,36064+Ce,36161,null),t.bindFramebuffer(36160,Q.__webglFramebuffer),n.framebufferTexture2D(36009,36064+Ce,3553,null,0);t.bindFramebuffer(36008,Q.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,Q.__webglFramebuffer);for(let Ce=0;Ce<T.length;Ce++){ye.push(36064+Ce),L.depthBuffer&&ye.push(De);const Ne=Q.__ignoreDepthValues!==void 0?Q.__ignoreDepthValues:!1;if(Ne===!1&&(L.depthBuffer&&(de|=256),L.stencilBuffer&&(de|=1024)),Te&&n.framebufferRenderbuffer(36008,36064,36161,Q.__webglColorRenderbuffer[Ce]),Ne===!0&&(n.invalidateFramebuffer(36008,[De]),n.invalidateFramebuffer(36009,[De])),Te){const ke=i.get(T[Ce]).__webglTexture;n.framebufferTexture2D(36009,36064,3553,ke,0)}n.blitFramebuffer(0,0,ne,se,0,0,ne,se,de,9728),h&&n.invalidateFramebuffer(36008,ye)}if(t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,null),Te)for(let Ce=0;Ce<T.length;Ce++){t.bindFramebuffer(36160,Q.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(36160,36064+Ce,36161,Q.__webglColorRenderbuffer[Ce]);const Ne=i.get(T[Ce]).__webglTexture;t.bindFramebuffer(36160,Q.__webglFramebuffer),n.framebufferTexture2D(36009,36064+Ce,3553,Ne,0)}t.bindFramebuffer(36009,Q.__webglMultisampledFramebuffer)}}function D(L){return Math.min(u,L.samples)}function be(L){const T=i.get(L);return o&&L.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&T.__useRenderToTexture!==!1}function Me(L){const T=a.render.frame;m.get(L)!==T&&(m.set(L,T),L.update())}function Y(L,T){const ne=L.encoding,se=L.format,de=L.type;return L.isCompressedTexture===!0||L.isVideoTexture===!0||L.format===Sh||ne!==vs&&(ne===It?o===!1?e.has("EXT_sRGB")===!0&&se===hi?(L.format=Sh,L.minFilter=In,L.generateMipmaps=!1):T=M1.sRGBToLinear(T):(se!==hi||de!==gs)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",ne)),T}this.allocateTextureUnit=Z,this.resetTextureUnits=X,this.setTexture2D=J,this.setTexture2DArray=R,this.setTexture3D=k,this.setTextureCube=j,this.rebindTextures=Ee,this.setupRenderTarget=Fe,this.updateRenderTargetMipmap=Pe,this.updateMultisampleRenderTarget=U,this.setupDepthRenderbuffer=xe,this.setupFrameBufferTexture=_e,this.useMultisampledRTT=be}function xw(n,e,t){const i=t.isWebGL2;function r(s,a=null){let o;if(s===gs)return 5121;if(s===lb)return 32819;if(s===db)return 32820;if(s===ab)return 5120;if(s===ob)return 5122;if(s===y1)return 5123;if(s===cb)return 5124;if(s===ss)return 5125;if(s===as)return 5126;if(s===Zo)return i?5131:(o=e.get("OES_texture_half_float"),o!==null?o.HALF_FLOAT_OES:null);if(s===ub)return 6406;if(s===hi)return 6408;if(s===hb)return 6409;if(s===pb)return 6410;if(s===us)return 6402;if(s===Ua)return 34041;if(s===mb)return 6403;if(s===fb)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(s===Sh)return o=e.get("EXT_sRGB"),o!==null?o.SRGB_ALPHA_EXT:null;if(s===xb)return 36244;if(s===gb)return 33319;if(s===vb)return 33320;if(s===yb)return 36249;if(s===Iu||s===Du||s===Ou||s===zu)if(a===It)if(o=e.get("WEBGL_compressed_texture_s3tc_srgb"),o!==null){if(s===Iu)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===Du)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===Ou)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===zu)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(o=e.get("WEBGL_compressed_texture_s3tc"),o!==null){if(s===Iu)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===Du)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===Ou)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===zu)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===kp||s===Hp||s===Vp||s===Wp)if(o=e.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(s===kp)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===Hp)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===Vp)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===Wp)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===bb)return o=e.get("WEBGL_compressed_texture_etc1"),o!==null?o.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===$p||s===jp)if(o=e.get("WEBGL_compressed_texture_etc"),o!==null){if(s===$p)return a===It?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(s===jp)return a===It?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===Xp||s===Yp||s===Zp||s===Jp||s===Kp||s===Qp||s===em||s===tm||s===nm||s===im||s===rm||s===sm||s===am||s===om)if(o=e.get("WEBGL_compressed_texture_astc"),o!==null){if(s===Xp)return a===It?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===Yp)return a===It?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===Zp)return a===It?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===Jp)return a===It?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===Kp)return a===It?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===Qp)return a===It?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===em)return a===It?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===tm)return a===It?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===nm)return a===It?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===im)return a===It?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===rm)return a===It?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===sm)return a===It?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===am)return a===It?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===om)return a===It?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===cm)if(o=e.get("EXT_texture_compression_bptc"),o!==null){if(s===cm)return a===It?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;return s===Ia?i?34042:(o=e.get("WEBGL_depth_texture"),o!==null?o.UNSIGNED_INT_24_8_WEBGL:null):n[s]!==void 0?n[s]:null}return{convert:r}}class gw extends Dn{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class Bo extends Fn{constructor(){super(),this.isGroup=!0,this.type="Group"}}const vw={type:"move"};class uf{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Bo,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Bo,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new ce,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new ce),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Bo,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new ce,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new ce),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,i){let r=null,s=null,a=null;const o=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(c&&e.hand){a=!0;for(const x of e.hand.values()){const p=t.getJointPose(x,i);if(c.joints[x.jointName]===void 0){const g=new Bo;g.matrixAutoUpdate=!1,g.visible=!1,c.joints[x.jointName]=g,c.add(g)}const v=c.joints[x.jointName];p!==null&&(v.matrix.fromArray(p.transform.matrix),v.matrix.decompose(v.position,v.rotation,v.scale),v.jointRadius=p.radius),v.visible=p!==null}const d=c.joints["index-finger-tip"],u=c.joints["thumb-tip"],f=d.position.distanceTo(u.position),h=.02,m=.005;c.inputState.pinching&&f>h+m?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&f<=h-m&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,i),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));o!==null&&(r=t.getPose(e.targetRaySpace,i),r===null&&s!==null&&(r=s),r!==null&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(vw)))}return o!==null&&(o.visible=r!==null),l!==null&&(l.visible=s!==null),c!==null&&(c.visible=a!==null),this}}class yw extends ei{constructor(e,t,i,r,s,a,o,l,c,d){if(d=d!==void 0?d:us,d!==us&&d!==Ua)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");i===void 0&&d===us&&(i=ss),i===void 0&&d===Ua&&(i=Ia),super(null,r,s,a,o,l,d,i,c),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=o!==void 0?o:hn,this.minFilter=l!==void 0?l:hn,this.flipY=!1,this.generateMipmaps=!1}}class bw extends io{constructor(e,t){super();const i=this;let r=null,s=1,a=null,o="local-floor",l=null,c=null,d=null,u=null,f=null,h=null;const m=t.getContextAttributes();let x=null,p=null;const v=[],g=[],_=new Dn;_.layers.enable(1),_.viewport=new Ht;const y=new Dn;y.layers.enable(2),y.viewport=new Ht;const M=[_,y],w=new gw;w.layers.enable(1),w.layers.enable(2);let b=null,S=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function($){let J=v[$];return J===void 0&&(J=new uf,v[$]=J),J.getTargetRaySpace()},this.getControllerGrip=function($){let J=v[$];return J===void 0&&(J=new uf,v[$]=J),J.getGripSpace()},this.getHand=function($){let J=v[$];return J===void 0&&(J=new uf,v[$]=J),J.getHandSpace()};function E($){const J=g.indexOf($.inputSource);if(J===-1)return;const R=v[J];R!==void 0&&R.dispatchEvent({type:$.type,data:$.inputSource})}function C(){r.removeEventListener("select",E),r.removeEventListener("selectstart",E),r.removeEventListener("selectend",E),r.removeEventListener("squeeze",E),r.removeEventListener("squeezestart",E),r.removeEventListener("squeezeend",E),r.removeEventListener("end",C),r.removeEventListener("inputsourceschange",I);for(let $=0;$<v.length;$++){const J=g[$];J!==null&&(g[$]=null,v[$].disconnect(J))}b=null,S=null,e.setRenderTarget(x),f=null,u=null,d=null,r=null,p=null,Z.stop(),i.isPresenting=!1,i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function($){s=$,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function($){o=$,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||a},this.setReferenceSpace=function($){l=$},this.getBaseLayer=function(){return u!==null?u:f},this.getBinding=function(){return d},this.getFrame=function(){return h},this.getSession=function(){return r},this.setSession=async function($){if(r=$,r!==null){if(x=e.getRenderTarget(),r.addEventListener("select",E),r.addEventListener("selectstart",E),r.addEventListener("selectend",E),r.addEventListener("squeeze",E),r.addEventListener("squeezestart",E),r.addEventListener("squeezeend",E),r.addEventListener("end",C),r.addEventListener("inputsourceschange",I),m.xrCompatible!==!0&&await t.makeXRCompatible(),r.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const J={antialias:r.renderState.layers===void 0?m.antialias:!0,alpha:m.alpha,depth:m.depth,stencil:m.stencil,framebufferScaleFactor:s};f=new XRWebGLLayer(r,t,J),r.updateRenderState({baseLayer:f}),p=new ys(f.framebufferWidth,f.framebufferHeight,{format:hi,type:gs,encoding:e.outputEncoding})}else{let J=null,R=null,k=null;m.depth&&(k=m.stencil?35056:33190,J=m.stencil?Ua:us,R=m.stencil?Ia:ss);const j={colorFormat:32856,depthFormat:k,scaleFactor:s};d=new XRWebGLBinding(r,t),u=d.createProjectionLayer(j),r.updateRenderState({layers:[u]}),p=new ys(u.textureWidth,u.textureHeight,{format:hi,type:gs,depthTexture:new yw(u.textureWidth,u.textureHeight,R,void 0,void 0,void 0,void 0,void 0,void 0,J),stencilBuffer:m.stencil,encoding:e.outputEncoding,samples:m.antialias?4:0});const K=e.properties.get(p);K.__ignoreDepthValues=u.ignoreDepthValues}p.isXRRenderTarget=!0,this.setFoveation(1),l=null,a=await r.requestReferenceSpace(o),Z.setContext(r),Z.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}};function I($){for(let J=0;J<$.removed.length;J++){const R=$.removed[J],k=g.indexOf(R);k>=0&&(g[k]=null,v[k].dispatchEvent({type:"disconnected",data:R}))}for(let J=0;J<$.added.length;J++){const R=$.added[J];let k=g.indexOf(R);if(k===-1){for(let K=0;K<v.length;K++)if(K>=g.length){g.push(R),k=K;break}else if(g[K]===null){g[K]=R,k=K;break}if(k===-1)break}const j=v[k];j&&j.dispatchEvent({type:"connected",data:R})}}const W=new ce,H=new ce;function A($,J,R){W.setFromMatrixPosition(J.matrixWorld),H.setFromMatrixPosition(R.matrixWorld);const k=W.distanceTo(H),j=J.projectionMatrix.elements,K=R.projectionMatrix.elements,B=j[14]/(j[10]-1),oe=j[14]/(j[10]+1),Re=(j[9]+1)/j[5],Ae=(j[9]-1)/j[5],pe=(j[8]-1)/j[0],_e=(K[8]+1)/K[0],Ie=B*pe,me=B*_e,xe=k/(-pe+_e),Ee=xe*-pe;J.matrixWorld.decompose($.position,$.quaternion,$.scale),$.translateX(Ee),$.translateZ(xe),$.matrixWorld.compose($.position,$.quaternion,$.scale),$.matrixWorldInverse.copy($.matrixWorld).invert();const Fe=B+xe,Pe=oe+xe,U=Ie-Ee,D=me+(k-Ee),be=Re*oe/Pe*Fe,Me=Ae*oe/Pe*Fe;$.projectionMatrix.makePerspective(U,D,be,Me,Fe,Pe)}function q($,J){J===null?$.matrixWorld.copy($.matrix):$.matrixWorld.multiplyMatrices(J.matrixWorld,$.matrix),$.matrixWorldInverse.copy($.matrixWorld).invert()}this.updateCamera=function($){if(r===null)return;w.near=y.near=_.near=$.near,w.far=y.far=_.far=$.far,(b!==w.near||S!==w.far)&&(r.updateRenderState({depthNear:w.near,depthFar:w.far}),b=w.near,S=w.far);const J=$.parent,R=w.cameras;q(w,J);for(let j=0;j<R.length;j++)q(R[j],J);w.matrixWorld.decompose(w.position,w.quaternion,w.scale),$.position.copy(w.position),$.quaternion.copy(w.quaternion),$.scale.copy(w.scale),$.matrix.copy(w.matrix),$.matrixWorld.copy(w.matrixWorld);const k=$.children;for(let j=0,K=k.length;j<K;j++)k[j].updateMatrixWorld(!0);R.length===2?A(w,_,y):w.projectionMatrix.copy(_.projectionMatrix)},this.getCamera=function(){return w},this.getFoveation=function(){if(u!==null)return u.fixedFoveation;if(f!==null)return f.fixedFoveation},this.setFoveation=function($){u!==null&&(u.fixedFoveation=$),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=$)};let N=null;function X($,J){if(c=J.getViewerPose(l||a),h=J,c!==null){const R=c.views;f!==null&&(e.setRenderTargetFramebuffer(p,f.framebuffer),e.setRenderTarget(p));let k=!1;R.length!==w.cameras.length&&(w.cameras.length=0,k=!0);for(let j=0;j<R.length;j++){const K=R[j];let B=null;if(f!==null)B=f.getViewport(K);else{const Re=d.getViewSubImage(u,K);B=Re.viewport,j===0&&(e.setRenderTargetTextures(p,Re.colorTexture,u.ignoreDepthValues?void 0:Re.depthStencilTexture),e.setRenderTarget(p))}let oe=M[j];oe===void 0&&(oe=new Dn,oe.layers.enable(j),oe.viewport=new Ht,M[j]=oe),oe.matrix.fromArray(K.transform.matrix),oe.projectionMatrix.fromArray(K.projectionMatrix),oe.viewport.set(B.x,B.y,B.width,B.height),j===0&&w.matrix.copy(oe.matrix),k===!0&&w.cameras.push(oe)}}for(let R=0;R<v.length;R++){const k=g[R],j=v[R];k!==null&&j!==void 0&&j.update(k,J,l||a)}N&&N($,J),h=null}const Z=new D1;Z.setAnimationLoop(X),this.setAnimationLoop=function($){N=$},this.dispose=function(){}}}function _w(n,e){function t(x,p){x.fogColor.value.copy(p.color),p.isFog?(x.fogNear.value=p.near,x.fogFar.value=p.far):p.isFogExp2&&(x.fogDensity.value=p.density)}function i(x,p,v,g,_){p.isMeshBasicMaterial||p.isMeshLambertMaterial?r(x,p):p.isMeshToonMaterial?(r(x,p),d(x,p)):p.isMeshPhongMaterial?(r(x,p),c(x,p)):p.isMeshStandardMaterial?(r(x,p),u(x,p),p.isMeshPhysicalMaterial&&f(x,p,_)):p.isMeshMatcapMaterial?(r(x,p),h(x,p)):p.isMeshDepthMaterial?r(x,p):p.isMeshDistanceMaterial?(r(x,p),m(x,p)):p.isMeshNormalMaterial?r(x,p):p.isLineBasicMaterial?(s(x,p),p.isLineDashedMaterial&&a(x,p)):p.isPointsMaterial?o(x,p,v,g):p.isSpriteMaterial?l(x,p):p.isShadowMaterial?(x.color.value.copy(p.color),x.opacity.value=p.opacity):p.isShaderMaterial&&(p.uniformsNeedUpdate=!1)}function r(x,p){x.opacity.value=p.opacity,p.color&&x.diffuse.value.copy(p.color),p.emissive&&x.emissive.value.copy(p.emissive).multiplyScalar(p.emissiveIntensity),p.map&&(x.map.value=p.map),p.alphaMap&&(x.alphaMap.value=p.alphaMap),p.bumpMap&&(x.bumpMap.value=p.bumpMap,x.bumpScale.value=p.bumpScale,p.side===Qn&&(x.bumpScale.value*=-1)),p.displacementMap&&(x.displacementMap.value=p.displacementMap,x.displacementScale.value=p.displacementScale,x.displacementBias.value=p.displacementBias),p.emissiveMap&&(x.emissiveMap.value=p.emissiveMap),p.normalMap&&(x.normalMap.value=p.normalMap,x.normalScale.value.copy(p.normalScale),p.side===Qn&&x.normalScale.value.negate()),p.specularMap&&(x.specularMap.value=p.specularMap),p.alphaTest>0&&(x.alphaTest.value=p.alphaTest);const v=e.get(p).envMap;if(v&&(x.envMap.value=v,x.flipEnvMap.value=v.isCubeTexture&&v.isRenderTargetTexture===!1?-1:1,x.reflectivity.value=p.reflectivity,x.ior.value=p.ior,x.refractionRatio.value=p.refractionRatio),p.lightMap){x.lightMap.value=p.lightMap;const y=n.physicallyCorrectLights!==!0?Math.PI:1;x.lightMapIntensity.value=p.lightMapIntensity*y}p.aoMap&&(x.aoMap.value=p.aoMap,x.aoMapIntensity.value=p.aoMapIntensity);let g;p.map?g=p.map:p.specularMap?g=p.specularMap:p.displacementMap?g=p.displacementMap:p.normalMap?g=p.normalMap:p.bumpMap?g=p.bumpMap:p.roughnessMap?g=p.roughnessMap:p.metalnessMap?g=p.metalnessMap:p.alphaMap?g=p.alphaMap:p.emissiveMap?g=p.emissiveMap:p.clearcoatMap?g=p.clearcoatMap:p.clearcoatNormalMap?g=p.clearcoatNormalMap:p.clearcoatRoughnessMap?g=p.clearcoatRoughnessMap:p.iridescenceMap?g=p.iridescenceMap:p.iridescenceThicknessMap?g=p.iridescenceThicknessMap:p.specularIntensityMap?g=p.specularIntensityMap:p.specularColorMap?g=p.specularColorMap:p.transmissionMap?g=p.transmissionMap:p.thicknessMap?g=p.thicknessMap:p.sheenColorMap?g=p.sheenColorMap:p.sheenRoughnessMap&&(g=p.sheenRoughnessMap),g!==void 0&&(g.isWebGLRenderTarget&&(g=g.texture),g.matrixAutoUpdate===!0&&g.updateMatrix(),x.uvTransform.value.copy(g.matrix));let _;p.aoMap?_=p.aoMap:p.lightMap&&(_=p.lightMap),_!==void 0&&(_.isWebGLRenderTarget&&(_=_.texture),_.matrixAutoUpdate===!0&&_.updateMatrix(),x.uv2Transform.value.copy(_.matrix))}function s(x,p){x.diffuse.value.copy(p.color),x.opacity.value=p.opacity}function a(x,p){x.dashSize.value=p.dashSize,x.totalSize.value=p.dashSize+p.gapSize,x.scale.value=p.scale}function o(x,p,v,g){x.diffuse.value.copy(p.color),x.opacity.value=p.opacity,x.size.value=p.size*v,x.scale.value=g*.5,p.map&&(x.map.value=p.map),p.alphaMap&&(x.alphaMap.value=p.alphaMap),p.alphaTest>0&&(x.alphaTest.value=p.alphaTest);let _;p.map?_=p.map:p.alphaMap&&(_=p.alphaMap),_!==void 0&&(_.matrixAutoUpdate===!0&&_.updateMatrix(),x.uvTransform.value.copy(_.matrix))}function l(x,p){x.diffuse.value.copy(p.color),x.opacity.value=p.opacity,x.rotation.value=p.rotation,p.map&&(x.map.value=p.map),p.alphaMap&&(x.alphaMap.value=p.alphaMap),p.alphaTest>0&&(x.alphaTest.value=p.alphaTest);let v;p.map?v=p.map:p.alphaMap&&(v=p.alphaMap),v!==void 0&&(v.matrixAutoUpdate===!0&&v.updateMatrix(),x.uvTransform.value.copy(v.matrix))}function c(x,p){x.specular.value.copy(p.specular),x.shininess.value=Math.max(p.shininess,1e-4)}function d(x,p){p.gradientMap&&(x.gradientMap.value=p.gradientMap)}function u(x,p){x.roughness.value=p.roughness,x.metalness.value=p.metalness,p.roughnessMap&&(x.roughnessMap.value=p.roughnessMap),p.metalnessMap&&(x.metalnessMap.value=p.metalnessMap),e.get(p).envMap&&(x.envMapIntensity.value=p.envMapIntensity)}function f(x,p,v){x.ior.value=p.ior,p.sheen>0&&(x.sheenColor.value.copy(p.sheenColor).multiplyScalar(p.sheen),x.sheenRoughness.value=p.sheenRoughness,p.sheenColorMap&&(x.sheenColorMap.value=p.sheenColorMap),p.sheenRoughnessMap&&(x.sheenRoughnessMap.value=p.sheenRoughnessMap)),p.clearcoat>0&&(x.clearcoat.value=p.clearcoat,x.clearcoatRoughness.value=p.clearcoatRoughness,p.clearcoatMap&&(x.clearcoatMap.value=p.clearcoatMap),p.clearcoatRoughnessMap&&(x.clearcoatRoughnessMap.value=p.clearcoatRoughnessMap),p.clearcoatNormalMap&&(x.clearcoatNormalScale.value.copy(p.clearcoatNormalScale),x.clearcoatNormalMap.value=p.clearcoatNormalMap,p.side===Qn&&x.clearcoatNormalScale.value.negate())),p.iridescence>0&&(x.iridescence.value=p.iridescence,x.iridescenceIOR.value=p.iridescenceIOR,x.iridescenceThicknessMinimum.value=p.iridescenceThicknessRange[0],x.iridescenceThicknessMaximum.value=p.iridescenceThicknessRange[1],p.iridescenceMap&&(x.iridescenceMap.value=p.iridescenceMap),p.iridescenceThicknessMap&&(x.iridescenceThicknessMap.value=p.iridescenceThicknessMap)),p.transmission>0&&(x.transmission.value=p.transmission,x.transmissionSamplerMap.value=v.texture,x.transmissionSamplerSize.value.set(v.width,v.height),p.transmissionMap&&(x.transmissionMap.value=p.transmissionMap),x.thickness.value=p.thickness,p.thicknessMap&&(x.thicknessMap.value=p.thicknessMap),x.attenuationDistance.value=p.attenuationDistance,x.attenuationColor.value.copy(p.attenuationColor)),x.specularIntensity.value=p.specularIntensity,x.specularColor.value.copy(p.specularColor),p.specularIntensityMap&&(x.specularIntensityMap.value=p.specularIntensityMap),p.specularColorMap&&(x.specularColorMap.value=p.specularColorMap)}function h(x,p){p.matcap&&(x.matcap.value=p.matcap)}function m(x,p){x.referencePosition.value.copy(p.referencePosition),x.nearDistance.value=p.nearDistance,x.farDistance.value=p.farDistance}return{refreshFogUniforms:t,refreshMaterialUniforms:i}}function ww(n,e,t,i){let r={},s={},a=[];const o=t.isWebGL2?n.getParameter(35375):0;function l(g,_){const y=_.program;i.uniformBlockBinding(g,y)}function c(g,_){let y=r[g.id];y===void 0&&(m(g),y=d(g),r[g.id]=y,g.addEventListener("dispose",p));const M=_.program;i.updateUBOMapping(g,M);const w=e.render.frame;s[g.id]!==w&&(f(g),s[g.id]=w)}function d(g){const _=u();g.__bindingPointIndex=_;const y=n.createBuffer(),M=g.__size,w=g.usage;return n.bindBuffer(35345,y),n.bufferData(35345,M,w),n.bindBuffer(35345,null),n.bindBufferBase(35345,_,y),y}function u(){for(let g=0;g<o;g++)if(a.indexOf(g)===-1)return a.push(g),g;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function f(g){const _=r[g.id],y=g.uniforms,M=g.__cache;n.bindBuffer(35345,_);for(let w=0,b=y.length;w<b;w++){const S=y[w];if(h(S,w,M)===!0){const E=S.value,C=S.__offset;typeof E=="number"?(S.__data[0]=E,n.bufferSubData(35345,C,S.__data)):(S.value.isMatrix3?(S.__data[0]=S.value.elements[0],S.__data[1]=S.value.elements[1],S.__data[2]=S.value.elements[2],S.__data[3]=S.value.elements[0],S.__data[4]=S.value.elements[3],S.__data[5]=S.value.elements[4],S.__data[6]=S.value.elements[5],S.__data[7]=S.value.elements[0],S.__data[8]=S.value.elements[6],S.__data[9]=S.value.elements[7],S.__data[10]=S.value.elements[8],S.__data[11]=S.value.elements[0]):E.toArray(S.__data),n.bufferSubData(35345,C,S.__data))}}n.bindBuffer(35345,null)}function h(g,_,y){const M=g.value;if(y[_]===void 0)return typeof M=="number"?y[_]=M:y[_]=M.clone(),!0;if(typeof M=="number"){if(y[_]!==M)return y[_]=M,!0}else{const w=y[_];if(w.equals(M)===!1)return w.copy(M),!0}return!1}function m(g){const _=g.uniforms;let y=0;const M=16;let w=0;for(let b=0,S=_.length;b<S;b++){const E=_[b],C=x(E);if(E.__data=new Float32Array(C.storage/Float32Array.BYTES_PER_ELEMENT),E.__offset=y,b>0){w=y%M;const I=M-w;w!==0&&I-C.boundary<0&&(y+=M-w,E.__offset=y)}y+=C.storage}return w=y%M,w>0&&(y+=M-w),g.__size=y,g.__cache={},this}function x(g){const _=g.value,y={boundary:0,storage:0};return typeof _=="number"?(y.boundary=4,y.storage=4):_.isVector2?(y.boundary=8,y.storage=8):_.isVector3||_.isColor?(y.boundary=16,y.storage=12):_.isVector4?(y.boundary=16,y.storage=16):_.isMatrix3?(y.boundary=48,y.storage=48):_.isMatrix4?(y.boundary=64,y.storage=64):_.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",_),y}function p(g){const _=g.target;_.removeEventListener("dispose",p);const y=a.indexOf(_.__bindingPointIndex);a.splice(y,1),n.deleteBuffer(r[_.id]),delete r[_.id],delete s[_.id]}function v(){for(const g in r)n.deleteBuffer(r[g]);a=[],r={},s={}}return{bind:l,update:c,dispose:v}}function Mw(){const n=Td("canvas");return n.style.display="block",n}function B1(n={}){this.isWebGLRenderer=!0;const e=n.canvas!==void 0?n.canvas:Mw(),t=n.context!==void 0?n.context:null,i=n.depth!==void 0?n.depth:!0,r=n.stencil!==void 0?n.stencil:!0,s=n.antialias!==void 0?n.antialias:!1,a=n.premultipliedAlpha!==void 0?n.premultipliedAlpha:!0,o=n.preserveDrawingBuffer!==void 0?n.preserveDrawingBuffer:!1,l=n.powerPreference!==void 0?n.powerPreference:"default",c=n.failIfMajorPerformanceCaveat!==void 0?n.failIfMajorPerformanceCaveat:!1;let d;t!==null?d=t.getContextAttributes().alpha:d=n.alpha!==void 0?n.alpha:!1;let u=null,f=null;const h=[],m=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=vs,this.physicallyCorrectLights=!1,this.toneMapping=$i,this.toneMappingExposure=1,Object.defineProperties(this,{gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});const x=this;let p=!1,v=0,g=0,_=null,y=-1,M=null;const w=new Ht,b=new Ht;let S=null,E=e.width,C=e.height,I=1,W=null,H=null;const A=new Ht(0,0,E,C),q=new Ht(0,0,E,C);let N=!1;const X=new I1;let Z=!1,$=!1,J=null;const R=new jt,k=new vt,j=new ce,K={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function B(){return _===null?I:1}let oe=t;function Re(P,re){for(let le=0;le<P.length;le++){const ee=P[le],ue=e.getContext(ee,re);if(ue!==null)return ue}return null}try{const P={alpha:!0,depth:i,stencil:r,antialias:s,premultipliedAlpha:a,preserveDrawingBuffer:o,powerPreference:l,failIfMajorPerformanceCaveat:c};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${D0}`),e.addEventListener("webglcontextlost",et,!1),e.addEventListener("webglcontextrestored",dt,!1),e.addEventListener("webglcontextcreationerror",wt,!1),oe===null){const re=["webgl2","webgl","experimental-webgl"];if(x.isWebGL1Renderer===!0&&re.shift(),oe=Re(re,P),oe===null)throw Re(re)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}oe.getShaderPrecisionFormat===void 0&&(oe.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(P){throw console.error("THREE.WebGLRenderer: "+P.message),P}let Ae,pe,_e,Ie,me,xe,Ee,Fe,Pe,U,D,be,Me,Y,L,T,ne,se,de,ye,De,Q,Te,Ce;function Ne(){Ae=new D5(oe),pe=new T5(oe,Ae,n),Ae.init(pe),Q=new xw(oe,Ae,pe),_e=new pw(oe,Ae,pe),Ie=new F5,me=new ew,xe=new mw(oe,Ae,_e,me,pe,Q,Ie),Ee=new L5(x),Fe=new I5(x),Pe=new jb(oe,pe),Te=new S5(oe,Ae,Pe,pe),U=new O5(oe,Pe,Ie,Te),D=new U5(oe,U,Pe,Ie),de=new B5(oe,pe,xe),T=new A5(me),be=new Q4(x,Ee,Fe,Ae,pe,Te,T),Me=new _w(x,me),Y=new nw,L=new cw(Ae,pe),se=new M5(x,Ee,_e,D,d,a),ne=new hw(x,D,pe),Ce=new ww(oe,Ie,pe,_e),ye=new E5(oe,Ae,Ie,pe),De=new z5(oe,Ae,Ie,pe),Ie.programs=be.programs,x.capabilities=pe,x.extensions=Ae,x.properties=me,x.renderLists=Y,x.shadowMap=ne,x.state=_e,x.info=Ie}Ne();const ke=new bw(x,oe);this.xr=ke,this.getContext=function(){return oe},this.getContextAttributes=function(){return oe.getContextAttributes()},this.forceContextLoss=function(){const P=Ae.get("WEBGL_lose_context");P&&P.loseContext()},this.forceContextRestore=function(){const P=Ae.get("WEBGL_lose_context");P&&P.restoreContext()},this.getPixelRatio=function(){return I},this.setPixelRatio=function(P){P!==void 0&&(I=P,this.setSize(E,C,!1))},this.getSize=function(P){return P.set(E,C)},this.setSize=function(P,re,le){if(ke.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}E=P,C=re,e.width=Math.floor(P*I),e.height=Math.floor(re*I),le!==!1&&(e.style.width=P+"px",e.style.height=re+"px"),this.setViewport(0,0,P,re)},this.getDrawingBufferSize=function(P){return P.set(E*I,C*I).floor()},this.setDrawingBufferSize=function(P,re,le){E=P,C=re,I=le,e.width=Math.floor(P*le),e.height=Math.floor(re*le),this.setViewport(0,0,P,re)},this.getCurrentViewport=function(P){return P.copy(w)},this.getViewport=function(P){return P.copy(A)},this.setViewport=function(P,re,le,ee){P.isVector4?A.set(P.x,P.y,P.z,P.w):A.set(P,re,le,ee),_e.viewport(w.copy(A).multiplyScalar(I).floor())},this.getScissor=function(P){return P.copy(q)},this.setScissor=function(P,re,le,ee){P.isVector4?q.set(P.x,P.y,P.z,P.w):q.set(P,re,le,ee),_e.scissor(b.copy(q).multiplyScalar(I).floor())},this.getScissorTest=function(){return N},this.setScissorTest=function(P){_e.setScissorTest(N=P)},this.setOpaqueSort=function(P){W=P},this.setTransparentSort=function(P){H=P},this.getClearColor=function(P){return P.copy(se.getClearColor())},this.setClearColor=function(){se.setClearColor.apply(se,arguments)},this.getClearAlpha=function(){return se.getClearAlpha()},this.setClearAlpha=function(){se.setClearAlpha.apply(se,arguments)},this.clear=function(P=!0,re=!0,le=!0){let ee=0;P&&(ee|=16384),re&&(ee|=256),le&&(ee|=1024),oe.clear(ee)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",et,!1),e.removeEventListener("webglcontextrestored",dt,!1),e.removeEventListener("webglcontextcreationerror",wt,!1),Y.dispose(),L.dispose(),me.dispose(),Ee.dispose(),Fe.dispose(),D.dispose(),Te.dispose(),Ce.dispose(),be.dispose(),ke.dispose(),ke.removeEventListener("sessionstart",it),ke.removeEventListener("sessionend",pt),J&&(J.dispose(),J=null),ht.stop()};function et(P){P.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),p=!0}function dt(){console.log("THREE.WebGLRenderer: Context Restored."),p=!1;const P=Ie.autoReset,re=ne.enabled,le=ne.autoUpdate,ee=ne.needsUpdate,ue=ne.type;Ne(),Ie.autoReset=P,ne.enabled=re,ne.autoUpdate=le,ne.needsUpdate=ee,ne.type=ue}function wt(P){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",P.statusMessage)}function ie(P){const re=P.target;re.removeEventListener("dispose",ie),He(re)}function He(P){ve(P),me.remove(P)}function ve(P){const re=me.get(P).programs;re!==void 0&&(re.forEach(function(le){be.releaseProgram(le)}),P.isShaderMaterial&&be.releaseShaderCache(P))}this.renderBufferDirect=function(P,re,le,ee,ue,$e){re===null&&(re=K);const G=ue.isMesh&&ue.matrixWorld.determinant()<0,F=st(P,re,le,ee,ue);_e.setMaterial(ee,G);let V=le.index;const te=le.attributes.position;if(V===null){if(te===void 0||te.count===0)return}else if(V.count===0)return;let ae=1;ee.wireframe===!0&&(V=U.getWireframeAttribute(le),ae=2),Te.setup(ue,ee,F,le,V);let ge,Se=ye;V!==null&&(ge=Pe.get(V),Se=De,Se.setIndex(ge));const ze=V!==null?V.count:te.count,Ze=le.drawRange.start*ae,nt=le.drawRange.count*ae,Mt=$e!==null?$e.start*ae:0,Je=$e!==null?$e.count*ae:1/0,_t=Math.max(Ze,Mt),ut=Math.min(ze,Ze+nt,Mt+Je)-1,ft=Math.max(0,ut-_t+1);if(ft!==0){if(ue.isMesh)ee.wireframe===!0?(_e.setLineWidth(ee.wireframeLinewidth*B()),Se.setMode(1)):Se.setMode(4);else if(ue.isLine){let Nt=ee.linewidth;Nt===void 0&&(Nt=1),_e.setLineWidth(Nt*B()),ue.isLineSegments?Se.setMode(1):ue.isLineLoop?Se.setMode(2):Se.setMode(3)}else ue.isPoints?Se.setMode(0):ue.isSprite&&Se.setMode(4);if(ue.isInstancedMesh)Se.renderInstances(_t,ft,ue.count);else if(le.isInstancedBufferGeometry){const Nt=Math.min(le.instanceCount,le._maxInstanceCount);Se.renderInstances(_t,ft,Nt)}else Se.render(_t,ft)}},this.compile=function(P,re){f=L.get(P),f.init(),m.push(f),P.traverseVisible(function(le){le.isLight&&le.layers.test(re.layers)&&(f.pushLight(le),le.castShadow&&f.pushShadow(le))}),f.setupLights(x.physicallyCorrectLights),P.traverse(function(le){const ee=le.material;if(ee)if(Array.isArray(ee))for(let ue=0;ue<ee.length;ue++){const $e=ee[ue];we($e,P,le)}else we(ee,P,le)}),m.pop(),f=null};let Ge=null;function Be(P){Ge&&Ge(P)}function it(){ht.stop()}function pt(){ht.start()}const ht=new D1;ht.setAnimationLoop(Be),typeof self<"u"&&ht.setContext(self),this.setAnimationLoop=function(P){Ge=P,ke.setAnimationLoop(P),P===null?ht.stop():ht.start()},ke.addEventListener("sessionstart",it),ke.addEventListener("sessionend",pt),this.render=function(P,re){if(re!==void 0&&re.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(p===!0)return;P.autoUpdate===!0&&P.updateMatrixWorld(),re.parent===null&&re.updateMatrixWorld(),ke.enabled===!0&&ke.isPresenting===!0&&(ke.cameraAutoUpdate===!0&&ke.updateCamera(re),re=ke.getCamera()),P.isScene===!0&&P.onBeforeRender(x,P,re,_),f=L.get(P,m.length),f.init(),m.push(f),R.multiplyMatrices(re.projectionMatrix,re.matrixWorldInverse),X.setFromProjectionMatrix(R),$=this.localClippingEnabled,Z=T.init(this.clippingPlanes,$,re),u=Y.get(P,h.length),u.init(),h.push(u),xn(P,re,0,x.sortObjects),u.finish(),x.sortObjects===!0&&u.sort(W,H),Z===!0&&T.beginShadows();const le=f.state.shadowsArray;if(ne.render(le,P,re),Z===!0&&T.endShadows(),this.info.autoReset===!0&&this.info.reset(),se.render(u,P),f.setupLights(x.physicallyCorrectLights),re.isArrayCamera){const ee=re.cameras;for(let ue=0,$e=ee.length;ue<$e;ue++){const G=ee[ue];bt(u,P,G,G.viewport)}}else bt(u,P,re);_!==null&&(xe.updateMultisampleRenderTarget(_),xe.updateRenderTargetMipmap(_)),P.isScene===!0&&P.onAfterRender(x,P,re),Te.resetDefaultState(),y=-1,M=null,m.pop(),m.length>0?f=m[m.length-1]:f=null,h.pop(),h.length>0?u=h[h.length-1]:u=null};function xn(P,re,le,ee){if(P.visible===!1)return;if(P.layers.test(re.layers)){if(P.isGroup)le=P.renderOrder;else if(P.isLOD)P.autoUpdate===!0&&P.update(re);else if(P.isLight)f.pushLight(P),P.castShadow&&f.pushShadow(P);else if(P.isSprite){if(!P.frustumCulled||X.intersectsSprite(P)){ee&&j.setFromMatrixPosition(P.matrixWorld).applyMatrix4(R);const G=D.update(P),F=P.material;F.visible&&u.push(P,G,F,le,j.z,null)}}else if((P.isMesh||P.isLine||P.isPoints)&&(P.isSkinnedMesh&&P.skeleton.frame!==Ie.render.frame&&(P.skeleton.update(),P.skeleton.frame=Ie.render.frame),!P.frustumCulled||X.intersectsObject(P))){ee&&j.setFromMatrixPosition(P.matrixWorld).applyMatrix4(R);const G=D.update(P),F=P.material;if(Array.isArray(F)){const V=G.groups;for(let te=0,ae=V.length;te<ae;te++){const ge=V[te],Se=F[ge.materialIndex];Se&&Se.visible&&u.push(P,G,Se,le,j.z,ge)}}else F.visible&&u.push(P,G,F,le,j.z,null)}}const $e=P.children;for(let G=0,F=$e.length;G<F;G++)xn($e[G],re,le,ee)}function bt(P,re,le,ee){const ue=P.opaque,$e=P.transmissive,G=P.transparent;f.setupLightsView(le),$e.length>0&&z(ue,re,le),ee&&_e.viewport(w.copy(ee)),ue.length>0&&he(ue,re,le),$e.length>0&&he($e,re,le),G.length>0&&he(G,re,le),_e.buffers.depth.setTest(!0),_e.buffers.depth.setMask(!0),_e.buffers.color.setMask(!0),_e.setPolygonOffset(!1)}function z(P,re,le){const ee=pe.isWebGL2;J===null&&(J=new ys(1,1,{generateMipmaps:!0,type:Ae.has("EXT_color_buffer_half_float")?Zo:gs,minFilter:mu,samples:ee&&s===!0?4:0})),x.getDrawingBufferSize(k),ee?J.setSize(k.x,k.y):J.setSize(Eh(k.x),Eh(k.y));const ue=x.getRenderTarget();x.setRenderTarget(J),x.clear();const $e=x.toneMapping;x.toneMapping=$i,he(P,re,le),x.toneMapping=$e,xe.updateMultisampleRenderTarget(J),xe.updateRenderTargetMipmap(J),x.setRenderTarget(ue)}function he(P,re,le){const ee=re.isScene===!0?re.overrideMaterial:null;for(let ue=0,$e=P.length;ue<$e;ue++){const G=P[ue],F=G.object,V=G.geometry,te=ee===null?G.material:ee,ae=G.group;F.layers.test(le.layers)&&fe(F,re,le,V,te,ae)}}function fe(P,re,le,ee,ue,$e){P.onBeforeRender(x,re,le,ee,ue,$e),P.modelViewMatrix.multiplyMatrices(le.matrixWorldInverse,P.matrixWorld),P.normalMatrix.getNormalMatrix(P.modelViewMatrix),ue.onBeforeRender(x,re,le,ee,P,$e),ue.transparent===!0&&ue.side===qa?(ue.side=Qn,ue.needsUpdate=!0,x.renderBufferDirect(le,re,ee,ue,P,$e),ue.side=Yo,ue.needsUpdate=!0,x.renderBufferDirect(le,re,ee,ue,P,$e),ue.side=qa):x.renderBufferDirect(le,re,ee,ue,P,$e),P.onAfterRender(x,re,le,ee,ue,$e)}function we(P,re,le){re.isScene!==!0&&(re=K);const ee=me.get(P),ue=f.state.lights,$e=f.state.shadowsArray,G=ue.state.version,F=be.getParameters(P,ue.state,$e,re,le),V=be.getProgramCacheKey(F);let te=ee.programs;ee.environment=P.isMeshStandardMaterial?re.environment:null,ee.fog=re.fog,ee.envMap=(P.isMeshStandardMaterial?Fe:Ee).get(P.envMap||ee.environment),te===void 0&&(P.addEventListener("dispose",ie),te=new Map,ee.programs=te);let ae=te.get(V);if(ae!==void 0){if(ee.currentProgram===ae&&ee.lightsStateVersion===G)return Oe(P,F),ae}else F.uniforms=be.getUniforms(P),P.onBuild(le,F,x),P.onBeforeCompile(F,x),ae=be.acquireProgram(F,V),te.set(V,ae),ee.uniforms=F.uniforms;const ge=ee.uniforms;(!P.isShaderMaterial&&!P.isRawShaderMaterial||P.clipping===!0)&&(ge.clippingPlanes=T.uniform),Oe(P,F),ee.needsLights=at(P),ee.lightsStateVersion=G,ee.needsLights&&(ge.ambientLightColor.value=ue.state.ambient,ge.lightProbe.value=ue.state.probe,ge.directionalLights.value=ue.state.directional,ge.directionalLightShadows.value=ue.state.directionalShadow,ge.spotLights.value=ue.state.spot,ge.spotLightShadows.value=ue.state.spotShadow,ge.rectAreaLights.value=ue.state.rectArea,ge.ltc_1.value=ue.state.rectAreaLTC1,ge.ltc_2.value=ue.state.rectAreaLTC2,ge.pointLights.value=ue.state.point,ge.pointLightShadows.value=ue.state.pointShadow,ge.hemisphereLights.value=ue.state.hemi,ge.directionalShadowMap.value=ue.state.directionalShadowMap,ge.directionalShadowMatrix.value=ue.state.directionalShadowMatrix,ge.spotShadowMap.value=ue.state.spotShadowMap,ge.spotShadowMatrix.value=ue.state.spotShadowMatrix,ge.pointShadowMap.value=ue.state.pointShadowMap,ge.pointShadowMatrix.value=ue.state.pointShadowMatrix);const Se=ae.getUniforms(),ze=vd.seqWithValue(Se.seq,ge);return ee.currentProgram=ae,ee.uniformsList=ze,ae}function Oe(P,re){const le=me.get(P);le.outputEncoding=re.outputEncoding,le.instancing=re.instancing,le.skinning=re.skinning,le.morphTargets=re.morphTargets,le.morphNormals=re.morphNormals,le.morphColors=re.morphColors,le.morphTargetsCount=re.morphTargetsCount,le.numClippingPlanes=re.numClippingPlanes,le.numIntersection=re.numClipIntersection,le.vertexAlphas=re.vertexAlphas,le.vertexTangents=re.vertexTangents,le.toneMapping=re.toneMapping}function st(P,re,le,ee,ue){re.isScene!==!0&&(re=K),xe.resetTextureUnits();const $e=re.fog,G=ee.isMeshStandardMaterial?re.environment:null,F=_===null?x.outputEncoding:_.isXRRenderTarget===!0?_.texture.encoding:vs,V=(ee.isMeshStandardMaterial?Fe:Ee).get(ee.envMap||G),te=ee.vertexColors===!0&&!!le.attributes.color&&le.attributes.color.itemSize===4,ae=!!ee.normalMap&&!!le.attributes.tangent,ge=!!le.morphAttributes.position,Se=!!le.morphAttributes.normal,ze=!!le.morphAttributes.color,Ze=ee.toneMapped?x.toneMapping:$i,nt=le.morphAttributes.position||le.morphAttributes.normal||le.morphAttributes.color,Mt=nt!==void 0?nt.length:0,Je=me.get(ee),_t=f.state.lights;if(Z===!0&&($===!0||P!==M)){const rn=P===M&&ee.id===y;T.setState(ee,P,rn)}let ut=!1;ee.version===Je.__version?(Je.needsLights&&Je.lightsStateVersion!==_t.state.version||Je.outputEncoding!==F||ue.isInstancedMesh&&Je.instancing===!1||!ue.isInstancedMesh&&Je.instancing===!0||ue.isSkinnedMesh&&Je.skinning===!1||!ue.isSkinnedMesh&&Je.skinning===!0||Je.envMap!==V||ee.fog===!0&&Je.fog!==$e||Je.numClippingPlanes!==void 0&&(Je.numClippingPlanes!==T.numPlanes||Je.numIntersection!==T.numIntersection)||Je.vertexAlphas!==te||Je.vertexTangents!==ae||Je.morphTargets!==ge||Je.morphNormals!==Se||Je.morphColors!==ze||Je.toneMapping!==Ze||pe.isWebGL2===!0&&Je.morphTargetsCount!==Mt)&&(ut=!0):(ut=!0,Je.__version=ee.version);let ft=Je.currentProgram;ut===!0&&(ft=we(ee,re,ue));let Nt=!1,Ti=!1,go=!1;const Wt=ft.getUniforms(),Un=Je.uniforms;if(_e.useProgram(ft.program)&&(Nt=!0,Ti=!0,go=!0),ee.id!==y&&(y=ee.id,Ti=!0),Nt||M!==P){if(Wt.setValue(oe,"projectionMatrix",P.projectionMatrix),pe.logarithmicDepthBuffer&&Wt.setValue(oe,"logDepthBufFC",2/(Math.log(P.far+1)/Math.LN2)),M!==P&&(M=P,Ti=!0,go=!0),ee.isShaderMaterial||ee.isMeshPhongMaterial||ee.isMeshToonMaterial||ee.isMeshStandardMaterial||ee.envMap){const rn=Wt.map.cameraPosition;rn!==void 0&&rn.setValue(oe,j.setFromMatrixPosition(P.matrixWorld))}(ee.isMeshPhongMaterial||ee.isMeshToonMaterial||ee.isMeshLambertMaterial||ee.isMeshBasicMaterial||ee.isMeshStandardMaterial||ee.isShaderMaterial)&&Wt.setValue(oe,"isOrthographic",P.isOrthographicCamera===!0),(ee.isMeshPhongMaterial||ee.isMeshToonMaterial||ee.isMeshLambertMaterial||ee.isMeshBasicMaterial||ee.isMeshStandardMaterial||ee.isShaderMaterial||ee.isShadowMaterial||ue.isSkinnedMesh)&&Wt.setValue(oe,"viewMatrix",P.matrixWorldInverse)}if(ue.isSkinnedMesh){Wt.setOptional(oe,ue,"bindMatrix"),Wt.setOptional(oe,ue,"bindMatrixInverse");const rn=ue.skeleton;rn&&(pe.floatVertexTextures?(rn.boneTexture===null&&rn.computeBoneTexture(),Wt.setValue(oe,"boneTexture",rn.boneTexture,xe),Wt.setValue(oe,"boneTextureSize",rn.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const Br=le.morphAttributes;if((Br.position!==void 0||Br.normal!==void 0||Br.color!==void 0&&pe.isWebGL2===!0)&&de.update(ue,le,ee,ft),(Ti||Je.receiveShadow!==ue.receiveShadow)&&(Je.receiveShadow=ue.receiveShadow,Wt.setValue(oe,"receiveShadow",ue.receiveShadow)),Ti&&(Wt.setValue(oe,"toneMappingExposure",x.toneMappingExposure),Je.needsLights&&rt(Un,go),$e&&ee.fog===!0&&Me.refreshFogUniforms(Un,$e),Me.refreshMaterialUniforms(Un,ee,I,C,J),vd.upload(oe,Je.uniformsList,Un,xe)),ee.isShaderMaterial&&ee.uniformsNeedUpdate===!0&&(vd.upload(oe,Je.uniformsList,Un,xe),ee.uniformsNeedUpdate=!1),ee.isSpriteMaterial&&Wt.setValue(oe,"center",ue.center),Wt.setValue(oe,"modelViewMatrix",ue.modelViewMatrix),Wt.setValue(oe,"normalMatrix",ue.normalMatrix),Wt.setValue(oe,"modelMatrix",ue.matrixWorld),ee.isShaderMaterial||ee.isRawShaderMaterial){const rn=ee.uniformsGroups;for(let Ws=0,vo=rn.length;Ws<vo;Ws++)if(pe.isWebGL2){const Ai=rn[Ws];Ce.update(Ai,ft),Ce.bind(Ai,ft)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return ft}function rt(P,re){P.ambientLightColor.needsUpdate=re,P.lightProbe.needsUpdate=re,P.directionalLights.needsUpdate=re,P.directionalLightShadows.needsUpdate=re,P.pointLights.needsUpdate=re,P.pointLightShadows.needsUpdate=re,P.spotLights.needsUpdate=re,P.spotLightShadows.needsUpdate=re,P.rectAreaLights.needsUpdate=re,P.hemisphereLights.needsUpdate=re}function at(P){return P.isMeshLambertMaterial||P.isMeshToonMaterial||P.isMeshPhongMaterial||P.isMeshStandardMaterial||P.isShadowMaterial||P.isShaderMaterial&&P.lights===!0}this.getActiveCubeFace=function(){return v},this.getActiveMipmapLevel=function(){return g},this.getRenderTarget=function(){return _},this.setRenderTargetTextures=function(P,re,le){me.get(P.texture).__webglTexture=re,me.get(P.depthTexture).__webglTexture=le;const ee=me.get(P);ee.__hasExternalTextures=!0,ee.__hasExternalTextures&&(ee.__autoAllocateDepthBuffer=le===void 0,ee.__autoAllocateDepthBuffer||Ae.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),ee.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(P,re){const le=me.get(P);le.__webglFramebuffer=re,le.__useDefaultFramebuffer=re===void 0},this.setRenderTarget=function(P,re=0,le=0){_=P,v=re,g=le;let ee=!0;if(P){const V=me.get(P);V.__useDefaultFramebuffer!==void 0?(_e.bindFramebuffer(36160,null),ee=!1):V.__webglFramebuffer===void 0?xe.setupRenderTarget(P):V.__hasExternalTextures&&xe.rebindTextures(P,me.get(P.texture).__webglTexture,me.get(P.depthTexture).__webglTexture)}let ue=null,$e=!1,G=!1;if(P){const V=P.texture;(V.isData3DTexture||V.isDataArrayTexture)&&(G=!0);const te=me.get(P).__webglFramebuffer;P.isWebGLCubeRenderTarget?(ue=te[re],$e=!0):pe.isWebGL2&&P.samples>0&&xe.useMultisampledRTT(P)===!1?ue=me.get(P).__webglMultisampledFramebuffer:ue=te,w.copy(P.viewport),b.copy(P.scissor),S=P.scissorTest}else w.copy(A).multiplyScalar(I).floor(),b.copy(q).multiplyScalar(I).floor(),S=N;if(_e.bindFramebuffer(36160,ue)&&pe.drawBuffers&&ee&&_e.drawBuffers(P,ue),_e.viewport(w),_e.scissor(b),_e.setScissorTest(S),$e){const V=me.get(P.texture);oe.framebufferTexture2D(36160,36064,34069+re,V.__webglTexture,le)}else if(G){const V=me.get(P.texture),te=re||0;oe.framebufferTextureLayer(36160,36064,V.__webglTexture,le||0,te)}y=-1},this.readRenderTargetPixels=function(P,re,le,ee,ue,$e,G){if(!(P&&P.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let F=me.get(P).__webglFramebuffer;if(P.isWebGLCubeRenderTarget&&G!==void 0&&(F=F[G]),F){_e.bindFramebuffer(36160,F);try{const V=P.texture,te=V.format,ae=V.type;if(te!==hi&&Q.convert(te)!==oe.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const ge=ae===Zo&&(Ae.has("EXT_color_buffer_half_float")||pe.isWebGL2&&Ae.has("EXT_color_buffer_float"));if(ae!==gs&&Q.convert(ae)!==oe.getParameter(35738)&&!(ae===as&&(pe.isWebGL2||Ae.has("OES_texture_float")||Ae.has("WEBGL_color_buffer_float")))&&!ge){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}re>=0&&re<=P.width-ee&&le>=0&&le<=P.height-ue&&oe.readPixels(re,le,ee,ue,Q.convert(te),Q.convert(ae),$e)}finally{const V=_!==null?me.get(_).__webglFramebuffer:null;_e.bindFramebuffer(36160,V)}}},this.copyFramebufferToTexture=function(P,re,le=0){const ee=Math.pow(2,-le),ue=Math.floor(re.image.width*ee),$e=Math.floor(re.image.height*ee);xe.setTexture2D(re,0),oe.copyTexSubImage2D(3553,le,0,0,P.x,P.y,ue,$e),_e.unbindTexture()},this.copyTextureToTexture=function(P,re,le,ee=0){const ue=re.image.width,$e=re.image.height,G=Q.convert(le.format),F=Q.convert(le.type);xe.setTexture2D(le,0),oe.pixelStorei(37440,le.flipY),oe.pixelStorei(37441,le.premultiplyAlpha),oe.pixelStorei(3317,le.unpackAlignment),re.isDataTexture?oe.texSubImage2D(3553,ee,P.x,P.y,ue,$e,G,F,re.image.data):re.isCompressedTexture?oe.compressedTexSubImage2D(3553,ee,P.x,P.y,re.mipmaps[0].width,re.mipmaps[0].height,G,re.mipmaps[0].data):oe.texSubImage2D(3553,ee,P.x,P.y,G,F,re.image),ee===0&&le.generateMipmaps&&oe.generateMipmap(3553),_e.unbindTexture()},this.copyTextureToTexture3D=function(P,re,le,ee,ue=0){if(x.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const $e=P.max.x-P.min.x+1,G=P.max.y-P.min.y+1,F=P.max.z-P.min.z+1,V=Q.convert(ee.format),te=Q.convert(ee.type);let ae;if(ee.isData3DTexture)xe.setTexture3D(ee,0),ae=32879;else if(ee.isDataArrayTexture)xe.setTexture2DArray(ee,0),ae=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}oe.pixelStorei(37440,ee.flipY),oe.pixelStorei(37441,ee.premultiplyAlpha),oe.pixelStorei(3317,ee.unpackAlignment);const ge=oe.getParameter(3314),Se=oe.getParameter(32878),ze=oe.getParameter(3316),Ze=oe.getParameter(3315),nt=oe.getParameter(32877),Mt=le.isCompressedTexture?le.mipmaps[0]:le.image;oe.pixelStorei(3314,Mt.width),oe.pixelStorei(32878,Mt.height),oe.pixelStorei(3316,P.min.x),oe.pixelStorei(3315,P.min.y),oe.pixelStorei(32877,P.min.z),le.isDataTexture||le.isData3DTexture?oe.texSubImage3D(ae,ue,re.x,re.y,re.z,$e,G,F,V,te,Mt.data):le.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),oe.compressedTexSubImage3D(ae,ue,re.x,re.y,re.z,$e,G,F,V,Mt.data)):oe.texSubImage3D(ae,ue,re.x,re.y,re.z,$e,G,F,V,te,Mt),oe.pixelStorei(3314,ge),oe.pixelStorei(32878,Se),oe.pixelStorei(3316,ze),oe.pixelStorei(3315,Ze),oe.pixelStorei(32877,nt),ue===0&&ee.generateMipmaps&&oe.generateMipmap(ae),_e.unbindTexture()},this.initTexture=function(P){P.isCubeTexture?xe.setTextureCube(P,0):P.isData3DTexture?xe.setTexture3D(P,0):P.isDataArrayTexture?xe.setTexture2DArray(P,0):xe.setTexture2D(P,0),_e.unbindTexture()},this.resetState=function(){v=0,g=0,_=null,_e.reset(),Te.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class Sw extends B1{}Sw.prototype.isWebGL1Renderer=!0;class Ew extends Fn{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),t}}class gl extends zc{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new mt(16777215),this.specular=new mt(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new mt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=b1,this.normalScale=new vt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=O0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Tw extends Fn{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new mt(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class Aw extends Tw{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:D0}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=D0);var Ah=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function Lw(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}function Cw(n){var e=n.default;if(typeof e=="function"){var t=function(){return e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(n).forEach(function(i){var r=Object.getOwnPropertyDescriptor(n,i);Object.defineProperty(t,i,r.get?r:{enumerable:!0,get:function(){return n[i]}})}),t}var U1={},vl=function(n){return n&&n.Math==Math&&n},ai=vl(typeof globalThis=="object"&&globalThis)||vl(typeof window=="object"&&window)||vl(typeof self=="object"&&self)||vl(typeof Ah=="object"&&Ah)||function(){return this}()||Function("return this")(),N0={},Mi=function(n){try{return!!n()}catch{return!0}},Rw=Mi,Si=!Rw(function(){return Object.defineProperty({},1,{get:function(){return 7}})[1]!=7}),Pw=Mi,G1=!Pw(function(){var n=function(){}.bind();return typeof n!="function"||n.hasOwnProperty("prototype")}),Iw=G1,yl=Function.prototype.call,gu=Iw?yl.bind(yl):function(){return yl.apply(yl,arguments)},k1={},H1={}.propertyIsEnumerable,V1=Object.getOwnPropertyDescriptor,Dw=V1&&!H1.call({1:2},1);k1.f=Dw?function(e){var t=V1(this,e);return!!t&&t.enumerable}:H1;var B0=function(n,e){return{enumerable:!(n&1),configurable:!(n&2),writable:!(n&4),value:e}},W1=G1,$1=Function,j1=$1.prototype,Ow=j1.bind,Lh=j1.call,zw=W1&&Ow.bind(Lh,Lh),oi=function(n){return n instanceof $1?W1?zw(n):function(){return Lh.apply(n,arguments)}:void 0},X1=oi,Fw=X1({}.toString),qw=X1("".slice),Y1=function(n){return qw(Fw(n),8,-1)},Nw=oi,Bw=Mi,Uw=Y1,ff=Object,Gw=Nw("".split),kw=Bw(function(){return!ff("z").propertyIsEnumerable(0)})?function(n){return Uw(n)=="String"?Gw(n,""):ff(n)}:ff,Z1=function(n){return n==null},Hw=Z1,Vw=TypeError,J1=function(n){if(Hw(n))throw Vw("Can't call method on "+n);return n},Ww=kw,$w=J1,Fc=function(n){return Ww($w(n))},Ch=typeof document=="object"&&document.all,jw=typeof Ch>"u"&&Ch!==void 0,K1={all:Ch,IS_HTMLDDA:jw},Q1=K1,Xw=Q1.all,nn=Q1.IS_HTMLDDA?function(n){return typeof n=="function"||n===Xw}:function(n){return typeof n=="function"},$m=nn,e3=K1,Yw=e3.all,ao=e3.IS_HTMLDDA?function(n){return typeof n=="object"?n!==null:$m(n)||n===Yw}:function(n){return typeof n=="object"?n!==null:$m(n)},hf=ai,Zw=nn,Jw=function(n){return Zw(n)?n:void 0},vu=function(n,e){return arguments.length<2?Jw(hf[n]):hf[n]&&hf[n][e]},Kw=oi,t3=Kw({}.isPrototypeOf),Qw=vu,e8=Qw("navigator","userAgent")||"",n3=ai,pf=e8,jm=n3.process,Xm=n3.Deno,Ym=jm&&jm.versions||Xm&&Xm.version,Zm=Ym&&Ym.v8,Yn,Ad;Zm&&(Yn=Zm.split("."),Ad=Yn[0]>0&&Yn[0]<4?1:+(Yn[0]+Yn[1]));!Ad&&pf&&(Yn=pf.match(/Edge\/(\d+)/),(!Yn||Yn[1]>=74)&&(Yn=pf.match(/Chrome\/(\d+)/),Yn&&(Ad=+Yn[1])));var t8=Ad,Jm=t8,n8=Mi,i3=!!Object.getOwnPropertySymbols&&!n8(function(){var n=Symbol();return!String(n)||!(Object(n)instanceof Symbol)||!Symbol.sham&&Jm&&Jm<41}),i8=i3,r3=i8&&!Symbol.sham&&typeof Symbol.iterator=="symbol",r8=vu,s8=nn,a8=t3,o8=r3,c8=Object,s3=o8?function(n){return typeof n=="symbol"}:function(n){var e=r8("Symbol");return s8(e)&&a8(e.prototype,c8(n))},l8=String,d8=function(n){try{return l8(n)}catch{return"Object"}},u8=nn,f8=d8,h8=TypeError,p8=function(n){if(u8(n))return n;throw h8(f8(n)+" is not a function")},m8=p8,x8=Z1,g8=function(n,e){var t=n[e];return x8(t)?void 0:m8(t)},mf=gu,xf=nn,gf=ao,v8=TypeError,y8=function(n,e){var t,i;if(e==="string"&&xf(t=n.toString)&&!gf(i=mf(t,n))||xf(t=n.valueOf)&&!gf(i=mf(t,n))||e!=="string"&&xf(t=n.toString)&&!gf(i=mf(t,n)))return i;throw v8("Can't convert object to primitive value")},U0={exports:{}},Km=ai,b8=Object.defineProperty,G0=function(n,e){try{b8(Km,n,{value:e,configurable:!0,writable:!0})}catch{Km[n]=e}return e},_8=ai,w8=G0,Qm="__core-js_shared__",M8=_8[Qm]||w8(Qm,{}),k0=M8,ex=k0;(U0.exports=function(n,e){return ex[n]||(ex[n]=e!==void 0?e:{})})("versions",[]).push({version:"3.25.4",mode:"global",copyright:"\xA9 2014-2022 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.25.4/LICENSE",source:"https://github.com/zloirock/core-js"});var S8=J1,E8=Object,a3=function(n){return E8(S8(n))},T8=oi,A8=a3,L8=T8({}.hasOwnProperty),Ei=Object.hasOwn||function(e,t){return L8(A8(e),t)},C8=oi,R8=0,P8=Math.random(),I8=C8(1 .toString),o3=function(n){return"Symbol("+(n===void 0?"":n)+")_"+I8(++R8+P8,36)},D8=ai,O8=U0.exports,tx=Ei,z8=o3,nx=i3,c3=r3,aa=O8("wks"),ps=D8.Symbol,ix=ps&&ps.for,F8=c3?ps:ps&&ps.withoutSetter||z8,Fr=function(n){if(!tx(aa,n)||!(nx||typeof aa[n]=="string")){var e="Symbol."+n;nx&&tx(ps,n)?aa[n]=ps[n]:c3&&ix?aa[n]=ix(e):aa[n]=F8(e)}return aa[n]},q8=gu,rx=ao,sx=s3,N8=g8,B8=y8,U8=Fr,G8=TypeError,k8=U8("toPrimitive"),H8=function(n,e){if(!rx(n)||sx(n))return n;var t=N8(n,k8),i;if(t){if(e===void 0&&(e="default"),i=q8(t,n,e),!rx(i)||sx(i))return i;throw G8("Can't convert object to primitive value")}return e===void 0&&(e="number"),B8(n,e)},V8=H8,W8=s3,l3=function(n){var e=V8(n,"string");return W8(e)?e:e+""},$8=ai,ax=ao,Rh=$8.document,j8=ax(Rh)&&ax(Rh.createElement),H0=function(n){return j8?Rh.createElement(n):{}},X8=Si,Y8=Mi,Z8=H0,d3=!X8&&!Y8(function(){return Object.defineProperty(Z8("div"),"a",{get:function(){return 7}}).a!=7}),J8=Si,K8=gu,Q8=k1,e6=B0,t6=Fc,n6=l3,i6=Ei,r6=d3,ox=Object.getOwnPropertyDescriptor;N0.f=J8?ox:function(e,t){if(e=t6(e),t=n6(t),r6)try{return ox(e,t)}catch{}if(i6(e,t))return e6(!K8(Q8.f,e,t),e[t])};var Ki={},s6=Si,a6=Mi,u3=s6&&a6(function(){return Object.defineProperty(function(){},"prototype",{value:42,writable:!1}).prototype!=42}),o6=ao,c6=String,l6=TypeError,qc=function(n){if(o6(n))return n;throw l6(c6(n)+" is not an object")},d6=Si,u6=d3,f6=u3,bl=qc,cx=l3,h6=TypeError,vf=Object.defineProperty,p6=Object.getOwnPropertyDescriptor,yf="enumerable",bf="configurable",_f="writable";Ki.f=d6?f6?function(e,t,i){if(bl(e),t=cx(t),bl(i),typeof e=="function"&&t==="prototype"&&"value"in i&&_f in i&&!i[_f]){var r=p6(e,t);r&&r[_f]&&(e[t]=i.value,i={configurable:bf in i?i[bf]:r[bf],enumerable:yf in i?i[yf]:r[yf],writable:!1})}return vf(e,t,i)}:vf:function(e,t,i){if(bl(e),t=cx(t),bl(i),u6)try{return vf(e,t,i)}catch{}if("get"in i||"set"in i)throw h6("Accessors not supported");return"value"in i&&(e[t]=i.value),e};var m6=Si,x6=Ki,g6=B0,yu=m6?function(n,e,t){return x6.f(n,e,g6(1,t))}:function(n,e,t){return n[e]=t,n},f3={exports:{}},Ph=Si,v6=Ei,h3=Function.prototype,y6=Ph&&Object.getOwnPropertyDescriptor,V0=v6(h3,"name"),b6=V0&&function(){}.name==="something",_6=V0&&(!Ph||Ph&&y6(h3,"name").configurable),p3={EXISTS:V0,PROPER:b6,CONFIGURABLE:_6},w6=oi,M6=nn,Ih=k0,S6=w6(Function.toString);M6(Ih.inspectSource)||(Ih.inspectSource=function(n){return S6(n)});var E6=Ih.inspectSource,T6=ai,A6=nn,lx=T6.WeakMap,L6=A6(lx)&&/native code/.test(String(lx)),C6=U0.exports,R6=o3,dx=C6("keys"),W0=function(n){return dx[n]||(dx[n]=R6(n))},$0={},P6=L6,m3=ai,wf=oi,I6=ao,D6=yu,Mf=Ei,Sf=k0,O6=W0,z6=$0,ux="Object already initialized",Dh=m3.TypeError,F6=m3.WeakMap,Ld,Jo,Cd,q6=function(n){return Cd(n)?Jo(n):Ld(n,{})},N6=function(n){return function(e){var t;if(!I6(e)||(t=Jo(e)).type!==n)throw Dh("Incompatible receiver, "+n+" required");return t}};if(P6||Sf.state){var Hr=Sf.state||(Sf.state=new F6),B6=wf(Hr.get),fx=wf(Hr.has),U6=wf(Hr.set);Ld=function(n,e){if(fx(Hr,n))throw Dh(ux);return e.facade=n,U6(Hr,n,e),e},Jo=function(n){return B6(Hr,n)||{}},Cd=function(n){return fx(Hr,n)}}else{var oa=O6("state");z6[oa]=!0,Ld=function(n,e){if(Mf(n,oa))throw Dh(ux);return e.facade=n,D6(n,oa,e),e},Jo=function(n){return Mf(n,oa)?n[oa]:{}},Cd=function(n){return Mf(n,oa)}}var x3={set:Ld,get:Jo,has:Cd,enforce:q6,getterFor:N6},G6=Mi,k6=nn,_l=Ei,Oh=Si,H6=p3.CONFIGURABLE,V6=E6,g3=x3,W6=g3.enforce,$6=g3.get,yd=Object.defineProperty,j6=Oh&&!G6(function(){return yd(function(){},"length",{value:8}).length!==8}),X6=String(String).split("String"),Y6=f3.exports=function(n,e,t){String(e).slice(0,7)==="Symbol("&&(e="["+String(e).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),t&&t.getter&&(e="get "+e),t&&t.setter&&(e="set "+e),(!_l(n,"name")||H6&&n.name!==e)&&(Oh?yd(n,"name",{value:e,configurable:!0}):n.name=e),j6&&t&&_l(t,"arity")&&n.length!==t.arity&&yd(n,"length",{value:t.arity});try{t&&_l(t,"constructor")&&t.constructor?Oh&&yd(n,"prototype",{writable:!1}):n.prototype&&(n.prototype=void 0)}catch{}var i=W6(n);return _l(i,"source")||(i.source=X6.join(typeof e=="string"?e:"")),n};Function.prototype.toString=Y6(function(){return k6(this)&&$6(this).source||V6(this)},"toString");var Z6=nn,J6=Ki,K6=f3.exports,Q6=G0,j0=function(n,e,t,i){i||(i={});var r=i.enumerable,s=i.name!==void 0?i.name:e;if(Z6(t)&&K6(t,s,i),i.global)r?n[e]=t:Q6(e,t);else{try{i.unsafe?n[e]&&(r=!0):delete n[e]}catch{}r?n[e]=t:J6.f(n,e,{value:t,enumerable:!1,configurable:!i.nonConfigurable,writable:!i.nonWritable})}return n},v3={},eM=Math.ceil,tM=Math.floor,nM=Math.trunc||function(e){var t=+e;return(t>0?tM:eM)(t)},iM=nM,y3=function(n){var e=+n;return e!==e||e===0?0:iM(e)},rM=y3,sM=Math.max,aM=Math.min,oM=function(n,e){var t=rM(n);return t<0?sM(t+e,0):aM(t,e)},cM=y3,lM=Math.min,dM=function(n){return n>0?lM(cM(n),9007199254740991):0},uM=dM,fM=function(n){return uM(n.length)},hM=Fc,pM=oM,mM=fM,hx=function(n){return function(e,t,i){var r=hM(e),s=mM(r),a=pM(i,s),o;if(n&&t!=t){for(;s>a;)if(o=r[a++],o!=o)return!0}else for(;s>a;a++)if((n||a in r)&&r[a]===t)return n||a||0;return!n&&-1}},xM={includes:hx(!0),indexOf:hx(!1)},gM=oi,Ef=Ei,vM=Fc,yM=xM.indexOf,bM=$0,px=gM([].push),b3=function(n,e){var t=vM(n),i=0,r=[],s;for(s in t)!Ef(bM,s)&&Ef(t,s)&&px(r,s);for(;e.length>i;)Ef(t,s=e[i++])&&(~yM(r,s)||px(r,s));return r},X0=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"],_M=b3,wM=X0,MM=wM.concat("length","prototype");v3.f=Object.getOwnPropertyNames||function(e){return _M(e,MM)};var _3={};_3.f=Object.getOwnPropertySymbols;var SM=vu,EM=oi,TM=v3,AM=_3,LM=qc,CM=EM([].concat),RM=SM("Reflect","ownKeys")||function(e){var t=TM.f(LM(e)),i=AM.f;return i?CM(t,i(e)):t},mx=Ei,PM=RM,IM=N0,DM=Ki,w3=function(n,e,t){for(var i=PM(e),r=DM.f,s=IM.f,a=0;a<i.length;a++){var o=i[a];!mx(n,o)&&!(t&&mx(t,o))&&r(n,o,s(e,o))}},OM=Mi,zM=nn,FM=/#|\.prototype\./,Nc=function(n,e){var t=NM[qM(n)];return t==UM?!0:t==BM?!1:zM(e)?OM(e):!!e},qM=Nc.normalize=function(n){return String(n).replace(FM,".").toLowerCase()},NM=Nc.data={},BM=Nc.NATIVE="N",UM=Nc.POLYFILL="P",GM=Nc,Tf=ai,kM=N0.f,HM=yu,VM=j0,WM=G0,$M=w3,jM=GM,M3=function(n,e){var t=n.target,i=n.global,r=n.stat,s,a,o,l,c,d;if(i?a=Tf:r?a=Tf[t]||WM(t,{}):a=(Tf[t]||{}).prototype,a)for(o in e){if(c=e[o],n.dontCallGetSet?(d=kM(a,o),l=d&&d.value):l=a[o],s=jM(i?o:t+(r?".":"#")+o,n.forced),!s&&l!==void 0){if(typeof c==typeof l)continue;$M(c,l)}(n.sham||l&&l.sham)&&HM(c,"sham",!0),VM(a,o,c,n)}},XM=Fr,YM=XM("toStringTag"),S3={};S3[YM]="z";var ZM=String(S3)==="[object z]",JM=ZM,KM=nn,bd=Y1,QM=Fr,e7=QM("toStringTag"),t7=Object,n7=bd(function(){return arguments}())=="Arguments",i7=function(n,e){try{return n[e]}catch{}},r7=JM?bd:function(n){var e,t,i;return n===void 0?"Undefined":n===null?"Null":typeof(t=i7(e=t7(n),e7))=="string"?t:n7?bd(e):(i=bd(e))=="Object"&&KM(e.callee)?"Arguments":i},s7=r7,a7=String,o7=function(n){if(s7(n)==="Symbol")throw TypeError("Cannot convert a Symbol value to a string");return a7(n)},c7=M3,l7=Si,d7=ai,wl=oi,u7=Ei,f7=nn,h7=t3,p7=o7,m7=Ki.f,x7=w3,Ui=d7.Symbol,Vr=Ui&&Ui.prototype;if(l7&&f7(Ui)&&(!("description"in Vr)||Ui().description!==void 0)){var xx={},Ml=function(){var e=arguments.length<1||arguments[0]===void 0?void 0:p7(arguments[0]),t=h7(Vr,this)?new Ui(e):e===void 0?Ui():Ui(e);return e===""&&(xx[t]=!0),t};x7(Ml,Ui),Ml.prototype=Vr,Vr.constructor=Ml;var g7=String(Ui("test"))=="Symbol(test)",v7=wl(Vr.valueOf),y7=wl(Vr.toString),b7=/^Symbol\((.*)\)[^)]+$/,_7=wl("".replace),w7=wl("".slice);m7(Vr,"description",{configurable:!0,get:function(){var e=v7(this);if(u7(xx,e))return"";var t=y7(e),i=g7?w7(t,7,-1):_7(t,b7,"$1");return i===""?void 0:i}}),c7({global:!0,constructor:!0,forced:!0},{Symbol:Ml})}var M7={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0},S7=H0,Af=S7("span").classList,gx=Af&&Af.constructor&&Af.constructor.prototype,E7=gx===Object.prototype?void 0:gx,E3={},T7=b3,A7=X0,L7=Object.keys||function(e){return T7(e,A7)},C7=Si,R7=u3,P7=Ki,I7=qc,D7=Fc,O7=L7;E3.f=C7&&!R7?Object.defineProperties:function(e,t){I7(e);for(var i=D7(t),r=O7(t),s=r.length,a=0,o;s>a;)P7.f(e,o=r[a++],i[o]);return e};var z7=vu,F7=z7("document","documentElement"),q7=qc,N7=E3,vx=X0,B7=$0,U7=F7,G7=H0,k7=W0,yx=">",bx="<",zh="prototype",Fh="script",T3=k7("IE_PROTO"),Lf=function(){},A3=function(n){return bx+Fh+yx+n+bx+"/"+Fh+yx},_x=function(n){n.write(A3("")),n.close();var e=n.parentWindow.Object;return n=null,e},H7=function(){var n=G7("iframe"),e="java"+Fh+":",t;return n.style.display="none",U7.appendChild(n),n.src=String(e),t=n.contentWindow.document,t.open(),t.write(A3("document.F=Object")),t.close(),t.F},Sl,_d=function(){try{Sl=new ActiveXObject("htmlfile")}catch{}_d=typeof document<"u"?document.domain&&Sl?_x(Sl):H7():_x(Sl);for(var n=vx.length;n--;)delete _d[zh][vx[n]];return _d()};B7[T3]=!0;var L3=Object.create||function(e,t){var i;return e!==null?(Lf[zh]=q7(e),i=new Lf,Lf[zh]=null,i[T3]=e):i=_d(),t===void 0?i:N7.f(i,t)},V7=Fr,W7=L3,$7=Ki.f,qh=V7("unscopables"),Nh=Array.prototype;Nh[qh]==null&&$7(Nh,qh,{configurable:!0,value:W7(null)});var j7=function(n){Nh[qh][n]=!0},Y0={},X7=Mi,Y7=!X7(function(){function n(){}return n.prototype.constructor=null,Object.getPrototypeOf(new n)!==n.prototype}),Z7=Ei,J7=nn,K7=a3,Q7=W0,eS=Y7,wx=Q7("IE_PROTO"),Bh=Object,tS=Bh.prototype,C3=eS?Bh.getPrototypeOf:function(n){var e=K7(n);if(Z7(e,wx))return e[wx];var t=e.constructor;return J7(t)&&e instanceof t?t.prototype:e instanceof Bh?tS:null},nS=Mi,iS=nn,rS=ao,Mx=C3,sS=j0,aS=Fr,Uh=aS("iterator"),R3=!1,_s,Cf,Rf;[].keys&&(Rf=[].keys(),"next"in Rf?(Cf=Mx(Mx(Rf)),Cf!==Object.prototype&&(_s=Cf)):R3=!0);var oS=!rS(_s)||nS(function(){var n={};return _s[Uh].call(n)!==n});oS&&(_s={});iS(_s[Uh])||sS(_s,Uh,function(){return this});var P3={IteratorPrototype:_s,BUGGY_SAFARI_ITERATORS:R3},cS=Ki.f,lS=Ei,dS=Fr,Sx=dS("toStringTag"),I3=function(n,e,t){n&&!t&&(n=n.prototype),n&&!lS(n,Sx)&&cS(n,Sx,{configurable:!0,value:e})},uS=P3.IteratorPrototype,fS=L3,hS=B0,pS=I3,mS=Y0,xS=function(){return this},gS=function(n,e,t,i){var r=e+" Iterator";return n.prototype=fS(uS,{next:hS(+!i,t)}),pS(n,r,!1),mS[r]=xS,n},vS=nn,yS=String,bS=TypeError,_S=function(n){if(typeof n=="object"||vS(n))return n;throw bS("Can't set "+yS(n)+" as a prototype")},wS=oi,MS=qc,SS=_S,ES=Object.setPrototypeOf||("__proto__"in{}?function(){var n=!1,e={},t;try{t=wS(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set),t(e,[]),n=e instanceof Array}catch{}return function(r,s){return MS(r),SS(s),n?t(r,s):r.__proto__=s,r}}():void 0),TS=M3,AS=gu,D3=p3,LS=nn,CS=gS,Ex=C3,Tx=ES,RS=I3,PS=yu,Pf=j0,IS=Fr,DS=Y0,O3=P3,OS=D3.PROPER,zS=D3.CONFIGURABLE,Ax=O3.IteratorPrototype,El=O3.BUGGY_SAFARI_ITERATORS,Mo=IS("iterator"),Lx="keys",So="values",Cx="entries",FS=function(){return this},qS=function(n,e,t,i,r,s,a){CS(t,e,i);var o=function(v){if(v===r&&f)return f;if(!El&&v in d)return d[v];switch(v){case Lx:return function(){return new t(this,v)};case So:return function(){return new t(this,v)};case Cx:return function(){return new t(this,v)}}return function(){return new t(this)}},l=e+" Iterator",c=!1,d=n.prototype,u=d[Mo]||d["@@iterator"]||r&&d[r],f=!El&&u||o(r),h=e=="Array"&&d.entries||u,m,x,p;if(h&&(m=Ex(h.call(new n)),m!==Object.prototype&&m.next&&(Ex(m)!==Ax&&(Tx?Tx(m,Ax):LS(m[Mo])||Pf(m,Mo,FS)),RS(m,l,!0))),OS&&r==So&&u&&u.name!==So&&(zS?PS(d,"name",So):(c=!0,f=function(){return AS(u,this)})),r)if(x={values:o(So),keys:s?f:o(Lx),entries:o(Cx)},a)for(p in x)(El||c||!(p in d))&&Pf(d,p,x[p]);else TS({target:e,proto:!0,forced:El||c},x);return d[Mo]!==f&&Pf(d,Mo,f,{name:r}),DS[e]=f,x},NS=function(n,e){return{value:n,done:e}},BS=Fc,Z0=j7,Rx=Y0,z3=x3,US=Ki.f,GS=qS,Tl=NS,kS=Si,F3="Array Iterator",HS=z3.set,VS=z3.getterFor(F3),WS=GS(Array,"Array",function(n,e){HS(this,{type:F3,target:BS(n),index:0,kind:e})},function(){var n=VS(this),e=n.target,t=n.kind,i=n.index++;return!e||i>=e.length?(n.target=void 0,Tl(void 0,!0)):t=="keys"?Tl(i,!1):t=="values"?Tl(e[i],!1):Tl([i,e[i]],!1)},"values"),Px=Rx.Arguments=Rx.Array;Z0("keys");Z0("values");Z0("entries");if(kS&&Px.name!=="values")try{US(Px,"name",{value:"values"})}catch{}var Ix=ai,q3=M7,$S=E7,Uo=WS,If=yu,N3=Fr,Df=N3("iterator"),Dx=N3("toStringTag"),Of=Uo.values,B3=function(n,e){if(n){if(n[Df]!==Of)try{If(n,Df,Of)}catch{n[Df]=Of}if(n[Dx]||If(n,Dx,e),q3[e]){for(var t in Uo)if(n[t]!==Uo[t])try{If(n,t,Uo[t])}catch{n[t]=Uo[t]}}}};for(var zf in q3)B3(Ix[zf]&&Ix[zf].prototype,zf);B3($S,"DOMTokenList");const J0="125",jS={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},XS={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},U3=0,Gh=1,G3=2,YS=3,ZS=0,K0=1,k3=2,Ca=3,oo=0,Ft=1,Bc=2,Q0=1,JS=2,ji=0,Da=1,kh=2,Hh=3,Vh=4,H3=5,rs=100,V3=101,W3=102,Wh=103,$h=104,$3=200,j3=201,X3=202,Y3=203,ep=204,tp=205,Z3=206,J3=207,K3=208,Q3=209,ev=210,tv=0,nv=1,iv=2,Rd=3,rv=4,sv=5,av=6,ov=7,Uc=0,cv=1,lv=2,ms=0,dv=1,uv=2,fv=3,hv=4,pv=5,bu=300,Gc=301,kc=302,Pd=303,Id=304,co=306,Hc=307,Ko=1e3,an=1001,Qo=1002,Ut=1003,Dd=1004,KS=1004,Od=1005,QS=1005,Vt=1006,np=1007,eE=1007,lo=1008,tE=1008,uo=1009,mv=1010,xv=1011,ec=1012,gv=1013,Ho=1014,ki=1015,tc=1016,vv=1017,yv=1018,bv=1019,Oa=1020,_v=1021,_r=1022,Tn=1023,wv=1024,Mv=1025,Sv=Tn,xs=1026,ka=1027,Ev=1028,Tv=1029,Av=1030,Lv=1031,Cv=1032,Rv=1033,jh=33776,Xh=33777,Yh=33778,Zh=33779,Jh=35840,Kh=35841,Qh=35842,e0=35843,Pv=36196,t0=37492,n0=37496,Iv=37808,Dv=37809,Ov=37810,zv=37811,Fv=37812,qv=37813,Nv=37814,Bv=37815,Uv=37816,Gv=37817,kv=37818,Hv=37819,Vv=37820,Wv=37821,$v=36492,jv=37840,Xv=37841,Yv=37842,Zv=37843,Jv=37844,Kv=37845,Qv=37846,e2=37847,t2=37848,n2=37849,i2=37850,r2=37851,s2=37852,a2=37853,o2=2200,c2=2201,l2=2202,nc=2300,Vo=2301,wd=2302,cs=2400,ls=2401,ic=2402,_u=2500,ip=2501,d2=0,nE=1,iE=2,ln=3e3,Vc=3001,wu=3007,Mu=3002,u2=3003,rp=3004,sp=3005,ap=3006,f2=3200,h2=3201,Hs=0,p2=1,rE=0,Md=7680,sE=7681,aE=7682,oE=7683,cE=34055,lE=34056,dE=5386,uE=512,fE=513,hE=514,pE=515,mE=516,xE=517,gE=518,m2=519,Wc=35044,ws=35048,vE=35040,yE=35045,bE=35049,_E=35041,wE=35046,ME=35050,SE=35042,EE="100",i0="300 es";function Qi(){}Object.assign(Qi.prototype,{addEventListener:function(n,e){this._listeners===void 0&&(this._listeners={});const t=this._listeners;t[n]===void 0&&(t[n]=[]),t[n].indexOf(e)===-1&&t[n].push(e)},hasEventListener:function(n,e){if(this._listeners===void 0)return!1;const t=this._listeners;return t[n]!==void 0&&t[n].indexOf(e)!==-1},removeEventListener:function(n,e){if(this._listeners===void 0)return;const i=this._listeners[n];if(i!==void 0){const r=i.indexOf(e);r!==-1&&i.splice(r,1)}},dispatchEvent:function(n){if(this._listeners===void 0)return;const t=this._listeners[n.type];if(t!==void 0){n.target=this;const i=t.slice(0);for(let r=0,s=i.length;r<s;r++)i[r].call(this,n)}}});const $t=[];for(let n=0;n<256;n++)$t[n]=(n<16?"0":"")+n.toString(16);let Al=1234567;const tt={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){const n=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return($t[n&255]+$t[n>>8&255]+$t[n>>16&255]+$t[n>>24&255]+"-"+$t[e&255]+$t[e>>8&255]+"-"+$t[e>>16&15|64]+$t[e>>24&255]+"-"+$t[t&63|128]+$t[t>>8&255]+"-"+$t[t>>16&255]+$t[t>>24&255]+$t[i&255]+$t[i>>8&255]+$t[i>>16&255]+$t[i>>24&255]).toUpperCase()},clamp:function(n,e,t){return Math.max(e,Math.min(t,n))},euclideanModulo:function(n,e){return(n%e+e)%e},mapLinear:function(n,e,t,i,r){return i+(n-e)*(r-i)/(t-e)},lerp:function(n,e,t){return(1-t)*n+t*e},damp:function(n,e,t,i){return tt.lerp(n,e,1-Math.exp(-t*i))},pingpong:function(n,e=1){return e-Math.abs(tt.euclideanModulo(n,e*2)-e)},smoothstep:function(n,e,t){return n<=e?0:n>=t?1:(n=(n-e)/(t-e),n*n*(3-2*n))},smootherstep:function(n,e,t){return n<=e?0:n>=t?1:(n=(n-e)/(t-e),n*n*n*(n*(n*6-15)+10))},randInt:function(n,e){return n+Math.floor(Math.random()*(e-n+1))},randFloat:function(n,e){return n+Math.random()*(e-n)},randFloatSpread:function(n){return n*(.5-Math.random())},seededRandom:function(n){return n!==void 0&&(Al=n%2147483647),Al=Al*16807%2147483647,(Al-1)/2147483646},degToRad:function(n){return n*tt.DEG2RAD},radToDeg:function(n){return n*tt.RAD2DEG},isPowerOfTwo:function(n){return(n&n-1)===0&&n!==0},ceilPowerOfTwo:function(n){return Math.pow(2,Math.ceil(Math.log(n)/Math.LN2))},floorPowerOfTwo:function(n){return Math.pow(2,Math.floor(Math.log(n)/Math.LN2))},setQuaternionFromProperEuler:function(n,e,t,i,r){const s=Math.cos,a=Math.sin,o=s(t/2),l=a(t/2),c=s((e+i)/2),d=a((e+i)/2),u=s((e-i)/2),f=a((e-i)/2),h=s((i-e)/2),m=a((i-e)/2);switch(r){case"XYX":n.set(o*d,l*u,l*f,o*c);break;case"YZY":n.set(l*f,o*d,l*u,o*c);break;case"ZXZ":n.set(l*u,l*f,o*d,o*c);break;case"XZX":n.set(o*d,l*m,l*h,o*c);break;case"YXY":n.set(l*h,o*d,l*m,o*c);break;case"ZYZ":n.set(l*m,l*h,o*d,o*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}};class Le{constructor(e=0,t=0){Object.defineProperty(this,"isVector2",{value:!0}),this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,i=this.y,r=e.elements;return this.x=r[0]*t+r[3]*i+r[6],this.y=r[1]*t+r[4]*i+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,i){return i!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const i=Math.cos(t),r=Math.sin(t),s=this.x-e.x,a=this.y-e.y;return this.x=s*i-a*r+e.x,this.y=s*r+a*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}class Sn{constructor(){Object.defineProperty(this,"isMatrix3",{value:!0}),this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,i,r,s,a,o,l,c){const d=this.elements;return d[0]=e,d[1]=r,d[2]=o,d[3]=t,d[4]=s,d[5]=l,d[6]=i,d[7]=a,d[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}clone(){return new this.constructor().fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,r=t.elements,s=this.elements,a=i[0],o=i[3],l=i[6],c=i[1],d=i[4],u=i[7],f=i[2],h=i[5],m=i[8],x=r[0],p=r[3],v=r[6],g=r[1],_=r[4],y=r[7],M=r[2],w=r[5],b=r[8];return s[0]=a*x+o*g+l*M,s[3]=a*p+o*_+l*w,s[6]=a*v+o*y+l*b,s[1]=c*x+d*g+u*M,s[4]=c*p+d*_+u*w,s[7]=c*v+d*y+u*b,s[2]=f*x+h*g+m*M,s[5]=f*p+h*_+m*w,s[8]=f*v+h*y+m*b,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],a=e[4],o=e[5],l=e[6],c=e[7],d=e[8];return t*a*d-t*o*c-i*s*d+i*o*l+r*s*c-r*a*l}invert(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],a=e[4],o=e[5],l=e[6],c=e[7],d=e[8],u=d*a-o*c,f=o*l-d*s,h=c*s-a*l,m=t*u+i*f+r*h;if(m===0)return this.set(0,0,0,0,0,0,0,0,0);const x=1/m;return e[0]=u*x,e[1]=(r*c-d*i)*x,e[2]=(o*i-r*a)*x,e[3]=f*x,e[4]=(d*t-r*l)*x,e[5]=(r*s-o*t)*x,e[6]=h*x,e[7]=(i*l-c*t)*x,e[8]=(a*t-i*s)*x,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).copy(this).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,r,s,a,o){const l=Math.cos(s),c=Math.sin(s);return this.set(i*l,i*c,-i*(l*a+c*o)+a+e,-r*c,r*l,-r*(-c*a+l*o)+o+t,0,0,1),this}scale(e,t){const i=this.elements;return i[0]*=e,i[3]*=e,i[6]*=e,i[1]*=t,i[4]*=t,i[7]*=t,this}rotate(e){const t=Math.cos(e),i=Math.sin(e),r=this.elements,s=r[0],a=r[3],o=r[6],l=r[1],c=r[4],d=r[7];return r[0]=t*s+i*l,r[3]=t*a+i*c,r[6]=t*o+i*d,r[1]=-i*s+t*l,r[4]=-i*a+t*c,r[7]=-i*o+t*d,this}translate(e,t){const i=this.elements;return i[0]+=e*i[2],i[3]+=e*i[5],i[6]+=e*i[8],i[1]+=t*i[2],i[4]+=t*i[5],i[7]+=t*i[8],this}equals(e){const t=this.elements,i=e.elements;for(let r=0;r<9;r++)if(t[r]!==i[r])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}}let ca;const Vs={getDataURL:function(n){if(/^data:/i.test(n.src)||typeof HTMLCanvasElement>"u")return n.src;let e;if(n instanceof HTMLCanvasElement)e=n;else{ca===void 0&&(ca=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),ca.width=n.width,ca.height=n.height;const t=ca.getContext("2d");n instanceof ImageData?t.putImageData(n,0,0):t.drawImage(n,0,0,n.width,n.height),e=ca}return e.width>2048||e.height>2048?e.toDataURL("image/jpeg",.6):e.toDataURL("image/png")}};let TE=0;function yt(n=yt.DEFAULT_IMAGE,e=yt.DEFAULT_MAPPING,t=an,i=an,r=Vt,s=lo,a=Tn,o=uo,l=1,c=ln){Object.defineProperty(this,"id",{value:TE++}),this.uuid=tt.generateUUID(),this.name="",this.image=n,this.mipmaps=[],this.mapping=e,this.wrapS=t,this.wrapT=i,this.magFilter=r,this.minFilter=s,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=o,this.offset=new Le(0,0),this.repeat=new Le(1,1),this.center=new Le(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Sn,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=c,this.version=0,this.onUpdate=null}yt.DEFAULT_IMAGE=void 0;yt.DEFAULT_MAPPING=bu;yt.prototype=Object.assign(Object.create(Qi.prototype),{constructor:yt,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return new this.constructor().copy(this)},copy:function(n){return this.name=n.name,this.image=n.image,this.mipmaps=n.mipmaps.slice(0),this.mapping=n.mapping,this.wrapS=n.wrapS,this.wrapT=n.wrapT,this.magFilter=n.magFilter,this.minFilter=n.minFilter,this.anisotropy=n.anisotropy,this.format=n.format,this.internalFormat=n.internalFormat,this.type=n.type,this.offset.copy(n.offset),this.repeat.copy(n.repeat),this.center.copy(n.center),this.rotation=n.rotation,this.matrixAutoUpdate=n.matrixAutoUpdate,this.matrix.copy(n.matrix),this.generateMipmaps=n.generateMipmaps,this.premultiplyAlpha=n.premultiplyAlpha,this.flipY=n.flipY,this.unpackAlignment=n.unpackAlignment,this.encoding=n.encoding,this},toJSON:function(n){const e=n===void 0||typeof n=="string";if(!e&&n.textures[this.uuid]!==void 0)return n.textures[this.uuid];const t={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(this.image!==void 0){const i=this.image;if(i.uuid===void 0&&(i.uuid=tt.generateUUID()),!e&&n.images[i.uuid]===void 0){let r;if(Array.isArray(i)){r=[];for(let s=0,a=i.length;s<a;s++)i[s].isDataTexture?r.push(Ff(i[s].image)):r.push(Ff(i[s]))}else r=Ff(i);n.images[i.uuid]={uuid:i.uuid,url:r}}t.image=i.uuid}return e||(n.textures[this.uuid]=t),t},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(n){if(this.mapping!==bu)return n;if(n.applyMatrix3(this.matrix),n.x<0||n.x>1)switch(this.wrapS){case Ko:n.x=n.x-Math.floor(n.x);break;case an:n.x=n.x<0?0:1;break;case Qo:Math.abs(Math.floor(n.x)%2)===1?n.x=Math.ceil(n.x)-n.x:n.x=n.x-Math.floor(n.x);break}if(n.y<0||n.y>1)switch(this.wrapT){case Ko:n.y=n.y-Math.floor(n.y);break;case an:n.y=n.y<0?0:1;break;case Qo:Math.abs(Math.floor(n.y)%2)===1?n.y=Math.ceil(n.y)-n.y:n.y=n.y-Math.floor(n.y);break}return this.flipY&&(n.y=1-n.y),n}});Object.defineProperty(yt.prototype,"needsUpdate",{set:function(n){n===!0&&this.version++}});function Ff(n){return typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&n instanceof ImageBitmap?Vs.getDataURL(n):n.data?{data:Array.prototype.slice.call(n.data),width:n.width,height:n.height,type:n.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}class gt{constructor(e=0,t=0,i=0,r=1){Object.defineProperty(this,"isVector4",{value:!0}),this.x=e,this.y=t,this.z=i,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,r){return this.x=e,this.y=t,this.z=i,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,i=this.y,r=this.z,s=this.w,a=e.elements;return this.x=a[0]*t+a[4]*i+a[8]*r+a[12]*s,this.y=a[1]*t+a[5]*i+a[9]*r+a[13]*s,this.z=a[2]*t+a[6]*i+a[10]*r+a[14]*s,this.w=a[3]*t+a[7]*i+a[11]*r+a[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,r,s;const l=e.elements,c=l[0],d=l[4],u=l[8],f=l[1],h=l[5],m=l[9],x=l[2],p=l[6],v=l[10];if(Math.abs(d-f)<.01&&Math.abs(u-x)<.01&&Math.abs(m-p)<.01){if(Math.abs(d+f)<.1&&Math.abs(u+x)<.1&&Math.abs(m+p)<.1&&Math.abs(c+h+v-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const _=(c+1)/2,y=(h+1)/2,M=(v+1)/2,w=(d+f)/4,b=(u+x)/4,S=(m+p)/4;return _>y&&_>M?_<.01?(i=0,r=.707106781,s=.707106781):(i=Math.sqrt(_),r=w/i,s=b/i):y>M?y<.01?(i=.707106781,r=0,s=.707106781):(r=Math.sqrt(y),i=w/r,s=S/r):M<.01?(i=.707106781,r=.707106781,s=0):(s=Math.sqrt(M),i=b/s,r=S/s),this.set(i,r,s,t),this}let g=Math.sqrt((p-m)*(p-m)+(u-x)*(u-x)+(f-d)*(f-d));return Math.abs(g)<.001&&(g=1),this.x=(p-m)/g,this.y=(u-x)/g,this.z=(f-d)/g,this.w=Math.acos((c+h+v-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,i){return i!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}class wr extends Qi{constructor(e,t,i){super(),Object.defineProperty(this,"isWebGLRenderTarget",{value:!0}),this.width=e,this.height=t,this.scissor=new gt(0,0,e,t),this.scissorTest=!1,this.viewport=new gt(0,0,e,t),i=i||{},this.texture=new yt(void 0,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.texture.image={},this.texture.image.width=e,this.texture.image.height=t,this.texture.generateMipmaps=i.generateMipmaps!==void 0?i.generateMipmaps:!1,this.texture.minFilter=i.minFilter!==void 0?i.minFilter:Vt,this.depthBuffer=i.depthBuffer!==void 0?i.depthBuffer:!0,this.stencilBuffer=i.stencilBuffer!==void 0?i.stencilBuffer:!1,this.depthTexture=i.depthTexture!==void 0?i.depthTexture:null}setSize(e,t){(this.width!==e||this.height!==t)&&(this.width=e,this.height=t,this.texture.image.width=e,this.texture.image.height=t,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}class AE extends wr{constructor(e,t,i){super(e,t,i),Object.defineProperty(this,"isWebGLMultisampleRenderTarget",{value:!0}),this.samples=4}copy(e){return super.copy.call(this,e),this.samples=e.samples,this}}class Qt{constructor(e=0,t=0,i=0,r=1){Object.defineProperty(this,"isQuaternion",{value:!0}),this._x=e,this._y=t,this._z=i,this._w=r}static slerp(e,t,i,r){return i.copy(e).slerp(t,r)}static slerpFlat(e,t,i,r,s,a,o){let l=i[r+0],c=i[r+1],d=i[r+2],u=i[r+3];const f=s[a+0],h=s[a+1],m=s[a+2],x=s[a+3];if(u!==x||l!==f||c!==h||d!==m){let p=1-o;const v=l*f+c*h+d*m+u*x,g=v>=0?1:-1,_=1-v*v;if(_>Number.EPSILON){const M=Math.sqrt(_),w=Math.atan2(M,v*g);p=Math.sin(p*w)/M,o=Math.sin(o*w)/M}const y=o*g;if(l=l*p+f*y,c=c*p+h*y,d=d*p+m*y,u=u*p+x*y,p===1-o){const M=1/Math.sqrt(l*l+c*c+d*d+u*u);l*=M,c*=M,d*=M,u*=M}}e[t]=l,e[t+1]=c,e[t+2]=d,e[t+3]=u}static multiplyQuaternionsFlat(e,t,i,r,s,a){const o=i[r],l=i[r+1],c=i[r+2],d=i[r+3],u=s[a],f=s[a+1],h=s[a+2],m=s[a+3];return e[t]=o*m+d*u+l*h-c*f,e[t+1]=l*m+d*f+c*u-o*h,e[t+2]=c*m+d*h+o*f-l*u,e[t+3]=d*m-o*u-l*f-c*h,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,r){return this._x=e,this._y=t,this._z=i,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const i=e._x,r=e._y,s=e._z,a=e._order,o=Math.cos,l=Math.sin,c=o(i/2),d=o(r/2),u=o(s/2),f=l(i/2),h=l(r/2),m=l(s/2);switch(a){case"XYZ":this._x=f*d*u+c*h*m,this._y=c*h*u-f*d*m,this._z=c*d*m+f*h*u,this._w=c*d*u-f*h*m;break;case"YXZ":this._x=f*d*u+c*h*m,this._y=c*h*u-f*d*m,this._z=c*d*m-f*h*u,this._w=c*d*u+f*h*m;break;case"ZXY":this._x=f*d*u-c*h*m,this._y=c*h*u+f*d*m,this._z=c*d*m+f*h*u,this._w=c*d*u-f*h*m;break;case"ZYX":this._x=f*d*u-c*h*m,this._y=c*h*u+f*d*m,this._z=c*d*m-f*h*u,this._w=c*d*u+f*h*m;break;case"YZX":this._x=f*d*u+c*h*m,this._y=c*h*u+f*d*m,this._z=c*d*m-f*h*u,this._w=c*d*u-f*h*m;break;case"XZY":this._x=f*d*u-c*h*m,this._y=c*h*u-f*d*m,this._z=c*d*m+f*h*u,this._w=c*d*u+f*h*m;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const i=t/2,r=Math.sin(i);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,i=t[0],r=t[4],s=t[8],a=t[1],o=t[5],l=t[9],c=t[2],d=t[6],u=t[10],f=i+o+u;if(f>0){const h=.5/Math.sqrt(f+1);this._w=.25/h,this._x=(d-l)*h,this._y=(s-c)*h,this._z=(a-r)*h}else if(i>o&&i>u){const h=2*Math.sqrt(1+i-o-u);this._w=(d-l)/h,this._x=.25*h,this._y=(r+a)/h,this._z=(s+c)/h}else if(o>u){const h=2*Math.sqrt(1+o-i-u);this._w=(s-c)/h,this._x=(r+a)/h,this._y=.25*h,this._z=(l+d)/h}else{const h=2*Math.sqrt(1+u-i-o);this._w=(a-r)/h,this._x=(s+c)/h,this._y=(l+d)/h,this._z=.25*h}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let r=e.dot(t)+1;return r<1e-6?(r=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=r):(this._x=0,this._y=-e.z,this._z=e.y,this._w=r)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=r),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(tt.clamp(this.dot(e),-1,1)))}rotateTowards(e,t){const i=this.angleTo(e);if(i===0)return this;const r=Math.min(1,t/i);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return t!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const i=e._x,r=e._y,s=e._z,a=e._w,o=t._x,l=t._y,c=t._z,d=t._w;return this._x=i*d+a*o+r*c-s*l,this._y=r*d+a*l+s*o-i*c,this._z=s*d+a*c+i*l-r*o,this._w=a*d-i*o-r*l-s*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const i=this._x,r=this._y,s=this._z,a=this._w;let o=a*e._w+i*e._x+r*e._y+s*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=i,this._y=r,this._z=s,this;const l=1-o*o;if(l<=Number.EPSILON){const h=1-t;return this._w=h*a+t*this._w,this._x=h*i+t*this._x,this._y=h*r+t*this._y,this._z=h*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),d=Math.atan2(c,o),u=Math.sin((1-t)*d)/c,f=Math.sin(t*d)/c;return this._w=a*u+this._w*f,this._x=i*u+this._x*f,this._y=r*u+this._y*f,this._z=s*u+this._z*f,this._onChangeCallback(),this}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}class O{constructor(e=0,t=0,i=0){Object.defineProperty(this,"isVector3",{value:!0}),this.x=e,this.y=t,this.z=i}set(e,t,i){return i===void 0&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(Ox.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Ox.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[3]*i+s[6]*r,this.y=s[1]*t+s[4]*i+s[7]*r,this.z=s[2]*t+s[5]*i+s[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,i=this.y,r=this.z,s=e.elements,a=1/(s[3]*t+s[7]*i+s[11]*r+s[15]);return this.x=(s[0]*t+s[4]*i+s[8]*r+s[12])*a,this.y=(s[1]*t+s[5]*i+s[9]*r+s[13])*a,this.z=(s[2]*t+s[6]*i+s[10]*r+s[14])*a,this}applyQuaternion(e){const t=this.x,i=this.y,r=this.z,s=e.x,a=e.y,o=e.z,l=e.w,c=l*t+a*r-o*i,d=l*i+o*t-s*r,u=l*r+s*i-a*t,f=-s*t-a*i-o*r;return this.x=c*l+f*-s+d*-o-u*-a,this.y=d*l+f*-a+u*-s-c*-o,this.z=u*l+f*-o+c*-a-d*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[4]*i+s[8]*r,this.y=s[1]*t+s[5]*i+s[9]*r,this.z=s[2]*t+s[6]*i+s[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e,t){return t!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){const i=e.x,r=e.y,s=e.z,a=t.x,o=t.y,l=t.z;return this.x=r*l-s*o,this.y=s*a-i*l,this.z=i*o-r*a,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return qf.copy(this).projectOnVector(e),this.sub(qf)}reflect(e){return this.sub(qf.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(tt.clamp(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y,r=this.z-e.z;return t*t+i*i+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){const r=Math.sin(t)*e;return this.x=r*Math.sin(i),this.y=Math.cos(t)*e,this.z=r*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,i){return i!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}const qf=new O,Ox=new Qt;class er{constructor(e,t){Object.defineProperty(this,"isBox3",{value:!0}),this.min=e!==void 0?e:new O(1/0,1/0,1/0),this.max=t!==void 0?t:new O(-1/0,-1/0,-1/0)}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,i=1/0,r=1/0,s=-1/0,a=-1/0,o=-1/0;for(let l=0,c=e.length;l<c;l+=3){const d=e[l],u=e[l+1],f=e[l+2];d<t&&(t=d),u<i&&(i=u),f<r&&(r=f),d>s&&(s=d),u>a&&(a=u),f>o&&(o=f)}return this.min.set(t,i,r),this.max.set(s,a,o),this}setFromBufferAttribute(e){let t=1/0,i=1/0,r=1/0,s=-1/0,a=-1/0,o=-1/0;for(let l=0,c=e.count;l<c;l++){const d=e.getX(l),u=e.getY(l),f=e.getZ(l);d<t&&(t=d),u<i&&(i=u),f<r&&(r=f),d>s&&(s=d),u>a&&(a=u),f>o&&(o=f)}return this.min.set(t,i,r),this.max.set(s,a,o),this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=Eo.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e){return this.makeEmpty(),this.expandByObject(e)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return e===void 0&&(console.warn("THREE.Box3: .getCenter() target is now required"),e=new O),this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return e===void 0&&(console.warn("THREE.Box3: .getSize() target is now required"),e=new O),this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e){e.updateWorldMatrix(!1,!1);const t=e.geometry;t!==void 0&&(t.boundingBox===null&&t.computeBoundingBox(),Bf.copy(t.boundingBox),Bf.applyMatrix4(e.matrixWorld),this.union(Bf));const i=e.children;for(let r=0,s=i.length;r<s;r++)this.expandByObject(i[r]);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t===void 0&&(console.warn("THREE.Box3: .getParameter() target is now required"),t=new O),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Eo),Eo.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(To),Ll.subVectors(this.max,To),la.subVectors(e.a,To),da.subVectors(e.b,To),ua.subVectors(e.c,To),cr.subVectors(da,la),lr.subVectors(ua,da),Wr.subVectors(la,ua);let t=[0,-cr.z,cr.y,0,-lr.z,lr.y,0,-Wr.z,Wr.y,cr.z,0,-cr.x,lr.z,0,-lr.x,Wr.z,0,-Wr.x,-cr.y,cr.x,0,-lr.y,lr.x,0,-Wr.y,Wr.x,0];return!Nf(t,la,da,ua,Ll)||(t=[1,0,0,0,1,0,0,0,1],!Nf(t,la,da,ua,Ll))?!1:(Cl.crossVectors(cr,lr),t=[Cl.x,Cl.y,Cl.z],Nf(t,la,da,ua,Ll))}clampPoint(e,t){return t===void 0&&(console.warn("THREE.Box3: .clampPoint() target is now required"),t=new O),t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Eo.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return e===void 0&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(e.center),e.radius=this.getSize(Eo).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Di[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Di[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Di[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Di[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Di[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Di[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Di[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Di[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Di),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}function Nf(n,e,t,i,r){for(let s=0,a=n.length-3;s<=a;s+=3){$r.fromArray(n,s);const o=r.x*Math.abs($r.x)+r.y*Math.abs($r.y)+r.z*Math.abs($r.z),l=e.dot($r),c=t.dot($r),d=i.dot($r);if(Math.max(-Math.max(l,c,d),Math.min(l,c,d))>o)return!1}return!0}const Di=[new O,new O,new O,new O,new O,new O,new O,new O],Eo=new O,Bf=new er,la=new O,da=new O,ua=new O,cr=new O,lr=new O,Wr=new O,To=new O,Ll=new O,Cl=new O,$r=new O,LE=new er;class qr{constructor(e,t){this.center=e!==void 0?e:new O,this.radius=t!==void 0?t:-1}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const i=this.center;t!==void 0?i.copy(t):LE.setFromPoints(e).getCenter(i);let r=0;for(let s=0,a=e.length;s<a;s++)r=Math.max(r,i.distanceToSquared(e[s]));return this.radius=Math.sqrt(r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const i=this.center.distanceToSquared(e);return t===void 0&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),t=new O),t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return e===void 0&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),e=new er),this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}}const Oi=new O,Uf=new O,Rl=new O,dr=new O,Gf=new O,Pl=new O,kf=new O;class fo{constructor(e,t){this.origin=e!==void 0?e:new O,this.direction=t!==void 0?t:new O(0,0,-1)}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}clone(){return new this.constructor().copy(this)}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t===void 0&&(console.warn("THREE.Ray: .at() target is now required"),t=new O),t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Oi)),this}closestPointToPoint(e,t){t===void 0&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),t=new O),t.subVectors(e,this.origin);const i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(i).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Oi.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Oi.copy(this.direction).multiplyScalar(t).add(this.origin),Oi.distanceToSquared(e))}distanceSqToSegment(e,t,i,r){Uf.copy(e).add(t).multiplyScalar(.5),Rl.copy(t).sub(e).normalize(),dr.copy(this.origin).sub(Uf);const s=e.distanceTo(t)*.5,a=-this.direction.dot(Rl),o=dr.dot(this.direction),l=-dr.dot(Rl),c=dr.lengthSq(),d=Math.abs(1-a*a);let u,f,h,m;if(d>0)if(u=a*l-o,f=a*o-l,m=s*d,u>=0)if(f>=-m)if(f<=m){const x=1/d;u*=x,f*=x,h=u*(u+a*f+2*o)+f*(a*u+f+2*l)+c}else f=s,u=Math.max(0,-(a*f+o)),h=-u*u+f*(f+2*l)+c;else f=-s,u=Math.max(0,-(a*f+o)),h=-u*u+f*(f+2*l)+c;else f<=-m?(u=Math.max(0,-(-a*s+o)),f=u>0?-s:Math.min(Math.max(-s,-l),s),h=-u*u+f*(f+2*l)+c):f<=m?(u=0,f=Math.min(Math.max(-s,-l),s),h=f*(f+2*l)+c):(u=Math.max(0,-(a*s+o)),f=u>0?s:Math.min(Math.max(-s,-l),s),h=-u*u+f*(f+2*l)+c);else f=a>0?-s:s,u=Math.max(0,-(a*f+o)),h=-u*u+f*(f+2*l)+c;return i&&i.copy(this.direction).multiplyScalar(u).add(this.origin),r&&r.copy(Rl).multiplyScalar(f).add(Uf),h}intersectSphere(e,t){Oi.subVectors(e.center,this.origin);const i=Oi.dot(this.direction),r=Oi.dot(Oi)-i*i,s=e.radius*e.radius;if(r>s)return null;const a=Math.sqrt(s-r),o=i-a,l=i+a;return o<0&&l<0?null:o<0?this.at(l,t):this.at(o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){const i=this.distanceToPlane(e);return i===null?null:this.at(i,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let i,r,s,a,o,l;const c=1/this.direction.x,d=1/this.direction.y,u=1/this.direction.z,f=this.origin;return c>=0?(i=(e.min.x-f.x)*c,r=(e.max.x-f.x)*c):(i=(e.max.x-f.x)*c,r=(e.min.x-f.x)*c),d>=0?(s=(e.min.y-f.y)*d,a=(e.max.y-f.y)*d):(s=(e.max.y-f.y)*d,a=(e.min.y-f.y)*d),i>a||s>r||((s>i||i!==i)&&(i=s),(a<r||r!==r)&&(r=a),u>=0?(o=(e.min.z-f.z)*u,l=(e.max.z-f.z)*u):(o=(e.max.z-f.z)*u,l=(e.min.z-f.z)*u),i>l||o>r)||((o>i||i!==i)&&(i=o),(l<r||r!==r)&&(r=l),r<0)?null:this.at(i>=0?i:r,t)}intersectsBox(e){return this.intersectBox(e,Oi)!==null}intersectTriangle(e,t,i,r,s){Gf.subVectors(t,e),Pl.subVectors(i,e),kf.crossVectors(Gf,Pl);let a=this.direction.dot(kf),o;if(a>0){if(r)return null;o=1}else if(a<0)o=-1,a=-a;else return null;dr.subVectors(this.origin,e);const l=o*this.direction.dot(Pl.crossVectors(dr,Pl));if(l<0)return null;const c=o*this.direction.dot(Gf.cross(dr));if(c<0||l+c>a)return null;const d=-o*dr.dot(kf);return d<0?null:this.at(d/a,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}}class ot{constructor(){Object.defineProperty(this,"isMatrix4",{value:!0}),this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,i,r,s,a,o,l,c,d,u,f,h,m,x,p){const v=this.elements;return v[0]=e,v[4]=t,v[8]=i,v[12]=r,v[1]=s,v[5]=a,v[9]=o,v[13]=l,v[2]=c,v[6]=d,v[10]=u,v[14]=f,v[3]=h,v[7]=m,v[11]=x,v[15]=p,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new ot().fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){const t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,i=e.elements,r=1/fa.setFromMatrixColumn(e,0).length(),s=1/fa.setFromMatrixColumn(e,1).length(),a=1/fa.setFromMatrixColumn(e,2).length();return t[0]=i[0]*r,t[1]=i[1]*r,t[2]=i[2]*r,t[3]=0,t[4]=i[4]*s,t[5]=i[5]*s,t[6]=i[6]*s,t[7]=0,t[8]=i[8]*a,t[9]=i[9]*a,t[10]=i[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,i=e.x,r=e.y,s=e.z,a=Math.cos(i),o=Math.sin(i),l=Math.cos(r),c=Math.sin(r),d=Math.cos(s),u=Math.sin(s);if(e.order==="XYZ"){const f=a*d,h=a*u,m=o*d,x=o*u;t[0]=l*d,t[4]=-l*u,t[8]=c,t[1]=h+m*c,t[5]=f-x*c,t[9]=-o*l,t[2]=x-f*c,t[6]=m+h*c,t[10]=a*l}else if(e.order==="YXZ"){const f=l*d,h=l*u,m=c*d,x=c*u;t[0]=f+x*o,t[4]=m*o-h,t[8]=a*c,t[1]=a*u,t[5]=a*d,t[9]=-o,t[2]=h*o-m,t[6]=x+f*o,t[10]=a*l}else if(e.order==="ZXY"){const f=l*d,h=l*u,m=c*d,x=c*u;t[0]=f-x*o,t[4]=-a*u,t[8]=m+h*o,t[1]=h+m*o,t[5]=a*d,t[9]=x-f*o,t[2]=-a*c,t[6]=o,t[10]=a*l}else if(e.order==="ZYX"){const f=a*d,h=a*u,m=o*d,x=o*u;t[0]=l*d,t[4]=m*c-h,t[8]=f*c+x,t[1]=l*u,t[5]=x*c+f,t[9]=h*c-m,t[2]=-c,t[6]=o*l,t[10]=a*l}else if(e.order==="YZX"){const f=a*l,h=a*c,m=o*l,x=o*c;t[0]=l*d,t[4]=x-f*u,t[8]=m*u+h,t[1]=u,t[5]=a*d,t[9]=-o*d,t[2]=-c*d,t[6]=h*u+m,t[10]=f-x*u}else if(e.order==="XZY"){const f=a*l,h=a*c,m=o*l,x=o*c;t[0]=l*d,t[4]=-u,t[8]=c*d,t[1]=f*u+x,t[5]=a*d,t[9]=h*u-m,t[2]=m*u-h,t[6]=o*d,t[10]=x*u+f}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(CE,e,RE)}lookAt(e,t,i){const r=this.elements;return yn.subVectors(e,t),yn.lengthSq()===0&&(yn.z=1),yn.normalize(),ur.crossVectors(i,yn),ur.lengthSq()===0&&(Math.abs(i.z)===1?yn.x+=1e-4:yn.z+=1e-4,yn.normalize(),ur.crossVectors(i,yn)),ur.normalize(),Il.crossVectors(yn,ur),r[0]=ur.x,r[4]=Il.x,r[8]=yn.x,r[1]=ur.y,r[5]=Il.y,r[9]=yn.y,r[2]=ur.z,r[6]=Il.z,r[10]=yn.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,r=t.elements,s=this.elements,a=i[0],o=i[4],l=i[8],c=i[12],d=i[1],u=i[5],f=i[9],h=i[13],m=i[2],x=i[6],p=i[10],v=i[14],g=i[3],_=i[7],y=i[11],M=i[15],w=r[0],b=r[4],S=r[8],E=r[12],C=r[1],I=r[5],W=r[9],H=r[13],A=r[2],q=r[6],N=r[10],X=r[14],Z=r[3],$=r[7],J=r[11],R=r[15];return s[0]=a*w+o*C+l*A+c*Z,s[4]=a*b+o*I+l*q+c*$,s[8]=a*S+o*W+l*N+c*J,s[12]=a*E+o*H+l*X+c*R,s[1]=d*w+u*C+f*A+h*Z,s[5]=d*b+u*I+f*q+h*$,s[9]=d*S+u*W+f*N+h*J,s[13]=d*E+u*H+f*X+h*R,s[2]=m*w+x*C+p*A+v*Z,s[6]=m*b+x*I+p*q+v*$,s[10]=m*S+x*W+p*N+v*J,s[14]=m*E+x*H+p*X+v*R,s[3]=g*w+_*C+y*A+M*Z,s[7]=g*b+_*I+y*q+M*$,s[11]=g*S+_*W+y*N+M*J,s[15]=g*E+_*H+y*X+M*R,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[4],r=e[8],s=e[12],a=e[1],o=e[5],l=e[9],c=e[13],d=e[2],u=e[6],f=e[10],h=e[14],m=e[3],x=e[7],p=e[11],v=e[15];return m*(+s*l*u-r*c*u-s*o*f+i*c*f+r*o*h-i*l*h)+x*(+t*l*h-t*c*f+s*a*f-r*a*h+r*c*d-s*l*d)+p*(+t*c*u-t*o*h-s*a*u+i*a*h+s*o*d-i*c*d)+v*(-r*o*d-t*l*u+t*o*f+r*a*u-i*a*f+i*l*d)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=i),this}invert(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],a=e[4],o=e[5],l=e[6],c=e[7],d=e[8],u=e[9],f=e[10],h=e[11],m=e[12],x=e[13],p=e[14],v=e[15],g=u*p*c-x*f*c+x*l*h-o*p*h-u*l*v+o*f*v,_=m*f*c-d*p*c-m*l*h+a*p*h+d*l*v-a*f*v,y=d*x*c-m*u*c+m*o*h-a*x*h-d*o*v+a*u*v,M=m*u*l-d*x*l-m*o*f+a*x*f+d*o*p-a*u*p,w=t*g+i*_+r*y+s*M;if(w===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const b=1/w;return e[0]=g*b,e[1]=(x*f*s-u*p*s-x*r*h+i*p*h+u*r*v-i*f*v)*b,e[2]=(o*p*s-x*l*s+x*r*c-i*p*c-o*r*v+i*l*v)*b,e[3]=(u*l*s-o*f*s-u*r*c+i*f*c+o*r*h-i*l*h)*b,e[4]=_*b,e[5]=(d*p*s-m*f*s+m*r*h-t*p*h-d*r*v+t*f*v)*b,e[6]=(m*l*s-a*p*s-m*r*c+t*p*c+a*r*v-t*l*v)*b,e[7]=(a*f*s-d*l*s+d*r*c-t*f*c-a*r*h+t*l*h)*b,e[8]=y*b,e[9]=(m*u*s-d*x*s-m*i*h+t*x*h+d*i*v-t*u*v)*b,e[10]=(a*x*s-m*o*s+m*i*c-t*x*c-a*i*v+t*o*v)*b,e[11]=(d*o*s-a*u*s-d*i*c+t*u*c+a*i*h-t*o*h)*b,e[12]=M*b,e[13]=(d*x*r-m*u*r+m*i*f-t*x*f-d*i*p+t*u*p)*b,e[14]=(m*o*r-a*x*r-m*i*l+t*x*l+a*i*p-t*o*p)*b,e[15]=(a*u*r-d*o*r+d*i*l-t*u*l-a*i*f+t*o*f)*b,this}scale(e){const t=this.elements,i=e.x,r=e.y,s=e.z;return t[0]*=i,t[4]*=r,t[8]*=s,t[1]*=i,t[5]*=r,t[9]*=s,t[2]*=i,t[6]*=r,t[10]*=s,t[3]*=i,t[7]*=r,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,r))}makeTranslation(e,t,i){return this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const i=Math.cos(t),r=Math.sin(t),s=1-i,a=e.x,o=e.y,l=e.z,c=s*a,d=s*o;return this.set(c*a+i,c*o-r*l,c*l+r*o,0,c*o+r*l,d*o+i,d*l-r*a,0,c*l-r*o,d*l+r*a,s*l*l+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i){return this.set(1,t,i,0,e,1,i,0,e,t,1,0,0,0,0,1),this}compose(e,t,i){const r=this.elements,s=t._x,a=t._y,o=t._z,l=t._w,c=s+s,d=a+a,u=o+o,f=s*c,h=s*d,m=s*u,x=a*d,p=a*u,v=o*u,g=l*c,_=l*d,y=l*u,M=i.x,w=i.y,b=i.z;return r[0]=(1-(x+v))*M,r[1]=(h+y)*M,r[2]=(m-_)*M,r[3]=0,r[4]=(h-y)*w,r[5]=(1-(f+v))*w,r[6]=(p+g)*w,r[7]=0,r[8]=(m+_)*b,r[9]=(p-g)*b,r[10]=(1-(f+x))*b,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,i){const r=this.elements;let s=fa.set(r[0],r[1],r[2]).length();const a=fa.set(r[4],r[5],r[6]).length(),o=fa.set(r[8],r[9],r[10]).length();this.determinant()<0&&(s=-s),e.x=r[12],e.y=r[13],e.z=r[14],Wn.copy(this);const c=1/s,d=1/a,u=1/o;return Wn.elements[0]*=c,Wn.elements[1]*=c,Wn.elements[2]*=c,Wn.elements[4]*=d,Wn.elements[5]*=d,Wn.elements[6]*=d,Wn.elements[8]*=u,Wn.elements[9]*=u,Wn.elements[10]*=u,t.setFromRotationMatrix(Wn),i.x=s,i.y=a,i.z=o,this}makePerspective(e,t,i,r,s,a){a===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const o=this.elements,l=2*s/(t-e),c=2*s/(i-r),d=(t+e)/(t-e),u=(i+r)/(i-r),f=-(a+s)/(a-s),h=-2*a*s/(a-s);return o[0]=l,o[4]=0,o[8]=d,o[12]=0,o[1]=0,o[5]=c,o[9]=u,o[13]=0,o[2]=0,o[6]=0,o[10]=f,o[14]=h,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(e,t,i,r,s,a){const o=this.elements,l=1/(t-e),c=1/(i-r),d=1/(a-s),u=(t+e)*l,f=(i+r)*c,h=(a+s)*d;return o[0]=2*l,o[4]=0,o[8]=0,o[12]=-u,o[1]=0,o[5]=2*c,o[9]=0,o[13]=-f,o[2]=0,o[6]=0,o[10]=-2*d,o[14]=-h,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(e){const t=this.elements,i=e.elements;for(let r=0;r<16;r++)if(t[r]!==i[r])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}const fa=new O,Wn=new ot,CE=new O(0,0,0),RE=new O(1,1,1),ur=new O,Il=new O,yn=new O;class ho{constructor(e=0,t=0,i=0,r=ho.DefaultOrder){Object.defineProperty(this,"isEuler",{value:!0}),this._x=e,this._y=t,this._z=i,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,r){return this._x=e,this._y=t,this._z=i,this._order=r||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t,i){const r=tt.clamp,s=e.elements,a=s[0],o=s[4],l=s[8],c=s[1],d=s[5],u=s[9],f=s[2],h=s[6],m=s[10];switch(t=t||this._order,t){case"XYZ":this._y=Math.asin(r(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,m),this._z=Math.atan2(-o,a)):(this._x=Math.atan2(h,d),this._z=0);break;case"YXZ":this._x=Math.asin(-r(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(l,m),this._z=Math.atan2(c,d)):(this._y=Math.atan2(-f,a),this._z=0);break;case"ZXY":this._x=Math.asin(r(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(-f,m),this._z=Math.atan2(-o,d)):(this._y=0,this._z=Math.atan2(c,a));break;case"ZYX":this._y=Math.asin(-r(f,-1,1)),Math.abs(f)<.9999999?(this._x=Math.atan2(h,m),this._z=Math.atan2(c,a)):(this._x=0,this._z=Math.atan2(-o,d));break;case"YZX":this._z=Math.asin(r(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-u,d),this._y=Math.atan2(-f,a)):(this._x=0,this._y=Math.atan2(l,m));break;case"XZY":this._z=Math.asin(-r(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(h,d),this._y=Math.atan2(l,a)):(this._x=Math.atan2(-u,m),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,i!==!1&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return zx.makeRotationFromQuaternion(e),this.setFromRotationMatrix(zx,t,i)}setFromVector3(e,t){return this.set(e.x,e.y,e.z,t||this._order)}reorder(e){return Fx.setFromEuler(this),this.setFromQuaternion(Fx,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}toVector3(e){return e?e.set(this._x,this._y,this._z):new O(this._x,this._y,this._z)}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}ho.DefaultOrder="XYZ";ho.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];const zx=new ot,Fx=new Qt;class op{constructor(){this.mask=1}set(e){this.mask=1<<e|0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}}let PE=0;const qx=new O,ha=new Qt,zi=new ot,Dl=new O,Ao=new O,IE=new O,DE=new Qt,Nx=new O(1,0,0),Bx=new O(0,1,0),Ux=new O(0,0,1),OE={type:"added"},Gx={type:"removed"};function je(){Object.defineProperty(this,"id",{value:PE++}),this.uuid=tt.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=je.DefaultUp.clone();const n=new O,e=new ho,t=new Qt,i=new O(1,1,1);function r(){t.setFromEuler(e,!1)}function s(){e.setFromQuaternion(t,void 0,!1)}e._onChange(r),t._onChange(s),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:n},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:t},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new ot},normalMatrix:{value:new Sn}}),this.matrix=new ot,this.matrixWorld=new ot,this.matrixAutoUpdate=je.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new op,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}je.DefaultUp=new O(0,1,0);je.DefaultMatrixAutoUpdate=!0;je.prototype=Object.assign(Object.create(Qi.prototype),{constructor:je,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(n){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(n),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(n){return this.quaternion.premultiply(n),this},setRotationFromAxisAngle:function(n,e){this.quaternion.setFromAxisAngle(n,e)},setRotationFromEuler:function(n){this.quaternion.setFromEuler(n,!0)},setRotationFromMatrix:function(n){this.quaternion.setFromRotationMatrix(n)},setRotationFromQuaternion:function(n){this.quaternion.copy(n)},rotateOnAxis:function(n,e){return ha.setFromAxisAngle(n,e),this.quaternion.multiply(ha),this},rotateOnWorldAxis:function(n,e){return ha.setFromAxisAngle(n,e),this.quaternion.premultiply(ha),this},rotateX:function(n){return this.rotateOnAxis(Nx,n)},rotateY:function(n){return this.rotateOnAxis(Bx,n)},rotateZ:function(n){return this.rotateOnAxis(Ux,n)},translateOnAxis:function(n,e){return qx.copy(n).applyQuaternion(this.quaternion),this.position.add(qx.multiplyScalar(e)),this},translateX:function(n){return this.translateOnAxis(Nx,n)},translateY:function(n){return this.translateOnAxis(Bx,n)},translateZ:function(n){return this.translateOnAxis(Ux,n)},localToWorld:function(n){return n.applyMatrix4(this.matrixWorld)},worldToLocal:function(n){return n.applyMatrix4(zi.copy(this.matrixWorld).invert())},lookAt:function(n,e,t){n.isVector3?Dl.copy(n):Dl.set(n,e,t);const i=this.parent;this.updateWorldMatrix(!0,!1),Ao.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?zi.lookAt(Ao,Dl,this.up):zi.lookAt(Dl,Ao,this.up),this.quaternion.setFromRotationMatrix(zi),i&&(zi.extractRotation(i.matrixWorld),ha.setFromRotationMatrix(zi),this.quaternion.premultiply(ha.invert()))},add:function(n){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return n===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",n),this):(n&&n.isObject3D?(n.parent!==null&&n.parent.remove(n),n.parent=this,this.children.push(n),n.dispatchEvent(OE)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",n),this)},remove:function(n){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(n);return e!==-1&&(n.parent=null,this.children.splice(e,1),n.dispatchEvent(Gx)),this},clear:function(){for(let n=0;n<this.children.length;n++){const e=this.children[n];e.parent=null,e.dispatchEvent(Gx)}return this.children.length=0,this},attach:function(n){return this.updateWorldMatrix(!0,!1),zi.copy(this.matrixWorld).invert(),n.parent!==null&&(n.parent.updateWorldMatrix(!0,!1),zi.multiply(n.parent.matrixWorld)),n.applyMatrix4(zi),n.updateWorldMatrix(!1,!1),this.add(n),this},getObjectById:function(n){return this.getObjectByProperty("id",n)},getObjectByName:function(n){return this.getObjectByProperty("name",n)},getObjectByProperty:function(n,e){if(this[n]===e)return this;for(let t=0,i=this.children.length;t<i;t++){const s=this.children[t].getObjectByProperty(n,e);if(s!==void 0)return s}},getWorldPosition:function(n){return n===void 0&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),n=new O),this.updateWorldMatrix(!0,!1),n.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(n){return n===void 0&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),n=new Qt),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ao,n,IE),n},getWorldScale:function(n){return n===void 0&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),n=new O),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ao,DE,n),n},getWorldDirection:function(n){n===void 0&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),n=new O),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return n.set(e[8],e[9],e[10]).normalize()},raycast:function(){},traverse:function(n){n(this);const e=this.children;for(let t=0,i=e.length;t<i;t++)e[t].traverse(n)},traverseVisible:function(n){if(this.visible===!1)return;n(this);const e=this.children;for(let t=0,i=e.length;t<i;t++)e[t].traverseVisible(n)},traverseAncestors:function(n){const e=this.parent;e!==null&&(n(e),e.traverseAncestors(n))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(n){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||n)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,n=!0);const e=this.children;for(let t=0,i=e.length;t<i;t++)e[t].updateMatrixWorld(n)},updateWorldMatrix:function(n,e){const t=this.parent;if(n===!0&&t!==null&&t.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),e===!0){const i=this.children;for(let r=0,s=i.length;r<s;r++)i[r].updateWorldMatrix(!1,!0)}},toJSON:function(n){const e=n===void 0||typeof n=="string",t={};e&&(n={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},t.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON());function r(a,o){return a[o.uuid]===void 0&&(a[o.uuid]=o.toJSON(n)),o.uuid}if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(n.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const o=a.shapes;if(Array.isArray(o))for(let l=0,c=o.length;l<c;l++){const d=o[l];r(n.shapes,d)}else r(n.shapes,o)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(n.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let o=0,l=this.material.length;o<l;o++)a.push(r(n.materials,this.material[o]));i.material=a}else i.material=r(n.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(n).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const o=this.animations[a];i.animations.push(r(n.animations,o))}}if(e){const a=s(n.geometries),o=s(n.materials),l=s(n.textures),c=s(n.images),d=s(n.shapes),u=s(n.skeletons),f=s(n.animations);a.length>0&&(t.geometries=a),o.length>0&&(t.materials=o),l.length>0&&(t.textures=l),c.length>0&&(t.images=c),d.length>0&&(t.shapes=d),u.length>0&&(t.skeletons=u),f.length>0&&(t.animations=f)}return t.object=i,t;function s(a){const o=[];for(const l in a){const c=a[l];delete c.metadata,o.push(c)}return o}},clone:function(n){return new this.constructor().copy(this,n)},copy:function(n,e=!0){if(this.name=n.name,this.up.copy(n.up),this.position.copy(n.position),this.rotation.order=n.rotation.order,this.quaternion.copy(n.quaternion),this.scale.copy(n.scale),this.matrix.copy(n.matrix),this.matrixWorld.copy(n.matrixWorld),this.matrixAutoUpdate=n.matrixAutoUpdate,this.matrixWorldNeedsUpdate=n.matrixWorldNeedsUpdate,this.layers.mask=n.layers.mask,this.visible=n.visible,this.castShadow=n.castShadow,this.receiveShadow=n.receiveShadow,this.frustumCulled=n.frustumCulled,this.renderOrder=n.renderOrder,this.userData=JSON.parse(JSON.stringify(n.userData)),e===!0)for(let t=0;t<n.children.length;t++){const i=n.children[t];this.add(i.clone())}return this}});const Hf=new O,zE=new O,FE=new Sn;class fi{constructor(e,t){Object.defineProperty(this,"isPlane",{value:!0}),this.normal=e!==void 0?e:new O(1,0,0),this.constant=t!==void 0?t:0}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,r){return this.normal.set(e,t,i),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){const r=Hf.subVectors(i,t).cross(zE.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}clone(){return new this.constructor().copy(this)}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t===void 0&&(console.warn("THREE.Plane: .projectPoint() target is now required"),t=new O),t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){t===void 0&&(console.warn("THREE.Plane: .intersectLine() target is now required"),t=new O);const i=e.delta(Hf),r=this.normal.dot(i);if(r===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):void 0;const s=-(e.start.dot(this.normal)+this.constant)/r;if(!(s<0||s>1))return t.copy(i).multiplyScalar(s).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e===void 0&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),e=new O),e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const i=t||FE.getNormalMatrix(e),r=this.coplanarPoint(Hf).applyMatrix4(e),s=this.normal.applyMatrix3(i).normalize();return this.constant=-r.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}}const $n=new O,Fi=new O,Vf=new O,qi=new O,pa=new O,ma=new O,kx=new O,Wf=new O,$f=new O,jf=new O;class Kt{constructor(e,t,i){this.a=e!==void 0?e:new O,this.b=t!==void 0?t:new O,this.c=i!==void 0?i:new O}static getNormal(e,t,i,r){r===void 0&&(console.warn("THREE.Triangle: .getNormal() target is now required"),r=new O),r.subVectors(i,t),$n.subVectors(e,t),r.cross($n);const s=r.lengthSq();return s>0?r.multiplyScalar(1/Math.sqrt(s)):r.set(0,0,0)}static getBarycoord(e,t,i,r,s){$n.subVectors(r,t),Fi.subVectors(i,t),Vf.subVectors(e,t);const a=$n.dot($n),o=$n.dot(Fi),l=$n.dot(Vf),c=Fi.dot(Fi),d=Fi.dot(Vf),u=a*c-o*o;if(s===void 0&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),s=new O),u===0)return s.set(-2,-1,-1);const f=1/u,h=(c*l-o*d)*f,m=(a*d-o*l)*f;return s.set(1-h-m,m,h)}static containsPoint(e,t,i,r){return this.getBarycoord(e,t,i,r,qi),qi.x>=0&&qi.y>=0&&qi.x+qi.y<=1}static getUV(e,t,i,r,s,a,o,l){return this.getBarycoord(e,t,i,r,qi),l.set(0,0),l.addScaledVector(s,qi.x),l.addScaledVector(a,qi.y),l.addScaledVector(o,qi.z),l}static isFrontFacing(e,t,i,r){return $n.subVectors(i,t),Fi.subVectors(e,t),$n.cross(Fi).dot(r)<0}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,r){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[r]),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return $n.subVectors(this.c,this.b),Fi.subVectors(this.a,this.b),$n.cross(Fi).length()*.5}getMidpoint(e){return e===void 0&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),e=new O),e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Kt.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e===void 0&&(console.warn("THREE.Triangle: .getPlane() target is now required"),e=new fi),e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Kt.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,i,r,s){return Kt.getUV(e,this.a,this.b,this.c,t,i,r,s)}containsPoint(e){return Kt.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Kt.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){t===void 0&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),t=new O);const i=this.a,r=this.b,s=this.c;let a,o;pa.subVectors(r,i),ma.subVectors(s,i),Wf.subVectors(e,i);const l=pa.dot(Wf),c=ma.dot(Wf);if(l<=0&&c<=0)return t.copy(i);$f.subVectors(e,r);const d=pa.dot($f),u=ma.dot($f);if(d>=0&&u<=d)return t.copy(r);const f=l*u-d*c;if(f<=0&&l>=0&&d<=0)return a=l/(l-d),t.copy(i).addScaledVector(pa,a);jf.subVectors(e,s);const h=pa.dot(jf),m=ma.dot(jf);if(m>=0&&h<=m)return t.copy(s);const x=h*c-l*m;if(x<=0&&c>=0&&m<=0)return o=c/(c-m),t.copy(i).addScaledVector(ma,o);const p=d*m-h*u;if(p<=0&&u-d>=0&&h-m>=0)return kx.subVectors(s,r),o=(u-d)/(u-d+(h-m)),t.copy(r).addScaledVector(kx,o);const v=1/(p+x+f);return a=x*v,o=f*v,t.copy(i).addScaledVector(pa,a).addScaledVector(ma,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const x2={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},jn={h:0,s:0,l:0},Ol={h:0,s:0,l:0};function Xf(n,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?n+(e-n)*6*t:t<1/2?e:t<2/3?n+(e-n)*6*(2/3-t):n}function Yf(n){return n<.04045?n*.0773993808:Math.pow(n*.9478672986+.0521327014,2.4)}function Zf(n){return n<.0031308?n*12.92:1.055*Math.pow(n,.41666)-.055}class Ve{constructor(e,t,i){return Object.defineProperty(this,"isColor",{value:!0}),t===void 0&&i===void 0?this.set(e):this.setRGB(e,t,i)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,this}setRGB(e,t,i){return this.r=e,this.g=t,this.b=i,this}setHSL(e,t,i){if(e=tt.euclideanModulo(e,1),t=tt.clamp(t,0,1),i=tt.clamp(i,0,1),t===0)this.r=this.g=this.b=i;else{const r=i<=.5?i*(1+t):i+t-i*t,s=2*i-r;this.r=Xf(s,r,e+1/3),this.g=Xf(s,r,e),this.b=Xf(s,r,e-1/3)}return this}setStyle(e){function t(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let r;const s=i[1],a=i[2];switch(s){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,t(r[4]),this;if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,t(r[4]),this;break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const o=parseFloat(r[1])/360,l=parseInt(r[2],10)/100,c=parseInt(r[3],10)/100;return t(r[4]),this.setHSL(o,l,c)}break}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=i[1],s=r.length;if(s===3)return this.r=parseInt(r.charAt(0)+r.charAt(0),16)/255,this.g=parseInt(r.charAt(1)+r.charAt(1),16)/255,this.b=parseInt(r.charAt(2)+r.charAt(2),16)/255,this;if(s===6)return this.r=parseInt(r.charAt(0)+r.charAt(1),16)/255,this.g=parseInt(r.charAt(2)+r.charAt(3),16)/255,this.b=parseInt(r.charAt(4)+r.charAt(5),16)/255,this}return e&&e.length>0?this.setColorName(e):this}setColorName(e){const t=x2[e];return t!==void 0?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copyGammaToLinear(e,t=2){return this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this}copyLinearToGamma(e,t=2){const i=t>0?1/t:1;return this.r=Math.pow(e.r,i),this.g=Math.pow(e.g,i),this.b=Math.pow(e.b,i),this}convertGammaToLinear(e){return this.copyGammaToLinear(this,e),this}convertLinearToGamma(e){return this.copyLinearToGamma(this,e),this}copySRGBToLinear(e){return this.r=Yf(e.r),this.g=Yf(e.g),this.b=Yf(e.b),this}copyLinearToSRGB(e){return this.r=Zf(e.r),this.g=Zf(e.g),this.b=Zf(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return this.r*255<<16^this.g*255<<8^this.b*255<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(e){e===void 0&&(console.warn("THREE.Color: .getHSL() target is now required"),e={h:0,s:0,l:0});const t=this.r,i=this.g,r=this.b,s=Math.max(t,i,r),a=Math.min(t,i,r);let o,l;const c=(a+s)/2;if(a===s)o=0,l=0;else{const d=s-a;switch(l=c<=.5?d/(s+a):d/(2-s-a),s){case t:o=(i-r)/d+(i<r?6:0);break;case i:o=(r-t)/d+2;break;case r:o=(t-i)/d+4;break}o/=6}return e.h=o,e.s=l,e.l=c,e}getStyle(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"}offsetHSL(e,t,i){return this.getHSL(jn),jn.h+=e,jn.s+=t,jn.l+=i,this.setHSL(jn.h,jn.s,jn.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(jn),e.getHSL(Ol);const i=tt.lerp(jn.h,Ol.h,t),r=tt.lerp(jn.s,Ol.s,t),s=tt.lerp(jn.l,Ol.l,t);return this.setHSL(i,r,s),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),e.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}Ve.NAMES=x2;Ve.prototype.r=1;Ve.prototype.g=1;Ve.prototype.b=1;class cp{constructor(e,t,i,r,s,a=0){this.a=e,this.b=t,this.c=i,this.normal=r&&r.isVector3?r:new O,this.vertexNormals=Array.isArray(r)?r:[],this.color=s&&s.isColor?s:new Ve,this.vertexColors=Array.isArray(s)?s:[],this.materialIndex=a}clone(){return new this.constructor().copy(this)}copy(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(let t=0,i=e.vertexNormals.length;t<i;t++)this.vertexNormals[t]=e.vertexNormals[t].clone();for(let t=0,i=e.vertexColors.length;t<i;t++)this.vertexColors[t]=e.vertexColors[t].clone();return this}}let qE=0;function Qe(){Object.defineProperty(this,"id",{value:qE++}),this.uuid=tt.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=Da,this.side=oo,this.flatShading=!1,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=ep,this.blendDst=tp,this.blendEquation=rs,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Rd,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=m2,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Md,this.stencilZFail=Md,this.stencilZPass=Md,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}Qe.prototype=Object.assign(Object.create(Qi.prototype),{constructor:Qe,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(n){if(n!==void 0)for(const e in n){const t=n[e];if(t===void 0){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if(e==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=t===Q0;continue}const i=this[e];if(i===void 0){console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.");continue}i&&i.isColor?i.set(t):i&&i.isVector3&&t&&t.isVector3?i.copy(t):this[e]=t}},toJSON:function(n){const e=n===void 0||typeof n=="string";e&&(n={textures:{},images:{}});const t={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),this.color&&this.color.isColor&&(t.color=this.color.getHex()),this.roughness!==void 0&&(t.roughness=this.roughness),this.metalness!==void 0&&(t.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(t.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(t.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(t.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(t.specular=this.specular.getHex()),this.shininess!==void 0&&(t.shininess=this.shininess),this.clearcoat!==void 0&&(t.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(t.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(t.clearcoatMap=this.clearcoatMap.toJSON(n).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(t.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(n).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(t.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(n).uuid,t.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(t.map=this.map.toJSON(n).uuid),this.matcap&&this.matcap.isTexture&&(t.matcap=this.matcap.toJSON(n).uuid),this.alphaMap&&this.alphaMap.isTexture&&(t.alphaMap=this.alphaMap.toJSON(n).uuid),this.lightMap&&this.lightMap.isTexture&&(t.lightMap=this.lightMap.toJSON(n).uuid),this.aoMap&&this.aoMap.isTexture&&(t.aoMap=this.aoMap.toJSON(n).uuid,t.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(t.bumpMap=this.bumpMap.toJSON(n).uuid,t.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(t.normalMap=this.normalMap.toJSON(n).uuid,t.normalMapType=this.normalMapType,t.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(t.displacementMap=this.displacementMap.toJSON(n).uuid,t.displacementScale=this.displacementScale,t.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(t.roughnessMap=this.roughnessMap.toJSON(n).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(t.metalnessMap=this.metalnessMap.toJSON(n).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(t.emissiveMap=this.emissiveMap.toJSON(n).uuid),this.specularMap&&this.specularMap.isTexture&&(t.specularMap=this.specularMap.toJSON(n).uuid),this.envMap&&this.envMap.isTexture&&(t.envMap=this.envMap.toJSON(n).uuid,t.reflectivity=this.reflectivity,t.refractionRatio=this.refractionRatio,this.combine!==void 0&&(t.combine=this.combine),this.envMapIntensity!==void 0&&(t.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(t.gradientMap=this.gradientMap.toJSON(n).uuid),this.size!==void 0&&(t.size=this.size),this.sizeAttenuation!==void 0&&(t.sizeAttenuation=this.sizeAttenuation),this.blending!==Da&&(t.blending=this.blending),this.flatShading===!0&&(t.flatShading=this.flatShading),this.side!==oo&&(t.side=this.side),this.vertexColors&&(t.vertexColors=!0),this.opacity<1&&(t.opacity=this.opacity),this.transparent===!0&&(t.transparent=this.transparent),t.depthFunc=this.depthFunc,t.depthTest=this.depthTest,t.depthWrite=this.depthWrite,t.stencilWrite=this.stencilWrite,t.stencilWriteMask=this.stencilWriteMask,t.stencilFunc=this.stencilFunc,t.stencilRef=this.stencilRef,t.stencilFuncMask=this.stencilFuncMask,t.stencilFail=this.stencilFail,t.stencilZFail=this.stencilZFail,t.stencilZPass=this.stencilZPass,this.rotation&&this.rotation!==0&&(t.rotation=this.rotation),this.polygonOffset===!0&&(t.polygonOffset=!0),this.polygonOffsetFactor!==0&&(t.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(t.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&this.linewidth!==1&&(t.linewidth=this.linewidth),this.dashSize!==void 0&&(t.dashSize=this.dashSize),this.gapSize!==void 0&&(t.gapSize=this.gapSize),this.scale!==void 0&&(t.scale=this.scale),this.dithering===!0&&(t.dithering=!0),this.alphaTest>0&&(t.alphaTest=this.alphaTest),this.premultipliedAlpha===!0&&(t.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(t.wireframe=this.wireframe),this.wireframeLinewidth>1&&(t.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(t.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(t.wireframeLinejoin=this.wireframeLinejoin),this.morphTargets===!0&&(t.morphTargets=!0),this.morphNormals===!0&&(t.morphNormals=!0),this.skinning===!0&&(t.skinning=!0),this.visible===!1&&(t.visible=!1),this.toneMapped===!1&&(t.toneMapped=!1),JSON.stringify(this.userData)!=="{}"&&(t.userData=this.userData);function i(r){const s=[];for(const a in r){const o=r[a];delete o.metadata,s.push(o)}return s}if(e){const r=i(n.textures),s=i(n.images);r.length>0&&(t.textures=r),s.length>0&&(t.images=s)}return t},clone:function(){return new this.constructor().copy(this)},copy:function(n){this.name=n.name,this.fog=n.fog,this.blending=n.blending,this.side=n.side,this.flatShading=n.flatShading,this.vertexColors=n.vertexColors,this.opacity=n.opacity,this.transparent=n.transparent,this.blendSrc=n.blendSrc,this.blendDst=n.blendDst,this.blendEquation=n.blendEquation,this.blendSrcAlpha=n.blendSrcAlpha,this.blendDstAlpha=n.blendDstAlpha,this.blendEquationAlpha=n.blendEquationAlpha,this.depthFunc=n.depthFunc,this.depthTest=n.depthTest,this.depthWrite=n.depthWrite,this.stencilWriteMask=n.stencilWriteMask,this.stencilFunc=n.stencilFunc,this.stencilRef=n.stencilRef,this.stencilFuncMask=n.stencilFuncMask,this.stencilFail=n.stencilFail,this.stencilZFail=n.stencilZFail,this.stencilZPass=n.stencilZPass,this.stencilWrite=n.stencilWrite;const e=n.clippingPlanes;let t=null;if(e!==null){const i=e.length;t=new Array(i);for(let r=0;r!==i;++r)t[r]=e[r].clone()}return this.clippingPlanes=t,this.clipIntersection=n.clipIntersection,this.clipShadows=n.clipShadows,this.shadowSide=n.shadowSide,this.colorWrite=n.colorWrite,this.precision=n.precision,this.polygonOffset=n.polygonOffset,this.polygonOffsetFactor=n.polygonOffsetFactor,this.polygonOffsetUnits=n.polygonOffsetUnits,this.dithering=n.dithering,this.alphaTest=n.alphaTest,this.premultipliedAlpha=n.premultipliedAlpha,this.visible=n.visible,this.toneMapped=n.toneMapped,this.userData=JSON.parse(JSON.stringify(n.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}});Object.defineProperty(Qe.prototype,"needsUpdate",{set:function(n){n===!0&&this.version++}});function Ln(n){Qe.call(this),this.type="MeshBasicMaterial",this.color=new Ve(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Uc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(n)}Ln.prototype=Object.create(Qe.prototype);Ln.prototype.constructor=Ln;Ln.prototype.isMeshBasicMaterial=!0;Ln.prototype.copy=function(n){return Qe.prototype.copy.call(this,n),this.color.copy(n.color),this.map=n.map,this.lightMap=n.lightMap,this.lightMapIntensity=n.lightMapIntensity,this.aoMap=n.aoMap,this.aoMapIntensity=n.aoMapIntensity,this.specularMap=n.specularMap,this.alphaMap=n.alphaMap,this.envMap=n.envMap,this.combine=n.combine,this.reflectivity=n.reflectivity,this.refractionRatio=n.refractionRatio,this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this.wireframeLinecap=n.wireframeLinecap,this.wireframeLinejoin=n.wireframeLinejoin,this.skinning=n.skinning,this.morphTargets=n.morphTargets,this};const St=new O,zl=new Le;function Ke(n,e,t){if(Array.isArray(n))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=n,this.itemSize=e,this.count=n!==void 0?n.length/e:0,this.normalized=t===!0,this.usage=Wc,this.updateRange={offset:0,count:-1},this.version=0}Object.defineProperty(Ke.prototype,"needsUpdate",{set:function(n){n===!0&&this.version++}});Object.assign(Ke.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(n){return this.usage=n,this},copy:function(n){return this.name=n.name,this.array=new n.array.constructor(n.array),this.itemSize=n.itemSize,this.count=n.count,this.normalized=n.normalized,this.usage=n.usage,this},copyAt:function(n,e,t){n*=this.itemSize,t*=e.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[n+i]=e.array[t+i];return this},copyArray:function(n){return this.array.set(n),this},copyColorsArray:function(n){const e=this.array;let t=0;for(let i=0,r=n.length;i<r;i++){let s=n[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),s=new Ve),e[t++]=s.r,e[t++]=s.g,e[t++]=s.b}return this},copyVector2sArray:function(n){const e=this.array;let t=0;for(let i=0,r=n.length;i<r;i++){let s=n[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),s=new Le),e[t++]=s.x,e[t++]=s.y}return this},copyVector3sArray:function(n){const e=this.array;let t=0;for(let i=0,r=n.length;i<r;i++){let s=n[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),s=new O),e[t++]=s.x,e[t++]=s.y,e[t++]=s.z}return this},copyVector4sArray:function(n){const e=this.array;let t=0;for(let i=0,r=n.length;i<r;i++){let s=n[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),s=new gt),e[t++]=s.x,e[t++]=s.y,e[t++]=s.z,e[t++]=s.w}return this},applyMatrix3:function(n){if(this.itemSize===2)for(let e=0,t=this.count;e<t;e++)zl.fromBufferAttribute(this,e),zl.applyMatrix3(n),this.setXY(e,zl.x,zl.y);else if(this.itemSize===3)for(let e=0,t=this.count;e<t;e++)St.fromBufferAttribute(this,e),St.applyMatrix3(n),this.setXYZ(e,St.x,St.y,St.z);return this},applyMatrix4:function(n){for(let e=0,t=this.count;e<t;e++)St.x=this.getX(e),St.y=this.getY(e),St.z=this.getZ(e),St.applyMatrix4(n),this.setXYZ(e,St.x,St.y,St.z);return this},applyNormalMatrix:function(n){for(let e=0,t=this.count;e<t;e++)St.x=this.getX(e),St.y=this.getY(e),St.z=this.getZ(e),St.applyNormalMatrix(n),this.setXYZ(e,St.x,St.y,St.z);return this},transformDirection:function(n){for(let e=0,t=this.count;e<t;e++)St.x=this.getX(e),St.y=this.getY(e),St.z=this.getZ(e),St.transformDirection(n),this.setXYZ(e,St.x,St.y,St.z);return this},set:function(n,e=0){return this.array.set(n,e),this},getX:function(n){return this.array[n*this.itemSize]},setX:function(n,e){return this.array[n*this.itemSize]=e,this},getY:function(n){return this.array[n*this.itemSize+1]},setY:function(n,e){return this.array[n*this.itemSize+1]=e,this},getZ:function(n){return this.array[n*this.itemSize+2]},setZ:function(n,e){return this.array[n*this.itemSize+2]=e,this},getW:function(n){return this.array[n*this.itemSize+3]},setW:function(n,e){return this.array[n*this.itemSize+3]=e,this},setXY:function(n,e,t){return n*=this.itemSize,this.array[n+0]=e,this.array[n+1]=t,this},setXYZ:function(n,e,t,i){return n*=this.itemSize,this.array[n+0]=e,this.array[n+1]=t,this.array[n+2]=i,this},setXYZW:function(n,e,t,i,r){return n*=this.itemSize,this.array[n+0]=e,this.array[n+1]=t,this.array[n+2]=i,this.array[n+3]=r,this},onUpload:function(n){return this.onUploadCallback=n,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}});function rc(n,e,t){Ke.call(this,new Int8Array(n),e,t)}rc.prototype=Object.create(Ke.prototype);rc.prototype.constructor=rc;function sc(n,e,t){Ke.call(this,new Uint8Array(n),e,t)}sc.prototype=Object.create(Ke.prototype);sc.prototype.constructor=sc;function ac(n,e,t){Ke.call(this,new Uint8ClampedArray(n),e,t)}ac.prototype=Object.create(Ke.prototype);ac.prototype.constructor=ac;function oc(n,e,t){Ke.call(this,new Int16Array(n),e,t)}oc.prototype=Object.create(Ke.prototype);oc.prototype.constructor=oc;function Ms(n,e,t){Ke.call(this,new Uint16Array(n),e,t)}Ms.prototype=Object.create(Ke.prototype);Ms.prototype.constructor=Ms;function cc(n,e,t){Ke.call(this,new Int32Array(n),e,t)}cc.prototype=Object.create(Ke.prototype);cc.prototype.constructor=cc;function Ss(n,e,t){Ke.call(this,new Uint32Array(n),e,t)}Ss.prototype=Object.create(Ke.prototype);Ss.prototype.constructor=Ss;function lc(n,e,t){Ke.call(this,new Uint16Array(n),e,t)}lc.prototype=Object.create(Ke.prototype);lc.prototype.constructor=lc;lc.prototype.isFloat16BufferAttribute=!0;function We(n,e,t){Ke.call(this,new Float32Array(n),e,t)}We.prototype=Object.create(Ke.prototype);We.prototype.constructor=We;function dc(n,e,t){Ke.call(this,new Float64Array(n),e,t)}dc.prototype=Object.create(Ke.prototype);dc.prototype.constructor=dc;function g2(n){if(n.length===0)return-1/0;let e=n[0];for(let t=1,i=n.length;t<i;++t)n[t]>e&&(e=n[t]);return e}const NE={Int8Array,Uint8Array,Uint8ClampedArray:typeof Uint8ClampedArray<"u"?Uint8ClampedArray:Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Go(n,e){return new NE[n](e)}let BE=0;const ci=new ot,Jf=new je,xa=new O,bn=new er,Lo=new er,kt=new O;function Ye(){Object.defineProperty(this,"id",{value:BE++}),this.uuid=tt.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}Ye.prototype=Object.assign(Object.create(Qi.prototype),{constructor:Ye,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(n){return Array.isArray(n)?this.index=new(g2(n)>65535?Ss:Ms)(n,1):this.index=n,this},getAttribute:function(n){return this.attributes[n]},setAttribute:function(n,e){return this.attributes[n]=e,this},deleteAttribute:function(n){return delete this.attributes[n],this},hasAttribute:function(n){return this.attributes[n]!==void 0},addGroup:function(n,e,t=0){this.groups.push({start:n,count:e,materialIndex:t})},clearGroups:function(){this.groups=[]},setDrawRange:function(n,e){this.drawRange.start=n,this.drawRange.count=e},applyMatrix4:function(n){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(n),e.needsUpdate=!0);const t=this.attributes.normal;if(t!==void 0){const r=new Sn().getNormalMatrix(n);t.applyNormalMatrix(r),t.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(n),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this},rotateX:function(n){return ci.makeRotationX(n),this.applyMatrix4(ci),this},rotateY:function(n){return ci.makeRotationY(n),this.applyMatrix4(ci),this},rotateZ:function(n){return ci.makeRotationZ(n),this.applyMatrix4(ci),this},translate:function(n,e,t){return ci.makeTranslation(n,e,t),this.applyMatrix4(ci),this},scale:function(n,e,t){return ci.makeScale(n,e,t),this.applyMatrix4(ci),this},lookAt:function(n){return Jf.lookAt(n),Jf.updateMatrix(),this.applyMatrix4(Jf.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(xa).negate(),this.translate(xa.x,xa.y,xa.z),this},setFromPoints:function(n){const e=[];for(let t=0,i=n.length;t<i;t++){const r=n[t];e.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new We(e,3)),this},computeBoundingBox:function(){this.boundingBox===null&&(this.boundingBox=new er);const n=this.attributes.position,e=this.morphAttributes.position;if(n&&n.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new O(-1/0,-1/0,-1/0),new O(1/0,1/0,1/0));return}if(n!==void 0){if(this.boundingBox.setFromBufferAttribute(n),e)for(let t=0,i=e.length;t<i;t++){const r=e[t];bn.setFromBufferAttribute(r),this.morphTargetsRelative?(kt.addVectors(this.boundingBox.min,bn.min),this.boundingBox.expandByPoint(kt),kt.addVectors(this.boundingBox.max,bn.max),this.boundingBox.expandByPoint(kt)):(this.boundingBox.expandByPoint(bn.min),this.boundingBox.expandByPoint(bn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){this.boundingSphere===null&&(this.boundingSphere=new qr);const n=this.attributes.position,e=this.morphAttributes.position;if(n&&n.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new O,1/0);return}if(n){const t=this.boundingSphere.center;if(bn.setFromBufferAttribute(n),e)for(let r=0,s=e.length;r<s;r++){const a=e[r];Lo.setFromBufferAttribute(a),this.morphTargetsRelative?(kt.addVectors(bn.min,Lo.min),bn.expandByPoint(kt),kt.addVectors(bn.max,Lo.max),bn.expandByPoint(kt)):(bn.expandByPoint(Lo.min),bn.expandByPoint(Lo.max))}bn.getCenter(t);let i=0;for(let r=0,s=n.count;r<s;r++)kt.fromBufferAttribute(n,r),i=Math.max(i,t.distanceToSquared(kt));if(e)for(let r=0,s=e.length;r<s;r++){const a=e[r],o=this.morphTargetsRelative;for(let l=0,c=a.count;l<c;l++)kt.fromBufferAttribute(a,l),o&&(xa.fromBufferAttribute(n,l),kt.add(xa)),i=Math.max(i,t.distanceToSquared(kt))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeTangents:function(){const n=this.index,e=this.attributes;if(n===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const t=n.array,i=e.position.array,r=e.normal.array,s=e.uv.array,a=i.length/3;e.tangent===void 0&&this.setAttribute("tangent",new Ke(new Float32Array(4*a),4));const o=e.tangent.array,l=[],c=[];for(let E=0;E<a;E++)l[E]=new O,c[E]=new O;const d=new O,u=new O,f=new O,h=new Le,m=new Le,x=new Le,p=new O,v=new O;function g(E,C,I){d.fromArray(i,E*3),u.fromArray(i,C*3),f.fromArray(i,I*3),h.fromArray(s,E*2),m.fromArray(s,C*2),x.fromArray(s,I*2),u.sub(d),f.sub(d),m.sub(h),x.sub(h);const W=1/(m.x*x.y-x.x*m.y);!isFinite(W)||(p.copy(u).multiplyScalar(x.y).addScaledVector(f,-m.y).multiplyScalar(W),v.copy(f).multiplyScalar(m.x).addScaledVector(u,-x.x).multiplyScalar(W),l[E].add(p),l[C].add(p),l[I].add(p),c[E].add(v),c[C].add(v),c[I].add(v))}let _=this.groups;_.length===0&&(_=[{start:0,count:t.length}]);for(let E=0,C=_.length;E<C;++E){const I=_[E],W=I.start,H=I.count;for(let A=W,q=W+H;A<q;A+=3)g(t[A+0],t[A+1],t[A+2])}const y=new O,M=new O,w=new O,b=new O;function S(E){w.fromArray(r,E*3),b.copy(w);const C=l[E];y.copy(C),y.sub(w.multiplyScalar(w.dot(C))).normalize(),M.crossVectors(b,C);const W=M.dot(c[E])<0?-1:1;o[E*4]=y.x,o[E*4+1]=y.y,o[E*4+2]=y.z,o[E*4+3]=W}for(let E=0,C=_.length;E<C;++E){const I=_[E],W=I.start,H=I.count;for(let A=W,q=W+H;A<q;A+=3)S(t[A+0]),S(t[A+1]),S(t[A+2])}},computeVertexNormals:function(){const n=this.index,e=this.getAttribute("position");if(e!==void 0){let t=this.getAttribute("normal");if(t===void 0)t=new Ke(new Float32Array(e.count*3),3),this.setAttribute("normal",t);else for(let u=0,f=t.count;u<f;u++)t.setXYZ(u,0,0,0);const i=new O,r=new O,s=new O,a=new O,o=new O,l=new O,c=new O,d=new O;if(n)for(let u=0,f=n.count;u<f;u+=3){const h=n.getX(u+0),m=n.getX(u+1),x=n.getX(u+2);i.fromBufferAttribute(e,h),r.fromBufferAttribute(e,m),s.fromBufferAttribute(e,x),c.subVectors(s,r),d.subVectors(i,r),c.cross(d),a.fromBufferAttribute(t,h),o.fromBufferAttribute(t,m),l.fromBufferAttribute(t,x),a.add(c),o.add(c),l.add(c),t.setXYZ(h,a.x,a.y,a.z),t.setXYZ(m,o.x,o.y,o.z),t.setXYZ(x,l.x,l.y,l.z)}else for(let u=0,f=e.count;u<f;u+=3)i.fromBufferAttribute(e,u+0),r.fromBufferAttribute(e,u+1),s.fromBufferAttribute(e,u+2),c.subVectors(s,r),d.subVectors(i,r),c.cross(d),t.setXYZ(u+0,c.x,c.y,c.z),t.setXYZ(u+1,c.x,c.y,c.z),t.setXYZ(u+2,c.x,c.y,c.z);this.normalizeNormals(),t.needsUpdate=!0}},merge:function(n,e){if(!(n&&n.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",n);return}e===void 0&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const t=this.attributes;for(const i in t){if(n.attributes[i]===void 0)continue;const s=t[i].array,a=n.attributes[i],o=a.array,l=a.itemSize*e,c=Math.min(o.length,s.length-l);for(let d=0,u=l;d<c;d++,u++)s[u]=o[d]}return this},normalizeNormals:function(){const n=this.attributes.normal;for(let e=0,t=n.count;e<t;e++)kt.fromBufferAttribute(n,e),kt.normalize(),n.setXYZ(e,kt.x,kt.y,kt.z)},toNonIndexed:function(){function n(a,o){const l=a.array,c=a.itemSize,d=a.normalized,u=new l.constructor(o.length*c);let f=0,h=0;for(let m=0,x=o.length;m<x;m++){f=o[m]*c;for(let p=0;p<c;p++)u[h++]=l[f++]}return new Ke(u,c,d)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new Ye,t=this.index.array,i=this.attributes;for(const a in i){const o=i[a],l=n(o,t);e.setAttribute(a,l)}const r=this.morphAttributes;for(const a in r){const o=[],l=r[a];for(let c=0,d=l.length;c<d;c++){const u=l[c],f=n(u,t);o.push(f)}e.morphAttributes[a]=o}e.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let a=0,o=s.length;a<o;a++){const l=s[a];e.addGroup(l.start,l.count,l.materialIndex)}return e},toJSON:function(){const n={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),Object.keys(this.userData).length>0&&(n.userData=this.userData),this.parameters!==void 0){const o=this.parameters;for(const l in o)o[l]!==void 0&&(n[l]=o[l]);return n}n.data={attributes:{}};const e=this.index;e!==null&&(n.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const t=this.attributes;for(const o in t){const l=t[o],c=l.toJSON(n.data);l.name!==""&&(c.name=l.name),n.data.attributes[o]=c}const i={};let r=!1;for(const o in this.morphAttributes){const l=this.morphAttributes[o],c=[];for(let d=0,u=l.length;d<u;d++){const f=l[d],h=f.toJSON(n.data);f.name!==""&&(h.name=f.name),c.push(h)}c.length>0&&(i[o]=c,r=!0)}r&&(n.data.morphAttributes=i,n.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;s.length>0&&(n.data.groups=JSON.parse(JSON.stringify(s)));const a=this.boundingSphere;return a!==null&&(n.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),n},clone:function(){return new Ye().copy(this)},copy:function(n){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=n.name;const t=n.index;t!==null&&this.setIndex(t.clone(e));const i=n.attributes;for(const l in i){const c=i[l];this.setAttribute(l,c.clone(e))}const r=n.morphAttributes;for(const l in r){const c=[],d=r[l];for(let u=0,f=d.length;u<f;u++)c.push(d[u].clone(e));this.morphAttributes[l]=c}this.morphTargetsRelative=n.morphTargetsRelative;const s=n.groups;for(let l=0,c=s.length;l<c;l++){const d=s[l];this.addGroup(d.start,d.count,d.materialIndex)}const a=n.boundingBox;a!==null&&(this.boundingBox=a.clone());const o=n.boundingSphere;return o!==null&&(this.boundingSphere=o.clone()),this.drawRange.start=n.drawRange.start,this.drawRange.count=n.drawRange.count,this.userData=n.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});const Hx=new ot,ga=new fo,Kf=new qr,fr=new O,hr=new O,pr=new O,Qf=new O,eh=new O,th=new O,Fl=new O,ql=new O,Nl=new O,Bl=new Le,Ul=new Le,Gl=new Le,nh=new O,kl=new O;function Et(n=new Ye,e=new Ln){je.call(this),this.type="Mesh",this.geometry=n,this.material=e,this.updateMorphTargets()}Et.prototype=Object.assign(Object.create(je.prototype),{constructor:Et,isMesh:!0,copy:function(n){return je.prototype.copy.call(this,n),n.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=n.morphTargetInfluences.slice()),n.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},n.morphTargetDictionary)),this.material=n.material,this.geometry=n.geometry,this},updateMorphTargets:function(){const n=this.geometry;if(n.isBufferGeometry){const e=n.morphAttributes,t=Object.keys(e);if(t.length>0){const i=e[t[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=i.length;r<s;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}else{const e=n.morphTargets;e!==void 0&&e.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(n,e){const t=this.geometry,i=this.material,r=this.matrixWorld;if(i===void 0||(t.boundingSphere===null&&t.computeBoundingSphere(),Kf.copy(t.boundingSphere),Kf.applyMatrix4(r),n.ray.intersectsSphere(Kf)===!1)||(Hx.copy(r).invert(),ga.copy(n.ray).applyMatrix4(Hx),t.boundingBox!==null&&ga.intersectsBox(t.boundingBox)===!1))return;let s;if(t.isBufferGeometry){const a=t.index,o=t.attributes.position,l=t.morphAttributes.position,c=t.morphTargetsRelative,d=t.attributes.uv,u=t.attributes.uv2,f=t.groups,h=t.drawRange;if(a!==null)if(Array.isArray(i))for(let m=0,x=f.length;m<x;m++){const p=f[m],v=i[p.materialIndex],g=Math.max(p.start,h.start),_=Math.min(p.start+p.count,h.start+h.count);for(let y=g,M=_;y<M;y+=3){const w=a.getX(y),b=a.getX(y+1),S=a.getX(y+2);s=Hl(this,v,n,ga,o,l,c,d,u,w,b,S),s&&(s.faceIndex=Math.floor(y/3),s.face.materialIndex=p.materialIndex,e.push(s))}}else{const m=Math.max(0,h.start),x=Math.min(a.count,h.start+h.count);for(let p=m,v=x;p<v;p+=3){const g=a.getX(p),_=a.getX(p+1),y=a.getX(p+2);s=Hl(this,i,n,ga,o,l,c,d,u,g,_,y),s&&(s.faceIndex=Math.floor(p/3),e.push(s))}}else if(o!==void 0)if(Array.isArray(i))for(let m=0,x=f.length;m<x;m++){const p=f[m],v=i[p.materialIndex],g=Math.max(p.start,h.start),_=Math.min(p.start+p.count,h.start+h.count);for(let y=g,M=_;y<M;y+=3){const w=y,b=y+1,S=y+2;s=Hl(this,v,n,ga,o,l,c,d,u,w,b,S),s&&(s.faceIndex=Math.floor(y/3),s.face.materialIndex=p.materialIndex,e.push(s))}}else{const m=Math.max(0,h.start),x=Math.min(o.count,h.start+h.count);for(let p=m,v=x;p<v;p+=3){const g=p,_=p+1,y=p+2;s=Hl(this,i,n,ga,o,l,c,d,u,g,_,y),s&&(s.faceIndex=Math.floor(p/3),e.push(s))}}}else t.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}});function UE(n,e,t,i,r,s,a,o){let l;if(e.side===Ft?l=i.intersectTriangle(a,s,r,!0,o):l=i.intersectTriangle(r,s,a,e.side!==Bc,o),l===null)return null;kl.copy(o),kl.applyMatrix4(n.matrixWorld);const c=t.ray.origin.distanceTo(kl);return c<t.near||c>t.far?null:{distance:c,point:kl.clone(),object:n}}function Hl(n,e,t,i,r,s,a,o,l,c,d,u){fr.fromBufferAttribute(r,c),hr.fromBufferAttribute(r,d),pr.fromBufferAttribute(r,u);const f=n.morphTargetInfluences;if(e.morphTargets&&s&&f){Fl.set(0,0,0),ql.set(0,0,0),Nl.set(0,0,0);for(let m=0,x=s.length;m<x;m++){const p=f[m],v=s[m];p!==0&&(Qf.fromBufferAttribute(v,c),eh.fromBufferAttribute(v,d),th.fromBufferAttribute(v,u),a?(Fl.addScaledVector(Qf,p),ql.addScaledVector(eh,p),Nl.addScaledVector(th,p)):(Fl.addScaledVector(Qf.sub(fr),p),ql.addScaledVector(eh.sub(hr),p),Nl.addScaledVector(th.sub(pr),p)))}fr.add(Fl),hr.add(ql),pr.add(Nl)}n.isSkinnedMesh&&(n.boneTransform(c,fr),n.boneTransform(d,hr),n.boneTransform(u,pr));const h=UE(n,e,t,i,fr,hr,pr,nh);if(h){o&&(Bl.fromBufferAttribute(o,c),Ul.fromBufferAttribute(o,d),Gl.fromBufferAttribute(o,u),h.uv=Kt.getUV(nh,fr,hr,pr,Bl,Ul,Gl,new Le)),l&&(Bl.fromBufferAttribute(l,c),Ul.fromBufferAttribute(l,d),Gl.fromBufferAttribute(l,u),h.uv2=Kt.getUV(nh,fr,hr,pr,Bl,Ul,Gl,new Le));const m=new cp(c,d,u);Kt.getNormal(fr,hr,pr,m.normal),h.face=m}return h}class Es extends Ye{constructor(e=1,t=1,i=1,r=1,s=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:r,heightSegments:s,depthSegments:a};const o=this;r=Math.floor(r),s=Math.floor(s),a=Math.floor(a);const l=[],c=[],d=[],u=[];let f=0,h=0;m("z","y","x",-1,-1,i,t,e,a,s,0),m("z","y","x",1,-1,i,t,-e,a,s,1),m("x","z","y",1,1,e,i,t,r,a,2),m("x","z","y",1,-1,e,i,-t,r,a,3),m("x","y","z",1,-1,e,t,i,r,s,4),m("x","y","z",-1,-1,e,t,-i,r,s,5),this.setIndex(l),this.setAttribute("position",new We(c,3)),this.setAttribute("normal",new We(d,3)),this.setAttribute("uv",new We(u,2));function m(x,p,v,g,_,y,M,w,b,S,E){const C=y/b,I=M/S,W=y/2,H=M/2,A=w/2,q=b+1,N=S+1;let X=0,Z=0;const $=new O;for(let J=0;J<N;J++){const R=J*I-H;for(let k=0;k<q;k++){const j=k*C-W;$[x]=j*g,$[p]=R*_,$[v]=A,c.push($.x,$.y,$.z),$[x]=0,$[p]=0,$[v]=w>0?1:-1,d.push($.x,$.y,$.z),u.push(k/b),u.push(1-J/S),X+=1}}for(let J=0;J<S;J++)for(let R=0;R<b;R++){const k=f+R+q*J,j=f+R+q*(J+1),K=f+(R+1)+q*(J+1),B=f+(R+1)+q*J;l.push(k,j,B),l.push(j,K,B),Z+=6}o.addGroup(h,Z,E),h+=Z,f+=X}}}function Ha(n){const e={};for(const t in n){e[t]={};for(const i in n[t]){const r=n[t][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture)?e[t][i]=r.clone():Array.isArray(r)?e[t][i]=r.slice():e[t][i]=r}}return e}function Jt(n){const e={};for(let t=0;t<n.length;t++){const i=Ha(n[t]);for(const r in i)e[r]=i[r]}return e}const v2={clone:Ha,merge:Jt};var GE=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,kE=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;function dn(n){Qe.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=GE,this.fragmentShader=kE,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,n!==void 0&&(n.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(n))}dn.prototype=Object.create(Qe.prototype);dn.prototype.constructor=dn;dn.prototype.isShaderMaterial=!0;dn.prototype.copy=function(n){return Qe.prototype.copy.call(this,n),this.fragmentShader=n.fragmentShader,this.vertexShader=n.vertexShader,this.uniforms=Ha(n.uniforms),this.defines=Object.assign({},n.defines),this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this.lights=n.lights,this.clipping=n.clipping,this.skinning=n.skinning,this.morphTargets=n.morphTargets,this.morphNormals=n.morphNormals,this.extensions=Object.assign({},n.extensions),this.glslVersion=n.glslVersion,this};dn.prototype.toJSON=function(n){const e=Qe.prototype.toJSON.call(this,n);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const s=this.uniforms[i].value;s&&s.isTexture?e.uniforms[i]={type:"t",value:s.toJSON(n).uuid}:s&&s.isColor?e.uniforms[i]={type:"c",value:s.getHex()}:s&&s.isVector2?e.uniforms[i]={type:"v2",value:s.toArray()}:s&&s.isVector3?e.uniforms[i]={type:"v3",value:s.toArray()}:s&&s.isVector4?e.uniforms[i]={type:"v4",value:s.toArray()}:s&&s.isMatrix3?e.uniforms[i]={type:"m3",value:s.toArray()}:s&&s.isMatrix4?e.uniforms[i]={type:"m4",value:s.toArray()}:e.uniforms[i]={value:s}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const t={};for(const i in this.extensions)this.extensions[i]===!0&&(t[i]=!0);return Object.keys(t).length>0&&(e.extensions=t),e};function gi(){je.call(this),this.type="Camera",this.matrixWorldInverse=new ot,this.projectionMatrix=new ot,this.projectionMatrixInverse=new ot}gi.prototype=Object.assign(Object.create(je.prototype),{constructor:gi,isCamera:!0,copy:function(n,e){return je.prototype.copy.call(this,n,e),this.matrixWorldInverse.copy(n.matrixWorldInverse),this.projectionMatrix.copy(n.projectionMatrix),this.projectionMatrixInverse.copy(n.projectionMatrixInverse),this},getWorldDirection:function(n){n===void 0&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),n=new O),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return n.set(-e[8],-e[9],-e[10]).normalize()},updateMatrixWorld:function(n){je.prototype.updateMatrixWorld.call(this,n),this.matrixWorldInverse.copy(this.matrixWorld).invert()},updateWorldMatrix:function(n,e){je.prototype.updateWorldMatrix.call(this,n,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()},clone:function(){return new this.constructor().copy(this)}});function qt(n=50,e=1,t=.1,i=2e3){gi.call(this),this.type="PerspectiveCamera",this.fov=n,this.zoom=1,this.near=t,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}qt.prototype=Object.assign(Object.create(gi.prototype),{constructor:qt,isPerspectiveCamera:!0,copy:function(n,e){return gi.prototype.copy.call(this,n,e),this.fov=n.fov,this.zoom=n.zoom,this.near=n.near,this.far=n.far,this.focus=n.focus,this.aspect=n.aspect,this.view=n.view===null?null:Object.assign({},n.view),this.filmGauge=n.filmGauge,this.filmOffset=n.filmOffset,this},setFocalLength:function(n){const e=.5*this.getFilmHeight()/n;this.fov=tt.RAD2DEG*2*Math.atan(e),this.updateProjectionMatrix()},getFocalLength:function(){const n=Math.tan(tt.DEG2RAD*.5*this.fov);return .5*this.getFilmHeight()/n},getEffectiveFOV:function(){return tt.RAD2DEG*2*Math.atan(Math.tan(tt.DEG2RAD*.5*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(n,e,t,i,r,s){this.aspect=n/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=n,this.view.fullHeight=e,this.view.offsetX=t,this.view.offsetY=i,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()},clearViewOffset:function(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const n=this.near;let e=n*Math.tan(tt.DEG2RAD*.5*this.fov)/this.zoom,t=2*e,i=this.aspect*t,r=-.5*i;const s=this.view;if(this.view!==null&&this.view.enabled){const o=s.fullWidth,l=s.fullHeight;r+=s.offsetX*i/o,e-=s.offsetY*t/l,i*=s.width/o,t*=s.height/l}const a=this.filmOffset;a!==0&&(r+=n*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,e,e-t,n,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(n){const e=je.prototype.toJSON.call(this,n);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}});const va=90,ya=1;function Ts(n,e,t){if(je.call(this),this.type="CubeCamera",t.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=t;const i=new qt(va,ya,n,e);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new O(1,0,0)),this.add(i);const r=new qt(va,ya,n,e);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new O(-1,0,0)),this.add(r);const s=new qt(va,ya,n,e);s.layers=this.layers,s.up.set(0,0,1),s.lookAt(new O(0,1,0)),this.add(s);const a=new qt(va,ya,n,e);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new O(0,-1,0)),this.add(a);const o=new qt(va,ya,n,e);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new O(0,0,1)),this.add(o);const l=new qt(va,ya,n,e);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new O(0,0,-1)),this.add(l),this.update=function(c,d){this.parent===null&&this.updateMatrixWorld();const u=c.xr.enabled,f=c.getRenderTarget();c.xr.enabled=!1;const h=t.texture.generateMipmaps;t.texture.generateMipmaps=!1,c.setRenderTarget(t,0),c.render(d,i),c.setRenderTarget(t,1),c.render(d,r),c.setRenderTarget(t,2),c.render(d,s),c.setRenderTarget(t,3),c.render(d,a),c.setRenderTarget(t,4),c.render(d,o),t.texture.generateMipmaps=h,c.setRenderTarget(t,5),c.render(d,l),c.setRenderTarget(f),c.xr.enabled=u}}Ts.prototype=Object.create(je.prototype);Ts.prototype.constructor=Ts;function vi(n,e,t,i,r,s,a,o,l,c){n=n!==void 0?n:[],e=e!==void 0?e:Gc,a=a!==void 0?a:_r,yt.call(this,n,e,t,i,r,s,a,o,l,c),this.flipY=!1,this._needsFlipEnvMap=!0}vi.prototype=Object.create(yt.prototype);vi.prototype.constructor=vi;vi.prototype.isCubeTexture=!0;Object.defineProperty(vi.prototype,"images",{get:function(){return this.image},set:function(n){this.image=n}});class lp extends wr{constructor(e,t,i){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=i),super(e,e,t),Object.defineProperty(this,"isWebGLCubeRenderTarget",{value:!0}),t=t||{},this.texture=new vi(void 0,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.format=Tn,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new Es(5,5,5),s=new dn({name:"CubemapFromEquirect",uniforms:Ha(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:Ft,blending:ji});s.uniforms.tEquirect.value=t;const a=new Et(r,s),o=t.minFilter;return t.minFilter===lo&&(t.minFilter=Vt),new Ts(1,10,this).update(e,a),t.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,i,r){const s=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,i,r);e.setRenderTarget(s)}}function Yi(n,e,t,i,r,s,a,o,l,c,d,u){yt.call(this,null,s,a,o,l,c,i,r,d,u),this.image={data:n||null,width:e||1,height:t||1},this.magFilter=l!==void 0?l:Ut,this.minFilter=c!==void 0?c:Ut,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}Yi.prototype=Object.create(yt.prototype);Yi.prototype.constructor=Yi;Yi.prototype.isDataTexture=!0;const ba=new qr,Vl=new O;class $c{constructor(e,t,i,r,s,a){this.planes=[e!==void 0?e:new fi,t!==void 0?t:new fi,i!==void 0?i:new fi,r!==void 0?r:new fi,s!==void 0?s:new fi,a!==void 0?a:new fi]}set(e,t,i,r,s,a){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(i),o[3].copy(r),o[4].copy(s),o[5].copy(a),this}clone(){return new this.constructor().copy(this)}copy(e){const t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e){const t=this.planes,i=e.elements,r=i[0],s=i[1],a=i[2],o=i[3],l=i[4],c=i[5],d=i[6],u=i[7],f=i[8],h=i[9],m=i[10],x=i[11],p=i[12],v=i[13],g=i[14],_=i[15];return t[0].setComponents(o-r,u-l,x-f,_-p).normalize(),t[1].setComponents(o+r,u+l,x+f,_+p).normalize(),t[2].setComponents(o+s,u+c,x+h,_+v).normalize(),t[3].setComponents(o-s,u-c,x-h,_-v).normalize(),t[4].setComponents(o-a,u-d,x-m,_-g).normalize(),t[5].setComponents(o+a,u+d,x+m,_+g).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),ba.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(ba)}intersectsSprite(e){return ba.center.set(0,0,0),ba.radius=.7071067811865476,ba.applyMatrix4(e.matrixWorld),this.intersectsSphere(ba)}intersectsSphere(e){const t=this.planes,i=e.center,r=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(i)<r)return!1;return!0}intersectsBox(e){const t=this.planes;for(let i=0;i<6;i++){const r=t[i];if(Vl.x=r.normal.x>0?e.max.x:e.min.x,Vl.y=r.normal.y>0?e.max.y:e.min.y,Vl.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(Vl)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}}function y2(){let n=null,e=!1,t=null,i=null;function r(s,a){t(s,a),i=n.requestAnimationFrame(r)}return{start:function(){e!==!0&&t!==null&&(i=n.requestAnimationFrame(r),e=!0)},stop:function(){n.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){n=s}}}function HE(n,e){const t=e.isWebGL2,i=new WeakMap;function r(c,d){const u=c.array,f=c.usage,h=n.createBuffer();n.bindBuffer(d,h),n.bufferData(d,u,f),c.onUploadCallback();let m=5126;return u instanceof Float32Array?m=5126:u instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):u instanceof Uint16Array?c.isFloat16BufferAttribute?t?m=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):m=5123:u instanceof Int16Array?m=5122:u instanceof Uint32Array?m=5125:u instanceof Int32Array?m=5124:u instanceof Int8Array?m=5120:u instanceof Uint8Array&&(m=5121),{buffer:h,type:m,bytesPerElement:u.BYTES_PER_ELEMENT,version:c.version}}function s(c,d,u){const f=d.array,h=d.updateRange;n.bindBuffer(u,c),h.count===-1?n.bufferSubData(u,0,f):(t?n.bufferSubData(u,h.offset*f.BYTES_PER_ELEMENT,f,h.offset,h.count):n.bufferSubData(u,h.offset*f.BYTES_PER_ELEMENT,f.subarray(h.offset,h.offset+h.count)),h.count=-1)}function a(c){return c.isInterleavedBufferAttribute&&(c=c.data),i.get(c)}function o(c){c.isInterleavedBufferAttribute&&(c=c.data);const d=i.get(c);d&&(n.deleteBuffer(d.buffer),i.delete(c))}function l(c,d){if(c.isGLBufferAttribute){const f=i.get(c);(!f||f.version<c.version)&&i.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const u=i.get(c);u===void 0?i.set(c,r(c,d)):u.version<c.version&&(s(u.buffer,c,d),u.version=c.version)}return{get:a,remove:o,update:l}}class uc extends Ye{constructor(e=1,t=1,i=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:r};const s=e/2,a=t/2,o=Math.floor(i),l=Math.floor(r),c=o+1,d=l+1,u=e/o,f=t/l,h=[],m=[],x=[],p=[];for(let v=0;v<d;v++){const g=v*f-a;for(let _=0;_<c;_++){const y=_*u-s;m.push(y,-g,0),x.push(0,0,1),p.push(_/o),p.push(1-v/l)}}for(let v=0;v<l;v++)for(let g=0;g<o;g++){const _=g+c*v,y=g+c*(v+1),M=g+1+c*(v+1),w=g+1+c*v;h.push(_,y,w),h.push(y,M,w)}this.setIndex(h),this.setAttribute("position",new We(m,3)),this.setAttribute("normal",new We(x,3)),this.setAttribute("uv",new We(p,2))}}var VE=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,WE=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,$E=`#ifdef ALPHATEST
	if ( diffuseColor.a < ALPHATEST ) discard;
#endif`,jE=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );
	#endif
#endif`,XE=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,YE="vec3 transformed = vec3( position );",ZE=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,JE=`vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	return vec2( -1.04, 1.04 ) * a004 + r.zw;
}
float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
#if defined ( PHYSICALLY_CORRECT_LIGHTS )
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
#else
	if( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
		return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );
	}
	return 1.0;
#endif
}
vec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {
	float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );
	return ( 1.0 - specularColor ) * fresnel + specularColor;
}
vec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {
	float fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );
	vec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;
	return Fr * fresnel + F0;
}
float G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	return 1.0 / ( gl * gv );
}
float G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( incidentLight.direction + viewDir );
	float dotNL = saturate( dot( normal, incidentLight.direction ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( G * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
vec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );
	return specularColor * brdf.x + brdf.y;
}
void BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
	vec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );
	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );
	vec3 FssEss = F * brdf.x + brdf.y;
	float Ess = brdf.x + brdf.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );
	float dotNH = saturate( dot( geometry.normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
float GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {
	return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );
}
float BlinnExponentToGGXRoughness( const in float blinnExponent ) {
	return sqrt( 2.0 / ( blinnExponent + 2.0 ) );
}
#if defined( USE_SHEEN )
float D_Charlie(float roughness, float NoH) {
	float invAlpha = 1.0 / roughness;
	float cos2h = NoH * NoH;
	float sin2h = max(1.0 - cos2h, 0.0078125);	return (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);
}
float V_Neubelt(float NoV, float NoL) {
	return saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));
}
vec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {
	vec3 N = geometry.normal;
	vec3 V = geometry.viewDir;
	vec3 H = normalize( V + L );
	float dotNH = saturate( dot( N, H ) );
	return specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );
}
#endif`,KE=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 );
		fDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,QE=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,eT=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,tT=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,nT=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,iT=`#ifdef USE_COLOR
	diffuseColor.rgb *= vColor;
#endif`,rT=`#ifdef USE_COLOR
	varying vec3 vColor;
#endif`,sT=`#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,aT=`#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor.xyz *= color.xyz;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,oT=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement(a) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract(sin(sn) * c);
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
vec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	float distance = dot( planeNormal, point - pointOnPlane );
	return - distance * planeNormal + point;
}
float sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return sign( dot( point - pointOnPlane, planeNormal ) );
}
vec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,cT=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_maxMipLevel 8.0
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_maxTileSize 256.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		float texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );
		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );
		vec2 f = fract( uv );
		uv += 0.5 - f;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		if ( mipInt < cubeUV_maxMipLevel ) {
			uv.y += 2.0 * cubeUV_maxTileSize;
		}
		uv.y += filterInt * 2.0 * cubeUV_minTileSize;
		uv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );
		uv *= texelSize;
		vec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.x += texelSize;
		vec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.y += texelSize;
		vec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.x -= texelSize;
		vec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		vec3 tm = mix( tl, tr, f.x );
		vec3 bm = mix( bl, br, f.x );
		return mix( tm, bm, f.y );
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,lT=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,dT=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,uT=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,fT=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,hT=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,pT="gl_FragColor = linearToOutputTexel( gl_FragColor );",mT=`
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 GammaToLinear( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );
}
vec4 LinearToGamma( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );
}
vec4 sRGBToLinear( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 RGBEToLinear( in vec4 value ) {
	return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );
}
vec4 LinearToRGBE( in vec4 value ) {
	float maxComponent = max( max( value.r, value.g ), value.b );
	float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );
	return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );
}
vec4 RGBMToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * value.a * maxRange, 1.0 );
}
vec4 LinearToRGBM( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float M = clamp( maxRGB / maxRange, 0.0, 1.0 );
	M = ceil( M * 255.0 ) / 255.0;
	return vec4( value.rgb / ( M * maxRange ), M );
}
vec4 RGBDToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );
}
vec4 LinearToRGBD( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float D = max( maxRange / maxRGB, 1.0 );
	D = clamp( floor( D ) / 255.0, 0.0, 1.0 );
	return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );
}
const mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );
vec4 LinearToLogLuv( in vec4 value ) {
	vec3 Xp_Y_XYZp = cLogLuvM * value.rgb;
	Xp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );
	vec4 vResult;
	vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;
	float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;
	vResult.w = fract( Le );
	vResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;
	return vResult;
}
const mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );
vec4 LogLuvToLinear( in vec4 value ) {
	float Le = value.z * 255.0 + value.w;
	vec3 Xp_Y_XYZp;
	Xp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );
	Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;
	Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;
	vec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;
	return vec4( max( vRGB, 0.0 ), 1.0 );
}`,xT=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifndef ENVMAP_TYPE_CUBE_UV
		envColor = envMapTexelToLinear( envColor );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,gT=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform int maxMipLevel;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,vT=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,yT=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,bT=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,_T=`#ifdef USE_FOG
	fogDepth = - mvPosition.z;
#endif`,wT=`#ifdef USE_FOG
	varying float fogDepth;
#endif`,MT=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, fogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,ST=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float fogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,ET=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return texture2D( gradientMap, coord ).rgb;
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,TT=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel= texture2D( lightMap, vUv2 );
	reflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
#endif`,AT=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,LT=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );
		#endif
	}
	#pragma unroll_loop_end
#endif`,CT=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {
	vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	return irradiance;
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		directLight.color = directionalLight.color;
		directLight.direction = directionalLight.direction;
		directLight.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		vec3 lVector = pointLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		directLight.color = pointLight.color;
		directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );
		directLight.visible = ( directLight.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		vec3 lVector = spotLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		float angleCos = dot( directLight.direction, spotLight.direction );
		if ( angleCos > spotLight.coneCos ) {
			float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );
			directLight.color = spotLight.color;
			directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );
			directLight.visible = true;
		} else {
			directLight.color = vec3( 0.0 );
			directLight.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {
		float dotNL = dot( geometry.normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			irradiance *= PI;
		#endif
		return irradiance;
	}
#endif`,RT=`#if defined( USE_ENVMAP )
	#ifdef ENVMAP_MODE_REFRACTION
		uniform float refractionRatio;
	#endif
	vec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {
		vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );
			#else
				vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
		#else
			vec4 envMapColor = vec4( 0.0 );
		#endif
		return PI * envMapColor.rgb * envMapIntensity;
	}
	float getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {
		float maxMIPLevelScalar = float( maxMIPLevel );
		float sigma = PI * roughness * roughness / ( 1.0 + roughness );
		float desiredMIPLevel = maxMIPLevelScalar + log2( sigma );
		return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );
	}
	vec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( -viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
		#else
			vec3 reflectVec = refract( -viewDir, normal, refractionRatio );
		#endif
		reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
		float specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );
			#else
				vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
		#endif
		return envMapColor.rgb * envMapIntensity;
	}
#endif`,PT=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,IT=`varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,DT=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,OT=`varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,zT=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;
material.specularRoughness = min( material.specularRoughness, 1.0 );
#ifdef REFLECTIVITY
	material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );
#endif
#ifdef CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheen;
#endif`,FT=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float specularRoughness;
	vec3 specularColor;
#ifdef CLEARCOAT
	float clearcoat;
	float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	vec3 sheenColor;
#endif
};
#define MAXIMUM_SPECULAR_COEFFICIENT 0.16
#define DEFAULT_SPECULAR_COEFFICIENT 0.04
float clearcoatDHRApprox( const in float roughness, const in float dotNL ) {
	return DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.specularRoughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	#ifdef CLEARCOAT
		float ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = ccDotNL * directLight.color;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			ccIrradiance *= PI;
		#endif
		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );
		reflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );
	#else
		float clearcoatDHR = 0.0;
	#endif
	#ifdef USE_SHEEN
		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(
			material.specularRoughness,
			directLight.direction,
			geometry,
			material.sheenColor
		);
	#else
		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);
	#endif
	reflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef CLEARCOAT
		float ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		reflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );
		float ccDotNL = ccDotNV;
		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );
	#else
		float clearcoatDHR = 0.0;
	#endif
	float clearcoatInv = 1.0 - clearcoatDHR;
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	BRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,qT=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointDirectLightIrradiance( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotDirectLightIrradiance( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,NT=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			lightMapIrradiance *= PI;
		#endif
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );
	#ifdef CLEARCOAT
		clearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );
	#endif
#endif`,BT=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,UT=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,GT=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,kT=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,HT=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,VT=`#ifdef USE_MAP
	vec4 texelColor = texture2D( map, vUv );
	texelColor = mapTexelToLinear( texelColor );
	diffuseColor *= texelColor;
#endif`,WT=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,$T=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	vec4 mapTexel = texture2D( map, uv );
	diffuseColor *= mapTexelToLinear( mapTexel );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,jT=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,XT=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,YT=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,ZT=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
	objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
	objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
	objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
#endif`,JT=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifndef USE_MORPHNORMALS
		uniform float morphTargetInfluences[ 8 ];
	#else
		uniform float morphTargetInfluences[ 4 ];
	#endif
#endif`,KT=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	transformed += morphTarget0 * morphTargetInfluences[ 0 ];
	transformed += morphTarget1 * morphTargetInfluences[ 1 ];
	transformed += morphTarget2 * morphTargetInfluences[ 2 ];
	transformed += morphTarget3 * morphTargetInfluences[ 3 ];
	#ifndef USE_MORPHNORMALS
		transformed += morphTarget4 * morphTargetInfluences[ 4 ];
		transformed += morphTarget5 * morphTargetInfluences[ 5 ];
		transformed += morphTarget6 * morphTargetInfluences[ 6 ];
		transformed += morphTarget7 * morphTargetInfluences[ 7 ];
	#endif
#endif`,QT=`#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
			bitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,eA=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( -vViewPosition, normal, mapN );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );
#endif`,tA=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		float scale = sign( st1.t * st0.s - st0.t * st1.s );
		vec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );
		vec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );
		vec3 N = normalize( surf_norm );
		mat3 tsn = mat3( S, T, N );
		mapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		return normalize( tsn * mapN );
	}
#endif`,nA=`#ifdef CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,iA=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );
	#endif
#endif`,rA=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,sA=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return (( near + viewZ ) * far ) / (( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,aA=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,oA=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,cA=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,lA=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,dA=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,uA=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,fA=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,hA=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,pA=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,mA=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,xA=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,gA=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform highp sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif`,vA=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,yA=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,bA=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,_A=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,wA=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,MA=`#ifndef saturate
#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,SA=`#ifdef USE_TRANSMISSIONMAP
	totalTransmission *= texture2D( transmissionMap, vUv ).r;
#endif`,EA=`#ifdef USE_TRANSMISSIONMAP
	uniform sampler2D transmissionMap;
#endif`,TA=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,AA=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,LA=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,CA=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,RA=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,PA=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,IA=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`,DA=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,OA=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,zA=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,FA=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,qA=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,NA=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,BA=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,UA=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,GA=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	vec4 texColor = texture2D( tEquirect, sampleUV );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,kA=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,HA=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,VA=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,WA=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
	
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,$A=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <skinbase_vertex>
	#ifdef USE_ENVMAP
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,jA=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,XA=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,YA=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <fog_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
		matcapColor = matcapTexelToLinear( matcapColor );
	#else
		vec4 matcapColor = vec4( 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,ZA=`#define MATCAP
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#ifndef FLAT_SHADED
		vNormal = normalize( transformedNormal );
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,JA=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,KA=`#define TOON
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,QA=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,eL=`#define PHONG
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,tL=`#define STANDARD
#ifdef PHYSICAL
	#define REFLECTIVITY
	#define CLEARCOAT
	#define TRANSMISSION
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef TRANSMISSION
	uniform float transmission;
#endif
#ifdef REFLECTIVITY
	uniform float reflectivity;
#endif
#ifdef CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheen;
#endif
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <transmissionmap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <lights_physical_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#ifdef TRANSMISSION
		float totalTransmission = transmission;
	#endif
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <transmissionmap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#ifdef TRANSMISSION
		diffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );
	#endif
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,nL=`#define STANDARD
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,iL=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <packing>
#include <uv_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
}`,rL=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,sL=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,aL=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,oL=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,cL=`#include <common>
#include <fog_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <begin_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,lL=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,dL=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`;const ct={alphamap_fragment:VE,alphamap_pars_fragment:WE,alphatest_fragment:$E,aomap_fragment:jE,aomap_pars_fragment:XE,begin_vertex:YE,beginnormal_vertex:ZE,bsdfs:JE,bumpmap_pars_fragment:KE,clipping_planes_fragment:QE,clipping_planes_pars_fragment:eT,clipping_planes_pars_vertex:tT,clipping_planes_vertex:nT,color_fragment:iT,color_pars_fragment:rT,color_pars_vertex:sT,color_vertex:aT,common:oT,cube_uv_reflection_fragment:cT,defaultnormal_vertex:lT,displacementmap_pars_vertex:dT,displacementmap_vertex:uT,emissivemap_fragment:fT,emissivemap_pars_fragment:hT,encodings_fragment:pT,encodings_pars_fragment:mT,envmap_fragment:xT,envmap_common_pars_fragment:gT,envmap_pars_fragment:vT,envmap_pars_vertex:yT,envmap_physical_pars_fragment:RT,envmap_vertex:bT,fog_vertex:_T,fog_pars_vertex:wT,fog_fragment:MT,fog_pars_fragment:ST,gradientmap_pars_fragment:ET,lightmap_fragment:TT,lightmap_pars_fragment:AT,lights_lambert_vertex:LT,lights_pars_begin:CT,lights_toon_fragment:PT,lights_toon_pars_fragment:IT,lights_phong_fragment:DT,lights_phong_pars_fragment:OT,lights_physical_fragment:zT,lights_physical_pars_fragment:FT,lights_fragment_begin:qT,lights_fragment_maps:NT,lights_fragment_end:BT,logdepthbuf_fragment:UT,logdepthbuf_pars_fragment:GT,logdepthbuf_pars_vertex:kT,logdepthbuf_vertex:HT,map_fragment:VT,map_pars_fragment:WT,map_particle_fragment:$T,map_particle_pars_fragment:jT,metalnessmap_fragment:XT,metalnessmap_pars_fragment:YT,morphnormal_vertex:ZT,morphtarget_pars_vertex:JT,morphtarget_vertex:KT,normal_fragment_begin:QT,normal_fragment_maps:eA,normalmap_pars_fragment:tA,clearcoat_normal_fragment_begin:nA,clearcoat_normal_fragment_maps:iA,clearcoat_pars_fragment:rA,packing:sA,premultiplied_alpha_fragment:aA,project_vertex:oA,dithering_fragment:cA,dithering_pars_fragment:lA,roughnessmap_fragment:dA,roughnessmap_pars_fragment:uA,shadowmap_pars_fragment:fA,shadowmap_pars_vertex:hA,shadowmap_vertex:pA,shadowmask_pars_fragment:mA,skinbase_vertex:xA,skinning_pars_vertex:gA,skinning_vertex:vA,skinnormal_vertex:yA,specularmap_fragment:bA,specularmap_pars_fragment:_A,tonemapping_fragment:wA,tonemapping_pars_fragment:MA,transmissionmap_fragment:SA,transmissionmap_pars_fragment:EA,uv_pars_fragment:TA,uv_pars_vertex:AA,uv_vertex:LA,uv2_pars_fragment:CA,uv2_pars_vertex:RA,uv2_vertex:PA,worldpos_vertex:IA,background_frag:DA,background_vert:OA,cube_frag:zA,cube_vert:FA,depth_frag:qA,depth_vert:NA,distanceRGBA_frag:BA,distanceRGBA_vert:UA,equirect_frag:GA,equirect_vert:kA,linedashed_frag:HA,linedashed_vert:VA,meshbasic_frag:WA,meshbasic_vert:$A,meshlambert_frag:jA,meshlambert_vert:XA,meshmatcap_frag:YA,meshmatcap_vert:ZA,meshtoon_frag:JA,meshtoon_vert:KA,meshphong_frag:QA,meshphong_vert:eL,meshphysical_frag:tL,meshphysical_vert:nL,normal_frag:iL,normal_vert:rL,points_frag:sL,points_vert:aL,shadow_frag:oL,shadow_vert:cL,sprite_frag:lL,sprite_vert:dL},qe={common:{diffuse:{value:new Ve(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new Sn},uv2Transform:{value:new Sn},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Le(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ve(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ve(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Sn}},sprite:{diffuse:{value:new Ve(15658734)},opacity:{value:1},center:{value:new Le(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Sn}}},Zn={basic:{uniforms:Jt([qe.common,qe.specularmap,qe.envmap,qe.aomap,qe.lightmap,qe.fog]),vertexShader:ct.meshbasic_vert,fragmentShader:ct.meshbasic_frag},lambert:{uniforms:Jt([qe.common,qe.specularmap,qe.envmap,qe.aomap,qe.lightmap,qe.emissivemap,qe.fog,qe.lights,{emissive:{value:new Ve(0)}}]),vertexShader:ct.meshlambert_vert,fragmentShader:ct.meshlambert_frag},phong:{uniforms:Jt([qe.common,qe.specularmap,qe.envmap,qe.aomap,qe.lightmap,qe.emissivemap,qe.bumpmap,qe.normalmap,qe.displacementmap,qe.fog,qe.lights,{emissive:{value:new Ve(0)},specular:{value:new Ve(1118481)},shininess:{value:30}}]),vertexShader:ct.meshphong_vert,fragmentShader:ct.meshphong_frag},standard:{uniforms:Jt([qe.common,qe.envmap,qe.aomap,qe.lightmap,qe.emissivemap,qe.bumpmap,qe.normalmap,qe.displacementmap,qe.roughnessmap,qe.metalnessmap,qe.fog,qe.lights,{emissive:{value:new Ve(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ct.meshphysical_vert,fragmentShader:ct.meshphysical_frag},toon:{uniforms:Jt([qe.common,qe.aomap,qe.lightmap,qe.emissivemap,qe.bumpmap,qe.normalmap,qe.displacementmap,qe.gradientmap,qe.fog,qe.lights,{emissive:{value:new Ve(0)}}]),vertexShader:ct.meshtoon_vert,fragmentShader:ct.meshtoon_frag},matcap:{uniforms:Jt([qe.common,qe.bumpmap,qe.normalmap,qe.displacementmap,qe.fog,{matcap:{value:null}}]),vertexShader:ct.meshmatcap_vert,fragmentShader:ct.meshmatcap_frag},points:{uniforms:Jt([qe.points,qe.fog]),vertexShader:ct.points_vert,fragmentShader:ct.points_frag},dashed:{uniforms:Jt([qe.common,qe.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ct.linedashed_vert,fragmentShader:ct.linedashed_frag},depth:{uniforms:Jt([qe.common,qe.displacementmap]),vertexShader:ct.depth_vert,fragmentShader:ct.depth_frag},normal:{uniforms:Jt([qe.common,qe.bumpmap,qe.normalmap,qe.displacementmap,{opacity:{value:1}}]),vertexShader:ct.normal_vert,fragmentShader:ct.normal_frag},sprite:{uniforms:Jt([qe.sprite,qe.fog]),vertexShader:ct.sprite_vert,fragmentShader:ct.sprite_frag},background:{uniforms:{uvTransform:{value:new Sn},t2D:{value:null}},vertexShader:ct.background_vert,fragmentShader:ct.background_frag},cube:{uniforms:Jt([qe.envmap,{opacity:{value:1}}]),vertexShader:ct.cube_vert,fragmentShader:ct.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ct.equirect_vert,fragmentShader:ct.equirect_frag},distanceRGBA:{uniforms:Jt([qe.common,qe.displacementmap,{referencePosition:{value:new O},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ct.distanceRGBA_vert,fragmentShader:ct.distanceRGBA_frag},shadow:{uniforms:Jt([qe.lights,qe.fog,{color:{value:new Ve(0)},opacity:{value:1}}]),vertexShader:ct.shadow_vert,fragmentShader:ct.shadow_frag}};Zn.physical={uniforms:Jt([Zn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Le(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new Ve(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:ct.meshphysical_vert,fragmentShader:ct.meshphysical_frag};function uL(n,e,t,i,r){const s=new Ve(0);let a=0,o,l,c=null,d=0,u=null;function f(m,x,p,v){let g=x.isScene===!0?x.background:null;g&&g.isTexture&&(g=e.get(g));const _=n.xr,y=_.getSession&&_.getSession();y&&y.environmentBlendMode==="additive"&&(g=null),g===null?h(s,a):g&&g.isColor&&(h(g,1),v=!0),(n.autoClear||v)&&n.clear(n.autoClearColor,n.autoClearDepth,n.autoClearStencil),g&&(g.isCubeTexture||g.isWebGLCubeRenderTarget||g.mapping===co)?(l===void 0&&(l=new Et(new Es(1,1,1),new dn({name:"BackgroundCubeMaterial",uniforms:Ha(Zn.cube.uniforms),vertexShader:Zn.cube.vertexShader,fragmentShader:Zn.cube.fragmentShader,side:Ft,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),l.geometry.deleteAttribute("uv"),l.onBeforeRender=function(M,w,b){this.matrixWorld.copyPosition(b.matrixWorld)},Object.defineProperty(l.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(l)),g.isWebGLCubeRenderTarget&&(g=g.texture),l.material.uniforms.envMap.value=g,l.material.uniforms.flipEnvMap.value=g.isCubeTexture&&g._needsFlipEnvMap?-1:1,(c!==g||d!==g.version||u!==n.toneMapping)&&(l.material.needsUpdate=!0,c=g,d=g.version,u=n.toneMapping),m.unshift(l,l.geometry,l.material,0,0,null)):g&&g.isTexture&&(o===void 0&&(o=new Et(new uc(2,2),new dn({name:"BackgroundMaterial",uniforms:Ha(Zn.background.uniforms),vertexShader:Zn.background.vertexShader,fragmentShader:Zn.background.fragmentShader,side:oo,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),Object.defineProperty(o.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(o)),o.material.uniforms.t2D.value=g,g.matrixAutoUpdate===!0&&g.updateMatrix(),o.material.uniforms.uvTransform.value.copy(g.matrix),(c!==g||d!==g.version||u!==n.toneMapping)&&(o.material.needsUpdate=!0,c=g,d=g.version,u=n.toneMapping),m.unshift(o,o.geometry,o.material,0,0,null))}function h(m,x){t.buffers.color.setClear(m.r,m.g,m.b,x,r)}return{getClearColor:function(){return s},setClearColor:function(m,x=1){s.set(m),a=x,h(s,a)},getClearAlpha:function(){return a},setClearAlpha:function(m){a=m,h(s,a)},render:f}}function fL(n,e,t,i){const r=n.getParameter(34921),s=i.isWebGL2?null:e.get("OES_vertex_array_object"),a=i.isWebGL2||s!==null,o={},l=x(null);let c=l;function d(H,A,q,N,X){let Z=!1;if(a){const $=m(N,q,A);c!==$&&(c=$,f(c.object)),Z=p(N,X),Z&&v(N,X)}else{const $=A.wireframe===!0;(c.geometry!==N.id||c.program!==q.id||c.wireframe!==$)&&(c.geometry=N.id,c.program=q.id,c.wireframe=$,Z=!0)}H.isInstancedMesh===!0&&(Z=!0),X!==null&&t.update(X,34963),Z&&(b(H,A,q,N),X!==null&&n.bindBuffer(34963,t.get(X).buffer))}function u(){return i.isWebGL2?n.createVertexArray():s.createVertexArrayOES()}function f(H){return i.isWebGL2?n.bindVertexArray(H):s.bindVertexArrayOES(H)}function h(H){return i.isWebGL2?n.deleteVertexArray(H):s.deleteVertexArrayOES(H)}function m(H,A,q){const N=q.wireframe===!0;let X=o[H.id];X===void 0&&(X={},o[H.id]=X);let Z=X[A.id];Z===void 0&&(Z={},X[A.id]=Z);let $=Z[N];return $===void 0&&($=x(u()),Z[N]=$),$}function x(H){const A=[],q=[],N=[];for(let X=0;X<r;X++)A[X]=0,q[X]=0,N[X]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:A,enabledAttributes:q,attributeDivisors:N,object:H,attributes:{},index:null}}function p(H,A){const q=c.attributes,N=H.attributes;let X=0;for(const Z in N){const $=q[Z],J=N[Z];if($===void 0||$.attribute!==J||$.data!==J.data)return!0;X++}return c.attributesNum!==X||c.index!==A}function v(H,A){const q={},N=H.attributes;let X=0;for(const Z in N){const $=N[Z],J={};J.attribute=$,$.data&&(J.data=$.data),q[Z]=J,X++}c.attributes=q,c.attributesNum=X,c.index=A}function g(){const H=c.newAttributes;for(let A=0,q=H.length;A<q;A++)H[A]=0}function _(H){y(H,0)}function y(H,A){const q=c.newAttributes,N=c.enabledAttributes,X=c.attributeDivisors;q[H]=1,N[H]===0&&(n.enableVertexAttribArray(H),N[H]=1),X[H]!==A&&((i.isWebGL2?n:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](H,A),X[H]=A)}function M(){const H=c.newAttributes,A=c.enabledAttributes;for(let q=0,N=A.length;q<N;q++)A[q]!==H[q]&&(n.disableVertexAttribArray(q),A[q]=0)}function w(H,A,q,N,X,Z){i.isWebGL2===!0&&(q===5124||q===5125)?n.vertexAttribIPointer(H,A,q,X,Z):n.vertexAttribPointer(H,A,q,N,X,Z)}function b(H,A,q,N){if(i.isWebGL2===!1&&(H.isInstancedMesh||N.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;g();const X=N.attributes,Z=q.getAttributes(),$=A.defaultAttributeValues;for(const J in Z){const R=Z[J];if(R>=0){const k=X[J];if(k!==void 0){const j=k.normalized,K=k.itemSize,B=t.get(k);if(B===void 0)continue;const oe=B.buffer,Re=B.type,Ae=B.bytesPerElement;if(k.isInterleavedBufferAttribute){const pe=k.data,_e=pe.stride,Ie=k.offset;pe&&pe.isInstancedInterleavedBuffer?(y(R,pe.meshPerAttribute),N._maxInstanceCount===void 0&&(N._maxInstanceCount=pe.meshPerAttribute*pe.count)):_(R),n.bindBuffer(34962,oe),w(R,K,Re,j,_e*Ae,Ie*Ae)}else k.isInstancedBufferAttribute?(y(R,k.meshPerAttribute),N._maxInstanceCount===void 0&&(N._maxInstanceCount=k.meshPerAttribute*k.count)):_(R),n.bindBuffer(34962,oe),w(R,K,Re,j,0,0)}else if(J==="instanceMatrix"){const j=t.get(H.instanceMatrix);if(j===void 0)continue;const K=j.buffer,B=j.type;y(R+0,1),y(R+1,1),y(R+2,1),y(R+3,1),n.bindBuffer(34962,K),n.vertexAttribPointer(R+0,4,B,!1,64,0),n.vertexAttribPointer(R+1,4,B,!1,64,16),n.vertexAttribPointer(R+2,4,B,!1,64,32),n.vertexAttribPointer(R+3,4,B,!1,64,48)}else if(J==="instanceColor"){const j=t.get(H.instanceColor);if(j===void 0)continue;const K=j.buffer,B=j.type;y(R,1),n.bindBuffer(34962,K),n.vertexAttribPointer(R,3,B,!1,12,0)}else if($!==void 0){const j=$[J];if(j!==void 0)switch(j.length){case 2:n.vertexAttrib2fv(R,j);break;case 3:n.vertexAttrib3fv(R,j);break;case 4:n.vertexAttrib4fv(R,j);break;default:n.vertexAttrib1fv(R,j)}}}}M()}function S(){I();for(const H in o){const A=o[H];for(const q in A){const N=A[q];for(const X in N)h(N[X].object),delete N[X];delete A[q]}delete o[H]}}function E(H){if(o[H.id]===void 0)return;const A=o[H.id];for(const q in A){const N=A[q];for(const X in N)h(N[X].object),delete N[X];delete A[q]}delete o[H.id]}function C(H){for(const A in o){const q=o[A];if(q[H.id]===void 0)continue;const N=q[H.id];for(const X in N)h(N[X].object),delete N[X];delete q[H.id]}}function I(){W(),c!==l&&(c=l,f(c.object))}function W(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:d,reset:I,resetDefaultState:W,dispose:S,releaseStatesOfGeometry:E,releaseStatesOfProgram:C,initAttributes:g,enableAttribute:_,disableUnusedAttributes:M}}function hL(n,e,t,i){const r=i.isWebGL2;let s;function a(c){s=c}function o(c,d){n.drawArrays(s,c,d),t.update(d,s,1)}function l(c,d,u){if(u===0)return;let f,h;if(r)f=n,h="drawArraysInstanced";else if(f=e.get("ANGLE_instanced_arrays"),h="drawArraysInstancedANGLE",f===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[h](s,c,d,u),t.update(d,s,u)}this.setMode=a,this.render=o,this.renderInstances=l}function pL(n,e,t){let i;function r(){if(i!==void 0)return i;const w=e.get("EXT_texture_filter_anisotropic");return w!==null?i=n.getParameter(w.MAX_TEXTURE_MAX_ANISOTROPY_EXT):i=0,i}function s(w){if(w==="highp"){if(n.getShaderPrecisionFormat(35633,36338).precision>0&&n.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";w="mediump"}return w==="mediump"&&n.getShaderPrecisionFormat(35633,36337).precision>0&&n.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const a=typeof WebGL2RenderingContext<"u"&&n instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext<"u"&&n instanceof WebGL2ComputeRenderingContext;let o=t.precision!==void 0?t.precision:"highp";const l=s(o);l!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",l,"instead."),o=l);const c=t.logarithmicDepthBuffer===!0,d=n.getParameter(34930),u=n.getParameter(35660),f=n.getParameter(3379),h=n.getParameter(34076),m=n.getParameter(34921),x=n.getParameter(36347),p=n.getParameter(36348),v=n.getParameter(36349),g=u>0,_=a||!!e.get("OES_texture_float"),y=g&&_,M=a?n.getParameter(36183):0;return{isWebGL2:a,getMaxAnisotropy:r,getMaxPrecision:s,precision:o,logarithmicDepthBuffer:c,maxTextures:d,maxVertexTextures:u,maxTextureSize:f,maxCubemapSize:h,maxAttributes:m,maxVertexUniforms:x,maxVaryings:p,maxFragmentUniforms:v,vertexTextures:g,floatFragmentTextures:_,floatVertexTextures:y,maxSamples:M}}function mL(n){const e=this;let t=null,i=0,r=!1,s=!1;const a=new fi,o=new Sn,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(u,f,h){const m=u.length!==0||f||i!==0||r;return r=f,t=d(u,h,0),i=u.length,m},this.beginShadows=function(){s=!0,d(null)},this.endShadows=function(){s=!1,c()},this.setState=function(u,f,h){const m=u.clippingPlanes,x=u.clipIntersection,p=u.clipShadows,v=n.get(u);if(!r||m===null||m.length===0||s&&!p)s?d(null):c();else{const g=s?0:i,_=g*4;let y=v.clippingState||null;l.value=y,y=d(m,f,_,h);for(let M=0;M!==_;++M)y[M]=t[M];v.clippingState=y,this.numIntersection=x?this.numPlanes:0,this.numPlanes+=g}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function d(u,f,h,m){const x=u!==null?u.length:0;let p=null;if(x!==0){if(p=l.value,m!==!0||p===null){const v=h+x*4,g=f.matrixWorldInverse;o.getNormalMatrix(g),(p===null||p.length<v)&&(p=new Float32Array(v));for(let _=0,y=h;_!==x;++_,y+=4)a.copy(u[_]).applyMatrix4(g,o),a.normal.toArray(p,y),p[y+3]=a.constant}l.value=p,l.needsUpdate=!0}return e.numPlanes=x,e.numIntersection=0,p}}function xL(n){let e=new WeakMap;function t(a,o){return o===Pd?a.mapping=Gc:o===Id&&(a.mapping=kc),a}function i(a){if(a&&a.isTexture){const o=a.mapping;if(o===Pd||o===Id)if(e.has(a)){const l=e.get(a).texture;return t(l,a.mapping)}else{const l=a.image;if(l&&l.height>0){const c=n.getRenderList(),d=n.getRenderTarget(),u=new lp(l.height/2);return u.fromEquirectangularTexture(n,a),e.set(a,u),n.setRenderTarget(d),n.setRenderList(c),a.addEventListener("dispose",r),t(u.texture,a.mapping)}else return null}}return a}function r(a){const o=a.target;o.removeEventListener("dispose",r);const l=e.get(o);l!==void 0&&(e.delete(o),l.dispose())}function s(){e=new WeakMap}return{get:i,dispose:s}}function gL(n){const e={};function t(i){if(e[i]!==void 0)return e[i];let r;switch(i){case"WEBGL_depth_texture":r=n.getExtension("WEBGL_depth_texture")||n.getExtension("MOZ_WEBGL_depth_texture")||n.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=n.getExtension("WEBGL_compressed_texture_pvrtc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=n.getExtension(i)}return e[i]=r,r}return{has:function(i){return t(i)!==null},init:function(i){i.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float")},get:function(i){const r=t(i);return r===null&&console.warn("THREE.WebGLRenderer: "+i+" extension not supported."),r}}}function vL(n,e,t,i){const r={},s=new WeakMap;function a(u){const f=u.target;f.index!==null&&e.remove(f.index);for(const m in f.attributes)e.remove(f.attributes[m]);f.removeEventListener("dispose",a),delete r[f.id];const h=s.get(f);h&&(e.remove(h),s.delete(f)),i.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,t.memory.geometries--}function o(u,f){return r[f.id]===!0||(f.addEventListener("dispose",a),r[f.id]=!0,t.memory.geometries++),f}function l(u){const f=u.attributes;for(const m in f)e.update(f[m],34962);const h=u.morphAttributes;for(const m in h){const x=h[m];for(let p=0,v=x.length;p<v;p++)e.update(x[p],34962)}}function c(u){const f=[],h=u.index,m=u.attributes.position;let x=0;if(h!==null){const g=h.array;x=h.version;for(let _=0,y=g.length;_<y;_+=3){const M=g[_+0],w=g[_+1],b=g[_+2];f.push(M,w,w,b,b,M)}}else{const g=m.array;x=m.version;for(let _=0,y=g.length/3-1;_<y;_+=3){const M=_+0,w=_+1,b=_+2;f.push(M,w,w,b,b,M)}}const p=new(g2(f)>65535?Ss:Ms)(f,1);p.version=x;const v=s.get(u);v&&e.remove(v),s.set(u,p)}function d(u){const f=s.get(u);if(f){const h=u.index;h!==null&&f.version<h.version&&c(u)}else c(u);return s.get(u)}return{get:o,update:l,getWireframeAttribute:d}}function yL(n,e,t,i){const r=i.isWebGL2;let s;function a(f){s=f}let o,l;function c(f){o=f.type,l=f.bytesPerElement}function d(f,h){n.drawElements(s,h,o,f*l),t.update(h,s,1)}function u(f,h,m){if(m===0)return;let x,p;if(r)x=n,p="drawElementsInstanced";else if(x=e.get("ANGLE_instanced_arrays"),p="drawElementsInstancedANGLE",x===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}x[p](s,h,o,f*l,m),t.update(h,s,m)}this.setMode=a,this.setIndex=c,this.render=d,this.renderInstances=u}function bL(n){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function i(s,a,o){switch(t.calls++,a){case 4:t.triangles+=o*(s/3);break;case 1:t.lines+=o*(s/2);break;case 3:t.lines+=o*(s-1);break;case 2:t.lines+=o*s;break;case 0:t.points+=o*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function r(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:r,update:i}}function _L(n,e){return n[0]-e[0]}function wL(n,e){return Math.abs(e[1])-Math.abs(n[1])}function ML(n){const e={},t=new Float32Array(8),i=[];for(let s=0;s<8;s++)i[s]=[s,0];function r(s,a,o,l){const c=s.morphTargetInfluences,d=c===void 0?0:c.length;let u=e[a.id];if(u===void 0){u=[];for(let p=0;p<d;p++)u[p]=[p,0];e[a.id]=u}for(let p=0;p<d;p++){const v=u[p];v[0]=p,v[1]=c[p]}u.sort(wL);for(let p=0;p<8;p++)p<d&&u[p][1]?(i[p][0]=u[p][0],i[p][1]=u[p][1]):(i[p][0]=Number.MAX_SAFE_INTEGER,i[p][1]=0);i.sort(_L);const f=o.morphTargets&&a.morphAttributes.position,h=o.morphNormals&&a.morphAttributes.normal;let m=0;for(let p=0;p<8;p++){const v=i[p],g=v[0],_=v[1];g!==Number.MAX_SAFE_INTEGER&&_?(f&&a.getAttribute("morphTarget"+p)!==f[g]&&a.setAttribute("morphTarget"+p,f[g]),h&&a.getAttribute("morphNormal"+p)!==h[g]&&a.setAttribute("morphNormal"+p,h[g]),t[p]=_,m+=_):(f&&a.hasAttribute("morphTarget"+p)===!0&&a.deleteAttribute("morphTarget"+p),h&&a.hasAttribute("morphNormal"+p)===!0&&a.deleteAttribute("morphNormal"+p),t[p]=0)}const x=a.morphTargetsRelative?1:1-m;l.getUniforms().setValue(n,"morphTargetBaseInfluence",x),l.getUniforms().setValue(n,"morphTargetInfluences",t)}return{update:r}}function SL(n,e,t,i){let r=new WeakMap;function s(l){const c=i.render.frame,d=l.geometry,u=e.get(l,d);return r.get(u)!==c&&(e.update(u),r.set(u,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",o)===!1&&l.addEventListener("dispose",o),t.update(l.instanceMatrix,34962),l.instanceColor!==null&&t.update(l.instanceColor,34962)),u}function a(){r=new WeakMap}function o(l){const c=l.target;c.removeEventListener("dispose",o),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:s,dispose:a}}function Va(n=null,e=1,t=1,i=1){yt.call(this,null),this.image={data:n,width:e,height:t,depth:i},this.magFilter=Ut,this.minFilter=Ut,this.wrapR=an,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}Va.prototype=Object.create(yt.prototype);Va.prototype.constructor=Va;Va.prototype.isDataTexture2DArray=!0;function Wa(n=null,e=1,t=1,i=1){yt.call(this,null),this.image={data:n,width:e,height:t,depth:i},this.magFilter=Ut,this.minFilter=Ut,this.wrapR=an,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}Wa.prototype=Object.create(yt.prototype);Wa.prototype.constructor=Wa;Wa.prototype.isDataTexture3D=!0;const b2=new yt,EL=new Va,TL=new Wa,_2=new vi,Vx=[],Wx=[],$x=new Float32Array(16),jx=new Float32Array(9),Xx=new Float32Array(4);function po(n,e,t){const i=n[0];if(i<=0||i>0)return n;const r=e*t;let s=Vx[r];if(s===void 0&&(s=new Float32Array(r),Vx[r]=s),e!==0){i.toArray(s,0);for(let a=1,o=0;a!==e;++a)o+=t,n[a].toArray(s,o)}return s}function qn(n,e){if(n.length!==e.length)return!1;for(let t=0,i=n.length;t<i;t++)if(n[t]!==e[t])return!1;return!0}function Cn(n,e){for(let t=0,i=e.length;t<i;t++)n[t]=e[t]}function w2(n,e){let t=Wx[e];t===void 0&&(t=new Int32Array(e),Wx[e]=t);for(let i=0;i!==e;++i)t[i]=n.allocateTextureUnit();return t}function AL(n,e){const t=this.cache;t[0]!==e&&(n.uniform1f(this.addr,e),t[0]=e)}function LL(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(qn(t,e))return;n.uniform2fv(this.addr,e),Cn(t,e)}}function CL(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(n.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(qn(t,e))return;n.uniform3fv(this.addr,e),Cn(t,e)}}function RL(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(qn(t,e))return;n.uniform4fv(this.addr,e),Cn(t,e)}}function PL(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(qn(t,e))return;n.uniformMatrix2fv(this.addr,!1,e),Cn(t,e)}else{if(qn(t,i))return;Xx.set(i),n.uniformMatrix2fv(this.addr,!1,Xx),Cn(t,i)}}function IL(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(qn(t,e))return;n.uniformMatrix3fv(this.addr,!1,e),Cn(t,e)}else{if(qn(t,i))return;jx.set(i),n.uniformMatrix3fv(this.addr,!1,jx),Cn(t,i)}}function DL(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(qn(t,e))return;n.uniformMatrix4fv(this.addr,!1,e),Cn(t,e)}else{if(qn(t,i))return;$x.set(i),n.uniformMatrix4fv(this.addr,!1,$x),Cn(t,i)}}function OL(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.safeSetTexture2D(e||b2,r)}function zL(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTexture2DArray(e||EL,r)}function FL(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTexture3D(e||TL,r)}function qL(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.safeSetTextureCube(e||_2,r)}function NL(n,e){const t=this.cache;t[0]!==e&&(n.uniform1i(this.addr,e),t[0]=e)}function BL(n,e){const t=this.cache;qn(t,e)||(n.uniform2iv(this.addr,e),Cn(t,e))}function UL(n,e){const t=this.cache;qn(t,e)||(n.uniform3iv(this.addr,e),Cn(t,e))}function GL(n,e){const t=this.cache;qn(t,e)||(n.uniform4iv(this.addr,e),Cn(t,e))}function kL(n,e){const t=this.cache;t[0]!==e&&(n.uniform1ui(this.addr,e),t[0]=e)}function HL(n){switch(n){case 5126:return AL;case 35664:return LL;case 35665:return CL;case 35666:return RL;case 35674:return PL;case 35675:return IL;case 35676:return DL;case 5124:case 35670:return NL;case 35667:case 35671:return BL;case 35668:case 35672:return UL;case 35669:case 35673:return GL;case 5125:return kL;case 35678:case 36198:case 36298:case 36306:case 35682:return OL;case 35679:case 36299:case 36307:return FL;case 35680:case 36300:case 36308:case 36293:return qL;case 36289:case 36303:case 36311:case 36292:return zL}}function VL(n,e){n.uniform1fv(this.addr,e)}function WL(n,e){n.uniform1iv(this.addr,e)}function $L(n,e){n.uniform2iv(this.addr,e)}function jL(n,e){n.uniform3iv(this.addr,e)}function XL(n,e){n.uniform4iv(this.addr,e)}function YL(n,e){const t=po(e,this.size,2);n.uniform2fv(this.addr,t)}function ZL(n,e){const t=po(e,this.size,3);n.uniform3fv(this.addr,t)}function JL(n,e){const t=po(e,this.size,4);n.uniform4fv(this.addr,t)}function KL(n,e){const t=po(e,this.size,4);n.uniformMatrix2fv(this.addr,!1,t)}function QL(n,e){const t=po(e,this.size,9);n.uniformMatrix3fv(this.addr,!1,t)}function eC(n,e){const t=po(e,this.size,16);n.uniformMatrix4fv(this.addr,!1,t)}function tC(n,e,t){const i=e.length,r=w2(t,i);n.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)t.safeSetTexture2D(e[s]||b2,r[s])}function nC(n,e,t){const i=e.length,r=w2(t,i);n.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)t.safeSetTextureCube(e[s]||_2,r[s])}function iC(n){switch(n){case 5126:return VL;case 35664:return YL;case 35665:return ZL;case 35666:return JL;case 35674:return KL;case 35675:return QL;case 35676:return eC;case 5124:case 35670:return WL;case 35667:case 35671:return $L;case 35668:case 35672:return jL;case 35669:case 35673:return XL;case 35678:case 36198:case 36298:case 36306:case 35682:return tC;case 35680:case 36300:case 36308:case 36293:return nC}}function rC(n,e,t){this.id=n,this.addr=t,this.cache=[],this.setValue=HL(e.type)}function M2(n,e,t){this.id=n,this.addr=t,this.cache=[],this.size=e.size,this.setValue=iC(e.type)}M2.prototype.updateCache=function(n){const e=this.cache;n instanceof Float32Array&&e.length!==n.length&&(this.cache=new Float32Array(n.length)),Cn(e,n)};function S2(n){this.id=n,this.seq=[],this.map={}}S2.prototype.setValue=function(n,e,t){const i=this.seq;for(let r=0,s=i.length;r!==s;++r){const a=i[r];a.setValue(n,e[a.id],t)}};const ih=/(\w+)(\])?(\[|\.)?/g;function Yx(n,e){n.seq.push(e),n.map[e.id]=e}function sC(n,e,t){const i=n.name,r=i.length;for(ih.lastIndex=0;;){const s=ih.exec(i),a=ih.lastIndex;let o=s[1];const l=s[2]==="]",c=s[3];if(l&&(o=o|0),c===void 0||c==="["&&a+2===r){Yx(t,c===void 0?new rC(o,n,e):new M2(o,n,e));break}else{let u=t.map[o];u===void 0&&(u=new S2(o),Yx(t,u)),t=u}}}function Mr(n,e){this.seq=[],this.map={};const t=n.getProgramParameter(e,35718);for(let i=0;i<t;++i){const r=n.getActiveUniform(e,i),s=n.getUniformLocation(e,r.name);sC(r,s,this)}}Mr.prototype.setValue=function(n,e,t,i){const r=this.map[e];r!==void 0&&r.setValue(n,t,i)};Mr.prototype.setOptional=function(n,e,t){const i=e[t];i!==void 0&&this.setValue(n,t,i)};Mr.upload=function(n,e,t,i){for(let r=0,s=e.length;r!==s;++r){const a=e[r],o=t[a.id];o.needsUpdate!==!1&&a.setValue(n,o.value,i)}};Mr.seqWithValue=function(n,e){const t=[];for(let i=0,r=n.length;i!==r;++i){const s=n[i];s.id in e&&t.push(s)}return t};function Zx(n,e,t){const i=n.createShader(e);return n.shaderSource(i,t),n.compileShader(i),i}let aC=0;function oC(n){const e=n.split(`
`);for(let t=0;t<e.length;t++)e[t]=t+1+": "+e[t];return e.join(`
`)}function E2(n){switch(n){case ln:return["Linear","( value )"];case Vc:return["sRGB","( value )"];case Mu:return["RGBE","( value )"];case rp:return["RGBM","( value, 7.0 )"];case sp:return["RGBM","( value, 16.0 )"];case ap:return["RGBD","( value, 256.0 )"];case wu:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case u2:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",n),["Linear","( value )"]}}function Jx(n,e,t){const i=n.getShaderParameter(e,35713),r=n.getShaderInfoLog(e).trim();if(i&&r==="")return"";const s=n.getShaderSource(e);return"THREE.WebGLShader: gl.getShaderInfoLog() "+t+`
`+r+oC(s)}function Co(n,e){const t=E2(e);return"vec4 "+n+"( vec4 value ) { return "+t[0]+"ToLinear"+t[1]+"; }"}function cC(n,e){const t=E2(e);return"vec4 "+n+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function lC(n,e){let t;switch(e){case dv:t="Linear";break;case uv:t="Reinhard";break;case fv:t="OptimizedCineon";break;case hv:t="ACESFilmic";break;case pv:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+n+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function dC(n){return[n.extensionDerivatives||n.envMapCubeUV||n.bumpMap||n.tangentSpaceNormalMap||n.clearcoatNormalMap||n.flatShading||n.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(n.extensionFragDepth||n.logarithmicDepthBuffer)&&n.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",n.extensionDrawBuffers&&n.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(ko).join(`
`)}function uC(n){const e=[];for(const t in n){const i=n[t];i!==!1&&e.push("#define "+t+" "+i)}return e.join(`
`)}function fC(n,e){const t={},i=n.getProgramParameter(e,35721);for(let r=0;r<i;r++){const a=n.getActiveAttrib(e,r).name;t[a]=n.getAttribLocation(e,a)}return t}function ko(n){return n!==""}function Kx(n,e){return n.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Qx(n,e){return n.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const hC=/^[ \t]*#include +<([\w\d./]+)>/gm;function r0(n){return n.replace(hC,pC)}function pC(n,e){const t=ct[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return r0(t)}const mC=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,xC=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function eg(n){return n.replace(xC,T2).replace(mC,gC)}function gC(n,e,t,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),T2(n,e,t,i)}function T2(n,e,t,i){let r="";for(let s=parseInt(e);s<parseInt(t);s++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function tg(n){let e="precision "+n.precision+` float;
precision `+n.precision+" int;";return n.precision==="highp"?e+=`
#define HIGH_PRECISION`:n.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:n.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function vC(n){let e="SHADOWMAP_TYPE_BASIC";return n.shadowMapType===K0?e="SHADOWMAP_TYPE_PCF":n.shadowMapType===k3?e="SHADOWMAP_TYPE_PCF_SOFT":n.shadowMapType===Ca&&(e="SHADOWMAP_TYPE_VSM"),e}function yC(n){let e="ENVMAP_TYPE_CUBE";if(n.envMap)switch(n.envMapMode){case Gc:case kc:e="ENVMAP_TYPE_CUBE";break;case co:case Hc:e="ENVMAP_TYPE_CUBE_UV";break}return e}function bC(n){let e="ENVMAP_MODE_REFLECTION";if(n.envMap)switch(n.envMapMode){case kc:case Hc:e="ENVMAP_MODE_REFRACTION";break}return e}function _C(n){let e="ENVMAP_BLENDING_NONE";if(n.envMap)switch(n.combine){case Uc:e="ENVMAP_BLENDING_MULTIPLY";break;case cv:e="ENVMAP_BLENDING_MIX";break;case lv:e="ENVMAP_BLENDING_ADD";break}return e}function wC(n,e,t,i){const r=n.getContext(),s=t.defines;let a=t.vertexShader,o=t.fragmentShader;const l=vC(t),c=yC(t),d=bC(t),u=_C(t),f=n.gammaFactor>0?n.gammaFactor:1,h=t.isWebGL2?"":dC(t),m=uC(s),x=r.createProgram();let p,v,g=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(p=[m].filter(ko).join(`
`),p.length>0&&(p+=`
`),v=[h,m].filter(ko).join(`
`),v.length>0&&(v+=`
`)):(p=[tg(t),"#define SHADER_NAME "+t.shaderName,m,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+f,"#define MAX_BONES "+t.maxBones,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+d:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.useVertexTexture?"#define BONE_TEXTURE":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#ifdef USE_COLOR","	attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(ko).join(`
`),v=[h,tg(t),"#define SHADER_NAME "+t.shaderName,m,t.alphaTest?"#define ALPHATEST "+t.alphaTest+(t.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+f,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+d:"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.sheen?"#define USE_SHEEN":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(t.extensionShaderTextureLOD||t.envMap)&&t.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==ms?"#define TONE_MAPPING":"",t.toneMapping!==ms?ct.tonemapping_pars_fragment:"",t.toneMapping!==ms?lC("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",ct.encodings_pars_fragment,t.map?Co("mapTexelToLinear",t.mapEncoding):"",t.matcap?Co("matcapTexelToLinear",t.matcapEncoding):"",t.envMap?Co("envMapTexelToLinear",t.envMapEncoding):"",t.emissiveMap?Co("emissiveMapTexelToLinear",t.emissiveMapEncoding):"",t.lightMap?Co("lightMapTexelToLinear",t.lightMapEncoding):"",cC("linearToOutputTexel",t.outputEncoding),t.depthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(ko).join(`
`)),a=r0(a),a=Kx(a,t),a=Qx(a,t),o=r0(o),o=Kx(o,t),o=Qx(o,t),a=eg(a),o=eg(o),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(g=`#version 300 es
`,p=["#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+p,v=["#define varying in",t.glslVersion===i0?"":"out highp vec4 pc_fragColor;",t.glslVersion===i0?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+v);const _=g+p+a,y=g+v+o,M=Zx(r,35633,_),w=Zx(r,35632,y);if(r.attachShader(x,M),r.attachShader(x,w),t.index0AttributeName!==void 0?r.bindAttribLocation(x,0,t.index0AttributeName):t.morphTargets===!0&&r.bindAttribLocation(x,0,"position"),r.linkProgram(x),n.debug.checkShaderErrors){const E=r.getProgramInfoLog(x).trim(),C=r.getShaderInfoLog(M).trim(),I=r.getShaderInfoLog(w).trim();let W=!0,H=!0;if(r.getProgramParameter(x,35714)===!1){W=!1;const A=Jx(r,M,"vertex"),q=Jx(r,w,"fragment");console.error("THREE.WebGLProgram: shader error: ",r.getError(),"35715",r.getProgramParameter(x,35715),"gl.getProgramInfoLog",E,A,q)}else E!==""?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",E):(C===""||I==="")&&(H=!1);H&&(this.diagnostics={runnable:W,programLog:E,vertexShader:{log:C,prefix:p},fragmentShader:{log:I,prefix:v}})}r.deleteShader(M),r.deleteShader(w);let b;this.getUniforms=function(){return b===void 0&&(b=new Mr(r,x)),b};let S;return this.getAttributes=function(){return S===void 0&&(S=fC(r,x)),S},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(x),this.program=void 0},this.name=t.shaderName,this.id=aC++,this.cacheKey=e,this.usedTimes=1,this.program=x,this.vertexShader=M,this.fragmentShader=w,this}function MC(n,e,t,i,r,s){const a=[],o=i.isWebGL2,l=i.logarithmicDepthBuffer,c=i.floatVertexTextures,d=i.maxVertexUniforms,u=i.vertexTextures;let f=i.precision;const h={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},m=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function x(w){const S=w.skeleton.bones;if(c)return 1024;{const C=Math.floor((d-20)/4),I=Math.min(C,S.length);return I<S.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+S.length+" bones. This GPU supports "+I+"."),0):I}}function p(w){let b;return w&&w.isTexture?b=w.encoding:w&&w.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),b=w.texture.encoding):b=ln,b}function v(w,b,S,E,C){const I=E.fog,W=w.isMeshStandardMaterial?E.environment:null,H=e.get(w.envMap||W),A=h[w.type],q=C.isSkinnedMesh?x(C):0;w.precision!==null&&(f=i.getMaxPrecision(w.precision),f!==w.precision&&console.warn("THREE.WebGLProgram.getParameters:",w.precision,"not supported, using",f,"instead."));let N,X;if(A){const J=Zn[A];N=J.vertexShader,X=J.fragmentShader}else N=w.vertexShader,X=w.fragmentShader;const Z=n.getRenderTarget();return{isWebGL2:o,shaderID:A,shaderName:w.type,vertexShader:N,fragmentShader:X,defines:w.defines,isRawShaderMaterial:w.isRawShaderMaterial===!0,glslVersion:w.glslVersion,precision:f,instancing:C.isInstancedMesh===!0,instancingColor:C.isInstancedMesh===!0&&C.instanceColor!==null,supportsVertexTextures:u,outputEncoding:Z!==null?p(Z.texture):n.outputEncoding,map:!!w.map,mapEncoding:p(w.map),matcap:!!w.matcap,matcapEncoding:p(w.matcap),envMap:!!H,envMapMode:H&&H.mapping,envMapEncoding:p(H),envMapCubeUV:!!H&&(H.mapping===co||H.mapping===Hc),lightMap:!!w.lightMap,lightMapEncoding:p(w.lightMap),aoMap:!!w.aoMap,emissiveMap:!!w.emissiveMap,emissiveMapEncoding:p(w.emissiveMap),bumpMap:!!w.bumpMap,normalMap:!!w.normalMap,objectSpaceNormalMap:w.normalMapType===p2,tangentSpaceNormalMap:w.normalMapType===Hs,clearcoatMap:!!w.clearcoatMap,clearcoatRoughnessMap:!!w.clearcoatRoughnessMap,clearcoatNormalMap:!!w.clearcoatNormalMap,displacementMap:!!w.displacementMap,roughnessMap:!!w.roughnessMap,metalnessMap:!!w.metalnessMap,specularMap:!!w.specularMap,alphaMap:!!w.alphaMap,gradientMap:!!w.gradientMap,sheen:!!w.sheen,transmissionMap:!!w.transmissionMap,combine:w.combine,vertexTangents:w.normalMap&&w.vertexTangents,vertexColors:w.vertexColors,vertexUvs:!!w.map||!!w.bumpMap||!!w.normalMap||!!w.specularMap||!!w.alphaMap||!!w.emissiveMap||!!w.roughnessMap||!!w.metalnessMap||!!w.clearcoatMap||!!w.clearcoatRoughnessMap||!!w.clearcoatNormalMap||!!w.displacementMap||!!w.transmissionMap,uvsVertexOnly:!(!!w.map||!!w.bumpMap||!!w.normalMap||!!w.specularMap||!!w.alphaMap||!!w.emissiveMap||!!w.roughnessMap||!!w.metalnessMap||!!w.clearcoatNormalMap||!!w.transmissionMap)&&!!w.displacementMap,fog:!!I,useFog:w.fog,fogExp2:I&&I.isFogExp2,flatShading:w.flatShading,sizeAttenuation:w.sizeAttenuation,logarithmicDepthBuffer:l,skinning:w.skinning&&q>0,maxBones:q,useVertexTexture:c,morphTargets:w.morphTargets,morphNormals:w.morphNormals,maxMorphTargets:n.maxMorphTargets,maxMorphNormals:n.maxMorphNormals,numDirLights:b.directional.length,numPointLights:b.point.length,numSpotLights:b.spot.length,numRectAreaLights:b.rectArea.length,numHemiLights:b.hemi.length,numDirLightShadows:b.directionalShadowMap.length,numPointLightShadows:b.pointShadowMap.length,numSpotLightShadows:b.spotShadowMap.length,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,dithering:w.dithering,shadowMapEnabled:n.shadowMap.enabled&&S.length>0,shadowMapType:n.shadowMap.type,toneMapping:w.toneMapped?n.toneMapping:ms,physicallyCorrectLights:n.physicallyCorrectLights,premultipliedAlpha:w.premultipliedAlpha,alphaTest:w.alphaTest,doubleSided:w.side===Bc,flipSided:w.side===Ft,depthPacking:w.depthPacking!==void 0?w.depthPacking:!1,index0AttributeName:w.index0AttributeName,extensionDerivatives:w.extensions&&w.extensions.derivatives,extensionFragDepth:w.extensions&&w.extensions.fragDepth,extensionDrawBuffers:w.extensions&&w.extensions.drawBuffers,extensionShaderTextureLOD:w.extensions&&w.extensions.shaderTextureLOD,rendererExtensionFragDepth:o||t.has("EXT_frag_depth"),rendererExtensionDrawBuffers:o||t.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:o||t.has("EXT_shader_texture_lod"),customProgramCacheKey:w.customProgramCacheKey()}}function g(w){const b=[];if(w.shaderID?b.push(w.shaderID):(b.push(w.fragmentShader),b.push(w.vertexShader)),w.defines!==void 0)for(const S in w.defines)b.push(S),b.push(w.defines[S]);if(w.isRawShaderMaterial===!1){for(let S=0;S<m.length;S++)b.push(w[m[S]]);b.push(n.outputEncoding),b.push(n.gammaFactor)}return b.push(w.customProgramCacheKey),b.join()}function _(w){const b=h[w.type];let S;if(b){const E=Zn[b];S=v2.clone(E.uniforms)}else S=w.uniforms;return S}function y(w,b){let S;for(let E=0,C=a.length;E<C;E++){const I=a[E];if(I.cacheKey===b){S=I,++S.usedTimes;break}}return S===void 0&&(S=new wC(n,b,w,r),a.push(S)),S}function M(w){if(--w.usedTimes===0){const b=a.indexOf(w);a[b]=a[a.length-1],a.pop(),w.destroy()}}return{getParameters:v,getProgramCacheKey:g,getUniforms:_,acquireProgram:y,releaseProgram:M,programs:a}}function SC(){let n=new WeakMap;function e(s){let a=n.get(s);return a===void 0&&(a={},n.set(s,a)),a}function t(s){n.delete(s)}function i(s,a,o){n.get(s)[a]=o}function r(){n=new WeakMap}return{get:e,remove:t,update:i,dispose:r}}function EC(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.program!==e.program?n.program.id-e.program.id:n.material.id!==e.material.id?n.material.id-e.material.id:n.z!==e.z?n.z-e.z:n.id-e.id}function TC(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.z!==e.z?e.z-n.z:n.id-e.id}function ng(n){const e=[];let t=0;const i=[],r=[],s={id:-1};function a(){t=0,i.length=0,r.length=0}function o(f,h,m,x,p,v){let g=e[t];const _=n.get(m);return g===void 0?(g={id:f.id,object:f,geometry:h,material:m,program:_.program||s,groupOrder:x,renderOrder:f.renderOrder,z:p,group:v},e[t]=g):(g.id=f.id,g.object=f,g.geometry=h,g.material=m,g.program=_.program||s,g.groupOrder=x,g.renderOrder=f.renderOrder,g.z=p,g.group=v),t++,g}function l(f,h,m,x,p,v){const g=o(f,h,m,x,p,v);(m.transparent===!0?r:i).push(g)}function c(f,h,m,x,p,v){const g=o(f,h,m,x,p,v);(m.transparent===!0?r:i).unshift(g)}function d(f,h){i.length>1&&i.sort(f||EC),r.length>1&&r.sort(h||TC)}function u(){for(let f=t,h=e.length;f<h;f++){const m=e[f];if(m.id===null)break;m.id=null,m.object=null,m.geometry=null,m.material=null,m.program=null,m.group=null}}return{opaque:i,transparent:r,init:a,push:l,unshift:c,finish:u,sort:d}}function AC(n){let e=new WeakMap;function t(r,s){const a=e.get(r);let o;return a===void 0?(o=new ng(n),e.set(r,new WeakMap),e.get(r).set(s,o)):(o=a.get(s),o===void 0&&(o=new ng(n),a.set(s,o))),o}function i(){e=new WeakMap}return{get:t,dispose:i}}function LC(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new O,color:new Ve};break;case"SpotLight":t={position:new O,direction:new O,color:new Ve,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new O,color:new Ve,distance:0,decay:0};break;case"HemisphereLight":t={direction:new O,skyColor:new Ve,groundColor:new Ve};break;case"RectAreaLight":t={color:new Ve,position:new O,halfWidth:new O,halfHeight:new O};break}return n[e.id]=t,t}}}function CC(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Le};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Le};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Le,shadowCameraNear:1,shadowCameraFar:1e3};break}return n[e.id]=t,t}}}let RC=0;function PC(n,e){return(e.castShadow?1:0)-(n.castShadow?1:0)}function IC(n,e){const t=new LC,i=CC(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let d=0;d<9;d++)r.probe.push(new O);const s=new O,a=new ot,o=new ot;function l(d){let u=0,f=0,h=0;for(let b=0;b<9;b++)r.probe[b].set(0,0,0);let m=0,x=0,p=0,v=0,g=0,_=0,y=0,M=0;d.sort(PC);for(let b=0,S=d.length;b<S;b++){const E=d[b],C=E.color,I=E.intensity,W=E.distance,H=E.shadow&&E.shadow.map?E.shadow.map.texture:null;if(E.isAmbientLight)u+=C.r*I,f+=C.g*I,h+=C.b*I;else if(E.isLightProbe)for(let A=0;A<9;A++)r.probe[A].addScaledVector(E.sh.coefficients[A],I);else if(E.isDirectionalLight){const A=t.get(E);if(A.color.copy(E.color).multiplyScalar(E.intensity),E.castShadow){const q=E.shadow,N=i.get(E);N.shadowBias=q.bias,N.shadowNormalBias=q.normalBias,N.shadowRadius=q.radius,N.shadowMapSize=q.mapSize,r.directionalShadow[m]=N,r.directionalShadowMap[m]=H,r.directionalShadowMatrix[m]=E.shadow.matrix,_++}r.directional[m]=A,m++}else if(E.isSpotLight){const A=t.get(E);if(A.position.setFromMatrixPosition(E.matrixWorld),A.color.copy(C).multiplyScalar(I),A.distance=W,A.coneCos=Math.cos(E.angle),A.penumbraCos=Math.cos(E.angle*(1-E.penumbra)),A.decay=E.decay,E.castShadow){const q=E.shadow,N=i.get(E);N.shadowBias=q.bias,N.shadowNormalBias=q.normalBias,N.shadowRadius=q.radius,N.shadowMapSize=q.mapSize,r.spotShadow[p]=N,r.spotShadowMap[p]=H,r.spotShadowMatrix[p]=E.shadow.matrix,M++}r.spot[p]=A,p++}else if(E.isRectAreaLight){const A=t.get(E);A.color.copy(C).multiplyScalar(I),A.halfWidth.set(E.width*.5,0,0),A.halfHeight.set(0,E.height*.5,0),r.rectArea[v]=A,v++}else if(E.isPointLight){const A=t.get(E);if(A.color.copy(E.color).multiplyScalar(E.intensity),A.distance=E.distance,A.decay=E.decay,E.castShadow){const q=E.shadow,N=i.get(E);N.shadowBias=q.bias,N.shadowNormalBias=q.normalBias,N.shadowRadius=q.radius,N.shadowMapSize=q.mapSize,N.shadowCameraNear=q.camera.near,N.shadowCameraFar=q.camera.far,r.pointShadow[x]=N,r.pointShadowMap[x]=H,r.pointShadowMatrix[x]=E.shadow.matrix,y++}r.point[x]=A,x++}else if(E.isHemisphereLight){const A=t.get(E);A.skyColor.copy(E.color).multiplyScalar(I),A.groundColor.copy(E.groundColor).multiplyScalar(I),r.hemi[g]=A,g++}}v>0&&(e.isWebGL2||n.has("OES_texture_float_linear")===!0?(r.rectAreaLTC1=qe.LTC_FLOAT_1,r.rectAreaLTC2=qe.LTC_FLOAT_2):n.has("OES_texture_half_float_linear")===!0?(r.rectAreaLTC1=qe.LTC_HALF_1,r.rectAreaLTC2=qe.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=u,r.ambient[1]=f,r.ambient[2]=h;const w=r.hash;(w.directionalLength!==m||w.pointLength!==x||w.spotLength!==p||w.rectAreaLength!==v||w.hemiLength!==g||w.numDirectionalShadows!==_||w.numPointShadows!==y||w.numSpotShadows!==M)&&(r.directional.length=m,r.spot.length=p,r.rectArea.length=v,r.point.length=x,r.hemi.length=g,r.directionalShadow.length=_,r.directionalShadowMap.length=_,r.pointShadow.length=y,r.pointShadowMap.length=y,r.spotShadow.length=M,r.spotShadowMap.length=M,r.directionalShadowMatrix.length=_,r.pointShadowMatrix.length=y,r.spotShadowMatrix.length=M,w.directionalLength=m,w.pointLength=x,w.spotLength=p,w.rectAreaLength=v,w.hemiLength=g,w.numDirectionalShadows=_,w.numPointShadows=y,w.numSpotShadows=M,r.version=RC++)}function c(d,u){let f=0,h=0,m=0,x=0,p=0;const v=u.matrixWorldInverse;for(let g=0,_=d.length;g<_;g++){const y=d[g];if(y.isDirectionalLight){const M=r.directional[f];M.direction.setFromMatrixPosition(y.matrixWorld),s.setFromMatrixPosition(y.target.matrixWorld),M.direction.sub(s),M.direction.transformDirection(v),f++}else if(y.isSpotLight){const M=r.spot[m];M.position.setFromMatrixPosition(y.matrixWorld),M.position.applyMatrix4(v),M.direction.setFromMatrixPosition(y.matrixWorld),s.setFromMatrixPosition(y.target.matrixWorld),M.direction.sub(s),M.direction.transformDirection(v),m++}else if(y.isRectAreaLight){const M=r.rectArea[x];M.position.setFromMatrixPosition(y.matrixWorld),M.position.applyMatrix4(v),o.identity(),a.copy(y.matrixWorld),a.premultiply(v),o.extractRotation(a),M.halfWidth.set(y.width*.5,0,0),M.halfHeight.set(0,y.height*.5,0),M.halfWidth.applyMatrix4(o),M.halfHeight.applyMatrix4(o),x++}else if(y.isPointLight){const M=r.point[h];M.position.setFromMatrixPosition(y.matrixWorld),M.position.applyMatrix4(v),h++}else if(y.isHemisphereLight){const M=r.hemi[p];M.direction.setFromMatrixPosition(y.matrixWorld),M.direction.transformDirection(v),M.direction.normalize(),p++}}}return{setup:l,setupView:c,state:r}}function ig(n,e){const t=new IC(n,e),i=[],r=[];function s(){i.length=0,r.length=0}function a(u){i.push(u)}function o(u){r.push(u)}function l(){t.setup(i)}function c(u){t.setupView(i,u)}return{init:s,state:{lightsArray:i,shadowsArray:r,lights:t},setupLights:l,setupLightsView:c,pushLight:a,pushShadow:o}}function DC(n,e){let t=new WeakMap;function i(s,a=0){let o;return t.has(s)===!1?(o=new ig(n,e),t.set(s,[]),t.get(s).push(o)):a>=t.get(s).length?(o=new ig(n,e),t.get(s).push(o)):o=t.get(s)[a],o}function r(){t=new WeakMap}return{get:i,dispose:r}}function Ar(n){Qe.call(this),this.type="MeshDepthMaterial",this.depthPacking=f2,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(n)}Ar.prototype=Object.create(Qe.prototype);Ar.prototype.constructor=Ar;Ar.prototype.isMeshDepthMaterial=!0;Ar.prototype.copy=function(n){return Qe.prototype.copy.call(this,n),this.depthPacking=n.depthPacking,this.skinning=n.skinning,this.morphTargets=n.morphTargets,this.map=n.map,this.alphaMap=n.alphaMap,this.displacementMap=n.displacementMap,this.displacementScale=n.displacementScale,this.displacementBias=n.displacementBias,this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this};function Lr(n){Qe.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new O,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(n)}Lr.prototype=Object.create(Qe.prototype);Lr.prototype.constructor=Lr;Lr.prototype.isMeshDistanceMaterial=!0;Lr.prototype.copy=function(n){return Qe.prototype.copy.call(this,n),this.referencePosition.copy(n.referencePosition),this.nearDistance=n.nearDistance,this.farDistance=n.farDistance,this.skinning=n.skinning,this.morphTargets=n.morphTargets,this.map=n.map,this.alphaMap=n.alphaMap,this.displacementMap=n.displacementMap,this.displacementScale=n.displacementScale,this.displacementBias=n.displacementBias,this};var OC=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	float mean = 0.0;
	float squared_mean = 0.0;
	float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );
	for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean * HALF_SAMPLE_RATE;
	squared_mean = squared_mean * HALF_SAMPLE_RATE;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`,zC=`void main() {
	gl_Position = vec4( position, 1.0 );
}`;function A2(n,e,t){let i=new $c;const r=new Le,s=new Le,a=new gt,o=[],l=[],c={},d={0:Ft,1:oo,2:Bc},u=new dn({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new Le},radius:{value:4}},vertexShader:zC,fragmentShader:OC}),f=u.clone();f.defines.HORIZONTAL_PASS=1;const h=new Ye;h.setAttribute("position",new Ke(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const m=new Et(h,u),x=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=K0,this.render=function(M,w,b){if(x.enabled===!1||x.autoUpdate===!1&&x.needsUpdate===!1||M.length===0)return;const S=n.getRenderTarget(),E=n.getActiveCubeFace(),C=n.getActiveMipmapLevel(),I=n.state;I.setBlending(ji),I.buffers.color.setClear(1,1,1,1),I.buffers.depth.setTest(!0),I.setScissorTest(!1);for(let W=0,H=M.length;W<H;W++){const A=M[W],q=A.shadow;if(q===void 0){console.warn("THREE.WebGLShadowMap:",A,"has no shadow.");continue}if(q.autoUpdate===!1&&q.needsUpdate===!1)continue;r.copy(q.mapSize);const N=q.getFrameExtents();if(r.multiply(N),s.copy(q.mapSize),(r.x>t||r.y>t)&&(r.x>t&&(s.x=Math.floor(t/N.x),r.x=s.x*N.x,q.mapSize.x=s.x),r.y>t&&(s.y=Math.floor(t/N.y),r.y=s.y*N.y,q.mapSize.y=s.y)),q.map===null&&!q.isPointLightShadow&&this.type===Ca){const Z={minFilter:Vt,magFilter:Vt,format:Tn};q.map=new wr(r.x,r.y,Z),q.map.texture.name=A.name+".shadowMap",q.mapPass=new wr(r.x,r.y,Z),q.camera.updateProjectionMatrix()}if(q.map===null){const Z={minFilter:Ut,magFilter:Ut,format:Tn};q.map=new wr(r.x,r.y,Z),q.map.texture.name=A.name+".shadowMap",q.camera.updateProjectionMatrix()}n.setRenderTarget(q.map),n.clear();const X=q.getViewportCount();for(let Z=0;Z<X;Z++){const $=q.getViewport(Z);a.set(s.x*$.x,s.y*$.y,s.x*$.z,s.y*$.w),I.viewport(a),q.updateMatrices(A,Z),i=q.getFrustum(),y(w,b,q.camera,A,this.type)}!q.isPointLightShadow&&this.type===Ca&&p(q,b),q.needsUpdate=!1}x.needsUpdate=!1,n.setRenderTarget(S,E,C)};function p(M,w){const b=e.update(m);u.uniforms.shadow_pass.value=M.map.texture,u.uniforms.resolution.value=M.mapSize,u.uniforms.radius.value=M.radius,n.setRenderTarget(M.mapPass),n.clear(),n.renderBufferDirect(w,null,b,u,m,null),f.uniforms.shadow_pass.value=M.mapPass.texture,f.uniforms.resolution.value=M.mapSize,f.uniforms.radius.value=M.radius,n.setRenderTarget(M.map),n.clear(),n.renderBufferDirect(w,null,b,f,m,null)}function v(M,w,b){const S=M<<0|w<<1|b<<2;let E=o[S];return E===void 0&&(E=new Ar({depthPacking:h2,morphTargets:M,skinning:w}),o[S]=E),E}function g(M,w,b){const S=M<<0|w<<1|b<<2;let E=l[S];return E===void 0&&(E=new Lr({morphTargets:M,skinning:w}),l[S]=E),E}function _(M,w,b,S,E,C,I){let W=null,H=v,A=M.customDepthMaterial;if(S.isPointLight===!0&&(H=g,A=M.customDistanceMaterial),A===void 0){let q=!1;b.morphTargets===!0&&(q=w.morphAttributes&&w.morphAttributes.position&&w.morphAttributes.position.length>0);let N=!1;M.isSkinnedMesh===!0&&(b.skinning===!0?N=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",M));const X=M.isInstancedMesh===!0;W=H(q,N,X)}else W=A;if(n.localClippingEnabled&&b.clipShadows===!0&&b.clippingPlanes.length!==0){const q=W.uuid,N=b.uuid;let X=c[q];X===void 0&&(X={},c[q]=X);let Z=X[N];Z===void 0&&(Z=W.clone(),X[N]=Z),W=Z}return W.visible=b.visible,W.wireframe=b.wireframe,I===Ca?W.side=b.shadowSide!==null?b.shadowSide:b.side:W.side=b.shadowSide!==null?b.shadowSide:d[b.side],W.clipShadows=b.clipShadows,W.clippingPlanes=b.clippingPlanes,W.clipIntersection=b.clipIntersection,W.wireframeLinewidth=b.wireframeLinewidth,W.linewidth=b.linewidth,S.isPointLight===!0&&W.isMeshDistanceMaterial===!0&&(W.referencePosition.setFromMatrixPosition(S.matrixWorld),W.nearDistance=E,W.farDistance=C),W}function y(M,w,b,S,E){if(M.visible===!1)return;if(M.layers.test(w.layers)&&(M.isMesh||M.isLine||M.isPoints)&&(M.castShadow||M.receiveShadow&&E===Ca)&&(!M.frustumCulled||i.intersectsObject(M))){M.modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,M.matrixWorld);const W=e.update(M),H=M.material;if(Array.isArray(H)){const A=W.groups;for(let q=0,N=A.length;q<N;q++){const X=A[q],Z=H[X.materialIndex];if(Z&&Z.visible){const $=_(M,W,Z,S,b.near,b.far,E);n.renderBufferDirect(b,null,W,$,M,X)}}}else if(H.visible){const A=_(M,W,H,S,b.near,b.far,E);n.renderBufferDirect(b,null,W,A,M,null)}}const I=M.children;for(let W=0,H=I.length;W<H;W++)y(I[W],w,b,S,E)}}function FC(n,e,t){const i=t.isWebGL2;function r(){let Y=!1;const L=new gt;let T=null;const ne=new gt(0,0,0,0);return{setMask:function(se){T!==se&&!Y&&(n.colorMask(se,se,se,se),T=se)},setLocked:function(se){Y=se},setClear:function(se,de,ye,De,Q){Q===!0&&(se*=De,de*=De,ye*=De),L.set(se,de,ye,De),ne.equals(L)===!1&&(n.clearColor(se,de,ye,De),ne.copy(L))},reset:function(){Y=!1,T=null,ne.set(-1,0,0,0)}}}function s(){let Y=!1,L=null,T=null,ne=null;return{setTest:function(se){se?J(2929):R(2929)},setMask:function(se){L!==se&&!Y&&(n.depthMask(se),L=se)},setFunc:function(se){if(T!==se){if(se)switch(se){case tv:n.depthFunc(512);break;case nv:n.depthFunc(519);break;case iv:n.depthFunc(513);break;case Rd:n.depthFunc(515);break;case rv:n.depthFunc(514);break;case sv:n.depthFunc(518);break;case av:n.depthFunc(516);break;case ov:n.depthFunc(517);break;default:n.depthFunc(515)}else n.depthFunc(515);T=se}},setLocked:function(se){Y=se},setClear:function(se){ne!==se&&(n.clearDepth(se),ne=se)},reset:function(){Y=!1,L=null,T=null,ne=null}}}function a(){let Y=!1,L=null,T=null,ne=null,se=null,de=null,ye=null,De=null,Q=null;return{setTest:function(Te){Y||(Te?J(2960):R(2960))},setMask:function(Te){L!==Te&&!Y&&(n.stencilMask(Te),L=Te)},setFunc:function(Te,Ce,Ne){(T!==Te||ne!==Ce||se!==Ne)&&(n.stencilFunc(Te,Ce,Ne),T=Te,ne=Ce,se=Ne)},setOp:function(Te,Ce,Ne){(de!==Te||ye!==Ce||De!==Ne)&&(n.stencilOp(Te,Ce,Ne),de=Te,ye=Ce,De=Ne)},setLocked:function(Te){Y=Te},setClear:function(Te){Q!==Te&&(n.clearStencil(Te),Q=Te)},reset:function(){Y=!1,L=null,T=null,ne=null,se=null,de=null,ye=null,De=null,Q=null}}}const o=new r,l=new s,c=new a;let d={},u=null,f=null,h=null,m=null,x=null,p=null,v=null,g=null,_=null,y=!1,M=null,w=null,b=null,S=null,E=null;const C=n.getParameter(35661);let I=!1,W=0;const H=n.getParameter(7938);H.indexOf("WebGL")!==-1?(W=parseFloat(/^WebGL (\d)/.exec(H)[1]),I=W>=1):H.indexOf("OpenGL ES")!==-1&&(W=parseFloat(/^OpenGL ES (\d)/.exec(H)[1]),I=W>=2);let A=null,q={};const N=new gt,X=new gt;function Z(Y,L,T){const ne=new Uint8Array(4),se=n.createTexture();n.bindTexture(Y,se),n.texParameteri(Y,10241,9728),n.texParameteri(Y,10240,9728);for(let de=0;de<T;de++)n.texImage2D(L+de,0,6408,1,1,0,6408,5121,ne);return se}const $={};$[3553]=Z(3553,3553,1),$[34067]=Z(34067,34069,6),o.setClear(0,0,0,1),l.setClear(1),c.setClear(0),J(2929),l.setFunc(Rd),Re(!1),Ae(Gh),J(2884),B(ji);function J(Y){d[Y]!==!0&&(n.enable(Y),d[Y]=!0)}function R(Y){d[Y]!==!1&&(n.disable(Y),d[Y]=!1)}function k(Y){return u!==Y?(n.useProgram(Y),u=Y,!0):!1}const j={[rs]:32774,[V3]:32778,[W3]:32779};if(i)j[Wh]=32775,j[$h]=32776;else{const Y=e.get("EXT_blend_minmax");Y!==null&&(j[Wh]=Y.MIN_EXT,j[$h]=Y.MAX_EXT)}const K={[$3]:0,[j3]:1,[X3]:768,[ep]:770,[ev]:776,[K3]:774,[Z3]:772,[Y3]:769,[tp]:771,[Q3]:775,[J3]:773};function B(Y,L,T,ne,se,de,ye,De){if(Y===ji){f&&(R(3042),f=!1);return}if(f||(J(3042),f=!0),Y!==H3){if(Y!==h||De!==y){if((m!==rs||v!==rs)&&(n.blendEquation(32774),m=rs,v=rs),De)switch(Y){case Da:n.blendFuncSeparate(1,771,1,771);break;case kh:n.blendFunc(1,1);break;case Hh:n.blendFuncSeparate(0,0,769,771);break;case Vh:n.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",Y);break}else switch(Y){case Da:n.blendFuncSeparate(770,771,1,771);break;case kh:n.blendFunc(770,1);break;case Hh:n.blendFunc(0,769);break;case Vh:n.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",Y);break}x=null,p=null,g=null,_=null,h=Y,y=De}return}se=se||L,de=de||T,ye=ye||ne,(L!==m||se!==v)&&(n.blendEquationSeparate(j[L],j[se]),m=L,v=se),(T!==x||ne!==p||de!==g||ye!==_)&&(n.blendFuncSeparate(K[T],K[ne],K[de],K[ye]),x=T,p=ne,g=de,_=ye),h=Y,y=null}function oe(Y,L){Y.side===Bc?R(2884):J(2884);let T=Y.side===Ft;L&&(T=!T),Re(T),Y.blending===Da&&Y.transparent===!1?B(ji):B(Y.blending,Y.blendEquation,Y.blendSrc,Y.blendDst,Y.blendEquationAlpha,Y.blendSrcAlpha,Y.blendDstAlpha,Y.premultipliedAlpha),l.setFunc(Y.depthFunc),l.setTest(Y.depthTest),l.setMask(Y.depthWrite),o.setMask(Y.colorWrite);const ne=Y.stencilWrite;c.setTest(ne),ne&&(c.setMask(Y.stencilWriteMask),c.setFunc(Y.stencilFunc,Y.stencilRef,Y.stencilFuncMask),c.setOp(Y.stencilFail,Y.stencilZFail,Y.stencilZPass)),_e(Y.polygonOffset,Y.polygonOffsetFactor,Y.polygonOffsetUnits)}function Re(Y){M!==Y&&(Y?n.frontFace(2304):n.frontFace(2305),M=Y)}function Ae(Y){Y!==U3?(J(2884),Y!==w&&(Y===Gh?n.cullFace(1029):Y===G3?n.cullFace(1028):n.cullFace(1032))):R(2884),w=Y}function pe(Y){Y!==b&&(I&&n.lineWidth(Y),b=Y)}function _e(Y,L,T){Y?(J(32823),(S!==L||E!==T)&&(n.polygonOffset(L,T),S=L,E=T)):R(32823)}function Ie(Y){Y?J(3089):R(3089)}function me(Y){Y===void 0&&(Y=33984+C-1),A!==Y&&(n.activeTexture(Y),A=Y)}function xe(Y,L){A===null&&me();let T=q[A];T===void 0&&(T={type:void 0,texture:void 0},q[A]=T),(T.type!==Y||T.texture!==L)&&(n.bindTexture(Y,L||$[Y]),T.type=Y,T.texture=L)}function Ee(){const Y=q[A];Y!==void 0&&Y.type!==void 0&&(n.bindTexture(Y.type,null),Y.type=void 0,Y.texture=void 0)}function Fe(){try{n.compressedTexImage2D.apply(n,arguments)}catch(Y){console.error("THREE.WebGLState:",Y)}}function Pe(){try{n.texImage2D.apply(n,arguments)}catch(Y){console.error("THREE.WebGLState:",Y)}}function U(){try{n.texImage3D.apply(n,arguments)}catch(Y){console.error("THREE.WebGLState:",Y)}}function D(Y){N.equals(Y)===!1&&(n.scissor(Y.x,Y.y,Y.z,Y.w),N.copy(Y))}function be(Y){X.equals(Y)===!1&&(n.viewport(Y.x,Y.y,Y.z,Y.w),X.copy(Y))}function Me(){d={},A=null,q={},u=null,f=null,h=null,m=null,x=null,p=null,v=null,g=null,_=null,y=!1,M=null,w=null,b=null,S=null,E=null,o.reset(),l.reset(),c.reset()}return{buffers:{color:o,depth:l,stencil:c},enable:J,disable:R,useProgram:k,setBlending:B,setMaterial:oe,setFlipSided:Re,setCullFace:Ae,setLineWidth:pe,setPolygonOffset:_e,setScissorTest:Ie,activeTexture:me,bindTexture:xe,unbindTexture:Ee,compressedTexImage2D:Fe,texImage2D:Pe,texImage3D:U,scissor:D,viewport:be,reset:Me}}function qC(n,e,t,i,r,s,a){const o=r.isWebGL2,l=r.maxTextures,c=r.maxCubemapSize,d=r.maxTextureSize,u=r.maxSamples,f=new WeakMap;let h,m=!1;try{m=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function x(U,D){return m?new OffscreenCanvas(U,D):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function p(U,D,be,Me){let Y=1;if((U.width>Me||U.height>Me)&&(Y=Me/Math.max(U.width,U.height)),Y<1||D===!0)if(typeof HTMLImageElement<"u"&&U instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&U instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&U instanceof ImageBitmap){const L=D?tt.floorPowerOfTwo:Math.floor,T=L(Y*U.width),ne=L(Y*U.height);h===void 0&&(h=x(T,ne));const se=be?x(T,ne):h;return se.width=T,se.height=ne,se.getContext("2d").drawImage(U,0,0,T,ne),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+U.width+"x"+U.height+") to ("+T+"x"+ne+")."),se}else return"data"in U&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+U.width+"x"+U.height+")."),U;return U}function v(U){return tt.isPowerOfTwo(U.width)&&tt.isPowerOfTwo(U.height)}function g(U){return o?!1:U.wrapS!==an||U.wrapT!==an||U.minFilter!==Ut&&U.minFilter!==Vt}function _(U,D){return U.generateMipmaps&&D&&U.minFilter!==Ut&&U.minFilter!==Vt}function y(U,D,be,Me){n.generateMipmap(U);const Y=i.get(D);Y.__maxMipLevel=Math.log(Math.max(be,Me))*Math.LOG2E}function M(U,D,be){if(o===!1)return D;if(U!==null){if(n[U]!==void 0)return n[U];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+U+"'")}let Me=D;return D===6403&&(be===5126&&(Me=33326),be===5131&&(Me=33325),be===5121&&(Me=33321)),D===6407&&(be===5126&&(Me=34837),be===5131&&(Me=34843),be===5121&&(Me=32849)),D===6408&&(be===5126&&(Me=34836),be===5131&&(Me=34842),be===5121&&(Me=32856)),(Me===33325||Me===33326||Me===34842||Me===34836)&&e.get("EXT_color_buffer_float"),Me}function w(U){return U===Ut||U===Dd||U===Od?9728:9729}function b(U){const D=U.target;D.removeEventListener("dispose",b),E(D),D.isVideoTexture&&f.delete(D),a.memory.textures--}function S(U){const D=U.target;D.removeEventListener("dispose",S),C(D),a.memory.textures--}function E(U){const D=i.get(U);D.__webglInit!==void 0&&(n.deleteTexture(D.__webglTexture),i.remove(U))}function C(U){const D=i.get(U),be=i.get(U.texture);if(!!U){if(be.__webglTexture!==void 0&&n.deleteTexture(be.__webglTexture),U.depthTexture&&U.depthTexture.dispose(),U.isWebGLCubeRenderTarget)for(let Me=0;Me<6;Me++)n.deleteFramebuffer(D.__webglFramebuffer[Me]),D.__webglDepthbuffer&&n.deleteRenderbuffer(D.__webglDepthbuffer[Me]);else n.deleteFramebuffer(D.__webglFramebuffer),D.__webglDepthbuffer&&n.deleteRenderbuffer(D.__webglDepthbuffer),D.__webglMultisampledFramebuffer&&n.deleteFramebuffer(D.__webglMultisampledFramebuffer),D.__webglColorRenderbuffer&&n.deleteRenderbuffer(D.__webglColorRenderbuffer),D.__webglDepthRenderbuffer&&n.deleteRenderbuffer(D.__webglDepthRenderbuffer);i.remove(U.texture),i.remove(U)}}let I=0;function W(){I=0}function H(){const U=I;return U>=l&&console.warn("THREE.WebGLTextures: Trying to use "+U+" texture units while this GPU supports only "+l),I+=1,U}function A(U,D){const be=i.get(U);if(U.isVideoTexture&&me(U),U.version>0&&be.__version!==U.version){const Me=U.image;if(Me===void 0)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else if(Me.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{k(be,U,D);return}}t.activeTexture(33984+D),t.bindTexture(3553,be.__webglTexture)}function q(U,D){const be=i.get(U);if(U.version>0&&be.__version!==U.version){k(be,U,D);return}t.activeTexture(33984+D),t.bindTexture(35866,be.__webglTexture)}function N(U,D){const be=i.get(U);if(U.version>0&&be.__version!==U.version){k(be,U,D);return}t.activeTexture(33984+D),t.bindTexture(32879,be.__webglTexture)}function X(U,D){const be=i.get(U);if(U.version>0&&be.__version!==U.version){j(be,U,D);return}t.activeTexture(33984+D),t.bindTexture(34067,be.__webglTexture)}const Z={[Ko]:10497,[an]:33071,[Qo]:33648},$={[Ut]:9728,[Dd]:9984,[Od]:9986,[Vt]:9729,[np]:9985,[lo]:9987};function J(U,D,be){be?(n.texParameteri(U,10242,Z[D.wrapS]),n.texParameteri(U,10243,Z[D.wrapT]),(U===32879||U===35866)&&n.texParameteri(U,32882,Z[D.wrapR]),n.texParameteri(U,10240,$[D.magFilter]),n.texParameteri(U,10241,$[D.minFilter])):(n.texParameteri(U,10242,33071),n.texParameteri(U,10243,33071),(U===32879||U===35866)&&n.texParameteri(U,32882,33071),(D.wrapS!==an||D.wrapT!==an)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),n.texParameteri(U,10240,w(D.magFilter)),n.texParameteri(U,10241,w(D.minFilter)),D.minFilter!==Ut&&D.minFilter!==Vt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));const Me=e.get("EXT_texture_filter_anisotropic");if(Me){if(D.type===ki&&e.get("OES_texture_float_linear")===null||D.type===tc&&(o||e.get("OES_texture_half_float_linear"))===null)return;(D.anisotropy>1||i.get(D).__currentAnisotropy)&&(n.texParameterf(U,Me.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(D.anisotropy,r.getMaxAnisotropy())),i.get(D).__currentAnisotropy=D.anisotropy)}}function R(U,D){U.__webglInit===void 0&&(U.__webglInit=!0,D.addEventListener("dispose",b),U.__webglTexture=n.createTexture(),a.memory.textures++)}function k(U,D,be){let Me=3553;D.isDataTexture2DArray&&(Me=35866),D.isDataTexture3D&&(Me=32879),R(U,D),t.activeTexture(33984+be),t.bindTexture(Me,U.__webglTexture),n.pixelStorei(37440,D.flipY),n.pixelStorei(37441,D.premultiplyAlpha),n.pixelStorei(3317,D.unpackAlignment);const Y=g(D)&&v(D.image)===!1,L=p(D.image,Y,!1,d),T=v(L)||o,ne=s.convert(D.format);let se=s.convert(D.type),de=M(D.internalFormat,ne,se);J(Me,D,T);let ye;const De=D.mipmaps;if(D.isDepthTexture)de=6402,o?D.type===ki?de=36012:D.type===Ho?de=33190:D.type===Oa?de=35056:de=33189:D.type===ki&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),D.format===xs&&de===6402&&D.type!==ec&&D.type!==Ho&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),D.type=ec,se=s.convert(D.type)),D.format===ka&&de===6402&&(de=34041,D.type!==Oa&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),D.type=Oa,se=s.convert(D.type))),t.texImage2D(3553,0,de,L.width,L.height,0,ne,se,null);else if(D.isDataTexture)if(De.length>0&&T){for(let Q=0,Te=De.length;Q<Te;Q++)ye=De[Q],t.texImage2D(3553,Q,de,ye.width,ye.height,0,ne,se,ye.data);D.generateMipmaps=!1,U.__maxMipLevel=De.length-1}else t.texImage2D(3553,0,de,L.width,L.height,0,ne,se,L.data),U.__maxMipLevel=0;else if(D.isCompressedTexture){for(let Q=0,Te=De.length;Q<Te;Q++)ye=De[Q],D.format!==Tn&&D.format!==_r?ne!==null?t.compressedTexImage2D(3553,Q,de,ye.width,ye.height,0,ye.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):t.texImage2D(3553,Q,de,ye.width,ye.height,0,ne,se,ye.data);U.__maxMipLevel=De.length-1}else if(D.isDataTexture2DArray)t.texImage3D(35866,0,de,L.width,L.height,L.depth,0,ne,se,L.data),U.__maxMipLevel=0;else if(D.isDataTexture3D)t.texImage3D(32879,0,de,L.width,L.height,L.depth,0,ne,se,L.data),U.__maxMipLevel=0;else if(De.length>0&&T){for(let Q=0,Te=De.length;Q<Te;Q++)ye=De[Q],t.texImage2D(3553,Q,de,ne,se,ye);D.generateMipmaps=!1,U.__maxMipLevel=De.length-1}else t.texImage2D(3553,0,de,ne,se,L),U.__maxMipLevel=0;_(D,T)&&y(Me,D,L.width,L.height),U.__version=D.version,D.onUpdate&&D.onUpdate(D)}function j(U,D,be){if(D.image.length!==6)return;R(U,D),t.activeTexture(33984+be),t.bindTexture(34067,U.__webglTexture),n.pixelStorei(37440,D.flipY),n.pixelStorei(37441,D.premultiplyAlpha),n.pixelStorei(3317,D.unpackAlignment);const Me=D&&(D.isCompressedTexture||D.image[0].isCompressedTexture),Y=D.image[0]&&D.image[0].isDataTexture,L=[];for(let Q=0;Q<6;Q++)!Me&&!Y?L[Q]=p(D.image[Q],!1,!0,c):L[Q]=Y?D.image[Q].image:D.image[Q];const T=L[0],ne=v(T)||o,se=s.convert(D.format),de=s.convert(D.type),ye=M(D.internalFormat,se,de);J(34067,D,ne);let De;if(Me){for(let Q=0;Q<6;Q++){De=L[Q].mipmaps;for(let Te=0;Te<De.length;Te++){const Ce=De[Te];D.format!==Tn&&D.format!==_r?se!==null?t.compressedTexImage2D(34069+Q,Te,ye,Ce.width,Ce.height,0,Ce.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):t.texImage2D(34069+Q,Te,ye,Ce.width,Ce.height,0,se,de,Ce.data)}}U.__maxMipLevel=De.length-1}else{De=D.mipmaps;for(let Q=0;Q<6;Q++)if(Y){t.texImage2D(34069+Q,0,ye,L[Q].width,L[Q].height,0,se,de,L[Q].data);for(let Te=0;Te<De.length;Te++){const Ne=De[Te].image[Q].image;t.texImage2D(34069+Q,Te+1,ye,Ne.width,Ne.height,0,se,de,Ne.data)}}else{t.texImage2D(34069+Q,0,ye,se,de,L[Q]);for(let Te=0;Te<De.length;Te++){const Ce=De[Te];t.texImage2D(34069+Q,Te+1,ye,se,de,Ce.image[Q])}}U.__maxMipLevel=De.length}_(D,ne)&&y(34067,D,T.width,T.height),U.__version=D.version,D.onUpdate&&D.onUpdate(D)}function K(U,D,be,Me){const Y=s.convert(D.texture.format),L=s.convert(D.texture.type),T=M(D.texture.internalFormat,Y,L);t.texImage2D(Me,0,T,D.width,D.height,0,Y,L,null),n.bindFramebuffer(36160,U),n.framebufferTexture2D(36160,be,Me,i.get(D.texture).__webglTexture,0),n.bindFramebuffer(36160,null)}function B(U,D,be){if(n.bindRenderbuffer(36161,U),D.depthBuffer&&!D.stencilBuffer){let Me=33189;if(be){const Y=D.depthTexture;Y&&Y.isDepthTexture&&(Y.type===ki?Me=36012:Y.type===Ho&&(Me=33190));const L=Ie(D);n.renderbufferStorageMultisample(36161,L,Me,D.width,D.height)}else n.renderbufferStorage(36161,Me,D.width,D.height);n.framebufferRenderbuffer(36160,36096,36161,U)}else if(D.depthBuffer&&D.stencilBuffer){if(be){const Me=Ie(D);n.renderbufferStorageMultisample(36161,Me,35056,D.width,D.height)}else n.renderbufferStorage(36161,34041,D.width,D.height);n.framebufferRenderbuffer(36160,33306,36161,U)}else{const Me=s.convert(D.texture.format),Y=s.convert(D.texture.type),L=M(D.texture.internalFormat,Me,Y);if(be){const T=Ie(D);n.renderbufferStorageMultisample(36161,T,L,D.width,D.height)}else n.renderbufferStorage(36161,L,D.width,D.height)}n.bindRenderbuffer(36161,null)}function oe(U,D){if(D&&D.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(36160,U),!(D.depthTexture&&D.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(D.depthTexture).__webglTexture||D.depthTexture.image.width!==D.width||D.depthTexture.image.height!==D.height)&&(D.depthTexture.image.width=D.width,D.depthTexture.image.height=D.height,D.depthTexture.needsUpdate=!0),A(D.depthTexture,0);const Me=i.get(D.depthTexture).__webglTexture;if(D.depthTexture.format===xs)n.framebufferTexture2D(36160,36096,3553,Me,0);else if(D.depthTexture.format===ka)n.framebufferTexture2D(36160,33306,3553,Me,0);else throw new Error("Unknown depthTexture format")}function Re(U){const D=i.get(U),be=U.isWebGLCubeRenderTarget===!0;if(U.depthTexture){if(be)throw new Error("target.depthTexture not supported in Cube render targets");oe(D.__webglFramebuffer,U)}else if(be){D.__webglDepthbuffer=[];for(let Me=0;Me<6;Me++)n.bindFramebuffer(36160,D.__webglFramebuffer[Me]),D.__webglDepthbuffer[Me]=n.createRenderbuffer(),B(D.__webglDepthbuffer[Me],U,!1)}else n.bindFramebuffer(36160,D.__webglFramebuffer),D.__webglDepthbuffer=n.createRenderbuffer(),B(D.__webglDepthbuffer,U,!1);n.bindFramebuffer(36160,null)}function Ae(U){const D=i.get(U),be=i.get(U.texture);U.addEventListener("dispose",S),be.__webglTexture=n.createTexture(),a.memory.textures++;const Me=U.isWebGLCubeRenderTarget===!0,Y=U.isWebGLMultisampleRenderTarget===!0,L=v(U)||o;if(o&&U.texture.format===_r&&(U.texture.type===ki||U.texture.type===tc)&&(U.texture.format=Tn,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),Me){D.__webglFramebuffer=[];for(let T=0;T<6;T++)D.__webglFramebuffer[T]=n.createFramebuffer()}else if(D.__webglFramebuffer=n.createFramebuffer(),Y)if(o){D.__webglMultisampledFramebuffer=n.createFramebuffer(),D.__webglColorRenderbuffer=n.createRenderbuffer(),n.bindRenderbuffer(36161,D.__webglColorRenderbuffer);const T=s.convert(U.texture.format),ne=s.convert(U.texture.type),se=M(U.texture.internalFormat,T,ne),de=Ie(U);n.renderbufferStorageMultisample(36161,de,se,U.width,U.height),n.bindFramebuffer(36160,D.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(36160,36064,36161,D.__webglColorRenderbuffer),n.bindRenderbuffer(36161,null),U.depthBuffer&&(D.__webglDepthRenderbuffer=n.createRenderbuffer(),B(D.__webglDepthRenderbuffer,U,!0)),n.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(Me){t.bindTexture(34067,be.__webglTexture),J(34067,U.texture,L);for(let T=0;T<6;T++)K(D.__webglFramebuffer[T],U,36064,34069+T);_(U.texture,L)&&y(34067,U.texture,U.width,U.height),t.bindTexture(34067,null)}else t.bindTexture(3553,be.__webglTexture),J(3553,U.texture,L),K(D.__webglFramebuffer,U,36064,3553),_(U.texture,L)&&y(3553,U.texture,U.width,U.height),t.bindTexture(3553,null);U.depthBuffer&&Re(U)}function pe(U){const D=U.texture,be=v(U)||o;if(_(D,be)){const Me=U.isWebGLCubeRenderTarget?34067:3553,Y=i.get(D).__webglTexture;t.bindTexture(Me,Y),y(Me,D,U.width,U.height),t.bindTexture(Me,null)}}function _e(U){if(U.isWebGLMultisampleRenderTarget)if(o){const D=i.get(U);n.bindFramebuffer(36008,D.__webglMultisampledFramebuffer),n.bindFramebuffer(36009,D.__webglFramebuffer);const be=U.width,Me=U.height;let Y=16384;U.depthBuffer&&(Y|=256),U.stencilBuffer&&(Y|=1024),n.blitFramebuffer(0,0,be,Me,0,0,be,Me,Y,9728),n.bindFramebuffer(36160,D.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}function Ie(U){return o&&U.isWebGLMultisampleRenderTarget?Math.min(u,U.samples):0}function me(U){const D=a.render.frame;f.get(U)!==D&&(f.set(U,D),U.update())}let xe=!1,Ee=!1;function Fe(U,D){U&&U.isWebGLRenderTarget&&(xe===!1&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),xe=!0),U=U.texture),A(U,D)}function Pe(U,D){U&&U.isWebGLCubeRenderTarget&&(Ee===!1&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),Ee=!0),U=U.texture),X(U,D)}this.allocateTextureUnit=H,this.resetTextureUnits=W,this.setTexture2D=A,this.setTexture2DArray=q,this.setTexture3D=N,this.setTextureCube=X,this.setupRenderTarget=Ae,this.updateRenderTargetMipmap=pe,this.updateMultisampleRenderTarget=_e,this.safeSetTexture2D=Fe,this.safeSetTextureCube=Pe}function L2(n,e,t){const i=t.isWebGL2;function r(s){let a;if(s===uo)return 5121;if(s===vv)return 32819;if(s===yv)return 32820;if(s===bv)return 33635;if(s===mv)return 5120;if(s===xv)return 5122;if(s===ec)return 5123;if(s===gv)return 5124;if(s===Ho)return 5125;if(s===ki)return 5126;if(s===tc)return i?5131:(a=e.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(s===_v)return 6406;if(s===_r)return 6407;if(s===Tn)return 6408;if(s===wv)return 6409;if(s===Mv)return 6410;if(s===xs)return 6402;if(s===ka)return 34041;if(s===Ev)return 6403;if(s===Tv)return 36244;if(s===Av)return 33319;if(s===Lv)return 33320;if(s===Cv)return 36248;if(s===Rv)return 36249;if(s===jh||s===Xh||s===Yh||s===Zh)if(a=e.get("WEBGL_compressed_texture_s3tc"),a!==null){if(s===jh)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===Xh)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===Yh)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===Zh)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===Jh||s===Kh||s===Qh||s===e0)if(a=e.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(s===Jh)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===Kh)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===Qh)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===e0)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===Pv)return a=e.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if((s===t0||s===n0)&&(a=e.get("WEBGL_compressed_texture_etc"),a!==null)){if(s===t0)return a.COMPRESSED_RGB8_ETC2;if(s===n0)return a.COMPRESSED_RGBA8_ETC2_EAC}if(s===Iv||s===Dv||s===Ov||s===zv||s===Fv||s===qv||s===Nv||s===Bv||s===Uv||s===Gv||s===kv||s===Hv||s===Vv||s===Wv||s===jv||s===Xv||s===Yv||s===Zv||s===Jv||s===Kv||s===Qv||s===e2||s===t2||s===n2||s===i2||s===r2||s===s2||s===a2)return a=e.get("WEBGL_compressed_texture_astc"),a!==null?s:null;if(s===$v)return a=e.get("EXT_texture_compression_bptc"),a!==null?s:null;if(s===Oa)return i?34042:(a=e.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null)}return{convert:r}}function zd(n=[]){qt.call(this),this.cameras=n}zd.prototype=Object.assign(Object.create(qt.prototype),{constructor:zd,isArrayCamera:!0});function vr(){je.call(this),this.type="Group"}vr.prototype=Object.assign(Object.create(je.prototype),{constructor:vr,isGroup:!0});function Wo(){this._targetRay=null,this._grip=null,this._hand=null}Object.assign(Wo.prototype,{constructor:Wo,getHandSpace:function(){return this._hand===null&&(this._hand=new vr,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand},getTargetRaySpace:function(){return this._targetRay===null&&(this._targetRay=new vr,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1),this._targetRay},getGripSpace:function(){return this._grip===null&&(this._grip=new vr,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1),this._grip},dispatchEvent:function(n){return this._targetRay!==null&&this._targetRay.dispatchEvent(n),this._grip!==null&&this._grip.dispatchEvent(n),this._hand!==null&&this._hand.dispatchEvent(n),this},disconnect:function(n){return this.dispatchEvent({type:"disconnected",data:n}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this},update:function(n,e,t){let i=null,r=null,s=null;const a=this._targetRay,o=this._grip,l=this._hand;if(n&&e.session.visibilityState!=="visible-blurred")if(l&&n.hand){s=!0;for(const m of n.hand.values()){const x=e.getJointPose(m,t);if(l.joints[m.jointName]===void 0){const v=new vr;v.matrixAutoUpdate=!1,v.visible=!1,l.joints[m.jointName]=v,l.add(v)}const p=l.joints[m.jointName];x!==null&&(p.matrix.fromArray(x.transform.matrix),p.matrix.decompose(p.position,p.rotation,p.scale),p.jointRadius=x.radius),p.visible=x!==null}const c=l.joints["index-finger-tip"],d=l.joints["thumb-tip"],u=c.position.distanceTo(d.position),f=.02,h=.005;l.inputState.pinching&&u>f+h?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:n.handedness,target:this})):!l.inputState.pinching&&u<=f-h&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:n.handedness,target:this}))}else a!==null&&(i=e.getPose(n.targetRaySpace,t),i!==null&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale))),o!==null&&n.gripSpace&&(r=e.getPose(n.gripSpace,t),r!==null&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale)));return a!==null&&(a.visible=i!==null),o!==null&&(o.visible=r!==null),l!==null&&(l.visible=s!==null),this}});function C2(n,e){const t=this;let i=null,r=1,s=null,a="local-floor",o=null;const l=[],c=new Map,d=new qt;d.layers.enable(1),d.viewport=new gt;const u=new qt;u.layers.enable(2),u.viewport=new gt;const f=[d,u],h=new zd;h.layers.enable(1),h.layers.enable(2);let m=null,x=null;this.enabled=!1,this.isPresenting=!1,this.getController=function(C){let I=l[C];return I===void 0&&(I=new Wo,l[C]=I),I.getTargetRaySpace()},this.getControllerGrip=function(C){let I=l[C];return I===void 0&&(I=new Wo,l[C]=I),I.getGripSpace()},this.getHand=function(C){let I=l[C];return I===void 0&&(I=new Wo,l[C]=I),I.getHandSpace()};function p(C){const I=c.get(C.inputSource);I&&I.dispatchEvent({type:C.type,data:C.inputSource})}function v(){c.forEach(function(C,I){C.disconnect(I)}),c.clear(),m=null,x=null,n.setFramebuffer(null),n.setRenderTarget(n.getRenderTarget()),E.stop(),t.isPresenting=!1,t.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(C){r=C,t.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(C){a=C,t.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return s},this.getSession=function(){return i},this.setSession=async function(C){if(i=C,i!==null){i.addEventListener("select",p),i.addEventListener("selectstart",p),i.addEventListener("selectend",p),i.addEventListener("squeeze",p),i.addEventListener("squeezestart",p),i.addEventListener("squeezeend",p),i.addEventListener("end",v),i.addEventListener("inputsourceschange",g);const I=e.getContextAttributes();I.xrCompatible!==!0&&await e.makeXRCompatible();const W={antialias:I.antialias,alpha:I.alpha,depth:I.depth,stencil:I.stencil,framebufferScaleFactor:r},H=new XRWebGLLayer(i,e,W);i.updateRenderState({baseLayer:H}),s=await i.requestReferenceSpace(a),E.setContext(i),E.start(),t.isPresenting=!0,t.dispatchEvent({type:"sessionstart"})}};function g(C){const I=i.inputSources;for(let W=0;W<l.length;W++)c.set(I[W],l[W]);for(let W=0;W<C.removed.length;W++){const H=C.removed[W],A=c.get(H);A&&(A.dispatchEvent({type:"disconnected",data:H}),c.delete(H))}for(let W=0;W<C.added.length;W++){const H=C.added[W],A=c.get(H);A&&A.dispatchEvent({type:"connected",data:H})}}const _=new O,y=new O;function M(C,I,W){_.setFromMatrixPosition(I.matrixWorld),y.setFromMatrixPosition(W.matrixWorld);const H=_.distanceTo(y),A=I.projectionMatrix.elements,q=W.projectionMatrix.elements,N=A[14]/(A[10]-1),X=A[14]/(A[10]+1),Z=(A[9]+1)/A[5],$=(A[9]-1)/A[5],J=(A[8]-1)/A[0],R=(q[8]+1)/q[0],k=N*J,j=N*R,K=H/(-J+R),B=K*-J;I.matrixWorld.decompose(C.position,C.quaternion,C.scale),C.translateX(B),C.translateZ(K),C.matrixWorld.compose(C.position,C.quaternion,C.scale),C.matrixWorldInverse.copy(C.matrixWorld).invert();const oe=N+K,Re=X+K,Ae=k-B,pe=j+(H-B),_e=Z*X/Re*oe,Ie=$*X/Re*oe;C.projectionMatrix.makePerspective(Ae,pe,_e,Ie,oe,Re)}function w(C,I){I===null?C.matrixWorld.copy(C.matrix):C.matrixWorld.multiplyMatrices(I.matrixWorld,C.matrix),C.matrixWorldInverse.copy(C.matrixWorld).invert()}this.getCamera=function(C){h.near=u.near=d.near=C.near,h.far=u.far=d.far=C.far,(m!==h.near||x!==h.far)&&(i.updateRenderState({depthNear:h.near,depthFar:h.far}),m=h.near,x=h.far);const I=C.parent,W=h.cameras;w(h,I);for(let A=0;A<W.length;A++)w(W[A],I);C.matrixWorld.copy(h.matrixWorld),C.matrix.copy(h.matrix),C.matrix.decompose(C.position,C.quaternion,C.scale);const H=C.children;for(let A=0,q=H.length;A<q;A++)H[A].updateMatrixWorld(!0);return W.length===2?M(h,d,u):h.projectionMatrix.copy(d.projectionMatrix),h};let b=null;function S(C,I){if(o=I.getViewerPose(s),o!==null){const H=o.views,A=i.renderState.baseLayer;n.setFramebuffer(A.framebuffer);let q=!1;H.length!==h.cameras.length&&(h.cameras.length=0,q=!0);for(let N=0;N<H.length;N++){const X=H[N],Z=A.getViewport(X),$=f[N];$.matrix.fromArray(X.transform.matrix),$.projectionMatrix.fromArray(X.projectionMatrix),$.viewport.set(Z.x,Z.y,Z.width,Z.height),N===0&&h.matrix.copy($.matrix),q===!0&&h.cameras.push($)}}const W=i.inputSources;for(let H=0;H<l.length;H++){const A=l[H],q=W[H];A.update(q,I,s)}b&&b(C,I)}const E=new y2;E.setAnimationLoop(S),this.setAnimationLoop=function(C){b=C},this.dispose=function(){}}Object.assign(C2.prototype,Qi.prototype);function NC(n){function e(v,g){v.fogColor.value.copy(g.color),g.isFog?(v.fogNear.value=g.near,v.fogFar.value=g.far):g.isFogExp2&&(v.fogDensity.value=g.density)}function t(v,g,_,y){g.isMeshBasicMaterial?i(v,g):g.isMeshLambertMaterial?(i(v,g),l(v,g)):g.isMeshToonMaterial?(i(v,g),d(v,g)):g.isMeshPhongMaterial?(i(v,g),c(v,g)):g.isMeshStandardMaterial?(i(v,g),g.isMeshPhysicalMaterial?f(v,g):u(v,g)):g.isMeshMatcapMaterial?(i(v,g),h(v,g)):g.isMeshDepthMaterial?(i(v,g),m(v,g)):g.isMeshDistanceMaterial?(i(v,g),x(v,g)):g.isMeshNormalMaterial?(i(v,g),p(v,g)):g.isLineBasicMaterial?(r(v,g),g.isLineDashedMaterial&&s(v,g)):g.isPointsMaterial?a(v,g,_,y):g.isSpriteMaterial?o(v,g):g.isShadowMaterial?(v.color.value.copy(g.color),v.opacity.value=g.opacity):g.isShaderMaterial&&(g.uniformsNeedUpdate=!1)}function i(v,g){v.opacity.value=g.opacity,g.color&&v.diffuse.value.copy(g.color),g.emissive&&v.emissive.value.copy(g.emissive).multiplyScalar(g.emissiveIntensity),g.map&&(v.map.value=g.map),g.alphaMap&&(v.alphaMap.value=g.alphaMap),g.specularMap&&(v.specularMap.value=g.specularMap);const _=n.get(g).envMap;if(_){v.envMap.value=_,v.flipEnvMap.value=_.isCubeTexture&&_._needsFlipEnvMap?-1:1,v.reflectivity.value=g.reflectivity,v.refractionRatio.value=g.refractionRatio;const w=n.get(_).__maxMipLevel;w!==void 0&&(v.maxMipLevel.value=w)}g.lightMap&&(v.lightMap.value=g.lightMap,v.lightMapIntensity.value=g.lightMapIntensity),g.aoMap&&(v.aoMap.value=g.aoMap,v.aoMapIntensity.value=g.aoMapIntensity);let y;g.map?y=g.map:g.specularMap?y=g.specularMap:g.displacementMap?y=g.displacementMap:g.normalMap?y=g.normalMap:g.bumpMap?y=g.bumpMap:g.roughnessMap?y=g.roughnessMap:g.metalnessMap?y=g.metalnessMap:g.alphaMap?y=g.alphaMap:g.emissiveMap?y=g.emissiveMap:g.clearcoatMap?y=g.clearcoatMap:g.clearcoatNormalMap?y=g.clearcoatNormalMap:g.clearcoatRoughnessMap&&(y=g.clearcoatRoughnessMap),y!==void 0&&(y.isWebGLRenderTarget&&(y=y.texture),y.matrixAutoUpdate===!0&&y.updateMatrix(),v.uvTransform.value.copy(y.matrix));let M;g.aoMap?M=g.aoMap:g.lightMap&&(M=g.lightMap),M!==void 0&&(M.isWebGLRenderTarget&&(M=M.texture),M.matrixAutoUpdate===!0&&M.updateMatrix(),v.uv2Transform.value.copy(M.matrix))}function r(v,g){v.diffuse.value.copy(g.color),v.opacity.value=g.opacity}function s(v,g){v.dashSize.value=g.dashSize,v.totalSize.value=g.dashSize+g.gapSize,v.scale.value=g.scale}function a(v,g,_,y){v.diffuse.value.copy(g.color),v.opacity.value=g.opacity,v.size.value=g.size*_,v.scale.value=y*.5,g.map&&(v.map.value=g.map),g.alphaMap&&(v.alphaMap.value=g.alphaMap);let M;g.map?M=g.map:g.alphaMap&&(M=g.alphaMap),M!==void 0&&(M.matrixAutoUpdate===!0&&M.updateMatrix(),v.uvTransform.value.copy(M.matrix))}function o(v,g){v.diffuse.value.copy(g.color),v.opacity.value=g.opacity,v.rotation.value=g.rotation,g.map&&(v.map.value=g.map),g.alphaMap&&(v.alphaMap.value=g.alphaMap);let _;g.map?_=g.map:g.alphaMap&&(_=g.alphaMap),_!==void 0&&(_.matrixAutoUpdate===!0&&_.updateMatrix(),v.uvTransform.value.copy(_.matrix))}function l(v,g){g.emissiveMap&&(v.emissiveMap.value=g.emissiveMap)}function c(v,g){v.specular.value.copy(g.specular),v.shininess.value=Math.max(g.shininess,1e-4),g.emissiveMap&&(v.emissiveMap.value=g.emissiveMap),g.bumpMap&&(v.bumpMap.value=g.bumpMap,v.bumpScale.value=g.bumpScale,g.side===Ft&&(v.bumpScale.value*=-1)),g.normalMap&&(v.normalMap.value=g.normalMap,v.normalScale.value.copy(g.normalScale),g.side===Ft&&v.normalScale.value.negate()),g.displacementMap&&(v.displacementMap.value=g.displacementMap,v.displacementScale.value=g.displacementScale,v.displacementBias.value=g.displacementBias)}function d(v,g){g.gradientMap&&(v.gradientMap.value=g.gradientMap),g.emissiveMap&&(v.emissiveMap.value=g.emissiveMap),g.bumpMap&&(v.bumpMap.value=g.bumpMap,v.bumpScale.value=g.bumpScale,g.side===Ft&&(v.bumpScale.value*=-1)),g.normalMap&&(v.normalMap.value=g.normalMap,v.normalScale.value.copy(g.normalScale),g.side===Ft&&v.normalScale.value.negate()),g.displacementMap&&(v.displacementMap.value=g.displacementMap,v.displacementScale.value=g.displacementScale,v.displacementBias.value=g.displacementBias)}function u(v,g){v.roughness.value=g.roughness,v.metalness.value=g.metalness,g.roughnessMap&&(v.roughnessMap.value=g.roughnessMap),g.metalnessMap&&(v.metalnessMap.value=g.metalnessMap),g.emissiveMap&&(v.emissiveMap.value=g.emissiveMap),g.bumpMap&&(v.bumpMap.value=g.bumpMap,v.bumpScale.value=g.bumpScale,g.side===Ft&&(v.bumpScale.value*=-1)),g.normalMap&&(v.normalMap.value=g.normalMap,v.normalScale.value.copy(g.normalScale),g.side===Ft&&v.normalScale.value.negate()),g.displacementMap&&(v.displacementMap.value=g.displacementMap,v.displacementScale.value=g.displacementScale,v.displacementBias.value=g.displacementBias),n.get(g).envMap&&(v.envMapIntensity.value=g.envMapIntensity)}function f(v,g){u(v,g),v.reflectivity.value=g.reflectivity,v.clearcoat.value=g.clearcoat,v.clearcoatRoughness.value=g.clearcoatRoughness,g.sheen&&v.sheen.value.copy(g.sheen),g.clearcoatMap&&(v.clearcoatMap.value=g.clearcoatMap),g.clearcoatRoughnessMap&&(v.clearcoatRoughnessMap.value=g.clearcoatRoughnessMap),g.clearcoatNormalMap&&(v.clearcoatNormalScale.value.copy(g.clearcoatNormalScale),v.clearcoatNormalMap.value=g.clearcoatNormalMap,g.side===Ft&&v.clearcoatNormalScale.value.negate()),v.transmission.value=g.transmission,g.transmissionMap&&(v.transmissionMap.value=g.transmissionMap)}function h(v,g){g.matcap&&(v.matcap.value=g.matcap),g.bumpMap&&(v.bumpMap.value=g.bumpMap,v.bumpScale.value=g.bumpScale,g.side===Ft&&(v.bumpScale.value*=-1)),g.normalMap&&(v.normalMap.value=g.normalMap,v.normalScale.value.copy(g.normalScale),g.side===Ft&&v.normalScale.value.negate()),g.displacementMap&&(v.displacementMap.value=g.displacementMap,v.displacementScale.value=g.displacementScale,v.displacementBias.value=g.displacementBias)}function m(v,g){g.displacementMap&&(v.displacementMap.value=g.displacementMap,v.displacementScale.value=g.displacementScale,v.displacementBias.value=g.displacementBias)}function x(v,g){g.displacementMap&&(v.displacementMap.value=g.displacementMap,v.displacementScale.value=g.displacementScale,v.displacementBias.value=g.displacementBias),v.referencePosition.value.copy(g.referencePosition),v.nearDistance.value=g.nearDistance,v.farDistance.value=g.farDistance}function p(v,g){g.bumpMap&&(v.bumpMap.value=g.bumpMap,v.bumpScale.value=g.bumpScale,g.side===Ft&&(v.bumpScale.value*=-1)),g.normalMap&&(v.normalMap.value=g.normalMap,v.normalScale.value.copy(g.normalScale),g.side===Ft&&v.normalScale.value.negate()),g.displacementMap&&(v.displacementMap.value=g.displacementMap,v.displacementScale.value=g.displacementScale,v.displacementBias.value=g.displacementBias)}return{refreshFogUniforms:e,refreshMaterialUniforms:t}}function BC(){const n=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return n.style.display="block",n}function jc(n){n=n||{};const e=n.canvas!==void 0?n.canvas:BC(),t=n.context!==void 0?n.context:null,i=n.alpha!==void 0?n.alpha:!1,r=n.depth!==void 0?n.depth:!0,s=n.stencil!==void 0?n.stencil:!0,a=n.antialias!==void 0?n.antialias:!1,o=n.premultipliedAlpha!==void 0?n.premultipliedAlpha:!0,l=n.preserveDrawingBuffer!==void 0?n.preserveDrawingBuffer:!1,c=n.powerPreference!==void 0?n.powerPreference:"default",d=n.failIfMajorPerformanceCaveat!==void 0?n.failIfMajorPerformanceCaveat:!1;let u=null,f=null;const h=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=ln,this.physicallyCorrectLights=!1,this.toneMapping=ms,this.toneMappingExposure=1,this.maxMorphTargets=8,this.maxMorphNormals=4;const m=this;let x=!1,p=null,v=0,g=0,_=null,y=null,M=-1,w=null;const b=new gt,S=new gt;let E=null,C=e.width,I=e.height,W=1,H=null,A=null;const q=new gt(0,0,C,I),N=new gt(0,0,C,I);let X=!1;const Z=new $c;let $=!1,J=!1;const R=new ot,k=new O,j={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function K(){return _===null?W:1}let B=t;function oe(z,he){for(let fe=0;fe<z.length;fe++){const we=z[fe],Oe=e.getContext(we,he);if(Oe!==null)return Oe}return null}try{const z={alpha:i,depth:r,stencil:s,antialias:a,premultipliedAlpha:o,preserveDrawingBuffer:l,powerPreference:c,failIfMajorPerformanceCaveat:d};if(e.addEventListener("webglcontextlost",Ce,!1),e.addEventListener("webglcontextrestored",Ne,!1),B===null){const he=["webgl2","webgl","experimental-webgl"];if(m.isWebGL1Renderer===!0&&he.shift(),B=oe(he,z),B===null)throw oe(he)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}B.getShaderPrecisionFormat===void 0&&(B.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(z){throw console.error("THREE.WebGLRenderer: "+z.message),z}let Re,Ae,pe,_e,Ie,me,xe,Ee,Fe,Pe,U,D,be,Me,Y,L,T,ne,se,de,ye;function De(){Re=new gL(B),Ae=new pL(B,Re,n),Re.init(Ae),de=new L2(B,Re,Ae),pe=new FC(B,Re,Ae),pe.scissor(S.copy(N).multiplyScalar(W).floor()),pe.viewport(b.copy(q).multiplyScalar(W).floor()),_e=new bL,Ie=new SC,me=new qC(B,Re,pe,Ie,Ae,de,_e),xe=new xL(m),Ee=new HE(B,Ae),ye=new fL(B,Re,Ee,Ae),Fe=new vL(B,Ee,_e,ye),Pe=new SL(B,Fe,Ee,_e),T=new ML(B),Y=new mL(Ie),U=new MC(m,xe,Re,Ae,ye,Y),D=new NC(Ie),be=new AC(Ie),Me=new DC(Re,Ae),L=new uL(m,xe,pe,Pe,o),ne=new hL(B,Re,_e,Ae),se=new yL(B,Re,_e,Ae),_e.programs=U.programs,m.capabilities=Ae,m.extensions=Re,m.properties=Ie,m.renderLists=be,m.state=pe,m.info=_e}De();const Q=new C2(m,B);this.xr=Q;const Te=new A2(m,Pe,Ae.maxTextureSize);this.shadowMap=Te,this.getContext=function(){return B},this.getContextAttributes=function(){return B.getContextAttributes()},this.forceContextLoss=function(){const z=Re.get("WEBGL_lose_context");z&&z.loseContext()},this.forceContextRestore=function(){const z=Re.get("WEBGL_lose_context");z&&z.restoreContext()},this.getPixelRatio=function(){return W},this.setPixelRatio=function(z){z!==void 0&&(W=z,this.setSize(C,I,!1))},this.getSize=function(z){return z===void 0&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),z=new Le),z.set(C,I)},this.setSize=function(z,he,fe){if(Q.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}C=z,I=he,e.width=Math.floor(z*W),e.height=Math.floor(he*W),fe!==!1&&(e.style.width=z+"px",e.style.height=he+"px"),this.setViewport(0,0,z,he)},this.getDrawingBufferSize=function(z){return z===void 0&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),z=new Le),z.set(C*W,I*W).floor()},this.setDrawingBufferSize=function(z,he,fe){C=z,I=he,W=fe,e.width=Math.floor(z*fe),e.height=Math.floor(he*fe),this.setViewport(0,0,z,he)},this.getCurrentViewport=function(z){return z===void 0&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),z=new gt),z.copy(b)},this.getViewport=function(z){return z.copy(q)},this.setViewport=function(z,he,fe,we){z.isVector4?q.set(z.x,z.y,z.z,z.w):q.set(z,he,fe,we),pe.viewport(b.copy(q).multiplyScalar(W).floor())},this.getScissor=function(z){return z.copy(N)},this.setScissor=function(z,he,fe,we){z.isVector4?N.set(z.x,z.y,z.z,z.w):N.set(z,he,fe,we),pe.scissor(S.copy(N).multiplyScalar(W).floor())},this.getScissorTest=function(){return X},this.setScissorTest=function(z){pe.setScissorTest(X=z)},this.setOpaqueSort=function(z){H=z},this.setTransparentSort=function(z){A=z},this.getClearColor=function(z){return z===void 0&&(console.warn("WebGLRenderer: .getClearColor() now requires a Color as an argument"),z=new Ve),z.copy(L.getClearColor())},this.setClearColor=function(){L.setClearColor.apply(L,arguments)},this.getClearAlpha=function(){return L.getClearAlpha()},this.setClearAlpha=function(){L.setClearAlpha.apply(L,arguments)},this.clear=function(z,he,fe){let we=0;(z===void 0||z)&&(we|=16384),(he===void 0||he)&&(we|=256),(fe===void 0||fe)&&(we|=1024),B.clear(we)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Ce,!1),e.removeEventListener("webglcontextrestored",Ne,!1),be.dispose(),Me.dispose(),Ie.dispose(),xe.dispose(),Pe.dispose(),ye.dispose(),Q.dispose(),ve.stop()};function Ce(z){z.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),x=!0}function Ne(){console.log("THREE.WebGLRenderer: Context Restored."),x=!1,De()}function ke(z){const he=z.target;he.removeEventListener("dispose",ke),et(he)}function et(z){dt(z),Ie.remove(z)}function dt(z){const he=Ie.get(z).program;he!==void 0&&U.releaseProgram(he)}function wt(z,he){z.render(function(fe){m.renderBufferImmediate(fe,he)})}this.renderBufferImmediate=function(z,he){ye.initAttributes();const fe=Ie.get(z);z.hasPositions&&!fe.position&&(fe.position=B.createBuffer()),z.hasNormals&&!fe.normal&&(fe.normal=B.createBuffer()),z.hasUvs&&!fe.uv&&(fe.uv=B.createBuffer()),z.hasColors&&!fe.color&&(fe.color=B.createBuffer());const we=he.getAttributes();z.hasPositions&&(B.bindBuffer(34962,fe.position),B.bufferData(34962,z.positionArray,35048),ye.enableAttribute(we.position),B.vertexAttribPointer(we.position,3,5126,!1,0,0)),z.hasNormals&&(B.bindBuffer(34962,fe.normal),B.bufferData(34962,z.normalArray,35048),ye.enableAttribute(we.normal),B.vertexAttribPointer(we.normal,3,5126,!1,0,0)),z.hasUvs&&(B.bindBuffer(34962,fe.uv),B.bufferData(34962,z.uvArray,35048),ye.enableAttribute(we.uv),B.vertexAttribPointer(we.uv,2,5126,!1,0,0)),z.hasColors&&(B.bindBuffer(34962,fe.color),B.bufferData(34962,z.colorArray,35048),ye.enableAttribute(we.color),B.vertexAttribPointer(we.color,3,5126,!1,0,0)),ye.disableUnusedAttributes(),B.drawArrays(4,0,z.count),z.count=0},this.renderBufferDirect=function(z,he,fe,we,Oe,st){he===null&&(he=j);const rt=Oe.isMesh&&Oe.matrixWorld.determinant()<0,at=ht(z,he,we,Oe);pe.setMaterial(we,rt);let P=fe.index;const re=fe.attributes.position;if(P===null){if(re===void 0||re.count===0)return}else if(P.count===0)return;let le=1;we.wireframe===!0&&(P=Fe.getWireframeAttribute(fe),le=2),(we.morphTargets||we.morphNormals)&&T.update(Oe,fe,we,at),ye.setup(Oe,we,at,fe,P);let ee,ue=ne;P!==null&&(ee=Ee.get(P),ue=se,ue.setIndex(ee));const $e=P!==null?P.count:re.count,G=fe.drawRange.start*le,F=fe.drawRange.count*le,V=st!==null?st.start*le:0,te=st!==null?st.count*le:1/0,ae=Math.max(G,V),ge=Math.min($e,G+F,V+te)-1,Se=Math.max(0,ge-ae+1);if(Se!==0){if(Oe.isMesh)we.wireframe===!0?(pe.setLineWidth(we.wireframeLinewidth*K()),ue.setMode(1)):ue.setMode(4);else if(Oe.isLine){let ze=we.linewidth;ze===void 0&&(ze=1),pe.setLineWidth(ze*K()),Oe.isLineSegments?ue.setMode(1):Oe.isLineLoop?ue.setMode(2):ue.setMode(3)}else Oe.isPoints?ue.setMode(0):Oe.isSprite&&ue.setMode(4);if(Oe.isInstancedMesh)ue.renderInstances(ae,Se,Oe.count);else if(fe.isInstancedBufferGeometry){const ze=Math.min(fe.instanceCount,fe._maxInstanceCount);ue.renderInstances(ae,Se,ze)}else ue.render(ae,Se)}},this.compile=function(z,he){f=Me.get(z),f.init(),z.traverseVisible(function(we){we.isLight&&we.layers.test(he.layers)&&(f.pushLight(we),we.castShadow&&f.pushShadow(we))}),f.setupLights();const fe=new WeakMap;z.traverse(function(we){const Oe=we.material;if(Oe)if(Array.isArray(Oe))for(let st=0;st<Oe.length;st++){const rt=Oe[st];fe.has(rt)===!1&&(pt(rt,z,we),fe.set(rt))}else fe.has(Oe)===!1&&(pt(Oe,z,we),fe.set(Oe))})};let ie=null;function He(z){Q.isPresenting||ie&&ie(z)}const ve=new y2;ve.setAnimationLoop(He),typeof window<"u"&&ve.setContext(window),this.setAnimationLoop=function(z){ie=z,Q.setAnimationLoop(z),z===null?ve.stop():ve.start()},this.render=function(z,he){let fe,we;if(arguments[2]!==void 0&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),fe=arguments[2]),arguments[3]!==void 0&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),we=arguments[3]),he!==void 0&&he.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(x===!0)return;ye.resetDefaultState(),M=-1,w=null,z.autoUpdate===!0&&z.updateMatrixWorld(),he.parent===null&&he.updateMatrixWorld(),Q.enabled===!0&&Q.isPresenting===!0&&(he=Q.getCamera(he)),z.isScene===!0&&z.onBeforeRender(m,z,he,fe||_),f=Me.get(z,h.length),f.init(),h.push(f),R.multiplyMatrices(he.projectionMatrix,he.matrixWorldInverse),Z.setFromProjectionMatrix(R),J=this.localClippingEnabled,$=Y.init(this.clippingPlanes,J,he),u=be.get(z,he),u.init(),Ge(z,he,0,m.sortObjects),u.finish(),m.sortObjects===!0&&u.sort(H,A),$===!0&&Y.beginShadows();const Oe=f.state.shadowsArray;Te.render(Oe,z,he),f.setupLights(),f.setupLightsView(he),$===!0&&Y.endShadows(),this.info.autoReset===!0&&this.info.reset(),fe!==void 0&&this.setRenderTarget(fe),L.render(u,z,he,we);const st=u.opaque,rt=u.transparent;st.length>0&&Be(st,z,he),rt.length>0&&Be(rt,z,he),z.isScene===!0&&z.onAfterRender(m,z,he),_!==null&&(me.updateRenderTargetMipmap(_),me.updateMultisampleRenderTarget(_)),pe.buffers.depth.setTest(!0),pe.buffers.depth.setMask(!0),pe.buffers.color.setMask(!0),pe.setPolygonOffset(!1),h.pop(),h.length>0?f=h[h.length-1]:f=null,u=null};function Ge(z,he,fe,we){if(z.visible===!1)return;if(z.layers.test(he.layers)){if(z.isGroup)fe=z.renderOrder;else if(z.isLOD)z.autoUpdate===!0&&z.update(he);else if(z.isLight)f.pushLight(z),z.castShadow&&f.pushShadow(z);else if(z.isSprite){if(!z.frustumCulled||Z.intersectsSprite(z)){we&&k.setFromMatrixPosition(z.matrixWorld).applyMatrix4(R);const rt=Pe.update(z),at=z.material;at.visible&&u.push(z,rt,at,fe,k.z,null)}}else if(z.isImmediateRenderObject)we&&k.setFromMatrixPosition(z.matrixWorld).applyMatrix4(R),u.push(z,null,z.material,fe,k.z,null);else if((z.isMesh||z.isLine||z.isPoints)&&(z.isSkinnedMesh&&z.skeleton.frame!==_e.render.frame&&(z.skeleton.update(),z.skeleton.frame=_e.render.frame),!z.frustumCulled||Z.intersectsObject(z))){we&&k.setFromMatrixPosition(z.matrixWorld).applyMatrix4(R);const rt=Pe.update(z),at=z.material;if(Array.isArray(at)){const P=rt.groups;for(let re=0,le=P.length;re<le;re++){const ee=P[re],ue=at[ee.materialIndex];ue&&ue.visible&&u.push(z,rt,ue,fe,k.z,ee)}}else at.visible&&u.push(z,rt,at,fe,k.z,null)}}const st=z.children;for(let rt=0,at=st.length;rt<at;rt++)Ge(st[rt],he,fe,we)}function Be(z,he,fe){const we=he.isScene===!0?he.overrideMaterial:null;for(let Oe=0,st=z.length;Oe<st;Oe++){const rt=z[Oe],at=rt.object,P=rt.geometry,re=we===null?rt.material:we,le=rt.group;if(fe.isArrayCamera){const ee=fe.cameras;for(let ue=0,$e=ee.length;ue<$e;ue++){const G=ee[ue];at.layers.test(G.layers)&&(pe.viewport(b.copy(G.viewport)),f.setupLightsView(G),it(at,he,G,P,re,le))}}else it(at,he,fe,P,re,le)}}function it(z,he,fe,we,Oe,st){if(z.onBeforeRender(m,he,fe,we,Oe,st),z.modelViewMatrix.multiplyMatrices(fe.matrixWorldInverse,z.matrixWorld),z.normalMatrix.getNormalMatrix(z.modelViewMatrix),z.isImmediateRenderObject){const rt=ht(fe,he,Oe,z);pe.setMaterial(Oe),ye.reset(),wt(z,rt)}else m.renderBufferDirect(fe,he,we,Oe,z,st);z.onAfterRender(m,he,fe,we,Oe,st)}function pt(z,he,fe){he.isScene!==!0&&(he=j);const we=Ie.get(z),Oe=f.state.lights,st=f.state.shadowsArray,rt=Oe.state.version,at=U.getParameters(z,Oe.state,st,he,fe),P=U.getProgramCacheKey(at);let re=we.program,le=!0;if(we.environment=z.isMeshStandardMaterial?he.environment:null,we.fog=he.fog,we.envMap=xe.get(z.envMap||we.environment),re===void 0)z.addEventListener("dispose",ke);else if(re.cacheKey!==P)dt(z);else if(we.lightsStateVersion!==rt)le=!1;else{if(at.shaderID!==void 0)return;le=!1}le&&(at.uniforms=U.getUniforms(z),z.onBeforeCompile(at,m),re=U.acquireProgram(at,P),we.program=re,we.uniforms=at.uniforms,we.outputEncoding=at.outputEncoding);const ee=we.uniforms;(!z.isShaderMaterial&&!z.isRawShaderMaterial||z.clipping===!0)&&(we.numClippingPlanes=Y.numPlanes,we.numIntersection=Y.numIntersection,ee.clippingPlanes=Y.uniform),we.needsLights=bt(z),we.lightsStateVersion=rt,we.needsLights&&(ee.ambientLightColor.value=Oe.state.ambient,ee.lightProbe.value=Oe.state.probe,ee.directionalLights.value=Oe.state.directional,ee.directionalLightShadows.value=Oe.state.directionalShadow,ee.spotLights.value=Oe.state.spot,ee.spotLightShadows.value=Oe.state.spotShadow,ee.rectAreaLights.value=Oe.state.rectArea,ee.ltc_1.value=Oe.state.rectAreaLTC1,ee.ltc_2.value=Oe.state.rectAreaLTC2,ee.pointLights.value=Oe.state.point,ee.pointLightShadows.value=Oe.state.pointShadow,ee.hemisphereLights.value=Oe.state.hemi,ee.directionalShadowMap.value=Oe.state.directionalShadowMap,ee.directionalShadowMatrix.value=Oe.state.directionalShadowMatrix,ee.spotShadowMap.value=Oe.state.spotShadowMap,ee.spotShadowMatrix.value=Oe.state.spotShadowMatrix,ee.pointShadowMap.value=Oe.state.pointShadowMap,ee.pointShadowMatrix.value=Oe.state.pointShadowMatrix);const ue=we.program.getUniforms(),$e=Mr.seqWithValue(ue.seq,ee);we.uniformsList=$e}function ht(z,he,fe,we){he.isScene!==!0&&(he=j),me.resetTextureUnits();const Oe=he.fog,st=fe.isMeshStandardMaterial?he.environment:null,rt=_===null?m.outputEncoding:_.texture.encoding,at=xe.get(fe.envMap||st),P=Ie.get(fe),re=f.state.lights;if($===!0&&(J===!0||z!==w)){const V=z===w&&fe.id===M;Y.setState(fe,z,V)}fe.version===P.__version?(fe.fog&&P.fog!==Oe||P.environment!==st||P.needsLights&&P.lightsStateVersion!==re.state.version||P.numClippingPlanes!==void 0&&(P.numClippingPlanes!==Y.numPlanes||P.numIntersection!==Y.numIntersection)||P.outputEncoding!==rt||P.envMap!==at)&&pt(fe,he,we):(pt(fe,he,we),P.__version=fe.version);let le=!1,ee=!1,ue=!1;const $e=P.program,G=$e.getUniforms(),F=P.uniforms;if(pe.useProgram($e.program)&&(le=!0,ee=!0,ue=!0),fe.id!==M&&(M=fe.id,ee=!0),le||w!==z){if(G.setValue(B,"projectionMatrix",z.projectionMatrix),Ae.logarithmicDepthBuffer&&G.setValue(B,"logDepthBufFC",2/(Math.log(z.far+1)/Math.LN2)),w!==z&&(w=z,ee=!0,ue=!0),fe.isShaderMaterial||fe.isMeshPhongMaterial||fe.isMeshToonMaterial||fe.isMeshStandardMaterial||fe.envMap){const V=G.map.cameraPosition;V!==void 0&&V.setValue(B,k.setFromMatrixPosition(z.matrixWorld))}(fe.isMeshPhongMaterial||fe.isMeshToonMaterial||fe.isMeshLambertMaterial||fe.isMeshBasicMaterial||fe.isMeshStandardMaterial||fe.isShaderMaterial)&&G.setValue(B,"isOrthographic",z.isOrthographicCamera===!0),(fe.isMeshPhongMaterial||fe.isMeshToonMaterial||fe.isMeshLambertMaterial||fe.isMeshBasicMaterial||fe.isMeshStandardMaterial||fe.isShaderMaterial||fe.isShadowMaterial||fe.skinning)&&G.setValue(B,"viewMatrix",z.matrixWorldInverse)}if(fe.skinning){G.setOptional(B,we,"bindMatrix"),G.setOptional(B,we,"bindMatrixInverse");const V=we.skeleton;if(V){const te=V.bones;if(Ae.floatVertexTextures){if(V.boneTexture===null){let ae=Math.sqrt(te.length*4);ae=tt.ceilPowerOfTwo(ae),ae=Math.max(ae,4);const ge=new Float32Array(ae*ae*4);ge.set(V.boneMatrices);const Se=new Yi(ge,ae,ae,Tn,ki);V.boneMatrices=ge,V.boneTexture=Se,V.boneTextureSize=ae}G.setValue(B,"boneTexture",V.boneTexture,me),G.setValue(B,"boneTextureSize",V.boneTextureSize)}else G.setOptional(B,V,"boneMatrices")}}return(ee||P.receiveShadow!==we.receiveShadow)&&(P.receiveShadow=we.receiveShadow,G.setValue(B,"receiveShadow",we.receiveShadow)),ee&&(G.setValue(B,"toneMappingExposure",m.toneMappingExposure),P.needsLights&&xn(F,ue),Oe&&fe.fog&&D.refreshFogUniforms(F,Oe),D.refreshMaterialUniforms(F,fe,W,I),Mr.upload(B,P.uniformsList,F,me)),fe.isShaderMaterial&&fe.uniformsNeedUpdate===!0&&(Mr.upload(B,P.uniformsList,F,me),fe.uniformsNeedUpdate=!1),fe.isSpriteMaterial&&G.setValue(B,"center",we.center),G.setValue(B,"modelViewMatrix",we.modelViewMatrix),G.setValue(B,"normalMatrix",we.normalMatrix),G.setValue(B,"modelMatrix",we.matrixWorld),$e}function xn(z,he){z.ambientLightColor.needsUpdate=he,z.lightProbe.needsUpdate=he,z.directionalLights.needsUpdate=he,z.directionalLightShadows.needsUpdate=he,z.pointLights.needsUpdate=he,z.pointLightShadows.needsUpdate=he,z.spotLights.needsUpdate=he,z.spotLightShadows.needsUpdate=he,z.rectAreaLights.needsUpdate=he,z.hemisphereLights.needsUpdate=he}function bt(z){return z.isMeshLambertMaterial||z.isMeshToonMaterial||z.isMeshPhongMaterial||z.isMeshStandardMaterial||z.isShadowMaterial||z.isShaderMaterial&&z.lights===!0}this.setFramebuffer=function(z){p!==z&&_===null&&B.bindFramebuffer(36160,z),p=z},this.getActiveCubeFace=function(){return v},this.getActiveMipmapLevel=function(){return g},this.getRenderList=function(){return u},this.setRenderList=function(z){u=z},this.getRenderTarget=function(){return _},this.setRenderTarget=function(z,he=0,fe=0){_=z,v=he,g=fe,z&&Ie.get(z).__webglFramebuffer===void 0&&me.setupRenderTarget(z);let we=p,Oe=!1;if(z){const st=Ie.get(z).__webglFramebuffer;z.isWebGLCubeRenderTarget?(we=st[he],Oe=!0):z.isWebGLMultisampleRenderTarget?we=Ie.get(z).__webglMultisampledFramebuffer:we=st,b.copy(z.viewport),S.copy(z.scissor),E=z.scissorTest}else b.copy(q).multiplyScalar(W).floor(),S.copy(N).multiplyScalar(W).floor(),E=X;if(y!==we&&(B.bindFramebuffer(36160,we),y=we),pe.viewport(b),pe.scissor(S),pe.setScissorTest(E),Oe){const st=Ie.get(z.texture);B.framebufferTexture2D(36160,36064,34069+he,st.__webglTexture,fe)}},this.readRenderTargetPixels=function(z,he,fe,we,Oe,st,rt){if(!(z&&z.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let at=Ie.get(z).__webglFramebuffer;if(z.isWebGLCubeRenderTarget&&rt!==void 0&&(at=at[rt]),at){let P=!1;at!==y&&(B.bindFramebuffer(36160,at),P=!0);try{const re=z.texture,le=re.format,ee=re.type;if(le!==Tn&&de.convert(le)!==B.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const ue=ee===tc&&(Re.has("EXT_color_buffer_half_float")||Ae.isWebGL2&&Re.has("EXT_color_buffer_float"));if(ee!==uo&&de.convert(ee)!==B.getParameter(35738)&&!(ee===ki&&(Ae.isWebGL2||Re.has("OES_texture_float")||Re.has("WEBGL_color_buffer_float")))&&!ue){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}B.checkFramebufferStatus(36160)===36053?he>=0&&he<=z.width-we&&fe>=0&&fe<=z.height-Oe&&B.readPixels(he,fe,we,Oe,de.convert(le),de.convert(ee),st):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{P&&B.bindFramebuffer(36160,y)}}},this.copyFramebufferToTexture=function(z,he,fe=0){const we=Math.pow(2,-fe),Oe=Math.floor(he.image.width*we),st=Math.floor(he.image.height*we),rt=de.convert(he.format);me.setTexture2D(he,0),B.copyTexImage2D(3553,fe,rt,z.x,z.y,Oe,st,0),pe.unbindTexture()},this.copyTextureToTexture=function(z,he,fe,we=0){const Oe=he.image.width,st=he.image.height,rt=de.convert(fe.format),at=de.convert(fe.type);me.setTexture2D(fe,0),B.pixelStorei(37440,fe.flipY),B.pixelStorei(37441,fe.premultiplyAlpha),B.pixelStorei(3317,fe.unpackAlignment),he.isDataTexture?B.texSubImage2D(3553,we,z.x,z.y,Oe,st,rt,at,he.image.data):he.isCompressedTexture?B.compressedTexSubImage2D(3553,we,z.x,z.y,he.mipmaps[0].width,he.mipmaps[0].height,rt,he.mipmaps[0].data):B.texSubImage2D(3553,we,z.x,z.y,rt,at,he.image),we===0&&fe.generateMipmaps&&B.generateMipmap(3553),pe.unbindTexture()},this.initTexture=function(z){me.setTexture2D(z,0),pe.unbindTexture()},this.resetState=function(){pe.reset(),ye.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function s0(n){jc.call(this,n)}s0.prototype=Object.assign(Object.create(jc.prototype),{constructor:s0,isWebGL1Renderer:!0});class Su{constructor(e,t){Object.defineProperty(this,"isFogExp2",{value:!0}),this.name="",this.color=new Ve(e),this.density=t!==void 0?t:25e-5}clone(){return new Su(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class Eu{constructor(e,t,i){Object.defineProperty(this,"isFog",{value:!0}),this.name="",this.color=new Ve(e),this.near=t!==void 0?t:1,this.far=i!==void 0?i:1e3}clone(){return new Eu(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class dp extends je{constructor(){super(),Object.defineProperty(this,"isScene",{value:!0}),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.background!==null&&(t.object.background=this.background.toJSON(e)),this.environment!==null&&(t.object.environment=this.environment.toJSON(e)),this.fog!==null&&(t.object.fog=this.fog.toJSON()),t}}function En(n,e){this.array=n,this.stride=e,this.count=n!==void 0?n.length/e:0,this.usage=Wc,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=tt.generateUUID()}Object.defineProperty(En.prototype,"needsUpdate",{set:function(n){n===!0&&this.version++}});Object.assign(En.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(n){return this.usage=n,this},copy:function(n){return this.array=new n.array.constructor(n.array),this.count=n.count,this.stride=n.stride,this.usage=n.usage,this},copyAt:function(n,e,t){n*=this.stride,t*=e.stride;for(let i=0,r=this.stride;i<r;i++)this.array[n+i]=e.array[t+i];return this},set:function(n,e=0){return this.array.set(n,e),this},clone:function(n){n.arrayBuffers===void 0&&(n.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=tt.generateUUID()),n.arrayBuffers[this.array.buffer._uuid]===void 0&&(n.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(n.arrayBuffers[this.array.buffer._uuid]),t=new En(e,this.stride);return t.setUsage(this.usage),t},onUpload:function(n){return this.onUploadCallback=n,this},toJSON:function(n){return n.arrayBuffers===void 0&&(n.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=tt.generateUUID()),n.arrayBuffers[this.array.buffer._uuid]===void 0&&(n.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});const jr=new O;function Cr(n,e,t,i){this.name="",this.data=n,this.itemSize=e,this.offset=t,this.normalized=i===!0}Object.defineProperties(Cr.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}},needsUpdate:{set:function(n){this.data.needsUpdate=n}}});Object.assign(Cr.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(n){for(let e=0,t=this.data.count;e<t;e++)jr.x=this.getX(e),jr.y=this.getY(e),jr.z=this.getZ(e),jr.applyMatrix4(n),this.setXYZ(e,jr.x,jr.y,jr.z);return this},setX:function(n,e){return this.data.array[n*this.data.stride+this.offset]=e,this},setY:function(n,e){return this.data.array[n*this.data.stride+this.offset+1]=e,this},setZ:function(n,e){return this.data.array[n*this.data.stride+this.offset+2]=e,this},setW:function(n,e){return this.data.array[n*this.data.stride+this.offset+3]=e,this},getX:function(n){return this.data.array[n*this.data.stride+this.offset]},getY:function(n){return this.data.array[n*this.data.stride+this.offset+1]},getZ:function(n){return this.data.array[n*this.data.stride+this.offset+2]},getW:function(n){return this.data.array[n*this.data.stride+this.offset+3]},setXY:function(n,e,t){return n=n*this.data.stride+this.offset,this.data.array[n+0]=e,this.data.array[n+1]=t,this},setXYZ:function(n,e,t,i){return n=n*this.data.stride+this.offset,this.data.array[n+0]=e,this.data.array[n+1]=t,this.data.array[n+2]=i,this},setXYZW:function(n,e,t,i,r){return n=n*this.data.stride+this.offset,this.data.array[n+0]=e,this.data.array[n+1]=t,this.data.array[n+2]=i,this.data.array[n+3]=r,this},clone:function(n){if(n===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const i=t*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)e.push(this.data.array[i+r])}return new Ke(new this.array.constructor(e),this.itemSize,this.normalized)}else return n.interleavedBuffers===void 0&&(n.interleavedBuffers={}),n.interleavedBuffers[this.data.uuid]===void 0&&(n.interleavedBuffers[this.data.uuid]=this.data.clone(n)),new Cr(n.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)},toJSON:function(n){if(n===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const i=t*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)e.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}else return n.interleavedBuffers===void 0&&(n.interleavedBuffers={}),n.interleavedBuffers[this.data.uuid]===void 0&&(n.interleavedBuffers[this.data.uuid]=this.data.toJSON(n)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}});function Rr(n){Qe.call(this),this.type="SpriteMaterial",this.color=new Ve(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(n)}Rr.prototype=Object.create(Qe.prototype);Rr.prototype.constructor=Rr;Rr.prototype.isSpriteMaterial=!0;Rr.prototype.copy=function(n){return Qe.prototype.copy.call(this,n),this.color.copy(n.color),this.map=n.map,this.alphaMap=n.alphaMap,this.rotation=n.rotation,this.sizeAttenuation=n.sizeAttenuation,this};let _a;const Ro=new O,wa=new O,Ma=new O,Sa=new Le,Po=new Le,R2=new ot,Wl=new O,Io=new O,$l=new O,rg=new Le,rh=new Le,sg=new Le;function fc(n){if(je.call(this),this.type="Sprite",_a===void 0){_a=new Ye;const e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),t=new En(e,5);_a.setIndex([0,1,2,0,2,3]),_a.setAttribute("position",new Cr(t,3,0,!1)),_a.setAttribute("uv",new Cr(t,2,3,!1))}this.geometry=_a,this.material=n!==void 0?n:new Rr,this.center=new Le(.5,.5)}fc.prototype=Object.assign(Object.create(je.prototype),{constructor:fc,isSprite:!0,raycast:function(n,e){n.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),wa.setFromMatrixScale(this.matrixWorld),R2.copy(n.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(n.camera.matrixWorldInverse,this.matrixWorld),Ma.setFromMatrixPosition(this.modelViewMatrix),n.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&wa.multiplyScalar(-Ma.z);const t=this.material.rotation;let i,r;t!==0&&(r=Math.cos(t),i=Math.sin(t));const s=this.center;jl(Wl.set(-.5,-.5,0),Ma,s,wa,i,r),jl(Io.set(.5,-.5,0),Ma,s,wa,i,r),jl($l.set(.5,.5,0),Ma,s,wa,i,r),rg.set(0,0),rh.set(1,0),sg.set(1,1);let a=n.ray.intersectTriangle(Wl,Io,$l,!1,Ro);if(a===null&&(jl(Io.set(-.5,.5,0),Ma,s,wa,i,r),rh.set(0,1),a=n.ray.intersectTriangle(Wl,$l,Io,!1,Ro),a===null))return;const o=n.ray.origin.distanceTo(Ro);o<n.near||o>n.far||e.push({distance:o,point:Ro.clone(),uv:Kt.getUV(Ro,Wl,Io,$l,rg,rh,sg,new Le),face:null,object:this})},copy:function(n){return je.prototype.copy.call(this,n),n.center!==void 0&&this.center.copy(n.center),this.material=n.material,this}});function jl(n,e,t,i,r,s){Sa.subVectors(n,t).addScalar(.5).multiply(i),r!==void 0?(Po.x=s*Sa.x-r*Sa.y,Po.y=r*Sa.x+s*Sa.y):Po.copy(Sa),n.copy(e),n.x+=Po.x,n.y+=Po.y,n.applyMatrix4(R2)}const Xl=new O,ag=new O;function hc(){je.call(this),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}hc.prototype=Object.assign(Object.create(je.prototype),{constructor:hc,isLOD:!0,copy:function(n){je.prototype.copy.call(this,n,!1);const e=n.levels;for(let t=0,i=e.length;t<i;t++){const r=e[t];this.addLevel(r.object.clone(),r.distance)}return this.autoUpdate=n.autoUpdate,this},addLevel:function(n,e=0){e=Math.abs(e);const t=this.levels;let i;for(i=0;i<t.length&&!(e<t[i].distance);i++);return t.splice(i,0,{distance:e,object:n}),this.add(n),this},getCurrentLevel:function(){return this._currentLevel},getObjectForDistance:function(n){const e=this.levels;if(e.length>0){let t,i;for(t=1,i=e.length;t<i&&!(n<e[t].distance);t++);return e[t-1].object}return null},raycast:function(n,e){if(this.levels.length>0){Xl.setFromMatrixPosition(this.matrixWorld);const i=n.ray.origin.distanceTo(Xl);this.getObjectForDistance(i).raycast(n,e)}},update:function(n){const e=this.levels;if(e.length>1){Xl.setFromMatrixPosition(n.matrixWorld),ag.setFromMatrixPosition(this.matrixWorld);const t=Xl.distanceTo(ag)/n.zoom;e[0].object.visible=!0;let i,r;for(i=1,r=e.length;i<r&&t>=e[i].distance;i++)e[i-1].object.visible=!1,e[i].object.visible=!0;for(this._currentLevel=i-1;i<r;i++)e[i].object.visible=!1}},toJSON:function(n){const e=je.prototype.toJSON.call(this,n);this.autoUpdate===!1&&(e.object.autoUpdate=!1),e.object.levels=[];const t=this.levels;for(let i=0,r=t.length;i<r;i++){const s=t[i];e.object.levels.push({object:s.object.uuid,distance:s.distance})}return e}});const og=new O,cg=new gt,lg=new gt,UC=new O,dg=new ot;function pc(n,e){n&&n.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),Et.call(this,n,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new ot,this.bindMatrixInverse=new ot}pc.prototype=Object.assign(Object.create(Et.prototype),{constructor:pc,isSkinnedMesh:!0,copy:function(n){return Et.prototype.copy.call(this,n),this.bindMode=n.bindMode,this.bindMatrix.copy(n.bindMatrix),this.bindMatrixInverse.copy(n.bindMatrixInverse),this.skeleton=n.skeleton,this},bind:function(n,e){this.skeleton=n,e===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){const n=new gt,e=this.geometry.attributes.skinWeight;for(let t=0,i=e.count;t<i;t++){n.x=e.getX(t),n.y=e.getY(t),n.z=e.getZ(t),n.w=e.getW(t);const r=1/n.manhattanLength();r!==1/0?n.multiplyScalar(r):n.set(1,0,0,0),e.setXYZW(t,n.x,n.y,n.z,n.w)}},updateMatrixWorld:function(n){Et.prototype.updateMatrixWorld.call(this,n),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},boneTransform:function(n,e){const t=this.skeleton,i=this.geometry;cg.fromBufferAttribute(i.attributes.skinIndex,n),lg.fromBufferAttribute(i.attributes.skinWeight,n),og.fromBufferAttribute(i.attributes.position,n).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let r=0;r<4;r++){const s=lg.getComponent(r);if(s!==0){const a=cg.getComponent(r);dg.multiplyMatrices(t.bones[a].matrixWorld,t.boneInverses[a]),e.addScaledVector(UC.copy(og).applyMatrix4(dg),s)}}return e.applyMatrix4(this.bindMatrixInverse)}});function mc(){je.call(this),this.type="Bone"}mc.prototype=Object.assign(Object.create(je.prototype),{constructor:mc,isBone:!0});const ug=new ot,GC=new ot;function xc(n=[],e=[]){this.uuid=tt.generateUUID(),this.bones=n.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}Object.assign(xc.prototype,{init:function(){const n=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(n.length*16),e.length===0)this.calculateInverses();else if(n.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let t=0,i=this.bones.length;t<i;t++)this.boneInverses.push(new ot)}},calculateInverses:function(){this.boneInverses.length=0;for(let n=0,e=this.bones.length;n<e;n++){const t=new ot;this.bones[n]&&t.copy(this.bones[n].matrixWorld).invert(),this.boneInverses.push(t)}},pose:function(){for(let n=0,e=this.bones.length;n<e;n++){const t=this.bones[n];t&&t.matrixWorld.copy(this.boneInverses[n]).invert()}for(let n=0,e=this.bones.length;n<e;n++){const t=this.bones[n];t&&(t.parent&&t.parent.isBone?(t.matrix.copy(t.parent.matrixWorld).invert(),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))}},update:function(){const n=this.bones,e=this.boneInverses,t=this.boneMatrices,i=this.boneTexture;for(let r=0,s=n.length;r<s;r++){const a=n[r]?n[r].matrixWorld:GC;ug.multiplyMatrices(a,e[r]),ug.toArray(t,r*16)}i!==null&&(i.needsUpdate=!0)},clone:function(){return new xc(this.bones,this.boneInverses)},getBoneByName:function(n){for(let e=0,t=this.bones.length;e<t;e++){const i=this.bones[e];if(i.name===n)return i}},dispose:function(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)},fromJSON:function(n,e){this.uuid=n.uuid;for(let t=0,i=n.bones.length;t<i;t++){const r=n.bones[t];let s=e[r];s===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),s=new mc),this.bones.push(s),this.boneInverses.push(new ot().fromArray(n.boneInverses[t]))}return this.init(),this},toJSON:function(){const n={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};n.uuid=this.uuid;const e=this.bones,t=this.boneInverses;for(let i=0,r=e.length;i<r;i++){const s=e[i];n.bones.push(s.uuid);const a=t[i];n.boneInverses.push(a.toArray())}return n}});const fg=new ot,hg=new ot,Yl=[],Do=new Et;function Fd(n,e,t){Et.call(this,n,e),this.instanceMatrix=new Ke(new Float32Array(t*16),16),this.instanceColor=null,this.count=t,this.frustumCulled=!1}Fd.prototype=Object.assign(Object.create(Et.prototype),{constructor:Fd,isInstancedMesh:!0,copy:function(n){return Et.prototype.copy.call(this,n),this.instanceMatrix.copy(n.instanceMatrix),n.instanceColor!==null&&(this.instanceColor=n.instanceColor.clone()),this.count=n.count,this},getColorAt:function(n,e){e.fromArray(this.instanceColor.array,n*3)},getMatrixAt:function(n,e){e.fromArray(this.instanceMatrix.array,n*16)},raycast:function(n,e){const t=this.matrixWorld,i=this.count;if(Do.geometry=this.geometry,Do.material=this.material,Do.material!==void 0)for(let r=0;r<i;r++){this.getMatrixAt(r,fg),hg.multiplyMatrices(t,fg),Do.matrixWorld=hg,Do.raycast(n,Yl);for(let s=0,a=Yl.length;s<a;s++){const o=Yl[s];o.instanceId=r,o.object=this,e.push(o)}Yl.length=0}},setColorAt:function(n,e){this.instanceColor===null&&(this.instanceColor=new Ke(new Float32Array(this.count*3),3)),e.toArray(this.instanceColor.array,n*3)},setMatrixAt:function(n,e){e.toArray(this.instanceMatrix.array,n*16)},updateMorphTargets:function(){},dispose:function(){this.dispatchEvent({type:"dispose"})}});function Ct(n){Qe.call(this),this.type="LineBasicMaterial",this.color=new Ve(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(n)}Ct.prototype=Object.create(Qe.prototype);Ct.prototype.constructor=Ct;Ct.prototype.isLineBasicMaterial=!0;Ct.prototype.copy=function(n){return Qe.prototype.copy.call(this,n),this.color.copy(n.color),this.linewidth=n.linewidth,this.linecap=n.linecap,this.linejoin=n.linejoin,this.morphTargets=n.morphTargets,this};const pg=new O,mg=new O,xg=new ot,sh=new fo,Zl=new qr;function Nn(n=new Ye,e=new Ct){je.call(this),this.type="Line",this.geometry=n,this.material=e,this.updateMorphTargets()}Nn.prototype=Object.assign(Object.create(je.prototype),{constructor:Nn,isLine:!0,copy:function(n){return je.prototype.copy.call(this,n),this.material=n.material,this.geometry=n.geometry,this},computeLineDistances:function(){const n=this.geometry;if(n.isBufferGeometry)if(n.index===null){const e=n.attributes.position,t=[0];for(let i=1,r=e.count;i<r;i++)pg.fromBufferAttribute(e,i-1),mg.fromBufferAttribute(e,i),t[i]=t[i-1],t[i]+=pg.distanceTo(mg);n.setAttribute("lineDistance",new We(t,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else n.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this},raycast:function(n,e){const t=this.geometry,i=this.matrixWorld,r=n.params.Line.threshold;if(t.boundingSphere===null&&t.computeBoundingSphere(),Zl.copy(t.boundingSphere),Zl.applyMatrix4(i),Zl.radius+=r,n.ray.intersectsSphere(Zl)===!1)return;xg.copy(i).invert(),sh.copy(n.ray).applyMatrix4(xg);const s=r/((this.scale.x+this.scale.y+this.scale.z)/3),a=s*s,o=new O,l=new O,c=new O,d=new O,u=this.isLineSegments?2:1;if(t.isBufferGeometry){const f=t.index,m=t.attributes.position;if(f!==null){const x=f.array;for(let p=0,v=x.length-1;p<v;p+=u){const g=x[p],_=x[p+1];if(o.fromBufferAttribute(m,g),l.fromBufferAttribute(m,_),sh.distanceSqToSegment(o,l,d,c)>a)continue;d.applyMatrix4(this.matrixWorld);const M=n.ray.origin.distanceTo(d);M<n.near||M>n.far||e.push({distance:M,point:c.clone().applyMatrix4(this.matrixWorld),index:p,face:null,faceIndex:null,object:this})}}else for(let x=0,p=m.count-1;x<p;x+=u){if(o.fromBufferAttribute(m,x),l.fromBufferAttribute(m,x+1),sh.distanceSqToSegment(o,l,d,c)>a)continue;d.applyMatrix4(this.matrixWorld);const g=n.ray.origin.distanceTo(d);g<n.near||g>n.far||e.push({distance:g,point:c.clone().applyMatrix4(this.matrixWorld),index:x,face:null,faceIndex:null,object:this})}}else t.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")},updateMorphTargets:function(){const n=this.geometry;if(n.isBufferGeometry){const e=n.morphAttributes,t=Object.keys(e);if(t.length>0){const i=e[t[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=i.length;r<s;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}else{const e=n.morphTargets;e!==void 0&&e.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});const gg=new O,vg=new O;function un(n,e){Nn.call(this,n,e),this.type="LineSegments"}un.prototype=Object.assign(Object.create(Nn.prototype),{constructor:un,isLineSegments:!0,computeLineDistances:function(){const n=this.geometry;if(n.isBufferGeometry)if(n.index===null){const e=n.attributes.position,t=[];for(let i=0,r=e.count;i<r;i+=2)gg.fromBufferAttribute(e,i),vg.fromBufferAttribute(e,i+1),t[i]=i===0?0:t[i-1],t[i+1]=t[i]+gg.distanceTo(vg);n.setAttribute("lineDistance",new We(t,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else n.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}});function qd(n,e){Nn.call(this,n,e),this.type="LineLoop"}qd.prototype=Object.assign(Object.create(Nn.prototype),{constructor:qd,isLineLoop:!0});function ti(n){Qe.call(this),this.type="PointsMaterial",this.color=new Ve(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(n)}ti.prototype=Object.create(Qe.prototype);ti.prototype.constructor=ti;ti.prototype.isPointsMaterial=!0;ti.prototype.copy=function(n){return Qe.prototype.copy.call(this,n),this.color.copy(n.color),this.map=n.map,this.alphaMap=n.alphaMap,this.size=n.size,this.sizeAttenuation=n.sizeAttenuation,this.morphTargets=n.morphTargets,this};const yg=new ot,a0=new fo,Jl=new qr,Kl=new O;function $a(n=new Ye,e=new ti){je.call(this),this.type="Points",this.geometry=n,this.material=e,this.updateMorphTargets()}$a.prototype=Object.assign(Object.create(je.prototype),{constructor:$a,isPoints:!0,copy:function(n){return je.prototype.copy.call(this,n),this.material=n.material,this.geometry=n.geometry,this},raycast:function(n,e){const t=this.geometry,i=this.matrixWorld,r=n.params.Points.threshold;if(t.boundingSphere===null&&t.computeBoundingSphere(),Jl.copy(t.boundingSphere),Jl.applyMatrix4(i),Jl.radius+=r,n.ray.intersectsSphere(Jl)===!1)return;yg.copy(i).invert(),a0.copy(n.ray).applyMatrix4(yg);const s=r/((this.scale.x+this.scale.y+this.scale.z)/3),a=s*s;if(t.isBufferGeometry){const o=t.index,c=t.attributes.position;if(o!==null){const d=o.array;for(let u=0,f=d.length;u<f;u++){const h=d[u];Kl.fromBufferAttribute(c,h),bg(Kl,h,a,i,n,e,this)}}else for(let d=0,u=c.count;d<u;d++)Kl.fromBufferAttribute(c,d),bg(Kl,d,a,i,n,e,this)}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")},updateMorphTargets:function(){const n=this.geometry;if(n.isBufferGeometry){const e=n.morphAttributes,t=Object.keys(e);if(t.length>0){const i=e[t[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=i.length;r<s;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}else{const e=n.morphTargets;e!==void 0&&e.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});function bg(n,e,t,i,r,s,a){const o=a0.distanceSqToPoint(n);if(o<t){const l=new O;a0.closestPointToPoint(n,l),l.applyMatrix4(i);const c=r.ray.origin.distanceTo(l);if(c<r.near||c>r.far)return;s.push({distance:c,distanceToRay:Math.sqrt(o),point:l,index:e,face:null,object:a})}}function o0(n,e,t,i,r,s,a,o,l){yt.call(this,n,e,t,i,r,s,a,o,l),this.format=a!==void 0?a:_r,this.minFilter=s!==void 0?s:Vt,this.magFilter=r!==void 0?r:Vt,this.generateMipmaps=!1;const c=this;function d(){c.needsUpdate=!0,n.requestVideoFrameCallback(d)}"requestVideoFrameCallback"in n&&n.requestVideoFrameCallback(d)}o0.prototype=Object.assign(Object.create(yt.prototype),{constructor:o0,clone:function(){return new this.constructor(this.image).copy(this)},isVideoTexture:!0,update:function(){const n=this.image;"requestVideoFrameCallback"in n===!1&&n.readyState>=n.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}});function ja(n,e,t,i,r,s,a,o,l,c,d,u){yt.call(this,null,s,a,o,l,c,i,r,d,u),this.image={width:e,height:t},this.mipmaps=n,this.flipY=!1,this.generateMipmaps=!1}ja.prototype=Object.create(yt.prototype);ja.prototype.constructor=ja;ja.prototype.isCompressedTexture=!0;function gc(n,e,t,i,r,s,a,o,l){yt.call(this,n,e,t,i,r,s,a,o,l),this.needsUpdate=!0}gc.prototype=Object.create(yt.prototype);gc.prototype.constructor=gc;gc.prototype.isCanvasTexture=!0;function vc(n,e,t,i,r,s,a,o,l,c){if(c=c!==void 0?c:xs,c!==xs&&c!==ka)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");t===void 0&&c===xs&&(t=ec),t===void 0&&c===ka&&(t=Oa),yt.call(this,null,i,r,s,a,o,c,t,l),this.image={width:n,height:e},this.magFilter=a!==void 0?a:Ut,this.minFilter=o!==void 0?o:Ut,this.flipY=!1,this.generateMipmaps=!1}vc.prototype=Object.create(yt.prototype);vc.prototype.constructor=vc;vc.prototype.isDepthTexture=!0;class Nd extends Ye{constructor(e=1,t=8,i=0,r=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:i,thetaLength:r},t=Math.max(3,t);const s=[],a=[],o=[],l=[],c=new O,d=new Le;a.push(0,0,0),o.push(0,0,1),l.push(.5,.5);for(let u=0,f=3;u<=t;u++,f+=3){const h=i+u/t*r;c.x=e*Math.cos(h),c.y=e*Math.sin(h),a.push(c.x,c.y,c.z),o.push(0,0,1),d.x=(a[f]/e+1)/2,d.y=(a[f+1]/e+1)/2,l.push(d.x,d.y)}for(let u=1;u<=t;u++)s.push(u,u+1,0);this.setIndex(s),this.setAttribute("position",new We(a,3)),this.setAttribute("normal",new We(o,3)),this.setAttribute("uv",new We(l,2))}}class Xa extends Ye{constructor(e=1,t=1,i=1,r=8,s=1,a=!1,o=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:i,radialSegments:r,heightSegments:s,openEnded:a,thetaStart:o,thetaLength:l};const c=this;r=Math.floor(r),s=Math.floor(s);const d=[],u=[],f=[],h=[];let m=0;const x=[],p=i/2;let v=0;g(),a===!1&&(e>0&&_(!0),t>0&&_(!1)),this.setIndex(d),this.setAttribute("position",new We(u,3)),this.setAttribute("normal",new We(f,3)),this.setAttribute("uv",new We(h,2));function g(){const y=new O,M=new O;let w=0;const b=(t-e)/i;for(let S=0;S<=s;S++){const E=[],C=S/s,I=C*(t-e)+e;for(let W=0;W<=r;W++){const H=W/r,A=H*l+o,q=Math.sin(A),N=Math.cos(A);M.x=I*q,M.y=-C*i+p,M.z=I*N,u.push(M.x,M.y,M.z),y.set(q,b,N).normalize(),f.push(y.x,y.y,y.z),h.push(H,1-C),E.push(m++)}x.push(E)}for(let S=0;S<r;S++)for(let E=0;E<s;E++){const C=x[E][S],I=x[E+1][S],W=x[E+1][S+1],H=x[E][S+1];d.push(C,I,H),d.push(I,W,H),w+=6}c.addGroup(v,w,0),v+=w}function _(y){const M=m,w=new Le,b=new O;let S=0;const E=y===!0?e:t,C=y===!0?1:-1;for(let W=1;W<=r;W++)u.push(0,p*C,0),f.push(0,C,0),h.push(.5,.5),m++;const I=m;for(let W=0;W<=r;W++){const A=W/r*l+o,q=Math.cos(A),N=Math.sin(A);b.x=E*N,b.y=p*C,b.z=E*q,u.push(b.x,b.y,b.z),f.push(0,C,0),w.x=q*.5+.5,w.y=N*.5*C+.5,h.push(w.x,w.y),m++}for(let W=0;W<r;W++){const H=M+W,A=I+W;y===!0?d.push(A,A+1,H):d.push(A+1,A,H),S+=3}c.addGroup(v,S,y===!0?1:2),v+=S}}}class Bd extends Xa{constructor(e=1,t=1,i=8,r=1,s=!1,a=0,o=Math.PI*2){super(0,e,t,i,r,s,a,o),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:i,heightSegments:r,openEnded:s,thetaStart:a,thetaLength:o}}}class Pr extends Ye{constructor(e,t,i=1,r=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:i,detail:r};const s=[],a=[];o(r),c(i),d(),this.setAttribute("position",new We(s,3)),this.setAttribute("normal",new We(s.slice(),3)),this.setAttribute("uv",new We(a,2)),r===0?this.computeVertexNormals():this.normalizeNormals();function o(g){const _=new O,y=new O,M=new O;for(let w=0;w<t.length;w+=3)h(t[w+0],_),h(t[w+1],y),h(t[w+2],M),l(_,y,M,g)}function l(g,_,y,M){const w=M+1,b=[];for(let S=0;S<=w;S++){b[S]=[];const E=g.clone().lerp(y,S/w),C=_.clone().lerp(y,S/w),I=w-S;for(let W=0;W<=I;W++)W===0&&S===w?b[S][W]=E:b[S][W]=E.clone().lerp(C,W/I)}for(let S=0;S<w;S++)for(let E=0;E<2*(w-S)-1;E++){const C=Math.floor(E/2);E%2===0?(f(b[S][C+1]),f(b[S+1][C]),f(b[S][C])):(f(b[S][C+1]),f(b[S+1][C+1]),f(b[S+1][C]))}}function c(g){const _=new O;for(let y=0;y<s.length;y+=3)_.x=s[y+0],_.y=s[y+1],_.z=s[y+2],_.normalize().multiplyScalar(g),s[y+0]=_.x,s[y+1]=_.y,s[y+2]=_.z}function d(){const g=new O;for(let _=0;_<s.length;_+=3){g.x=s[_+0],g.y=s[_+1],g.z=s[_+2];const y=p(g)/2/Math.PI+.5,M=v(g)/Math.PI+.5;a.push(y,1-M)}m(),u()}function u(){for(let g=0;g<a.length;g+=6){const _=a[g+0],y=a[g+2],M=a[g+4],w=Math.max(_,y,M),b=Math.min(_,y,M);w>.9&&b<.1&&(_<.2&&(a[g+0]+=1),y<.2&&(a[g+2]+=1),M<.2&&(a[g+4]+=1))}}function f(g){s.push(g.x,g.y,g.z)}function h(g,_){const y=g*3;_.x=e[y+0],_.y=e[y+1],_.z=e[y+2]}function m(){const g=new O,_=new O,y=new O,M=new O,w=new Le,b=new Le,S=new Le;for(let E=0,C=0;E<s.length;E+=9,C+=6){g.set(s[E+0],s[E+1],s[E+2]),_.set(s[E+3],s[E+4],s[E+5]),y.set(s[E+6],s[E+7],s[E+8]),w.set(a[C+0],a[C+1]),b.set(a[C+2],a[C+3]),S.set(a[C+4],a[C+5]),M.copy(g).add(_).add(y).divideScalar(3);const I=p(M);x(w,C+0,g,I),x(b,C+2,_,I),x(S,C+4,y,I)}}function x(g,_,y,M){M<0&&g.x===1&&(a[_]=g.x-1),y.x===0&&y.z===0&&(a[_]=M/2/Math.PI+.5)}function p(g){return Math.atan2(g.z,-g.x)}function v(g){return Math.atan2(-g.y,Math.sqrt(g.x*g.x+g.z*g.z))}}}class Ud extends Pr{constructor(e=1,t=0){const i=(1+Math.sqrt(5))/2,r=1/i,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-i,0,-r,i,0,r,-i,0,r,i,-r,-i,0,-r,i,0,r,-i,0,r,i,0,-i,0,-r,i,0,-r,-i,0,r,i,0,r],a=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,a,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}}const Ql=new O,ed=new O,ah=new O,td=new Kt;class up extends Ye{constructor(e,t){if(super(),this.type="EdgesGeometry",this.parameters={thresholdAngle:t},t=t!==void 0?t:1,e.isGeometry===!0){console.error("THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return}const r=Math.pow(10,4),s=Math.cos(tt.DEG2RAD*t),a=e.getIndex(),o=e.getAttribute("position"),l=a?a.count:o.count,c=[0,0,0],d=["a","b","c"],u=new Array(3),f={},h=[];for(let m=0;m<l;m+=3){a?(c[0]=a.getX(m),c[1]=a.getX(m+1),c[2]=a.getX(m+2)):(c[0]=m,c[1]=m+1,c[2]=m+2);const{a:x,b:p,c:v}=td;if(x.fromBufferAttribute(o,c[0]),p.fromBufferAttribute(o,c[1]),v.fromBufferAttribute(o,c[2]),td.getNormal(ah),u[0]=`${Math.round(x.x*r)},${Math.round(x.y*r)},${Math.round(x.z*r)}`,u[1]=`${Math.round(p.x*r)},${Math.round(p.y*r)},${Math.round(p.z*r)}`,u[2]=`${Math.round(v.x*r)},${Math.round(v.y*r)},${Math.round(v.z*r)}`,!(u[0]===u[1]||u[1]===u[2]||u[2]===u[0]))for(let g=0;g<3;g++){const _=(g+1)%3,y=u[g],M=u[_],w=td[d[g]],b=td[d[_]],S=`${y}_${M}`,E=`${M}_${y}`;E in f&&f[E]?(ah.dot(f[E].normal)<=s&&(h.push(w.x,w.y,w.z),h.push(b.x,b.y,b.z)),f[E]=null):S in f||(f[S]={index0:c[g],index1:c[_],normal:ah.clone()})}}for(const m in f)if(f[m]){const{index0:x,index1:p}=f[m];Ql.fromBufferAttribute(o,x),ed.fromBufferAttribute(o,p),h.push(Ql.x,Ql.y,Ql.z),h.push(ed.x,ed.y,ed.z)}this.setAttribute("position",new We(h,3))}}const kC={triangulate:function(n,e,t){t=t||2;const i=e&&e.length,r=i?e[0]*t:n.length;let s=P2(n,0,r,t,!0);const a=[];if(!s||s.next===s.prev)return a;let o,l,c,d,u,f,h;if(i&&(s=jC(n,e,s,t)),n.length>80*t){o=c=n[0],l=d=n[1];for(let m=t;m<r;m+=t)u=n[m],f=n[m+1],u<o&&(o=u),f<l&&(l=f),u>c&&(c=u),f>d&&(d=f);h=Math.max(c-o,d-l),h=h!==0?1/h:0}return yc(s,a,t,o,l,h),a}};function P2(n,e,t,i,r){let s,a;if(r===rR(n,e,t,i)>0)for(s=e;s<t;s+=i)a=_g(s,n[s],n[s+1],a);else for(s=t-i;s>=e;s-=i)a=_g(s,n[s],n[s+1],a);return a&&Tu(a,a.next)&&(_c(a),a=a.next),a}function Ir(n,e){if(!n)return n;e||(e=n);let t=n,i;do if(i=!1,!t.steiner&&(Tu(t,t.next)||Rt(t.prev,t,t.next)===0)){if(_c(t),t=e=t.prev,t===t.next)break;i=!0}else t=t.next;while(i||t!==e);return e}function yc(n,e,t,i,r,s,a){if(!n)return;!a&&s&&KC(n,i,r,s);let o=n,l,c;for(;n.prev!==n.next;){if(l=n.prev,c=n.next,s?VC(n,i,r,s):HC(n)){e.push(l.i/t),e.push(n.i/t),e.push(c.i/t),_c(n),n=c.next,o=c.next;continue}if(n=c,n===o){a?a===1?(n=WC(Ir(n),e,t),yc(n,e,t,i,r,s,2)):a===2&&$C(n,e,t,i,r,s):yc(Ir(n),e,t,i,r,s,1);break}}}function HC(n){const e=n.prev,t=n,i=n.next;if(Rt(e,t,i)>=0)return!1;let r=n.next.next;for(;r!==n.prev;){if(Ra(e.x,e.y,t.x,t.y,i.x,i.y,r.x,r.y)&&Rt(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function VC(n,e,t,i){const r=n.prev,s=n,a=n.next;if(Rt(r,s,a)>=0)return!1;const o=r.x<s.x?r.x<a.x?r.x:a.x:s.x<a.x?s.x:a.x,l=r.y<s.y?r.y<a.y?r.y:a.y:s.y<a.y?s.y:a.y,c=r.x>s.x?r.x>a.x?r.x:a.x:s.x>a.x?s.x:a.x,d=r.y>s.y?r.y>a.y?r.y:a.y:s.y>a.y?s.y:a.y,u=c0(o,l,e,t,i),f=c0(c,d,e,t,i);let h=n.prevZ,m=n.nextZ;for(;h&&h.z>=u&&m&&m.z<=f;){if(h!==n.prev&&h!==n.next&&Ra(r.x,r.y,s.x,s.y,a.x,a.y,h.x,h.y)&&Rt(h.prev,h,h.next)>=0||(h=h.prevZ,m!==n.prev&&m!==n.next&&Ra(r.x,r.y,s.x,s.y,a.x,a.y,m.x,m.y)&&Rt(m.prev,m,m.next)>=0))return!1;m=m.nextZ}for(;h&&h.z>=u;){if(h!==n.prev&&h!==n.next&&Ra(r.x,r.y,s.x,s.y,a.x,a.y,h.x,h.y)&&Rt(h.prev,h,h.next)>=0)return!1;h=h.prevZ}for(;m&&m.z<=f;){if(m!==n.prev&&m!==n.next&&Ra(r.x,r.y,s.x,s.y,a.x,a.y,m.x,m.y)&&Rt(m.prev,m,m.next)>=0)return!1;m=m.nextZ}return!0}function WC(n,e,t){let i=n;do{const r=i.prev,s=i.next.next;!Tu(r,s)&&I2(r,i,i.next,s)&&bc(r,s)&&bc(s,r)&&(e.push(r.i/t),e.push(i.i/t),e.push(s.i/t),_c(i),_c(i.next),i=n=s),i=i.next}while(i!==n);return Ir(i)}function $C(n,e,t,i,r,s){let a=n;do{let o=a.next.next;for(;o!==a.prev;){if(a.i!==o.i&&tR(a,o)){let l=D2(a,o);a=Ir(a,a.next),l=Ir(l,l.next),yc(a,e,t,i,r,s),yc(l,e,t,i,r,s);return}o=o.next}a=a.next}while(a!==n)}function jC(n,e,t,i){const r=[];let s,a,o,l,c;for(s=0,a=e.length;s<a;s++)o=e[s]*i,l=s<a-1?e[s+1]*i:n.length,c=P2(n,o,l,i,!1),c===c.next&&(c.steiner=!0),r.push(eR(c));for(r.sort(XC),s=0;s<r.length;s++)YC(r[s],t),t=Ir(t,t.next);return t}function XC(n,e){return n.x-e.x}function YC(n,e){if(e=ZC(n,e),e){const t=D2(e,n);Ir(e,e.next),Ir(t,t.next)}}function ZC(n,e){let t=e;const i=n.x,r=n.y;let s=-1/0,a;do{if(r<=t.y&&r>=t.next.y&&t.next.y!==t.y){const f=t.x+(r-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(f<=i&&f>s){if(s=f,f===i){if(r===t.y)return t;if(r===t.next.y)return t.next}a=t.x<t.next.x?t:t.next}}t=t.next}while(t!==e);if(!a)return null;if(i===s)return a;const o=a,l=a.x,c=a.y;let d=1/0,u;t=a;do i>=t.x&&t.x>=l&&i!==t.x&&Ra(r<c?i:s,r,l,c,r<c?s:i,r,t.x,t.y)&&(u=Math.abs(r-t.y)/(i-t.x),bc(t,n)&&(u<d||u===d&&(t.x>a.x||t.x===a.x&&JC(a,t)))&&(a=t,d=u)),t=t.next;while(t!==o);return a}function JC(n,e){return Rt(n.prev,n,e.prev)<0&&Rt(e.next,n,n.next)<0}function KC(n,e,t,i){let r=n;do r.z===null&&(r.z=c0(r.x,r.y,e,t,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==n);r.prevZ.nextZ=null,r.prevZ=null,QC(r)}function QC(n){let e,t,i,r,s,a,o,l,c=1;do{for(t=n,n=null,s=null,a=0;t;){for(a++,i=t,o=0,e=0;e<c&&(o++,i=i.nextZ,!!i);e++);for(l=c;o>0||l>0&&i;)o!==0&&(l===0||!i||t.z<=i.z)?(r=t,t=t.nextZ,o--):(r=i,i=i.nextZ,l--),s?s.nextZ=r:n=r,r.prevZ=s,s=r;t=i}s.nextZ=null,c*=2}while(a>1);return n}function c0(n,e,t,i,r){return n=32767*(n-t)*r,e=32767*(e-i)*r,n=(n|n<<8)&16711935,n=(n|n<<4)&252645135,n=(n|n<<2)&858993459,n=(n|n<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,n|e<<1}function eR(n){let e=n,t=n;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==n);return t}function Ra(n,e,t,i,r,s,a,o){return(r-a)*(e-o)-(n-a)*(s-o)>=0&&(n-a)*(i-o)-(t-a)*(e-o)>=0&&(t-a)*(s-o)-(r-a)*(i-o)>=0}function tR(n,e){return n.next.i!==e.i&&n.prev.i!==e.i&&!nR(n,e)&&(bc(n,e)&&bc(e,n)&&iR(n,e)&&(Rt(n.prev,n,e.prev)||Rt(n,e.prev,e))||Tu(n,e)&&Rt(n.prev,n,n.next)>0&&Rt(e.prev,e,e.next)>0)}function Rt(n,e,t){return(e.y-n.y)*(t.x-e.x)-(e.x-n.x)*(t.y-e.y)}function Tu(n,e){return n.x===e.x&&n.y===e.y}function I2(n,e,t,i){const r=id(Rt(n,e,t)),s=id(Rt(n,e,i)),a=id(Rt(t,i,n)),o=id(Rt(t,i,e));return!!(r!==s&&a!==o||r===0&&nd(n,t,e)||s===0&&nd(n,i,e)||a===0&&nd(t,n,i)||o===0&&nd(t,e,i))}function nd(n,e,t){return e.x<=Math.max(n.x,t.x)&&e.x>=Math.min(n.x,t.x)&&e.y<=Math.max(n.y,t.y)&&e.y>=Math.min(n.y,t.y)}function id(n){return n>0?1:n<0?-1:0}function nR(n,e){let t=n;do{if(t.i!==n.i&&t.next.i!==n.i&&t.i!==e.i&&t.next.i!==e.i&&I2(t,t.next,n,e))return!0;t=t.next}while(t!==n);return!1}function bc(n,e){return Rt(n.prev,n,n.next)<0?Rt(n,e,n.next)>=0&&Rt(n,n.prev,e)>=0:Rt(n,e,n.prev)<0||Rt(n,n.next,e)<0}function iR(n,e){let t=n,i=!1;const r=(n.x+e.x)/2,s=(n.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&r<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(i=!i),t=t.next;while(t!==n);return i}function D2(n,e){const t=new l0(n.i,n.x,n.y),i=new l0(e.i,e.x,e.y),r=n.next,s=e.prev;return n.next=e,e.prev=n,t.next=r,r.prev=t,i.next=t,t.prev=i,s.next=i,i.prev=s,i}function _g(n,e,t,i){const r=new l0(n,e,t);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function _c(n){n.next.prev=n.prev,n.prev.next=n.next,n.prevZ&&(n.prevZ.nextZ=n.nextZ),n.nextZ&&(n.nextZ.prevZ=n.prevZ)}function l0(n,e,t){this.i=n,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function rR(n,e,t,i){let r=0;for(let s=e,a=t-i;s<t;s+=i)r+=(n[a]-n[s])*(n[s+1]+n[a+1]),a=s;return r}const Xi={area:function(n){const e=n.length;let t=0;for(let i=e-1,r=0;r<e;i=r++)t+=n[i].x*n[r].y-n[r].x*n[i].y;return t*.5},isClockWise:function(n){return Xi.area(n)<0},triangulateShape:function(n,e){const t=[],i=[],r=[];wg(n),Mg(t,n);let s=n.length;e.forEach(wg);for(let o=0;o<e.length;o++)i.push(s),s+=e[o].length,Mg(t,e[o]);const a=kC.triangulate(t,i);for(let o=0;o<a.length;o+=3)r.push(a.slice(o,o+3));return r}};function wg(n){const e=n.length;e>2&&n[e-1].equals(n[0])&&n.pop()}function Mg(n,e){for(let t=0;t<e.length;t++)n.push(e[t].x),n.push(e[t].y)}class As extends Ye{constructor(e,t){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const i=this,r=[],s=[];for(let o=0,l=e.length;o<l;o++){const c=e[o];a(c)}this.setAttribute("position",new We(r,3)),this.setAttribute("uv",new We(s,2)),this.computeVertexNormals();function a(o){const l=[],c=t.curveSegments!==void 0?t.curveSegments:12,d=t.steps!==void 0?t.steps:1;let u=t.depth!==void 0?t.depth:100,f=t.bevelEnabled!==void 0?t.bevelEnabled:!0,h=t.bevelThickness!==void 0?t.bevelThickness:6,m=t.bevelSize!==void 0?t.bevelSize:h-2,x=t.bevelOffset!==void 0?t.bevelOffset:0,p=t.bevelSegments!==void 0?t.bevelSegments:3;const v=t.extrudePath,g=t.UVGenerator!==void 0?t.UVGenerator:sR;t.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),u=t.amount);let _,y=!1,M,w,b,S;v&&(_=v.getSpacedPoints(d),y=!0,f=!1,M=v.computeFrenetFrames(d,!1),w=new O,b=new O,S=new O),f||(p=0,h=0,m=0,x=0);const E=o.extractPoints(c);let C=E.shape;const I=E.holes;if(!Xi.isClockWise(C)){C=C.reverse();for(let me=0,xe=I.length;me<xe;me++){const Ee=I[me];Xi.isClockWise(Ee)&&(I[me]=Ee.reverse())}}const H=Xi.triangulateShape(C,I),A=C;for(let me=0,xe=I.length;me<xe;me++){const Ee=I[me];C=C.concat(Ee)}function q(me,xe,Ee){return xe||console.error("THREE.ExtrudeGeometry: vec does not exist"),xe.clone().multiplyScalar(Ee).add(me)}const N=C.length,X=H.length;function Z(me,xe,Ee){let Fe,Pe,U;const D=me.x-xe.x,be=me.y-xe.y,Me=Ee.x-me.x,Y=Ee.y-me.y,L=D*D+be*be,T=D*Y-be*Me;if(Math.abs(T)>Number.EPSILON){const ne=Math.sqrt(L),se=Math.sqrt(Me*Me+Y*Y),de=xe.x-be/ne,ye=xe.y+D/ne,De=Ee.x-Y/se,Q=Ee.y+Me/se,Te=((De-de)*Y-(Q-ye)*Me)/(D*Y-be*Me);Fe=de+D*Te-me.x,Pe=ye+be*Te-me.y;const Ce=Fe*Fe+Pe*Pe;if(Ce<=2)return new Le(Fe,Pe);U=Math.sqrt(Ce/2)}else{let ne=!1;D>Number.EPSILON?Me>Number.EPSILON&&(ne=!0):D<-Number.EPSILON?Me<-Number.EPSILON&&(ne=!0):Math.sign(be)===Math.sign(Y)&&(ne=!0),ne?(Fe=-be,Pe=D,U=Math.sqrt(L)):(Fe=D,Pe=be,U=Math.sqrt(L/2))}return new Le(Fe/U,Pe/U)}const $=[];for(let me=0,xe=A.length,Ee=xe-1,Fe=me+1;me<xe;me++,Ee++,Fe++)Ee===xe&&(Ee=0),Fe===xe&&(Fe=0),$[me]=Z(A[me],A[Ee],A[Fe]);const J=[];let R,k=$.concat();for(let me=0,xe=I.length;me<xe;me++){const Ee=I[me];R=[];for(let Fe=0,Pe=Ee.length,U=Pe-1,D=Fe+1;Fe<Pe;Fe++,U++,D++)U===Pe&&(U=0),D===Pe&&(D=0),R[Fe]=Z(Ee[Fe],Ee[U],Ee[D]);J.push(R),k=k.concat(R)}for(let me=0;me<p;me++){const xe=me/p,Ee=h*Math.cos(xe*Math.PI/2),Fe=m*Math.sin(xe*Math.PI/2)+x;for(let Pe=0,U=A.length;Pe<U;Pe++){const D=q(A[Pe],$[Pe],Fe);Re(D.x,D.y,-Ee)}for(let Pe=0,U=I.length;Pe<U;Pe++){const D=I[Pe];R=J[Pe];for(let be=0,Me=D.length;be<Me;be++){const Y=q(D[be],R[be],Fe);Re(Y.x,Y.y,-Ee)}}}const j=m+x;for(let me=0;me<N;me++){const xe=f?q(C[me],k[me],j):C[me];y?(b.copy(M.normals[0]).multiplyScalar(xe.x),w.copy(M.binormals[0]).multiplyScalar(xe.y),S.copy(_[0]).add(b).add(w),Re(S.x,S.y,S.z)):Re(xe.x,xe.y,0)}for(let me=1;me<=d;me++)for(let xe=0;xe<N;xe++){const Ee=f?q(C[xe],k[xe],j):C[xe];y?(b.copy(M.normals[me]).multiplyScalar(Ee.x),w.copy(M.binormals[me]).multiplyScalar(Ee.y),S.copy(_[me]).add(b).add(w),Re(S.x,S.y,S.z)):Re(Ee.x,Ee.y,u/d*me)}for(let me=p-1;me>=0;me--){const xe=me/p,Ee=h*Math.cos(xe*Math.PI/2),Fe=m*Math.sin(xe*Math.PI/2)+x;for(let Pe=0,U=A.length;Pe<U;Pe++){const D=q(A[Pe],$[Pe],Fe);Re(D.x,D.y,u+Ee)}for(let Pe=0,U=I.length;Pe<U;Pe++){const D=I[Pe];R=J[Pe];for(let be=0,Me=D.length;be<Me;be++){const Y=q(D[be],R[be],Fe);y?Re(Y.x,Y.y+_[d-1].y,_[d-1].x+Ee):Re(Y.x,Y.y,u+Ee)}}}K(),B();function K(){const me=r.length/3;if(f){let xe=0,Ee=N*xe;for(let Fe=0;Fe<X;Fe++){const Pe=H[Fe];Ae(Pe[2]+Ee,Pe[1]+Ee,Pe[0]+Ee)}xe=d+p*2,Ee=N*xe;for(let Fe=0;Fe<X;Fe++){const Pe=H[Fe];Ae(Pe[0]+Ee,Pe[1]+Ee,Pe[2]+Ee)}}else{for(let xe=0;xe<X;xe++){const Ee=H[xe];Ae(Ee[2],Ee[1],Ee[0])}for(let xe=0;xe<X;xe++){const Ee=H[xe];Ae(Ee[0]+N*d,Ee[1]+N*d,Ee[2]+N*d)}}i.addGroup(me,r.length/3-me,0)}function B(){const me=r.length/3;let xe=0;oe(A,xe),xe+=A.length;for(let Ee=0,Fe=I.length;Ee<Fe;Ee++){const Pe=I[Ee];oe(Pe,xe),xe+=Pe.length}i.addGroup(me,r.length/3-me,1)}function oe(me,xe){let Ee=me.length;for(;--Ee>=0;){const Fe=Ee;let Pe=Ee-1;Pe<0&&(Pe=me.length-1);for(let U=0,D=d+p*2;U<D;U++){const be=N*U,Me=N*(U+1),Y=xe+Fe+be,L=xe+Pe+be,T=xe+Pe+Me,ne=xe+Fe+Me;pe(Y,L,T,ne)}}}function Re(me,xe,Ee){l.push(me),l.push(xe),l.push(Ee)}function Ae(me,xe,Ee){_e(me),_e(xe),_e(Ee);const Fe=r.length/3,Pe=g.generateTopUV(i,r,Fe-3,Fe-2,Fe-1);Ie(Pe[0]),Ie(Pe[1]),Ie(Pe[2])}function pe(me,xe,Ee,Fe){_e(me),_e(xe),_e(Fe),_e(xe),_e(Ee),_e(Fe);const Pe=r.length/3,U=g.generateSideWallUV(i,r,Pe-6,Pe-3,Pe-2,Pe-1);Ie(U[0]),Ie(U[1]),Ie(U[3]),Ie(U[1]),Ie(U[2]),Ie(U[3])}function _e(me){r.push(l[me*3+0]),r.push(l[me*3+1]),r.push(l[me*3+2])}function Ie(me){s.push(me.x),s.push(me.y)}}}toJSON(){const e=Ye.prototype.toJSON.call(this),t=this.parameters.shapes,i=this.parameters.options;return aR(t,i,e)}}const sR={generateTopUV:function(n,e,t,i,r){const s=e[t*3],a=e[t*3+1],o=e[i*3],l=e[i*3+1],c=e[r*3],d=e[r*3+1];return[new Le(s,a),new Le(o,l),new Le(c,d)]},generateSideWallUV:function(n,e,t,i,r,s){const a=e[t*3],o=e[t*3+1],l=e[t*3+2],c=e[i*3],d=e[i*3+1],u=e[i*3+2],f=e[r*3],h=e[r*3+1],m=e[r*3+2],x=e[s*3],p=e[s*3+1],v=e[s*3+2];return Math.abs(o-d)<.01?[new Le(a,1-l),new Le(c,1-u),new Le(f,1-m),new Le(x,1-v)]:[new Le(o,1-l),new Le(d,1-u),new Le(h,1-m),new Le(p,1-v)]}};function aR(n,e,t){if(t.shapes=[],Array.isArray(n))for(let i=0,r=n.length;i<r;i++){const s=n[i];t.shapes.push(s.uuid)}else t.shapes.push(n.uuid);return e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class Gd extends Pr{constructor(e=1,t=0){const i=(1+Math.sqrt(5))/2,r=[-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(r,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}}class kd extends Ye{constructor(e,t=12,i=0,r=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:i,phiLength:r},t=Math.floor(t),r=tt.clamp(r,0,Math.PI*2);const s=[],a=[],o=[],l=1/t,c=new O,d=new Le;for(let u=0;u<=t;u++){const f=i+u*l*r,h=Math.sin(f),m=Math.cos(f);for(let x=0;x<=e.length-1;x++)c.x=e[x].x*h,c.y=e[x].y,c.z=e[x].x*m,a.push(c.x,c.y,c.z),d.x=u/t,d.y=x/(e.length-1),o.push(d.x,d.y)}for(let u=0;u<t;u++)for(let f=0;f<e.length-1;f++){const h=f+u*e.length,m=h,x=h+e.length,p=h+e.length+1,v=h+1;s.push(m,x,v),s.push(x,p,v)}if(this.setIndex(s),this.setAttribute("position",new We(a,3)),this.setAttribute("uv",new We(o,2)),this.computeVertexNormals(),r===Math.PI*2){const u=this.attributes.normal.array,f=new O,h=new O,m=new O,x=t*e.length*3;for(let p=0,v=0;p<e.length;p++,v+=3)f.x=u[v+0],f.y=u[v+1],f.z=u[v+2],h.x=u[x+v+0],h.y=u[x+v+1],h.z=u[x+v+2],m.addVectors(f,h).normalize(),u[v+0]=u[x+v+0]=m.x,u[v+1]=u[x+v+1]=m.y,u[v+2]=u[x+v+2]=m.z}}}class wc extends Pr{constructor(e=1,t=0){const i=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],r=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(i,r,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}}function Ls(n,e,t){Ye.call(this),this.type="ParametricGeometry",this.parameters={func:n,slices:e,stacks:t};const i=[],r=[],s=[],a=[],o=1e-5,l=new O,c=new O,d=new O,u=new O,f=new O;n.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const h=e+1;for(let m=0;m<=t;m++){const x=m/t;for(let p=0;p<=e;p++){const v=p/e;n(v,x,c),r.push(c.x,c.y,c.z),v-o>=0?(n(v-o,x,d),u.subVectors(c,d)):(n(v+o,x,d),u.subVectors(d,c)),x-o>=0?(n(v,x-o,d),f.subVectors(c,d)):(n(v,x+o,d),f.subVectors(d,c)),l.crossVectors(u,f).normalize(),s.push(l.x,l.y,l.z),a.push(v,x)}}for(let m=0;m<t;m++)for(let x=0;x<e;x++){const p=m*h+x,v=m*h+x+1,g=(m+1)*h+x+1,_=(m+1)*h+x;i.push(p,v,_),i.push(v,g,_)}this.setIndex(i),this.setAttribute("position",new We(r,3)),this.setAttribute("normal",new We(s,3)),this.setAttribute("uv",new We(a,2))}Ls.prototype=Object.create(Ye.prototype);Ls.prototype.constructor=Ls;class Hd extends Ye{constructor(e=.5,t=1,i=8,r=1,s=0,a=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:i,phiSegments:r,thetaStart:s,thetaLength:a},i=Math.max(3,i),r=Math.max(1,r);const o=[],l=[],c=[],d=[];let u=e;const f=(t-e)/r,h=new O,m=new Le;for(let x=0;x<=r;x++){for(let p=0;p<=i;p++){const v=s+p/i*a;h.x=u*Math.cos(v),h.y=u*Math.sin(v),l.push(h.x,h.y,h.z),c.push(0,0,1),m.x=(h.x/t+1)/2,m.y=(h.y/t+1)/2,d.push(m.x,m.y)}u+=f}for(let x=0;x<r;x++){const p=x*(i+1);for(let v=0;v<i;v++){const g=v+p,_=g,y=g+i+1,M=g+i+2,w=g+1;o.push(_,y,w),o.push(y,M,w)}}this.setIndex(o),this.setAttribute("position",new We(l,3)),this.setAttribute("normal",new We(c,3)),this.setAttribute("uv",new We(d,2))}}class Mc extends Ye{constructor(e,t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const i=[],r=[],s=[],a=[];let o=0,l=0;if(Array.isArray(e)===!1)c(e);else for(let d=0;d<e.length;d++)c(e[d]),this.addGroup(o,l,d),o+=l,l=0;this.setIndex(i),this.setAttribute("position",new We(r,3)),this.setAttribute("normal",new We(s,3)),this.setAttribute("uv",new We(a,2));function c(d){const u=r.length/3,f=d.extractPoints(t);let h=f.shape;const m=f.holes;Xi.isClockWise(h)===!1&&(h=h.reverse());for(let p=0,v=m.length;p<v;p++){const g=m[p];Xi.isClockWise(g)===!0&&(m[p]=g.reverse())}const x=Xi.triangulateShape(h,m);for(let p=0,v=m.length;p<v;p++){const g=m[p];h=h.concat(g)}for(let p=0,v=h.length;p<v;p++){const g=h[p];r.push(g.x,g.y,0),s.push(0,0,1),a.push(g.x,g.y)}for(let p=0,v=x.length;p<v;p++){const g=x[p],_=g[0]+u,y=g[1]+u,M=g[2]+u;i.push(_,y,M),l+=3}}}toJSON(){const e=Ye.prototype.toJSON.call(this),t=this.parameters.shapes;return oR(t,e)}}function oR(n,e){if(e.shapes=[],Array.isArray(n))for(let t=0,i=n.length;t<i;t++){const r=n[t];e.shapes.push(r.uuid)}else e.shapes.push(n.uuid);return e}class Sc extends Ye{constructor(e=1,t=8,i=6,r=0,s=Math.PI*2,a=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:i,phiStart:r,phiLength:s,thetaStart:a,thetaLength:o},t=Math.max(3,Math.floor(t)),i=Math.max(2,Math.floor(i));const l=Math.min(a+o,Math.PI);let c=0;const d=[],u=new O,f=new O,h=[],m=[],x=[],p=[];for(let v=0;v<=i;v++){const g=[],_=v/i;let y=0;v==0&&a==0?y=.5/t:v==i&&l==Math.PI&&(y=-.5/t);for(let M=0;M<=t;M++){const w=M/t;u.x=-e*Math.cos(r+w*s)*Math.sin(a+_*o),u.y=e*Math.cos(a+_*o),u.z=e*Math.sin(r+w*s)*Math.sin(a+_*o),m.push(u.x,u.y,u.z),f.copy(u).normalize(),x.push(f.x,f.y,f.z),p.push(w+y,1-_),g.push(c++)}d.push(g)}for(let v=0;v<i;v++)for(let g=0;g<t;g++){const _=d[v][g+1],y=d[v][g],M=d[v+1][g],w=d[v+1][g+1];(v!==0||a>0)&&h.push(_,y,w),(v!==i-1||l<Math.PI)&&h.push(y,M,w)}this.setIndex(h),this.setAttribute("position",new We(m,3)),this.setAttribute("normal",new We(x,3)),this.setAttribute("uv",new We(p,2))}}class Vd extends Pr{constructor(e=1,t=0){const i=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],r=[2,1,0,0,3,2,1,3,0,2,3,1];super(i,r,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}}class Wd extends As{constructor(e,t={}){const i=t.font;if(!(i&&i.isFont))return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new Ye;const r=i.generateShapes(e,t.size);t.depth=t.height!==void 0?t.height:50,t.bevelThickness===void 0&&(t.bevelThickness=10),t.bevelSize===void 0&&(t.bevelSize=8),t.bevelEnabled===void 0&&(t.bevelEnabled=!1),super(r,t),this.type="TextGeometry"}}class $d extends Ye{constructor(e=1,t=.4,i=8,r=6,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:i,tubularSegments:r,arc:s},i=Math.floor(i),r=Math.floor(r);const a=[],o=[],l=[],c=[],d=new O,u=new O,f=new O;for(let h=0;h<=i;h++)for(let m=0;m<=r;m++){const x=m/r*s,p=h/i*Math.PI*2;u.x=(e+t*Math.cos(p))*Math.cos(x),u.y=(e+t*Math.cos(p))*Math.sin(x),u.z=t*Math.sin(p),o.push(u.x,u.y,u.z),d.x=e*Math.cos(x),d.y=e*Math.sin(x),f.subVectors(u,d).normalize(),l.push(f.x,f.y,f.z),c.push(m/r),c.push(h/i)}for(let h=1;h<=i;h++)for(let m=1;m<=r;m++){const x=(r+1)*h+m-1,p=(r+1)*(h-1)+m-1,v=(r+1)*(h-1)+m,g=(r+1)*h+m;a.push(x,p,g),a.push(p,v,g)}this.setIndex(a),this.setAttribute("position",new We(o,3)),this.setAttribute("normal",new We(l,3)),this.setAttribute("uv",new We(c,2))}}class jd extends Ye{constructor(e=1,t=.4,i=64,r=8,s=2,a=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:i,radialSegments:r,p:s,q:a},i=Math.floor(i),r=Math.floor(r);const o=[],l=[],c=[],d=[],u=new O,f=new O,h=new O,m=new O,x=new O,p=new O,v=new O;for(let _=0;_<=i;++_){const y=_/i*s*Math.PI*2;g(y,s,a,e,h),g(y+.01,s,a,e,m),p.subVectors(m,h),v.addVectors(m,h),x.crossVectors(p,v),v.crossVectors(x,p),x.normalize(),v.normalize();for(let M=0;M<=r;++M){const w=M/r*Math.PI*2,b=-t*Math.cos(w),S=t*Math.sin(w);u.x=h.x+(b*v.x+S*x.x),u.y=h.y+(b*v.y+S*x.y),u.z=h.z+(b*v.z+S*x.z),l.push(u.x,u.y,u.z),f.subVectors(u,h).normalize(),c.push(f.x,f.y,f.z),d.push(_/i),d.push(M/r)}}for(let _=1;_<=i;_++)for(let y=1;y<=r;y++){const M=(r+1)*(_-1)+(y-1),w=(r+1)*_+(y-1),b=(r+1)*_+y,S=(r+1)*(_-1)+y;o.push(M,w,S),o.push(w,b,S)}this.setIndex(o),this.setAttribute("position",new We(l,3)),this.setAttribute("normal",new We(c,3)),this.setAttribute("uv",new We(d,2));function g(_,y,M,w,b){const S=Math.cos(_),E=Math.sin(_),C=M/y*_,I=Math.cos(C);b.x=w*(2+I)*.5*S,b.y=w*(2+I)*E*.5,b.z=w*Math.sin(C)*.5}}}class Xd extends Ye{constructor(e,t=64,i=1,r=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:i,radialSegments:r,closed:s};const a=e.computeFrenetFrames(t,s);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;const o=new O,l=new O,c=new Le;let d=new O;const u=[],f=[],h=[],m=[];x(),this.setIndex(m),this.setAttribute("position",new We(u,3)),this.setAttribute("normal",new We(f,3)),this.setAttribute("uv",new We(h,2));function x(){for(let _=0;_<t;_++)p(_);p(s===!1?t:0),g(),v()}function p(_){d=e.getPointAt(_/t,d);const y=a.normals[_],M=a.binormals[_];for(let w=0;w<=r;w++){const b=w/r*Math.PI*2,S=Math.sin(b),E=-Math.cos(b);l.x=E*y.x+S*M.x,l.y=E*y.y+S*M.y,l.z=E*y.z+S*M.z,l.normalize(),f.push(l.x,l.y,l.z),o.x=d.x+i*l.x,o.y=d.y+i*l.y,o.z=d.z+i*l.z,u.push(o.x,o.y,o.z)}}function v(){for(let _=1;_<=t;_++)for(let y=1;y<=r;y++){const M=(r+1)*(_-1)+(y-1),w=(r+1)*_+(y-1),b=(r+1)*_+y,S=(r+1)*(_-1)+y;m.push(M,w,S),m.push(w,b,S)}}function g(){for(let _=0;_<=t;_++)for(let y=0;y<=r;y++)c.x=_/t,c.y=y/r,h.push(c.x,c.y)}}toJSON(){const e=Ye.prototype.toJSON.call(this);return e.path=this.parameters.path.toJSON(),e}}class fp extends Ye{constructor(e){if(super(),this.type="WireframeGeometry",e.isGeometry===!0){console.error("THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return}const t=[],i=[0,0],r={},s=new O;if(e.index!==null){const a=e.attributes.position,o=e.index;let l=e.groups;l.length===0&&(l=[{start:0,count:o.count,materialIndex:0}]);for(let c=0,d=l.length;c<d;++c){const u=l[c],f=u.start,h=u.count;for(let m=f,x=f+h;m<x;m+=3)for(let p=0;p<3;p++){const v=o.getX(m+p),g=o.getX(m+(p+1)%3);i[0]=Math.min(v,g),i[1]=Math.max(v,g);const _=i[0]+","+i[1];r[_]===void 0&&(r[_]={index1:i[0],index2:i[1]})}}for(const c in r){const d=r[c];s.fromBufferAttribute(a,d.index1),t.push(s.x,s.y,s.z),s.fromBufferAttribute(a,d.index2),t.push(s.x,s.y,s.z)}}else{const a=e.attributes.position;for(let o=0,l=a.count/3;o<l;o++)for(let c=0;c<3;c++){const d=3*o+c;s.fromBufferAttribute(a,d),t.push(s.x,s.y,s.z);const u=3*o+(c+1)%3;s.fromBufferAttribute(a,u),t.push(s.x,s.y,s.z)}}this.setAttribute("position",new We(t,3))}}var sn=Object.freeze({__proto__:null,BoxGeometry:Es,BoxBufferGeometry:Es,CircleGeometry:Nd,CircleBufferGeometry:Nd,ConeGeometry:Bd,ConeBufferGeometry:Bd,CylinderGeometry:Xa,CylinderBufferGeometry:Xa,DodecahedronGeometry:Ud,DodecahedronBufferGeometry:Ud,EdgesGeometry:up,ExtrudeGeometry:As,ExtrudeBufferGeometry:As,IcosahedronGeometry:Gd,IcosahedronBufferGeometry:Gd,LatheGeometry:kd,LatheBufferGeometry:kd,OctahedronGeometry:wc,OctahedronBufferGeometry:wc,ParametricGeometry:Ls,ParametricBufferGeometry:Ls,PlaneGeometry:uc,PlaneBufferGeometry:uc,PolyhedronGeometry:Pr,PolyhedronBufferGeometry:Pr,RingGeometry:Hd,RingBufferGeometry:Hd,ShapeGeometry:Mc,ShapeBufferGeometry:Mc,SphereGeometry:Sc,SphereBufferGeometry:Sc,TetrahedronGeometry:Vd,TetrahedronBufferGeometry:Vd,TextGeometry:Wd,TextBufferGeometry:Wd,TorusGeometry:$d,TorusBufferGeometry:$d,TorusKnotGeometry:jd,TorusKnotBufferGeometry:jd,TubeGeometry:Xd,TubeBufferGeometry:Xd,WireframeGeometry:fp});function Cs(n){Qe.call(this),this.type="ShadowMaterial",this.color=new Ve(0),this.transparent=!0,this.setValues(n)}Cs.prototype=Object.create(Qe.prototype);Cs.prototype.constructor=Cs;Cs.prototype.isShadowMaterial=!0;Cs.prototype.copy=function(n){return Qe.prototype.copy.call(this,n),this.color.copy(n.color),this};function Zi(n){dn.call(this,n),this.type="RawShaderMaterial"}Zi.prototype=Object.create(dn.prototype);Zi.prototype.constructor=Zi;Zi.prototype.isRawShaderMaterial=!0;function yi(n){Qe.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Ve(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ve(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Hs,this.normalScale=new Le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.vertexTangents=!1,this.setValues(n)}yi.prototype=Object.create(Qe.prototype);yi.prototype.constructor=yi;yi.prototype.isMeshStandardMaterial=!0;yi.prototype.copy=function(n){return Qe.prototype.copy.call(this,n),this.defines={STANDARD:""},this.color.copy(n.color),this.roughness=n.roughness,this.metalness=n.metalness,this.map=n.map,this.lightMap=n.lightMap,this.lightMapIntensity=n.lightMapIntensity,this.aoMap=n.aoMap,this.aoMapIntensity=n.aoMapIntensity,this.emissive.copy(n.emissive),this.emissiveMap=n.emissiveMap,this.emissiveIntensity=n.emissiveIntensity,this.bumpMap=n.bumpMap,this.bumpScale=n.bumpScale,this.normalMap=n.normalMap,this.normalMapType=n.normalMapType,this.normalScale.copy(n.normalScale),this.displacementMap=n.displacementMap,this.displacementScale=n.displacementScale,this.displacementBias=n.displacementBias,this.roughnessMap=n.roughnessMap,this.metalnessMap=n.metalnessMap,this.alphaMap=n.alphaMap,this.envMap=n.envMap,this.envMapIntensity=n.envMapIntensity,this.refractionRatio=n.refractionRatio,this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this.wireframeLinecap=n.wireframeLinecap,this.wireframeLinejoin=n.wireframeLinejoin,this.skinning=n.skinning,this.morphTargets=n.morphTargets,this.morphNormals=n.morphNormals,this.vertexTangents=n.vertexTangents,this};function Dr(n){yi.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Le(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(e){this.reflectivity=tt.clamp(2.5*(e-1)/(e+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(n)}Dr.prototype=Object.create(yi.prototype);Dr.prototype.constructor=Dr;Dr.prototype.isMeshPhysicalMaterial=!0;Dr.prototype.copy=function(n){return yi.prototype.copy.call(this,n),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=n.clearcoat,this.clearcoatMap=n.clearcoatMap,this.clearcoatRoughness=n.clearcoatRoughness,this.clearcoatRoughnessMap=n.clearcoatRoughnessMap,this.clearcoatNormalMap=n.clearcoatNormalMap,this.clearcoatNormalScale.copy(n.clearcoatNormalScale),this.reflectivity=n.reflectivity,n.sheen?this.sheen=(this.sheen||new Ve).copy(n.sheen):this.sheen=null,this.transmission=n.transmission,this.transmissionMap=n.transmissionMap,this};function Or(n){Qe.call(this),this.type="MeshPhongMaterial",this.color=new Ve(16777215),this.specular=new Ve(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ve(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Hs,this.normalScale=new Le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Uc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(n)}Or.prototype=Object.create(Qe.prototype);Or.prototype.constructor=Or;Or.prototype.isMeshPhongMaterial=!0;Or.prototype.copy=function(n){return Qe.prototype.copy.call(this,n),this.color.copy(n.color),this.specular.copy(n.specular),this.shininess=n.shininess,this.map=n.map,this.lightMap=n.lightMap,this.lightMapIntensity=n.lightMapIntensity,this.aoMap=n.aoMap,this.aoMapIntensity=n.aoMapIntensity,this.emissive.copy(n.emissive),this.emissiveMap=n.emissiveMap,this.emissiveIntensity=n.emissiveIntensity,this.bumpMap=n.bumpMap,this.bumpScale=n.bumpScale,this.normalMap=n.normalMap,this.normalMapType=n.normalMapType,this.normalScale.copy(n.normalScale),this.displacementMap=n.displacementMap,this.displacementScale=n.displacementScale,this.displacementBias=n.displacementBias,this.specularMap=n.specularMap,this.alphaMap=n.alphaMap,this.envMap=n.envMap,this.combine=n.combine,this.reflectivity=n.reflectivity,this.refractionRatio=n.refractionRatio,this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this.wireframeLinecap=n.wireframeLinecap,this.wireframeLinejoin=n.wireframeLinejoin,this.skinning=n.skinning,this.morphTargets=n.morphTargets,this.morphNormals=n.morphNormals,this};function Rs(n){Qe.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Ve(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ve(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Hs,this.normalScale=new Le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(n)}Rs.prototype=Object.create(Qe.prototype);Rs.prototype.constructor=Rs;Rs.prototype.isMeshToonMaterial=!0;Rs.prototype.copy=function(n){return Qe.prototype.copy.call(this,n),this.color.copy(n.color),this.map=n.map,this.gradientMap=n.gradientMap,this.lightMap=n.lightMap,this.lightMapIntensity=n.lightMapIntensity,this.aoMap=n.aoMap,this.aoMapIntensity=n.aoMapIntensity,this.emissive.copy(n.emissive),this.emissiveMap=n.emissiveMap,this.emissiveIntensity=n.emissiveIntensity,this.bumpMap=n.bumpMap,this.bumpScale=n.bumpScale,this.normalMap=n.normalMap,this.normalMapType=n.normalMapType,this.normalScale.copy(n.normalScale),this.displacementMap=n.displacementMap,this.displacementScale=n.displacementScale,this.displacementBias=n.displacementBias,this.alphaMap=n.alphaMap,this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this.wireframeLinecap=n.wireframeLinecap,this.wireframeLinejoin=n.wireframeLinejoin,this.skinning=n.skinning,this.morphTargets=n.morphTargets,this.morphNormals=n.morphNormals,this};function Ps(n){Qe.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Hs,this.normalScale=new Le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(n)}Ps.prototype=Object.create(Qe.prototype);Ps.prototype.constructor=Ps;Ps.prototype.isMeshNormalMaterial=!0;Ps.prototype.copy=function(n){return Qe.prototype.copy.call(this,n),this.bumpMap=n.bumpMap,this.bumpScale=n.bumpScale,this.normalMap=n.normalMap,this.normalMapType=n.normalMapType,this.normalScale.copy(n.normalScale),this.displacementMap=n.displacementMap,this.displacementScale=n.displacementScale,this.displacementBias=n.displacementBias,this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this.skinning=n.skinning,this.morphTargets=n.morphTargets,this.morphNormals=n.morphNormals,this};function Is(n){Qe.call(this),this.type="MeshLambertMaterial",this.color=new Ve(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ve(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Uc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(n)}Is.prototype=Object.create(Qe.prototype);Is.prototype.constructor=Is;Is.prototype.isMeshLambertMaterial=!0;Is.prototype.copy=function(n){return Qe.prototype.copy.call(this,n),this.color.copy(n.color),this.map=n.map,this.lightMap=n.lightMap,this.lightMapIntensity=n.lightMapIntensity,this.aoMap=n.aoMap,this.aoMapIntensity=n.aoMapIntensity,this.emissive.copy(n.emissive),this.emissiveMap=n.emissiveMap,this.emissiveIntensity=n.emissiveIntensity,this.specularMap=n.specularMap,this.alphaMap=n.alphaMap,this.envMap=n.envMap,this.combine=n.combine,this.reflectivity=n.reflectivity,this.refractionRatio=n.refractionRatio,this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this.wireframeLinecap=n.wireframeLinecap,this.wireframeLinejoin=n.wireframeLinejoin,this.skinning=n.skinning,this.morphTargets=n.morphTargets,this.morphNormals=n.morphNormals,this};function Ds(n){Qe.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Ve(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Hs,this.normalScale=new Le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(n)}Ds.prototype=Object.create(Qe.prototype);Ds.prototype.constructor=Ds;Ds.prototype.isMeshMatcapMaterial=!0;Ds.prototype.copy=function(n){return Qe.prototype.copy.call(this,n),this.defines={MATCAP:""},this.color.copy(n.color),this.matcap=n.matcap,this.map=n.map,this.bumpMap=n.bumpMap,this.bumpScale=n.bumpScale,this.normalMap=n.normalMap,this.normalMapType=n.normalMapType,this.normalScale.copy(n.normalScale),this.displacementMap=n.displacementMap,this.displacementScale=n.displacementScale,this.displacementBias=n.displacementBias,this.alphaMap=n.alphaMap,this.skinning=n.skinning,this.morphTargets=n.morphTargets,this.morphNormals=n.morphNormals,this};function Os(n){Ct.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(n)}Os.prototype=Object.create(Ct.prototype);Os.prototype.constructor=Os;Os.prototype.isLineDashedMaterial=!0;Os.prototype.copy=function(n){return Ct.prototype.copy.call(this,n),this.scale=n.scale,this.dashSize=n.dashSize,this.gapSize=n.gapSize,this};var cR=Object.freeze({__proto__:null,ShadowMaterial:Cs,SpriteMaterial:Rr,RawShaderMaterial:Zi,ShaderMaterial:dn,PointsMaterial:ti,MeshPhysicalMaterial:Dr,MeshStandardMaterial:yi,MeshPhongMaterial:Or,MeshToonMaterial:Rs,MeshNormalMaterial:Ps,MeshLambertMaterial:Is,MeshDepthMaterial:Ar,MeshDistanceMaterial:Lr,MeshBasicMaterial:Ln,MeshMatcapMaterial:Ds,LineDashedMaterial:Os,LineBasicMaterial:Ct,Material:Qe});const Lt={arraySlice:function(n,e,t){return Lt.isTypedArray(n)?new n.constructor(n.subarray(e,t!==void 0?t:n.length)):n.slice(e,t)},convertArray:function(n,e,t){return!n||!t&&n.constructor===e?n:typeof e.BYTES_PER_ELEMENT=="number"?new e(n):Array.prototype.slice.call(n)},isTypedArray:function(n){return ArrayBuffer.isView(n)&&!(n instanceof DataView)},getKeyframeOrder:function(n){function e(r,s){return n[r]-n[s]}const t=n.length,i=new Array(t);for(let r=0;r!==t;++r)i[r]=r;return i.sort(e),i},sortedArray:function(n,e,t){const i=n.length,r=new n.constructor(i);for(let s=0,a=0;a!==i;++s){const o=t[s]*e;for(let l=0;l!==e;++l)r[a++]=n[o+l]}return r},flattenJSON:function(n,e,t,i){let r=1,s=n[0];for(;s!==void 0&&s[i]===void 0;)s=n[r++];if(s===void 0)return;let a=s[i];if(a!==void 0)if(Array.isArray(a))do a=s[i],a!==void 0&&(e.push(s.time),t.push.apply(t,a)),s=n[r++];while(s!==void 0);else if(a.toArray!==void 0)do a=s[i],a!==void 0&&(e.push(s.time),a.toArray(t,t.length)),s=n[r++];while(s!==void 0);else do a=s[i],a!==void 0&&(e.push(s.time),t.push(a)),s=n[r++];while(s!==void 0)},subclip:function(n,e,t,i,r=30){const s=n.clone();s.name=e;const a=[];for(let l=0;l<s.tracks.length;++l){const c=s.tracks[l],d=c.getValueSize(),u=[],f=[];for(let h=0;h<c.times.length;++h){const m=c.times[h]*r;if(!(m<t||m>=i)){u.push(c.times[h]);for(let x=0;x<d;++x)f.push(c.values[h*d+x])}}u.length!==0&&(c.times=Lt.convertArray(u,c.times.constructor),c.values=Lt.convertArray(f,c.values.constructor),a.push(c))}s.tracks=a;let o=1/0;for(let l=0;l<s.tracks.length;++l)o>s.tracks[l].times[0]&&(o=s.tracks[l].times[0]);for(let l=0;l<s.tracks.length;++l)s.tracks[l].shift(-1*o);return s.resetDuration(),s},makeClipAdditive:function(n,e=0,t=n,i=30){i<=0&&(i=30);const r=t.tracks.length,s=e/i;for(let a=0;a<r;++a){const o=t.tracks[a],l=o.ValueTypeName;if(l==="bool"||l==="string")continue;const c=n.tracks.find(function(v){return v.name===o.name&&v.ValueTypeName===l});if(c===void 0)continue;let d=0;const u=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=u/3);let f=0;const h=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=h/3);const m=o.times.length-1;let x;if(s<=o.times[0]){const v=d,g=u-d;x=Lt.arraySlice(o.values,v,g)}else if(s>=o.times[m]){const v=m*u+d,g=v+u-d;x=Lt.arraySlice(o.values,v,g)}else{const v=o.createInterpolant(),g=d,_=u-d;v.evaluate(s),x=Lt.arraySlice(v.resultBuffer,g,_)}l==="quaternion"&&new Qt().fromArray(x).normalize().conjugate().toArray(x);const p=c.times.length;for(let v=0;v<p;++v){const g=v*h+f;if(l==="quaternion")Qt.multiplyQuaternionsFlat(c.values,g,x,0,c.values,g);else{const _=h-f*2;for(let y=0;y<_;++y)c.values[g+y]-=x[y]}}}return n.blendMode=ip,n}};function An(n,e,t,i){this.parameterPositions=n,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new e.constructor(t),this.sampleValues=e,this.valueSize=t}Object.assign(An.prototype,{evaluate:function(n){const e=this.parameterPositions;let t=this._cachedIndex,i=e[t],r=e[t-1];e:{t:{let s;n:{i:if(!(n<i)){for(let a=t+2;;){if(i===void 0){if(n<r)break i;return t=e.length,this._cachedIndex=t,this.afterEnd_(t-1,n,r)}if(t===a)break;if(r=i,i=e[++t],n<i)break t}s=e.length;break n}if(!(n>=r)){const a=e[1];n<a&&(t=2,r=a);for(let o=t-2;;){if(r===void 0)return this._cachedIndex=0,this.beforeStart_(0,n,i);if(t===o)break;if(i=r,r=e[--t-1],n>=r)break t}s=t,t=0;break n}break e}for(;t<s;){const a=t+s>>>1;n<e[a]?s=a:t=a+1}if(i=e[t],r=e[t-1],r===void 0)return this._cachedIndex=0,this.beforeStart_(0,n,i);if(i===void 0)return t=e.length,this._cachedIndex=t,this.afterEnd_(t-1,r,n)}this._cachedIndex=t,this.intervalChanged_(t,r,i)}return this.interpolate_(t,r,n,i)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(n){const e=this.resultBuffer,t=this.sampleValues,i=this.valueSize,r=n*i;for(let s=0;s!==i;++s)e[s]=t[r+s];return e},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}});Object.assign(An.prototype,{beforeStart_:An.prototype.copySampleValue_,afterEnd_:An.prototype.copySampleValue_});function Yd(n,e,t,i){An.call(this,n,e,t,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}Yd.prototype=Object.assign(Object.create(An.prototype),{constructor:Yd,DefaultSettings_:{endingStart:cs,endingEnd:cs},intervalChanged_:function(n,e,t){const i=this.parameterPositions;let r=n-2,s=n+1,a=i[r],o=i[s];if(a===void 0)switch(this.getSettings_().endingStart){case ls:r=n,a=2*e-t;break;case ic:r=i.length-2,a=e+i[r]-i[r+1];break;default:r=n,a=t}if(o===void 0)switch(this.getSettings_().endingEnd){case ls:s=n,o=2*t-e;break;case ic:s=1,o=t+i[1]-i[0];break;default:s=n-1,o=e}const l=(t-e)*.5,c=this.valueSize;this._weightPrev=l/(e-a),this._weightNext=l/(o-t),this._offsetPrev=r*c,this._offsetNext=s*c},interpolate_:function(n,e,t,i){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=n*a,l=o-a,c=this._offsetPrev,d=this._offsetNext,u=this._weightPrev,f=this._weightNext,h=(t-e)/(i-e),m=h*h,x=m*h,p=-u*x+2*u*m-u*h,v=(1+u)*x+(-1.5-2*u)*m+(-.5+u)*h+1,g=(-1-f)*x+(1.5+f)*m+.5*h,_=f*x-f*m;for(let y=0;y!==a;++y)r[y]=p*s[c+y]+v*s[l+y]+g*s[o+y]+_*s[d+y];return r}});function Ec(n,e,t,i){An.call(this,n,e,t,i)}Ec.prototype=Object.assign(Object.create(An.prototype),{constructor:Ec,interpolate_:function(n,e,t,i){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=n*a,l=o-a,c=(t-e)/(i-e),d=1-c;for(let u=0;u!==a;++u)r[u]=s[l+u]*d+s[o+u]*c;return r}});function Zd(n,e,t,i){An.call(this,n,e,t,i)}Zd.prototype=Object.assign(Object.create(An.prototype),{constructor:Zd,interpolate_:function(n){return this.copySampleValue_(n-1)}});function Xt(n,e,t,i){if(n===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(e===void 0||e.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+n);this.name=n,this.times=Lt.convertArray(e,this.TimeBufferType),this.values=Lt.convertArray(t,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}Object.assign(Xt,{toJSON:function(n){const e=n.constructor;let t;if(e.toJSON!==void 0)t=e.toJSON(n);else{t={name:n.name,times:Lt.convertArray(n.times,Array),values:Lt.convertArray(n.values,Array)};const i=n.getInterpolation();i!==n.DefaultInterpolation&&(t.interpolation=i)}return t.type=n.ValueTypeName,t}});Object.assign(Xt.prototype,{constructor:Xt,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:Vo,InterpolantFactoryMethodDiscrete:function(n){return new Zd(this.times,this.values,this.getValueSize(),n)},InterpolantFactoryMethodLinear:function(n){return new Ec(this.times,this.values,this.getValueSize(),n)},InterpolantFactoryMethodSmooth:function(n){return new Yd(this.times,this.values,this.getValueSize(),n)},setInterpolation:function(n){let e;switch(n){case nc:e=this.InterpolantFactoryMethodDiscrete;break;case Vo:e=this.InterpolantFactoryMethodLinear;break;case wd:e=this.InterpolantFactoryMethodSmooth;break}if(e===void 0){const t="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(n!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(t);return console.warn("THREE.KeyframeTrack:",t),this}return this.createInterpolant=e,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return nc;case this.InterpolantFactoryMethodLinear:return Vo;case this.InterpolantFactoryMethodSmooth:return wd}},getValueSize:function(){return this.values.length/this.times.length},shift:function(n){if(n!==0){const e=this.times;for(let t=0,i=e.length;t!==i;++t)e[t]+=n}return this},scale:function(n){if(n!==1){const e=this.times;for(let t=0,i=e.length;t!==i;++t)e[t]*=n}return this},trim:function(n,e){const t=this.times,i=t.length;let r=0,s=i-1;for(;r!==i&&t[r]<n;)++r;for(;s!==-1&&t[s]>e;)--s;if(++s,r!==0||s!==i){r>=s&&(s=Math.max(s,1),r=s-1);const a=this.getValueSize();this.times=Lt.arraySlice(t,r,s),this.values=Lt.arraySlice(this.values,r*a,s*a)}return this},validate:function(){let n=!0;const e=this.getValueSize();e-Math.floor(e)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),n=!1);const t=this.times,i=this.values,r=t.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),n=!1);let s=null;for(let a=0;a!==r;a++){const o=t[a];if(typeof o=="number"&&isNaN(o)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,o),n=!1;break}if(s!==null&&s>o){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,o,s),n=!1;break}s=o}if(i!==void 0&&Lt.isTypedArray(i))for(let a=0,o=i.length;a!==o;++a){const l=i[a];if(isNaN(l)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,l),n=!1;break}}return n},optimize:function(){const n=Lt.arraySlice(this.times),e=Lt.arraySlice(this.values),t=this.getValueSize(),i=this.getInterpolation()===wd,r=n.length-1;let s=1;for(let a=1;a<r;++a){let o=!1;const l=n[a],c=n[a+1];if(l!==c&&(a!==1||l!==n[0]))if(i)o=!0;else{const d=a*t,u=d-t,f=d+t;for(let h=0;h!==t;++h){const m=e[d+h];if(m!==e[u+h]||m!==e[f+h]){o=!0;break}}}if(o){if(a!==s){n[s]=n[a];const d=a*t,u=s*t;for(let f=0;f!==t;++f)e[u+f]=e[d+f]}++s}}if(r>0){n[s]=n[r];for(let a=r*t,o=s*t,l=0;l!==t;++l)e[o+l]=e[a+l];++s}return s!==n.length?(this.times=Lt.arraySlice(n,0,s),this.values=Lt.arraySlice(e,0,s*t)):(this.times=n,this.values=e),this},clone:function(){const n=Lt.arraySlice(this.times,0),e=Lt.arraySlice(this.values,0),t=this.constructor,i=new t(this.name,n,e);return i.createInterpolant=this.createInterpolant,i}});function Jd(n,e,t){Xt.call(this,n,e,t)}Jd.prototype=Object.assign(Object.create(Xt.prototype),{constructor:Jd,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:nc,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function Kd(n,e,t,i){Xt.call(this,n,e,t,i)}Kd.prototype=Object.assign(Object.create(Xt.prototype),{constructor:Kd,ValueTypeName:"color"});function Ya(n,e,t,i){Xt.call(this,n,e,t,i)}Ya.prototype=Object.assign(Object.create(Xt.prototype),{constructor:Ya,ValueTypeName:"number"});function Qd(n,e,t,i){An.call(this,n,e,t,i)}Qd.prototype=Object.assign(Object.create(An.prototype),{constructor:Qd,interpolate_:function(n,e,t,i){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=(t-e)/(i-e);let l=n*a;for(let c=l+a;l!==c;l+=4)Qt.slerpFlat(r,0,s,l-a,s,l,o);return r}});function Tc(n,e,t,i){Xt.call(this,n,e,t,i)}Tc.prototype=Object.assign(Object.create(Xt.prototype),{constructor:Tc,ValueTypeName:"quaternion",DefaultInterpolation:Vo,InterpolantFactoryMethodLinear:function(n){return new Qd(this.times,this.values,this.getValueSize(),n)},InterpolantFactoryMethodSmooth:void 0});function eu(n,e,t,i){Xt.call(this,n,e,t,i)}eu.prototype=Object.assign(Object.create(Xt.prototype),{constructor:eu,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:nc,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function Za(n,e,t,i){Xt.call(this,n,e,t,i)}Za.prototype=Object.assign(Object.create(Xt.prototype),{constructor:Za,ValueTypeName:"vector"});function Mn(n,e=-1,t,i=_u){this.name=n,this.tracks=t,this.duration=e,this.blendMode=i,this.uuid=tt.generateUUID(),this.duration<0&&this.resetDuration()}function lR(n){switch(n.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Ya;case"vector":case"vector2":case"vector3":case"vector4":return Za;case"color":return Kd;case"quaternion":return Tc;case"bool":case"boolean":return Jd;case"string":return eu}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+n)}function dR(n){if(n.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=lR(n.type);if(n.times===void 0){const t=[],i=[];Lt.flattenJSON(n.keys,t,i,"value"),n.times=t,n.values=i}return e.parse!==void 0?e.parse(n):new e(n.name,n.times,n.values,n.interpolation)}Object.assign(Mn,{parse:function(n){const e=[],t=n.tracks,i=1/(n.fps||1);for(let s=0,a=t.length;s!==a;++s)e.push(dR(t[s]).scale(i));const r=new Mn(n.name,n.duration,e,n.blendMode);return r.uuid=n.uuid,r},toJSON:function(n){const e=[],t=n.tracks,i={name:n.name,duration:n.duration,tracks:e,uuid:n.uuid,blendMode:n.blendMode};for(let r=0,s=t.length;r!==s;++r)e.push(Xt.toJSON(t[r]));return i},CreateFromMorphTargetSequence:function(n,e,t,i){const r=e.length,s=[];for(let a=0;a<r;a++){let o=[],l=[];o.push((a+r-1)%r,a,(a+1)%r),l.push(0,1,0);const c=Lt.getKeyframeOrder(o);o=Lt.sortedArray(o,1,c),l=Lt.sortedArray(l,1,c),!i&&o[0]===0&&(o.push(r),l.push(l[0])),s.push(new Ya(".morphTargetInfluences["+e[a].name+"]",o,l).scale(1/t))}return new Mn(n,-1,s)},findByName:function(n,e){let t=n;if(!Array.isArray(n)){const i=n;t=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<t.length;i++)if(t[i].name===e)return t[i];return null},CreateClipsFromMorphTargetSequences:function(n,e,t){const i={},r=/^([\w-]*?)([\d]+)$/;for(let a=0,o=n.length;a<o;a++){const l=n[a],c=l.name.match(r);if(c&&c.length>1){const d=c[1];let u=i[d];u||(i[d]=u=[]),u.push(l)}}const s=[];for(const a in i)s.push(Mn.CreateFromMorphTargetSequence(a,i[a],e,t));return s},parseAnimation:function(n,e){if(!n)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const t=function(d,u,f,h,m){if(f.length!==0){const x=[],p=[];Lt.flattenJSON(f,x,p,h),x.length!==0&&m.push(new d(u,x,p))}},i=[],r=n.name||"default",s=n.fps||30,a=n.blendMode;let o=n.length||-1;const l=n.hierarchy||[];for(let d=0;d<l.length;d++){const u=l[d].keys;if(!(!u||u.length===0))if(u[0].morphTargets){const f={};let h;for(h=0;h<u.length;h++)if(u[h].morphTargets)for(let m=0;m<u[h].morphTargets.length;m++)f[u[h].morphTargets[m]]=-1;for(const m in f){const x=[],p=[];for(let v=0;v!==u[h].morphTargets.length;++v){const g=u[h];x.push(g.time),p.push(g.morphTarget===m?1:0)}i.push(new Ya(".morphTargetInfluence["+m+"]",x,p))}o=f.length*(s||1)}else{const f=".bones["+e[d].name+"]";t(Za,f+".position",u,"pos",i),t(Tc,f+".quaternion",u,"rot",i),t(Za,f+".scale",u,"scl",i)}}return i.length===0?null:new Mn(r,o,i,a)}});Object.assign(Mn.prototype,{resetDuration:function(){const n=this.tracks;let e=0;for(let t=0,i=n.length;t!==i;++t){const r=this.tracks[t];e=Math.max(e,r.times[r.times.length-1])}return this.duration=e,this},trim:function(){for(let n=0;n<this.tracks.length;n++)this.tracks[n].trim(0,this.duration);return this},validate:function(){let n=!0;for(let e=0;e<this.tracks.length;e++)n=n&&this.tracks[e].validate();return n},optimize:function(){for(let n=0;n<this.tracks.length;n++)this.tracks[n].optimize();return this},clone:function(){const n=[];for(let e=0;e<this.tracks.length;e++)n.push(this.tracks[e].clone());return new Mn(this.name,this.duration,n,this.blendMode)},toJSON:function(){return Mn.toJSON(this)}});const zs={enabled:!1,files:{},add:function(n,e){this.enabled!==!1&&(this.files[n]=e)},get:function(n){if(this.enabled!==!1)return this.files[n]},remove:function(n){delete this.files[n]},clear:function(){this.files={}}};function hp(n,e,t){const i=this;let r=!1,s=0,a=0,o;const l=[];this.onStart=void 0,this.onLoad=n,this.onProgress=e,this.onError=t,this.itemStart=function(c){a++,r===!1&&i.onStart!==void 0&&i.onStart(c,s,a),r=!0},this.itemEnd=function(c){s++,i.onProgress!==void 0&&i.onProgress(c,s,a),s===a&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(c){i.onError!==void 0&&i.onError(c)},this.resolveURL=function(c){return o?o(c):c},this.setURLModifier=function(c){return o=c,this},this.addHandler=function(c,d){return l.push(c,d),this},this.removeHandler=function(c){const d=l.indexOf(c);return d!==-1&&l.splice(d,2),this},this.getHandler=function(c){for(let d=0,u=l.length;d<u;d+=2){const f=l[d],h=l[d+1];if(f.global&&(f.lastIndex=0),f.test(c))return h}return null}}const O2=new hp;function xt(n){this.manager=n!==void 0?n:O2,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}Object.assign(xt.prototype,{load:function(){},loadAsync:function(n,e){const t=this;return new Promise(function(i,r){t.load(n,i,e,r)})},parse:function(){},setCrossOrigin:function(n){return this.crossOrigin=n,this},setWithCredentials:function(n){return this.withCredentials=n,this},setPath:function(n){return this.path=n,this},setResourcePath:function(n){return this.resourcePath=n,this},setRequestHeader:function(n){return this.requestHeader=n,this}});const Xn={};function Bn(n){xt.call(this,n)}Bn.prototype=Object.assign(Object.create(xt.prototype),{constructor:Bn,load:function(n,e,t,i){n===void 0&&(n=""),this.path!==void 0&&(n=this.path+n),n=this.manager.resolveURL(n);const r=this,s=zs.get(n);if(s!==void 0)return r.manager.itemStart(n),setTimeout(function(){e&&e(s),r.manager.itemEnd(n)},0),s;if(Xn[n]!==void 0){Xn[n].push({onLoad:e,onProgress:t,onError:i});return}const a=/^data:(.*?)(;base64)?,(.*)$/,o=n.match(a);let l;if(o){const c=o[1],d=!!o[2];let u=o[3];u=decodeURIComponent(u),d&&(u=atob(u));try{let f;const h=(this.responseType||"").toLowerCase();switch(h){case"arraybuffer":case"blob":const m=new Uint8Array(u.length);for(let p=0;p<u.length;p++)m[p]=u.charCodeAt(p);h==="blob"?f=new Blob([m.buffer],{type:c}):f=m.buffer;break;case"document":f=new DOMParser().parseFromString(u,c);break;case"json":f=JSON.parse(u);break;default:f=u;break}setTimeout(function(){e&&e(f),r.manager.itemEnd(n)},0)}catch(f){setTimeout(function(){i&&i(f),r.manager.itemError(n),r.manager.itemEnd(n)},0)}}else{Xn[n]=[],Xn[n].push({onLoad:e,onProgress:t,onError:i}),l=new XMLHttpRequest,l.open("GET",n,!0),l.addEventListener("load",function(c){const d=this.response,u=Xn[n];if(delete Xn[n],this.status===200||this.status===0){this.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),zs.add(n,d);for(let f=0,h=u.length;f<h;f++){const m=u[f];m.onLoad&&m.onLoad(d)}r.manager.itemEnd(n)}else{for(let f=0,h=u.length;f<h;f++){const m=u[f];m.onError&&m.onError(c)}r.manager.itemError(n),r.manager.itemEnd(n)}},!1),l.addEventListener("progress",function(c){const d=Xn[n];for(let u=0,f=d.length;u<f;u++){const h=d[u];h.onProgress&&h.onProgress(c)}},!1),l.addEventListener("error",function(c){const d=Xn[n];delete Xn[n];for(let u=0,f=d.length;u<f;u++){const h=d[u];h.onError&&h.onError(c)}r.manager.itemError(n),r.manager.itemEnd(n)},!1),l.addEventListener("abort",function(c){const d=Xn[n];delete Xn[n];for(let u=0,f=d.length;u<f;u++){const h=d[u];h.onError&&h.onError(c)}r.manager.itemError(n),r.manager.itemEnd(n)},!1),this.responseType!==void 0&&(l.responseType=this.responseType),this.withCredentials!==void 0&&(l.withCredentials=this.withCredentials),l.overrideMimeType&&l.overrideMimeType(this.mimeType!==void 0?this.mimeType:"text/plain");for(const c in this.requestHeader)l.setRequestHeader(c,this.requestHeader[c]);l.send(null)}return r.manager.itemStart(n),l},setResponseType:function(n){return this.responseType=n,this},setMimeType:function(n){return this.mimeType=n,this}});function d0(n){xt.call(this,n)}d0.prototype=Object.assign(Object.create(xt.prototype),{constructor:d0,load:function(n,e,t,i){const r=this,s=new Bn(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(n,function(a){try{e(r.parse(JSON.parse(a)))}catch(o){i?i(o):console.error(o),r.manager.itemError(n)}},t,i)},parse:function(n){const e=[];for(let t=0;t<n.length;t++){const i=Mn.parse(n[t]);e.push(i)}return e}});function u0(n){xt.call(this,n)}u0.prototype=Object.assign(Object.create(xt.prototype),{constructor:u0,load:function(n,e,t,i){const r=this,s=[],a=new ja,o=new Bn(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(r.withCredentials);let l=0;function c(d){o.load(n[d],function(u){const f=r.parse(u,!0);s[d]={width:f.width,height:f.height,format:f.format,mipmaps:f.mipmaps},l+=1,l===6&&(f.mipmapCount===1&&(a.minFilter=Vt),a.image=s,a.format=f.format,a.needsUpdate=!0,e&&e(a))},t,i)}if(Array.isArray(n))for(let d=0,u=n.length;d<u;++d)c(d);else o.load(n,function(d){const u=r.parse(d,!0);if(u.isCubemap){const f=u.mipmaps.length/u.mipmapCount;for(let h=0;h<f;h++){s[h]={mipmaps:[]};for(let m=0;m<u.mipmapCount;m++)s[h].mipmaps.push(u.mipmaps[h*u.mipmapCount+m]),s[h].format=u.format,s[h].width=u.width,s[h].height=u.height}a.image=s}else a.image.width=u.width,a.image.height=u.height,a.mipmaps=u.mipmaps;u.mipmapCount===1&&(a.minFilter=Vt),a.format=u.format,a.needsUpdate=!0,e&&e(a)},t,i);return a}});function Ja(n){xt.call(this,n)}Ja.prototype=Object.assign(Object.create(xt.prototype),{constructor:Ja,load:function(n,e,t,i){this.path!==void 0&&(n=this.path+n),n=this.manager.resolveURL(n);const r=this,s=zs.get(n);if(s!==void 0)return r.manager.itemStart(n),setTimeout(function(){e&&e(s),r.manager.itemEnd(n)},0),s;const a=document.createElementNS("http://www.w3.org/1999/xhtml","img");function o(){a.removeEventListener("load",o,!1),a.removeEventListener("error",l,!1),zs.add(n,this),e&&e(this),r.manager.itemEnd(n)}function l(c){a.removeEventListener("load",o,!1),a.removeEventListener("error",l,!1),i&&i(c),r.manager.itemError(n),r.manager.itemEnd(n)}return a.addEventListener("load",o,!1),a.addEventListener("error",l,!1),n.substr(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),r.manager.itemStart(n),a.src=n,a}});function tu(n){xt.call(this,n)}tu.prototype=Object.assign(Object.create(xt.prototype),{constructor:tu,load:function(n,e,t,i){const r=new vi,s=new Ja(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let a=0;function o(l){s.load(n[l],function(c){r.images[l]=c,a++,a===6&&(r.needsUpdate=!0,e&&e(r))},void 0,i)}for(let l=0;l<n.length;++l)o(l);return r}});function nu(n){xt.call(this,n)}nu.prototype=Object.assign(Object.create(xt.prototype),{constructor:nu,load:function(n,e,t,i){const r=this,s=new Yi,a=new Bn(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(r.withCredentials),a.load(n,function(o){const l=r.parse(o);!l||(l.image!==void 0?s.image=l.image:l.data!==void 0&&(s.image.width=l.width,s.image.height=l.height,s.image.data=l.data),s.wrapS=l.wrapS!==void 0?l.wrapS:an,s.wrapT=l.wrapT!==void 0?l.wrapT:an,s.magFilter=l.magFilter!==void 0?l.magFilter:Vt,s.minFilter=l.minFilter!==void 0?l.minFilter:Vt,s.anisotropy=l.anisotropy!==void 0?l.anisotropy:1,l.encoding!==void 0&&(s.encoding=l.encoding),l.flipY!==void 0&&(s.flipY=l.flipY),l.format!==void 0&&(s.format=l.format),l.type!==void 0&&(s.type=l.type),l.mipmaps!==void 0&&(s.mipmaps=l.mipmaps,s.minFilter=lo),l.mipmapCount===1&&(s.minFilter=Vt),s.needsUpdate=!0,e&&e(s,l))},t,i),s}});function iu(n){xt.call(this,n)}iu.prototype=Object.assign(Object.create(xt.prototype),{constructor:iu,load:function(n,e,t,i){const r=new yt,s=new Ja(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(n,function(a){r.image=a;const o=n.search(/\.jpe?g($|\?)/i)>0||n.search(/^data\:image\/jpeg/)===0;r.format=o?_r:Tn,r.needsUpdate=!0,e!==void 0&&e(r)},t,i),r}});function Xe(){this.type="Curve",this.arcLengthDivisions=200}Object.assign(Xe.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(n,e){const t=this.getUtoTmapping(n);return this.getPoint(t,e)},getPoints:function(n=5){const e=[];for(let t=0;t<=n;t++)e.push(this.getPoint(t/n));return e},getSpacedPoints:function(n=5){const e=[];for(let t=0;t<=n;t++)e.push(this.getPointAt(t/n));return e},getLength:function(){const n=this.getLengths();return n[n.length-1]},getLengths:function(n){if(n===void 0&&(n=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===n+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let t,i=this.getPoint(0),r=0;e.push(0);for(let s=1;s<=n;s++)t=this.getPoint(s/n),r+=t.distanceTo(i),e.push(r),i=t;return this.cacheArcLengths=e,e},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(n,e){const t=this.getLengths();let i=0;const r=t.length;let s;e?s=e:s=n*t[r-1];let a=0,o=r-1,l;for(;a<=o;)if(i=Math.floor(a+(o-a)/2),l=t[i]-s,l<0)a=i+1;else if(l>0)o=i-1;else{o=i;break}if(i=o,t[i]===s)return i/(r-1);const c=t[i],u=t[i+1]-c,f=(s-c)/u;return(i+f)/(r-1)},getTangent:function(n,e){let i=n-1e-4,r=n+1e-4;i<0&&(i=0),r>1&&(r=1);const s=this.getPoint(i),a=this.getPoint(r),o=e||(s.isVector2?new Le:new O);return o.copy(a).sub(s).normalize(),o},getTangentAt:function(n,e){const t=this.getUtoTmapping(n);return this.getTangent(t,e)},computeFrenetFrames:function(n,e){const t=new O,i=[],r=[],s=[],a=new O,o=new ot;for(let f=0;f<=n;f++){const h=f/n;i[f]=this.getTangentAt(h,new O),i[f].normalize()}r[0]=new O,s[0]=new O;let l=Number.MAX_VALUE;const c=Math.abs(i[0].x),d=Math.abs(i[0].y),u=Math.abs(i[0].z);c<=l&&(l=c,t.set(1,0,0)),d<=l&&(l=d,t.set(0,1,0)),u<=l&&t.set(0,0,1),a.crossVectors(i[0],t).normalize(),r[0].crossVectors(i[0],a),s[0].crossVectors(i[0],r[0]);for(let f=1;f<=n;f++){if(r[f]=r[f-1].clone(),s[f]=s[f-1].clone(),a.crossVectors(i[f-1],i[f]),a.length()>Number.EPSILON){a.normalize();const h=Math.acos(tt.clamp(i[f-1].dot(i[f]),-1,1));r[f].applyMatrix4(o.makeRotationAxis(a,h))}s[f].crossVectors(i[f],r[f])}if(e===!0){let f=Math.acos(tt.clamp(r[0].dot(r[n]),-1,1));f/=n,i[0].dot(a.crossVectors(r[0],r[n]))>0&&(f=-f);for(let h=1;h<=n;h++)r[h].applyMatrix4(o.makeRotationAxis(i[h],f*h)),s[h].crossVectors(i[h],r[h])}return{tangents:i,normals:r,binormals:s}},clone:function(){return new this.constructor().copy(this)},copy:function(n){return this.arcLengthDivisions=n.arcLengthDivisions,this},toJSON:function(){const n={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return n.arcLengthDivisions=this.arcLengthDivisions,n.type=this.type,n},fromJSON:function(n){return this.arcLengthDivisions=n.arcLengthDivisions,this}});function Rn(n,e,t,i,r,s,a,o){Xe.call(this),this.type="EllipseCurve",this.aX=n||0,this.aY=e||0,this.xRadius=t||1,this.yRadius=i||1,this.aStartAngle=r||0,this.aEndAngle=s||2*Math.PI,this.aClockwise=a||!1,this.aRotation=o||0}Rn.prototype=Object.create(Xe.prototype);Rn.prototype.constructor=Rn;Rn.prototype.isEllipseCurve=!0;Rn.prototype.getPoint=function(n,e){const t=e||new Le,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const s=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(s?r=0:r=i),this.aClockwise===!0&&!s&&(r===i?r=-i:r=r-i);const a=this.aStartAngle+n*r;let o=this.aX+this.xRadius*Math.cos(a),l=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const c=Math.cos(this.aRotation),d=Math.sin(this.aRotation),u=o-this.aX,f=l-this.aY;o=u*c-f*d+this.aX,l=u*d+f*c+this.aY}return t.set(o,l)};Rn.prototype.copy=function(n){return Xe.prototype.copy.call(this,n),this.aX=n.aX,this.aY=n.aY,this.xRadius=n.xRadius,this.yRadius=n.yRadius,this.aStartAngle=n.aStartAngle,this.aEndAngle=n.aEndAngle,this.aClockwise=n.aClockwise,this.aRotation=n.aRotation,this};Rn.prototype.toJSON=function(){const n=Xe.prototype.toJSON.call(this);return n.aX=this.aX,n.aY=this.aY,n.xRadius=this.xRadius,n.yRadius=this.yRadius,n.aStartAngle=this.aStartAngle,n.aEndAngle=this.aEndAngle,n.aClockwise=this.aClockwise,n.aRotation=this.aRotation,n};Rn.prototype.fromJSON=function(n){return Xe.prototype.fromJSON.call(this,n),this.aX=n.aX,this.aY=n.aY,this.xRadius=n.xRadius,this.yRadius=n.yRadius,this.aStartAngle=n.aStartAngle,this.aEndAngle=n.aEndAngle,this.aClockwise=n.aClockwise,this.aRotation=n.aRotation,this};function Ka(n,e,t,i,r,s){Rn.call(this,n,e,t,t,i,r,s),this.type="ArcCurve"}Ka.prototype=Object.create(Rn.prototype);Ka.prototype.constructor=Ka;Ka.prototype.isArcCurve=!0;function pp(){let n=0,e=0,t=0,i=0;function r(s,a,o,l){n=s,e=o,t=-3*s+3*a-2*o-l,i=2*s-2*a+o+l}return{initCatmullRom:function(s,a,o,l,c){r(a,o,c*(o-s),c*(l-a))},initNonuniformCatmullRom:function(s,a,o,l,c,d,u){let f=(a-s)/c-(o-s)/(c+d)+(o-a)/d,h=(o-a)/d-(l-a)/(d+u)+(l-o)/u;f*=d,h*=d,r(a,o,f,h)},calc:function(s){const a=s*s,o=a*s;return n+e*s+t*a+i*o}}}const rd=new O,oh=new pp,ch=new pp,lh=new pp;function tn(n=[],e=!1,t="centripetal",i=.5){Xe.call(this),this.type="CatmullRomCurve3",this.points=n,this.closed=e,this.curveType=t,this.tension=i}tn.prototype=Object.create(Xe.prototype);tn.prototype.constructor=tn;tn.prototype.isCatmullRomCurve3=!0;tn.prototype.getPoint=function(n,e=new O){const t=e,i=this.points,r=i.length,s=(r-(this.closed?0:1))*n;let a=Math.floor(s),o=s-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/r)+1)*r:o===0&&a===r-1&&(a=r-2,o=1);let l,c;this.closed||a>0?l=i[(a-1)%r]:(rd.subVectors(i[0],i[1]).add(i[0]),l=rd);const d=i[a%r],u=i[(a+1)%r];if(this.closed||a+2<r?c=i[(a+2)%r]:(rd.subVectors(i[r-1],i[r-2]).add(i[r-1]),c=rd),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let h=Math.pow(l.distanceToSquared(d),f),m=Math.pow(d.distanceToSquared(u),f),x=Math.pow(u.distanceToSquared(c),f);m<1e-4&&(m=1),h<1e-4&&(h=m),x<1e-4&&(x=m),oh.initNonuniformCatmullRom(l.x,d.x,u.x,c.x,h,m,x),ch.initNonuniformCatmullRom(l.y,d.y,u.y,c.y,h,m,x),lh.initNonuniformCatmullRom(l.z,d.z,u.z,c.z,h,m,x)}else this.curveType==="catmullrom"&&(oh.initCatmullRom(l.x,d.x,u.x,c.x,this.tension),ch.initCatmullRom(l.y,d.y,u.y,c.y,this.tension),lh.initCatmullRom(l.z,d.z,u.z,c.z,this.tension));return t.set(oh.calc(o),ch.calc(o),lh.calc(o)),t};tn.prototype.copy=function(n){Xe.prototype.copy.call(this,n),this.points=[];for(let e=0,t=n.points.length;e<t;e++){const i=n.points[e];this.points.push(i.clone())}return this.closed=n.closed,this.curveType=n.curveType,this.tension=n.tension,this};tn.prototype.toJSON=function(){const n=Xe.prototype.toJSON.call(this);n.points=[];for(let e=0,t=this.points.length;e<t;e++){const i=this.points[e];n.points.push(i.toArray())}return n.closed=this.closed,n.curveType=this.curveType,n.tension=this.tension,n};tn.prototype.fromJSON=function(n){Xe.prototype.fromJSON.call(this,n),this.points=[];for(let e=0,t=n.points.length;e<t;e++){const i=n.points[e];this.points.push(new O().fromArray(i))}return this.closed=n.closed,this.curveType=n.curveType,this.tension=n.tension,this};function Sg(n,e,t,i,r){const s=(i-e)*.5,a=(r-t)*.5,o=n*n,l=n*o;return(2*t-2*i+s+a)*l+(-3*t+3*i-2*s-a)*o+s*n+t}function uR(n,e){const t=1-n;return t*t*e}function fR(n,e){return 2*(1-n)*n*e}function hR(n,e){return n*n*e}function $o(n,e,t,i){return uR(n,e)+fR(n,t)+hR(n,i)}function pR(n,e){const t=1-n;return t*t*t*e}function mR(n,e){const t=1-n;return 3*t*t*n*e}function xR(n,e){return 3*(1-n)*n*n*e}function gR(n,e){return n*n*n*e}function jo(n,e,t,i,r){return pR(n,e)+mR(n,t)+xR(n,i)+gR(n,r)}function ni(n=new Le,e=new Le,t=new Le,i=new Le){Xe.call(this),this.type="CubicBezierCurve",this.v0=n,this.v1=e,this.v2=t,this.v3=i}ni.prototype=Object.create(Xe.prototype);ni.prototype.constructor=ni;ni.prototype.isCubicBezierCurve=!0;ni.prototype.getPoint=function(n,e=new Le){const t=e,i=this.v0,r=this.v1,s=this.v2,a=this.v3;return t.set(jo(n,i.x,r.x,s.x,a.x),jo(n,i.y,r.y,s.y,a.y)),t};ni.prototype.copy=function(n){return Xe.prototype.copy.call(this,n),this.v0.copy(n.v0),this.v1.copy(n.v1),this.v2.copy(n.v2),this.v3.copy(n.v3),this};ni.prototype.toJSON=function(){const n=Xe.prototype.toJSON.call(this);return n.v0=this.v0.toArray(),n.v1=this.v1.toArray(),n.v2=this.v2.toArray(),n.v3=this.v3.toArray(),n};ni.prototype.fromJSON=function(n){return Xe.prototype.fromJSON.call(this,n),this.v0.fromArray(n.v0),this.v1.fromArray(n.v1),this.v2.fromArray(n.v2),this.v3.fromArray(n.v3),this};function bi(n=new O,e=new O,t=new O,i=new O){Xe.call(this),this.type="CubicBezierCurve3",this.v0=n,this.v1=e,this.v2=t,this.v3=i}bi.prototype=Object.create(Xe.prototype);bi.prototype.constructor=bi;bi.prototype.isCubicBezierCurve3=!0;bi.prototype.getPoint=function(n,e=new O){const t=e,i=this.v0,r=this.v1,s=this.v2,a=this.v3;return t.set(jo(n,i.x,r.x,s.x,a.x),jo(n,i.y,r.y,s.y,a.y),jo(n,i.z,r.z,s.z,a.z)),t};bi.prototype.copy=function(n){return Xe.prototype.copy.call(this,n),this.v0.copy(n.v0),this.v1.copy(n.v1),this.v2.copy(n.v2),this.v3.copy(n.v3),this};bi.prototype.toJSON=function(){const n=Xe.prototype.toJSON.call(this);return n.v0=this.v0.toArray(),n.v1=this.v1.toArray(),n.v2=this.v2.toArray(),n.v3=this.v3.toArray(),n};bi.prototype.fromJSON=function(n){return Xe.prototype.fromJSON.call(this,n),this.v0.fromArray(n.v0),this.v1.fromArray(n.v1),this.v2.fromArray(n.v2),this.v3.fromArray(n.v3),this};function pn(n=new Le,e=new Le){Xe.call(this),this.type="LineCurve",this.v1=n,this.v2=e}pn.prototype=Object.create(Xe.prototype);pn.prototype.constructor=pn;pn.prototype.isLineCurve=!0;pn.prototype.getPoint=function(n,e=new Le){const t=e;return n===1?t.copy(this.v2):(t.copy(this.v2).sub(this.v1),t.multiplyScalar(n).add(this.v1)),t};pn.prototype.getPointAt=function(n,e){return this.getPoint(n,e)};pn.prototype.getTangent=function(n,e){const t=e||new Le;return t.copy(this.v2).sub(this.v1).normalize(),t};pn.prototype.copy=function(n){return Xe.prototype.copy.call(this,n),this.v1.copy(n.v1),this.v2.copy(n.v2),this};pn.prototype.toJSON=function(){const n=Xe.prototype.toJSON.call(this);return n.v1=this.v1.toArray(),n.v2=this.v2.toArray(),n};pn.prototype.fromJSON=function(n){return Xe.prototype.fromJSON.call(this,n),this.v1.fromArray(n.v1),this.v2.fromArray(n.v2),this};function ii(n=new O,e=new O){Xe.call(this),this.type="LineCurve3",this.v1=n,this.v2=e}ii.prototype=Object.create(Xe.prototype);ii.prototype.constructor=ii;ii.prototype.isLineCurve3=!0;ii.prototype.getPoint=function(n,e=new O){const t=e;return n===1?t.copy(this.v2):(t.copy(this.v2).sub(this.v1),t.multiplyScalar(n).add(this.v1)),t};ii.prototype.getPointAt=function(n,e){return this.getPoint(n,e)};ii.prototype.copy=function(n){return Xe.prototype.copy.call(this,n),this.v1.copy(n.v1),this.v2.copy(n.v2),this};ii.prototype.toJSON=function(){const n=Xe.prototype.toJSON.call(this);return n.v1=this.v1.toArray(),n.v2=this.v2.toArray(),n};ii.prototype.fromJSON=function(n){return Xe.prototype.fromJSON.call(this,n),this.v1.fromArray(n.v1),this.v2.fromArray(n.v2),this};function ri(n=new Le,e=new Le,t=new Le){Xe.call(this),this.type="QuadraticBezierCurve",this.v0=n,this.v1=e,this.v2=t}ri.prototype=Object.create(Xe.prototype);ri.prototype.constructor=ri;ri.prototype.isQuadraticBezierCurve=!0;ri.prototype.getPoint=function(n,e=new Le){const t=e,i=this.v0,r=this.v1,s=this.v2;return t.set($o(n,i.x,r.x,s.x),$o(n,i.y,r.y,s.y)),t};ri.prototype.copy=function(n){return Xe.prototype.copy.call(this,n),this.v0.copy(n.v0),this.v1.copy(n.v1),this.v2.copy(n.v2),this};ri.prototype.toJSON=function(){const n=Xe.prototype.toJSON.call(this);return n.v0=this.v0.toArray(),n.v1=this.v1.toArray(),n.v2=this.v2.toArray(),n};ri.prototype.fromJSON=function(n){return Xe.prototype.fromJSON.call(this,n),this.v0.fromArray(n.v0),this.v1.fromArray(n.v1),this.v2.fromArray(n.v2),this};function _i(n=new O,e=new O,t=new O){Xe.call(this),this.type="QuadraticBezierCurve3",this.v0=n,this.v1=e,this.v2=t}_i.prototype=Object.create(Xe.prototype);_i.prototype.constructor=_i;_i.prototype.isQuadraticBezierCurve3=!0;_i.prototype.getPoint=function(n,e=new O){const t=e,i=this.v0,r=this.v1,s=this.v2;return t.set($o(n,i.x,r.x,s.x),$o(n,i.y,r.y,s.y),$o(n,i.z,r.z,s.z)),t};_i.prototype.copy=function(n){return Xe.prototype.copy.call(this,n),this.v0.copy(n.v0),this.v1.copy(n.v1),this.v2.copy(n.v2),this};_i.prototype.toJSON=function(){const n=Xe.prototype.toJSON.call(this);return n.v0=this.v0.toArray(),n.v1=this.v1.toArray(),n.v2=this.v2.toArray(),n};_i.prototype.fromJSON=function(n){return Xe.prototype.fromJSON.call(this,n),this.v0.fromArray(n.v0),this.v1.fromArray(n.v1),this.v2.fromArray(n.v2),this};function si(n=[]){Xe.call(this),this.type="SplineCurve",this.points=n}si.prototype=Object.create(Xe.prototype);si.prototype.constructor=si;si.prototype.isSplineCurve=!0;si.prototype.getPoint=function(n,e=new Le){const t=e,i=this.points,r=(i.length-1)*n,s=Math.floor(r),a=r-s,o=i[s===0?s:s-1],l=i[s],c=i[s>i.length-2?i.length-1:s+1],d=i[s>i.length-3?i.length-1:s+2];return t.set(Sg(a,o.x,l.x,c.x,d.x),Sg(a,o.y,l.y,c.y,d.y)),t};si.prototype.copy=function(n){Xe.prototype.copy.call(this,n),this.points=[];for(let e=0,t=n.points.length;e<t;e++){const i=n.points[e];this.points.push(i.clone())}return this};si.prototype.toJSON=function(){const n=Xe.prototype.toJSON.call(this);n.points=[];for(let e=0,t=this.points.length;e<t;e++){const i=this.points[e];n.points.push(i.toArray())}return n};si.prototype.fromJSON=function(n){Xe.prototype.fromJSON.call(this,n),this.points=[];for(let e=0,t=n.points.length;e<t;e++){const i=n.points[e];this.points.push(new Le().fromArray(i))}return this};var f0=Object.freeze({__proto__:null,ArcCurve:Ka,CatmullRomCurve3:tn,CubicBezierCurve:ni,CubicBezierCurve3:bi,EllipseCurve:Rn,LineCurve:pn,LineCurve3:ii,QuadraticBezierCurve:ri,QuadraticBezierCurve3:_i,SplineCurve:si});function yr(){Xe.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}yr.prototype=Object.assign(Object.create(Xe.prototype),{constructor:yr,add:function(n){this.curves.push(n)},closePath:function(){const n=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);n.equals(e)||this.curves.push(new pn(e,n))},getPoint:function(n){const e=n*this.getLength(),t=this.getCurveLengths();let i=0;for(;i<t.length;){if(t[i]>=e){const r=t[i]-e,s=this.curves[i],a=s.getLength(),o=a===0?0:1-r/a;return s.getPointAt(o)}i++}return null},getLength:function(){const n=this.getCurveLengths();return n[n.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const n=[];let e=0;for(let t=0,i=this.curves.length;t<i;t++)e+=this.curves[t].getLength(),n.push(e);return this.cacheLengths=n,n},getSpacedPoints:function(n=40){const e=[];for(let t=0;t<=n;t++)e.push(this.getPoint(t/n));return this.autoClose&&e.push(e[0]),e},getPoints:function(n=12){const e=[];let t;for(let i=0,r=this.curves;i<r.length;i++){const s=r[i],a=s&&s.isEllipseCurve?n*2:s&&(s.isLineCurve||s.isLineCurve3)?1:s&&s.isSplineCurve?n*s.points.length:n,o=s.getPoints(a);for(let l=0;l<o.length;l++){const c=o[l];t&&t.equals(c)||(e.push(c),t=c)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e},copy:function(n){Xe.prototype.copy.call(this,n),this.curves=[];for(let e=0,t=n.curves.length;e<t;e++){const i=n.curves[e];this.curves.push(i.clone())}return this.autoClose=n.autoClose,this},toJSON:function(){const n=Xe.prototype.toJSON.call(this);n.autoClose=this.autoClose,n.curves=[];for(let e=0,t=this.curves.length;e<t;e++){const i=this.curves[e];n.curves.push(i.toJSON())}return n},fromJSON:function(n){Xe.prototype.fromJSON.call(this,n),this.autoClose=n.autoClose,this.curves=[];for(let e=0,t=n.curves.length;e<t;e++){const i=n.curves[e];this.curves.push(new f0[i.type]().fromJSON(i))}return this}});function Kn(n){yr.call(this),this.type="Path",this.currentPoint=new Le,n&&this.setFromPoints(n)}Kn.prototype=Object.assign(Object.create(yr.prototype),{constructor:Kn,setFromPoints:function(n){this.moveTo(n[0].x,n[0].y);for(let e=1,t=n.length;e<t;e++)this.lineTo(n[e].x,n[e].y);return this},moveTo:function(n,e){return this.currentPoint.set(n,e),this},lineTo:function(n,e){const t=new pn(this.currentPoint.clone(),new Le(n,e));return this.curves.push(t),this.currentPoint.set(n,e),this},quadraticCurveTo:function(n,e,t,i){const r=new ri(this.currentPoint.clone(),new Le(n,e),new Le(t,i));return this.curves.push(r),this.currentPoint.set(t,i),this},bezierCurveTo:function(n,e,t,i,r,s){const a=new ni(this.currentPoint.clone(),new Le(n,e),new Le(t,i),new Le(r,s));return this.curves.push(a),this.currentPoint.set(r,s),this},splineThru:function(n){const e=[this.currentPoint.clone()].concat(n),t=new si(e);return this.curves.push(t),this.currentPoint.copy(n[n.length-1]),this},arc:function(n,e,t,i,r,s){const a=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(n+a,e+o,t,i,r,s),this},absarc:function(n,e,t,i,r,s){return this.absellipse(n,e,t,t,i,r,s),this},ellipse:function(n,e,t,i,r,s,a,o){const l=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(n+l,e+c,t,i,r,s,a,o),this},absellipse:function(n,e,t,i,r,s,a,o){const l=new Rn(n,e,t,i,r,s,a,o);if(this.curves.length>0){const d=l.getPoint(0);d.equals(this.currentPoint)||this.lineTo(d.x,d.y)}this.curves.push(l);const c=l.getPoint(1);return this.currentPoint.copy(c),this},copy:function(n){return yr.prototype.copy.call(this,n),this.currentPoint.copy(n.currentPoint),this},toJSON:function(){const n=yr.prototype.toJSON.call(this);return n.currentPoint=this.currentPoint.toArray(),n},fromJSON:function(n){return yr.prototype.fromJSON.call(this,n),this.currentPoint.fromArray(n.currentPoint),this}});function Sr(n){Kn.call(this,n),this.uuid=tt.generateUUID(),this.type="Shape",this.holes=[]}Sr.prototype=Object.assign(Object.create(Kn.prototype),{constructor:Sr,getPointsHoles:function(n){const e=[];for(let t=0,i=this.holes.length;t<i;t++)e[t]=this.holes[t].getPoints(n);return e},extractPoints:function(n){return{shape:this.getPoints(n),holes:this.getPointsHoles(n)}},copy:function(n){Kn.prototype.copy.call(this,n),this.holes=[];for(let e=0,t=n.holes.length;e<t;e++){const i=n.holes[e];this.holes.push(i.clone())}return this},toJSON:function(){const n=Kn.prototype.toJSON.call(this);n.uuid=this.uuid,n.holes=[];for(let e=0,t=this.holes.length;e<t;e++){const i=this.holes[e];n.holes.push(i.toJSON())}return n},fromJSON:function(n){Kn.prototype.fromJSON.call(this,n),this.uuid=n.uuid,this.holes=[];for(let e=0,t=n.holes.length;e<t;e++){const i=n.holes[e];this.holes.push(new Kn().fromJSON(i))}return this}});function Tt(n,e=1){je.call(this),this.type="Light",this.color=new Ve(n),this.intensity=e}Tt.prototype=Object.assign(Object.create(je.prototype),{constructor:Tt,isLight:!0,copy:function(n){return je.prototype.copy.call(this,n),this.color.copy(n.color),this.intensity=n.intensity,this},toJSON:function(n){const e=je.prototype.toJSON.call(this,n);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),e}});function ru(n,e,t){Tt.call(this,n,t),this.type="HemisphereLight",this.position.copy(je.DefaultUp),this.updateMatrix(),this.groundColor=new Ve(e)}ru.prototype=Object.assign(Object.create(Tt.prototype),{constructor:ru,isHemisphereLight:!0,copy:function(n){return Tt.prototype.copy.call(this,n),this.groundColor.copy(n.groundColor),this}});function Ji(n){this.camera=n,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new Le(512,512),this.map=null,this.mapPass=null,this.matrix=new ot,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new $c,this._frameExtents=new Le(1,1),this._viewportCount=1,this._viewports=[new gt(0,0,1,1)]}Object.assign(Ji.prototype,{_projScreenMatrix:new ot,_lightPositionWorld:new O,_lookTarget:new O,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(n){const e=this.camera,t=this.matrix,i=this._projScreenMatrix,r=this._lookTarget,s=this._lightPositionWorld;s.setFromMatrixPosition(n.matrixWorld),e.position.copy(s),r.setFromMatrixPosition(n.target.matrixWorld),e.lookAt(r),e.updateMatrixWorld(),i.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(i),t.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),t.multiply(e.projectionMatrix),t.multiply(e.matrixWorldInverse)},getViewport:function(n){return this._viewports[n]},getFrameExtents:function(){return this._frameExtents},copy:function(n){return this.camera=n.camera.clone(),this.bias=n.bias,this.radius=n.radius,this.mapSize.copy(n.mapSize),this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){const n={};return this.bias!==0&&(n.bias=this.bias),this.normalBias!==0&&(n.normalBias=this.normalBias),this.radius!==1&&(n.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(n.mapSize=this.mapSize.toArray()),n.camera=this.camera.toJSON(!1).object,delete n.camera.matrix,n}});function h0(){Ji.call(this,new qt(50,1,.5,500)),this.focus=1}h0.prototype=Object.assign(Object.create(Ji.prototype),{constructor:h0,isSpotLightShadow:!0,updateMatrices:function(n){const e=this.camera,t=tt.RAD2DEG*2*n.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=n.distance||e.far;(t!==e.fov||i!==e.aspect||r!==e.far)&&(e.fov=t,e.aspect=i,e.far=r,e.updateProjectionMatrix()),Ji.prototype.updateMatrices.call(this,n)}});function su(n,e,t,i,r,s){Tt.call(this,n,e),this.type="SpotLight",this.position.copy(je.DefaultUp),this.updateMatrix(),this.target=new je,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(a){this.intensity=a/Math.PI}}),this.distance=t!==void 0?t:0,this.angle=i!==void 0?i:Math.PI/3,this.penumbra=r!==void 0?r:0,this.decay=s!==void 0?s:1,this.shadow=new h0}su.prototype=Object.assign(Object.create(Tt.prototype),{constructor:su,isSpotLight:!0,copy:function(n){return Tt.prototype.copy.call(this,n),this.distance=n.distance,this.angle=n.angle,this.penumbra=n.penumbra,this.decay=n.decay,this.target=n.target.clone(),this.shadow=n.shadow.clone(),this}});function p0(){Ji.call(this,new qt(90,1,.5,500)),this._frameExtents=new Le(4,2),this._viewportCount=6,this._viewports=[new gt(2,1,1,1),new gt(0,1,1,1),new gt(3,1,1,1),new gt(1,1,1,1),new gt(3,0,1,1),new gt(1,0,1,1)],this._cubeDirections=[new O(1,0,0),new O(-1,0,0),new O(0,0,1),new O(0,0,-1),new O(0,1,0),new O(0,-1,0)],this._cubeUps=[new O(0,1,0),new O(0,1,0),new O(0,1,0),new O(0,1,0),new O(0,0,1),new O(0,0,-1)]}p0.prototype=Object.assign(Object.create(Ji.prototype),{constructor:p0,isPointLightShadow:!0,updateMatrices:function(n,e=0){const t=this.camera,i=this.matrix,r=this._lightPositionWorld,s=this._lookTarget,a=this._projScreenMatrix;r.setFromMatrixPosition(n.matrixWorld),t.position.copy(r),s.copy(t.position),s.add(this._cubeDirections[e]),t.up.copy(this._cubeUps[e]),t.lookAt(s),t.updateMatrixWorld(),i.makeTranslation(-r.x,-r.y,-r.z),a.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(a)}});function au(n,e,t,i){Tt.call(this,n,e),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return this.intensity*4*Math.PI},set:function(r){this.intensity=r/(4*Math.PI)}}),this.distance=t!==void 0?t:0,this.decay=i!==void 0?i:1,this.shadow=new p0}au.prototype=Object.assign(Object.create(Tt.prototype),{constructor:au,isPointLight:!0,copy:function(n){return Tt.prototype.copy.call(this,n),this.distance=n.distance,this.decay=n.decay,this.shadow=n.shadow.clone(),this}});function Qa(n=-1,e=1,t=1,i=-1,r=.1,s=2e3){gi.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=n,this.right=e,this.top=t,this.bottom=i,this.near=r,this.far=s,this.updateProjectionMatrix()}Qa.prototype=Object.assign(Object.create(gi.prototype),{constructor:Qa,isOrthographicCamera:!0,copy:function(n,e){return gi.prototype.copy.call(this,n,e),this.left=n.left,this.right=n.right,this.top=n.top,this.bottom=n.bottom,this.near=n.near,this.far=n.far,this.zoom=n.zoom,this.view=n.view===null?null:Object.assign({},n.view),this},setViewOffset:function(n,e,t,i,r,s){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=n,this.view.fullHeight=e,this.view.offsetX=t,this.view.offsetY=i,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()},clearViewOffset:function(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const n=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),t=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=t-n,s=t+n,a=i+e,o=i-e;if(this.view!==null&&this.view.enabled){const l=(this.right-this.left)/this.view.fullWidth/this.zoom,c=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=l*this.view.offsetX,s=r+l*this.view.width,a-=c*this.view.offsetY,o=a-c*this.view.height}this.projectionMatrix.makeOrthographic(r,s,a,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(n){const e=je.prototype.toJSON.call(this,n);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}});function m0(){Ji.call(this,new Qa(-5,5,5,-5,.5,500))}m0.prototype=Object.assign(Object.create(Ji.prototype),{constructor:m0,isDirectionalLightShadow:!0,updateMatrices:function(n){Ji.prototype.updateMatrices.call(this,n)}});function ou(n,e){Tt.call(this,n,e),this.type="DirectionalLight",this.position.copy(je.DefaultUp),this.updateMatrix(),this.target=new je,this.shadow=new m0}ou.prototype=Object.assign(Object.create(Tt.prototype),{constructor:ou,isDirectionalLight:!0,copy:function(n){return Tt.prototype.copy.call(this,n),this.target=n.target.clone(),this.shadow=n.shadow.clone(),this}});function cu(n,e){Tt.call(this,n,e),this.type="AmbientLight"}cu.prototype=Object.assign(Object.create(Tt.prototype),{constructor:cu,isAmbientLight:!0});function lu(n,e,t,i){Tt.call(this,n,e),this.type="RectAreaLight",this.width=t!==void 0?t:10,this.height=i!==void 0?i:10}lu.prototype=Object.assign(Object.create(Tt.prototype),{constructor:lu,isRectAreaLight:!0,copy:function(n){return Tt.prototype.copy.call(this,n),this.width=n.width,this.height=n.height,this},toJSON:function(n){const e=Tt.prototype.toJSON.call(this,n);return e.object.width=this.width,e.object.height=this.height,e}});class z2{constructor(){Object.defineProperty(this,"isSphericalHarmonics3",{value:!0}),this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new O)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const i=e.x,r=e.y,s=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.282095),t.addScaledVector(a[1],.488603*r),t.addScaledVector(a[2],.488603*s),t.addScaledVector(a[3],.488603*i),t.addScaledVector(a[4],1.092548*(i*r)),t.addScaledVector(a[5],1.092548*(r*s)),t.addScaledVector(a[6],.315392*(3*s*s-1)),t.addScaledVector(a[7],1.092548*(i*s)),t.addScaledVector(a[8],.546274*(i*i-r*r)),t}getIrradianceAt(e,t){const i=e.x,r=e.y,s=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.886227),t.addScaledVector(a[1],2*.511664*r),t.addScaledVector(a[2],2*.511664*s),t.addScaledVector(a[3],2*.511664*i),t.addScaledVector(a[4],2*.429043*i*r),t.addScaledVector(a[5],2*.429043*r*s),t.addScaledVector(a[6],.743125*s*s-.247708),t.addScaledVector(a[7],2*.429043*i*s),t.addScaledVector(a[8],.429043*(i*i-r*r)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(e.coefficients[i],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let i=0;i<9;i++)this.coefficients[i].lerp(e.coefficients[i],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const i=this.coefficients;for(let r=0;r<9;r++)i[r].fromArray(e,t+r*3);return this}toArray(e=[],t=0){const i=this.coefficients;for(let r=0;r<9;r++)i[r].toArray(e,t+r*3);return e}static getBasisAt(e,t){const i=e.x,r=e.y,s=e.z;t[0]=.282095,t[1]=.488603*r,t[2]=.488603*s,t[3]=.488603*i,t[4]=1.092548*i*r,t[5]=1.092548*r*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*i*s,t[8]=.546274*(i*i-r*r)}}function zn(n,e){Tt.call(this,void 0,e),this.type="LightProbe",this.sh=n!==void 0?n:new z2}zn.prototype=Object.assign(Object.create(Tt.prototype),{constructor:zn,isLightProbe:!0,copy:function(n){return Tt.prototype.copy.call(this,n),this.sh.copy(n.sh),this},fromJSON:function(n){return this.intensity=n.intensity,this.sh.fromArray(n.sh),this},toJSON:function(n){const e=Tt.prototype.toJSON.call(this,n);return e.object.sh=this.sh.toArray(),e}});function du(n){xt.call(this,n),this.textures={}}du.prototype=Object.assign(Object.create(xt.prototype),{constructor:du,load:function(n,e,t,i){const r=this,s=new Bn(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(n,function(a){try{e(r.parse(JSON.parse(a)))}catch(o){i?i(o):console.error(o),r.manager.itemError(n)}},t,i)},parse:function(n){const e=this.textures;function t(r){return e[r]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",r),e[r]}const i=new cR[n.type];if(n.uuid!==void 0&&(i.uuid=n.uuid),n.name!==void 0&&(i.name=n.name),n.color!==void 0&&i.color!==void 0&&i.color.setHex(n.color),n.roughness!==void 0&&(i.roughness=n.roughness),n.metalness!==void 0&&(i.metalness=n.metalness),n.sheen!==void 0&&(i.sheen=new Ve().setHex(n.sheen)),n.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(n.emissive),n.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(n.specular),n.shininess!==void 0&&(i.shininess=n.shininess),n.clearcoat!==void 0&&(i.clearcoat=n.clearcoat),n.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=n.clearcoatRoughness),n.fog!==void 0&&(i.fog=n.fog),n.flatShading!==void 0&&(i.flatShading=n.flatShading),n.blending!==void 0&&(i.blending=n.blending),n.combine!==void 0&&(i.combine=n.combine),n.side!==void 0&&(i.side=n.side),n.opacity!==void 0&&(i.opacity=n.opacity),n.transparent!==void 0&&(i.transparent=n.transparent),n.alphaTest!==void 0&&(i.alphaTest=n.alphaTest),n.depthTest!==void 0&&(i.depthTest=n.depthTest),n.depthWrite!==void 0&&(i.depthWrite=n.depthWrite),n.colorWrite!==void 0&&(i.colorWrite=n.colorWrite),n.stencilWrite!==void 0&&(i.stencilWrite=n.stencilWrite),n.stencilWriteMask!==void 0&&(i.stencilWriteMask=n.stencilWriteMask),n.stencilFunc!==void 0&&(i.stencilFunc=n.stencilFunc),n.stencilRef!==void 0&&(i.stencilRef=n.stencilRef),n.stencilFuncMask!==void 0&&(i.stencilFuncMask=n.stencilFuncMask),n.stencilFail!==void 0&&(i.stencilFail=n.stencilFail),n.stencilZFail!==void 0&&(i.stencilZFail=n.stencilZFail),n.stencilZPass!==void 0&&(i.stencilZPass=n.stencilZPass),n.wireframe!==void 0&&(i.wireframe=n.wireframe),n.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=n.wireframeLinewidth),n.wireframeLinecap!==void 0&&(i.wireframeLinecap=n.wireframeLinecap),n.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=n.wireframeLinejoin),n.rotation!==void 0&&(i.rotation=n.rotation),n.linewidth!==1&&(i.linewidth=n.linewidth),n.dashSize!==void 0&&(i.dashSize=n.dashSize),n.gapSize!==void 0&&(i.gapSize=n.gapSize),n.scale!==void 0&&(i.scale=n.scale),n.polygonOffset!==void 0&&(i.polygonOffset=n.polygonOffset),n.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=n.polygonOffsetFactor),n.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=n.polygonOffsetUnits),n.skinning!==void 0&&(i.skinning=n.skinning),n.morphTargets!==void 0&&(i.morphTargets=n.morphTargets),n.morphNormals!==void 0&&(i.morphNormals=n.morphNormals),n.dithering!==void 0&&(i.dithering=n.dithering),n.vertexTangents!==void 0&&(i.vertexTangents=n.vertexTangents),n.visible!==void 0&&(i.visible=n.visible),n.toneMapped!==void 0&&(i.toneMapped=n.toneMapped),n.userData!==void 0&&(i.userData=n.userData),n.vertexColors!==void 0&&(typeof n.vertexColors=="number"?i.vertexColors=n.vertexColors>0:i.vertexColors=n.vertexColors),n.uniforms!==void 0)for(const r in n.uniforms){const s=n.uniforms[r];switch(i.uniforms[r]={},s.type){case"t":i.uniforms[r].value=t(s.value);break;case"c":i.uniforms[r].value=new Ve().setHex(s.value);break;case"v2":i.uniforms[r].value=new Le().fromArray(s.value);break;case"v3":i.uniforms[r].value=new O().fromArray(s.value);break;case"v4":i.uniforms[r].value=new gt().fromArray(s.value);break;case"m3":i.uniforms[r].value=new Sn().fromArray(s.value);break;case"m4":i.uniforms[r].value=new ot().fromArray(s.value);break;default:i.uniforms[r].value=s.value}}if(n.defines!==void 0&&(i.defines=n.defines),n.vertexShader!==void 0&&(i.vertexShader=n.vertexShader),n.fragmentShader!==void 0&&(i.fragmentShader=n.fragmentShader),n.extensions!==void 0)for(const r in n.extensions)i.extensions[r]=n.extensions[r];if(n.shading!==void 0&&(i.flatShading=n.shading===1),n.size!==void 0&&(i.size=n.size),n.sizeAttenuation!==void 0&&(i.sizeAttenuation=n.sizeAttenuation),n.map!==void 0&&(i.map=t(n.map)),n.matcap!==void 0&&(i.matcap=t(n.matcap)),n.alphaMap!==void 0&&(i.alphaMap=t(n.alphaMap)),n.bumpMap!==void 0&&(i.bumpMap=t(n.bumpMap)),n.bumpScale!==void 0&&(i.bumpScale=n.bumpScale),n.normalMap!==void 0&&(i.normalMap=t(n.normalMap)),n.normalMapType!==void 0&&(i.normalMapType=n.normalMapType),n.normalScale!==void 0){let r=n.normalScale;Array.isArray(r)===!1&&(r=[r,r]),i.normalScale=new Le().fromArray(r)}return n.displacementMap!==void 0&&(i.displacementMap=t(n.displacementMap)),n.displacementScale!==void 0&&(i.displacementScale=n.displacementScale),n.displacementBias!==void 0&&(i.displacementBias=n.displacementBias),n.roughnessMap!==void 0&&(i.roughnessMap=t(n.roughnessMap)),n.metalnessMap!==void 0&&(i.metalnessMap=t(n.metalnessMap)),n.emissiveMap!==void 0&&(i.emissiveMap=t(n.emissiveMap)),n.emissiveIntensity!==void 0&&(i.emissiveIntensity=n.emissiveIntensity),n.specularMap!==void 0&&(i.specularMap=t(n.specularMap)),n.envMap!==void 0&&(i.envMap=t(n.envMap)),n.envMapIntensity!==void 0&&(i.envMapIntensity=n.envMapIntensity),n.reflectivity!==void 0&&(i.reflectivity=n.reflectivity),n.refractionRatio!==void 0&&(i.refractionRatio=n.refractionRatio),n.lightMap!==void 0&&(i.lightMap=t(n.lightMap)),n.lightMapIntensity!==void 0&&(i.lightMapIntensity=n.lightMapIntensity),n.aoMap!==void 0&&(i.aoMap=t(n.aoMap)),n.aoMapIntensity!==void 0&&(i.aoMapIntensity=n.aoMapIntensity),n.gradientMap!==void 0&&(i.gradientMap=t(n.gradientMap)),n.clearcoatMap!==void 0&&(i.clearcoatMap=t(n.clearcoatMap)),n.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=t(n.clearcoatRoughnessMap)),n.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=t(n.clearcoatNormalMap)),n.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new Le().fromArray(n.clearcoatNormalScale)),n.transmission!==void 0&&(i.transmission=n.transmission),n.transmissionMap!==void 0&&(i.transmissionMap=t(n.transmissionMap)),i},setTextures:function(n){return this.textures=n,this}});const mp={decodeText:function(n){if(typeof TextDecoder<"u")return new TextDecoder().decode(n);let e="";for(let t=0,i=n.length;t<i;t++)e+=String.fromCharCode(n[t]);try{return decodeURIComponent(escape(e))}catch{return e}},extractUrlBase:function(n){const e=n.lastIndexOf("/");return e===-1?"./":n.substr(0,e+1)}};function Ac(){Ye.call(this),this.type="InstancedBufferGeometry",this.instanceCount=1/0}Ac.prototype=Object.assign(Object.create(Ye.prototype),{constructor:Ac,isInstancedBufferGeometry:!0,copy:function(n){return Ye.prototype.copy.call(this,n),this.instanceCount=n.instanceCount,this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){const n=Ye.prototype.toJSON.call(this);return n.instanceCount=this.instanceCount,n.isInstancedBufferGeometry=!0,n}});function uu(n,e,t,i){typeof t=="number"&&(i=t,t=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),Ke.call(this,n,e,t),this.meshPerAttribute=i||1}uu.prototype=Object.assign(Object.create(Ke.prototype),{constructor:uu,isInstancedBufferAttribute:!0,copy:function(n){return Ke.prototype.copy.call(this,n),this.meshPerAttribute=n.meshPerAttribute,this},toJSON:function(){const n=Ke.prototype.toJSON.call(this);return n.meshPerAttribute=this.meshPerAttribute,n.isInstancedBufferAttribute=!0,n}});function fu(n){xt.call(this,n)}fu.prototype=Object.assign(Object.create(xt.prototype),{constructor:fu,load:function(n,e,t,i){const r=this,s=new Bn(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(n,function(a){try{e(r.parse(JSON.parse(a)))}catch(o){i?i(o):console.error(o),r.manager.itemError(n)}},t,i)},parse:function(n){const e={},t={};function i(f,h){if(e[h]!==void 0)return e[h];const x=f.interleavedBuffers[h],p=r(f,x.buffer),v=Go(x.type,p),g=new En(v,x.stride);return g.uuid=x.uuid,e[h]=g,g}function r(f,h){if(t[h]!==void 0)return t[h];const x=f.arrayBuffers[h],p=new Uint32Array(x).buffer;return t[h]=p,p}const s=n.isInstancedBufferGeometry?new Ac:new Ye,a=n.data.index;if(a!==void 0){const f=Go(a.type,a.array);s.setIndex(new Ke(f,1))}const o=n.data.attributes;for(const f in o){const h=o[f];let m;if(h.isInterleavedBufferAttribute){const x=i(n.data,h.data);m=new Cr(x,h.itemSize,h.offset,h.normalized)}else{const x=Go(h.type,h.array),p=h.isInstancedBufferAttribute?uu:Ke;m=new p(x,h.itemSize,h.normalized)}h.name!==void 0&&(m.name=h.name),s.setAttribute(f,m)}const l=n.data.morphAttributes;if(l)for(const f in l){const h=l[f],m=[];for(let x=0,p=h.length;x<p;x++){const v=h[x];let g;if(v.isInterleavedBufferAttribute){const _=i(n.data,v.data);g=new Cr(_,v.itemSize,v.offset,v.normalized)}else{const _=Go(v.type,v.array);g=new Ke(_,v.itemSize,v.normalized)}v.name!==void 0&&(g.name=v.name),m.push(g)}s.morphAttributes[f]=m}n.data.morphTargetsRelative&&(s.morphTargetsRelative=!0);const d=n.data.groups||n.data.drawcalls||n.data.offsets;if(d!==void 0)for(let f=0,h=d.length;f!==h;++f){const m=d[f];s.addGroup(m.start,m.count,m.materialIndex)}const u=n.data.boundingSphere;if(u!==void 0){const f=new O;u.center!==void 0&&f.fromArray(u.center),s.boundingSphere=new qr(f,u.radius)}return n.name&&(s.name=n.name),n.userData&&(s.userData=n.userData),s}});class vR extends xt{constructor(e){super(e)}load(e,t,i,r){const s=this,a=this.path===""?mp.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||a;const o=new Bn(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(l){let c=null;try{c=JSON.parse(l)}catch(u){r!==void 0&&r(u),console.error("THREE:ObjectLoader: Can't parse "+e+".",u.message);return}const d=c.metadata;if(d===void 0||d.type===void 0||d.type.toLowerCase()==="geometry"){console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(c,t)},i,r)}parse(e,t){const i=this.parseAnimations(e.animations),r=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,r),a=this.parseImages(e.images,function(){t!==void 0&&t(c)}),o=this.parseTextures(e.textures,a),l=this.parseMaterials(e.materials,o),c=this.parseObject(e.object,s,l,i),d=this.parseSkeletons(e.skeletons,c);if(this.bindSkeletons(c,d),t!==void 0){let u=!1;for(const f in a)if(a[f]instanceof HTMLImageElement){u=!0;break}u===!1&&t(c)}return c}parseShapes(e){const t={};if(e!==void 0)for(let i=0,r=e.length;i<r;i++){const s=new Sr().fromJSON(e[i]);t[s.uuid]=s}return t}parseSkeletons(e,t){const i={},r={};if(t.traverse(function(s){s.isBone&&(r[s.uuid]=s)}),e!==void 0)for(let s=0,a=e.length;s<a;s++){const o=new xc().fromJSON(e[s],r);i[o.uuid]=o}return i}parseGeometries(e,t){const i={};let r;if(e!==void 0){const s=new fu;for(let a=0,o=e.length;a<o;a++){let l;const c=e[a];switch(c.type){case"PlaneGeometry":case"PlaneBufferGeometry":l=new sn[c.type](c.width,c.height,c.widthSegments,c.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":l=new sn[c.type](c.width,c.height,c.depth,c.widthSegments,c.heightSegments,c.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":l=new sn[c.type](c.radius,c.segments,c.thetaStart,c.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":l=new sn[c.type](c.radiusTop,c.radiusBottom,c.height,c.radialSegments,c.heightSegments,c.openEnded,c.thetaStart,c.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":l=new sn[c.type](c.radius,c.height,c.radialSegments,c.heightSegments,c.openEnded,c.thetaStart,c.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":l=new sn[c.type](c.radius,c.widthSegments,c.heightSegments,c.phiStart,c.phiLength,c.thetaStart,c.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":l=new sn[c.type](c.radius,c.detail);break;case"RingGeometry":case"RingBufferGeometry":l=new sn[c.type](c.innerRadius,c.outerRadius,c.thetaSegments,c.phiSegments,c.thetaStart,c.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":l=new sn[c.type](c.radius,c.tube,c.radialSegments,c.tubularSegments,c.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":l=new sn[c.type](c.radius,c.tube,c.tubularSegments,c.radialSegments,c.p,c.q);break;case"TubeGeometry":case"TubeBufferGeometry":l=new sn[c.type](new f0[c.path.type]().fromJSON(c.path),c.tubularSegments,c.radius,c.radialSegments,c.closed);break;case"LatheGeometry":case"LatheBufferGeometry":l=new sn[c.type](c.points,c.segments,c.phiStart,c.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":l=new sn[c.type](c.vertices,c.indices,c.radius,c.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":r=[];for(let u=0,f=c.shapes.length;u<f;u++){const h=t[c.shapes[u]];r.push(h)}l=new sn[c.type](r,c.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":r=[];for(let u=0,f=c.shapes.length;u<f;u++){const h=t[c.shapes[u]];r.push(h)}const d=c.options.extrudePath;d!==void 0&&(c.options.extrudePath=new f0[d.type]().fromJSON(d)),l=new sn[c.type](r,c.options);break;case"BufferGeometry":case"InstancedBufferGeometry":l=s.parse(c);break;case"Geometry":console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+c.type+'"');continue}l.uuid=c.uuid,c.name!==void 0&&(l.name=c.name),l.isBufferGeometry===!0&&c.userData!==void 0&&(l.userData=c.userData),i[c.uuid]=l}}return i}parseMaterials(e,t){const i={},r={};if(e!==void 0){const s=new du;s.setTextures(t);for(let a=0,o=e.length;a<o;a++){const l=e[a];if(l.type==="MultiMaterial"){const c=[];for(let d=0;d<l.materials.length;d++){const u=l.materials[d];i[u.uuid]===void 0&&(i[u.uuid]=s.parse(u)),c.push(i[u.uuid])}r[l.uuid]=c}else i[l.uuid]===void 0&&(i[l.uuid]=s.parse(l)),r[l.uuid]=i[l.uuid]}}return r}parseAnimations(e){const t={};if(e!==void 0)for(let i=0;i<e.length;i++){const r=e[i],s=Mn.parse(r);t[s.uuid]=s}return t}parseImages(e,t){const i=this,r={};let s;function a(l){return i.manager.itemStart(l),s.load(l,function(){i.manager.itemEnd(l)},void 0,function(){i.manager.itemError(l),i.manager.itemEnd(l)})}function o(l){if(typeof l=="string"){const c=l,d=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:i.resourcePath+c;return a(d)}else return l.data?{data:Go(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){const l=new hp(t);s=new Ja(l),s.setCrossOrigin(this.crossOrigin);for(let c=0,d=e.length;c<d;c++){const u=e[c],f=u.url;if(Array.isArray(f)){r[u.uuid]=[];for(let h=0,m=f.length;h<m;h++){const x=f[h],p=o(x);p!==null&&(p instanceof HTMLImageElement?r[u.uuid].push(p):r[u.uuid].push(new Yi(p.data,p.width,p.height)))}}else{const h=o(u.url);h!==null&&(r[u.uuid]=h)}}}return r}parseTextures(e,t){function i(s,a){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),a[s])}const r={};if(e!==void 0)for(let s=0,a=e.length;s<a;s++){const o=e[s];o.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',o.uuid),t[o.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",o.image);let l;const c=t[o.image];Array.isArray(c)?(l=new vi(c),c.length===6&&(l.needsUpdate=!0)):(c&&c.data?l=new Yi(c.data,c.width,c.height):l=new yt(c),c&&(l.needsUpdate=!0)),l.uuid=o.uuid,o.name!==void 0&&(l.name=o.name),o.mapping!==void 0&&(l.mapping=i(o.mapping,yR)),o.offset!==void 0&&l.offset.fromArray(o.offset),o.repeat!==void 0&&l.repeat.fromArray(o.repeat),o.center!==void 0&&l.center.fromArray(o.center),o.rotation!==void 0&&(l.rotation=o.rotation),o.wrap!==void 0&&(l.wrapS=i(o.wrap[0],Eg),l.wrapT=i(o.wrap[1],Eg)),o.format!==void 0&&(l.format=o.format),o.type!==void 0&&(l.type=o.type),o.encoding!==void 0&&(l.encoding=o.encoding),o.minFilter!==void 0&&(l.minFilter=i(o.minFilter,Tg)),o.magFilter!==void 0&&(l.magFilter=i(o.magFilter,Tg)),o.anisotropy!==void 0&&(l.anisotropy=o.anisotropy),o.flipY!==void 0&&(l.flipY=o.flipY),o.premultiplyAlpha!==void 0&&(l.premultiplyAlpha=o.premultiplyAlpha),o.unpackAlignment!==void 0&&(l.unpackAlignment=o.unpackAlignment),r[o.uuid]=l}return r}parseObject(e,t,i,r){let s;function a(d){return t[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",d),t[d]}function o(d){if(d!==void 0){if(Array.isArray(d)){const u=[];for(let f=0,h=d.length;f<h;f++){const m=d[f];i[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),u.push(i[m])}return u}return i[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",d),i[d]}}let l,c;switch(e.type){case"Scene":s=new dp,e.background!==void 0&&Number.isInteger(e.background)&&(s.background=new Ve(e.background)),e.fog!==void 0&&(e.fog.type==="Fog"?s.fog=new Eu(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(s.fog=new Su(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":s=new qt(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(s.focus=e.focus),e.zoom!==void 0&&(s.zoom=e.zoom),e.filmGauge!==void 0&&(s.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(s.filmOffset=e.filmOffset),e.view!==void 0&&(s.view=Object.assign({},e.view));break;case"OrthographicCamera":s=new Qa(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(s.zoom=e.zoom),e.view!==void 0&&(s.view=Object.assign({},e.view));break;case"AmbientLight":s=new cu(e.color,e.intensity);break;case"DirectionalLight":s=new ou(e.color,e.intensity);break;case"PointLight":s=new au(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":s=new lu(e.color,e.intensity,e.width,e.height);break;case"SpotLight":s=new su(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":s=new ru(e.color,e.groundColor,e.intensity);break;case"LightProbe":s=new zn().fromJSON(e);break;case"SkinnedMesh":l=a(e.geometry),c=o(e.material),s=new pc(l,c),e.bindMode!==void 0&&(s.bindMode=e.bindMode),e.bindMatrix!==void 0&&s.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(s.skeleton=e.skeleton);break;case"Mesh":l=a(e.geometry),c=o(e.material),s=new Et(l,c);break;case"InstancedMesh":l=a(e.geometry),c=o(e.material);const d=e.count,u=e.instanceMatrix;s=new Fd(l,c,d),s.instanceMatrix=new Ke(new Float32Array(u.array),16);break;case"LOD":s=new hc;break;case"Line":s=new Nn(a(e.geometry),o(e.material));break;case"LineLoop":s=new qd(a(e.geometry),o(e.material));break;case"LineSegments":s=new un(a(e.geometry),o(e.material));break;case"PointCloud":case"Points":s=new $a(a(e.geometry),o(e.material));break;case"Sprite":s=new fc(o(e.material));break;case"Group":s=new vr;break;case"Bone":s=new mc;break;default:s=new je}if(s.uuid=e.uuid,e.name!==void 0&&(s.name=e.name),e.matrix!==void 0?(s.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(s.matrixAutoUpdate=e.matrixAutoUpdate),s.matrixAutoUpdate&&s.matrix.decompose(s.position,s.quaternion,s.scale)):(e.position!==void 0&&s.position.fromArray(e.position),e.rotation!==void 0&&s.rotation.fromArray(e.rotation),e.quaternion!==void 0&&s.quaternion.fromArray(e.quaternion),e.scale!==void 0&&s.scale.fromArray(e.scale)),e.castShadow!==void 0&&(s.castShadow=e.castShadow),e.receiveShadow!==void 0&&(s.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(s.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(s.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(s.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&s.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(s.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(s.visible=e.visible),e.frustumCulled!==void 0&&(s.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(s.renderOrder=e.renderOrder),e.userData!==void 0&&(s.userData=e.userData),e.layers!==void 0&&(s.layers.mask=e.layers),e.children!==void 0){const d=e.children;for(let u=0;u<d.length;u++)s.add(this.parseObject(d[u],t,i,r))}if(e.animations!==void 0){const d=e.animations;for(let u=0;u<d.length;u++){const f=d[u];s.animations.push(r[f])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(s.autoUpdate=e.autoUpdate);const d=e.levels;for(let u=0;u<d.length;u++){const f=d[u],h=s.getObjectByProperty("uuid",f.object);h!==void 0&&s.addLevel(h,f.distance)}}return s}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(i){if(i.isSkinnedMesh===!0&&i.skeleton!==void 0){const r=t[i.skeleton];r===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",i.skeleton):i.bind(r,i.bindMatrix)}})}setTexturePath(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}}const yR={UVMapping:bu,CubeReflectionMapping:Gc,CubeRefractionMapping:kc,EquirectangularReflectionMapping:Pd,EquirectangularRefractionMapping:Id,CubeUVReflectionMapping:co,CubeUVRefractionMapping:Hc},Eg={RepeatWrapping:Ko,ClampToEdgeWrapping:an,MirroredRepeatWrapping:Qo},Tg={NearestFilter:Ut,NearestMipmapNearestFilter:Dd,NearestMipmapLinearFilter:Od,LinearFilter:Vt,LinearMipmapNearestFilter:np,LinearMipmapLinearFilter:lo};function x0(n){typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),xt.call(this,n),this.options={premultiplyAlpha:"none"}}x0.prototype=Object.assign(Object.create(xt.prototype),{constructor:x0,isImageBitmapLoader:!0,setOptions:function(e){return this.options=e,this},load:function(n,e,t,i){n===void 0&&(n=""),this.path!==void 0&&(n=this.path+n),n=this.manager.resolveURL(n);const r=this,s=zs.get(n);if(s!==void 0)return r.manager.itemStart(n),setTimeout(function(){e&&e(s),r.manager.itemEnd(n)},0),s;const a={};a.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",fetch(n,a).then(function(o){return o.blob()}).then(function(o){return createImageBitmap(o,r.options)}).then(function(o){zs.add(n,o),e&&e(o),r.manager.itemEnd(n)}).catch(function(o){i&&i(o),r.manager.itemError(n),r.manager.itemEnd(n)}),r.manager.itemStart(n)}});function xp(){this.type="ShapePath",this.color=new Ve,this.subPaths=[],this.currentPath=null}Object.assign(xp.prototype,{moveTo:function(n,e){return this.currentPath=new Kn,this.subPaths.push(this.currentPath),this.currentPath.moveTo(n,e),this},lineTo:function(n,e){return this.currentPath.lineTo(n,e),this},quadraticCurveTo:function(n,e,t,i){return this.currentPath.quadraticCurveTo(n,e,t,i),this},bezierCurveTo:function(n,e,t,i,r,s){return this.currentPath.bezierCurveTo(n,e,t,i,r,s),this},splineThru:function(n){return this.currentPath.splineThru(n),this},toShapes:function(n,e){function t(v){const g=[];for(let _=0,y=v.length;_<y;_++){const M=v[_],w=new Sr;w.curves=M.curves,g.push(w)}return g}function i(v,g){const _=g.length;let y=!1;for(let M=_-1,w=0;w<_;M=w++){let b=g[M],S=g[w],E=S.x-b.x,C=S.y-b.y;if(Math.abs(C)>Number.EPSILON){if(C<0&&(b=g[w],E=-E,S=g[M],C=-C),v.y<b.y||v.y>S.y)continue;if(v.y===b.y){if(v.x===b.x)return!0}else{const I=C*(v.x-b.x)-E*(v.y-b.y);if(I===0)return!0;if(I<0)continue;y=!y}}else{if(v.y!==b.y)continue;if(S.x<=v.x&&v.x<=b.x||b.x<=v.x&&v.x<=S.x)return!0}}return y}const r=Xi.isClockWise,s=this.subPaths;if(s.length===0)return[];if(e===!0)return t(s);let a,o,l;const c=[];if(s.length===1)return o=s[0],l=new Sr,l.curves=o.curves,c.push(l),c;let d=!r(s[0].getPoints());d=n?!d:d;const u=[],f=[];let h=[],m=0,x;f[m]=void 0,h[m]=[];for(let v=0,g=s.length;v<g;v++)o=s[v],x=o.getPoints(),a=r(x),a=n?!a:a,a?(!d&&f[m]&&m++,f[m]={s:new Sr,p:x},f[m].s.curves=o.curves,d&&m++,h[m]=[]):h[m].push({h:o,p:x[0]});if(!f[0])return t(s);if(f.length>1){let v=!1;const g=[];for(let _=0,y=f.length;_<y;_++)u[_]=[];for(let _=0,y=f.length;_<y;_++){const M=h[_];for(let w=0;w<M.length;w++){const b=M[w];let S=!0;for(let E=0;E<f.length;E++)i(b.p,f[E].p)&&(_!==E&&g.push({froms:_,tos:E,hole:w}),S?(S=!1,u[E].push(b)):v=!0);S&&u[_].push(b)}}g.length>0&&(v||(h=u))}let p;for(let v=0,g=f.length;v<g;v++){l=f[v].s,c.push(l),p=h[v];for(let _=0,y=p.length;_<y;_++)l.holes.push(p[_].h)}return c}});class F2{constructor(e){Object.defineProperty(this,"isFont",{value:!0}),this.type="Font",this.data=e}generateShapes(e,t=100){const i=[],r=bR(e,t,this.data);for(let s=0,a=r.length;s<a;s++)Array.prototype.push.apply(i,r[s].toShapes());return i}}function bR(n,e,t){const i=Array.from?Array.from(n):String(n).split(""),r=e/t.resolution,s=(t.boundingBox.yMax-t.boundingBox.yMin+t.underlineThickness)*r,a=[];let o=0,l=0;for(let c=0;c<i.length;c++){const d=i[c];if(d===`
`)o=0,l-=s;else{const u=_R(d,r,o,l,t);o+=u.offsetX,a.push(u.path)}}return a}function _R(n,e,t,i,r){const s=r.glyphs[n]||r.glyphs["?"];if(!s){console.error('THREE.Font: character "'+n+'" does not exists in font family '+r.familyName+".");return}const a=new xp;let o,l,c,d,u,f,h,m;if(s.o){const x=s._cachedOutline||(s._cachedOutline=s.o.split(" "));for(let p=0,v=x.length;p<v;)switch(x[p++]){case"m":o=x[p++]*e+t,l=x[p++]*e+i,a.moveTo(o,l);break;case"l":o=x[p++]*e+t,l=x[p++]*e+i,a.lineTo(o,l);break;case"q":c=x[p++]*e+t,d=x[p++]*e+i,u=x[p++]*e+t,f=x[p++]*e+i,a.quadraticCurveTo(u,f,c,d);break;case"b":c=x[p++]*e+t,d=x[p++]*e+i,u=x[p++]*e+t,f=x[p++]*e+i,h=x[p++]*e+t,m=x[p++]*e+i,a.bezierCurveTo(u,f,h,m,c,d);break}}return{offsetX:s.ha*e,path:a}}function g0(n){xt.call(this,n)}g0.prototype=Object.assign(Object.create(xt.prototype),{constructor:g0,load:function(n,e,t,i){const r=this,s=new Bn(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(r.withCredentials),s.load(n,function(a){let o;try{o=JSON.parse(a)}catch{console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),o=JSON.parse(a.substring(65,a.length-2))}const l=r.parse(o);e&&e(l)},t,i)},parse:function(n){return new F2(n)}});let sd;const gp={getContext:function(){return sd===void 0&&(sd=new(window.AudioContext||window.webkitAudioContext)),sd},setContext:function(n){sd=n}};function hu(n){xt.call(this,n)}hu.prototype=Object.assign(Object.create(xt.prototype),{constructor:hu,load:function(n,e,t,i){const r=this,s=new Bn(r.manager);s.setResponseType("arraybuffer"),s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(n,function(a){try{const o=a.slice(0);gp.getContext().decodeAudioData(o,function(c){e(c)})}catch(o){i?i(o):console.error(o),r.manager.itemError(n)}},t,i)}});function v0(n,e,t){zn.call(this,void 0,t);const i=new Ve().set(n),r=new Ve().set(e),s=new O(i.r,i.g,i.b),a=new O(r.r,r.g,r.b),o=Math.sqrt(Math.PI),l=o*Math.sqrt(.75);this.sh.coefficients[0].copy(s).add(a).multiplyScalar(o),this.sh.coefficients[1].copy(s).sub(a).multiplyScalar(l)}v0.prototype=Object.assign(Object.create(zn.prototype),{constructor:v0,isHemisphereLightProbe:!0,copy:function(n){return zn.prototype.copy.call(this,n),this},toJSON:function(n){return zn.prototype.toJSON.call(this,n)}});function y0(n,e){zn.call(this,void 0,e);const t=new Ve().set(n);this.sh.coefficients[0].set(t.r,t.g,t.b).multiplyScalar(2*Math.sqrt(Math.PI))}y0.prototype=Object.assign(Object.create(zn.prototype),{constructor:y0,isAmbientLightProbe:!0,copy:function(n){return zn.prototype.copy.call(this,n),this},toJSON:function(n){return zn.prototype.toJSON.call(this,n)}});const Ag=new ot,Lg=new ot;function q2(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new qt,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new qt,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}Object.assign(q2.prototype,{update:function(n){const e=this._cache;if(e.focus!==n.focus||e.fov!==n.fov||e.aspect!==n.aspect*this.aspect||e.near!==n.near||e.far!==n.far||e.zoom!==n.zoom||e.eyeSep!==this.eyeSep){e.focus=n.focus,e.fov=n.fov,e.aspect=n.aspect*this.aspect,e.near=n.near,e.far=n.far,e.zoom=n.zoom,e.eyeSep=this.eyeSep;const i=n.projectionMatrix.clone(),r=e.eyeSep/2,s=r*e.near/e.focus,a=e.near*Math.tan(tt.DEG2RAD*e.fov*.5)/e.zoom;let o,l;Lg.elements[12]=-r,Ag.elements[12]=r,o=-a*e.aspect+s,l=a*e.aspect+s,i.elements[0]=2*e.near/(l-o),i.elements[8]=(l+o)/(l-o),this.cameraL.projectionMatrix.copy(i),o=-a*e.aspect-s,l=a*e.aspect-s,i.elements[0]=2*e.near/(l-o),i.elements[8]=(l+o)/(l-o),this.cameraR.projectionMatrix.copy(i)}this.cameraL.matrixWorld.copy(n.matrixWorld).multiply(Lg),this.cameraR.matrixWorld.copy(n.matrixWorld).multiply(Ag)}});class N2{constructor(e){this.autoStart=e!==void 0?e:!0,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Cg(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=Cg();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function Cg(){return(typeof performance>"u"?Date:performance).now()}const Xr=new O,Rg=new Qt,wR=new O,Yr=new O;class MR extends je{constructor(){super(),this.type="AudioListener",this.context=gp.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new N2}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,i=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Xr,Rg,wR),Yr.set(0,0,-1).applyQuaternion(Rg),t.positionX){const r=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(Xr.x,r),t.positionY.linearRampToValueAtTime(Xr.y,r),t.positionZ.linearRampToValueAtTime(Xr.z,r),t.forwardX.linearRampToValueAtTime(Yr.x,r),t.forwardY.linearRampToValueAtTime(Yr.y,r),t.forwardZ.linearRampToValueAtTime(Yr.z,r),t.upX.linearRampToValueAtTime(i.x,r),t.upY.linearRampToValueAtTime(i.y,r),t.upZ.linearRampToValueAtTime(i.z,r)}else t.setPosition(Xr.x,Xr.y,Xr.z),t.setOrientation(Yr.x,Yr.y,Yr.z,i.x,i.y,i.z)}}class vp extends je{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const Zr=new O,Pg=new Qt,SR=new O,Jr=new O;class ER extends vp{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,i){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=i,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(Zr,Pg,SR),Jr.set(0,0,1).applyQuaternion(Pg);const t=this.panner;if(t.positionX){const i=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(Zr.x,i),t.positionY.linearRampToValueAtTime(Zr.y,i),t.positionZ.linearRampToValueAtTime(Zr.z,i),t.orientationX.linearRampToValueAtTime(Jr.x,i),t.orientationY.linearRampToValueAtTime(Jr.y,i),t.orientationZ.linearRampToValueAtTime(Jr.z,i)}else t.setPosition(Zr.x,Zr.y,Zr.z),t.setOrientation(Jr.x,Jr.y,Jr.z)}}class B2{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let i=0;i<t.length;i++)e+=t[i];return e/t.length}}function yp(n,e,t){this.binding=n,this.valueSize=t;let i,r,s;switch(e){case"quaternion":i=this._slerp,r=this._slerpAdditive,s=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(t*6),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,s=this._setAdditiveIdentityOther,this.buffer=new Array(t*5);break;default:i=this._lerp,r=this._lerpAdditive,s=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(t*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=s,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}Object.assign(yp.prototype,{accumulate:function(n,e){const t=this.buffer,i=this.valueSize,r=n*i+i;let s=this.cumulativeWeight;if(s===0){for(let a=0;a!==i;++a)t[r+a]=t[a];s=e}else{s+=e;const a=e/s;this._mixBufferRegion(t,r,0,a,i)}this.cumulativeWeight=s},accumulateAdditive:function(n){const e=this.buffer,t=this.valueSize,i=t*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(e,i,0,n,t),this.cumulativeWeightAdditive+=n},apply:function(n){const e=this.valueSize,t=this.buffer,i=n*e+e,r=this.cumulativeWeight,s=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const o=e*this._origIndex;this._mixBufferRegion(t,i,o,1-r,e)}s>0&&this._mixBufferRegionAdditive(t,i,this._addIndex*e,1,e);for(let o=e,l=e+e;o!==l;++o)if(t[o]!==t[o+e]){a.setValue(t,i);break}},saveOriginalState:function(){const n=this.binding,e=this.buffer,t=this.valueSize,i=t*this._origIndex;n.getValue(e,i);for(let r=t,s=i;r!==s;++r)e[r]=e[i+r%t];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0},restoreOriginalState:function(){const n=this.valueSize*3;this.binding.setValue(this.buffer,n)},_setAdditiveIdentityNumeric:function(){const n=this._addIndex*this.valueSize,e=n+this.valueSize;for(let t=n;t<e;t++)this.buffer[t]=0},_setAdditiveIdentityQuaternion:function(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1},_setAdditiveIdentityOther:function(){const n=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let t=0;t<this.valueSize;t++)this.buffer[e+t]=this.buffer[n+t]},_select:function(n,e,t,i,r){if(i>=.5)for(let s=0;s!==r;++s)n[e+s]=n[t+s]},_slerp:function(n,e,t,i){Qt.slerpFlat(n,e,n,e,n,t,i)},_slerpAdditive:function(n,e,t,i,r){const s=this._workIndex*r;Qt.multiplyQuaternionsFlat(n,s,n,e,n,t),Qt.slerpFlat(n,e,n,e,n,s,i)},_lerp:function(n,e,t,i,r){const s=1-i;for(let a=0;a!==r;++a){const o=e+a;n[o]=n[o]*s+n[t+a]*i}},_lerpAdditive:function(n,e,t,i,r){for(let s=0;s!==r;++s){const a=e+s;n[a]=n[a]+n[t+s]*i}}});const bp="\\[\\]\\.:\\/",TR=new RegExp("["+bp+"]","g"),_p="[^"+bp+"]",AR="[^"+bp.replace("\\.","")+"]",LR=/((?:WC+[\/:])*)/.source.replace("WC",_p),CR=/(WCOD+)?/.source.replace("WCOD",AR),RR=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",_p),PR=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",_p),IR=new RegExp("^"+LR+CR+RR+PR+"$"),DR=["material","materials","bones"];function U2(n,e,t){const i=t||en.parseTrackName(e);this._targetGroup=n,this._bindings=n.subscribe_(e,i)}Object.assign(U2.prototype,{getValue:function(n,e){this.bind();const t=this._targetGroup.nCachedObjects_,i=this._bindings[t];i!==void 0&&i.getValue(n,e)},setValue:function(n,e){const t=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=t.length;i!==r;++i)t[i].setValue(n,e)},bind:function(){const n=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=n.length;e!==t;++e)n[e].bind()},unbind:function(){const n=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=n.length;e!==t;++e)n[e].unbind()}});function en(n,e,t){this.path=e,this.parsedPath=t||en.parseTrackName(e),this.node=en.findNode(n,this.parsedPath.nodeName)||n,this.rootNode=n}Object.assign(en,{Composite:U2,create:function(n,e,t){return n&&n.isAnimationObjectGroup?new en.Composite(n,e,t):new en(n,e,t)},sanitizeNodeName:function(n){return n.replace(/\s/g,"_").replace(TR,"")},parseTrackName:function(n){const e=IR.exec(n);if(!e)throw new Error("PropertyBinding: Cannot parse trackName: "+n);const t={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=t.nodeName&&t.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const r=t.nodeName.substring(i+1);DR.indexOf(r)!==-1&&(t.nodeName=t.nodeName.substring(0,i),t.objectName=r)}if(t.propertyName===null||t.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+n);return t},findNode:function(n,e){if(!e||e===""||e==="."||e===-1||e===n.name||e===n.uuid)return n;if(n.skeleton){const t=n.skeleton.getBoneByName(e);if(t!==void 0)return t}if(n.children){const t=function(r){for(let s=0;s<r.length;s++){const a=r[s];if(a.name===e||a.uuid===e)return a;const o=t(a.children);if(o)return o}return null},i=t(n.children);if(i)return i}return null}});Object.assign(en.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(e,t){e[t]=this.node[this.propertyName]},function(e,t){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)e[t++]=i[r]},function(e,t){e[t]=this.resolvedProperty[this.propertyIndex]},function(e,t){this.resolvedProperty.toArray(e,t)}],SetterByBindingTypeAndVersioning:[[function(e,t){this.targetObject[this.propertyName]=e[t]},function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=e[t++]},function(e,t){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=e[t++];this.targetObject.needsUpdate=!0},function(e,t){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty[this.propertyIndex]=e[t]},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty.fromArray(e,t)},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(e,t){this.bind(),this.getValue(e,t)},setValue:function(e,t){this.bind(),this.setValue(e,t)},bind:function(){let n=this.node;const e=this.parsedPath,t=e.objectName,i=e.propertyName;let r=e.propertyIndex;if(n||(n=en.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=n),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!n){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(t){let l=e.objectIndex;switch(t){case"materials":if(!n.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!n.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}n=n.material.materials;break;case"bones":if(!n.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}n=n.skeleton.bones;for(let c=0;c<n.length;c++)if(n[c].name===l){l=c;break}break;default:if(n[t]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}n=n[t]}if(l!==void 0){if(n[l]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,n);return}n=n[l]}}const s=n[i];if(s===void 0){const l=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+l+"."+i+" but it wasn't found.",n);return}let a=this.Versioning.None;this.targetObject=n,n.needsUpdate!==void 0?a=this.Versioning.NeedsUpdate:n.matrixWorldNeedsUpdate!==void 0&&(a=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!n.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(n.geometry.isBufferGeometry){if(!n.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}n.morphTargetDictionary[r]!==void 0&&(r=n.morphTargetDictionary[r])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}o=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=r}else s.fromArray!==void 0&&s.toArray!==void 0?(o=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(o=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=i;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][a]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}});Object.assign(en.prototype,{_getValue_unbound:en.prototype.getValue,_setValue_unbound:en.prototype.setValue});function G2(){this.uuid=tt.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const n={};this._indicesByUUID=n;for(let t=0,i=arguments.length;t!==i;++t)n[arguments[t].uuid]=t;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}Object.assign(G2.prototype,{isAnimationObjectGroup:!0,add:function(){const n=this._objects,e=this._indicesByUUID,t=this._paths,i=this._parsedPaths,r=this._bindings,s=r.length;let a,o=n.length,l=this.nCachedObjects_;for(let c=0,d=arguments.length;c!==d;++c){const u=arguments[c],f=u.uuid;let h=e[f];if(h===void 0){h=o++,e[f]=h,n.push(u);for(let m=0,x=s;m!==x;++m)r[m].push(new en(u,t[m],i[m]))}else if(h<l){a=n[h];const m=--l,x=n[m];e[x.uuid]=h,n[h]=x,e[f]=m,n[m]=u;for(let p=0,v=s;p!==v;++p){const g=r[p],_=g[m];let y=g[h];g[h]=_,y===void 0&&(y=new en(u,t[p],i[p])),g[m]=y}}else n[h]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l},remove:function(){const n=this._objects,e=this._indicesByUUID,t=this._bindings,i=t.length;let r=this.nCachedObjects_;for(let s=0,a=arguments.length;s!==a;++s){const o=arguments[s],l=o.uuid,c=e[l];if(c!==void 0&&c>=r){const d=r++,u=n[d];e[u.uuid]=c,n[c]=u,e[l]=d,n[d]=o;for(let f=0,h=i;f!==h;++f){const m=t[f],x=m[d],p=m[c];m[c]=x,m[d]=p}}}this.nCachedObjects_=r},uncache:function(){const n=this._objects,e=this._indicesByUUID,t=this._bindings,i=t.length;let r=this.nCachedObjects_,s=n.length;for(let a=0,o=arguments.length;a!==o;++a){const l=arguments[a],c=l.uuid,d=e[c];if(d!==void 0)if(delete e[c],d<r){const u=--r,f=n[u],h=--s,m=n[h];e[f.uuid]=d,n[d]=f,e[m.uuid]=u,n[u]=m,n.pop();for(let x=0,p=i;x!==p;++x){const v=t[x],g=v[u],_=v[h];v[d]=g,v[u]=_,v.pop()}}else{const u=--s,f=n[u];u>0&&(e[f.uuid]=d),n[d]=f,n.pop();for(let h=0,m=i;h!==m;++h){const x=t[h];x[d]=x[u],x.pop()}}}this.nCachedObjects_=r},subscribe_:function(n,e){const t=this._bindingsIndicesByPath;let i=t[n];const r=this._bindings;if(i!==void 0)return r[i];const s=this._paths,a=this._parsedPaths,o=this._objects,l=o.length,c=this.nCachedObjects_,d=new Array(l);i=r.length,t[n]=i,s.push(n),a.push(e),r.push(d);for(let u=c,f=o.length;u!==f;++u){const h=o[u];d[u]=new en(h,n,e)}return d},unsubscribe_:function(n){const e=this._bindingsIndicesByPath,t=e[n];if(t!==void 0){const i=this._paths,r=this._parsedPaths,s=this._bindings,a=s.length-1,o=s[a],l=n[a];e[l]=t,s[t]=o,s.pop(),r[t]=r[a],r.pop(),i[t]=i[a],i.pop()}}});class OR{constructor(e,t,i=null,r=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=i,this.blendMode=r;const s=t.tracks,a=s.length,o=new Array(a),l={endingStart:cs,endingEnd:cs};for(let c=0;c!==a;++c){const d=s[c].createInterpolant(null);o[c]=d,d.settings=l}this._interpolantSettings=l,this._interpolants=o,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=c2,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,i){if(e.fadeOut(t),this.fadeIn(t),i){const r=this._clip.duration,s=e._clip.duration,a=s/r,o=r/s;e.warp(1,a,t),this.warp(o,1,t)}return this}crossFadeTo(e,t,i){return e.crossFadeFrom(this,t,i)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,i){const r=this._mixer,s=r.time,a=this.timeScale;let o=this._timeScaleInterpolant;o===null&&(o=r._lendControlInterpolant(),this._timeScaleInterpolant=o);const l=o.parameterPositions,c=o.sampleValues;return l[0]=s,l[1]=s+i,c[0]=e/a,c[1]=t/a,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,i,r){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const l=(e-s)*i;if(l<0||i===0)return;this._startTime=null,t=i*l}t*=this._updateTimeScale(e);const a=this._updateTime(t),o=this._updateWeight(e);if(o>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case ip:for(let d=0,u=l.length;d!==u;++d)l[d].evaluate(a),c[d].accumulateAdditive(o);break;case _u:default:for(let d=0,u=l.length;d!==u;++d)l[d].evaluate(a),c[d].accumulate(r,o)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const i=this._weightInterpolant;if(i!==null){const r=i.evaluate(e)[0];t*=r,e>i.parameterPositions[1]&&(this.stopFading(),r===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const i=this._timeScaleInterpolant;i!==null&&(t*=i.evaluate(e)[0],e>i.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t))}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,i=this.loop;let r=this.time+e,s=this._loopCount;const a=i===l2;if(e===0)return s===-1?r:a&&(s&1)===1?t-r:r;if(i===o2){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(r>=t)r=t;else if(r<0)r=0;else{this.time=r;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,a)):this._setEndings(this.repetitions===0,!0,a)),r>=t||r<0){const o=Math.floor(r/t);r-=t*o,s+=Math.abs(o);const l=this.repetitions-s;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=e>0?t:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const c=e<0;this._setEndings(c,!c,a)}else this._setEndings(!1,!1,a);this._loopCount=s,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}else this.time=r;if(a&&(s&1)===1)return t-r}return r}_setEndings(e,t,i){const r=this._interpolantSettings;i?(r.endingStart=ls,r.endingEnd=ls):(e?r.endingStart=this.zeroSlopeAtStart?ls:cs:r.endingStart=ic,t?r.endingEnd=this.zeroSlopeAtEnd?ls:cs:r.endingEnd=ic)}_scheduleFading(e,t,i){const r=this._mixer,s=r.time;let a=this._weightInterpolant;a===null&&(a=r._lendControlInterpolant(),this._weightInterpolant=a);const o=a.parameterPositions,l=a.sampleValues;return o[0]=s,l[0]=t,o[1]=s+e,l[1]=i,this}}function b0(n){this._root=n,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}b0.prototype=Object.assign(Object.create(Qi.prototype),{constructor:b0,_bindAction:function(n,e){const t=n._localRoot||this._root,i=n._clip.tracks,r=i.length,s=n._propertyBindings,a=n._interpolants,o=t.uuid,l=this._bindingsByRootAndName;let c=l[o];c===void 0&&(c={},l[o]=c);for(let d=0;d!==r;++d){const u=i[d],f=u.name;let h=c[f];if(h!==void 0)s[d]=h;else{if(h=s[d],h!==void 0){h._cacheIndex===null&&(++h.referenceCount,this._addInactiveBinding(h,o,f));continue}const m=e&&e._propertyBindings[d].binding.parsedPath;h=new yp(en.create(t,f,m),u.ValueTypeName,u.getValueSize()),++h.referenceCount,this._addInactiveBinding(h,o,f),s[d]=h}a[d].resultBuffer=h.buffer}},_activateAction:function(n){if(!this._isActiveAction(n)){if(n._cacheIndex===null){const t=(n._localRoot||this._root).uuid,i=n._clip.uuid,r=this._actionsByClip[i];this._bindAction(n,r&&r.knownActions[0]),this._addInactiveAction(n,i,t)}const e=n._propertyBindings;for(let t=0,i=e.length;t!==i;++t){const r=e[t];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(n)}},_deactivateAction:function(n){if(this._isActiveAction(n)){const e=n._propertyBindings;for(let t=0,i=e.length;t!==i;++t){const r=e[t];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(n)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const n=this;this.stats={actions:{get total(){return n._actions.length},get inUse(){return n._nActiveActions}},bindings:{get total(){return n._bindings.length},get inUse(){return n._nActiveBindings}},controlInterpolants:{get total(){return n._controlInterpolants.length},get inUse(){return n._nActiveControlInterpolants}}}},_isActiveAction:function(n){const e=n._cacheIndex;return e!==null&&e<this._nActiveActions},_addInactiveAction:function(n,e,t){const i=this._actions,r=this._actionsByClip;let s=r[e];if(s===void 0)s={knownActions:[n],actionByRoot:{}},n._byClipCacheIndex=0,r[e]=s;else{const a=s.knownActions;n._byClipCacheIndex=a.length,a.push(n)}n._cacheIndex=i.length,i.push(n),s.actionByRoot[t]=n},_removeInactiveAction:function(n){const e=this._actions,t=e[e.length-1],i=n._cacheIndex;t._cacheIndex=i,e[i]=t,e.pop(),n._cacheIndex=null;const r=n._clip.uuid,s=this._actionsByClip,a=s[r],o=a.knownActions,l=o[o.length-1],c=n._byClipCacheIndex;l._byClipCacheIndex=c,o[c]=l,o.pop(),n._byClipCacheIndex=null;const d=a.actionByRoot,u=(n._localRoot||this._root).uuid;delete d[u],o.length===0&&delete s[r],this._removeInactiveBindingsForAction(n)},_removeInactiveBindingsForAction:function(n){const e=n._propertyBindings;for(let t=0,i=e.length;t!==i;++t){const r=e[t];--r.referenceCount===0&&this._removeInactiveBinding(r)}},_lendAction:function(n){const e=this._actions,t=n._cacheIndex,i=this._nActiveActions++,r=e[i];n._cacheIndex=i,e[i]=n,r._cacheIndex=t,e[t]=r},_takeBackAction:function(n){const e=this._actions,t=n._cacheIndex,i=--this._nActiveActions,r=e[i];n._cacheIndex=i,e[i]=n,r._cacheIndex=t,e[t]=r},_addInactiveBinding:function(n,e,t){const i=this._bindingsByRootAndName,r=this._bindings;let s=i[e];s===void 0&&(s={},i[e]=s),s[t]=n,n._cacheIndex=r.length,r.push(n)},_removeInactiveBinding:function(n){const e=this._bindings,t=n.binding,i=t.rootNode.uuid,r=t.path,s=this._bindingsByRootAndName,a=s[i],o=e[e.length-1],l=n._cacheIndex;o._cacheIndex=l,e[l]=o,e.pop(),delete a[r],Object.keys(a).length===0&&delete s[i]},_lendBinding:function(n){const e=this._bindings,t=n._cacheIndex,i=this._nActiveBindings++,r=e[i];n._cacheIndex=i,e[i]=n,r._cacheIndex=t,e[t]=r},_takeBackBinding:function(n){const e=this._bindings,t=n._cacheIndex,i=--this._nActiveBindings,r=e[i];n._cacheIndex=i,e[i]=n,r._cacheIndex=t,e[t]=r},_lendControlInterpolant:function(){const n=this._controlInterpolants,e=this._nActiveControlInterpolants++;let t=n[e];return t===void 0&&(t=new Ec(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),t.__cacheIndex=e,n[e]=t),t},_takeBackControlInterpolant:function(n){const e=this._controlInterpolants,t=n.__cacheIndex,i=--this._nActiveControlInterpolants,r=e[i];n.__cacheIndex=i,e[i]=n,r.__cacheIndex=t,e[t]=r},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(n,e,t){const i=e||this._root,r=i.uuid;let s=typeof n=="string"?Mn.findByName(i,n):n;const a=s!==null?s.uuid:n,o=this._actionsByClip[a];let l=null;if(t===void 0&&(s!==null?t=s.blendMode:t=_u),o!==void 0){const d=o.actionByRoot[r];if(d!==void 0&&d.blendMode===t)return d;l=o.knownActions[0],s===null&&(s=l._clip)}if(s===null)return null;const c=new OR(this,s,e,t);return this._bindAction(c,l),this._addInactiveAction(c,a,r),c},existingAction:function(n,e){const t=e||this._root,i=t.uuid,r=typeof n=="string"?Mn.findByName(t,n):n,s=r?r.uuid:n,a=this._actionsByClip[s];return a!==void 0&&a.actionByRoot[i]||null},stopAllAction:function(){const n=this._actions,e=this._nActiveActions;for(let t=e-1;t>=0;--t)n[t].stop();return this},update:function(n){n*=this.timeScale;const e=this._actions,t=this._nActiveActions,i=this.time+=n,r=Math.sign(n),s=this._accuIndex^=1;for(let l=0;l!==t;++l)e[l]._update(i,n,r,s);const a=this._bindings,o=this._nActiveBindings;for(let l=0;l!==o;++l)a[l].apply(s);return this},setTime:function(n){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(n)},getRoot:function(){return this._root},uncacheClip:function(n){const e=this._actions,t=n.uuid,i=this._actionsByClip,r=i[t];if(r!==void 0){const s=r.knownActions;for(let a=0,o=s.length;a!==o;++a){const l=s[a];this._deactivateAction(l);const c=l._cacheIndex,d=e[e.length-1];l._cacheIndex=null,l._byClipCacheIndex=null,d._cacheIndex=c,e[c]=d,e.pop(),this._removeInactiveBindingsForAction(l)}delete i[t]}},uncacheRoot:function(n){const e=n.uuid,t=this._actionsByClip;for(const s in t){const a=t[s].actionByRoot,o=a[e];o!==void 0&&(this._deactivateAction(o),this._removeInactiveAction(o))}const i=this._bindingsByRootAndName,r=i[e];if(r!==void 0)for(const s in r){const a=r[s];a.restoreOriginalState(),this._removeInactiveBinding(a)}},uncacheAction:function(n,e){const t=this.existingAction(n,e);t!==null&&(this._deactivateAction(t),this._removeInactiveAction(t))}});class Au{constructor(e){typeof e=="string"&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new Au(this.value.clone===void 0?this.value:this.value.clone())}}function _0(n,e,t){En.call(this,n,e),this.meshPerAttribute=t||1}_0.prototype=Object.assign(Object.create(En.prototype),{constructor:_0,isInstancedInterleavedBuffer:!0,copy:function(n){return En.prototype.copy.call(this,n),this.meshPerAttribute=n.meshPerAttribute,this},clone:function(n){const e=En.prototype.clone.call(this,n);return e.meshPerAttribute=this.meshPerAttribute,e},toJSON:function(n){const e=En.prototype.toJSON.call(this,n);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}});function wp(n,e,t,i,r){this.buffer=n,this.type=e,this.itemSize=t,this.elementSize=i,this.count=r,this.version=0}Object.defineProperty(wp.prototype,"needsUpdate",{set:function(n){n===!0&&this.version++}});Object.assign(wp.prototype,{isGLBufferAttribute:!0,setBuffer:function(n){return this.buffer=n,this},setType:function(n,e){return this.type=n,this.elementSize=e,this},setItemSize:function(n){return this.itemSize=n,this},setCount:function(n){return this.count=n,this}});function Mp(n,e,t,i){this.ray=new fo(n,e),this.near=t||0,this.far=i||1/0,this.camera=null,this.layers=new op,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function Ig(n,e){return n.distance-e.distance}function w0(n,e,t,i){if(n.layers.test(e.layers)&&n.raycast(e,t),i===!0){const r=n.children;for(let s=0,a=r.length;s<a;s++)w0(r[s],e,t,!0)}}Object.assign(Mp.prototype,{set:function(n,e){this.ray.set(n,e)},setFromCamera:function(n,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(n.x,n.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e&&e.isOrthographicCamera?(this.ray.origin.set(n.x,n.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)},intersectObject:function(n,e,t){const i=t||[];return w0(n,this,i,e),i.sort(Ig),i},intersectObjects:function(n,e,t){const i=t||[];if(Array.isArray(n)===!1)return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),i;for(let r=0,s=n.length;r<s;r++)w0(n[r],this,i,e);return i.sort(Ig),i}});class zR{constructor(e=1,t=0,i=0){return this.radius=e,this.phi=t,this.theta=i,this}set(e,t,i){return this.radius=e,this.phi=t,this.theta=i,this}clone(){return new this.constructor().copy(this)}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+t*t+i*i),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,i),this.phi=Math.acos(tt.clamp(t/this.radius,-1,1))),this}}class FR{constructor(e,t,i){return this.radius=e!==void 0?e:1,this.theta=t!==void 0?t:0,this.y=i!==void 0?i:0,this}set(e,t,i){return this.radius=e,this.theta=t,this.y=i,this}clone(){return new this.constructor().copy(this)}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+i*i),this.theta=Math.atan2(e,i),this.y=t,this}}const Dg=new Le;class k2{constructor(e,t){Object.defineProperty(this,"isBox2",{value:!0}),this.min=e!==void 0?e:new Le(1/0,1/0),this.max=t!==void 0?t:new Le(-1/0,-1/0)}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=Dg.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return e===void 0&&(console.warn("THREE.Box2: .getCenter() target is now required"),e=new Le),this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return e===void 0&&(console.warn("THREE.Box2: .getSize() target is now required"),e=new Le),this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t===void 0&&(console.warn("THREE.Box2: .getParameter() target is now required"),t=new Le),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t===void 0&&(console.warn("THREE.Box2: .clampPoint() target is now required"),t=new Le),t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Dg.copy(e).clamp(this.min,this.max).sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Og=new O,ad=new O;class H2{constructor(e,t){this.start=e!==void 0?e:new O,this.end=t!==void 0?t:new O}set(e,t){return this.start.copy(e),this.end.copy(t),this}clone(){return new this.constructor().copy(this)}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e===void 0&&(console.warn("THREE.Line3: .getCenter() target is now required"),e=new O),e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e===void 0&&(console.warn("THREE.Line3: .delta() target is now required"),e=new O),e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return t===void 0&&(console.warn("THREE.Line3: .at() target is now required"),t=new O),this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){Og.subVectors(e,this.start),ad.subVectors(this.end,this.start);const i=ad.dot(ad);let s=ad.dot(Og)/i;return t&&(s=tt.clamp(s,0,1)),s}closestPointToPoint(e,t,i){const r=this.closestPointToPointParameter(e,t);return i===void 0&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),i=new O),this.delta(i).multiplyScalar(r).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}}function Lc(n){je.call(this),this.material=n,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}Lc.prototype=Object.create(je.prototype);Lc.prototype.constructor=Lc;Lc.prototype.isImmediateRenderObject=!0;const zg=new O;class qR extends je{constructor(e,t){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;const i=new Ye,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let a=0,o=1,l=32;a<l;a++,o++){const c=a/l*Math.PI*2,d=o/l*Math.PI*2;r.push(Math.cos(c),Math.sin(c),1,Math.cos(d),Math.sin(d),1)}i.setAttribute("position",new We(r,3));const s=new Ct({fog:!1,toneMapped:!1});this.cone=new un(i,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),zg.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(zg),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const mr=new O,od=new ot,dh=new ot;class V2 extends un{constructor(e){const t=W2(e),i=new Ye,r=[],s=[],a=new Ve(0,0,1),o=new Ve(0,1,0);for(let c=0;c<t.length;c++){const d=t[c];d.parent&&d.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),s.push(a.r,a.g,a.b),s.push(o.r,o.g,o.b))}i.setAttribute("position",new We(r,3)),i.setAttribute("color",new We(s,3));const l=new Ct({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(i,l),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,i=this.geometry,r=i.getAttribute("position");dh.copy(this.root.matrixWorld).invert();for(let s=0,a=0;s<t.length;s++){const o=t[s];o.parent&&o.parent.isBone&&(od.multiplyMatrices(dh,o.matrixWorld),mr.setFromMatrixPosition(od),r.setXYZ(a,mr.x,mr.y,mr.z),od.multiplyMatrices(dh,o.parent.matrixWorld),mr.setFromMatrixPosition(od),r.setXYZ(a+1,mr.x,mr.y,mr.z),a+=2)}i.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}function W2(n){const e=[];n&&n.isBone&&e.push(n);for(let t=0;t<n.children.length;t++)e.push.apply(e,W2(n.children[t]));return e}class NR extends Et{constructor(e,t,i){const r=new Sc(t,4,2),s=new Ln({wireframe:!0,fog:!1,toneMapped:!1});super(r,s),this.light=e,this.light.updateMatrixWorld(),this.color=i,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const BR=new O,Fg=new Ve,qg=new Ve;class UR extends je{constructor(e,t,i){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i;const r=new wc(t);r.rotateY(Math.PI*.5),this.material=new Ln({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=r.getAttribute("position"),a=new Float32Array(s.count*3);r.setAttribute("color",new Ke(a,3)),this.add(new Et(r,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");Fg.copy(this.light.color),qg.copy(this.light.groundColor);for(let i=0,r=t.count;i<r;i++){const s=i<r/2?Fg:qg;t.setXYZ(i,s.r,s.g,s.b)}t.needsUpdate=!0}e.lookAt(BR.setFromMatrixPosition(this.light.matrixWorld).negate())}}class $2 extends un{constructor(e=10,t=10,i=4473924,r=8947848){i=new Ve(i),r=new Ve(r);const s=t/2,a=e/t,o=e/2,l=[],c=[];for(let f=0,h=0,m=-o;f<=t;f++,m+=a){l.push(-o,0,m,o,0,m),l.push(m,0,-o,m,0,o);const x=f===s?i:r;x.toArray(c,h),h+=3,x.toArray(c,h),h+=3,x.toArray(c,h),h+=3,x.toArray(c,h),h+=3}const d=new Ye;d.setAttribute("position",new We(l,3)),d.setAttribute("color",new We(c,3));const u=new Ct({vertexColors:!0,toneMapped:!1});super(d,u),this.type="GridHelper"}}class GR extends un{constructor(e=10,t=16,i=8,r=64,s=4473924,a=8947848){s=new Ve(s),a=new Ve(a);const o=[],l=[];for(let u=0;u<=t;u++){const f=u/t*(Math.PI*2),h=Math.sin(f)*e,m=Math.cos(f)*e;o.push(0,0,0),o.push(h,0,m);const x=u&1?s:a;l.push(x.r,x.g,x.b),l.push(x.r,x.g,x.b)}for(let u=0;u<=i;u++){const f=u&1?s:a,h=e-e/i*u;for(let m=0;m<r;m++){let x=m/r*(Math.PI*2),p=Math.sin(x)*h,v=Math.cos(x)*h;o.push(p,0,v),l.push(f.r,f.g,f.b),x=(m+1)/r*(Math.PI*2),p=Math.sin(x)*h,v=Math.cos(x)*h,o.push(p,0,v),l.push(f.r,f.g,f.b)}}const c=new Ye;c.setAttribute("position",new We(o,3)),c.setAttribute("color",new We(l,3));const d=new Ct({vertexColors:!0,toneMapped:!1});super(c,d),this.type="PolarGridHelper"}}const Ng=new O,cd=new O,Bg=new O;class kR extends je{constructor(e,t,i){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,t===void 0&&(t=1);let r=new Ye;r.setAttribute("position",new We([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new Ct({fog:!1,toneMapped:!1});this.lightPlane=new Nn(r,s),this.add(this.lightPlane),r=new Ye,r.setAttribute("position",new We([0,0,0,0,0,1],3)),this.targetLine=new Nn(r,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){Ng.setFromMatrixPosition(this.light.matrixWorld),cd.setFromMatrixPosition(this.light.target.matrixWorld),Bg.subVectors(cd,Ng),this.lightPlane.lookAt(cd),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(cd),this.targetLine.scale.z=Bg.length()}}const ld=new O,Pt=new gi;class HR extends un{constructor(e){const t=new Ye,i=new Ct({color:16777215,vertexColors:!0,toneMapped:!1}),r=[],s=[],a={},o=new Ve(16755200),l=new Ve(16711680),c=new Ve(43775),d=new Ve(16777215),u=new Ve(3355443);f("n1","n2",o),f("n2","n4",o),f("n4","n3",o),f("n3","n1",o),f("f1","f2",o),f("f2","f4",o),f("f4","f3",o),f("f3","f1",o),f("n1","f1",o),f("n2","f2",o),f("n3","f3",o),f("n4","f4",o),f("p","n1",l),f("p","n2",l),f("p","n3",l),f("p","n4",l),f("u1","u2",c),f("u2","u3",c),f("u3","u1",c),f("c","t",d),f("p","c",u),f("cn1","cn2",u),f("cn3","cn4",u),f("cf1","cf2",u),f("cf3","cf4",u);function f(m,x,p){h(m,p),h(x,p)}function h(m,x){r.push(0,0,0),s.push(x.r,x.g,x.b),a[m]===void 0&&(a[m]=[]),a[m].push(r.length/3-1)}t.setAttribute("position",new We(r,3)),t.setAttribute("color",new We(s,3)),super(t,i),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update()}update(){const e=this.geometry,t=this.pointMap,i=1,r=1;Pt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Ot("c",t,e,Pt,0,0,-1),Ot("t",t,e,Pt,0,0,1),Ot("n1",t,e,Pt,-i,-r,-1),Ot("n2",t,e,Pt,i,-r,-1),Ot("n3",t,e,Pt,-i,r,-1),Ot("n4",t,e,Pt,i,r,-1),Ot("f1",t,e,Pt,-i,-r,1),Ot("f2",t,e,Pt,i,-r,1),Ot("f3",t,e,Pt,-i,r,1),Ot("f4",t,e,Pt,i,r,1),Ot("u1",t,e,Pt,i*.7,r*1.1,-1),Ot("u2",t,e,Pt,-i*.7,r*1.1,-1),Ot("u3",t,e,Pt,0,r*2,-1),Ot("cf1",t,e,Pt,-i,0,1),Ot("cf2",t,e,Pt,i,0,1),Ot("cf3",t,e,Pt,0,-r,1),Ot("cf4",t,e,Pt,0,r,1),Ot("cn1",t,e,Pt,-i,0,-1),Ot("cn2",t,e,Pt,i,0,-1),Ot("cn3",t,e,Pt,0,-r,-1),Ot("cn4",t,e,Pt,0,r,-1),e.getAttribute("position").needsUpdate=!0}}function Ot(n,e,t,i,r,s,a){ld.set(r,s,a).unproject(i);const o=e[n];if(o!==void 0){const l=t.getAttribute("position");for(let c=0,d=o.length;c<d;c++)l.setXYZ(o[c],ld.x,ld.y,ld.z)}}const dd=new er;class j2 extends un{constructor(e,t=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(8*3),s=new Ye;s.setIndex(new Ke(i,1)),s.setAttribute("position",new Ke(r,3)),super(s,new Ct({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&dd.setFromObject(this.object),dd.isEmpty())return;const t=dd.min,i=dd.max,r=this.geometry.attributes.position,s=r.array;s[0]=i.x,s[1]=i.y,s[2]=i.z,s[3]=t.x,s[4]=i.y,s[5]=i.z,s[6]=t.x,s[7]=t.y,s[8]=i.z,s[9]=i.x,s[10]=t.y,s[11]=i.z,s[12]=i.x,s[13]=i.y,s[14]=t.z,s[15]=t.x,s[16]=i.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=i.x,s[22]=t.y,s[23]=t.z,r.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e){return un.prototype.copy.call(this,e),this.object=e.object,this}}class VR extends un{constructor(e,t=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new Ye;s.setIndex(new Ke(i,1)),s.setAttribute("position",new We(r,3)),super(s,new Ct({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}}class WR extends Nn{constructor(e,t=1,i=16776960){const r=i,s=[1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],a=new Ye;a.setAttribute("position",new We(s,3)),a.computeBoundingSphere(),super(a,new Ct({color:r,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const o=[1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],l=new Ye;l.setAttribute("position",new We(o,3)),l.computeBoundingSphere(),this.add(new Et(l,new Ln({color:r,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){let t=-this.plane.constant;Math.abs(t)<1e-8&&(t=1e-8),this.scale.set(.5*this.size,.5*this.size,t),this.children[0].material.side=t<0?Ft:oo,this.lookAt(this.plane.normal),super.updateMatrixWorld(e)}}const Ug=new O;let ud,uh;class $R extends je{constructor(e,t,i,r,s,a){super(),this.type="ArrowHelper",e===void 0&&(e=new O(0,0,1)),t===void 0&&(t=new O(0,0,0)),i===void 0&&(i=1),r===void 0&&(r=16776960),s===void 0&&(s=.2*i),a===void 0&&(a=.2*s),ud===void 0&&(ud=new Ye,ud.setAttribute("position",new We([0,0,0,0,1,0],3)),uh=new Xa(0,.5,1,5,1),uh.translate(0,-.5,0)),this.position.copy(t),this.line=new Nn(ud,new Ct({color:r,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Et(uh,new Ln({color:r,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(i,s,a)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{Ug.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(Ug,t)}}setLength(e,t,i){t===void 0&&(t=.2*e),i===void 0&&(i=.2*t),this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(i,t,i),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}}class X2 extends un{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],i=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],r=new Ye;r.setAttribute("position",new We(t,3)),r.setAttribute("color",new We(i,3));const s=new Ct({vertexColors:!0,toneMapped:!1});super(r,s),this.type="AxesHelper"}}const Y2=new Float32Array(1),jR=new Int32Array(Y2.buffer),XR={toHalfFloat:function(n){Y2[0]=n;const e=jR[0];let t=e>>16&32768,i=e>>12&2047;const r=e>>23&255;return r<103?t:r>142?(t|=31744,t|=(r==255?0:1)&&e&8388607,t):r<113?(i|=2048,t|=(i>>114-r)+(i>>113-r&1),t):(t|=r-112<<10|i>>1,t+=i&1,t)}},za=4,Er=8,di=Math.pow(2,Er),Z2=[.125,.215,.35,.446,.526,.582],J2=Er-za+1+Z2.length,Ea=20,pi={[ln]:0,[Vc]:1,[Mu]:2,[rp]:3,[sp]:4,[ap]:5,[wu]:6},ts=new Ln({side:Ft,depthWrite:!1,depthTest:!1}),YR=new Et(new Es,ts),fh=new Qa,{_lodPlanes:Oo,_sizeLods:Gg,_sigmas:fd}=KR(),kg=new Ve;let hh=null;const ns=(1+Math.sqrt(5))/2,Ta=1/ns,Hg=[new O(1,1,1),new O(-1,1,1),new O(1,1,-1),new O(-1,1,-1),new O(0,ns,Ta),new O(0,ns,-Ta),new O(Ta,0,ns),new O(-Ta,0,ns),new O(ns,Ta,0),new O(-ns,Ta,0)];function Vg(n){const e=Math.max(n.r,n.g,n.b),t=Math.min(Math.max(Math.ceil(Math.log2(e)),-128),127);return n.multiplyScalar(Math.pow(2,-t)),(t+128)/255}class ZR{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._blurMaterial=QR(Ea),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,r=100){hh=this._renderer.getRenderTarget();const s=this._allocateTargets();return this._sceneToCubeUV(e,i,r,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e){return this._fromTexture(e)}fromCubemap(e){return this._fromTexture(e)}compileCubemapShader(){this._cubemapShader===null&&(this._cubemapShader=jg(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){this._equirectShader===null&&(this._equirectShader=$g(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),this._cubemapShader!==null&&this._cubemapShader.dispose(),this._equirectShader!==null&&this._equirectShader.dispose();for(let e=0;e<Oo.length;e++)Oo[e].dispose()}_cleanup(e){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(hh),e.scissorTest=!1,hd(e,0,0,e.width,e.height)}_fromTexture(e){hh=this._renderer.getRenderTarget();const t=this._allocateTargets(e);return this._textureToCubeUV(e,t),this._applyPMREM(t),this._cleanup(t),t}_allocateTargets(e){const t={magFilter:Ut,minFilter:Ut,generateMipmaps:!1,type:uo,format:Sv,encoding:JR(e)?e.encoding:Mu,depthBuffer:!1},i=Wg(t);return i.depthBuffer=!e,this._pingPongRenderTarget=Wg(t),i}_compileMaterial(e){const t=new Et(Oo[0],e);this._renderer.compile(t,fh)}_sceneToCubeUV(e,t,i,r){const o=new qt(90,1,t,i),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],d=this._renderer,u=d.autoClear,f=d.outputEncoding,h=d.toneMapping;d.getClearColor(kg),d.toneMapping=ms,d.outputEncoding=ln,d.autoClear=!1;let m=!1;const x=e.background;if(x){if(x.isColor){ts.color.copy(x).convertSRGBToLinear(),e.background=null;const p=Vg(ts.color);ts.opacity=p,m=!0}}else{ts.color.copy(kg).convertSRGBToLinear();const p=Vg(ts.color);ts.opacity=p,m=!0}for(let p=0;p<6;p++){const v=p%3;v==0?(o.up.set(0,l[p],0),o.lookAt(c[p],0,0)):v==1?(o.up.set(0,0,l[p]),o.lookAt(0,c[p],0)):(o.up.set(0,l[p],0),o.lookAt(0,0,c[p])),hd(r,v*di,p>2?di:0,di,di),d.setRenderTarget(r),m&&d.render(YR,o),d.render(e,o)}d.toneMapping=h,d.outputEncoding=f,d.autoClear=u}_textureToCubeUV(e,t){const i=this._renderer;e.isCubeTexture?this._cubemapShader==null&&(this._cubemapShader=jg()):this._equirectShader==null&&(this._equirectShader=$g());const r=e.isCubeTexture?this._cubemapShader:this._equirectShader,s=new Et(Oo[0],r),a=r.uniforms;a.envMap.value=e,e.isCubeTexture||a.texelSize.value.set(1/e.image.width,1/e.image.height),a.inputEncoding.value=pi[e.encoding],a.outputEncoding.value=pi[t.texture.encoding],hd(t,0,0,3*di,2*di),i.setRenderTarget(t),i.render(s,fh)}_applyPMREM(e){const t=this._renderer,i=t.autoClear;t.autoClear=!1;for(let r=1;r<J2;r++){const s=Math.sqrt(fd[r]*fd[r]-fd[r-1]*fd[r-1]),a=Hg[(r-1)%Hg.length];this._blur(e,r-1,r,s,a)}t.autoClear=i}_blur(e,t,i,r,s){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,i,r,"latitudinal",s),this._halfBlur(a,e,i,i,r,"longitudinal",s)}_halfBlur(e,t,i,r,s,a,o){const l=this._renderer,c=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const d=3,u=new Et(Oo[r],c),f=c.uniforms,h=Gg[i]-1,m=isFinite(s)?Math.PI/(2*h):2*Math.PI/(2*Ea-1),x=s/m,p=isFinite(s)?1+Math.floor(d*x):Ea;p>Ea&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${p} samples when the maximum is set to ${Ea}`);const v=[];let g=0;for(let w=0;w<Ea;++w){const b=w/x,S=Math.exp(-b*b/2);v.push(S),w==0?g+=S:w<p&&(g+=2*S)}for(let w=0;w<v.length;w++)v[w]=v[w]/g;f.envMap.value=e.texture,f.samples.value=p,f.weights.value=v,f.latitudinal.value=a==="latitudinal",o&&(f.poleAxis.value=o),f.dTheta.value=m,f.mipInt.value=Er-i,f.inputEncoding.value=pi[e.texture.encoding],f.outputEncoding.value=pi[e.texture.encoding];const _=Gg[r],y=3*Math.max(0,di-2*_),M=(r===0?0:2*di)+2*_*(r>Er-za?r-Er+za:0);hd(t,y,M,3*_,2*_),l.setRenderTarget(t),l.render(u,fh)}}function JR(n){return n===void 0||n.type!==uo?!1:n.encoding===ln||n.encoding===Vc||n.encoding===wu}function KR(){const n=[],e=[],t=[];let i=Er;for(let r=0;r<J2;r++){const s=Math.pow(2,i);e.push(s);let a=1/s;r>Er-za?a=Z2[r-Er+za-1]:r==0&&(a=0),t.push(a);const o=1/(s-1),l=-o/2,c=1+o/2,d=[l,l,c,l,c,c,l,l,c,c,l,c],u=6,f=6,h=3,m=2,x=1,p=new Float32Array(h*f*u),v=new Float32Array(m*f*u),g=new Float32Array(x*f*u);for(let y=0;y<u;y++){const M=y%3*2/3-1,w=y>2?0:-1,b=[M,w,0,M+2/3,w,0,M+2/3,w+1,0,M,w,0,M+2/3,w+1,0,M,w+1,0];p.set(b,h*f*y),v.set(d,m*f*y);const S=[y,y,y,y,y,y];g.set(S,x*f*y)}const _=new Ye;_.setAttribute("position",new Ke(p,h)),_.setAttribute("uv",new Ke(v,m)),_.setAttribute("faceIndex",new Ke(g,x)),n.push(_),i>za&&i--}return{_lodPlanes:n,_sizeLods:e,_sigmas:t}}function Wg(n){const e=new wr(3*di,3*di,n);return e.texture.mapping=co,e.texture.name="PMREM.cubeUv",e.scissorTest=!0,e}function hd(n,e,t,i,r){n.viewport.set(e,t,i,r),n.scissor.set(e,t,i,r)}function QR(n){const e=new Float32Array(n),t=new O(0,1,0);return new Zi({name:"SphericalGaussianBlur",defines:{n},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:e},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:t},inputEncoding:{value:pi[ln]},outputEncoding:{value:pi[ln]}},vertexShader:Sp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			${Ep()}

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:ji,depthTest:!1,depthWrite:!1})}function $g(){const n=new Le(1,1);return new Zi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:n},inputEncoding:{value:pi[ln]},outputEncoding:{value:pi[ln]}},vertexShader:Sp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform vec2 texelSize;

			${Ep()}

			#include <common>

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				vec2 f = fract( uv / texelSize - 0.5 );
				uv -= f * texelSize;
				vec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x += texelSize.x;
				vec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.y += texelSize.y;
				vec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x -= texelSize.x;
				vec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;

				vec3 tm = mix( tl, tr, f.x );
				vec3 bm = mix( bl, br, f.x );
				gl_FragColor.rgb = mix( tm, bm, f.y );

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:ji,depthTest:!1,depthWrite:!1})}function jg(){return new Zi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:pi[ln]},outputEncoding:{value:pi[ln]}},vertexShader:Sp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			${Ep()}

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;
				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:ji,depthTest:!1,depthWrite:!1})}function Sp(){return`

		precision mediump float;
		precision mediump int;

		attribute vec3 position;
		attribute vec2 uv;
		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Ep(){return`

		uniform int inputEncoding;
		uniform int outputEncoding;

		#include <encodings_pars_fragment>

		vec4 inputTexelToLinear( vec4 value ) {

			if ( inputEncoding == 0 ) {

				return value;

			} else if ( inputEncoding == 1 ) {

				return sRGBToLinear( value );

			} else if ( inputEncoding == 2 ) {

				return RGBEToLinear( value );

			} else if ( inputEncoding == 3 ) {

				return RGBMToLinear( value, 7.0 );

			} else if ( inputEncoding == 4 ) {

				return RGBMToLinear( value, 16.0 );

			} else if ( inputEncoding == 5 ) {

				return RGBDToLinear( value, 256.0 );

			} else {

				return GammaToLinear( value, 2.2 );

			}

		}

		vec4 linearToOutputTexel( vec4 value ) {

			if ( outputEncoding == 0 ) {

				return value;

			} else if ( outputEncoding == 1 ) {

				return LinearTosRGB( value );

			} else if ( outputEncoding == 2 ) {

				return LinearToRGBE( value );

			} else if ( outputEncoding == 3 ) {

				return LinearToRGBM( value, 7.0 );

			} else if ( outputEncoding == 4 ) {

				return LinearToRGBM( value, 16.0 );

			} else if ( outputEncoding == 5 ) {

				return LinearToRGBD( value, 256.0 );

			} else {

				return LinearToGamma( value, 2.2 );

			}

		}

		vec4 envMapTexelToLinear( vec4 color ) {

			return inputTexelToLinear( color );

		}
	`}function eP(n,e,t,i,r,s,a){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new cp(n,e,t,r,s,a)}const tP=0,nP=1,iP=0,rP=1,sP=2;function aP(n){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),n}function oP(n=[]){return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),n.isMultiMaterial=!0,n.materials=n,n.clone=function(){return n.slice()},n}function cP(n,e){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new $a(n,e)}function lP(n){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new fc(n)}function dP(n,e){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new $a(n,e)}function uP(n){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new ti(n)}function fP(n){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new ti(n)}function hP(n){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new ti(n)}function pP(n,e,t){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new O(n,e,t)}function mP(n,e){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),new Ke(n,e).setUsage(ws)}function xP(n,e){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new rc(n,e)}function gP(n,e){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new sc(n,e)}function vP(n,e){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new ac(n,e)}function yP(n,e){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new oc(n,e)}function bP(n,e){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new Ms(n,e)}function _P(n,e){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new cc(n,e)}function wP(n,e){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new Ss(n,e)}function MP(n,e){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new We(n,e)}function SP(n,e){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new dc(n,e)}Xe.create=function(n,e){return console.log("THREE.Curve.create() has been deprecated"),n.prototype=Object.create(Xe.prototype),n.prototype.constructor=n,n.prototype.getPoint=e,n};Object.assign(Kn.prototype,{fromPoints:function(n){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(n)}});function K2(n){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),tn.call(this,n),this.type="catmullrom",this.closed=!0}K2.prototype=Object.create(tn.prototype);function Q2(n){console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),tn.call(this,n),this.type="catmullrom"}Q2.prototype=Object.create(tn.prototype);function Tp(n){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),tn.call(this,n),this.type="catmullrom"}Tp.prototype=Object.create(tn.prototype);Object.assign(Tp.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}});function EP(n){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new X2(n)}function TP(n,e){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new j2(n,e)}function AP(n,e){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new un(new up(n.geometry),new Ct({color:e!==void 0?e:16777215}))}$2.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};V2.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};function LP(n,e){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new un(new fp(n.geometry),new Ct({color:e!==void 0?e:16777215}))}Object.assign(xt.prototype,{extractUrlBase:function(n){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),mp.extractUrlBase(n)}});xt.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};function CP(n){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new Bn(n)}function RP(n){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new nu(n)}Object.assign(k2.prototype,{center:function(n){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(n)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(n){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(n)},size:function(n){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(n)}});Object.assign(er.prototype,{center:function(n){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(n)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(n){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(n)},isIntersectionSphere:function(n){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(n)},size:function(n){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(n)}});Object.assign(qr.prototype,{empty:function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()}});$c.prototype.setFromMatrix=function(n){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(n)};H2.prototype.center=function(n){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(n)};Object.assign(tt,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(n){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),tt.floorPowerOfTwo(n)},nextPowerOfTwo:function(n){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),tt.ceilPowerOfTwo(n)}});Object.assign(Sn.prototype,{flattenToArrayOffset:function(n,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(n,e)},multiplyVector3:function(n){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),n.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBufferAttribute:function(n){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),n.applyMatrix3(this)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},getInverse:function(n){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(n).invert()}});Object.assign(ot.prototype,{extractPosition:function(n){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(n)},flattenToArrayOffset:function(n,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(n,e)},getPosition:function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new O().setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(n){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(n)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(n){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),n.applyMatrix4(this)},multiplyVector4:function(n){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),n.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(n){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),n.transformDirection(this)},crossVector:function(n){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),n.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBufferAttribute:function(n){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),n.applyMatrix4(this)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(n,e,t,i,r,s){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(n,e,i,t,r,s)},getInverse:function(n){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(n).invert()}});fi.prototype.isIntersectionLine=function(n){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(n)};Object.assign(Qt.prototype,{multiplyVector3:function(n){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),n.applyQuaternion(this)},inverse:function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()}});Object.assign(fo.prototype,{isIntersectionBox:function(n){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(n)},isIntersectionPlane:function(n){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(n)},isIntersectionSphere:function(n){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(n)}});Object.assign(Kt.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},barycoordFromPoint:function(n,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(n,e)},midpoint:function(n){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(n)},normal:function(n){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(n)},plane:function(n){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(n)}});Object.assign(Kt,{barycoordFromPoint:function(n,e,t,i,r){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),Kt.getBarycoord(n,e,t,i,r)},normal:function(n,e,t,i){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),Kt.getNormal(n,e,t,i)}});Object.assign(Sr.prototype,{extractAllPoints:function(n){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(n)},extrude:function(n){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new As(this,n)},makeGeometry:function(n){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Mc(this,n)}});Object.assign(Le.prototype,{fromAttribute:function(n,e,t){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(n,e,t)},distanceToManhattan:function(n){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(n)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(O.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(n){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(n)},getScaleFromMatrix:function(n){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(n)},getColumnFromMatrix:function(n,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,n)},applyProjection:function(n){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(n)},fromAttribute:function(n,e,t){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(n,e,t)},distanceToManhattan:function(n){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(n)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(gt.prototype,{fromAttribute:function(n,e,t){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(n,e,t)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(je.prototype,{getChildByName:function(n){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(n)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(n,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,n)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},applyMatrix:function(n){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(n)}});Object.defineProperties(je.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(n){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=n}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});Object.assign(Et.prototype,{setDrawMode:function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}});Object.defineProperties(Et.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),d2},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}});Object.defineProperties(hc.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}});Object.defineProperty(xc.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}});pc.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")};Object.defineProperty(Xe.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(n){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=n}});qt.prototype.setLens=function(n,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),e!==void 0&&(this.filmGauge=e),this.setFocalLength(n)};Object.defineProperties(Tt.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(n){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=n}},shadowCameraLeft:{set:function(n){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=n}},shadowCameraRight:{set:function(n){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=n}},shadowCameraTop:{set:function(n){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=n}},shadowCameraBottom:{set:function(n){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=n}},shadowCameraNear:{set:function(n){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=n}},shadowCameraFar:{set:function(n){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=n}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(n){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=n}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(n){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=n}},shadowMapHeight:{set:function(n){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=n}}});Object.defineProperties(Ke.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===ws},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(ws)}}});Object.assign(Ke.prototype,{setDynamic:function(n){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(n===!0?ws:Wc),this},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},setArray:function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}});Object.assign(Ye.prototype,{addIndex:function(n){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(n)},addAttribute:function(n,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),!(e&&e.isBufferAttribute)&&!(e&&e.isInterleavedBufferAttribute)?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(n,new Ke(arguments[1],arguments[2]))):n==="index"?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(n,e)},addDrawCall:function(n,e,t){t!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(n,e)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},removeAttribute:function(n){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(n)},applyMatrix:function(n){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(n)}});Object.defineProperties(Ye.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}});Object.defineProperties(Ac.prototype,{maxInstancedCount:{get:function(){return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount},set:function(n){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount=n}}});Object.defineProperties(Mp.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(n){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=n}}});Object.defineProperties(En.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.usage===ws},set:function(n){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(n)}}});Object.assign(En.prototype,{setDynamic:function(n){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(n===!0?ws:Wc),this},setArray:function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}});Object.assign(As.prototype,{getArrays:function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")}});Object.assign(dp.prototype,{dispose:function(){console.error("THREE.Scene: .dispose() has been removed.")}});Object.defineProperties(Au.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}});Object.defineProperties(Qe.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Ve}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(n){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===Q0}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(n){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=n}}});Object.defineProperties(Or.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}});Object.defineProperties(Dr.prototype,{transparency:{get:function(){return console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission},set:function(n){console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission=n}}});Object.defineProperties(dn.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(n){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=n}}});Object.assign(jc.prototype,{clearTarget:function(n,e,t,i){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(n),this.clear(e,t,i)},animate:function(n){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(n)},getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(n){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(n)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()}});Object.defineProperties(jc.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(n){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=n}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(n){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=n}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(n){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=n===!0?Vc:ln}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}});Object.defineProperties(A2.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});function PP(n,e,t){return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),new lp(n,t)}Object.defineProperties(wr.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(n){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=n}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(n){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=n}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(n){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=n}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(n){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=n}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(n){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=n}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(n){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=n}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(n){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=n}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(n){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=n}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(n){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=n}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(n){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=n}}});Object.defineProperties(vp.prototype,{load:{value:function(n){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return new hu().load(n,function(i){e.setBuffer(i)}),this}},startTime:{set:function(){console.warn("THREE.Audio: .startTime is now .play( delay ).")}}});B2.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()};Ts.prototype.updateCubeMap=function(n,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(n,e)};Ts.prototype.clear=function(n,e,t,i){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(n,e,t,i)};const IP={merge:function(n,e,t){console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");let i;e.isMesh&&(e.matrixAutoUpdate&&e.updateMatrix(),i=e.matrix,e=e.geometry),n.merge(e,i,t)},center:function(n){return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),n.center()}};Vs.crossOrigin=void 0;Vs.loadTexture=function(n,e,t,i){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const r=new iu;r.setCrossOrigin(this.crossOrigin);const s=r.load(n,t,void 0,i);return e&&(s.mapping=e),s};Vs.loadTextureCube=function(n,e,t,i){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const r=new tu;r.setCrossOrigin(this.crossOrigin);const s=r.load(n,t,void 0,i);return e&&(s.mapping=e),s};Vs.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")};Vs.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};function DP(){console.error("THREE.CanvasRenderer has been removed")}function OP(){console.error("THREE.JSONLoader has been removed.")}const zP={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};function FP(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:J0}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=J0);const qP=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:hv,AddEquation:rs,AddOperation:lv,AdditiveAnimationBlendMode:ip,AdditiveBlending:kh,AlphaFormat:_v,AlwaysDepth:nv,AlwaysStencilFunc:m2,AmbientLight:cu,AmbientLightProbe:y0,AnimationClip:Mn,AnimationLoader:d0,AnimationMixer:b0,AnimationObjectGroup:G2,AnimationUtils:Lt,ArcCurve:Ka,ArrayCamera:zd,ArrowHelper:$R,Audio:vp,AudioAnalyser:B2,AudioContext:gp,AudioListener:MR,AudioLoader:hu,AxesHelper:X2,AxisHelper:EP,BackSide:Ft,BasicDepthPacking:f2,BasicShadowMap:ZS,BinaryTextureLoader:RP,Bone:mc,BooleanKeyframeTrack:Jd,BoundingBoxHelper:TP,Box2:k2,Box3:er,Box3Helper:VR,BoxBufferGeometry:Es,BoxGeometry:Es,BoxHelper:j2,BufferAttribute:Ke,BufferGeometry:Ye,BufferGeometryLoader:fu,ByteType:mv,Cache:zs,Camera:gi,CameraHelper:HR,CanvasRenderer:DP,CanvasTexture:gc,CatmullRomCurve3:tn,CineonToneMapping:fv,CircleBufferGeometry:Nd,CircleGeometry:Nd,ClampToEdgeWrapping:an,Clock:N2,ClosedSplineCurve3:K2,Color:Ve,ColorKeyframeTrack:Kd,CompressedTexture:ja,CompressedTextureLoader:u0,ConeBufferGeometry:Bd,ConeGeometry:Bd,CubeCamera:Ts,CubeReflectionMapping:Gc,CubeRefractionMapping:kc,CubeTexture:vi,CubeTextureLoader:tu,CubeUVReflectionMapping:co,CubeUVRefractionMapping:Hc,CubicBezierCurve:ni,CubicBezierCurve3:bi,CubicInterpolant:Yd,CullFaceBack:Gh,CullFaceFront:G3,CullFaceFrontBack:YS,CullFaceNone:U3,Curve:Xe,CurvePath:yr,CustomBlending:H3,CustomToneMapping:pv,CylinderBufferGeometry:Xa,CylinderGeometry:Xa,Cylindrical:FR,DataTexture:Yi,DataTexture2DArray:Va,DataTexture3D:Wa,DataTextureLoader:nu,DataUtils:XR,DecrementStencilOp:oE,DecrementWrapStencilOp:lE,DefaultLoadingManager:O2,DepthFormat:xs,DepthStencilFormat:ka,DepthTexture:vc,DirectionalLight:ou,DirectionalLightHelper:kR,DiscreteInterpolant:Zd,DodecahedronBufferGeometry:Ud,DodecahedronGeometry:Ud,DoubleSide:Bc,DstAlphaFactor:Z3,DstColorFactor:K3,DynamicBufferAttribute:mP,DynamicCopyUsage:ME,DynamicDrawUsage:ws,DynamicReadUsage:bE,EdgesGeometry:up,EdgesHelper:AP,EllipseCurve:Rn,EqualDepth:rv,EqualStencilFunc:hE,EquirectangularReflectionMapping:Pd,EquirectangularRefractionMapping:Id,Euler:ho,EventDispatcher:Qi,ExtrudeBufferGeometry:As,ExtrudeGeometry:As,Face3:cp,Face4:eP,FaceColors:rP,FileLoader:Bn,FlatShading:Q0,Float16BufferAttribute:lc,Float32Attribute:MP,Float32BufferAttribute:We,Float64Attribute:SP,Float64BufferAttribute:dc,FloatType:ki,Fog:Eu,FogExp2:Su,Font:F2,FontLoader:g0,FrontSide:oo,Frustum:$c,GLBufferAttribute:wp,GLSL1:EE,GLSL3:i0,GammaEncoding:wu,GeometryUtils:IP,GreaterDepth:av,GreaterEqualDepth:sv,GreaterEqualStencilFunc:gE,GreaterStencilFunc:mE,GridHelper:$2,Group:vr,HalfFloatType:tc,HemisphereLight:ru,HemisphereLightHelper:UR,HemisphereLightProbe:v0,IcosahedronBufferGeometry:Gd,IcosahedronGeometry:Gd,ImageBitmapLoader:x0,ImageLoader:Ja,ImageUtils:Vs,ImmediateRenderObject:Lc,IncrementStencilOp:aE,IncrementWrapStencilOp:cE,InstancedBufferAttribute:uu,InstancedBufferGeometry:Ac,InstancedInterleavedBuffer:_0,InstancedMesh:Fd,Int16Attribute:yP,Int16BufferAttribute:oc,Int32Attribute:_P,Int32BufferAttribute:cc,Int8Attribute:xP,Int8BufferAttribute:rc,IntType:gv,InterleavedBuffer:En,InterleavedBufferAttribute:Cr,Interpolant:An,InterpolateDiscrete:nc,InterpolateLinear:Vo,InterpolateSmooth:wd,InvertStencilOp:dE,JSONLoader:OP,KeepStencilOp:Md,KeyframeTrack:Xt,LOD:hc,LatheBufferGeometry:kd,LatheGeometry:kd,Layers:op,LensFlare:FP,LessDepth:iv,LessEqualDepth:Rd,LessEqualStencilFunc:pE,LessStencilFunc:fE,Light:Tt,LightProbe:zn,Line:Nn,Line3:H2,LineBasicMaterial:Ct,LineCurve:pn,LineCurve3:ii,LineDashedMaterial:Os,LineLoop:qd,LinePieces:nP,LineSegments:un,LineStrip:tP,LinearEncoding:ln,LinearFilter:Vt,LinearInterpolant:Ec,LinearMipMapLinearFilter:tE,LinearMipMapNearestFilter:eE,LinearMipmapLinearFilter:lo,LinearMipmapNearestFilter:np,LinearToneMapping:dv,Loader:xt,LoaderUtils:mp,LoadingManager:hp,LogLuvEncoding:u2,LoopOnce:o2,LoopPingPong:l2,LoopRepeat:c2,LuminanceAlphaFormat:Mv,LuminanceFormat:wv,MOUSE:jS,Material:Qe,MaterialLoader:du,Math:tt,MathUtils:tt,Matrix3:Sn,Matrix4:ot,MaxEquation:$h,Mesh:Et,MeshBasicMaterial:Ln,MeshDepthMaterial:Ar,MeshDistanceMaterial:Lr,MeshFaceMaterial:aP,MeshLambertMaterial:Is,MeshMatcapMaterial:Ds,MeshNormalMaterial:Ps,MeshPhongMaterial:Or,MeshPhysicalMaterial:Dr,MeshStandardMaterial:yi,MeshToonMaterial:Rs,MinEquation:Wh,MirroredRepeatWrapping:Qo,MixOperation:cv,MultiMaterial:oP,MultiplyBlending:Vh,MultiplyOperation:Uc,NearestFilter:Ut,NearestMipMapLinearFilter:QS,NearestMipMapNearestFilter:KS,NearestMipmapLinearFilter:Od,NearestMipmapNearestFilter:Dd,NeverDepth:tv,NeverStencilFunc:uE,NoBlending:ji,NoColors:iP,NoToneMapping:ms,NormalAnimationBlendMode:_u,NormalBlending:Da,NotEqualDepth:ov,NotEqualStencilFunc:xE,NumberKeyframeTrack:Ya,Object3D:je,ObjectLoader:vR,ObjectSpaceNormalMap:p2,OctahedronBufferGeometry:wc,OctahedronGeometry:wc,OneFactor:j3,OneMinusDstAlphaFactor:J3,OneMinusDstColorFactor:Q3,OneMinusSrcAlphaFactor:tp,OneMinusSrcColorFactor:Y3,OrthographicCamera:Qa,PCFShadowMap:K0,PCFSoftShadowMap:k3,PMREMGenerator:ZR,ParametricBufferGeometry:Ls,ParametricGeometry:Ls,Particle:lP,ParticleBasicMaterial:fP,ParticleSystem:dP,ParticleSystemMaterial:hP,Path:Kn,PerspectiveCamera:qt,Plane:fi,PlaneBufferGeometry:uc,PlaneGeometry:uc,PlaneHelper:WR,PointCloud:cP,PointCloudMaterial:uP,PointLight:au,PointLightHelper:NR,Points:$a,PointsMaterial:ti,PolarGridHelper:GR,PolyhedronBufferGeometry:Pr,PolyhedronGeometry:Pr,PositionalAudio:ER,PropertyBinding:en,PropertyMixer:yp,QuadraticBezierCurve:ri,QuadraticBezierCurve3:_i,Quaternion:Qt,QuaternionKeyframeTrack:Tc,QuaternionLinearInterpolant:Qd,REVISION:J0,RGBADepthPacking:h2,RGBAFormat:Tn,RGBAIntegerFormat:Rv,RGBA_ASTC_10x10_Format:Hv,RGBA_ASTC_10x5_Format:Uv,RGBA_ASTC_10x6_Format:Gv,RGBA_ASTC_10x8_Format:kv,RGBA_ASTC_12x10_Format:Vv,RGBA_ASTC_12x12_Format:Wv,RGBA_ASTC_4x4_Format:Iv,RGBA_ASTC_5x4_Format:Dv,RGBA_ASTC_5x5_Format:Ov,RGBA_ASTC_6x5_Format:zv,RGBA_ASTC_6x6_Format:Fv,RGBA_ASTC_8x5_Format:qv,RGBA_ASTC_8x6_Format:Nv,RGBA_ASTC_8x8_Format:Bv,RGBA_BPTC_Format:$v,RGBA_ETC2_EAC_Format:n0,RGBA_PVRTC_2BPPV1_Format:e0,RGBA_PVRTC_4BPPV1_Format:Qh,RGBA_S3TC_DXT1_Format:Xh,RGBA_S3TC_DXT3_Format:Yh,RGBA_S3TC_DXT5_Format:Zh,RGBDEncoding:ap,RGBEEncoding:Mu,RGBEFormat:Sv,RGBFormat:_r,RGBIntegerFormat:Cv,RGBM16Encoding:sp,RGBM7Encoding:rp,RGB_ETC1_Format:Pv,RGB_ETC2_Format:t0,RGB_PVRTC_2BPPV1_Format:Kh,RGB_PVRTC_4BPPV1_Format:Jh,RGB_S3TC_DXT1_Format:jh,RGFormat:Av,RGIntegerFormat:Lv,RawShaderMaterial:Zi,Ray:fo,Raycaster:Mp,RectAreaLight:lu,RedFormat:Ev,RedIntegerFormat:Tv,ReinhardToneMapping:uv,RepeatWrapping:Ko,ReplaceStencilOp:sE,ReverseSubtractEquation:W3,RingBufferGeometry:Hd,RingGeometry:Hd,SRGB8_ALPHA8_ASTC_10x10_Format:r2,SRGB8_ALPHA8_ASTC_10x5_Format:t2,SRGB8_ALPHA8_ASTC_10x6_Format:n2,SRGB8_ALPHA8_ASTC_10x8_Format:i2,SRGB8_ALPHA8_ASTC_12x10_Format:s2,SRGB8_ALPHA8_ASTC_12x12_Format:a2,SRGB8_ALPHA8_ASTC_4x4_Format:jv,SRGB8_ALPHA8_ASTC_5x4_Format:Xv,SRGB8_ALPHA8_ASTC_5x5_Format:Yv,SRGB8_ALPHA8_ASTC_6x5_Format:Zv,SRGB8_ALPHA8_ASTC_6x6_Format:Jv,SRGB8_ALPHA8_ASTC_8x5_Format:Kv,SRGB8_ALPHA8_ASTC_8x6_Format:Qv,SRGB8_ALPHA8_ASTC_8x8_Format:e2,Scene:dp,SceneUtils:zP,ShaderChunk:ct,ShaderLib:Zn,ShaderMaterial:dn,ShadowMaterial:Cs,Shape:Sr,ShapeBufferGeometry:Mc,ShapeGeometry:Mc,ShapePath:xp,ShapeUtils:Xi,ShortType:xv,Skeleton:xc,SkeletonHelper:V2,SkinnedMesh:pc,SmoothShading:JS,Sphere:qr,SphereBufferGeometry:Sc,SphereGeometry:Sc,Spherical:zR,SphericalHarmonics3:z2,Spline:Tp,SplineCurve:si,SplineCurve3:Q2,SpotLight:su,SpotLightHelper:qR,Sprite:fc,SpriteMaterial:Rr,SrcAlphaFactor:ep,SrcAlphaSaturateFactor:ev,SrcColorFactor:X3,StaticCopyUsage:wE,StaticDrawUsage:Wc,StaticReadUsage:yE,StereoCamera:q2,StreamCopyUsage:SE,StreamDrawUsage:vE,StreamReadUsage:_E,StringKeyframeTrack:eu,SubtractEquation:V3,SubtractiveBlending:Hh,TOUCH:XS,TangentSpaceNormalMap:Hs,TetrahedronBufferGeometry:Vd,TetrahedronGeometry:Vd,TextBufferGeometry:Wd,TextGeometry:Wd,Texture:yt,TextureLoader:iu,TorusBufferGeometry:$d,TorusGeometry:$d,TorusKnotBufferGeometry:jd,TorusKnotGeometry:jd,Triangle:Kt,TriangleFanDrawMode:iE,TriangleStripDrawMode:nE,TrianglesDrawMode:d2,TubeBufferGeometry:Xd,TubeGeometry:Xd,UVMapping:bu,Uint16Attribute:bP,Uint16BufferAttribute:Ms,Uint32Attribute:wP,Uint32BufferAttribute:Ss,Uint8Attribute:gP,Uint8BufferAttribute:sc,Uint8ClampedAttribute:vP,Uint8ClampedBufferAttribute:ac,Uniform:Au,UniformsLib:qe,UniformsUtils:v2,UnsignedByteType:uo,UnsignedInt248Type:Oa,UnsignedIntType:Ho,UnsignedShort4444Type:vv,UnsignedShort5551Type:yv,UnsignedShort565Type:bv,UnsignedShortType:ec,VSMShadowMap:Ca,Vector2:Le,Vector3:O,Vector4:gt,VectorKeyframeTrack:Za,Vertex:pP,VertexColors:sP,VideoTexture:o0,WebGL1Renderer:s0,WebGLCubeRenderTarget:lp,WebGLMultisampleRenderTarget:AE,WebGLRenderTarget:wr,WebGLRenderTargetCube:PP,WebGLRenderer:jc,WebGLUtils:L2,WireframeGeometry:fp,WireframeHelper:LP,WrapAroundEnding:ic,XHRLoader:CP,ZeroCurvatureEnding:cs,ZeroFactor:$3,ZeroSlopeEnding:ls,ZeroStencilOp:rE,sRGBEncoding:Vc},Symbol.toStringTag,{value:"Module"})),NP=Cw(qP);(function(n){function e(g){return typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?e=function(y){return typeof y}:e=function(y){return y&&typeof Symbol=="function"&&y.constructor===Symbol&&y!==Symbol.prototype?"symbol":typeof y},e(g)}Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var t=r(NP);function i(g){if(typeof WeakMap!="function")return null;var _=new WeakMap,y=new WeakMap;return(i=function(w){return w?y:_})(g)}function r(g,_){if(!_&&g&&g.__esModule)return g;if(g===null||e(g)!=="object"&&typeof g!="function")return{default:g};var y=i(_);if(y&&y.has(g))return y.get(g);var M={},w=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var b in g)if(b!=="default"&&Object.prototype.hasOwnProperty.call(g,b)){var S=w?Object.getOwnPropertyDescriptor(g,b):null;S&&(S.get||S.set)?Object.defineProperty(M,b,S):M[b]=g[b]}return M.default=g,y&&y.set(g,M),M}function s(g,_){if(!(g instanceof _))throw new TypeError("Cannot call a class as a function")}function a(g,_){if(typeof _!="function"&&_!==null)throw new TypeError("Super expression must either be null or a function");g.prototype=Object.create(_&&_.prototype,{constructor:{value:g,writable:!0,configurable:!0}}),_&&o(g,_)}function o(g,_){return o=Object.setPrototypeOf||function(M,w){return M.__proto__=w,M},o(g,_)}function l(g){var _=u();return function(){var M=f(g),w;if(_){var b=f(this).constructor;w=Reflect.construct(M,arguments,b)}else w=M.apply(this,arguments);return c(this,w)}}function c(g,_){return _&&(e(_)==="object"||typeof _=="function")?_:d(g)}function d(g){if(g===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return g}function u(){if(typeof Reflect>"u"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch{return!1}}function f(g){return f=Object.setPrototypeOf?Object.getPrototypeOf:function(y){return y.__proto__||Object.getPrototypeOf(y)},f(g)}function h(g,_,y){return _ in g?Object.defineProperty(g,_,{value:y,enumerable:!0,configurable:!0,writable:!0}):g[_]=y,g}var m=Object.freeze({INACTIVE:Symbol("INACTIVE"),INDETERMINATE:Symbol("INDETERMINATE"),ROTATING:Symbol("ROTATING"),DOLLYING:Symbol("DOLLYING"),PANNING:Symbol("PANNING")}),x=2,p=function(g){a(y,g);var _=l(y);function y(M,w){var b;return s(this,y),b=_.call(this),h(d(b),"reset",function(){b.target.copy(b.target0),b.object.position.copy(b.position0),b.update()}),h(d(b),"update",function(){b.object.lookAt(b.target),b.state!==m.ROTATING&&b.fixUp(),b.dispatchEvent(b.changeEvent)}),h(d(b),"onMouseDown",function(S){b.state=m.INDETERMINATE,b.prev=new t.Vector2(S.clientX,S.clientY),S.preventDefault(),b.domElement.focus?b.domElement.focus():window.focus(),document.addEventListener("mousemove",b.onMouseMove,!1),document.addEventListener("mouseup",b.onMouseUp,!1),b.domElement.addEventListener("contextmenu",b.onContextMenu,!1)}),h(d(b),"onMouseWheel",function(S){S.preventDefault(),b.state=m.DOLLYING,b.prev=new t.Vector2(0,0),b.dolly(0,-S.deltaY)}),h(d(b),"onMouseMove",function(S){switch(S.preventDefault(),S.buttons){case 1:b.eventHasPanModifier(S)?b.pan(S.clientX,S.clientY):b.rotate(S.clientX,S.clientY);break;case 2:b.pan(S.clientX,S.clientY);break;case 4:b.dolly(S.clientX,S.clientY);break}}),h(d(b),"onMouseUp",function(){b.state===m.ROTATING&&b.fixUp(),b.clicked=b.state===m.INDETERMINATE,b.state=m.INACTIVE,document.removeEventListener("mousemove",b.onMouseMove,!1),document.removeEventListener("mouseup",b.onMouseUp,!1),b.domElement.removeEventListener("contextmenu",b.onContextMenu,!1)}),h(d(b),"onKeyDown",function(S){var E=!1,C,I;switch(S.keyCode){case b.keys.UP:E=!0;var W=[0,b.keyPanSpeed];C=W[0],I=W[1];break;case b.keys.DOWN:E=!0,C=0,I=-b.keyPanSpeed;break;case b.keys.LEFT:E=!0;var H=[b.keyPanSpeed,0];C=H[0],I=H[1];break;case b.keys.RIGHT:E=!0,C=-b.keyPanSpeed,I=0;break}E&&(S.preventDefault(),b.state=m.PANNING,b.prev=new t.Vector2(0,0),b.pan(C,I))}),h(d(b),"onContextMenu",function(S){S.preventDefault()}),h(d(b),"eventHasPanModifier",function(S){return S.shiftKey&&b.usePanModShift||S.altKey&&b.usePanModAlt||S.ctrlKey&&b.usePanModCtrl||S.metaKey&&b.usePanModMeta}),h(d(b),"rotate",function(S,E){var C=new t.Vector2(S,E);if(b.state===m.INDETERMINATE){var I=C.manhattanDistanceTo(b.prev);if(I>x){b.state=m.ROTATING;var W=new t.Vector3().subVectors(b.object.position,b.target);b.radius=W.length(),W.divideScalar(b.radius);var H=b.object.up,A=new t.Vector3().crossVectors(H,W).normalize();b.basisMatrix=new t.Matrix4().makeBasis(A,H,W);var q=new t.Matrix4().makeTranslation(b.target.x,b.target.y,b.target.z);b.basisMatrix.premultiply(q)}}if(b.state===m.ROTATING){var N=new t.Vector2().subVectors(C,b.prev),X=2*b.rotateSpeed;N.multiplyScalar(X);var Z=-N.x*(Math.PI/b.domElement.clientWidth),$=-N.y*(Math.PI/b.domElement.clientHeight)+Math.PI/2,J=.01;$=Math.max($,J),$=Math.min($,Math.PI-J);var R=new t.Vector3;R.z=b.radius*Math.sin($)*Math.cos(Z),R.x=b.radius*Math.sin($)*Math.sin(Z),R.y=b.radius*Math.cos($),R.applyMatrix4(b.basisMatrix),b.object.position.copy(R),b.update()}}),h(d(b),"dolly",function(S,E){var C=new t.Vector2(S,E);if(b.state===m.INDETERMINATE){var I=C.manhattanDistanceTo(b.prev);I>x&&(b.state=m.DOLLYING)}if(b.state===m.DOLLYING){var W=new t.Vector3().subVectors(b.target,b.object.position),H=W.length(),A=2*H,q=Math.min(b.maxDistance-b.minDistance,A),N=b.domElement.clientHeight,X=q/N,Z=b.zoomSpeed*X,$=b.prev.y-E,J=Z*$;if(b.minDistance<=H+J&&H+J<=b.maxDistance){var R=W.multiplyScalar(J/H);b.object.position.sub(R),b.update(),b.prev=C}}}),h(d(b),"pan",function(S,E){var C=new t.Vector2(S,E);if(b.state===m.INDETERMINATE){var I=C.manhattanDistanceTo(b.prev);I>x&&(b.state=m.PANNING)}if(b.state===m.PANNING){var W=new t.Vector3().subVectors(b.target,b.object.position),H=W.length();W.divideScalar(H);var A=b.object.up.clone(),q=new t.Vector3().crossVectors(A,W).normalize(),N=Math.tan(b.object.fov/2*(Math.PI/360))*H,X=b.domElement.clientHeight/2,Z=N/X,$=new t.Vector2().subVectors(C,b.prev),J=q.multiplyScalar($.x*Z),R=A.multiplyScalar($.y*Z);b.object.position.add(J),b.object.position.add(R);var k=W.multiplyScalar(H),j=new t.Vector3().addVectors(b.object.position,k);b.target=j,b.update(),b.prev=C}}),h(d(b),"fixUp",function(){var S=new t.Vector3().subVectors(b.target,b.object.position).normalize(),E=new t.Vector3().crossVectors(S,b.object.up).normalize(),C=new t.Vector3().crossVectors(E,S).normalize();b.object.up.copy(C)}),b.object=M,b.domElement=w,b.keyPanSpeed=7,b.keys={LEFT:37,UP:38,RIGHT:39,DOWN:40},b.maxDistance=1/0,b.minDistance=0,b.rotateSpeed=1,b.target=new t.Vector3,b.zoomSpeed=1,b.clicked=!1,b.usePanModAlt=!0,b.usePanModShift=!1,b.usePanModCtrl=!1,b.usePanModMeta=!1,b.state=m.INACTIVE,b.changeEvent={type:"change"},b.domElement.addEventListener("mousedown",b.onMouseDown,!1),b.domElement.addEventListener("wheel",b.onMouseWheel,!1),b.domElement.addEventListener("keydown",b.onKeyDown,!1),b.domElement.tabIndex===-1&&(b.domElement.tabIndex=0),b.target0=b.target.clone(),b.position0=b.object.position.clone(),b.update(),b}return y}(t.EventDispatcher),v=p;n.default=v})(U1);const BP=Lw(U1);var Fs={exports:{}};(function(n,e){(function(t,i){n.exports=i()})(Ah,function(){function t(G,F){var V,te=Object.keys(G);return Object.getOwnPropertySymbols&&(V=Object.getOwnPropertySymbols(G),F&&(V=V.filter(function(ae){return Object.getOwnPropertyDescriptor(G,ae).enumerable})),te.push.apply(te,V)),te}function i(G){for(var F=1;F<arguments.length;F++){var V=arguments[F]!=null?arguments[F]:{};F%2?t(Object(V),!0).forEach(function(te){var ae,ge;ae=G,te=V[ge=te],ge in ae?Object.defineProperty(ae,ge,{value:te,enumerable:!0,configurable:!0,writable:!0}):ae[ge]=te}):Object.getOwnPropertyDescriptors?Object.defineProperties(G,Object.getOwnPropertyDescriptors(V)):t(Object(V)).forEach(function(te){Object.defineProperty(G,te,Object.getOwnPropertyDescriptor(V,te))})}return G}function r(G,F){if(!(G instanceof F))throw new TypeError("Cannot call a class as a function")}function s(G,F){for(var V=0;V<F.length;V++){var te=F[V];te.enumerable=te.enumerable||!1,te.configurable=!0,"value"in te&&(te.writable=!0),Object.defineProperty(G,te.key,te)}}function a(G,F,V){return F&&s(G.prototype,F),V&&s(G,V),G}function o(G){return(o=Object.setPrototypeOf?Object.getPrototypeOf:function(F){return F.__proto__||Object.getPrototypeOf(F)})(G)}function l(G,F){return(l=Object.setPrototypeOf||function(V,te){return V.__proto__=te,V})(G,F)}function c(G,F){return!F||typeof F!="object"&&typeof F!="function"?function(V){if(V===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return V}(G):F}function d(G){var F=function(){if(typeof Reflect>"u"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch{return!1}}();return function(){var V,te=o(G);return c(this,F?(V=o(this).constructor,Reflect.construct(te,arguments,V)):te.apply(this,arguments))}}function u(G,F){return function(V){if(Array.isArray(V))return V}(G)||function(V,te){var ae=V==null?null:typeof Symbol<"u"&&V[Symbol.iterator]||V["@@iterator"];if(ae!=null){var ge,Se,ze=[],Ze=!0,nt=!1;try{for(ae=ae.call(V);!(Ze=(ge=ae.next()).done)&&(ze.push(ge.value),!te||ze.length!==te);Ze=!0);}catch(Mt){nt=!0,Se=Mt}finally{try{Ze||ae.return==null||ae.return()}finally{if(nt)throw Se}}return ze}}(G,F)||function(V,te){if(V){if(typeof V=="string")return f(V,te);var ae=Object.prototype.toString.call(V).slice(8,-1);return(ae=ae==="Object"&&V.constructor?V.constructor.name:ae)==="Map"||ae==="Set"?Array.from(V):ae==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(ae)?f(V,te):void 0}}(G,F)||function(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}()}function f(G,F){(F==null||F>G.length)&&(F=G.length);for(var V=0,te=new Array(F);V<F;V++)te[V]=G[V];return te}function h(G,F){return Math.floor(Math.random()*(F-G+1))+G}function m(G,F){var V=G.slice(0);V[F[0]]=G[F[F.length-1]];for(var te=1;te<F.length;te+=1)V[F[te]]=G[F[te-1]];return V}function x(G,F){for(var V=0,te=0;te<G.length-1;te+=1)V=F*V+G[te];return V}function p(G,F){var V=G.length-1,te=0,ae=1,ge=[];if(2<arguments.length&&arguments[2]!==void 0&&arguments[2])for(var Se=G.length-1;0<=Se;--Se)0<=F.indexOf(G[Se])&&(V=Math.min(V,G[Se]),te+=Pe(G.length-1-Se,ae),ge.unshift(G[Se]),ae+=1);else for(var ze=0;ze<G.length;ze+=1)0<=F.indexOf(G[ze])&&(V=Math.min(V,G[ze]),te+=Pe(ze,ae),ge.push(G[ze]),ae+=1);for(var Ze=0,nt=ge.length-1;0<nt;--nt){for(var Mt=0;ge[nt]!==F[nt];)U(ge,0,nt),Mt+=1;Ze=(nt+1)*Ze+Mt}return Ee(F.length)*te+Ze}function v(G,F,V){for(var te=3<arguments.length&&arguments[3]!==void 0&&arguments[3],ae=Ee(F.length),ge=Math.floor(G/ae),Se=G%ae,ze=[],Ze=0;Ze<V;Ze+=1)ze.push(-1);for(var nt=1;nt<F.length;nt+=1)for(var Mt=Se%(nt+1),Se=Math.floor(Se/(nt+1));0<Mt;)D(F,0,nt),--Mt;var Je=F.length-1;if(te)for(var _t=0;_t<V;_t+=1){var ut=Pe(V-1-_t,Je+1);0<=ge-ut&&(ze[_t]=F[F.length-1-Je],ge-=ut,--Je)}else for(var ft=V-1;0<=ft;--ft){var Nt=Pe(ft,Je+1);0<=ge-Nt&&(ze[ft]=F[Je],ge-=Nt,--Je)}return ze}function g(G){return/^([FRUBLDfrubldxyzMSE][2']?\s*)+$/.test(G)}function _(G){G=G.reduce(function(ae,ge){var Se=ge.charAt(0),ze=Y[ge.charAt(1)];if(L[Se]){for(var Ze=0;Ze<=ze;Ze+=1)ae=ae.concat(L[Se]);return ae}return ae.concat(ge)},[]);for(var F=[],V=[],te=G.length-1;0<=te;--te)(function(ae){var ge=G[ae].charAt(0),Se=Y[G[ae].charAt(1)];if("xyz".includes(ge)){V.unshift(G[ae]);for(var ze=0;ze<=Se;ze+=1)F=F.map(function(Ze){return T[ge]["FRUBLD".indexOf(Ze[0])]+Ze.charAt(1)})}else F.unshift(G[ae])})(te);return[F,V]}function y(te){var F=1<arguments.length&&arguments[1]!==void 0&&arguments[1];if(!g(te))throw new Error("Invalid algorithm provided to algorithm parser");var V=[],te=(ae=u(_(te.match(/[FRUBLDfrubldxyzMSE][2']?/g)),2))[0],ae=ae[1];return te.forEach(function(ze){var Se="FRUBLD".indexOf(ze.charAt(0)),ze=Y[ze.charAt(1)];V.push(3*Se+ze)}),F?[V,ae]:V}function M(G){var F="";return G.forEach(function(V){switch(F+=" ",F+="FRUBLD".charAt(Math.floor(V/3)),V%3){case 1:F+="2";break;case 2:F+="'"}}),F.trim()}function w(G,F){var V=Math.floor(F/3),te=wt[V],ae=F%3,ge=ve(G,F);if((V===0||V===3)&&ae%2==0)for(var Se=0;Se<4;Se+=1)ge[te[Se]]=(ge[te[Se]]+1)%2;return ge}function b(G,F){var V=Math.floor(F/3),te=ie[V],ae=F%3,ge=Ge(G,F);if(V!==2&&V!==5&&ae%2==0)for(var Se=0;Se<4;Se+=1)ge[te[Se]]=(ge[te[Se]]+(Se+1)%2+1)%3;return ge}function S(G){return new it({name:G.name,moves:G.moves,defaultIndex:p([0,1,2,3,4,5,6,7],G.affected,G.reversed),size:G.size||Ee(8)/Ee(8-G.affected.length),getVector:function(F){return v(F,G.affected.slice(),8,G.reversed)},cubieMove:Ge,getIndex:function(F){return p(F,G.affected,G.reversed)}})}function E(G){return new it({name:G.name,moves:G.moves,defaultIndex:p([0,1,2,3,4,5,6,7,8,9,10,11],G.affected,G.reversed),size:G.size||Ee(12)/Ee(12-G.affected.length),getVector:function(F){return v(F,G.affected.slice(),12,G.reversed)},cubieMove:ve,getIndex:function(F){return p(F,G.affected,G.reversed)}})}function C(G,F,V){for(var te=[],ae=Math.pow(V,F-1),ge=Math.pow(V,F-G.length-1),Se=0;Se<ae&&te.length<ge;Se+=1)(function(ze){var Ze=be(ze,F,V);G.every(function(nt){return Ze[nt]===0})&&te.push(ze)})(Se);return te}function I(G){return new it({name:G.name,size:2048,solvedIndexes:C(G.affected,12,2),getVector:function(F){return be(F,12,2)},cubieMove:w,getIndex:function(F){return x(F,2)}})}function W(G){return new it({name:G.name,size:2187,solvedIndexes:C(G.affected,8,3),getVector:function(F){return be(F,8,3)},cubieMove:b,getIndex:function(F){return x(F,3)}})}function H(G){return xn.solve({scramble:G})}function A(G){return bt.solve({scramble:G})}function q(G){return z.solve({scramble:G})}function N(G){var F=1<arguments.length&&arguments[1]!==void 0?arguments[1]:22;return Array.isArray(G)?we.solve({indexes:G,maxDepth:F}):we.solve({scramble:G,maxDepth:F})}function X(G){return st.solve({scramble:G})}function Z(G,F){for(var V,te,ae,ge,Se=2<arguments.length&&arguments[2]!==void 0?arguments[2]:G,ze=3<arguments.length&&arguments[3]!==void 0?arguments[3]:F,Ze=4<arguments.length&&arguments[4]!==void 0&&arguments[4],nt=5<arguments.length&&arguments[5]!==void 0&&arguments[5];V=at(Se,2,12),te=P(G,12),Ze&&(te=re(te)),ae=at(ze,3,8),ge=P(F,8),nt&&(ge=re(ge)),Me(te)!==Me(ge););return Oe(V,te,ae,ge)}function $(){return Z([ne,se,de,ye],[],[],[Ce,Ne,ke,et],!1,!0)}function J(){for(var G,F,V,te;G=be(h(0,2048),12,2),V=be(h(0,2187),8,3),F=v(h(0,479001600),[0,1,2,3,4,5,6,7,8,9,10,11],12),te=v(h(0,40320),[0,1,2,3,4,5,6,7],8),Me(F)!==Me(te););return Oe(G,F,V,te)}function R(){return Z([ne,se,de,ye,De,Q],[Ce,Ne,ke,et])}function k(){return Z([],[0,1,2,3,4,5,6,7])}function j(){return Z([0,1,2,3,4,5,6,7,8,9,10,11],[])}function K(){return Z(le,[],le,[],!1,!0)}function B(){return Z([ne,se,de,ye,Te],[Ce,Ne,ke,et,dt])}function oe(){return Z([ne,se,de,ye],[Ce,Ne,ke,et],[],[])}function Re(){return Z(ee,ue,[],ue)}function Ae(){return Z([ne,se,de,ye,Te],$e,[],$e)}var pe,_e,Ie,me,xe=[],Ee=function G(F){return F===0||F===1?1:(0<xe[F]||(xe[F]=G(F-1)*F),xe[F])},Fe=[],Pe=function(G,F){if(G<F)return 0;for(;G>=Fe.length;){for(var V=Fe.length,te=[],ae=te[0]=1,ge=V-1;ae<V;ae+=1)te[ae]=Fe[ge][ae-1]+Fe[ge][ae];te[V]=1,Fe.push(te)}return Fe[G][F]},U=function(G,F,V){for(var te=G[F],ae=F;ae<V;ae+=1)G[ae]=G[ae+1];G[V]=te},D=function(G,F,V){for(var te=G[V],ae=V;F<ae;--ae)G[ae]=G[ae-1];G[F]=te},be=function(G,F,V){for(var te=[],ae=0,ge=F-2;0<=ge;--ge){var Se=G%V;G=Math.floor(G/V),ae+=te[ge]=Se}return te[F-1]=(V-ae%V)%V,te},Me=function(G){for(var F=0,V=G.length-1;0<V;--V)for(var te=V-1;0<=te;--te)G[te]>G[V]&&(F+=1);return F%2},Y={"":0,2:1,"'":2},L={f:["z","B"],r:["x","L"],u:["y","D"],b:["z'","F"],l:["x'","R"],d:["y'","U"],M:["x'","R","L'"],S:["z","F'","B"],E:["y'","U","D'"]},T={x:"DRFULB",y:"RBULFD",z:"FULBDR"},ne=0,se=1,de=2,ye=3,De=5,Q=7,Te=8,Ce=0,Ne=1,ke=2,et=3,dt=4,wt=[[1,8,5,9],[0,11,4,8],[1,2,3,0],[3,10,7,11],[2,9,6,10],[5,4,7,6]],ie=[[1,0,4,5],[0,3,7,4],[0,1,2,3],[3,2,6,7],[2,1,5,6],[5,4,7,6]],He=function(G,F,V){for(var te=G,ae=V[Math.floor(F/3)],ge=F%3,Se=0;Se<=ge;Se+=1)te=m(te,ae);return te},ve=function(G,F){return He(G,F,wt)},Ge=function(G,F){return He(G,F,ie)},Be=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],it=function(){function G(F){var V,te,ae,ge,Se=this;r(this,G),this.name=F.name,this.size=F.size,this.defaultIndex=F.defaultIndex||0,this.solvedIndexes=F.solvedIndexes||[this.defaultIndex],F.doMove&&(this.doMove=function(ze,Ze){return F.doMove(Se.table,ze,Ze)}),F.table?this.table=F.table:(te=F.getVector,ae=F.cubieMove,ge=F.getIndex,V=function(ze,Ze){return ze=te(ze),ze=ae(ze,Ze),ge(ze)},this.createMoveTable(F.size,V,F.moves))}return a(G,[{key:"doMove",value:function(F,V){return this.table[F][V]}},{key:"createMoveTable",value:function(F,V){var te=2<arguments.length&&arguments[2]!==void 0?arguments[2]:Be;this.table=[];for(var ae=0;ae<F;ae+=1)this.table.push([]);for(var ge=0;ge<F;ge+=1)for(var Se=0;Se<te.length;Se+=1){var ze,Ze,nt=te[Se];this.table[ge][nt]||(ze=V(ge,nt),Ze=nt-nt%3*2+2,this.table[ge][nt]=ze,this.table[ze][Ze]=ge)}}}]),G}(),pt=function(){function G(F,V){r(this,G),this.computePruningTable(F,V)}return a(G,[{key:"setPruningValue",value:function(F,V){this.table[F>>3]^=(15^V)<<((7&F)<<2)}},{key:"getPruningValue",value:function(F){return this.table[F>>3]>>((7&F)<<2)&15}},{key:"computePruningTable",value:function(F,V){var te=F.reduce(function(yo,Cu){return yo*Cu.size},1);this.table=[];for(var ae=0;ae<te+7>>3;ae+=1)this.table.push(-1);for(var ge=0,Se=0,ze=[1],Ze=1;Ze<F.length;Ze+=1)ze.push(F[Ze-1].size*ze[Ze-1]);for(var nt,Mt,Je,_t=(nt=F.map(function(yo){return yo.solvedIndexes}),Mt=[],Je=nt.length-1,function yo(Cu,Zc){for(var Ru=0;Ru<nt[Zc].length;Ru+=1){var Pu=Cu.slice(0);Pu.push(nt[Zc][Ru]),Zc===Je?Mt.push(Pu):yo(Pu,Zc+1)}}([],0),Mt),ut=0;ut<_t.length;ut+=1){for(var ft=0,Nt=0;Nt<_t[ut].length;Nt+=1)ft+=ze[Nt]*_t[ut][Nt];this.setPruningValue(ft,0),Se+=1}for(;Se!==te;){var Ti=te/2<Se,go=Ti?15:ge,Wt=Ti?ge:15;ge+=1;for(var Un=0;Un<te;Un+=1)if(this.getPruningValue(Un)===go)for(var Br=0;Br<V.length;Br+=1){for(var rn=V[Br],Ws=Un,vo=0,Ai=ze.length-1;0<=Ai;--Ai)vo+=ze[Ai]*F[Ai].doMove(Math.floor(Ws/ze[Ai]),rn),Ws%=ze[Ai];if(this.getPruningValue(vo)===Wt){if(Se+=1,Ti){this.setPruningValue(Un,ge);break}this.setPruningValue(vo,ge)}}}}}]),G}(),ht=function(){function G(F){var V=1<arguments.length&&arguments[1]!==void 0?arguments[1]:Be;r(this,G),this.createTables=F,this.moves=V}return a(G,[{key:"initialize",value:function(){var F,V,te=this;this.initialized||(this.initialized=!0,F=(V=this.createTables()).moveTables,V=V.pruningTables,this.moveTables=F,this.pruningTables=[],V.forEach(function(ae){var ge=ae.map(function(ze){return te.moveTables.map(function(Ze){return Ze.name}).indexOf(ze)});ge.sort(function(ze,Ze){return te.moveTables[ze].size-te.moveTables[Ze].size});var Se=[];ge.forEach(function(ze){return Se.push(te.moveTables[ze])}),ae=new pt(Se,te.moves),te.pruningTables.push({pruningTable:ae,moveTableIndexes:ge})}))}},{key:"handleSolution",value:function(F,V){return{solution:F,indexes:V}}},{key:"search",value:function(F,V,te,ae){for(var ge=0,Se=0;Se<this.pruningTables.length;Se+=1){for(var ze=F[this.pruningTables[Se].moveTableIndexes[0]],Ze=1,nt=1;nt<this.pruningTables[Se].moveTableIndexes.length;nt+=1)Ze*=this.moveTables[this.pruningTables[Se].moveTableIndexes[nt-1]].size,ze+=F[this.pruningTables[Se].moveTableIndexes[nt]]*Ze;var Mt=this.pruningTables[Se].pruningTable.getPruningValue(ze);if(V<Mt)return!1;ge<Mt&&(ge=Mt)}if(ge===0)return this.handleSolution(ae,F);if(0<V)for(var Je=0;Je<this.moves.length;Je+=1){var _t=this.moves[Je];if(Math.floor(_t/3)!==Math.floor(te/3)&&Math.floor(_t/3)!==Math.floor(te/3)-3){for(var ut=[],ft=0;ft<F.length;ft+=1)ut.push(this.moveTables[ft].doMove(F[ft],_t));var Nt=this.search(ut,V-1,_t,ae.concat([_t]));if(Nt)return Nt}}return!1}},{key:"solve",value:function(F){var V=this;this.initialize(),this.settings=i({maxDepth:22,lastMove:null,format:!0},F);var te,ae=this.settings.indexes||[];if(this.settings.scramble){var ge=u(y(this.settings.scramble,!0),2),F=ge[0],ge=ge[1];0<ge.length&&(te=function(Je){if(!g(Je))throw new Error("Invalid algorithm provided to algorithm parser");return Je.match(/[FRUBLDfrubldxyzMSE][2']?/g).reverse().map(function(ft){var ut=ft.charAt(0),ft=Y[ft.charAt(1)],ft=ft-ft%3*2+2;return ft==1?"".concat(ut,"2"):ft==2?"".concat(ut,"'"):ut}).join(" ")}(ge.join(" ")));for(var Se=0;Se<this.moveTables.length;Se+=1)ae.push(this.moveTables[Se].defaultIndex);F.forEach(function(Je){for(var _t=0;_t<ae.length;_t+=1)ae[_t]=V.moveTables[_t].doMove(ae[_t],Je)})}for(var ze=0;ze<=this.settings.maxDepth;ze+=1){var Ze=this.search(ae,ze,this.settings.lastMove,[]);if(Ze){if(this.settings.format){var nt=M(Ze.solution);return te?M(y("".concat(te," ").concat(nt))):nt}return Ze}}return!1}}]),G}(),xn=new ht(function(){return{moveTables:[E({name:"EdgePermutation",affected:[4,5,6,7]}),I({name:"EdgeOrientation",affected:[4,5,6,7]})],pruningTables:[["EdgePermutation"],["EdgeOrientation"]]}}),bt=new ht(function(){return{moveTables:[I({name:"EdgeOrientation",affected:[0,1,2,3,4,5,6,7,8,9,10,11]}),E({name:"EdgePermutation",affected:[5,7]})],pruningTables:[["EdgeOrientation"],["EdgePermutation"]]}}),z=new ht(function(){return{moveTables:[I({name:"EdgeOrientation",affected:[6,9,10]}),W({name:"CornerOrientation",affected:[5,6]}),E({name:"EdgePermutation",affected:[6,9,10]}),S({name:"CornerPermutation",affected:[5,6]})],pruningTables:[["EdgeOrientation","CornerPermutation"],["CornerOrientation","CornerPermutation"],["EdgePermutation","CornerPermutation"]]}}),he=[1,10,4,13,6,7,8,15,16,17],fe=new ht(function(){me=[];for(var G=0;G<336;G+=1){me.push([]);for(var F=0;F<336;F+=1)me[G][F]=function(V,te){for(var ae=v(V,[0,1,2],12),ge=v(te,[3,4,5],12),Se=0;Se<8;Se+=1)if(ae[Se]!==-1){if(ge[Se]!==-1)return-1;ge[Se]=ae[Se]}return p(ge,[0,1,2,3,4,5])}(G,F)}return{moveTables:[new it({name:"slicePermutation",size:24,table:Ie.table}),pe,_e,E({name:"URToDF",size:20160,moves:he,affected:[0,1,2,3,4,5]})],pruningTables:[["slicePermutation","parity","URFToDLF"],["slicePermutation","parity","URToDF"]]}},he),we=new(function(){(function(V,te){if(typeof te!="function"&&te!==null)throw new TypeError("Super expression must either be null or a function");V.prototype=Object.create(te&&te.prototype,{constructor:{value:V,writable:!0,configurable:!0}}),te&&l(V,te)})(F,ht);var G=d(F);function F(){var V;r(this,F);for(var te=arguments.length,ae=new Array(te),ge=0;ge<te;ge++)ae[ge]=arguments[ge];return(V=G.call.apply(G,[this].concat(ae))).maxDepth=22,V.solution=null,V}return a(F,[{key:"handleSolution",value:function(V,te){var ae=V.slice(-1)[0];if(ae%2==0&&Math.floor(ae/3)===6&&Math.floor(ae/3)===15)return!1;if(ae=fe.solve({indexes:[te[3],te[4],te[5],me[te[6]][te[7]]],maxDepth:this.maxDepth-V.length,lastMove:ae,format:!1}),ae){if(this.solution=V.concat(ae.solution),this.maxDepth<=this.settings.maxDepth)return{solution:this.solution,indexes:te};this.maxDepth=this.solution.length-1}return!1}}]),F}())(function(){return pe=new it({name:"parity",size:2,table:[[1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1],[0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0]]}),_e=S({name:"URFToDLF",affected:[0,1,2,3,4,5]}),Ie=E({name:"slice",affected:[8,9,10,11],reversed:!0}),fe.initialize(),{moveTables:[new it({name:"slicePosition",size:495,table:Ie.table,doMove:function(G,F,V){return Math.floor(G[24*F][V]/24)}}),W({name:"twist",affected:[0,1,2,3,4,5,6,7]}),I({name:"flip",affected:[0,1,2,3,4,5,6,7,8,9,10,11]}),Ie,pe,_e,E({name:"URToUL",affected:[0,1,2]}),E({name:"UBToDF",affected:[3,4,5]})],pruningTables:[["slicePosition","flip"],["slicePosition","twist"]]}}),Oe=function(G,F,V,te){return N([Math.floor(p(F,[8,9,10,11],!0)/24),x(V,3),x(G,2),p(F,[8,9,10,11],!0),Me(te),p(te,[0,1,2,3,4,5]),p(F,[0,1,2]),p(F,[3,4,5])])},st=new ht(function(){return{moveTables:[E({name:"EdgePermutation",affected:[4,5,6,7,9]}),I({name:"EdgeOrientation",affected:[4,5,6,7,9]}),S({name:"CornerPermutation",affected:[5]}),W({name:"CornerOrientation",affected:[5]})],pruningTables:[["EdgePermutation","CornerPermutation"],["EdgeOrientation","CornerOrientation"]]}}),rt=[0,1,2,3],at=function(G,F,V){var te=be(h(0,Math.pow(F,G.length-1)),G.length,F),ae=Array(V).fill(0);return G.forEach(function(ge,Se){ae[ge]=te[Se]}),ae},P=function(G,F){var V=v(h(0,Ee(G.length)),G.slice(0),G.length),te=[0,1,2,3,4,5,6,7,8,9,10,11].slice(0,F);return G.forEach(function(ae,ge){te[ae]=V[ge]}),te},re=function(G,F){F=F||h(0,4);for(var V=0;V<F;V+=1)G=m(G,rt);return G},le=[ne,se,de,ye,De,Q],ee=[ne,se,de,ye],ue=[Ce,Ne,ke,et],$e=[Ce,Ne,ke,et,dt];return{solve:function(G){var F=1<arguments.length&&arguments[1]!==void 0?arguments[1]:"kociemba",V={kociemba:N,cross:H,eoline:A,fb:q,xcross:X};if(V[F])return V[F](G);throw new Error("Specified solver does not exist.")},solveCoordinates:Oe,scramble:function(){var G=0<arguments.length&&arguments[0]!==void 0?arguments[0]:"3x3",F={"3x3":J,"2gll":$,cmll:R,corners:k,edges:j,lse:K,lsll:B,pll:oe,zbll:Re,zzls:Ae};if(F[G])return F[G]();throw new Error("Specified scrambler does not exist.")},initialize:function(G){var F={cross:xn,eoline:bt,fb:z,xcross:st};if(G==="kociemba")we.initialize(),fe.initialize();else{if(!F[G])throw new Error("Specified solver does not exist.");F[G].initialize()}}}})})(Fs);const UP="#FFFFFF",GP="#B90000",kP="#FFD500",HP="#FF5900",VP="#009B48",WP="#0045AD",Ni=1.04,Xg=[6,8,26,24,0,2,20,18],Yg=[15,7,17,25,9,1,11,19,3,5,23,21],Zg=[4,5,5,8,-1,9,0,1,1,4,-1,6,-1,-1,-1,0,-1,2,7,7,6,11,-1,10,3,3,2],Xo=new Dt,Vi=new Dt,Cc=new Dt,Rc=new Dt,ds=new Dt,qs=new Dt,Ns=new Dt,$P=new Dt,M0=new Dt,S0=new Dt;$P.setFromAxisAngle(new ce(0,0,1),-Math.PI);M0.setFromAxisAngle(new ce(0,0,1),-Math.PI/2);S0.setFromAxisAngle(new ce(0,0,1),Math.PI/2);ds.setFromAxisAngle(new ce(0,1,0),-Math.PI);qs.setFromAxisAngle(new ce(0,1,0),-Math.PI/2);Ns.setFromAxisAngle(new ce(0,1,0),Math.PI/2);Vi.setFromAxisAngle(new ce(1,0,0),-Math.PI);Cc.setFromAxisAngle(new ce(1,0,0),-Math.PI/2);Rc.setFromAxisAngle(new ce(1,0,0),Math.PI/2);const Jg=[Xo,qs,ds,Ns,Vi.clone().multiply(Ns),Vi.clone().multiply(ds),Vi.clone().multiply(qs),Vi],Kg=[Xo,qs,ds,Ns,Vi,Ns.clone().premultiply(Vi),ds.clone().multiply(Vi),qs.clone().premultiply(Vi),Cc,Rc.clone().premultiply(ds),Cc.clone().premultiply(ds),Rc];class xi extends Bo{static DEFAULT_COLORS=[GP,HP,UP,kP,VP,WP];static DEFAULT_INTERNAL_COLOR="#300040";colors;internalColor;cubies=new Array(27);permutation=new Array(27);cubieSize;turnTime;constructor(e){if(super(),e.colors!==void 0&&e.colors.length!==6)throw new Error("Unexpected number of colors, expected 6.");const t=e.cubieSize===void 0?1:e.cubieSize,i=e.colors===void 0?xi.DEFAULT_COLORS:e.colors,r=e.internalColor===void 0?xi.DEFAULT_INTERNAL_COLOR:e.internalColor;this.cubieSize=t,this.turnTime=e.turnTime===void 0?100:e.turnTime;for(let l=0;l<27;l++)this.permutation[l]=l;this.colors=new Array(6);for(let l=0;l<6;l++){const c=i[l];typeof c=="string"?this.colors[l]=new gl({color:c}):this.colors[l]=c}typeof r=="string"?this.internalColor=new gl({color:r}):this.internalColor=r;const s=[this.colors[5],this.colors[4]],a=[this.colors[2],this.colors[3]],o=[this.colors[1],this.colors[0]];for(let l=0;l<=2;l++)for(let c=0;c<=2;c++)for(let d=0;d<=2;d++){if(l===1&&c===1&&d===1)continue;const u=new ro(t,t,t),f=[d==2?o[0]:this.internalColor,d==0?o[1]:this.internalColor,c==2?a[0]:this.internalColor,c==0?a[1]:this.internalColor,l==2?s[0]:this.internalColor,l==0?s[1]:this.internalColor],h=new Hi(u,f);h.name=`Cubie_${l}${c}${d}`,h.position.x=this.position.x+t*(d-1)*Ni,h.position.y=this.position.y+t*(c-1)*Ni,h.position.z=this.position.z+t*(l-1)*Ni;const m=9*l+3*c+d;this.cubies[m]=h,this.add(h)}}setState(e){const t=e.corners.length;for(let s=0;s<t;s++)this.permutation[Xg[s]]=Xg[e.corners[s]];const i=e.edges.length;for(let s=0;s<i;s++)this.permutation[Yg[s]]=Yg[e.edges[s]];const r=new Dt;for(let s=0;s<=2;s++)for(let a=0;a<=2;a++)for(let o=0;o<=2;o++){const l=Math.abs(s-1)+Math.abs(a-1)+Math.abs(o-1);if(l===0)continue;const c=9*s+3*a+o,d=this.permutation[c],u=this.cubies[d],f=new ce(o-1,a-1,s-1).normalize(),h=Zg[c],m=Zg[d];if(l===3){r.copy(Jg[m]).invert().premultiply(Jg[h]),u.setRotationFromQuaternion(r);const x=e.cornerOrientations[h];r.setFromAxisAngle(f,-((x+1)%3-1)*2*Math.PI/3),u.applyQuaternion(r)}else if(l===2){r.copy(Kg[m]).invert().premultiply(Kg[h]),u.setRotationFromQuaternion(r);const x=e.edgeOrientations[h];r.setFromAxisAngle(f,x*Math.PI),u.applyQuaternion(r)}u.position.x=this.position.x+this.cubieSize*(o-1)*Ni,u.position.y=this.position.y+this.cubieSize*(a-1)*Ni,u.position.z=this.position.z+this.cubieSize*(s-1)*Ni}}center(){this.setRotationFromQuaternion(Xo)}reset(){for(let e=0;e<27;e++)this.permutation[e]=e;for(let e=0;e<=2;e++)for(let t=0;t<=2;t++)for(let i=0;i<=2;i++){if(e===1&&t===1&&i===1)continue;const r=this.cubies[9*e+3*t+i];r.position.x=this.position.x+this.cubieSize*(i-1)*Ni,r.position.y=this.position.y+this.cubieSize*(t-1)*Ni,r.position.z=this.position.z+this.cubieSize*(e-1)*Ni,r.setRotationFromQuaternion(Xo)}}turnQueue=[];workOutstanding=!1;animate(){if(!this.workOutstanding){this.workOutstanding=!0;const e=()=>{if(this.turnQueue.length>0){const[t,i,r]=this.turnQueue[0];this.turnQueue=this.turnQueue.slice(1),this.doTurn(t,i,()=>{r(),e()})}else this.workOutstanding=!1};e()}}static MOVE_INFO={F:{stride1:3,stride2:1,offset:0,endQ:S0,perm:[2,5,8,1,4,7,0,3,6,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"F'":{stride1:3,stride2:1,offset:0,endQ:M0,perm:[6,3,0,7,4,1,8,5,2,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},B:{stride1:3,stride2:1,offset:18,endQ:M0,perm:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,24,21,18,25,22,19,26,23,20]},"B'":{stride1:3,stride2:1,offset:18,endQ:S0,perm:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,26,19,22,25,18,21,24]},U:{stride1:9,stride2:1,offset:6,endQ:qs,perm:[0,1,2,3,4,5,8,17,26,9,10,11,12,13,14,7,16,25,18,19,20,21,22,23,6,15,24]},"U'":{stride1:9,stride2:1,offset:6,endQ:Ns,perm:[0,1,2,3,4,5,24,15,6,9,10,11,12,13,14,25,16,7,18,19,20,21,22,23,26,17,8]},D:{stride1:9,stride2:1,offset:0,endQ:Ns,perm:[18,9,0,3,4,5,6,7,8,19,10,1,12,13,14,15,16,17,20,11,2,21,22,23,24,25,26]},"D'":{stride1:9,stride2:1,offset:0,endQ:qs,perm:[2,11,20,3,4,5,6,7,8,1,10,19,12,13,14,15,16,17,0,9,18,21,22,23,24,25,26]},R:{stride1:9,stride2:3,offset:0,endQ:Rc,perm:[6,1,2,15,4,5,24,7,8,3,10,11,12,13,14,21,16,17,0,19,20,9,22,23,18,25,26]},"R'":{stride1:9,stride2:3,offset:0,endQ:Cc,perm:[18,1,2,9,4,5,0,7,8,21,10,11,12,13,14,3,16,17,24,19,20,15,22,23,6,25,26]},L:{stride1:9,stride2:3,offset:2,endQ:Cc,perm:[0,1,20,3,4,11,6,7,2,9,10,23,12,13,14,15,16,5,18,19,26,21,22,17,24,25,8]},"L'":{stride1:9,stride2:3,offset:2,endQ:Rc,perm:[0,1,8,3,4,17,6,7,26,9,10,5,12,13,14,15,16,23,18,19,2,21,22,11,24,25,20]}};doTurn(e,t,i){const r=[],{stride1:s,stride2:a,offset:o,endQ:l,perm:c}=xi.MOVE_INFO[e];for(let p=0;p<=2;p++)for(let v=0;v<=2;v++){const g=this.permutation[s*p+a*v+o];r.push(this.cubies[g])}const d=this.permutation.slice();for(let p=0;p<27;p++)this.permutation[c[p]]=d[p];let u=null;const f=new Dt,h=new Dt;let m=new Dt;const x=p=>{if(u===null)u=p,requestAnimationFrame(x);else{const v=p-u,g=Math.min(v/t,1);h.slerpQuaternions(Xo,l,Qg(Qg(g))),f.copy(m),f.invert().premultiply(h),m.copy(h);for(const _ of r)_.position.applyQuaternion(f),_.applyQuaternion(f);g!==1?requestAnimationFrame(x):i()}};requestAnimationFrame(x)}turn(e,t=this.turnTime){return new Promise((i,r)=>{this.turnQueue.push([e,Math.min(this.turnTime,t),i]),this.animate()})}updateOptions(e){if(e.turnTime!==void 0&&(this.turnTime=e.turnTime),e.colors!==void 0){this.colors=new Array(6);for(let t=0;t<6;t++){const i=e.colors[t];typeof i=="string"?this.colors[t]=new gl({color:i}):this.colors[t]=i}}if(e.internalColor!==void 0&&(typeof e.internalColor=="string"?this.internalColor=new gl({color:e.internalColor}):this.internalColor=e.internalColor),e.internalColor!==void 0||e.colors!==void 0){const t=[this.colors[5],this.colors[4]],i=[this.colors[2],this.colors[3]],r=[this.colors[1],this.colors[0]];for(let s=0;s<=2;s++)for(let a=0;a<=2;a++)for(let o=0;o<=2;o++){if(s===1&&a===1&&o===1)continue;const l=[o==2?r[0]:this.internalColor,o==0?r[1]:this.internalColor,a==2?i[0]:this.internalColor,a==0?i[1]:this.internalColor,s==2?t[0]:this.internalColor,s==0?t[1]:this.internalColor],c=9*s+3*a+o;this.cubies[c].material=l}}}}function Qg(n){return Math.max(0,Math.min(1,3*n*n-2*n*n*n))}var E0=function(n,e){return E0=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,i){t.__proto__=i}||function(t,i){for(var r in i)Object.prototype.hasOwnProperty.call(i,r)&&(t[r]=i[r])},E0(n,e)};function Xc(n,e){if(typeof e!="function"&&e!==null)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");E0(n,e);function t(){this.constructor=n}n.prototype=e===null?Object.create(e):(t.prototype=e.prototype,new t)}function jP(n,e,t,i){function r(s){return s instanceof t?s:new t(function(a){a(s)})}return new(t||(t=Promise))(function(s,a){function o(d){try{c(i.next(d))}catch(u){a(u)}}function l(d){try{c(i.throw(d))}catch(u){a(u)}}function c(d){d.done?s(d.value):r(d.value).then(o,l)}c((i=i.apply(n,e||[])).next())})}function ey(n,e){var t={label:0,sent:function(){if(s[0]&1)throw s[1];return s[1]},trys:[],ops:[]},i,r,s,a;return a={next:o(0),throw:o(1),return:o(2)},typeof Symbol=="function"&&(a[Symbol.iterator]=function(){return this}),a;function o(c){return function(d){return l([c,d])}}function l(c){if(i)throw new TypeError("Generator is already executing.");for(;t;)try{if(i=1,r&&(s=c[0]&2?r.return:c[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,c[1])).done)return s;switch(r=0,s&&(c=[c[0]&2,s.value]),c[0]){case 0:case 1:s=c;break;case 4:return t.label++,{value:c[1],done:!1};case 5:t.label++,r=c[1],c=[0];continue;case 7:c=t.ops.pop(),t.trys.pop();continue;default:if(s=t.trys,!(s=s.length>0&&s[s.length-1])&&(c[0]===6||c[0]===2)){t=0;continue}if(c[0]===3&&(!s||c[1]>s[0]&&c[1]<s[3])){t.label=c[1];break}if(c[0]===6&&t.label<s[1]){t.label=s[1],s=c;break}if(s&&t.label<s[2]){t.label=s[2],t.ops.push(c);break}s[2]&&t.ops.pop(),t.trys.pop();continue}c=e.call(n,t)}catch(d){c=[6,d],r=0}finally{i=s=0}if(c[0]&5)throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}}function eo(n){var e=typeof Symbol=="function"&&Symbol.iterator,t=e&&n[e],i=0;if(t)return t.call(n);if(n&&typeof n.length=="number")return{next:function(){return n&&i>=n.length&&(n=void 0),{value:n&&n[i++],done:!n}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")}function zr(n,e){var t=typeof Symbol=="function"&&n[Symbol.iterator];if(!t)return n;var i=t.call(n),r,s=[],a;try{for(;(e===void 0||e-- >0)&&!(r=i.next()).done;)s.push(r.value)}catch(o){a={error:o}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(a)throw a.error}}return s}function Bs(n,e,t){if(t||arguments.length===2)for(var i=0,r=e.length,s;i<r;i++)(s||!(i in e))&&(s||(s=Array.prototype.slice.call(e,0,i)),s[i]=e[i]);return n.concat(s||Array.prototype.slice.call(e))}function Fa(n){return this instanceof Fa?(this.v=n,this):new Fa(n)}function XP(n,e,t){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i=t.apply(n,e||[]),r,s=[];return r={},a("next"),a("throw"),a("return"),r[Symbol.asyncIterator]=function(){return this},r;function a(f){i[f]&&(r[f]=function(h){return new Promise(function(m,x){s.push([f,h,m,x])>1||o(f,h)})})}function o(f,h){try{l(i[f](h))}catch(m){u(s[0][3],m)}}function l(f){f.value instanceof Fa?Promise.resolve(f.value.v).then(c,d):u(s[0][2],f)}function c(f){o("next",f)}function d(f){o("throw",f)}function u(f,h){f(h),s.shift(),s.length&&o(s[0][0],s[0][1])}}function YP(n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e=n[Symbol.asyncIterator],t;return e?e.call(n):(n=typeof eo=="function"?eo(n):n[Symbol.iterator](),t={},i("next"),i("throw"),i("return"),t[Symbol.asyncIterator]=function(){return this},t);function i(s){t[s]=n[s]&&function(a){return new Promise(function(o,l){a=n[s](a),r(o,l,a.done,a.value)})}}function r(s,a,o,l){Promise.resolve(l).then(function(c){s({value:c,done:o})},a)}}function At(n){return typeof n=="function"}function ty(n){var e=function(i){Error.call(i),i.stack=new Error().stack},t=n(e);return t.prototype=Object.create(Error.prototype),t.prototype.constructor=t,t}var ph=ty(function(n){return function(t){n(this),this.message=t?t.length+` errors occurred during unsubscription:
`+t.map(function(i,r){return r+1+") "+i.toString()}).join(`
  `):"",this.name="UnsubscriptionError",this.errors=t}});function T0(n,e){if(n){var t=n.indexOf(e);0<=t&&n.splice(t,1)}}var mo=function(){function n(e){this.initialTeardown=e,this.closed=!1,this._parentage=null,this._finalizers=null}return n.prototype.unsubscribe=function(){var e,t,i,r,s;if(!this.closed){this.closed=!0;var a=this._parentage;if(a)if(this._parentage=null,Array.isArray(a))try{for(var o=eo(a),l=o.next();!l.done;l=o.next()){var c=l.value;c.remove(this)}}catch(x){e={error:x}}finally{try{l&&!l.done&&(t=o.return)&&t.call(o)}finally{if(e)throw e.error}}else a.remove(this);var d=this.initialTeardown;if(At(d))try{d()}catch(x){s=x instanceof ph?x.errors:[x]}var u=this._finalizers;if(u){this._finalizers=null;try{for(var f=eo(u),h=f.next();!h.done;h=f.next()){var m=h.value;try{e1(m)}catch(x){s=s??[],x instanceof ph?s=Bs(Bs([],zr(s)),zr(x.errors)):s.push(x)}}}catch(x){i={error:x}}finally{try{h&&!h.done&&(r=f.return)&&r.call(f)}finally{if(i)throw i.error}}}if(s)throw new ph(s)}},n.prototype.add=function(e){var t;if(e&&e!==this)if(this.closed)e1(e);else{if(e instanceof n){if(e.closed||e._hasParent(this))return;e._addParent(this)}(this._finalizers=(t=this._finalizers)!==null&&t!==void 0?t:[]).push(e)}},n.prototype._hasParent=function(e){var t=this._parentage;return t===e||Array.isArray(t)&&t.includes(e)},n.prototype._addParent=function(e){var t=this._parentage;this._parentage=Array.isArray(t)?(t.push(e),t):t?[t,e]:e},n.prototype._removeParent=function(e){var t=this._parentage;t===e?this._parentage=null:Array.isArray(t)&&T0(t,e)},n.prototype.remove=function(e){var t=this._finalizers;t&&T0(t,e),e instanceof n&&e._removeParent(this)},n.EMPTY=function(){var e=new n;return e.closed=!0,e}(),n}(),ny=mo.EMPTY;function iy(n){return n instanceof mo||n&&"closed"in n&&At(n.remove)&&At(n.add)&&At(n.unsubscribe)}function e1(n){At(n)?n():n.unsubscribe()}var Ap={onUnhandledError:null,onStoppedNotification:null,Promise:void 0,useDeprecatedSynchronousErrorHandling:!1,useDeprecatedNextContext:!1},A0={setTimeout:function(n,e){for(var t=[],i=2;i<arguments.length;i++)t[i-2]=arguments[i];var r=A0.delegate;return r?.setTimeout?r.setTimeout.apply(r,Bs([n,e],zr(t))):setTimeout.apply(void 0,Bs([n,e],zr(t)))},clearTimeout:function(n){var e=A0.delegate;return(e?.clearTimeout||clearTimeout)(n)},delegate:void 0};function ry(n){A0.setTimeout(function(){throw n})}function L0(){}var pd=null;function Sd(n){if(Ap.useDeprecatedSynchronousErrorHandling){var e=!pd;if(e&&(pd={errorThrown:!1,error:null}),n(),e){var t=pd,i=t.errorThrown,r=t.error;if(pd=null,i)throw r}}else n()}var Lp=function(n){Xc(e,n);function e(t){var i=n.call(this)||this;return i.isStopped=!1,t?(i.destination=t,iy(t)&&t.add(i)):i.destination=QP,i}return e.create=function(t,i,r){return new C0(t,i,r)},e.prototype.next=function(t){this.isStopped||this._next(t)},e.prototype.error=function(t){this.isStopped||(this.isStopped=!0,this._error(t))},e.prototype.complete=function(){this.isStopped||(this.isStopped=!0,this._complete())},e.prototype.unsubscribe=function(){this.closed||(this.isStopped=!0,n.prototype.unsubscribe.call(this),this.destination=null)},e.prototype._next=function(t){this.destination.next(t)},e.prototype._error=function(t){try{this.destination.error(t)}finally{this.unsubscribe()}},e.prototype._complete=function(){try{this.destination.complete()}finally{this.unsubscribe()}},e}(mo),ZP=Function.prototype.bind;function mh(n,e){return ZP.call(n,e)}var JP=function(){function n(e){this.partialObserver=e}return n.prototype.next=function(e){var t=this.partialObserver;if(t.next)try{t.next(e)}catch(i){md(i)}},n.prototype.error=function(e){var t=this.partialObserver;if(t.error)try{t.error(e)}catch(i){md(i)}else md(e)},n.prototype.complete=function(){var e=this.partialObserver;if(e.complete)try{e.complete()}catch(t){md(t)}},n}(),C0=function(n){Xc(e,n);function e(t,i,r){var s=n.call(this)||this,a;if(At(t)||!t)a={next:t??void 0,error:i??void 0,complete:r??void 0};else{var o;s&&Ap.useDeprecatedNextContext?(o=Object.create(t),o.unsubscribe=function(){return s.unsubscribe()},a={next:t.next&&mh(t.next,o),error:t.error&&mh(t.error,o),complete:t.complete&&mh(t.complete,o)}):a=t}return s.destination=new JP(a),s}return e}(Lp);function md(n){ry(n)}function KP(n){throw n}var QP={closed:!0,next:L0,error:KP,complete:L0},Cp=function(){return typeof Symbol=="function"&&Symbol.observable||"@@observable"}();function sy(n){return n}function eI(n){return n.length===0?sy:n.length===1?n[0]:function(t){return n.reduce(function(i,r){return r(i)},t)}}var mn=function(){function n(e){e&&(this._subscribe=e)}return n.prototype.lift=function(e){var t=new n;return t.source=this,t.operator=e,t},n.prototype.subscribe=function(e,t,i){var r=this,s=nI(e)?e:new C0(e,t,i);return Sd(function(){var a=r,o=a.operator,l=a.source;s.add(o?o.call(s,l):l?r._subscribe(s):r._trySubscribe(s))}),s},n.prototype._trySubscribe=function(e){try{return this._subscribe(e)}catch(t){e.error(t)}},n.prototype.forEach=function(e,t){var i=this;return t=t1(t),new t(function(r,s){var a=new C0({next:function(o){try{e(o)}catch(l){s(l),a.unsubscribe()}},error:s,complete:r});i.subscribe(a)})},n.prototype._subscribe=function(e){var t;return(t=this.source)===null||t===void 0?void 0:t.subscribe(e)},n.prototype[Cp]=function(){return this},n.prototype.pipe=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return eI(e)(this)},n.prototype.toPromise=function(e){var t=this;return e=t1(e),new e(function(i,r){var s;t.subscribe(function(a){return s=a},function(a){return r(a)},function(){return i(s)})})},n.create=function(e){return new n(e)},n}();function t1(n){var e;return(e=n??Ap.Promise)!==null&&e!==void 0?e:Promise}function tI(n){return n&&At(n.next)&&At(n.error)&&At(n.complete)}function nI(n){return n&&n instanceof Lp||tI(n)&&iy(n)}function iI(n){return At(n?.lift)}function xo(n){return function(e){if(iI(e))return e.lift(function(t){try{return n(t,this)}catch(i){this.error(i)}});throw new TypeError("Unable to lift unknown Observable type")}}function to(n,e,t,i,r){return new rI(n,e,t,i,r)}var rI=function(n){Xc(e,n);function e(t,i,r,s,a,o){var l=n.call(this,t)||this;return l.onFinalize=a,l.shouldUnsubscribe=o,l._next=i?function(c){try{i(c)}catch(d){t.error(d)}}:n.prototype._next,l._error=s?function(c){try{s(c)}catch(d){t.error(d)}finally{this.unsubscribe()}}:n.prototype._error,l._complete=r?function(){try{r()}catch(c){t.error(c)}finally{this.unsubscribe()}}:n.prototype._complete,l}return e.prototype.unsubscribe=function(){var t;if(!this.shouldUnsubscribe||this.shouldUnsubscribe()){var i=this.closed;n.prototype.unsubscribe.call(this),!i&&((t=this.onFinalize)===null||t===void 0||t.call(this))}},e}(Lp),ay={now:function(){return(ay.delegate||performance).now()},delegate:void 0},Ed={schedule:function(n){var e=requestAnimationFrame,t=cancelAnimationFrame,i=Ed.delegate;i&&(e=i.requestAnimationFrame,t=i.cancelAnimationFrame);var r=e(function(s){t=void 0,n(s)});return new mo(function(){return t?.(r)})},requestAnimationFrame:function(){for(var n=[],e=0;e<arguments.length;e++)n[e]=arguments[e];var t=Ed.delegate;return(t?.requestAnimationFrame||requestAnimationFrame).apply(void 0,Bs([],zr(n)))},cancelAnimationFrame:function(){for(var n=[],e=0;e<arguments.length;e++)n[e]=arguments[e];var t=Ed.delegate;return(t?.cancelAnimationFrame||cancelAnimationFrame).apply(void 0,Bs([],zr(n)))},delegate:void 0};function oy(n){return n?cy(n):sI}function cy(n){var e=Ed.schedule;return new mn(function(t){var i=new mo,r=n||ay,s=r.now(),a=function(o){var l=r.now();t.next({timestamp:n?l:o,elapsed:l-s}),t.closed||i.add(e(a))};return i.add(e(a)),i})}var sI=cy(),aI=ty(function(n){return function(){n(this),this.name="ObjectUnsubscribedError",this.message="object unsubscribed"}}),fn=function(n){Xc(e,n);function e(){var t=n.call(this)||this;return t.closed=!1,t.currentObservers=null,t.observers=[],t.isStopped=!1,t.hasError=!1,t.thrownError=null,t}return e.prototype.lift=function(t){var i=new n1(this,this);return i.operator=t,i},e.prototype._throwIfClosed=function(){if(this.closed)throw new aI},e.prototype.next=function(t){var i=this;Sd(function(){var r,s;if(i._throwIfClosed(),!i.isStopped){i.currentObservers||(i.currentObservers=Array.from(i.observers));try{for(var a=eo(i.currentObservers),o=a.next();!o.done;o=a.next()){var l=o.value;l.next(t)}}catch(c){r={error:c}}finally{try{o&&!o.done&&(s=a.return)&&s.call(a)}finally{if(r)throw r.error}}}})},e.prototype.error=function(t){var i=this;Sd(function(){if(i._throwIfClosed(),!i.isStopped){i.hasError=i.isStopped=!0,i.thrownError=t;for(var r=i.observers;r.length;)r.shift().error(t)}})},e.prototype.complete=function(){var t=this;Sd(function(){if(t._throwIfClosed(),!t.isStopped){t.isStopped=!0;for(var i=t.observers;i.length;)i.shift().complete()}})},e.prototype.unsubscribe=function(){this.isStopped=this.closed=!0,this.observers=this.currentObservers=null},Object.defineProperty(e.prototype,"observed",{get:function(){var t;return((t=this.observers)===null||t===void 0?void 0:t.length)>0},enumerable:!1,configurable:!0}),e.prototype._trySubscribe=function(t){return this._throwIfClosed(),n.prototype._trySubscribe.call(this,t)},e.prototype._subscribe=function(t){return this._throwIfClosed(),this._checkFinalizedStatuses(t),this._innerSubscribe(t)},e.prototype._innerSubscribe=function(t){var i=this,r=this,s=r.hasError,a=r.isStopped,o=r.observers;return s||a?ny:(this.currentObservers=null,o.push(t),new mo(function(){i.currentObservers=null,T0(o,t)}))},e.prototype._checkFinalizedStatuses=function(t){var i=this,r=i.hasError,s=i.thrownError,a=i.isStopped;r?t.error(s):a&&t.complete()},e.prototype.asObservable=function(){var t=new mn;return t.source=this,t},e.create=function(t,i){return new n1(t,i)},e}(mn),n1=function(n){Xc(e,n);function e(t,i){var r=n.call(this)||this;return r.destination=t,r.source=i,r}return e.prototype.next=function(t){var i,r;(r=(i=this.destination)===null||i===void 0?void 0:i.next)===null||r===void 0||r.call(i,t)},e.prototype.error=function(t){var i,r;(r=(i=this.destination)===null||i===void 0?void 0:i.error)===null||r===void 0||r.call(i,t)},e.prototype.complete=function(){var t,i;(i=(t=this.destination)===null||t===void 0?void 0:t.complete)===null||i===void 0||i.call(t)},e.prototype._subscribe=function(t){var i,r;return(r=(i=this.source)===null||i===void 0?void 0:i.subscribe(t))!==null&&r!==void 0?r:ny},e}(fn),oI=new mn(function(n){return n.complete()});function cI(n){return n&&At(n.schedule)}function ly(n){return n[n.length-1]}function lI(n){return cI(ly(n))?n.pop():void 0}function dI(n,e){return typeof ly(n)=="number"?n.pop():e}var Rp=function(n){return n&&typeof n.length=="number"&&typeof n!="function"};function dy(n){return At(n?.then)}function uy(n){return At(n[Cp])}function fy(n){return Symbol.asyncIterator&&At(n?.[Symbol.asyncIterator])}function hy(n){return new TypeError("You provided "+(n!==null&&typeof n=="object"?"an invalid object":"'"+n+"'")+" where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.")}function uI(){return typeof Symbol!="function"||!Symbol.iterator?"@@iterator":Symbol.iterator}var py=uI();function my(n){return At(n?.[py])}function xy(n){return XP(this,arguments,function(){var t,i,r,s;return ey(this,function(a){switch(a.label){case 0:t=n.getReader(),a.label=1;case 1:a.trys.push([1,,9,10]),a.label=2;case 2:return[4,Fa(t.read())];case 3:return i=a.sent(),r=i.value,s=i.done,s?[4,Fa(void 0)]:[3,5];case 4:return[2,a.sent()];case 5:return[4,Fa(r)];case 6:return[4,a.sent()];case 7:return a.sent(),[3,2];case 8:return[3,10];case 9:return t.releaseLock(),[7];case 10:return[2]}})})}function gy(n){return At(n?.getReader)}function Nr(n){if(n instanceof mn)return n;if(n!=null){if(uy(n))return fI(n);if(Rp(n))return hI(n);if(dy(n))return pI(n);if(fy(n))return vy(n);if(my(n))return mI(n);if(gy(n))return xI(n)}throw hy(n)}function fI(n){return new mn(function(e){var t=n[Cp]();if(At(t.subscribe))return t.subscribe(e);throw new TypeError("Provided object does not correctly implement Symbol.observable")})}function hI(n){return new mn(function(e){for(var t=0;t<n.length&&!e.closed;t++)e.next(n[t]);e.complete()})}function pI(n){return new mn(function(e){n.then(function(t){e.closed||(e.next(t),e.complete())},function(t){return e.error(t)}).then(null,ry)})}function mI(n){return new mn(function(e){var t,i;try{for(var r=eo(n),s=r.next();!s.done;s=r.next()){var a=s.value;if(e.next(a),e.closed)return}}catch(o){t={error:o}}finally{try{s&&!s.done&&(i=r.return)&&i.call(r)}finally{if(t)throw t.error}}e.complete()})}function vy(n){return new mn(function(e){gI(n,e).catch(function(t){return e.error(t)})})}function xI(n){return vy(xy(n))}function gI(n,e){var t,i,r,s;return jP(this,void 0,void 0,function(){var a,o;return ey(this,function(l){switch(l.label){case 0:l.trys.push([0,5,6,11]),t=YP(n),l.label=1;case 1:return[4,t.next()];case 2:if(i=l.sent(),!!i.done)return[3,4];if(a=i.value,e.next(a),e.closed)return[2];l.label=3;case 3:return[3,1];case 4:return[3,11];case 5:return o=l.sent(),r={error:o},[3,11];case 6:return l.trys.push([6,,9,10]),i&&!i.done&&(s=t.return)?[4,s.call(t)]:[3,8];case 7:l.sent(),l.label=8;case 8:return[3,10];case 9:if(r)throw r.error;return[7];case 10:return[7];case 11:return e.complete(),[2]}})})}function Tr(n,e,t,i,r){i===void 0&&(i=0),r===void 0&&(r=!1);var s=e.schedule(function(){t(),r?n.add(this.schedule(null,i)):this.unsubscribe()},i);if(n.add(s),!r)return s}function yy(n,e){return e===void 0&&(e=0),xo(function(t,i){t.subscribe(to(i,function(r){return Tr(i,n,function(){return i.next(r)},e)},function(){return Tr(i,n,function(){return i.complete()},e)},function(r){return Tr(i,n,function(){return i.error(r)},e)}))})}function by(n,e){return e===void 0&&(e=0),xo(function(t,i){i.add(n.schedule(function(){return t.subscribe(i)},e))})}function vI(n,e){return Nr(n).pipe(by(e),yy(e))}function yI(n,e){return Nr(n).pipe(by(e),yy(e))}function bI(n,e){return new mn(function(t){var i=0;return e.schedule(function(){i===n.length?t.complete():(t.next(n[i++]),t.closed||this.schedule())})})}function _I(n,e){return new mn(function(t){var i;return Tr(t,e,function(){i=n[py](),Tr(t,e,function(){var r,s,a;try{r=i.next(),s=r.value,a=r.done}catch(o){t.error(o);return}a?t.complete():t.next(s)},0,!0)}),function(){return At(i?.return)&&i.return()}})}function _y(n,e){if(!n)throw new Error("Iterable cannot be null");return new mn(function(t){Tr(t,e,function(){var i=n[Symbol.asyncIterator]();Tr(t,e,function(){i.next().then(function(r){r.done?t.complete():t.next(r.value)})},0,!0)})})}function wI(n,e){return _y(xy(n),e)}function MI(n,e){if(n!=null){if(uy(n))return vI(n,e);if(Rp(n))return bI(n,e);if(dy(n))return yI(n,e);if(fy(n))return _y(n,e);if(my(n))return _I(n,e);if(gy(n))return wI(n,e)}throw hy(n)}function SI(n,e){return e?MI(n,e):Nr(n)}function Us(n,e){return xo(function(t,i){var r=0;t.subscribe(to(i,function(s){i.next(n.call(e,s,r++))}))})}var EI=Array.isArray;function TI(n,e){return EI(e)?n.apply(void 0,Bs([],zr(e))):n(e)}function AI(n){return Us(function(e){return TI(n,e)})}function LI(n,e,t,i,r,s,a,o){var l=[],c=0,d=0,u=!1,f=function(){u&&!l.length&&!c&&e.complete()},h=function(x){return c<i?m(x):l.push(x)},m=function(x){s&&e.next(x),c++;var p=!1;Nr(t(x,d++)).subscribe(to(e,function(v){r?.(v),s?h(v):e.next(v)},function(){p=!0},void 0,function(){if(p)try{c--;for(var v=function(){var g=l.shift();a?Tr(e,a,function(){return m(g)}):m(g)};l.length&&c<i;)v();f()}catch(g){e.error(g)}}))};return n.subscribe(to(e,h,function(){u=!0,f()})),function(){o?.()}}function Pp(n,e,t){return t===void 0&&(t=1/0),At(e)?Pp(function(i,r){return Us(function(s,a){return e(i,s,r,a)})(Nr(n(i,r)))},t):(typeof e=="number"&&(t=e),xo(function(i,r){return LI(i,r,n,t)}))}function CI(n){return n===void 0&&(n=1/0),Pp(sy,n)}var RI=["addListener","removeListener"],PI=["addEventListener","removeEventListener"],II=["on","off"];function Wi(n,e,t,i){if(At(t)&&(i=t,t=void 0),i)return Wi(n,e,t).pipe(AI(i));var r=zr(zI(n)?PI.map(function(o){return function(l){return n[o](e,l,t)}}):DI(n)?RI.map(i1(n,e)):OI(n)?II.map(i1(n,e)):[],2),s=r[0],a=r[1];if(!s&&Rp(n))return Pp(function(o){return Wi(o,e,t)})(Nr(n));if(!s)throw new TypeError("Invalid event target");return new mn(function(o){var l=function(){for(var c=[],d=0;d<arguments.length;d++)c[d]=arguments[d];return o.next(1<c.length?c:c[0])};return s(l),function(){return a(l)}})}function i1(n,e){return function(t){return function(i){return n[t](e,i)}}}function DI(n){return At(n.addListener)&&At(n.removeListener)}function OI(n){return At(n.on)&&At(n.off)}function zI(n){return At(n.addEventListener)&&At(n.removeEventListener)}function FI(){for(var n=[],e=0;e<arguments.length;e++)n[e]=arguments[e];var t=lI(n),i=dI(n,1/0),r=n;return r.length?r.length===1?Nr(r[0]):CI(i)(SI(r,t)):oI}function wy(n,e){return xo(function(t,i){var r=0;t.subscribe(to(i,function(s){return n.call(e,s,r++)&&i.next(s)}))})}function qI(n){return xo(function(e,t){Nr(n).subscribe(to(t,function(){return t.complete()},L0)),!t.closed&&e.subscribe(t)})}class Yc{constructor(e,t,i,r){this.corners=e,this.cornerOrientations=t,this.edges=i,this.edgeOrientations=r}static SOLVED=new Yc([0,1,2,3,4,5,6,7],[0,0,0,0,0,0,0],[0,1,2,3,4,5,6,7,8,9,10,11],[0,0,0,0,0,0,0,0,0,0,0,0])}class Pc{constructor(e,t){this.timestamp=e,this.value=t}}function Ip(n){const e=n.length;let t=-n[0].timestamp;for(let i=0;i<e;i++)t+=n[i].timestamp;return t}class NI{constructor(e,t,i,r,s){this.dt=e,this.dqx=t,this.dqy=i,this.dqz=r,this.dqw=s}}function BI(n,e,t,i,r){const s=n.length/20,a=e.length,o=i.length,l=new Array(s);let c=0;for(let d=0;d<s;d++){let u=0,f=!0,h=0;for(let m=0;m<a;m++){const x=n[c+u];f=f&&(t[m]&x>>8)===x>>12&&(e[m]&x&15)===(x>>4&15),h+=t[m]&x>>10,u++}for(let m=0;m<o;m++){const x=n[c+u];f=f&&(r[m]&x>>8)===x>>12&&(i[m]&x&15)===(x>>4&15),h-=r[m]&x>>10,u++}c+=20,l[d]=f&&h===0}return l}const UI=[3855,3871,3887,3903,3919,3935,3951,3967,3855,3871,3887,3903,3919,3935,3951,3967,3983,3999,4015,4031,3903,3855,3871,3887,3919,3935,3951,3967,3903,3855,3871,3887,3919,3935,3951,3967,3983,3999,4015,4031,3887,3903,3855,3871,3919,3935,3951,3967,3887,3903,3855,3871,3919,3935,3951,3967,3983,3999,4015,4031,3871,3887,3903,3855,3919,3935,3951,3967,3871,3887,3903,3855,3919,3935,3951,3967,3983,3999,4015,4031,3855,3871,3887,3903,3935,3951,3967,3919,3855,3871,3887,3903,3935,3951,3967,3919,3983,3999,4015,4031,3855,3871,3887,3903,3951,3967,3919,3935,3855,3871,3887,3903,3951,3967,3919,3935,3983,3999,4015,4031,3855,3871,3887,3903,3967,3919,3935,3951,3855,3871,3887,3903,3967,3919,3935,3951,3983,3999,4015,4031,7967,12127,3887,3903,12047,8015,3951,3967,3855,8095,3887,3903,3919,8079,3951,3967,7967,8031,4015,4031,3935,3919,3887,3903,3871,3855,3951,3967,3855,3935,3887,3903,3919,3871,3951,3967,3999,3983,4015,4031,8015,12047,3887,3903,12127,7967,3951,3967,3855,8079,3887,3903,3919,8095,3951,3967,8031,7967,4015,4031,3855,3871,7999,12159,3919,3935,12079,8047,3855,3871,3887,8127,3919,3935,3951,8111,3983,3999,7999,8063,3855,3871,3967,3951,3919,3935,3903,3887,3855,3871,3887,3967,3919,3935,3951,3903,3983,3999,4031,4015,3855,3871,8047,12079,3919,3935,12159,7999,3855,3871,3887,8111,3919,3935,3951,8127,3983,3999,8063,7999,3855,7983,12143,3903,3919,12063,8031,3967,3855,3871,4015,3903,3919,3935,3999,3967,3983,3887,3951,4031,3855,3951,3935,3903,3919,3887,3871,3967,3855,3871,3951,3903,3919,3935,3887,3967,3983,4015,3999,4031,3855,8031,12063,3903,3919,12143,7983,3967,3855,3871,3999,3903,3919,3935,4015,3967,3983,3951,3887,4031,12111,3871,3887,7951,8063,3935,3951,12095,3983,3871,3887,3903,4031,3935,3951,3967,3919,3999,4015,3855,3967,3871,3887,3919,3903,3935,3951,3855,3919,3871,3887,3903,3855,3935,3951,3967,4031,3999,4015,3983,12095,3871,3887,8063,7951,3935,3951,12111,4031,3871,3887,3903,3983,3935,3951,3967,3855,3999,4015,3919,3840,3840,3840,3840,3919,3935,3951,3967,3840,3840,3840,3840,3919,3935,3951,3967,3983,3999,4015,4031,3855,3871,3887,3903,3840,3840,3840,3840,3855,3871,3887,3903,3840,3840,3840,3840,3983,3999,4015,4031,256,3871,3887,512,512,3935,3951,256,3840,3871,3887,3903,3840,3935,3951,3967,3840,3999,4015,3840,3855,512,256,3903,3919,256,512,3967,3855,3871,3840,3903,3919,3935,3840,3967,3983,3840,3840,4031,3855,3871,1536,256,3919,3935,256,1536,3855,3871,3887,1024,3919,3935,3951,0,3983,3999,0,1024,1536,256,3887,3903,256,1536,3951,3967,3855,1024,3887,3903,3919,0,3951,3967,0,1024,4015,4031,0,0,0,0,3919,3935,3951,3967,0,0,0,0,3919,3935,3951,3967,3983,3999,4015,4031,3855,3871,3887,3903,0,0,0,0,3855,3871,3887,3903,0,0,0,0,3983,3999,4015,4031,0,3871,3887,0,0,3935,3951,0,0,3871,3887,3903,0,3935,3951,3967,0,3999,4015,0,3855,0,0,3903,3919,0,0,3967,3855,3871,0,3903,3919,3935,0,3967,3983,0,0,4031,3855,3871,0,0,3919,3935,0,0,3855,3871,3887,0,3919,3935,3951,0,3983,3999,0,0,0,0,3887,3903,0,0,3951,3967,3855,0,3887,3903,3919,0,3951,3967,0,0,4015,4031,0,0,0,0,3919,3935,3951,3967,0,0,0,0,3919,3935,3951,3967,0,0,0,0,3855,3871,3887,3903,0,0,0,0,3855,3871,3887,3903,0,0,0,0,0,0,0,0,0,3871,3887,0,0,3935,3951,0,0,0,3887,0,0,0,3951,0,0,3999,4015,0,3855,0,0,3903,3919,0,0,3967,3855,0,0,0,3919,0,0,0,3983,0,0,4031,3855,3871,0,0,3919,3935,0,0,0,3871,0,0,0,3935,0,0,3983,3999,0,0,0,0,3887,3903,0,0,3951,3967,0,0,0,3903,0,0,0,3967,0,0,4015,4031,0,0,0,0,0,0,0,0,0,0,0,0,3919,3935,3951,3967,0,0,0,0,0,0,0,0,0,0,0,0,3855,3871,3887,3903,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3887,0,0,0,3951,0,0,3999,4015,0,0,0,0,0,0,0,0,0,3855,0,0,0,3919,0,0,0,3983,0,0,4031,0,0,0,0,0,0,0,0,0,3871,0,0,0,3935,0,0,3983,3999,0,0,0,0,0,0,0,0,0,0,0,0,0,3903,0,0,0,3967,0,0,4015,4031],zo=[{label:"Solved",stage:"Solved"},{label:"U",bottom:"Yellow",stage:"PLL"},{label:"U2",bottom:"Yellow",stage:"PLL"},{label:"U'",bottom:"Yellow",stage:"PLL"},{label:"D",bottom:"White",stage:"PLL"},{label:"D2",bottom:"White",stage:"PLL"},{label:"D'",bottom:"White",stage:"PLL"},{label:"F",bottom:"Blue",stage:"PLL"},{label:"F2",bottom:"Blue",stage:"PLL"},{label:"F'",bottom:"Blue",stage:"PLL"},{label:"B",bottom:"Green",stage:"PLL"},{label:"B2",bottom:"Green",stage:"PLL"},{label:"B'",bottom:"Green",stage:"PLL"},{label:"L",bottom:"Red",stage:"PLL"},{label:"L2",bottom:"Red",stage:"PLL"},{label:"L'",bottom:"Red",stage:"PLL"},{label:"R",bottom:"Orange",stage:"PLL"},{label:"R2",bottom:"Orange",stage:"PLL"},{label:"R'",bottom:"Orange",stage:"PLL"},{label:"OLL - Yellow Bottom",bottom:"Yellow",stage:"OLL"},{label:"OLL - White Bottom",bottom:"White",stage:"OLL"},{label:"OLL - Orange Bottom",bottom:"Orange",stage:"OLL"},{label:"OLL - Red Bottom",bottom:"Red",stage:"OLL"},{label:"OLL - Green Bottom",bottom:"Green",stage:"OLL"},{label:"OLL - Blue Bottom",bottom:"Blue",stage:"OLL"},{label:"F2L - Yellow Bottom",bottom:"Yellow",stage:"F2L"},{label:"F2L - White Bottom",bottom:"White",stage:"F2L"},{label:"F2L - Orange Bottom",bottom:"Orange",stage:"F2L"},{label:"F2L - Red Bottom",bottom:"Red",stage:"F2L"},{label:"F2L - Green Bottom",bottom:"Green",stage:"F2L"},{label:"F2L - Blue Bottom",bottom:"Blue",stage:"F2L"},{label:"First Layer - Yellow Bottom",bottom:"Yellow",stage:"First Layer"},{label:"First Layer - White Bottom",bottom:"White",stage:"First Layer"},{label:"First Layer - Orange Bottom",bottom:"Orange",stage:"First Layer"},{label:"First Layer - Red Bottom",bottom:"Red",stage:"First Layer"},{label:"First Layer - Green Bottom",bottom:"Green",stage:"First Layer"},{label:"First Layer - Blue Bottom",bottom:"Blue",stage:"First Layer"},{label:"Yellow Cross",bottom:"Yellow",stage:"Cross"},{label:"White Cross",bottom:"White",stage:"Cross"},{label:"Orange Cross",bottom:"Orange",stage:"Cross"},{label:"Red Cross",bottom:"Red",stage:"Cross"},{label:"Green Cross",bottom:"Green",stage:"Cross"},{label:"Blue Cross",bottom:"Blue",stage:"Cross"}],r1=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],s1=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],a1=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0],o1=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1];class Gs{corners=[0,1,2,3,4,5,6,7];cornerOrientations=[0,0,0,0,0,0,0,0];edges=[0,1,2,3,4,5,6,7,8,9,10,11];edgeOrientations=[0,0,0,0,0,0,0,0,0,0,0,0];_patterns=null;constructor(){}static MOVE_INFO={F:{cornerPerm:[1,5,2,3,0,4,6,7],edgePerm:[0,9,2,3,4,8,6,7,1,5,10,11],edgeFlip:[0,1,0,0,0,1,0,0,1,1,0,0],cornerTwists:[1,2,0,0,2,1,0,0]},"F'":{cornerPerm:[4,0,2,3,5,1,6,7],edgePerm:[0,8,2,3,4,9,6,7,5,1,10,11],edgeFlip:[0,1,0,0,0,1,0,0,1,1,0,0],cornerTwists:[1,2,0,0,2,1,0,0]},B:{cornerPerm:[0,1,3,7,4,5,2,6],edgePerm:[0,1,2,11,4,5,6,10,8,9,3,7],edgeFlip:[0,0,0,1,0,0,0,1,0,0,1,1],cornerTwists:[0,0,1,2,0,0,2,1]},"B'":{cornerPerm:[0,1,6,2,4,5,7,3],edgePerm:[0,1,2,10,4,5,6,11,8,9,7,3],edgeFlip:[0,0,0,1,0,0,0,1,0,0,1,1],cornerTwists:[0,0,1,2,0,0,2,1]},R:{cornerPerm:[4,1,2,0,7,5,6,3],edgePerm:[8,1,2,3,11,5,6,7,4,9,10,0],edgeFlip:[0,0,0,0,0,0,0,0,0,0,0,0],cornerTwists:[2,0,0,1,1,0,0,2]},"R'":{cornerPerm:[3,1,2,7,0,5,6,4],edgePerm:[11,1,2,3,8,5,6,7,0,9,10,4],edgeFlip:[0,0,0,0,0,0,0,0,0,0,0,0],cornerTwists:[2,0,0,1,1,0,0,2]},L:{cornerPerm:[0,2,6,3,4,1,5,7],edgePerm:[0,1,10,3,4,5,9,7,8,2,6,11],edgeFlip:[0,0,0,0,0,0,0,0,0,0,0,0],cornerTwists:[0,1,2,0,0,2,1,0]},"L'":{cornerPerm:[0,5,1,3,4,6,2,7],edgePerm:[0,1,9,3,4,5,10,7,8,6,2,11],edgeFlip:[0,0,0,0,0,0,0,0,0,0,0,0],cornerTwists:[0,1,2,0,0,2,1,0]},U:{cornerPerm:[3,0,1,2,4,5,6,7],edgePerm:[3,0,1,2,4,5,6,7,8,9,10,11],edgeFlip:[0,0,0,0,0,0,0,0,0,0,0,0],cornerTwists:[0,0,0,0,0,0,0,0]},"U'":{cornerPerm:[1,2,3,0,4,5,6,7],edgePerm:[1,2,3,0,4,5,6,7,8,9,10,11],edgeFlip:[0,0,0,0,0,0,0,0,0,0,0,0],cornerTwists:[0,0,0,0,0,0,0,0]},D:{cornerPerm:[0,1,2,3,5,6,7,4],edgePerm:[0,1,2,3,5,6,7,4,8,9,10,11],edgeFlip:[0,0,0,0,0,0,0,0,0,0,0,0],cornerTwists:[0,0,0,0,0,0,0,0]},"D'":{cornerPerm:[0,1,2,3,7,4,5,6],edgePerm:[0,1,2,3,7,4,5,6,8,9,10,11],edgeFlip:[0,0,0,0,0,0,0,0,0,0,0,0],cornerTwists:[0,0,0,0,0,0,0,0]}};applyMove(e){this._patterns=null;const{cornerPerm:t,edgePerm:i,edgeFlip:r,cornerTwists:s}=Gs.MOVE_INFO[e],a=this.corners.slice();for(let d=0;d<a.length;d++)this.corners[d]=a[t[d]];const o=this.edges.slice();for(let d=0;d<o.length;d++)this.edges[d]=o[i[d]];const l=this.cornerOrientations.slice();for(let d=0;d<l.length;d++)this.cornerOrientations[d]=(l[t[d]]+s[d])%3;const c=this.edgeOrientations.slice();for(let d=0;d<c.length;d++)this.edgeOrientations[d]=(c[i[d]]+r[d])%2}isSolved(){const e=this.corners.length;for(let i=0;i<e;i++)if(this.corners[i]!==i||this.cornerOrientations[i]!==0)return!1;const t=this.edges.length;for(let i=0;i<t;i++)if(this.edges[i]!==i||this.edgeOrientations[i]!==0)return!1;return!0}get patterns(){return this._patterns!==null?this._patterns:(this._patterns=BI(UI,this.corners,this.cornerOrientations,this.edges,this.edgeOrientations),this._patterns)}match(){const e=this.patterns;return zo.filter((t,i)=>e[i])}isF2L(e){const t=this.patterns;return e===void 0?t.some((i,r)=>i&&a1[r]===1):t.some((i,r)=>i&&a1[r]===1&&e(zo[r]))}isOLL(e){const t=this.patterns;return e===void 0?t.some((i,r)=>i&&s1[r]===1):t.some((i,r)=>i&&s1[r]===1&&e(zo[r]))}isPLL(e){const t=this.patterns;return e===void 0?t.some((i,r)=>i&&r1[r]===1):t.some((i,r)=>i&&r1[r]===1&&e(zo[r]))}isCross(e){const t=this.patterns;return e===void 0?t.some((i,r)=>i&&o1[r]===1):t.some((i,r)=>i&&o1[r]===1&&e(zo[r]))}setState(e){this._patterns=null;const t=this.corners.length;for(let r=0;r<t;r++)this.corners[r]=e.corners[r],this.cornerOrientations[r]=e.cornerOrientations[r];const i=this.edges.length;for(let r=0;r<i;r++)this.edges[r]=e.edges[r],this.edgeOrientations[r]=e.edgeOrientations[r]}getState(){return new Yc(this.corners.slice(),this.cornerOrientations.slice(),this.edges.slice(),this.edgeOrientations.slice())}reset(){this._patterns=null;const e=this.corners.length;for(let i=0;i<e;i++)this.corners[i]=i,this.cornerOrientations[i]=0;const t=this.edges.length;for(let i=0;i<t;i++)this.edges[i]=i,this.edgeOrientations[i]=0}solution(){return Fs.exports.solveCoordinates(this.edgeOrientations,this.edges,this.cornerOrientations,this.corners)}toString(){return JSON.stringify(this)}}function My(n){return n.indexOf("'")===-1?n+"'":n[0]}function R0(n){return n.map(My).reverse()}function GI(n){const e=[];for(let t=0;t<n.length;t++){const i=n[t];if(i.indexOf("2")!==-1){const r=i.replace("2","");e.push(r),e.push(r)}else e.push(i)}return e}function c1(n){const e=new Gs;return R0(n).forEach(t=>e.applyMove(t)),R0(e.solution().split(" "))}function Lu(n){const e=[];let t=null;for(let i=0;i<n.length;i++)t===n[i]?(e.push(t[0]+"2"+t.substring(1)),t=null):(t!==null&&e.push(t),t=n[i]);return t!==null&&e.push(t),e}const l1={F:1,F2:2,"F'":3,B:17,B2:18,"B'":19,U:33,U2:34,"U'":35,D:49,D2:50,"D'":51,R:65,R2:66,"R'":67,L:81,L2:82,"L'":83},kI=["F","B","U","D","R","L"],HI=["","","2","'"];function VI(n,e){return(n&224)===(e&224)}function WI(n,e,t){const i=n&240,r=e&240,s=t!==void 0?t&240:240;if(i===r){const a=(e&3)+4-(n&3)&3;if(a===0)return t===void 0?[]:[t];{const o=i|a;return t===void 0?[o]:[o,t]}}else if(VI(n,e)&&i===s){const a=(t&3)+4-(n&3)&3;if(a===0)return[e];{const o=i|a;return[e,o]}}else{const a=n+2&243;return t===void 0?[a,e]:[a,e,t]}}class no{sequence=[];constructor(e){this.sequence=e.length===1&&e[0]===""?[]:e.map(t=>l1[t])}applyMove(e){const t=l1[e],i=this.sequence,r=i.shift(),s=i.shift();return r===void 0?i.push(t):i.unshift(...WI(t,r,s)),i.length===0}get done(){return this.sequence.length===0}toString(){return this.sequence.map(e=>kI[e>>4]+HI[e&15]).join(" ")}}class $I{sim=new Gs;startState;moves;times=[];actionSubject=new fn;gyroUpdates;playingSub=null;stepIndex=0;elapsedTimeBase=0;constructor(e,t,i){this.moves=e.slice(),this.sim=new Gs;for(let s=0;s<t.length;s++)this.sim.applyMove(t[s]);this.startState=this.sim.getState(),this.moves[0]=new Pc(100,e[0].value);let r=-100;for(const s of this.moves)r+=s.timestamp,this.times.push(r);this.gyroUpdates=i===void 0?[]:i.map(({dt:s,dqx:a,dqy:o,dqz:l,dqw:c})=>({dt:s,dq:new Dt(a,o,l,c)}))}get actions(){return this.actionSubject}step(){if(this.stepIndex<this.moves.length){const e=this.moves[this.stepIndex];this.stepIndex++,this.sim.applyMove(e.value),this.actionSubject.next({type:"MOVE",move:e})}else this.actionSubject.next({type:"END"})}stepBack(){if(this.stepIndex>0){const{timestamp:e}=this.moves[this.stepIndex];this.stepIndex--;const{value:t}=this.moves[this.stepIndex],i=My(t);this.sim.applyMove(i),this.actionSubject.next({type:"MOVE",move:new Pc(e,i)})}}emitState(){this.actionSubject.next({type:"SET_CUBE",cubeState:this.sim.getState()})}play(){if(this.actionSubject.next({type:"SET_CUBE",cubeState:this.sim.getState()}),this.playingSub?.unsubscribe(),this.stepIndex===0){const o=this.moves[0];this.actionSubject.next({type:"MOVE",move:o}),this.sim.applyMove(o.value)}const e=this.elapsedTimeBase,t=this.moves.length-1;let i=0,r=0;const s=this.gyroUpdates,a=s.length;this.playingSub=oy().subscribe(({elapsed:o})=>{const l=e+o;if(this.elapsedTimeBase=l,this.stepIndex>=t){const d=this.times[this.stepIndex];this.actionSubject.next({type:"TIME",elapsedTime:Math.min(d,l)}),l>d&&(this.playingSub?.unsubscribe(),this.playingSub=null,this.actionSubject.next({type:"END"}),this.sim.setState(this.startState),this.elapsedTimeBase=0,this.stepIndex=0);return}for(this.actionSubject.next({type:"TIME",elapsedTime:l});this.stepIndex<t&&l>this.times[this.stepIndex];){this.stepIndex++;const d=this.moves[this.stepIndex];this.actionSubject.next({type:"MOVE",move:d}),this.sim.applyMove(d.value)}const c=new Dt;for(;r<o&&i<a;){const{dt:d,dq:u}=s[i];r+=d,i++,c.multiply(u)}this.actionSubject.next({type:"GYRO",dq:c})})}pause(){this.playingSub?.unsubscribe(),this.playingSub=null}goToBeginning(){this.pause(),this.stepIndex=0,this.elapsedTimeBase=0,this.sim.setState(this.startState),this.actionSubject.next({type:"SET_CUBE",cubeState:this.startState})}}function _n(n,e){const t=typeof n=="string"?document.querySelector(n):n;if(t===null)throw new Error(`Selector ${n} didn't find an element.`);return Wi(t,"click").pipe(Us(e)).pipe(wy(i=>i!==void 0))}function xh(n,e){const t=typeof n=="string"?document.querySelector(n):n;if(t===null)throw new Error(`Selector ${n} didn't find an element.`);return Wi(t,"click").pipe(Us(i=>e(i.target.checked)))}var Sy={exports:{}};/*! MIT License. Copyright 2015-2018 Richard Moore <me@ricmoo.com>. See LICENSE.txt. */(function(n,e){(function(t){function i(R){return parseInt(R)===R}function r(R){if(!i(R.length))return!1;for(var k=0;k<R.length;k++)if(!i(R[k])||R[k]<0||R[k]>255)return!1;return!0}function s(R,k){if(R.buffer&&R.name==="Uint8Array")return k&&(R.slice?R=R.slice():R=Array.prototype.slice.call(R)),R;if(Array.isArray(R)){if(!r(R))throw new Error("Array contains invalid value: "+R);return new Uint8Array(R)}if(i(R.length)&&r(R))return new Uint8Array(R);throw new Error("unsupported array-like object")}function a(R){return new Uint8Array(R)}function o(R,k,j,K,B){(K!=null||B!=null)&&(R.slice?R=R.slice(K,B):R=Array.prototype.slice.call(R,K,B)),k.set(R,j)}var l=function(){function R(j){var K=[],B=0;for(j=encodeURI(j);B<j.length;){var oe=j.charCodeAt(B++);oe===37?(K.push(parseInt(j.substr(B,2),16)),B+=2):K.push(oe)}return s(K)}function k(j){for(var K=[],B=0;B<j.length;){var oe=j[B];oe<128?(K.push(String.fromCharCode(oe)),B++):oe>191&&oe<224?(K.push(String.fromCharCode((oe&31)<<6|j[B+1]&63)),B+=2):(K.push(String.fromCharCode((oe&15)<<12|(j[B+1]&63)<<6|j[B+2]&63)),B+=3)}return K.join("")}return{toBytes:R,fromBytes:k}}(),c=function(){function R(K){for(var B=[],oe=0;oe<K.length;oe+=2)B.push(parseInt(K.substr(oe,2),16));return B}var k="0123456789abcdef";function j(K){for(var B=[],oe=0;oe<K.length;oe++){var Re=K[oe];B.push(k[(Re&240)>>4]+k[Re&15])}return B.join("")}return{toBytes:R,fromBytes:j}}(),d={16:10,24:12,32:14},u=[1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145],f=[99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22],h=[82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125],m=[3328402341,4168907908,4000806809,4135287693,4294111757,3597364157,3731845041,2445657428,1613770832,33620227,3462883241,1445669757,3892248089,3050821474,1303096294,3967186586,2412431941,528646813,2311702848,4202528135,4026202645,2992200171,2387036105,4226871307,1101901292,3017069671,1604494077,1169141738,597466303,1403299063,3832705686,2613100635,1974974402,3791519004,1033081774,1277568618,1815492186,2118074177,4126668546,2211236943,1748251740,1369810420,3521504564,4193382664,3799085459,2883115123,1647391059,706024767,134480908,2512897874,1176707941,2646852446,806885416,932615841,168101135,798661301,235341577,605164086,461406363,3756188221,3454790438,1311188841,2142417613,3933566367,302582043,495158174,1479289972,874125870,907746093,3698224818,3025820398,1537253627,2756858614,1983593293,3084310113,2108928974,1378429307,3722699582,1580150641,327451799,2790478837,3117535592,0,3253595436,1075847264,3825007647,2041688520,3059440621,3563743934,2378943302,1740553945,1916352843,2487896798,2555137236,2958579944,2244988746,3151024235,3320835882,1336584933,3992714006,2252555205,2588757463,1714631509,293963156,2319795663,3925473552,67240454,4269768577,2689618160,2017213508,631218106,1269344483,2723238387,1571005438,2151694528,93294474,1066570413,563977660,1882732616,4059428100,1673313503,2008463041,2950355573,1109467491,537923632,3858759450,4260623118,3218264685,2177748300,403442708,638784309,3287084079,3193921505,899127202,2286175436,773265209,2479146071,1437050866,4236148354,2050833735,3362022572,3126681063,840505643,3866325909,3227541664,427917720,2655997905,2749160575,1143087718,1412049534,999329963,193497219,2353415882,3354324521,1807268051,672404540,2816401017,3160301282,369822493,2916866934,3688947771,1681011286,1949973070,336202270,2454276571,201721354,1210328172,3093060836,2680341085,3184776046,1135389935,3294782118,965841320,831886756,3554993207,4068047243,3588745010,2345191491,1849112409,3664604599,26054028,2983581028,2622377682,1235855840,3630984372,2891339514,4092916743,3488279077,3395642799,4101667470,1202630377,268961816,1874508501,4034427016,1243948399,1546530418,941366308,1470539505,1941222599,2546386513,3421038627,2715671932,3899946140,1042226977,2521517021,1639824860,227249030,260737669,3765465232,2084453954,1907733956,3429263018,2420656344,100860677,4160157185,470683154,3261161891,1781871967,2924959737,1773779408,394692241,2579611992,974986535,664706745,3655459128,3958962195,731420851,571543859,3530123707,2849626480,126783113,865375399,765172662,1008606754,361203602,3387549984,2278477385,2857719295,1344809080,2782912378,59542671,1503764984,160008576,437062935,1707065306,3622233649,2218934982,3496503480,2185314755,697932208,1512910199,504303377,2075177163,2824099068,1841019862,739644986],x=[2781242211,2230877308,2582542199,2381740923,234877682,3184946027,2984144751,1418839493,1348481072,50462977,2848876391,2102799147,434634494,1656084439,3863849899,2599188086,1167051466,2636087938,1082771913,2281340285,368048890,3954334041,3381544775,201060592,3963727277,1739838676,4250903202,3930435503,3206782108,4149453988,2531553906,1536934080,3262494647,484572669,2923271059,1783375398,1517041206,1098792767,49674231,1334037708,1550332980,4098991525,886171109,150598129,2481090929,1940642008,1398944049,1059722517,201851908,1385547719,1699095331,1587397571,674240536,2704774806,252314885,3039795866,151914247,908333586,2602270848,1038082786,651029483,1766729511,3447698098,2682942837,454166793,2652734339,1951935532,775166490,758520603,3000790638,4004797018,4217086112,4137964114,1299594043,1639438038,3464344499,2068982057,1054729187,1901997871,2534638724,4121318227,1757008337,0,750906861,1614815264,535035132,3363418545,3988151131,3201591914,1183697867,3647454910,1265776953,3734260298,3566750796,3903871064,1250283471,1807470800,717615087,3847203498,384695291,3313910595,3617213773,1432761139,2484176261,3481945413,283769337,100925954,2180939647,4037038160,1148730428,3123027871,3813386408,4087501137,4267549603,3229630528,2315620239,2906624658,3156319645,1215313976,82966005,3747855548,3245848246,1974459098,1665278241,807407632,451280895,251524083,1841287890,1283575245,337120268,891687699,801369324,3787349855,2721421207,3431482436,959321879,1469301956,4065699751,2197585534,1199193405,2898814052,3887750493,724703513,2514908019,2696962144,2551808385,3516813135,2141445340,1715741218,2119445034,2872807568,2198571144,3398190662,700968686,3547052216,1009259540,2041044702,3803995742,487983883,1991105499,1004265696,1449407026,1316239930,504629770,3683797321,168560134,1816667172,3837287516,1570751170,1857934291,4014189740,2797888098,2822345105,2754712981,936633572,2347923833,852879335,1133234376,1500395319,3084545389,2348912013,1689376213,3533459022,3762923945,3034082412,4205598294,133428468,634383082,2949277029,2398386810,3913789102,403703816,3580869306,2297460856,1867130149,1918643758,607656988,4049053350,3346248884,1368901318,600565992,2090982877,2632479860,557719327,3717614411,3697393085,2249034635,2232388234,2430627952,1115438654,3295786421,2865522278,3633334344,84280067,33027830,303828494,2747425121,1600795957,4188952407,3496589753,2434238086,1486471617,658119965,3106381470,953803233,334231800,3005978776,857870609,3151128937,1890179545,2298973838,2805175444,3056442267,574365214,2450884487,550103529,1233637070,4289353045,2018519080,2057691103,2399374476,4166623649,2148108681,387583245,3664101311,836232934,3330556482,3100665960,3280093505,2955516313,2002398509,287182607,3413881008,4238890068,3597515707,975967766],p=[1671808611,2089089148,2006576759,2072901243,4061003762,1807603307,1873927791,3310653893,810573872,16974337,1739181671,729634347,4263110654,3613570519,2883997099,1989864566,3393556426,2191335298,3376449993,2106063485,4195741690,1508618841,1204391495,4027317232,2917941677,3563566036,2734514082,2951366063,2629772188,2767672228,1922491506,3227229120,3082974647,4246528509,2477669779,644500518,911895606,1061256767,4144166391,3427763148,878471220,2784252325,3845444069,4043897329,1905517169,3631459288,827548209,356461077,67897348,3344078279,593839651,3277757891,405286936,2527147926,84871685,2595565466,118033927,305538066,2157648768,3795705826,3945188843,661212711,2999812018,1973414517,152769033,2208177539,745822252,439235610,455947803,1857215598,1525593178,2700827552,1391895634,994932283,3596728278,3016654259,695947817,3812548067,795958831,2224493444,1408607827,3513301457,0,3979133421,543178784,4229948412,2982705585,1542305371,1790891114,3410398667,3201918910,961245753,1256100938,1289001036,1491644504,3477767631,3496721360,4012557807,2867154858,4212583931,1137018435,1305975373,861234739,2241073541,1171229253,4178635257,33948674,2139225727,1357946960,1011120188,2679776671,2833468328,1374921297,2751356323,1086357568,2408187279,2460827538,2646352285,944271416,4110742005,3168756668,3066132406,3665145818,560153121,271589392,4279952895,4077846003,3530407890,3444343245,202643468,322250259,3962553324,1608629855,2543990167,1154254916,389623319,3294073796,2817676711,2122513534,1028094525,1689045092,1575467613,422261273,1939203699,1621147744,2174228865,1339137615,3699352540,577127458,712922154,2427141008,2290289544,1187679302,3995715566,3100863416,339486740,3732514782,1591917662,186455563,3681988059,3762019296,844522546,978220090,169743370,1239126601,101321734,611076132,1558493276,3260915650,3547250131,2901361580,1655096418,2443721105,2510565781,3828863972,2039214713,3878868455,3359869896,928607799,1840765549,2374762893,3580146133,1322425422,2850048425,1823791212,1459268694,4094161908,3928346602,1706019429,2056189050,2934523822,135794696,3134549946,2022240376,628050469,779246638,472135708,2800834470,3032970164,3327236038,3894660072,3715932637,1956440180,522272287,1272813131,3185336765,2340818315,2323976074,1888542832,1044544574,3049550261,1722469478,1222152264,50660867,4127324150,236067854,1638122081,895445557,1475980887,3117443513,2257655686,3243809217,489110045,2662934430,3778599393,4162055160,2561878936,288563729,1773916777,3648039385,2391345038,2493985684,2612407707,505560094,2274497927,3911240169,3460925390,1442818645,678973480,3749357023,2358182796,2717407649,2306869641,219617805,3218761151,3862026214,1120306242,1756942440,1103331905,2578459033,762796589,252780047,2966125488,1425844308,3151392187,372911126],v=[1667474886,2088535288,2004326894,2071694838,4075949567,1802223062,1869591006,3318043793,808472672,16843522,1734846926,724270422,4278065639,3621216949,2880169549,1987484396,3402253711,2189597983,3385409673,2105378810,4210693615,1499065266,1195886990,4042263547,2913856577,3570689971,2728590687,2947541573,2627518243,2762274643,1920112356,3233831835,3082273397,4261223649,2475929149,640051788,909531756,1061110142,4160160501,3435941763,875846760,2779116625,3857003729,4059105529,1903268834,3638064043,825316194,353713962,67374088,3351728789,589522246,3284360861,404236336,2526454071,84217610,2593830191,117901582,303183396,2155911963,3806477791,3958056653,656894286,2998062463,1970642922,151591698,2206440989,741110872,437923380,454765878,1852748508,1515908788,2694904667,1381168804,993742198,3604373943,3014905469,690584402,3823320797,791638366,2223281939,1398011302,3520161977,0,3991743681,538992704,4244381667,2981218425,1532751286,1785380564,3419096717,3200178535,960056178,1246420628,1280103576,1482221744,3486468741,3503319995,4025428677,2863326543,4227536621,1128514950,1296947098,859002214,2240123921,1162203018,4193849577,33687044,2139062782,1347481760,1010582648,2678045221,2829640523,1364325282,2745433693,1077985408,2408548869,2459086143,2644360225,943212656,4126475505,3166494563,3065430391,3671750063,555836226,269496352,4294908645,4092792573,3537006015,3452783745,202118168,320025894,3974901699,1600119230,2543297077,1145359496,387397934,3301201811,2812801621,2122220284,1027426170,1684319432,1566435258,421079858,1936954854,1616945344,2172753945,1330631070,3705438115,572679748,707427924,2425400123,2290647819,1179044492,4008585671,3099120491,336870440,3739122087,1583276732,185277718,3688593069,3772791771,842159716,976899700,168435220,1229577106,101059084,606366792,1549591736,3267517855,3553849021,2897014595,1650632388,2442242105,2509612081,3840161747,2038008818,3890688725,3368567691,926374254,1835907034,2374863873,3587531953,1313788572,2846482505,1819063512,1448540844,4109633523,3941213647,1701162954,2054852340,2930698567,134748176,3132806511,2021165296,623210314,774795868,471606328,2795958615,3031746419,3334885783,3907527627,3722280097,1953799400,522133822,1263263126,3183336545,2341176845,2324333839,1886425312,1044267644,3048588401,1718004428,1212733584,50529542,4143317495,235803164,1633788866,892690282,1465383342,3115962473,2256965911,3250673817,488449850,2661202215,3789633753,4177007595,2560144171,286339874,1768537042,3654906025,2391705863,2492770099,2610673197,505291324,2273808917,3924369609,3469625735,1431699370,673740880,3755965093,2358021891,2711746649,2307489801,218961690,3217021541,3873845719,1111672452,1751693520,1094828930,2576986153,757954394,252645662,2964376443,1414855848,3149649517,370555436],g=[1374988112,2118214995,437757123,975658646,1001089995,530400753,2902087851,1273168787,540080725,2910219766,2295101073,4110568485,1340463100,3307916247,641025152,3043140495,3736164937,632953703,1172967064,1576976609,3274667266,2169303058,2370213795,1809054150,59727847,361929877,3211623147,2505202138,3569255213,1484005843,1239443753,2395588676,1975683434,4102977912,2572697195,666464733,3202437046,4035489047,3374361702,2110667444,1675577880,3843699074,2538681184,1649639237,2976151520,3144396420,4269907996,4178062228,1883793496,2403728665,2497604743,1383856311,2876494627,1917518562,3810496343,1716890410,3001755655,800440835,2261089178,3543599269,807962610,599762354,33778362,3977675356,2328828971,2809771154,4077384432,1315562145,1708848333,101039829,3509871135,3299278474,875451293,2733856160,92987698,2767645557,193195065,1080094634,1584504582,3178106961,1042385657,2531067453,3711829422,1306967366,2438237621,1908694277,67556463,1615861247,429456164,3602770327,2302690252,1742315127,2968011453,126454664,3877198648,2043211483,2709260871,2084704233,4169408201,0,159417987,841739592,504459436,1817866830,4245618683,260388950,1034867998,908933415,168810852,1750902305,2606453969,607530554,202008497,2472011535,3035535058,463180190,2160117071,1641816226,1517767529,470948374,3801332234,3231722213,1008918595,303765277,235474187,4069246893,766945465,337553864,1475418501,2943682380,4003061179,2743034109,4144047775,1551037884,1147550661,1543208500,2336434550,3408119516,3069049960,3102011747,3610369226,1113818384,328671808,2227573024,2236228733,3535486456,2935566865,3341394285,496906059,3702665459,226906860,2009195472,733156972,2842737049,294930682,1206477858,2835123396,2700099354,1451044056,573804783,2269728455,3644379585,2362090238,2564033334,2801107407,2776292904,3669462566,1068351396,742039012,1350078989,1784663195,1417561698,4136440770,2430122216,775550814,2193862645,2673705150,1775276924,1876241833,3475313331,3366754619,270040487,3902563182,3678124923,3441850377,1851332852,3969562369,2203032232,3868552805,2868897406,566021896,4011190502,3135740889,1248802510,3936291284,699432150,832877231,708780849,3332740144,899835584,1951317047,4236429990,3767586992,866637845,4043610186,1106041591,2144161806,395441711,1984812685,1139781709,3433712980,3835036895,2664543715,1282050075,3240894392,1181045119,2640243204,25965917,4203181171,4211818798,3009879386,2463879762,3910161971,1842759443,2597806476,933301370,1509430414,3943906441,3467192302,3076639029,3776767469,2051518780,2631065433,1441952575,404016761,1942435775,1408749034,1610459739,3745345300,2017778566,3400528769,3110650942,941896748,3265478751,371049330,3168937228,675039627,4279080257,967311729,135050206,3635733660,1683407248,2076935265,3576870512,1215061108,3501741890],_=[1347548327,1400783205,3273267108,2520393566,3409685355,4045380933,2880240216,2471224067,1428173050,4138563181,2441661558,636813900,4233094615,3620022987,2149987652,2411029155,1239331162,1730525723,2554718734,3781033664,46346101,310463728,2743944855,3328955385,3875770207,2501218972,3955191162,3667219033,768917123,3545789473,692707433,1150208456,1786102409,2029293177,1805211710,3710368113,3065962831,401639597,1724457132,3028143674,409198410,2196052529,1620529459,1164071807,3769721975,2226875310,486441376,2499348523,1483753576,428819965,2274680428,3075636216,598438867,3799141122,1474502543,711349675,129166120,53458370,2592523643,2782082824,4063242375,2988687269,3120694122,1559041666,730517276,2460449204,4042459122,2706270690,3446004468,3573941694,533804130,2328143614,2637442643,2695033685,839224033,1973745387,957055980,2856345839,106852767,1371368976,4181598602,1033297158,2933734917,1179510461,3046200461,91341917,1862534868,4284502037,605657339,2547432937,3431546947,2003294622,3182487618,2282195339,954669403,3682191598,1201765386,3917234703,3388507166,0,2198438022,1211247597,2887651696,1315723890,4227665663,1443857720,507358933,657861945,1678381017,560487590,3516619604,975451694,2970356327,261314535,3535072918,2652609425,1333838021,2724322336,1767536459,370938394,182621114,3854606378,1128014560,487725847,185469197,2918353863,3106780840,3356761769,2237133081,1286567175,3152976349,4255350624,2683765030,3160175349,3309594171,878443390,1988838185,3704300486,1756818940,1673061617,3403100636,272786309,1075025698,545572369,2105887268,4174560061,296679730,1841768865,1260232239,4091327024,3960309330,3497509347,1814803222,2578018489,4195456072,575138148,3299409036,446754879,3629546796,4011996048,3347532110,3252238545,4270639778,915985419,3483825537,681933534,651868046,2755636671,3828103837,223377554,2607439820,1649704518,3270937875,3901806776,1580087799,4118987695,3198115200,2087309459,2842678573,3016697106,1003007129,2802849917,1860738147,2077965243,164439672,4100872472,32283319,2827177882,1709610350,2125135846,136428751,3874428392,3652904859,3460984630,3572145929,3593056380,2939266226,824852259,818324884,3224740454,930369212,2801566410,2967507152,355706840,1257309336,4148292826,243256656,790073846,2373340630,1296297904,1422699085,3756299780,3818836405,457992840,3099667487,2135319889,77422314,1560382517,1945798516,788204353,1521706781,1385356242,870912086,325965383,2358957921,2050466060,2388260884,2313884476,4006521127,901210569,3990953189,1014646705,1503449823,1062597235,2031621326,3212035895,3931371469,1533017514,350174575,2256028891,2177544179,1052338372,741876788,1606591296,1914052035,213705253,2334669897,1107234197,1899603969,3725069491,2631447780,2422494913,1635502980,1893020342,1950903388,1120974935],y=[2807058932,1699970625,2764249623,1586903591,1808481195,1173430173,1487645946,59984867,4199882800,1844882806,1989249228,1277555970,3623636965,3419915562,1149249077,2744104290,1514790577,459744698,244860394,3235995134,1963115311,4027744588,2544078150,4190530515,1608975247,2627016082,2062270317,1507497298,2200818878,567498868,1764313568,3359936201,2305455554,2037970062,1047239e3,1910319033,1337376481,2904027272,2892417312,984907214,1243112415,830661914,861968209,2135253587,2011214180,2927934315,2686254721,731183368,1750626376,4246310725,1820824798,4172763771,3542330227,48394827,2404901663,2871682645,671593195,3254988725,2073724613,145085239,2280796200,2779915199,1790575107,2187128086,472615631,3029510009,4075877127,3802222185,4107101658,3201631749,1646252340,4270507174,1402811438,1436590835,3778151818,3950355702,3963161475,4020912224,2667994737,273792366,2331590177,104699613,95345982,3175501286,2377486676,1560637892,3564045318,369057872,4213447064,3919042237,1137477952,2658625497,1119727848,2340947849,1530455833,4007360968,172466556,266959938,516552836,0,2256734592,3980931627,1890328081,1917742170,4294704398,945164165,3575528878,958871085,3647212047,2787207260,1423022939,775562294,1739656202,3876557655,2530391278,2443058075,3310321856,547512796,1265195639,437656594,3121275539,719700128,3762502690,387781147,218828297,3350065803,2830708150,2848461854,428169201,122466165,3720081049,1627235199,648017665,4122762354,1002783846,2117360635,695634755,3336358691,4234721005,4049844452,3704280881,2232435299,574624663,287343814,612205898,1039717051,840019705,2708326185,793451934,821288114,1391201670,3822090177,376187827,3113855344,1224348052,1679968233,2361698556,1058709744,752375421,2431590963,1321699145,3519142200,2734591178,188127444,2177869557,3727205754,2384911031,3215212461,2648976442,2450346104,3432737375,1180849278,331544205,3102249176,4150144569,2952102595,2159976285,2474404304,766078933,313773861,2570832044,2108100632,1668212892,3145456443,2013908262,418672217,3070356634,2594734927,1852171925,3867060991,3473416636,3907448597,2614737639,919489135,164948639,2094410160,2997825956,590424639,2486224549,1723872674,3157750862,3399941250,3501252752,3625268135,2555048196,3673637356,1343127501,4130281361,3599595085,2957853679,1297403050,81781910,3051593425,2283490410,532201772,1367295589,3926170974,895287692,1953757831,1093597963,492483431,3528626907,1446242576,1192455638,1636604631,209336225,344873464,1015671571,669961897,3375740769,3857572124,2973530695,3747192018,1933530610,3464042516,935293895,3454686199,2858115069,1863638845,3683022916,4085369519,3292445032,875313188,1080017571,3279033885,621591778,1233856572,2504130317,24197544,3017672716,3835484340,3247465558,2220981195,3060847922,1551124588,1463996600],M=[4104605777,1097159550,396673818,660510266,2875968315,2638606623,4200115116,3808662347,821712160,1986918061,3430322568,38544885,3856137295,718002117,893681702,1654886325,2975484382,3122358053,3926825029,4274053469,796197571,1290801793,1184342925,3556361835,2405426947,2459735317,1836772287,1381620373,3196267988,1948373848,3764988233,3385345166,3263785589,2390325492,1480485785,3111247143,3780097726,2293045232,548169417,3459953789,3746175075,439452389,1362321559,1400849762,1685577905,1806599355,2174754046,137073913,1214797936,1174215055,3731654548,2079897426,1943217067,1258480242,529487843,1437280870,3945269170,3049390895,3313212038,923313619,679998e3,3215307299,57326082,377642221,3474729866,2041877159,133361907,1776460110,3673476453,96392454,878845905,2801699524,777231668,4082475170,2330014213,4142626212,2213296395,1626319424,1906247262,1846563261,562755902,3708173718,1040559837,3871163981,1418573201,3294430577,114585348,1343618912,2566595609,3186202582,1078185097,3651041127,3896688048,2307622919,425408743,3371096953,2081048481,1108339068,2216610296,0,2156299017,736970802,292596766,1517440620,251657213,2235061775,2933202493,758720310,265905162,1554391400,1532285339,908999204,174567692,1474760595,4002861748,2610011675,3234156416,3693126241,2001430874,303699484,2478443234,2687165888,585122620,454499602,151849742,2345119218,3064510765,514443284,4044981591,1963412655,2581445614,2137062819,19308535,1928707164,1715193156,4219352155,1126790795,600235211,3992742070,3841024952,836553431,1669664834,2535604243,3323011204,1243905413,3141400786,4180808110,698445255,2653899549,2989552604,2253581325,3252932727,3004591147,1891211689,2487810577,3915653703,4237083816,4030667424,2100090966,865136418,1229899655,953270745,3399679628,3557504664,4118925222,2061379749,3079546586,2915017791,983426092,2022837584,1607244650,2118541908,2366882550,3635996816,972512814,3283088770,1568718495,3499326569,3576539503,621982671,2895723464,410887952,2623762152,1002142683,645401037,1494807662,2595684844,1335535747,2507040230,4293295786,3167684641,367585007,3885750714,1865862730,2668221674,2960971305,2763173681,1059270954,2777952454,2724642869,1320957812,2194319100,2429595872,2815956275,77089521,3973773121,3444575871,2448830231,1305906550,4021308739,2857194700,2516901860,3518358430,1787304780,740276417,1699839814,1592394909,2352307457,2272556026,188821243,1729977011,3687994002,274084841,3594982253,3613494426,2701949495,4162096729,322734571,2837966542,1640576439,484830689,1202797690,3537852828,4067639125,349075736,3342319475,4157467219,4255800159,1030690015,1155237496,2951971274,1757691577,607398968,2738905026,499347990,3794078908,1011452712,227885567,2818666809,213114376,3034881240,1455525988,3414450555,850817237,1817998408,3092726480],w=[0,235474187,470948374,303765277,941896748,908933415,607530554,708780849,1883793496,2118214995,1817866830,1649639237,1215061108,1181045119,1417561698,1517767529,3767586992,4003061179,4236429990,4069246893,3635733660,3602770327,3299278474,3400528769,2430122216,2664543715,2362090238,2193862645,2835123396,2801107407,3035535058,3135740889,3678124923,3576870512,3341394285,3374361702,3810496343,3977675356,4279080257,4043610186,2876494627,2776292904,3076639029,3110650942,2472011535,2640243204,2403728665,2169303058,1001089995,899835584,666464733,699432150,59727847,226906860,530400753,294930682,1273168787,1172967064,1475418501,1509430414,1942435775,2110667444,1876241833,1641816226,2910219766,2743034109,2976151520,3211623147,2505202138,2606453969,2302690252,2269728455,3711829422,3543599269,3240894392,3475313331,3843699074,3943906441,4178062228,4144047775,1306967366,1139781709,1374988112,1610459739,1975683434,2076935265,1775276924,1742315127,1034867998,866637845,566021896,800440835,92987698,193195065,429456164,395441711,1984812685,2017778566,1784663195,1683407248,1315562145,1080094634,1383856311,1551037884,101039829,135050206,437757123,337553864,1042385657,807962610,573804783,742039012,2531067453,2564033334,2328828971,2227573024,2935566865,2700099354,3001755655,3168937228,3868552805,3902563182,4203181171,4102977912,3736164937,3501741890,3265478751,3433712980,1106041591,1340463100,1576976609,1408749034,2043211483,2009195472,1708848333,1809054150,832877231,1068351396,766945465,599762354,159417987,126454664,361929877,463180190,2709260871,2943682380,3178106961,3009879386,2572697195,2538681184,2236228733,2336434550,3509871135,3745345300,3441850377,3274667266,3910161971,3877198648,4110568485,4211818798,2597806476,2497604743,2261089178,2295101073,2733856160,2902087851,3202437046,2968011453,3936291284,3835036895,4136440770,4169408201,3535486456,3702665459,3467192302,3231722213,2051518780,1951317047,1716890410,1750902305,1113818384,1282050075,1584504582,1350078989,168810852,67556463,371049330,404016761,841739592,1008918595,775550814,540080725,3969562369,3801332234,4035489047,4269907996,3569255213,3669462566,3366754619,3332740144,2631065433,2463879762,2160117071,2395588676,2767645557,2868897406,3102011747,3069049960,202008497,33778362,270040487,504459436,875451293,975658646,675039627,641025152,2084704233,1917518562,1615861247,1851332852,1147550661,1248802510,1484005843,1451044056,933301370,967311729,733156972,632953703,260388950,25965917,328671808,496906059,1206477858,1239443753,1543208500,1441952575,2144161806,1908694277,1675577880,1842759443,3610369226,3644379585,3408119516,3307916247,4011190502,3776767469,4077384432,4245618683,2809771154,2842737049,3144396420,3043140495,2673705150,2438237621,2203032232,2370213795],b=[0,185469197,370938394,487725847,741876788,657861945,975451694,824852259,1483753576,1400783205,1315723890,1164071807,1950903388,2135319889,1649704518,1767536459,2967507152,3152976349,2801566410,2918353863,2631447780,2547432937,2328143614,2177544179,3901806776,3818836405,4270639778,4118987695,3299409036,3483825537,3535072918,3652904859,2077965243,1893020342,1841768865,1724457132,1474502543,1559041666,1107234197,1257309336,598438867,681933534,901210569,1052338372,261314535,77422314,428819965,310463728,3409685355,3224740454,3710368113,3593056380,3875770207,3960309330,4045380933,4195456072,2471224067,2554718734,2237133081,2388260884,3212035895,3028143674,2842678573,2724322336,4138563181,4255350624,3769721975,3955191162,3667219033,3516619604,3431546947,3347532110,2933734917,2782082824,3099667487,3016697106,2196052529,2313884476,2499348523,2683765030,1179510461,1296297904,1347548327,1533017514,1786102409,1635502980,2087309459,2003294622,507358933,355706840,136428751,53458370,839224033,957055980,605657339,790073846,2373340630,2256028891,2607439820,2422494913,2706270690,2856345839,3075636216,3160175349,3573941694,3725069491,3273267108,3356761769,4181598602,4063242375,4011996048,3828103837,1033297158,915985419,730517276,545572369,296679730,446754879,129166120,213705253,1709610350,1860738147,1945798516,2029293177,1239331162,1120974935,1606591296,1422699085,4148292826,4233094615,3781033664,3931371469,3682191598,3497509347,3446004468,3328955385,2939266226,2755636671,3106780840,2988687269,2198438022,2282195339,2501218972,2652609425,1201765386,1286567175,1371368976,1521706781,1805211710,1620529459,2105887268,1988838185,533804130,350174575,164439672,46346101,870912086,954669403,636813900,788204353,2358957921,2274680428,2592523643,2441661558,2695033685,2880240216,3065962831,3182487618,3572145929,3756299780,3270937875,3388507166,4174560061,4091327024,4006521127,3854606378,1014646705,930369212,711349675,560487590,272786309,457992840,106852767,223377554,1678381017,1862534868,1914052035,2031621326,1211247597,1128014560,1580087799,1428173050,32283319,182621114,401639597,486441376,768917123,651868046,1003007129,818324884,1503449823,1385356242,1333838021,1150208456,1973745387,2125135846,1673061617,1756818940,2970356327,3120694122,2802849917,2887651696,2637442643,2520393566,2334669897,2149987652,3917234703,3799141122,4284502037,4100872472,3309594171,3460984630,3545789473,3629546796,2050466060,1899603969,1814803222,1730525723,1443857720,1560382517,1075025698,1260232239,575138148,692707433,878443390,1062597235,243256656,91341917,409198410,325965383,3403100636,3252238545,3704300486,3620022987,3874428392,3990953189,4042459122,4227665663,2460449204,2578018489,2226875310,2411029155,3198115200,3046200461,2827177882,2743944855],S=[0,218828297,437656594,387781147,875313188,958871085,775562294,590424639,1750626376,1699970625,1917742170,2135253587,1551124588,1367295589,1180849278,1265195639,3501252752,3720081049,3399941250,3350065803,3835484340,3919042237,4270507174,4085369519,3102249176,3051593425,2734591178,2952102595,2361698556,2177869557,2530391278,2614737639,3145456443,3060847922,2708326185,2892417312,2404901663,2187128086,2504130317,2555048196,3542330227,3727205754,3375740769,3292445032,3876557655,3926170974,4246310725,4027744588,1808481195,1723872674,1910319033,2094410160,1608975247,1391201670,1173430173,1224348052,59984867,244860394,428169201,344873464,935293895,984907214,766078933,547512796,1844882806,1627235199,2011214180,2062270317,1507497298,1423022939,1137477952,1321699145,95345982,145085239,532201772,313773861,830661914,1015671571,731183368,648017665,3175501286,2957853679,2807058932,2858115069,2305455554,2220981195,2474404304,2658625497,3575528878,3625268135,3473416636,3254988725,3778151818,3963161475,4213447064,4130281361,3599595085,3683022916,3432737375,3247465558,3802222185,4020912224,4172763771,4122762354,3201631749,3017672716,2764249623,2848461854,2331590177,2280796200,2431590963,2648976442,104699613,188127444,472615631,287343814,840019705,1058709744,671593195,621591778,1852171925,1668212892,1953757831,2037970062,1514790577,1463996600,1080017571,1297403050,3673637356,3623636965,3235995134,3454686199,4007360968,3822090177,4107101658,4190530515,2997825956,3215212461,2830708150,2779915199,2256734592,2340947849,2627016082,2443058075,172466556,122466165,273792366,492483431,1047239e3,861968209,612205898,695634755,1646252340,1863638845,2013908262,1963115311,1446242576,1530455833,1277555970,1093597963,1636604631,1820824798,2073724613,1989249228,1436590835,1487645946,1337376481,1119727848,164948639,81781910,331544205,516552836,1039717051,821288114,669961897,719700128,2973530695,3157750862,2871682645,2787207260,2232435299,2283490410,2667994737,2450346104,3647212047,3564045318,3279033885,3464042516,3980931627,3762502690,4150144569,4199882800,3070356634,3121275539,2904027272,2686254721,2200818878,2384911031,2570832044,2486224549,3747192018,3528626907,3310321856,3359936201,3950355702,3867060991,4049844452,4234721005,1739656202,1790575107,2108100632,1890328081,1402811438,1586903591,1233856572,1149249077,266959938,48394827,369057872,418672217,1002783846,919489135,567498868,752375421,209336225,24197544,376187827,459744698,945164165,895287692,574624663,793451934,1679968233,1764313568,2117360635,1933530610,1343127501,1560637892,1243112415,1192455638,3704280881,3519142200,3336358691,3419915562,3907448597,3857572124,4075877127,4294704398,3029510009,3113855344,2927934315,2744104290,2159976285,2377486676,2594734927,2544078150],E=[0,151849742,303699484,454499602,607398968,758720310,908999204,1059270954,1214797936,1097159550,1517440620,1400849762,1817998408,1699839814,2118541908,2001430874,2429595872,2581445614,2194319100,2345119218,3034881240,3186202582,2801699524,2951971274,3635996816,3518358430,3399679628,3283088770,4237083816,4118925222,4002861748,3885750714,1002142683,850817237,698445255,548169417,529487843,377642221,227885567,77089521,1943217067,2061379749,1640576439,1757691577,1474760595,1592394909,1174215055,1290801793,2875968315,2724642869,3111247143,2960971305,2405426947,2253581325,2638606623,2487810577,3808662347,3926825029,4044981591,4162096729,3342319475,3459953789,3576539503,3693126241,1986918061,2137062819,1685577905,1836772287,1381620373,1532285339,1078185097,1229899655,1040559837,923313619,740276417,621982671,439452389,322734571,137073913,19308535,3871163981,4021308739,4104605777,4255800159,3263785589,3414450555,3499326569,3651041127,2933202493,2815956275,3167684641,3049390895,2330014213,2213296395,2566595609,2448830231,1305906550,1155237496,1607244650,1455525988,1776460110,1626319424,2079897426,1928707164,96392454,213114376,396673818,514443284,562755902,679998e3,865136418,983426092,3708173718,3557504664,3474729866,3323011204,4180808110,4030667424,3945269170,3794078908,2507040230,2623762152,2272556026,2390325492,2975484382,3092726480,2738905026,2857194700,3973773121,3856137295,4274053469,4157467219,3371096953,3252932727,3673476453,3556361835,2763173681,2915017791,3064510765,3215307299,2156299017,2307622919,2459735317,2610011675,2081048481,1963412655,1846563261,1729977011,1480485785,1362321559,1243905413,1126790795,878845905,1030690015,645401037,796197571,274084841,425408743,38544885,188821243,3613494426,3731654548,3313212038,3430322568,4082475170,4200115116,3780097726,3896688048,2668221674,2516901860,2366882550,2216610296,3141400786,2989552604,2837966542,2687165888,1202797690,1320957812,1437280870,1554391400,1669664834,1787304780,1906247262,2022837584,265905162,114585348,499347990,349075736,736970802,585122620,972512814,821712160,2595684844,2478443234,2293045232,2174754046,3196267988,3079546586,2895723464,2777952454,3537852828,3687994002,3234156416,3385345166,4142626212,4293295786,3841024952,3992742070,174567692,57326082,410887952,292596766,777231668,660510266,1011452712,893681702,1108339068,1258480242,1343618912,1494807662,1715193156,1865862730,1948373848,2100090966,2701949495,2818666809,3004591147,3122358053,2235061775,2352307457,2535604243,2653899549,3915653703,3764988233,4219352155,4067639125,3444575871,3294430577,3746175075,3594982253,836553431,953270745,600235211,718002117,367585007,484830689,133361907,251657213,2041877159,1891211689,1806599355,1654886325,1568718495,1418573201,1335535747,1184342925];function C(R){for(var k=[],j=0;j<R.length;j+=4)k.push(R[j]<<24|R[j+1]<<16|R[j+2]<<8|R[j+3]);return k}var I=function(R){if(!(this instanceof I))throw Error("AES must be instanitated with `new`");Object.defineProperty(this,"key",{value:s(R,!0)}),this._prepare()};I.prototype._prepare=function(){var R=d[this.key.length];if(R==null)throw new Error("invalid key size (must be 16, 24 or 32 bytes)");this._Ke=[],this._Kd=[];for(var k=0;k<=R;k++)this._Ke.push([0,0,0,0]),this._Kd.push([0,0,0,0]);for(var j=(R+1)*4,K=this.key.length/4,B=C(this.key),oe,k=0;k<K;k++)oe=k>>2,this._Ke[oe][k%4]=B[k],this._Kd[R-oe][k%4]=B[k];for(var Re=0,Ae=K,pe;Ae<j;){if(pe=B[K-1],B[0]^=f[pe>>16&255]<<24^f[pe>>8&255]<<16^f[pe&255]<<8^f[pe>>24&255]^u[Re]<<24,Re+=1,K!=8)for(var k=1;k<K;k++)B[k]^=B[k-1];else{for(var k=1;k<K/2;k++)B[k]^=B[k-1];pe=B[K/2-1],B[K/2]^=f[pe&255]^f[pe>>8&255]<<8^f[pe>>16&255]<<16^f[pe>>24&255]<<24;for(var k=K/2+1;k<K;k++)B[k]^=B[k-1]}for(var k=0,_e,Ie;k<K&&Ae<j;)_e=Ae>>2,Ie=Ae%4,this._Ke[_e][Ie]=B[k],this._Kd[R-_e][Ie]=B[k++],Ae++}for(var _e=1;_e<R;_e++)for(var Ie=0;Ie<4;Ie++)pe=this._Kd[_e][Ie],this._Kd[_e][Ie]=w[pe>>24&255]^b[pe>>16&255]^S[pe>>8&255]^E[pe&255]},I.prototype.encrypt=function(R){if(R.length!=16)throw new Error("invalid plaintext size (must be 16 bytes)");for(var k=this._Ke.length-1,j=[0,0,0,0],K=C(R),B=0;B<4;B++)K[B]^=this._Ke[0][B];for(var oe=1;oe<k;oe++){for(var B=0;B<4;B++)j[B]=m[K[B]>>24&255]^x[K[(B+1)%4]>>16&255]^p[K[(B+2)%4]>>8&255]^v[K[(B+3)%4]&255]^this._Ke[oe][B];K=j.slice()}for(var Re=a(16),Ae,B=0;B<4;B++)Ae=this._Ke[k][B],Re[4*B]=(f[K[B]>>24&255]^Ae>>24)&255,Re[4*B+1]=(f[K[(B+1)%4]>>16&255]^Ae>>16)&255,Re[4*B+2]=(f[K[(B+2)%4]>>8&255]^Ae>>8)&255,Re[4*B+3]=(f[K[(B+3)%4]&255]^Ae)&255;return Re},I.prototype.decrypt=function(R){if(R.length!=16)throw new Error("invalid ciphertext size (must be 16 bytes)");for(var k=this._Kd.length-1,j=[0,0,0,0],K=C(R),B=0;B<4;B++)K[B]^=this._Kd[0][B];for(var oe=1;oe<k;oe++){for(var B=0;B<4;B++)j[B]=g[K[B]>>24&255]^_[K[(B+3)%4]>>16&255]^y[K[(B+2)%4]>>8&255]^M[K[(B+1)%4]&255]^this._Kd[oe][B];K=j.slice()}for(var Re=a(16),Ae,B=0;B<4;B++)Ae=this._Kd[k][B],Re[4*B]=(h[K[B]>>24&255]^Ae>>24)&255,Re[4*B+1]=(h[K[(B+3)%4]>>16&255]^Ae>>16)&255,Re[4*B+2]=(h[K[(B+2)%4]>>8&255]^Ae>>8)&255,Re[4*B+3]=(h[K[(B+1)%4]&255]^Ae)&255;return Re};var W=function(R){if(!(this instanceof W))throw Error("AES must be instanitated with `new`");this.description="Electronic Code Block",this.name="ecb",this._aes=new I(R)};W.prototype.encrypt=function(R){if(R=s(R),R.length%16!==0)throw new Error("invalid plaintext size (must be multiple of 16 bytes)");for(var k=a(R.length),j=a(16),K=0;K<R.length;K+=16)o(R,j,0,K,K+16),j=this._aes.encrypt(j),o(j,k,K);return k},W.prototype.decrypt=function(R){if(R=s(R),R.length%16!==0)throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");for(var k=a(R.length),j=a(16),K=0;K<R.length;K+=16)o(R,j,0,K,K+16),j=this._aes.decrypt(j),o(j,k,K);return k};var H=function(R,k){if(!(this instanceof H))throw Error("AES must be instanitated with `new`");if(this.description="Cipher Block Chaining",this.name="cbc",!k)k=a(16);else if(k.length!=16)throw new Error("invalid initialation vector size (must be 16 bytes)");this._lastCipherblock=s(k,!0),this._aes=new I(R)};H.prototype.encrypt=function(R){if(R=s(R),R.length%16!==0)throw new Error("invalid plaintext size (must be multiple of 16 bytes)");for(var k=a(R.length),j=a(16),K=0;K<R.length;K+=16){o(R,j,0,K,K+16);for(var B=0;B<16;B++)j[B]^=this._lastCipherblock[B];this._lastCipherblock=this._aes.encrypt(j),o(this._lastCipherblock,k,K)}return k},H.prototype.decrypt=function(R){if(R=s(R),R.length%16!==0)throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");for(var k=a(R.length),j=a(16),K=0;K<R.length;K+=16){o(R,j,0,K,K+16),j=this._aes.decrypt(j);for(var B=0;B<16;B++)k[K+B]=j[B]^this._lastCipherblock[B];o(R,this._lastCipherblock,0,K,K+16)}return k};var A=function(R,k,j){if(!(this instanceof A))throw Error("AES must be instanitated with `new`");if(this.description="Cipher Feedback",this.name="cfb",!k)k=a(16);else if(k.length!=16)throw new Error("invalid initialation vector size (must be 16 size)");j||(j=1),this.segmentSize=j,this._shiftRegister=s(k,!0),this._aes=new I(R)};A.prototype.encrypt=function(R){if(R.length%this.segmentSize!=0)throw new Error("invalid plaintext size (must be segmentSize bytes)");for(var k=s(R,!0),j,K=0;K<k.length;K+=this.segmentSize){j=this._aes.encrypt(this._shiftRegister);for(var B=0;B<this.segmentSize;B++)k[K+B]^=j[B];o(this._shiftRegister,this._shiftRegister,0,this.segmentSize),o(k,this._shiftRegister,16-this.segmentSize,K,K+this.segmentSize)}return k},A.prototype.decrypt=function(R){if(R.length%this.segmentSize!=0)throw new Error("invalid ciphertext size (must be segmentSize bytes)");for(var k=s(R,!0),j,K=0;K<k.length;K+=this.segmentSize){j=this._aes.encrypt(this._shiftRegister);for(var B=0;B<this.segmentSize;B++)k[K+B]^=j[B];o(this._shiftRegister,this._shiftRegister,0,this.segmentSize),o(R,this._shiftRegister,16-this.segmentSize,K,K+this.segmentSize)}return k};var q=function(R,k){if(!(this instanceof q))throw Error("AES must be instanitated with `new`");if(this.description="Output Feedback",this.name="ofb",!k)k=a(16);else if(k.length!=16)throw new Error("invalid initialation vector size (must be 16 bytes)");this._lastPrecipher=s(k,!0),this._lastPrecipherIndex=16,this._aes=new I(R)};q.prototype.encrypt=function(R){for(var k=s(R,!0),j=0;j<k.length;j++)this._lastPrecipherIndex===16&&(this._lastPrecipher=this._aes.encrypt(this._lastPrecipher),this._lastPrecipherIndex=0),k[j]^=this._lastPrecipher[this._lastPrecipherIndex++];return k},q.prototype.decrypt=q.prototype.encrypt;var N=function(R){if(!(this instanceof N))throw Error("Counter must be instanitated with `new`");R!==0&&!R&&(R=1),typeof R=="number"?(this._counter=a(16),this.setValue(R)):this.setBytes(R)};N.prototype.setValue=function(R){if(typeof R!="number"||parseInt(R)!=R)throw new Error("invalid counter value (must be an integer)");if(R>Number.MAX_SAFE_INTEGER)throw new Error("integer value out of safe range");for(var k=15;k>=0;--k)this._counter[k]=R%256,R=parseInt(R/256)},N.prototype.setBytes=function(R){if(R=s(R,!0),R.length!=16)throw new Error("invalid counter bytes size (must be 16 bytes)");this._counter=R},N.prototype.increment=function(){for(var R=15;R>=0;R--)if(this._counter[R]===255)this._counter[R]=0;else{this._counter[R]++;break}};var X=function(R,k){if(!(this instanceof X))throw Error("AES must be instanitated with `new`");this.description="Counter",this.name="ctr",k instanceof N||(k=new N(k)),this._counter=k,this._remainingCounter=null,this._remainingCounterIndex=16,this._aes=new I(R)};X.prototype.encrypt=function(R){for(var k=s(R,!0),j=0;j<k.length;j++)this._remainingCounterIndex===16&&(this._remainingCounter=this._aes.encrypt(this._counter._counter),this._remainingCounterIndex=0,this._counter.increment()),k[j]^=this._remainingCounter[this._remainingCounterIndex++];return k},X.prototype.decrypt=X.prototype.encrypt;function Z(R){R=s(R,!0);var k=16-R.length%16,j=a(R.length+k);o(R,j);for(var K=R.length;K<j.length;K++)j[K]=k;return j}function $(R){if(R=s(R,!0),R.length<16)throw new Error("PKCS#7 invalid length");var k=R[R.length-1];if(k>16)throw new Error("PKCS#7 padding byte out of range");for(var j=R.length-k,K=0;K<k;K++)if(R[j+K]!==k)throw new Error("PKCS#7 invalid padding byte");var B=a(j);return o(R,B,0,0,j),B}var J={AES:I,Counter:N,ModeOfOperation:{ecb:W,cbc:H,cfb:A,ofb:q,ctr:X},utils:{hex:c,utf8:l},padding:{pkcs7:{pad:Z,strip:$}},_arrayTest:{coerceArray:s,createArray:a,copyArray:o}};n.exports=J})()})(Sy);class jI{key;ivKey;constructor(e){const t=new Uint8Array([1,2,66,40,49,145,22,7,32,5,24,84,66,17,18,83]),i=new Uint8Array([17,3,50,40,33,1,118,39,32,149,120,20,50,18,2,67]);this.key=new Uint8Array(16),this.ivKey=new Uint8Array(16);const r=e.split(":");if(r.length!==6)throw new Error("Expected device MAC to have 6 elements");for(let s=0;s<6;s++){const a=parseInt(r[5-s],16);this.key[s]=(t[s]+a)%255,this.ivKey[s]=(i[s]+a)%255}this.key.set(t.slice(6),6),this.ivKey.set(i.slice(6),6)}get cryptor(){return new Sy.exports.ModeOfOperation.cbc(this.key,this.ivKey)}decrypt(e){const i=new Uint8Array(e.buffer).slice(0),r=this.cryptor.decrypt(i.slice(i.length-16));i.set(r,i.length-16);const s=this.cryptor.decrypt(i.slice(0,16));return i.set(s,0),new DataView(i.buffer)}encrypt(e){const i=new Uint8Array(e.buffer).slice(0),r=this.cryptor.encrypt(i.slice(0,16));i.set(r,0);const s=this.cryptor.encrypt(i.slice(i.length-16));return i.set(s,i.length-16),new DataView(i.buffer)}}function XI(n){n=8-n;let e=0;for(let t=0;t<n;t++)e+=Math.pow(2,t);return e}function li(n,e,t,i,r){let s=0;const a=[];for(;n<r.byteLength;){let o=0,l=0;for(;o<t&&n<r.byteLength;){let c=8-e,d=Math.min(o+c,t),u=d-o,f=c-u;if(l+=(r.getUint8(n)&XI(e))>>f<<t-d,o+=u,e+=u,f==0&&(n++,e=0),o==t){a.push(l),s++;break}}if(i>0&&s>=i)break}return a}const d1=["U","U'","R","R'","F","F'","D","D'","L","L'","B","B'"];function YI(n){return n.getUint8(0)>>4}function xd(n){return(n.getUint8(0)&15)<<4|n.getUint8(1)>>4}function ZI(n,e,t,i){let r=0;const s=n.length;if(s!==11)throw new Error("Expected exactly 11 edges.");const a={};for(let p=0;p<s;p++){const v=e[p],g=n[p];a[g]=!0,r+=v}const o=[0,1,2,3,4,5,6,7,8,9,10,11].filter(p=>!(p in a))[0],l=n.slice();l.push(o);const c=e.slice();c.push((2-r%2)%2);let d=0;const u=t.length;if(u!==7)throw new Error("Expected exactly 7 corners.");const f={};for(let p=0;p<u;p++){const v=i[p],g=t[p];f[g]=!0,d+=v}const h=[0,1,2,3,4,5,6,7].filter(p=>!(p in f))[0],m=t.slice();m.push(h);const x=i.slice();return x.push((3-d%3)%3),new Yc(m,x,l,c)}class gr{constructor(e,t){this.messageHandler=t,this.codec=new jI(e)}codec;consumeEvent(e){this.consumeDecryptedEvent(this.codec.decrypt(e))}consumeDecryptedEvent(e){const t=YI(e);switch(t){case 1:{let[i,r,s,a]=li(0,4,16,4,e),o=li(8,4,4,3,e),[l,c,d,u]=[e.getUint16(10),e.getUint16(12),e.getUint16(14),e.getUint16(16)],f=li(18,0,4,3,e);o=o.map(h=>8&h?-(7&h):h),f=f.map(h=>8&h?-(7&h):h),[i,r,s,a]=[i,r,s,a].map(h=>32768&h?-(32767&h):h),[l,c,d,u]=[l,c,d,u].map(h=>32768&h?-(32767&h):h),this.messageHandler.gyroUpdate(i,r,s,a,l,c,d,u,o,f);break}case 2:{const i=xd(e),r=li(1,4,5,7,e),s=li(5,7,16,7,e),a=r.map(l=>d1[l]),o=[];for(let l=0;l<7;l++)o.push(new Pc(s[l],a[l]));this.messageHandler.moveResponse(i,o);break}case 4:{const i=xd(e),r=li(1,4,3,7,e),s=li(4,1,2,7,e),a=li(5,7,4,11,e),o=li(11,3,1,11,e),l=ZI(a,o,r,s);this.messageHandler.cubeStateResponse(i,l);break}case 5:{const i=e.getUint8(0)&15,r=[e.getUint8(1),e.getUint8(2)],s=[e.getUint8(3),e.getUint8(4)],a=[e.getUint8(5),e.getUint8(6),e.getUint8(7),e.getUint8(8),e.getUint8(9),e.getUint8(10),e.getUint8(11),e.getUint8(12)],o=e.getUint8(13)>>7===1,l=(e.getUint8(13)>>6&1)===1,c=s.join("."),d=r.join("."),u=String.fromCharCode(...a);this.messageHandler.infoResponse(i,c,d,u,o,l);break}case 6:{const i=xd(e),r=e.getUint8(1)&15,s=[];for(let a=1;a<=r;a++)s.push(e.getUint16(a<<1));this.messageHandler.moveIntervalsResponse(i,s);break}case 7:{const i=xd(e),r=(e.getUint8(1)&15)<<1|e.getUint8(2)>>7,a=li(2,1,5,r,e).map(o=>d1[o]);this.messageHandler.movesResponse(i,a);break}case 9:{const i=e.getUint8(0)&15,r=e.getUint8(1);this.messageHandler.powerResponse(i,r);break}case 13:{this.messageHandler.goneToSleep();break}default:{console.log({messageType:t,message:rD(e)});break}}}static CUBE_STATE_REQUEST_MSG=new Uint8Array([4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);cubeStateRequest(){return this.codec.encrypt(new DataView(gr.CUBE_STATE_REQUEST_MSG.buffer))}static INFO_REQUEST_MSG=new Uint8Array([5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);infoRequest(){return this.codec.encrypt(new DataView(gr.INFO_REQUEST_MSG.buffer))}static MOVES_INTERVAL_REQUEST_MSG=new Uint8Array([6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);movesIntervalRequest(e,t){const i=new DataView(gr.MOVES_INTERVAL_REQUEST_MSG.buffer);return i.setUint8(1,e),i.setUint8(2,t),this.codec.encrypt(i)}static MOVES_REQUEST_MSG=new Uint8Array([7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);movesRequest(e,t){const i=new DataView(gr.MOVES_REQUEST_MSG.buffer);return i.setUint8(1,e),i.setUint8(2,t),this.codec.encrypt(i)}static POWER_REQUEST_MSG=new Uint8Array([9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);powerRequest(){return this.codec.encrypt(new DataView(gr.POWER_REQUEST_MSG.buffer))}static RESET_REQUEST_MSG=new Uint8Array([10,5,57,119,0,0,1,35,69,103,137,171,0,0,0,0,0,0,0,0]);resetRequest(){return this.codec.encrypt(new DataView(gr.RESET_REQUEST_MSG.buffer))}}class JI{constructor(e,t,i,r,s,a){this.reboot=e,this.softwareVersion=t,this.hardwareVersion=i,this.deviceName=r,this.gyroEnabled=s,this.gyroCorrect=a}}class KI{constructor(e,t){this.sequenceNumber=e,this.lastTurns=t}}class QI{constructor(e,t,i,r,s,a,o,l,c,d){this.ox=e,this.oy=t,this.oz=i,this.ow=r,this.nx=s,this.ny=a,this.nz=o,this.nw=l,this.odirs=c,this.ndirs=d}}class eD{constructor(e,t){this.start=e,this.timestamps=t}}class tD{constructor(e,t){this.start=e,this.moves=t}}class nD{constructor(e,t){this.sequenceNumber=e,this.cubeState=t}}class iD{constructor(e,t){this.chargeState=e,this.power=t}}function rD(n){const e=n.byteLength;let t="";for(let i=0;i<e;++i)t+=n.getUint8(i).toString(16).padStart(2,"0");return t}const u1="6e400001-b5a3-f393-e0a9-e50e24dc4179",sD="28be4a4a-cd67-11e9-a32f-2a2ae2dbcce4",aD="28be4cb6-cd67-11e9-a32f-2a2ae2dbcce4";class oD extends Error{constructor(){super("Reconnection required")}}class Ey extends Error{constructor(){super("Bluetooth is not supported on this platform.")}}class cD{_isReceivingNotifications;operating=!1;requestQueue=[];_notifications;gatt;writeCharacteristic;readCharacteristic;readCharacteristicSubscription=null;constructor(){this._isReceivingNotifications=!1,this._notifications=new fn}async reconnect(){if(navigator.bluetooth===void 0)throw new Ey;const t=(await navigator.bluetooth.requestDevice({filters:[{namePrefix:"GANi3"}],optionalServices:[u1]})).gatt;if(t===void 0)throw new Error("GATT server not found.");this.gatt=t;const r=await(await t.connect()).getPrimaryService(u1);this.writeCharacteristic=await r.getCharacteristic(sD),this.readCharacteristic=await r.getCharacteristic(aD);const s=this.readCharacteristicSubscription;return s!==null&&s.unsubscribe(),this.readCharacteristicSubscription=Wi(this.readCharacteristic,"characteristicvaluechanged").pipe(wy(a=>a?.target?.value)).pipe(Us(a=>a.target.value)).subscribe(a=>this._notifications.next(a)),this._isReceivingNotifications&&await this.readCharacteristic.startNotifications(),this}async writeValue(e,t){if(this.gatt.connected)return await this.writeCharacteristic.writeValue(e);if(!t)throw new oD}async sendMessage(e,t=!1){const i=this.requestQueue;if(this.operating)return new Promise((r,s)=>i.push([e,r]));for(this.operating=!0,await this.writeValue(e,t);i.length>0;){const[r,s]=i[0];i.splice(0,1),await this.writeValue(r,t),s()}this.operating=!1}readValue(){return this.readCharacteristic.readValue()}get notifications(){return this._notifications}async startNotifications(){await this.readCharacteristic.startNotifications(),this._isReceivingNotifications=!0}async stopNotifications(){await this.readCharacteristic.stopNotifications(),this._isReceivingNotifications=!1}get isReceivingNotifications(){return this._isReceivingNotifications}}function lD(){return new cD().reconnect()}class dD{infoResponses;moveResponses;gyroUpdates;moveIntervalsResponses;movesResponses;cubeStateResponses;powerResponses;goneToSleepNotifications;constructor(){this.infoResponses=new fn,this.moveResponses=new fn,this.gyroUpdates=new fn,this.moveIntervalsResponses=new fn,this.movesResponses=new fn,this.cubeStateResponses=new fn,this.powerResponses=new fn,this.goneToSleepNotifications=new fn}infoResponse(e,t,i,r,s,a){this.infoResponses.next(new JI(e,t,i,r,s,a))}moveResponse(e,t){this.moveResponses.next(new KI(e,t))}gyroUpdate(e,t,i,r,s,a,o,l,c,d){this.gyroUpdates.next(new QI(e,t,i,r,s,a,o,l,c,d))}moveIntervalsResponse(e,t){this.moveIntervalsResponses.next(new eD(e,t))}movesResponse(e,t){this.movesResponses.next(new tD(e,t))}cubeStateResponse(e,t){this.cubeStateResponses.next(new nD(e,t))}powerResponse(e,t){this.powerResponses.next(new iD(e,t))}goneToSleep(){this.goneToSleepNotifications.next()}}class uD{device;codec;handler;constructor(e){this.handler=new dD,this.codec=new gr(e,this.handler),this.device=null}get infoResponses(){return this.handler.infoResponses}get moveResponses(){return this.handler.moveResponses}get gyroUpdates(){return this.handler.gyroUpdates}get moveIntervalsResponses(){return this.handler.moveIntervalsResponses}get movesResponses(){return this.handler.movesResponses}get cubeStateResponses(){return this.handler.cubeStateResponses}get powerResponses(){return this.handler.powerResponses}get goneToSleepNotifications(){return this.handler.goneToSleepNotifications}async connect(){this.device===null&&(this.device=await lD(),this.device.notifications.subscribe(e=>this.codec.consumeEvent(e)))}async startNotifications(){return this.device?.startNotifications()}async stopNotifications(){return this.device?.stopNotifications()}async reset(){await this.device?.sendMessage(this.codec.resetRequest())}async emitCubeStateRequest(){await this.device?.sendMessage(this.codec.cubeStateRequest())}async emitInfoRequest(){await this.device?.sendMessage(this.codec.infoRequest())}async emitPowerRequest(e=!0){await this.device?.sendMessage(this.codec.powerRequest(),e)}async emitMoveIntervalsRequest(e,t=9){await this.device?.sendMessage(this.codec.movesIntervalRequest(e,t))}async emitMovesRequest(e,t=28){await this.device?.sendMessage(this.codec.movesRequest(e,t))}async fullMoveHistory(e=0){const t=new Array(256),i=new Array(256);let r,s;const o=[new Promise((c,d)=>{let u=0,f=0;r=this.movesResponses.subscribe(h=>{const m=h.moves,x=m.length,p=e+h.start;u+=x;for(let v=0;v<x;v++)i[p+v&255]=m[v];u>=256&&f>=256&&c()}),s=this.moveIntervalsResponses.subscribe(h=>{const m=h.timestamps,x=m.length,p=e+h.start;f+=x;for(let v=0;v<x;v++)t[p+v&255]=m[v];u>=256&&f>=256&&c()})})];for(let c=0;c<10;c++){const d=28*c;o.push(this.emitMovesRequest(d,Math.min(28,256-d)))}for(let c=0;c<29;c++){const d=9*c;o.push(this.emitMoveIntervalsRequest(d,Math.min(9,256-d)))}await Promise.all(o),r.unsubscribe(),s.unsubscribe();const l=new Array(256);for(let c=0;c<256;c++)l[c]=new Pc(t[c],i[c]);return l}}const P0={SETTINGS_PAGE:"settings/",SOLVE_PAGE:"solve/",SCRAMBLE_PAGE:"scramble/",TRAIN_PAGE:"train/",HISTORY_PAGE:"history/",DETAILED_STATS_PAGE:"detailed/",RECONSTRUCTION_PAGE:"reconstruction/",ADMIN_PAGE:"admin/",HELP_PAGE:"help/"};function Ty(n,e){const t=e.hash,r=`${(t===void 0?[""]:t.split("/"))[0].replace("#","")}/`;for(const s of Object.keys(P0))if(P0[s]===r)return s;return null}class fD{constructor(e,t,i){this.when=e,this.moves=t,this.gyroUpdates=i}}const hD={basePath:"/",page:"TRAIN_PAGE",stage:null,previousMove:null,moveSequence:null,pbTime:1/0,recording:[],settings:{macAddress:"",showCube:!0,enableGyroscope:!0,recordGyroscope:!1,colors:xi.DEFAULT_COLORS,internalColor:xi.DEFAULT_INTERNAL_COLOR},sim:new Gs,history:[],pageNumber:0,buffer:null},I0=50;function Dp(n){return Math.floor(Math.max(0,n-1)/I0)+1}function pD(n,e){return n!==null&&e[0]===n[0]&&e.length!==n.length}function wi(n,e){n.stage=null,n.recording.length=0,n.previousMove=null,n.moveSequence=null;const t=e.page,i=e.params;if(t!==n.page){n.page=t,n.pageParams=i;const r=P0[t]+(i!==void 0?i.num.toString():"");e.popping||window.history.pushState(i,"",`${n.basePath}#${r}`)}switch(t){case"SOLVE_PAGE":return n.moveSequence=new no(n.sim.solution().split(" ")),[{type:"START_NOTIFICATIONS"},{type:"UPDATE_PROPS",props:{page:t,buttonAText:"Cancel",scrambleText:n.moveSequence.toString()}}];case"SCRAMBLE_PAGE":return n.moveSequence=new no(Fs.exports.scramble("3x3").split(" ")),[{type:"START_NOTIFICATIONS"},{type:"UPDATE_PROPS",props:{page:t,buttonAText:"Cancel",scrambleText:n.moveSequence.toString()}}];case"TRAIN_PAGE":return[{type:"START_NOTIFICATIONS"},{type:"UPDATE_PROPS",props:{page:t,buttonAText:"Start",scrambleText:"Perform a move and undo it to start, e.g. U U'."}}];case"RECONSTRUCTION_PAGE":{const r=n.pageParams?.num,s=Math.min(n.history.length,r===void 0?n.history.length:r),a=n.history[s-1],o=a?.moves??[],l=a?.gyroUpdates;return[{type:"STOP_NOTIFICATIONS"},{type:"INIT_REPLAY",moves:o,gyroEntries:l},{type:"UPDATE_PROPS",props:{page:t,buttonAText:"Start",scrambleText:Lu(o.map(c=>c.value.toString())).join(" ")}}]}case"HISTORY_PAGE":return[{type:"STOP_NOTIFICATIONS"},{type:"UPDATE_PROPS",props:{page:t,history:n.history,pageNumber:n.pageNumber+1,totalPages:Dp(n.history.length),buttonAText:"",scrambleText:""}}];case"DETAILED_STATS_PAGE":{const r=n.pageParams?.num,s=Math.min(n.history.length,r===void 0?n.history.length:r);return[{type:"STOP_NOTIFICATIONS"},{type:"UPDATE_PROPS",props:{page:t,selectedRecording:n.history[s-1],buttonAText:"Reconstruct",scrambleText:""}}]}default:return[{type:"STOP_NOTIFICATIONS"},{type:"UPDATE_PROPS",props:{page:t,buttonAText:"",scrambleText:""}}]}}function mD(n,e){switch(e.type){case"UPDATE_SETTINGS":return e.showCube!==void 0&&(n.settings.showCube=e.showCube),e.enableGyroscope!==void 0&&(n.settings.enableGyroscope=e.enableGyroscope),e.recordGyroscope!==void 0&&(n.settings.recordGyroscope=e.recordGyroscope),localStorage.setItem("settings",JSON.stringify(n.settings)),[{type:"UPDATE_PROPS",props:{showCube:e.showCube,enableGyroscope:e.enableGyroscope,recordGyroscope:e.recordGyroscope}}];case"GO_TO_PAGE":return wi(n,e);default:return[]}}function xD(n,e){switch(e.type){case"START":return n.moveSequence=new no(n.sim.solution().split(" ")),[{type:"UPDATE_PROPS",props:{buttonAText:"Cancel",scrambleText:n.moveSequence.toString()}}];case"TURN":return n.moveSequence!==null?(n.moveSequence.applyMove(e.move.value),[{type:"UPDATE_PROPS",props:{scrambleText:n.moveSequence.toString()}}]):[];case"CANCEL":return n.moveSequence=null,[{type:"UPDATE_PROPS",props:{buttonAText:"Start",scrambleText:""}}];case"GO_TO_PAGE":return wi(n,e);default:return[]}}function gD(n,e){switch(e.type){case"START":return n.moveSequence=new no(Fs.exports.scramble("3x3").split(" ")),[{type:"UPDATE_PROPS",props:{buttonAText:"Cancel",scrambleText:n.moveSequence.toString()}}];case"TURN":return n.moveSequence!==null?(n.moveSequence.applyMove(e.move.value),[{type:"UPDATE_PROPS",props:{scrambleText:n.moveSequence.toString()}}]):[];case"CANCEL":return n.moveSequence=null,[{type:"UPDATE_PROPS",props:{buttonAText:"Start",scrambleText:""}}];case"GO_TO_PAGE":return wi(n,e);default:return[]}}function vD(n,e){switch(e.type){case"START":return n.stage="SCRAMBLING",n.moveSequence=new no(Fs.exports.scramble("3x3").split(" ")),n.recording.length=0,[{type:"UPDATE_PROPS",props:{buttonAText:"Cancel",scrambleText:n.moveSequence.toString()}},{type:"WAKELOCK",enable:!0}];case"CANCEL":return n.stage=null,n.moveSequence=null,n.previousMove=null,n.recording.length=0,n.buffer=null,[{type:"STOP_TIMER"},{type:"WAKELOCK",enable:!1},{type:"UPDATE_PROPS",props:{buttonAText:"Start",scrambleText:"Perform a move and undo it to start, e.g. U U'."}}];case"TURN":if(n.stage===null&&pD(n.previousMove,e.move.value))return n.stage="SCRAMBLING",n.previousMove=null,n.moveSequence=new no(Fs.exports.scramble("3x3").split(" ")),[{type:"UPDATE_PROPS",props:{buttonAText:"Cancel",scrambleText:n.moveSequence.toString()}},{type:"WAKELOCK",enable:!0}];if(n.stage===null)n.previousMove=e.move.value;else{if(n.stage==="SCRAMBLING"&&n.moveSequence?.done)return n.stage="SOLVING",n.moveSequence=null,n.recording.length=0,n.recording.push(e.move),n.settings.recordGyroscope&&(n.buffer=[]),[{type:"START_TIMER"}];if(n.stage==="SCRAMBLING")return n.moveSequence.applyMove(e.move.value),[{type:"UPDATE_PROPS",props:{scrambleText:n.moveSequence.toString()}}];if(n.stage==="SOLVING"&&n.sim.isSolved()){n.stage=null;const i=n.recording.slice();n.recording.length=0,i.push(e.move);const r=n.buffer;n.buffer=null;const s=r===null||r.length===0?void 0:r;n.history.push(new fD(new Date,i,s));const a=Ip(i);let o="";return a<n.pbTime&&(n.pbTime=a,o="New Personal Best"),localStorage.setItem("history",JSON.stringify(n.history)),[{type:"STOP_TIMER"},{type:"WAKELOCK",enable:!1},{type:"UPDATE_PROPS",props:{history:n.history,totalPages:Dp(n.history.length),scrambleText:o}}]}else n.stage==="SOLVING"&&n.recording.push(e.move)}return[];case"GO_TO_PAGE":const t=wi(n,e);return t.push({type:"WAKELOCK",enable:!1}),t.push({type:"STOP_TIMER"}),t;default:return[]}}function yD(n,e){switch(e.type){case"ADJUST_PAGE":const t=Dp(n.history.length)-1;return n.pageNumber=Math.max(0,Math.min(t,e.pageDelta+n.pageNumber)),[{type:"UPDATE_PROPS",props:{history:n.history,pageNumber:n.pageNumber+1}}];case"GO_TO_PAGE":return wi(n,e);default:return[]}}function bD(n,e){switch(e.type){case"CANCEL":return wi(n,{type:"GO_TO_PAGE",page:"RECONSTRUCTION_PAGE",params:n.pageParams});case"GO_TO_PAGE":return wi(n,e);default:return[]}}function _D(n,e){switch(e.type){case"START":return[{type:"UPDATE_PROPS",props:{buttonAText:"Pause"}},{type:"STOP_NOTIFICATIONS"},{type:"START_REPLAY"},{type:"WAKELOCK",enable:!0}];case"CANCEL":return[{type:"UPDATE_PROPS",props:{buttonAText:"Start"}},{type:"PAUSE_REPLAY"},{type:"WAKELOCK",enable:!1}];case"GO_TO_PAGE":const t=wi(n,e);return t.push({type:"PAUSE_REPLAY"}),t.push({type:"WAKELOCK",enable:!1}),t;default:return[]}}function wD(n,e){switch(e.type){case"CLEAR_HISTORY":return confirm("Clear history?")?(n.history.length=0,localStorage.removeItem("history"),n.pbTime=1/0,n.pageNumber=0,[{type:"UPDATE_PROPS",props:{pageNumber:1,totalPages:1}}]):[];case"GO_TO_PAGE":return wi(n,e);default:return[]}}function MD(n,e){switch(e.type){case"GO_TO_PAGE":return wi(n,e);default:return[]}}const SD={SETTINGS_PAGE:mD,SOLVE_PAGE:xD,SCRAMBLE_PAGE:gD,TRAIN_PAGE:vD,HISTORY_PAGE:yD,DETAILED_STATS_PAGE:bD,RECONSTRUCTION_PAGE:_D,ADMIN_PAGE:wD,HELP_PAGE:MD};function ED(n,e){switch(e.type){case"TURN":n.sim.applyMove(e.move.value);break;case"CENTER":return[{type:"CENTER"}];case"RESET":return[{type:"SET_CUBE_STATE",cubeState:Yc.SOLVED}];case"CUBE_STATE":return n.sim.setState(e.cubeState),[];case"CONNECT":return n.settings.macAddress=e.macAddress,localStorage.setItem("settings",JSON.stringify(n.settings)),[{type:"CONNECT",macAddress:e.macAddress}]}return SD[n.page](n,e)}function gh(n){const e=Math.floor(n/6e4),t=Math.floor(n/1e3)%60,i=Math.floor(n/10)%100;return`${e}:${t<10?"0"+t:t}.${i<10?"0"+i:i}`}function Ay(n,e){const t=[],i=n.moves.length;let r=-n.moves[0].timestamp;for(let l=0;l<i;l++)r+=n.moves[l].timestamp,t.push(n.moves[l].value);const s=Lu(t),a=(typeof n.when=="string"?new Date(n.when):n.when).toISOString(),o=1e3*s.length/r;return`<tr><td>${e}</td><td>${a}</td><td>${r/1e3}</td><td>${s.length}</td><td>${o.toPrecision(3)}</td><td><button data-num="${e}">Details</button></td></tr>`}function f1(n,e){const t=n.length,i=e*I0,r=i+I0;return n.slice(Math.max(0,t-r),t-i).reverse().map((a,o)=>Ay(a,t-o-i)).join("")}function Ly(n){let e=1/0;return n.forEach(t=>{e=Math.min(Ip(t.moves),e)}),e}function h1(n){if(n.length===0)return"";let e,t=1/0;return n.forEach((i,r)=>{const s=Ip(i.moves);s<t&&(e=r,t=s)}),Ay(n[e],e+1)}function TD(n,e){const t=[],i=[],r=[],s=[],a=[],o=[t,i,r,s,a],l=e.length;let c=0;const d=n.getState();for(;c<l&&!n.isF2L();)n.applyMove(e[c].value),c++;const u=n.match().find(f=>f.stage==="F2L")?.bottom;for(n.setState(d),c=0;c<l&&!n.isCross(f=>f.bottom===u);){const f=e[c];n.applyMove(f.value),t.push(f),c++}for(;c<l&&!n.isF2L();){const f=e[c];n.applyMove(f.value),i.push(f),c++}for(;c<l&&!n.isOLL(f=>f.bottom===u);){const f=e[c];n.applyMove(f.value),r.push(f),c++}for(;c<l&&!n.isPLL(f=>f.bottom===u);){const f=e[c];n.applyMove(f.value),s.push(f),c++}for(;c<l;c++)a.push(e[c]);return o}function Fo(n,e,t=!1){const i=Lu(e.map(c=>c.value)),r=e.map(c=>c.timestamp),s=r.reduce((c,d)=>c+d,t?-r[0]:0)/1e3,a=s.toString(),o=i.length.toString(),l=i.length===0?"N/A":(i.length/s).toPrecision(3);return`<tr><td>${n}</td><td>${a}</td><td>${o}</td><td>${l}</td></tr>`}function AD(n){const e=new Gs;R0(n.map(o=>o.value)).forEach(o=>e.applyMove(o));const[t,i,r,s,a]=TD(e,n);return[Fo("Cross",t,!0),Fo("F2L",i),Fo("OLL",r),Fo("PLL",s),Fo("AUF",a)].join("")}function Kr(n,e){return _n(n,()=>({type:"GO_TO_PAGE",page:e}))}function LD(n){const e=hD;e.basePath=n,e.history=[{when:new Date("2022-10-13T01:19:54.137Z"),moves:[{timestamp:6817,value:"R'"},{timestamp:79,value:"R'"},{timestamp:520,value:"L"},{timestamp:143,value:"B'"},{timestamp:944,value:"L"},{timestamp:298,value:"U"},{timestamp:68,value:"B'"},{timestamp:100,value:"U'"},{timestamp:2296,value:"D'"},{timestamp:561,value:"D'"},{timestamp:923,value:"B'"},{timestamp:235,value:"D'"},{timestamp:312,value:"D'"},{timestamp:318,value:"B"},{timestamp:208,value:"D'"},{timestamp:86,value:"B'"},{timestamp:748,value:"D"},{timestamp:344,value:"B"},{timestamp:1134,value:"D"},{timestamp:1499,value:"D"},{timestamp:258,value:"D"},{timestamp:260,value:"F"},{timestamp:175,value:"D'"},{timestamp:153,value:"F'"},{timestamp:524,value:"D"},{timestamp:1305,value:"L'"},{timestamp:38,value:"D"},{timestamp:263,value:"D"},{timestamp:107,value:"L"},{timestamp:78,value:"L"},{timestamp:163,value:"D"},{timestamp:170,value:"L'"},{timestamp:2183,value:"D"},{timestamp:1574,value:"D"},{timestamp:262,value:"D"},{timestamp:262,value:"L'"},{timestamp:52,value:"D"},{timestamp:155,value:"L"},{timestamp:594,value:"R'"},{timestamp:38,value:"D"},{timestamp:95,value:"R"},{timestamp:711,value:"D"},{timestamp:619,value:"D"},{timestamp:602,value:"B"},{timestamp:155,value:"D'"},{timestamp:386,value:"D"},{timestamp:177,value:"B'"},{timestamp:333,value:"B"},{timestamp:117,value:"D'"},{timestamp:159,value:"B'"},{timestamp:69,value:"D"},{timestamp:396,value:"B"},{timestamp:97,value:"D"},{timestamp:226,value:"D"},{timestamp:107,value:"B'"},{timestamp:309,value:"D"},{timestamp:129,value:"D"},{timestamp:156,value:"B"},{timestamp:136,value:"D'"},{timestamp:105,value:"B'"},{timestamp:745,value:"B"},{timestamp:290,value:"D"},{timestamp:139,value:"D"},{timestamp:334,value:"B'"},{timestamp:120,value:"B'"},{timestamp:71,value:"D'"},{timestamp:111,value:"B"},{timestamp:60,value:"B"},{timestamp:127,value:"D'"},{timestamp:147,value:"B'"},{timestamp:69,value:"B'"},{timestamp:290,value:"D"},{timestamp:126,value:"D"},{timestamp:64,value:"B"},{timestamp:492,value:"D"},{timestamp:522,value:"D"},{timestamp:560,value:"F"},{timestamp:6,value:"B'"},{timestamp:213,value:"F"},{timestamp:10,value:"B'"},{timestamp:182,value:"U'"},{timestamp:89,value:"B"},{timestamp:25,value:"F'"},{timestamp:170,value:"L'"},{timestamp:242,value:"L'"},{timestamp:20,value:"F"},{timestamp:13,value:"B'"},{timestamp:240,value:"F"},{timestamp:11,value:"B'"},{timestamp:1050,value:"B"},{timestamp:344,value:"F'"},{timestamp:106,value:"U'"},{timestamp:387,value:"U'"},{timestamp:308,value:"U"},{timestamp:181,value:"F"},{timestamp:12,value:"B'"},{timestamp:519,value:"F"},{timestamp:10,value:"B'"}],gyroUpdates:[{dt:59.799999952316284,dqx:-.013568322650997694,dqy:-.0017728307596899806,dqz:-.006512067509339317,dqw:.999885168741036},{dt:114.20000004768372,dqx:-.038194024920881336,dqy:-.009269512937835456,dqz:-.01612098682890563,dqw:.9990972957494684},{dt:50.799999952316284,dqx:-.033945584343719165,dqy:-.014218933454510307,dqz:-.006062886499723696,dqw:.9993041382093196},{dt:56.200000047683716,dqx:-.025935084078579473,dqy:-.00936209986910691,dqz:.001619297331528033,dqw:.9996184774082709},{dt:112.89999997615814,dqx:-.02429942107006383,dqy:-.00851415564585073,dqz:.0020690506297758593,dqw:.999666327490723},{dt:1.600000023841858,dqx:-.016529225069624454,dqy:-.011207839123813512,dqz:.00799387480768167,dqw:.999768606741746},{dt:113.79999995231628,dqx:-.14683486314049024,dqy:-.03419548010748702,dqz:-.030572675483021172,dqw:.9880969100349125},{dt:54,dqx:.0024177011751776445,dqy:-.004394263188898295,dqz:-.0066555395219445035,dqw:.9999652738799113},{dt:55.40000003576279,dqx:-.004108086908024056,dqy:-.005632245789341572,dqz:-.010032956716683722,dqw:.9999253678194419},{dt:57.69999998807907,dqx:-.004404357555378657,dqy:-.00609836501817812,dqz:-.00427736816827165,dqw:.9999625571491078},{dt:54.5,dqx:-.13236652657801912,dqy:.018303681685218953,dqz:-.11287927271523387,dqw:.9845823214285927},{dt:112.5,dqx:-.006188129042417556,dqy:.007428606134818688,dqz:-.011165764554628865,dqw:.9998909183364748},{dt:56.19999998807907,dqx:.013413037617089452,dqy:.004102484648559973,dqz:-.005426494131412968,dqw:.9998869002057347},{dt:59.10000002384186,dqx:.026055641640687965,dqy:-.0027471868972785973,dqz:-.012471979207068967,dqw:.9995789144622361},{dt:53.80000001192093,dqx:.005833490463834273,dqy:-.006432259331676127,dqz:-.025448630195989808,dqw:.9996384164536927},{dt:56.89999997615814,dqx:-.013334363115557857,dqy:.005137119597221407,dqz:-.013638811815332608,dqw:.9998048747504745},{dt:111.80000001192093,dqx:-.007065455419885208,dqy:.006132085773433937,dqz:.0009352725910583004,dqw:.9999558000876625},{dt:61.89999997615814,dqx:-.21095726968331588,dqy:.49232073906977536,dqz:-.4188599751786914,dqw:.7332623278492201},{dt:50.69999998807907,dqx:-.016299740200669308,dqy:.05744681747403593,dqz:-.025072339620799633,dqw:.9979005759179794},{dt:55.90000003576279,dqx:-.012020141247583577,dqy:.03079138544597837,dqz:-.016014725177974753,dqw:.9993252400315822},{dt:112.5,dqx:2080111953789432e-20,dqy:.00813866622424994,dqz:-.0031074964982165665,dqw:.9999620518524278},{dt:56.59999996423721,dqx:-.07279519420662703,dqy:.20654639837168487,dqz:-.05751070391458196,dqw:.9740287285061742},{dt:112.10000002384186,dqx:.002987256038198577,dqy:.008810869651686704,dqz:-.018343352805761493,dqw:.9997884607681701},{dt:1.399999976158142,dqx:.00949250251283465,dqy:.009232403825704866,dqz:-.017154363619775848,dqw:.9997651638882222},{dt:58.90000003576279,dqx:.008090977993449738,dqy:.012497194907976239,dqz:-.01430408941677419,dqw:.9997868518941917},{dt:108.5,dqx:-.003738013569574844,dqy:.0050535841622182665,dqz:-.0159488646031829,dqw:.9998530503326668},{dt:59.30000001192093,dqx:-.015591850796030843,dqy:-.004874524089885368,dqz:-.007144400133574258,dqw:.9998410327398964},{dt:53.09999996423721,dqx:-.009413083291349766,dqy:-.004087119265643702,dqz:.0003448020907144689,dqw:.9999472838257908},{dt:113.60000002384186,dqx:.20442466551236904,dqy:-.18581157732227166,dqz:.17222267482201534,dqw:.9455284047242135},{dt:.800000011920929,dqx:.009171848288336316,dqy:-.00923900713004052,dqz:.015782223481849544,dqw:.9997906977803884},{dt:118.59999996423721,dqx:.008575383767233533,dqy:-.007769873727517286,dqz:.012653228745218958,dqw:.9998529830219162},{dt:48.69999998807907,dqx:.35113190816921785,dqy:.07290367648023546,dqz:.1351464452757955,dqw:.9236486752821257},{dt:57.5,dqx:-.019967710803919916,dqy:-.007083536424416975,dqz:.008516467532194316,dqw:.9997392579156567},{dt:111.10000002384186,dqx:-.05637133554748712,dqy:-.026384924450862976,dqz:-.014105572767814989,dqw:.9979614927977967},{dt:1.199999988079071,dqx:-.12730772041869978,dqy:-.035939722035701685,dqz:-.1027583596881354,dqw:.985871087016956},{dt:112.40000003576279,dqx:-.07893271584845556,dqy:-.03505878932769597,dqz:-.07879553354667174,dqw:.9931423722471809},{dt:54.69999998807907,dqx:.009099643071467503,dqy:-.010853336259286764,dqz:-.008851256962186471,dqw:.9998605186915843},{dt:61.39999997615814,dqx:.03550458348003066,dqy:.008151888158487147,dqz:.0009160094165706067,dqw:.9993358455484873},{dt:53.19999998807907,dqx:.03110378475356721,dqy:.010536621394084053,dqz:-.008012400517253992,dqw:.9994285045072272},{dt:116.5,dqx:.5358950838375007,dqy:.0586694371487594,dqz:-.6134050735225984,dqw:.5771555873767328},{dt:.30000001192092896,dqx:.007282602180435344,dqy:.01514333618089609,dqz:-.004239070145156162,dqw:.9998498254033444},{dt:106.40000003576279,dqx:.003800969597304106,dqy:.015698655135350403,dqz:-.004002609749996222,dqw:.9998615323994872},{dt:57.09999996423721,dqx:-.14262130745819934,dqy:.08418575376603096,dqz:-.03354627552585557,dqw:.9856198906881406},{dt:55.10000002384186,dqx:-.006925910044091661,dqy:-.004759144276628943,dqz:-.0016673255324920755,dqw:.9999633004972653},{dt:61.39999997615814,dqx:-.006395628610596027,dqy:-.010789078728727825,dqz:-.0006194317077851674,dqw:.9999211509010199},{dt:107.40000003576279,dqx:-.010122759436733483,dqy:-.01200099179043777,dqz:.003544338836780875,dqw:.999870463409957},{dt:60.799999952316284,dqx:-.010831200243201076,dqy:-.009153320831001403,dqz:.0046928932029032255,dqw:.9998884330626305},{dt:51.80000001192093,dqx:-.011650188008520367,dqy:-.006865686355900437,dqz:.005585200547105568,dqw:.9998929647742689},{dt:57.19999998807907,dqx:-.011206070389236407,dqy:-.01189131052829815,dqz:.009113398776452925,dqw:.9998249680234497},{dt:168.20000004768372,dqx:-.17821195431168801,dqy:-.29192012674339307,dqz:.1492877185033143,dqw:.9277587596172863},{dt:4.699999988079071,dqx:.03838678195737226,dqy:.019426385992581563,dqz:.005048608116713878,dqw:.9990613504957084},{dt:51.69999998807907,dqx:.051095616180225435,dqy:.023528106927197145,dqz:.007448938127561193,dqw:.9983887917601826},{dt:56.10000002384186,dqx:.05695495116885189,dqy:.02156738033776212,dqz:.006764303057263322,dqw:.9981208473160298},{dt:60.09999996423721,dqx:.05317432696405569,dqy:.015548952938256089,dqz:.004315051655377333,dqw:.9984548569382871},{dt:108.30000001192093,dqx:.04766220356604202,dqy:.007485810270721094,dqz:.009360934985888445,dqw:.9987915948244711},{dt:59.19999998807907,dqx:.03537597261363591,dqy:.00119381076457159,dqz:.011073703705968056,dqw:.9993120075650699},{dt:53.30000001192093,dqx:.4596405045347242,dqy:.26370009957229057,dqz:-.062347885336418024,dqw:.8457574151437898},{dt:56.60000002384186,dqx:.008628125261392238,dqy:.01800391366973597,dqz:-.0010475197374232303,dqw:.9998001386524439},{dt:112.39999997615814,dqx:.0021043067319857995,dqy:.011739368243495633,dqz:.0008152068426833525,dqw:.9999285447291848},{dt:59.19999998807907,dqx:-.0020995908546649813,dqy:.005534805299881554,dqz:-.0002897065904292062,dqw:.9999824367050789},{dt:109.40000003576279,dqx:-.10080764915819168,dqy:-.03402745236531086,dqz:.0473017440726759,dqw:.9931981148614856},{dt:1.199999988079071,dqx:-.02546772134155925,dqy:-.005498850392075326,dqz:.004399171220715176,dqw:.9996508415975075},{dt:57.30000001192093,dqx:-.024577429957616786,dqy:-.004042416763802105,dqz:.005446308818230355,dqw:.9996749204234556},{dt:110.89999997615814,dqx:-.028747209018759795,dqy:-.003633341290234118,dqz:.003935976757074716,dqw:.9995723610082804},{dt:56.10000002384186,dqx:-.034708126740326535,dqy:-.005827029271275461,dqz:.001538841353372039,dqw:.9993793191953385},{dt:56.09999996423721,dqx:-.03607023222900302,dqy:-.01044165239051546,dqz:.0023179863814493107,dqw:.999292017971442},{dt:112.80000001192093,dqx:-.016773997547418325,dqy:-.006253382826637302,dqz:.002613509436958178,dqw:.999836335495928},{dt:1.100000023841858,dqx:-.15897416991608246,dqy:-.17364685284968492,dqz:.09591856037879047,dqw:.9671471519731384},{dt:113.69999998807907,dqx:-.0055076807479378645,dqy:-.002091640384867921,dqz:.013240417540946816,dqw:.9998949854042777},{dt:53.19999998807907,dqx:-.007945584619688457,dqy:.0032753057405402186,dqz:.012664524161168738,dqw:.9998828680826212},{dt:56.5,dqx:-.03097569245610177,dqy:-.015729010187515047,dqz:-.025955051321574687,dqw:.999059277533761},{dt:56.60000002384186,dqx:.0032714568646678953,dqy:-.006286619700283408,dqz:.01742023615489101,dqw:.9998231400377942},{dt:116,dqx:-.0015689565398765478,dqy:-.005815934133876405,dqz:.008321058490778712,dqw:.9999472352435002},{dt:52.799999952316284,dqx:-.007549438311256345,dqy:-.007374990635342499,dqz:.0017546684206169345,dqw:.9999427666786969},{dt:55.90000003576279,dqx:-.012875406747736188,dqy:-.008139826374739478,dqz:-.002658871399299885,dqw:.9998804416181725},{dt:61.89999997615814,dqx:-.01375153905311657,dqy:-.009581743474485344,dqz:-.002764685484677322,dqw:.9998557105301897},{dt:66.5,dqx:-.015297429129399793,dqy:-.011075898597935618,dqz:-.0011849170205661466,dqw:.99982093852046},{dt:98.30000001192093,dqx:.08909670662102376,dqy:.08643745550578627,dqz:-.03536918651887262,dqw:.9916346927170133},{dt:54,dqx:.01425758888591662,dqy:.020236871411919877,dqz:-.006678696772086358,dqw:.9996712385599799},{dt:61.10000002384186,dqx:.01736644873264889,dqy:.009018843843825758,dqz:-.006730521476789132,dqw:.9997858605695461},{dt:53.39999997615814,dqx:.020351195275544274,dqy:.006688422312230241,dqz:.006730286338701562,dqw:.999747866766231},{dt:114.10000002384186,dqx:.15166707246026312,dqy:.16714090877976062,dqz:-.03837820788863425,dqw:.9734413844206882},{dt:109.59999996423721,dqx:.0008879669231435581,dqy:.0028948827658521227,dqz:-.007769294932859577,dqw:.9999652340080435},{dt:1.4000000357627869,dqx:-.006060183808849453,dqy:.003260764055582767,dqz:-.007484677017204039,dqw:.9999483092639961},{dt:56.19999998807907,dqx:-.010157831766647306,dqy:.005859197040884327,dqz:-.0059918316254394255,dqw:.9999132893494361},{dt:54.30000001192093,dqx:-.0046941843552562685,dqy:.002251266103455569,dqz:-.0034558366888807757,dqw:.9999804766228939},{dt:113.39999997615814,dqx:-.005467200959105315,dqy:.0015921685889362241,dqz:-.0032444320512223512,dqw:.9999785239561508},{dt:56.39999997615814,dqx:-.013027880189963294,dqy:.004994002685338145,dqz:-.012251148837626541,dqw:.9998276069538655},{dt:58.700000047683716,dqx:-.3128849443700267,dqy:-.17562987323977106,dqz:.1265606135590226,dqw:.9247916361580651},{dt:52.89999997615814,dqx:.007531229090408063,dqy:.0018182333545735396,dqz:.0059213784988372715,dqw:.9999524548159926},{dt:115,dqx:-.0033932328625644616,dqy:.001995324056922154,dqz:.0073557410625762504,dqw:.9999651982574538},{dt:53.80000001192093,dqx:-.004713475662504603,dqy:-.0011397342662041454,dqz:-3205520960720704e-20,dqw:.9999882414935914},{dt:56.80000001192093,dqx:-.0578885396247097,dqy:-.0334450701247446,dqz:-.021584846603324437,dqw:.9975291668224945},{dt:56.09999996423721,dqx:.0035629032886262246,dqy:.00025012872776189465,dqz:.006270286862042859,dqw:.9999739629902586},{dt:112.60000002384186,dqx:-.0008296189429410905,dqy:.004006677949495413,dqz:-.00393457151272065,dqw:.999983888575826},{dt:.19999998807907104,dqx:-.011787204425566373,dqy:-9880888609065108e-20,dqz:-.012586783968021993,dqw:.999851301403352},{dt:112.10000002384186,dqx:-.017917064386349844,dqy:-.012888809513179361,dqz:-.009272562006254904,dqw:.9997133974229557},{dt:58.39999997615814,dqx:-.01312086614520559,dqy:-.010322202092597349,dqz:.013007301567054106,dqw:.9997760274789063},{dt:54.10000002384186,dqx:-.0019569766339864714,dqy:-.00575169466545325,dqz:.0041005954950207885,dqw:.9999731363229294},{dt:56.5,dqx:.10445377284530556,dqy:-.03756824879257256,dqz:.036824106779736195,dqw:.9931374633860689},{dt:57.5,dqx:-.01887671948505053,dqy:-.005442728753552867,dqz:.001301888748009284,dqw:.9998061568378571},{dt:115,dqx:.00417568345518062,dqy:-.0042009987279364724,dqz:.0022493979677955037,dqw:.9999799275416245},{dt:58.19999998807907,dqx:.008442189819718567,dqy:.0034697937118771394,dqz:-.000821633142517506,dqw:.9999580065590873},{dt:51.69999998807907,dqx:-.007691386418575947,dqy:.010770704146097043,dqz:-.018873393082252922,dqw:.9997342794666592},{dt:58.10000002384186,dqx:.007112125952251256,dqy:.004060678023155961,dqz:-.014297289879973602,dqw:.9998642488160677},{dt:166,dqx:.0070674922507307876,dqy:.0012251325457297013,dqz:-.004522661488488931,dqw:.9999640469219839},{dt:1,dqx:-.046733308712952976,dqy:-.0486243918049131,dqz:.08618388910128302,dqw:.993993965594218},{dt:54.59999996423721,dqx:.005198816676429472,dqy:-.0189975302704235,dqz:-.016168320497060226,dqw:.9996752730567529},{dt:59.60000002384186,dqx:.01018225383533025,dqy:-.015053371522558034,dqz:-.024549744827445583,dqw:.999533405015332},{dt:52.69999998807907,dqx:.049993934676816364,dqy:-.1327218246970932,dqz:-.25247467641131266,dqw:.9571531024426589},{dt:116,dqx:.034404910540090886,dqy:-.017753713035202512,dqz:-.024194170284563526,dqw:.9989573313852969},{dt:52.60000002384186,dqx:.03150590386759554,dqy:-.015223206331014094,dqz:-.02207305354367417,dqw:.9991438396536043},{dt:57.5,dqx:.028797485731849592,dqy:-.012148712771099912,dqz:-.020634903009167482,dqw:.999298411072154},{dt:56.09999996423721,dqx:.02494086238819032,dqy:-.005609977036166169,dqz:-.012361652159462888,dqw:.9995967542448683},{dt:114.80000001192093,dqx:.011658460310918078,dqy:.0006663596679748474,dqz:-.003930764321980196,dqw:.999924089798729},{dt:53.89999997615814,dqx:-.007188469681288473,dqy:.010338665713392259,dqz:.005818424785529741,dqw:.9999037872855185},{dt:55.5,dqx:-.24418699044178985,dqy:.13361925676712283,dqz:.4100445237860603,dqw:.8685517235220055},{dt:59.10000002384186,dqx:.005555206012289225,dqy:.0009263692415906188,dqz:-.009026010209770632,dqw:.9999434047314291},{dt:53.80000001192093,dqx:.010292966649946611,dqy:.007487230072934503,dqz:.004496820535523097,dqw:.9999088832630947},{dt:114.80000001192093,dqx:.005576773473646775,dqy:.002821250688015031,dqz:-.0007278697608653073,dqw:.9999802049779736},{dt:53.59999996423721,dqx:.002627736522661357,dqy:.05748934893327173,dqz:-.11238253136016768,dqw:.9919970949579826},{dt:62.19999998807907,dqx:-.012991666014676159,dqy:-.003417095507159962,dqz:.010492758247870536,dqw:.9998547104938845},{dt:51.40000003576279,dqx:-.00034162271411101834,dqy:-.0012516802225929768,dqz:.02909977660029141,dqw:.9995756697681044},{dt:55.19999998807907,dqx:.039569110491963905,dqy:.02362306614308199,dqz:.05437326225022185,dqw:.9974566580023128},{dt:112,dqx:.056064592599492466,dqy:.030321017699015018,dqz:.03155130824032579,dqw:.9974677500003059},{dt:56.69999998807907,dqx:.05299375335966924,dqy:.02539934704151131,dqz:.003301843106784011,dqw:.9982663137193488},{dt:112.40000003576279,dqx:.027302744954261535,dqy:.012773472066815339,dqz:.00024750231187854743,dqw:.9995455653805516},{dt:2.899999976158142,dqx:.36143321490360353,dqy:.1081904521775659,dqz:.033549657500542014,dqw:.9254919112037964},{dt:58.30000001192093,dqx:.008865659639220473,dqy:.01905674481768037,dqz:-.01066797034717164,dqw:.999722178890109},{dt:107.5,dqx:.008194022310293609,dqy:.01925261620988266,dqz:-.007321125725825546,dqw:.9997542677506108},{dt:59.30000001192093,dqx:-.02291264579129314,dqy:.12002394532982898,dqz:-.05792419798606504,dqw:.9908148416823277},{dt:110,dqx:-.007328915438653895,dqy:-.0033024212291618196,dqz:.012096135082236142,dqw:.9998945267019871},{dt:1.399999976158142,dqx:-.003111940470609806,dqy:.003189737259249579,dqz:.0023805509955420745,dqw:.9999872371083953},{dt:56.60000002384186,dqx:-.0012201356104183901,dqy:.0054488570366784915,dqz:19681334291477004e-22,dqw:.99998441048959},{dt:110.29999995231628,dqx:-.004653551894476933,dqy:.005304742850369125,dqz:.0003278327674365311,dqw:.9999750480305665},{dt:113.30000001192093,dqx:-.001519933929788884,dqy:.005785982153210657,dqz:-.001443790673201828,dqw:.9999810636606394},{dt:1.4000000357627869,dqx:.0036645805397061988,dqy:.005709297821768897,dqz:-.003252260821605152,dqw:.9999716983832082},{dt:59.19999998807907,dqx:.06846247743548019,dqy:-.2785776291960136,dqz:.12998091317643762,dqw:.9491113506352897},{dt:107.30000001192093,dqx:-.007460707489328505,dqy:-.05673079410965959,dqz:.024834583919515263,dqw:.9980527031600037},{dt:59,dqx:-.005579685078233261,dqy:-.05190837425681086,dqz:.021615636803874766,dqw:.998402299697875},{dt:115.5,dqx:-.00011884703196778784,dqy:-.028265016567877776,dqz:.012860384824805893,dqw:.9995177263140251},{dt:.3999999761581421,dqx:-.0771397463604125,dqy:-.0298360057968228,dqz:-.05163028108462783,dqw:.9952354426791007},{dt:50.80000001192093,dqx:-.01271953330732168,dqy:.027705104241491252,dqz:-.02245325490183922,dqw:.9992829889554435},{dt:116.89999997615814,dqx:-.02029990587987529,dqy:.018912645301058822,dqz:-.01796229263366242,dqw:.9994536416024145},{dt:51.10000002384186,dqx:-.018778632731511757,dqy:.02115469227613706,dqz:-.017063876819818163,dqw:.999454184070143},{dt:57,dqx:-.018318099705287194,dqy:.025333962919684455,dqz:-.020263351608878877,dqw:.9993057760903548},{dt:57.80000001192093,dqx:-.023348437441399895,dqy:.026438793565718405,dqz:-.023998469381901352,dqw:.9990895425992407},{dt:110.5,dqx:-.01218972971582884,dqy:.013815900390682118,dqz:-.010257477902222228,dqw:.9997776330429358},{dt:56.799999952316284,dqx:-.22933550370284744,dqy:-.006676055739831571,dqz:-.16983566507548187,dqw:.9583926668591997},{dt:55.40000003576279,dqx:-.00589204541432853,dqy:-.012916398259116252,dqz:.012971801125364115,dqw:.9998150743174518},{dt:59.69999998807907,dqx:.013353151880017938,dqy:-.010327266978148952,dqz:.014959153150195928,dqw:.9997455999546386},{dt:52.89999997615814,dqx:.5152835702516101,dqy:-.013656248616988748,dqz:.19725083072456984,dqw:.833899549634686},{dt:115.20000004768372,dqx:.030747504615906397,dqy:.0031282590155057854,dqz:.0016504307726012274,dqw:.9995209257607822},{dt:53.39999997615814,dqx:.026959926743150415,dqy:-.00031792370835914685,dqz:.001641919986356051,dqw:.9996351161165149},{dt:56.89999997615814,dqx:.025866810420450147,dqy:-.0025163098780132814,dqz:.0034211224375849947,dqw:.999656377073911},{dt:56.10000002384186,dqx:.02179632033842656,dqy:-.0021133888654355226,dqz:.0056062549265059256,dqw:.9997444793110423},{dt:115.89999997615814,dqx:.015245238921837424,dqy:-5744893281815766e-20,dqz:.004295825706696232,dqw:.9998745547674137},{dt:52.60000002384186,dqx:.011170635870335469,dqy:.0019092410955155736,dqz:.0026431559124459256,dqw:.9999322904174632},{dt:56.19999998807907,dqx:-.09777009739616821,dqy:.3672263601260615,dqz:-.07625736894538475,dqw:.9218300397390158},{dt:58.10000002384186,dqx:-.028565701739068878,dqy:-.01592903819349803,dqz:.005878277829528766,dqw:.9994477036224275},{dt:54.09999996423721,dqx:-.004608373271451955,dqy:-.014291738614630805,dqz:.004471885127825148,dqw:.9998772481392733},{dt:113.5,dqx:-.00422042693800176,dqy:-.030371849597224568,dqz:.01862991850228589,dqw:.9993561251551434},{dt:55.700000047683716,dqx:-.04387084111575832,dqy:-.04472734455135935,dqz:.015018306054619374,dqw:.9979224741594054},{dt:60.09999996423721,dqx:-.03936012565456074,dqy:.010834483310615227,dqz:-.016472190093071548,dqw:.9990305608105223},{dt:52.69999998807907,dqx:.0031933865061996598,dqy:.010692651211837795,dqz:-.013775069378641813,dqw:.9998428461294794},{dt:55.80000001192093,dqx:.04593479937918585,dqy:-.17972607147277075,dqz:.05331439738261163,dqw:.9811962639914031},{dt:113.10000002384186,dqx:.0037874885999300183,dqy:-.014370086794133138,dqz:.005764381576337314,dqw:.999872955650205},{dt:55.69999998807907,dqx:.005215563663252644,dqy:-.01378231792066778,dqz:.006723727407346871,dqw:.9998688099436644},{dt:112.60000002384186,dqx:.011073303706199971,dqy:-.012607068906771712,dqz:.00814283197310458,dqw:.9998260538944101},{dt:2.899999976158142,dqx:-.1739132073974886,dqy:.07449478445634339,dqz:-.0737094900395257,dqw:.9791688487996512},{dt:109.80000001192093,dqx:-.020185170846446415,dqy:.021035688531583913,dqz:-.01808330676550267,dqw:.9994113530985761},{dt:116.59999996423721,dqx:-.017296481125776884,dqy:.007330550048991802,dqz:.0025716801142728896,dqw:.9998202244593948},{dt:.7000000476837158,dqx:-.007767046697814363,dqy:.004543933558545099,dqz:-.002558938614861478,dqw:.9999562377857218},{dt:51.19999998807907,dqx:-.004499914122131328,dqy:.0002966891288962714,dqz:.003357974349389614,dqw:.9999841932534348},{dt:113.59999996423721,dqx:-.01770540627363404,dqy:-.0009187314887449116,dqz:.0037464554590340843,dqw:.9998358058164503},{dt:54.700000047683716,dqx:-.01540658057725738,dqy:-.0014254578228896364,dqz:.0022754738004873154,dqw:.9998777063040732},{dt:56.69999998807907,dqx:-.2737957695891101,dqy:.25020860273571965,dqz:-.082473007542732,dqw:.9250025592932174},{dt:56.09999996423721,dqx:-.025940632565636987,dqy:.019733838489021546,dqz:-.012276535861656945,dqw:.9993932888847219},{dt:57.90000003576279,dqx:-.01613322167868399,dqy:.017721598041084814,dqz:-.011483803558879457,dqw:.9996468308242453},{dt:112.39999997615814,dqx:-.006965486924147545,dqy:.0070760863414744204,dqz:-.0034940601005609695,dqw:.9999445997344109},{dt:55.40000003576279,dqx:.07097295281345849,dqy:-.05364967703326369,dqz:-.019051654323247957,dqw:.9958521911361711},{dt:57,dqx:.0014401952857375443,dqy:-.00828163913224585,dqz:-.01043483045291227,dqw:.9999102232721901},{dt:54.69999998807907,dqx:-.0039599624965974654,dqy:-.0015158277815692667,dqz:-.007432901843083872,dqw:.9999633857963767},{dt:56.80000001192093,dqx:-.002227431896234995,dqy:-.00012567040465568356,dqz:-.004970996824722795,dqw:.9999851558621584},{dt:112.29999995231628,dqx:.0022910185040268356,dqy:-.0019551546004462758,dqz:-.0007555161154801371,dqw:.9999951788884291},{dt:60.30000001192093,dqx:.003127462388939676,dqy:-.003245991375835507,dqz:.0027057429357404406,dqw:.9999861806415922},{dt:52,dqx:.0007530081201469641,dqy:-.0015517711626082918,dqz:.0016261016047744714,dqw:.9999971903853535},{dt:56.5,dqx:.03711100350438124,dqy:-.09126484053234944,dqz:.0711192871607822,dqw:.9925903229909331},{dt:58.30000001192093,dqx:.022492033187231864,dqy:-.0203779166327114,dqz:.025392406438272536,dqw:.9992167305705447},{dt:110.5,dqx:-.00325374467103019,dqy:-.01102992430924718,dqz:.029616808443768836,dqw:.9994951718607514},{dt:56.5,dqx:.08445506806019545,dqy:-.024549028699907702,dqz:.020066847540408994,dqw:.9959226919287604},{dt:116.60000002384186,dqx:-.011186955353145862,dqy:.004128512562400863,dqz:.0010624276787834092,dqw:.9999283367628781},{dt:.2999999523162842,dqx:-.00530221768565934,dqy:.0005339427701476634,dqz:.0027283072844061507,dqw:.9999820787054604},{dt:107.90000003576279,dqx:-.005704398652797343,dqy:-.0014672401896018566,dqz:.002516254221002795,dqw:.9999794875430851},{dt:58.59999996423721,dqx:-.004189300536323699,dqy:-.0044962213990345085,dqz:.0004086453666836687,dqw:.999981033201686},{dt:53.5,dqx:-.00977709938610313,dqy:-.005739095537139319,dqz:-.004413402316667939,dqw:.9999259937565387},{dt:55.90000003576279,dqx:-.009382701221189857,dqy:-.009156854238987017,dqz:-.010824408320658133,dqw:.999855464116063},{dt:56.89999997615814,dqx:.045281538741148306,dqy:-.5919492821373673,dqz:-.3386607235004653,dqw:.7299688650787998},{dt:116.69999998807907,dqx:.011713232313627725,dqy:-.02577277684917323,dqz:.01768547459650073,dqw:.9994427388052536},{dt:51.80000001192093,dqx:.008126540837620877,dqy:-.01275840716064025,dqz:.00477903173002607,dqw:.9998741637008435},{dt:56.30000001192093,dqx:.011928879861809988,dqy:-.000606255743453743,dqz:.00186080401696051,dqw:.9999269331744329},{dt:58.80000001192093,dqx:.09093065683071477,dqy:-.02700878020138764,dqz:.030608619821214295,dqw:.9950202278511772},{dt:110.19999998807907,dqx:-.003930649992065577,dqy:.001475688940194675,dqz:.010989658825753645,dqw:.9999307974713476},{dt:56.30000001192093,dqx:-.0035384696668153692,dqy:.001028577032242961,dqz:.008485315993532222,dqw:.9999572094215811},{dt:57.19999998807907,dqx:-.003839158657236913,dqy:-.002011178457310747,dqz:.0029705690019493636,dqw:.9999861957756329},{dt:59.10000002384186,dqx:-.0022406237579165322,dqy:.002060219378042183,dqz:-.006665662735684169,dqw:.9999731516603754},{dt:52.299999952316284,dqx:.02088852170793734,dqy:.005482819432658381,dqz:-.004391096450664267,dqw:.9997571338199527},{dt:116,dqx:.0028260076061890627,dqy:.0026857642899666967,dqz:.0011689401956937184,dqw:.9999917169306989},{dt:52.40000003576279,dqx:-.370297130930462,dqy:.23658046002179234,dqz:-.1395355221549106,dqw:.8873779120631196},{dt:56.59999996423721,dqx:.008665308312645267,dqy:-.007332531887798643,dqz:-.017675870164218926,dqw:.9997793306634712},{dt:58.30000001192093,dqx:.009981795978423913,dqy:-.0002452372730875063,dqz:.005274317072915244,dqw:.9999362405609364},{dt:114.80000001192093,dqx:.0054420900573913245,dqy:.0015238698629322922,dqz:.004032412426188903,dqw:.9999759002728381},{dt:51.80000001192093,dqx:.060445846409531295,dqy:-.00833283633553511,dqz:.005730557318815277,dqw:.9981202453628804},{dt:56.09999996423721,dqx:.009479837390018286,dqy:-.0025728881869234166,dqz:-.010170606453364484,dqw:.9999000308499881},{dt:112.70000004768372,dqx:.0027978023808583607,dqy:.004537450949758326,dqz:-.017959269609775924,dqw:.999824508839326},{dt:1.0999999642372131,dqx:-.002417609301100937,dqy:.007878142506653807,dqz:-.015660191453955558,dqw:.9998434119598616},{dt:112.5,dqx:.0007037917746481048,dqy:.0073873109029008455,dqz:-.007879498502734339,dqw:.9999414211933151},{dt:54.90000003576279,dqx:.005656197911458216,dqy:.0022728536930479715,dqz:29530269742422677e-21,dqw:.9999814201720145},{dt:61,dqx:.003110383511304493,dqy:-.0007991173499511395,dqz:.0028814122790433716,dqw:.9999906921512577},{dt:51.799999952316284,dqx:-.17896201708387052,dqy:-.2367431580197074,dqz:.054959393136513345,dqw:.9533649556587416},{dt:56.10000002384186,dqx:.0024237464328983674,dqy:-.024667483181358862,dqz:.017337062302103044,dqw:.9995424288130341},{dt:60.30000001192093,dqx:-.010502767653894511,dqy:-.03195533947121021,dqz:.011672009777732691,dqw:.9993659551628904},{dt:108.59999996423721,dqx:-.010851588188164292,dqy:-.014302516808578691,dqz:.002677283578207061,dqw:.9998352430272581},{dt:57.700000047683716,dqx:-.09916179383714774,dqy:-.21359512778589607,dqz:.14061083685640952,dqw:.9616510035286533},{dt:55.39999997615814,dqx:.0019117859560450062,dqy:-.007670682920689897,dqz:.010549050944324824,dqw:.9999131078359573},{dt:61.10000002384186,dqx:.010198564155029316,dqy:2140239834558244e-20,dqz:.0085321800143646,dqw:.9999115914596228},{dt:51.19999998807907,dqx:.01601227872269373,dqy:.007609510946749443,dqz:.008019530187363906,dqw:.9998106767827758},{dt:115.5,dqx:.017433761955661972,dqy:.008091748504569896,dqz:.005188418314319071,dqw:.999801814294017},{dt:52.59999996423721,dqx:.011815066692623721,dqy:.004481833131868007,dqz:.003309591188690033,dqw:.9999146783486033},{dt:56.40000003576279,dqx:.0033934751230429855,dqy:.0021597492831036957,dqz:.0011780907027283197,dqw:.9999912159173795},{dt:58.19999998807907,dqx:.5215340087215725,dqy:.35891174446681706,dqz:.2097174626767226,dqw:.7451196033383033},{dt:167.69999998807907,dqx:.013955821556426828,dqy:.005519110400050653,dqz:.007734877821674396,dqw:.9998574629066691},{dt:1.5,dqx:.0077472455285822195,dqy:.003106864418203903,dqz:.002308898746302579,dqw:.9999624975801775},{dt:54.5,dqx:.006336821681346472,dqy:-.0014955419279692461,dqz:.003616708204516761,dqw:.999972263348881},{dt:59.40000003576279,dqx:.010290261194403627,dqy:-.0005234416951610532,dqz:.008609863651264399,dqw:.9999098493270526},{dt:108.59999996423721,dqx:.021696440744580325,dqy:.0021720918348385743,dqz:.012574529484563557,dqw:.9996831636495234},{dt:58.10000002384186,dqx:.013352740046081418,dqy:.0005300674091489321,dqz:.006160461577489923,dqw:.9998917301763006},{dt:54.59999996423721,dqx:.08751657699620949,dqy:.05018593028884749,dqz:.0064844742351693185,dqw:.9948769636220364},{dt:56.700000047683716,dqx:.0002456267468499418,dqy:.005305976623926401,dqz:-.0029309339754262087,dqw:.9999815977834787},{dt:56.69999998807907,dqx:-.0062303564240759335,dqy:.006178009723826761,dqz:-.005111690673903019,dqw:.9999484414074234},{dt:115.59999996423721,dqx:-.2534828520992197,dqy:-.11151994940695692,dqz:-.01955596577440652,dqw:.960691057925775},{dt:52.10000002384186,dqx:-.062110477408857834,dqy:-.01972685079618508,dqz:-.01971324458700452,dqw:.9976795717772122},{dt:114.80000001192093,dqx:-.03331375258379918,dqy:-.005694284083252343,dqz:-.016843621083358545,dqw:.9992867763792159},{dt:.3999999761581421,dqx:-.002206046610699036,dqy:.009308423606628091,dqz:-.008490820658833165,dqw:.9999181929402278},{dt:110,dqx:-.0024660886200572607,dqy:.004499006779057846,dqz:-.0015220792091411028,dqw:.9999856802073723},{dt:56.30000001192093,dqx:-.007382338665504945,dqy:.0016999950197214564,dqz:-.006676683624206481,dqw:.9999490151945464},{dt:56,dqx:.001001785714252551,dqy:-.0015999969151120896,dqz:-.0021078354274093047,dqw:.9999959967245196},{dt:59.80000001192093,dqx:.039367402052568,dqy:.015727364566289703,dqz:.020413354328303407,dqw:.998892462993138},{dt:54.5,dqx:.04858296198648321,dqy:-.02689169559905924,dqz:.023775585943888844,dqw:.9981739598013225},{dt:113.39999997615814,dqx:.051276578371601295,dqy:-.03496732304355127,dqz:.02423490324050634,dqw:.9977778652057742},{dt:53.69999998807907,dqx:.027965347919256894,dqy:-.021079085061984693,dqz:.010610245346874575,dqw:.99933029283735},{dt:56.200000047683716,dqx:.12002953290272764,dqy:-.10025711971778287,dqz:.008707013308663913,dqw:.9876566250961362},{dt:57.299999952316284,dqx:-.007572544322227398,dqy:.00387008412707629,dqz:-.004265649035468916,dqw:.9999547406056153},{dt:170.10000002384186,dqx:-.01396347896035427,dqy:.0017870064544448505,dqz:-.006494722867573993,dqw:.9998798159969673},{dt:1,dqx:-.022912941713602503,dqy:.002199843257755185,dqz:-.01066817541015394,dqw:.9996781221098562},{dt:52.60000002384186,dqx:-.030384407774945416,dqy:.0020671677244103737,dqz:-.012960475236421604,dqw:.9994521202455932},{dt:58.89999997615814,dqx:-.030869911764664804,dqy:-.002841092123168243,dqz:-.013372960473992598,dqw:.9994299078331361},{dt:110.69999998807907,dqx:-.014289998896593603,dqy:-.0046540355523554955,dqz:-.004652115869641982,dqw:.9998762391929056},{dt:58.10000002384186,dqx:-.5879800643686867,dqy:-.1096139475296839,dqz:-.30052560929992733,dqw:.7429324226111435},{dt:55.5,dqx:.008682207396249864,dqy:.0340515134787292,dqz:-.02554918088809209,dqw:.9990557307079941},{dt:58.5,dqx:.02037450957537916,dqy:.040797804837293616,dqz:-.029386835737196276,dqw:.9985273318068845},{dt:52.69999998807907,dqx:.01177327163001643,dqy:.019958482090926932,dqz:-.020210943201744554,dqw:.9995271716379939},{dt:56.19999998807907,dqx:.18671225375027295,dqy:.23773459473974,dqz:-.2182669445796694,dqw:.92789026165128},{dt:112,dqx:.0015325752270300003,dqy:-.0009468965239873839,dqz:-.005435681057751857,dqw:.9999836038513754},{dt:56.80000001192093,dqx:.002308543059681839,dqy:-.0032313738601128517,dqz:-.0026942282433198017,dqw:.9999884849267466},{dt:58.30000001192093,dqx:.004708745337587306,dqy:.004576692527852033,dqz:-.006777997423001114,dqw:.9999554691853957},{dt:54.09999996423721,dqx:.0035292278465949845,dqy:.01629804450161687,dqz:-.010699418563067942,dqw:.9998037011026928},{dt:62.10000002384186,dqx:-.0004631141417149043,dqy:.021386143077012865,dqz:-.014812749711703016,dqw:.9996614431173987},{dt:106.5,dqx:-.0034944444422841114,dqy:.011063325388782186,dqz:-.008281559423513107,dqw:.999898398570023},{dt:59.80000001192093,dqx:.0076979916903724965,dqy:-.10080065145465783,dqz:.08502418545912137,dqw:.9912370339516497},{dt:52.80000001192093,dqx:.021872201473452715,dqy:.0034389547641060503,dqz:.028677211549543724,dqw:.9993434834583039},{dt:56.09999996423721,dqx:-.018956650515163917,dqy:.011532185598542188,dqz:.04410330186342844,dqw:.9987805328806273},{dt:112.40000003576279,dqx:-.0067311922300570814,dqy:-.0017836659381486042,dqz:-.017691376101948736,dqw:.9998192460633083},{dt:57,dqx:.0011986305053393598,dqy:.03562536162479418,dqz:-.0059576659677309934,dqw:.9993467381796125},{dt:56.299999952316284,dqx:.018154527770109813,dqy:-.010623665972428475,dqz:.00173899743272396,dqw:.9997772385540087},{dt:55.5,dqx:.026357639296583066,dqy:-.015327057042800574,dqz:-.0042554125618047,dqw:.9995260114859676},{dt:56.60000002384186,dqx:.027319301253830863,dqy:-.009880016710662298,dqz:.002613720412502074,dqw:.9995745142381357},{dt:55.39999997615814,dqx:.0029697363859182146,dqy:.0009344118204832608,dqz:.03834049529812292,dqw:.9992598830938039},{dt:168.9000000357628,dqx:-.009684964837076399,dqy:-.003479084625745754,dqz:.0008358970992840137,dqw:.9999466979306002},{dt:57.09999996423721,dqx:-.0018250058308149908,dqy:-.005602577507376305,dqz:-.007958506691149808,dqw:.9999509701231548},{dt:5.800000011920929,dqx:-.06588156779635526,dqy:-.05781333794880317,dqz:.023495096863022792,dqw:.9958740971645509},{dt:106.69999998807907,dqx:-.008828413540129046,dqy:-.0006831533929326228,dqz:-.004038227114279258,dqw:.9999526414473736},{dt:2.400000035762787,dqx:.02046079154127265,dqy:-.008443039361792137,dqz:.003050187594150884,dqw:.9997503525638187},{dt:109.69999998807907,dqx:.01734731438466404,dqy:.008802625737522662,dqz:-.005851616151457448,dqw:.9997936502359779},{dt:56.60000002384186,dqx:.2593300453778342,dqy:.10180295773245285,dqz:-.0967071225081092,dqw:.9555269843481433},{dt:58.5,dqx:-.006423979397003593,dqy:-.005483392780178009,dqz:.00782555054898193,dqw:.999933710628325},{dt:53.299999952316284,dqx:-.04920386423994577,dqy:.00037868098978027787,dqz:.0034050868372804965,dqw:.9987828801737623},{dt:65.70000004768372,dqx:-.04961115284076498,dqy:-.007957821476806015,dqz:-.0028858418165690347,dqw:.998732736275408},{dt:101.5,dqx:-.02188992041878557,dqy:-.002839348599855518,dqz:-.0015217983331195784,dqw:.9997551968424176},{dt:61.59999996423721,dqx:.0032241904653224907,dqy:.001670745040760091,dqz:.015912826403185032,dqw:.9998667887087329},{dt:52.40000003576279,dqx:-.009139268780064547,dqy:.0011593362845022104,dqz:.013039397244989481,dqw:.9998725437899734},{dt:56.5,dqx:-.07265861336076948,dqy:-.03807103415951596,dqz:.021925630146701625,dqw:.9963887740260752},{dt:112.69999998807907,dqx:-.00843383141516918,dqy:-.008033439191724445,dqz:.007414291678649057,dqw:.9999046767673994},{dt:56.30000001192093,dqx:-.007329996090495727,dqy:-.007542762379996182,dqz:.009915451743535933,dqw:.9998955253973856},{dt:56.299999952316284,dqx:-.0029092765842035073,dqy:-.008153524771069953,dqz:.009855450934801419,dqw:.9999139594137267},{dt:56.10000002384186,dqx:.002675546161087325,dqy:-.009511041541332754,dqz:.010622321000741786,dqw:.9998947683822014},{dt:60,dqx:.005914444503230892,dqy:-.01821032626004704,dqz:.019515175354623604,dqw:.999626210788112},{dt:109,dqx:.002172371163946238,dqy:-.01021772546627403,dqz:.013246037526647395,dqw:.9998577005652678},{dt:58.80000001192093,dqx:.25332782102178075,dqy:-.2657226999887175,dqz:.21267852156657485,dqw:.9055298494645656},{dt:53.39999997615814,dqx:-.003586668365487433,dqy:.010477724492039209,dqz:-.021588970846087928,dqw:.9997055913804385},{dt:56.19999998807907,dqx:-.008449038814470136,dqy:.005816775192138135,dqz:-.006234109155031628,dqw:.9999279547810028},{dt:57.40000003576279,dqx:-.00039075608113864346,dqy:.007887120286855342,dqz:-.005732410907339655,dqw:.9999523889208204},{dt:115.5,dqx:-.0008762157235354118,dqy:.0050915771433585055,dqz:-.0039456905921087665,dqw:.999978869583728},{dt:53.69999998807907,dqx:-.001969088451864387,dqy:.0020092263506584773,dqz:-.002958378864172412,dqw:.9999916668125972},{dt:54.60000002384186,dqx:-.0014683504244588363,dqy:-.0003182180698695358,dqz:-.0008863897086055644,dqw:.9999984784976303},{dt:60.89999997615814,dqx:-.30137646939500196,dqy:.24563357212079212,dqz:-.18414618437958102,dqw:.9027328257688565},{dt:50.5,dqx:-.005631644189808729,dqy:.0169919531539231,dqz:-.010697920052346474,dqw:.9997825326631227},{dt:115.19999998807907,dqx:-.007492134207524356,dqy:.01971214638191854,dqz:-.005979329463145541,dqw:.999759744553263},{dt:55.10000002384186,dqx:-.052165245290485496,dqy:.1850411623519656,dqz:-.01927776316113254,dqw:.9811559118033794},{dt:61.19999998807907,dqx:.004439462576671882,dqy:.03190055121925367,dqz:-.018719431502324857,dqw:.9993058735383116},{dt:51.30000001192093,dqx:.010870418554669456,dqy:.026241218198211846,dqz:-.018476863848358824,dqw:.9994257541059512},{dt:115.69999998807907,dqx:.0037929785007702055,dqy:.029420898657219363,dqz:.0030603744269441097,dqw:.9995552301622261},{dt:53.80000001192093,dqx:.006433572172625662,dqy:.04312803395652143,dqz:.032438342121703746,dqw:.9985220757682526},{dt:55.39999997615814,dqx:.006982970186530834,dqy:.06164440540970417,dqz:.06714143546012105,dqw:.9958128504158866},{dt:58.10000002384186,dqx:-.01581382349052855,dqy:.051618312059380056,dqz:.10314711708395735,dqw:.9931999522170849},{dt:110.5,dqx:-.058351435726532924,dqy:.08993216775637775,dqz:-.03445322706672081,dqw:.9936399198381575},{dt:56.30000001192093,dqx:.04571230397228821,dqy:.03243615832495292,dqz:.04411709146929273,dqw:.9974527372958346},{dt:57.59999996423721,dqx:.02908462611528344,dqy:.029453617447369768,dqz:.03993968139740536,dqw:.998344324766196},{dt:57.90000003576279,dqx:.0005823812282689626,dqy:.009026815895323587,dqz:-.005987914141672282,dqw:.9999411594244577},{dt:53.09999996423721,dqx:-.01566369587094592,dqy:.003913502305954608,dqz:-.037885702648819436,dqw:.9991516434786907},{dt:112.5,dqx:.010689781190226334,dqy:.00239056856794459,dqz:-.0012490738184772476,dqw:.9999392249405075},{dt:55.10000002384186,dqx:.006610042592985709,dqy:-.0023602774255204184,dqz:.0013478057214035694,dqw:.9999744595974094},{dt:57.59999996423721,dqx:.07998870701940189,dqy:.06534541702577254,dqz:-.0008538152797458731,dqw:.994651222400375},{dt:58.5,dqx:.010244286773332794,dqy:-.005338859764990378,dqz:.005161120321639234,dqw:.999919953797273},{dt:114,dqx:-.01267165635809933,dqy:-.007931025975459,dqz:-.009825168829941007,dqw:.9998399842022632},{dt:52.700000047683716,dqx:-.0052173626372866485,dqy:-.005785878213075274,dqz:-.007701667930269489,dqw:.9999399917252566},{dt:56.299999952316284,dqx:.007471549256923506,dqy:.00010681299370712827,dqz:.02995867893666771,dqw:.9995232073839283},{dt:58.60000002384186,dqx:.004260325896195297,dqy:.0009413852355179553,dqz:.02735152236791566,dqw:.999616355228972},{dt:110.80000001192093,dqx:.0027791549270350414,dqy:.0008164192089807343,dqz:.0051287829918728045,dqw:.9999826525208271},{dt:5.199999988079071,dqx:-.1398551617431132,dqy:-.05334783732264178,dqz:-.0983431706451427,dqw:.9838308608568167},{dt:106.30000001192093,dqx:-.002363725642744209,dqy:.0010703085803036583,dqz:.0022114382275091743,dqw:.9999941883739096},{dt:59.69999998807907,dqx:-.004692663989435341,dqy:-.00028068564467464974,dqz:.0006101283954636702,dqw:.9999887638686707},{dt:55,dqx:.12680555065615726,dqy:.05868011715217614,dqz:.024919990643841074,dqw:.9898767550761594},{dt:54.30000001192093,dqx:.001420842946799782,dqy:.0008506671523286213,dqz:.005839617800820263,dqw:.9999815780476444},{dt:112.09999996423721,dqx:.0029436577608870137,dqy:.002151024035926208,dqz:.003060656246717322,dqw:.9999886701147783},{dt:56.80000001192093,dqx:.0033366170748865883,dqy:-.0021165915668081847,dqz:.006558026211792516,dqw:.9999706892298594},{dt:56.5,dqx:.007496279825093497,dqy:-.005359748669605757,dqz:.0027999857060324734,dqw:.999953618405888},{dt:55.5,dqx:-.003145207501473157,dqy:-.010272733416345686,dqz:-.004248269093502129,dqw:.9999332631869179},{dt:113.5,dqx:-.022775217243343557,dqy:-.011233626795334545,dqz:-.02618289287701104,dqw:.9993345542055135},{dt:55.40000003576279,dqx:-.08686571245983948,dqy:-.022706304959318163,dqz:-.013660636461828503,dqw:.9958675407529842},{dt:112.5,dqx:8857310221036495e-20,dqy:-.004937862428393364,dqz:.002457245533287994,dqw:.9999847856911788},{dt:2.799999952316284,dqx:.0023397876498326177,dqy:-.005257576183218815,dqz:.002128989760232805,dqw:.9999811751673288},{dt:110.60000002384186,dqx:.0011714847427545163,dqy:-3862377425162267e-20,dqz:.0024578581690762463,dqw:.9999962925255884},{dt:55,dqx:.3830315771305071,dqy:.12211137764324208,dqz:-.022925127386175692,dqw:.9153414996083776},{dt:56.19999998807907,dqx:.003792629405044683,dqy:-.0029039499268128655,dqz:-.0038309934830653147,dqw:.9999812530872524},{dt:56.19999998807907,dqx:-.009748620390500293,dqy:.0034234002957801712,dqz:-.012984834808611519,dqw:.9998623099186658},{dt:116.80000001192093,dqx:-.007061703242911195,dqy:-.0005241029250880186,dqz:-.0013399797701169197,dqw:.9999740307216227},{dt:54.10000002384186,dqx:-.007819798895463526,dqy:.0012975905524728049,dqz:.0008419954283623021,dqw:.9999682285191324},{dt:55.69999998807907,dqx:-.001597149306823296,dqy:-.0005036749725486483,dqz:.006695420311835953,dqw:.9999761831026085},{dt:55.60000002384186,dqx:.0010757142076155283,dqy:.00044685774396570344,dqz:.003368030195372629,dqw:.9999936497446887},{dt:55.299999952316284,dqx:-.23339330093699678,dqy:-.07293976701296252,dqz:.03240239894741506,dqw:.9691013579643153},{dt:56.40000003576279,dqx:.009864364640226756,dqy:.012059890259445899,dqz:-.006307510271368071,dqw:.9998587243562721},{dt:112.69999998807907,dqx:.006654450359732665,dqy:.01137841951526769,dqz:-.016296363167069904,dqw:.9997803150729021},{dt:61.19999998807907,dqx:.0040749616789472615,dqy:.005141228962197764,dqz:-.009710288583762123,dqw:.9999313340163379},{dt:51.5,dqx:-.0001702010707577352,dqy:.003780813318099846,dqz:.002228372260613915,dqw:.9999903553731494},{dt:56.19999998807907,dqx:.009594585048743408,dqy:.007759107434033463,dqz:.0077708692741003515,dqw:.9998936712372445},{dt:112.80000001192093,dqx:.008053813457030575,dqy:.003549048543955269,dqz:.0004729044451581149,dqw:.9999611575979427},{dt:55.90000003576279,dqx:.053599183391366205,dqy:.016469427366509415,dqz:.05517054620575568,dqw:.9969012470316991},{dt:57.69999998807907,dqx:-.004813361276364908,dqy:.007175616339782601,dqz:-.006784900597977241,dqw:.9999396517826679},{dt:54.59999996423721,dqx:.02061018070201154,dqy:.006500548327676464,dqz:.003065511380200031,dqw:.9997617546009888},{dt:61.30000001192093,dqx:.04496845705805444,dqy:.021164451694059797,dqz:.00488966508674251,dqw:.9987522190361565},{dt:51.69999998807907,dqx:-.013047899657914683,dqy:-.006557900329875993,dqz:.004875068942261203,dqw:.9998814829571493},{dt:168.80000001192093,dqx:.009820570797358819,dqy:.0034279145102481118,dqz:-.003987498005791047,dqw:.9999379509004437},{dt:1.100000023841858,dqx:.011348529828384859,dqy:.003324233255079606,dqz:-.004220614273907312,dqw:.9999211702725126},{dt:54.69999998807907,dqx:.008127216980264685,dqy:.0015099859214837974,dqz:-.0013192923200628327,dqw:.9999649632634369},{dt:56.5,dqx:.000631353862711673,dqy:.0003274625698157091,dqz:-.0014268795688322173,dqw:.9999987290868231},{dt:57.5,dqx:-.004433030056274904,dqy:-.00019094726334241419,dqz:-.0019498456924114432,dqw:.9999882548737453},{dt:111.10000002384186,dqx:-.2141941791925046,dqy:-.06796781317091316,dqz:-.03018957907573145,dqw:.9739557583833277},{dt:56.39999997615814,dqx:.007262813699934764,dqy:.004719522241792007,dqz:-.00531581852228326,dqw:.9999483585267828},{dt:58.30000001192093,dqx:.007571804609859622,dqy:.006099640831835451,dqz:-.004152375673068458,dqw:.9999441084045361},{dt:53.59999996423721,dqx:.0054057407885824684,dqy:.006034421373405652,dqz:-.00396591467383428,dqw:.9999593167954458},{dt:113.90000003576279,dqx:-.00015734183571909242,dqy:.003277209788760782,dqz:.0003626564920772299,dqw:.9999945517950665},{dt:55.19999998807907,dqx:-.015133430179233345,dqy:-.0026398257159930827,dqz:.004013883311602703,dqw:.9998739417306366},{dt:112.39999997615814,dqx:-.014366811394007103,dqy:-.003427834378699146,dqz:.0022125119158504674,dqw:.9998884685167959},{dt:1.5,dqx:.09368016732851586,dqy:.011396539765120534,dqz:.0036518706593555612,dqw:.995530415894648},{dt:114,dqx:-.015153481570531431,dqy:-.007044756395038737,dqz:-.00773783596508904,dqw:.9998304202704593},{dt:53.5,dqx:-.02110908265495303,dqy:-.0107496553183343,dqz:-.012905201557735752,dqw:.9996360874402032},{dt:56.10000002384186,dqx:-.030823489005348453,dqy:.03366794850349285,dqz:.023256494848263982,dqw:.9986868964878212},{dt:57.5,dqx:-.011297337191044804,dqy:-.010778835384063434,dqz:-.015362463486275298,dqw:.9997600620127749},{dt:55.30000001192093,dqx:.018114022593468667,dqy:-.00972624755690403,dqz:.01007067114006642,dqw:.99973789758953},{dt:59.09999996423721,dqx:.018207057151948328,dqy:.005997969948778742,dqz:-.011758830029428537,dqw:.9997470966913071},{dt:109.5,dqx:.024233202067616203,dqy:.005469804854975169,dqz:-.0022383369966293143,dqw:.9996888630968576},{dt:58.5,dqx:.01861864749711486,dqy:.003998616450489684,dqz:-.003930215495013486,dqw:.9998109373466679},{dt:53.700000047683716,dqx:.016137190694049282,dqy:.0011302518618426793,dqz:-.0010670137390822454,dqw:.999868578908705},{dt:62.19999998807907,dqx:-.1457702979841292,dqy:-.04306022321507112,dqz:.021876608233237806,dqw:.9881387814545565},{dt:108.09999996423721,dqx:.007966232972467294,dqy:-.009607159656284475,dqz:-.005184492986948544,dqw:.9999086771540864},{dt:59.200000047683716,dqx:.005661508453062391,dqy:-.0003789639201698114,dqz:-.03231854988262615,dqw:.9994615125365595},{dt:51.799999952316284,dqx:.0023534661693136367,dqy:.0066152657887972866,dqz:.00434275028430775,dqw:.9999659194070072},{dt:58,dqx:.23429441709055546,dqy:.039217327871569466,dqz:-.02083821980103149,dqw:.9711508100755177},{dt:58.60000002384186,dqx:.03689190620495693,dqy:-.009502043523059112,dqz:.027206441551519002,dqw:.9989036529933976},{dt:52.80000001192093,dqx:.03251218176640182,dqy:-.016640612520951906,dqz:.027959039097560274,dqw:.9989416099975297},{dt:115.5,dqx:.04044341452015012,dqy:.000270229217370313,dqz:-.0008494272811302717,dqw:.999181432809585},{dt:53.09999996423721,dqx:.00982596476334707,dqy:.03581414185806214,dqz:-.025790445696626467,dqw:.9989773023298427},{dt:60.60000002384186,dqx:-.027767152180109448,dqy:.016114645320858892,dqz:.014999527985060719,dqw:.9993719615969896},{dt:51.5,dqx:.0013151865172284513,dqy:.0031490201411726593,dqz:.0007930587012234258,dqw:.9999938624884013},{dt:56.10000002384186,dqx:-.12780128312656142,dqy:-.045952973938465216,dqz:.024319527077835676,dqw:.9904361245532828},{dt:112.59999996423721,dqx:.007542518013686439,dqy:.0013412032883220182,dqz:.006308411925841034,dqw:.9999507565549048},{dt:113.40000003576279,dqx:.01045916297731892,dqy:.0016524283989373667,dqz:.00509144989514271,dqw:.9999309738817803},{dt:1.2999999523162842,dqx:.0022377810147481284,dqy:.0016264774315635638,dqz:-.0012621739824773934,dqw:.9999953769013797},{dt:55,dqx:-.0526114429992998,dqy:-.015379176144827963,dqz:.027030184409923066,dqw:.9981306959198296},{dt:165.80000001192093,dqx:-.045273591964863434,dqy:.0007625855595281839,dqz:-.025547561645149958,dqw:.9986476067301474},{dt:.19999998807907104,dqx:.006018858121261507,dqy:-.007961874300409955,dqz:-.0016828511404769642,dqw:.9999487736462201},{dt:59,dqx:.02171151070287447,dqy:.010435878135857779,dqz:.001985656835554608,dqw:.9997078372792043},{dt:53.10000002384186,dqx:.022735041582980557,dqy:.00919829326876384,dqz:-.018233438611976644,dqw:.9995329164172361},{dt:56.19999998807907,dqx:-.0006381989454427594,dqy:.0013455566788101725,dqz:-.006925710850822723,dqw:.9999749080394671},{dt:113,dqx:-.01513939804246521,dqy:.00370228769911804,dqz:-.0031976985354618993,dqw:.9998734251978003},{dt:57,dqx:-.11169193126033716,dqy:.13706219655195195,dqz:-.1029116620492332,dqw:.9788503749715554},{dt:55.80000001192093,dqx:.004748961388005507,dqy:-.006303851223934593,dqz:-.006394092100141274,dqw:.9999484108751293},{dt:55.5,dqx:.008247610792142066,dqy:-.01040654877758631,dqz:-.006729372976355785,dqw:.999889191959842},{dt:112.60000002384186,dqx:.006112139359839699,dqy:-.0066834667278514205,dqz:5130456503738001e-20,dqw:.999958984355251},{dt:56.09999996423721,dqx:-.041201798387117586,dqy:-.0627045699179081,dqz:.019698425166614728,dqw:.9969867204567137},{dt:59,dqx:-.013821404710045202,dqy:-.011297042506770105,dqz:.01284765659989745,dqw:.9997581124063625},{dt:53.60000002384186,dqx:-.015654343462244223,dqy:-.014837990748093263,dqz:.018724823990959247,dqw:.9995919950298889},{dt:56.80000001192093,dqx:-.021949406569167457,dqy:-.016245977483290777,dqz:.012254866382905377,dqw:.9995519546360816},{dt:172.0999999642372,dqx:-.025678040840745833,dqy:-.016150353013364704,dqz:.012509723228724227,dqw:.9994615105850078},{dt:.5,dqx:-.030818241939871958,dqy:-.015600721300453091,dqz:.007823512352949806,dqw:.9993726262576462},{dt:51.80000001192093,dqx:-.013760426579401304,dqy:-.006438612093451868,dqz:.0017996339901241165,dqw:.9998829712782215},{dt:56.10000002384186,dqx:.10124169377093183,dqy:.05499369248950736,dqz:-.016339531254897684,dqw:.9932063395624964},{dt:59.299999952316284,dqx:.0054155181859466455,dqy:.0011943389578813746,dqz:.007018274232793109,dqw:.9999599939717713},{dt:109.5,dqx:.003633421644688415,dqy:.002837408127780036,dqz:.009188253171175942,dqw:.9999471602869475},{dt:56.90000003576279,dqx:-.0014102737784439465,dqy:-.002387343957974533,dqz:.0045095647054371815,dqw:.9999859876732592},{dt:55.80000001192093,dqx:-.004930902424352331,dqy:-.006879182996502142,dqz:.008498009938438689,dqw:.9999280708479327},{dt:56.09999996423721,dqx:-.001078426461489976,dqy:.0005160400974380946,dqz:.004352072682398567,dqw:.9999898150293092},{dt:112.69999998807907,dqx:.000765745841710512,dqy:.0042769660197974485,dqz:-.0042897031160124,dqw:.9999813596473424},{dt:58.200000047683716,dqx:-.7420939895709647,dqy:-.028964787686750856,dqz:-.12398050342998347,dqw:.6580929922785672},{dt:54.19999998807907,dqx:-.005520956359298758,dqy:-.0061058645977933035,dqz:.0043164953432076325,dqw:.9999568017301269},{dt:57.39999997615814,dqx:.010755843849248938,dqy:-.0029284627615412673,dqz:.016113353361922815,dqw:.9998080294598453},{dt:55.90000003576279,dqx:.01261723073301874,dqy:.0013678547206124742,dqz:.007782418988435222,dqw:.9998891780676405},{dt:55.39999997615814,dqx:-.5582226503934375,dqy:-.07955403472012632,dqz:-.1421030836042792,dqw:.8135510689425897},{dt:112.80000001192093,dqx:-.0026837122564980897,dqy:.0005118127941790701,dqz:.007912807778954402,dqw:.9999649609907544},{dt:56,dqx:.003115917720774075,dqy:-.0023485703126362133,dqz:.008132614120316718,dqw:.9999593171033581},{dt:58.5,dqx:.0015615758174826414,dqy:.0011604172421731535,dqz:-.010491236963392787,dqw:.9999430728095318},{dt:53.89999997615814,dqx:-.0011920224380706657,dqy:.006536300797782078,dqz:-.008643125304951985,dqw:.9999405743539719},{dt:114.40000003576279,dqx:.012288308150129105,dqy:.00919722977260683,dqz:.0031701481692746752,dqw:.999877171760563},{dt:54.5,dqx:.007281109888397313,dqy:-5106729773160165e-20,dqz:-.0004132047414070125,dqw:.9999734056927543},{dt:56.19999998807907,dqx:.682187596726171,dqy:.12908238277071302,dqz:.1860746144269732,dqw:.695222309191139},{dt:57.19999998807907,dqx:-.0006378824561437313,dqy:-.001085382003086638,dqz:-.004849539289300945,dqw:.9999874484315098},{dt:56.39999997615814,dqx:.002723688278459557,dqy:-.0012895088223086049,dqz:-.0018974030523634766,dqw:.9999936592553054},{dt:111.5,dqx:.002856499009899298,dqy:.00045872683864003894,dqz:-.0016822933596135328,dqw:.9999943999203925},{dt:56.200000047683716,dqx:.008551365900809316,dqy:-.0006390897052016842,dqz:.01136311191797511,dqw:.999898667562428},{dt:58,dqx:.003188622826632508,dqy:.00556791809469126,dqz:-.019097784683545616,dqw:.9997970321984063},{dt:55,dqx:-.009064699222621474,dqy:.002664592999936405,dqz:-.011057491563995884,dqw:.9998942259321534},{dt:55.69999998807907,dqx:-.9592549831282637,dqy:-.14804196795814345,dqz:-.24005105583281072,dqw:-.016998342867093355},{dt:112.5,dqx:-.004476244335799926,dqy:.002528517352326733,dqz:.0025849810903907505,dqw:.9999834437176484},{dt:60.30000001192093,dqx:-.0051298971337567474,dqy:.0063323748542335485,dqz:-.0014758220916243903,dqw:.9999657029784851},{dt:52.09999996423721,dqx:-.1601555819419321,dqy:-.047503685299172704,dqz:-.020652106185213306,dqw:.9857317484822898},{dt:56.30000001192093,dqx:.008512028445579021,dqy:-.0011841298120218197,dqz:.003113313552968358,dqw:.9999582243709236},{dt:112.60000002384186,dqx:.011913067572452966,dqy:.0032999336488858787,dqz:.003865127629771467,dqw:.9999161215058655},{dt:56.19999998807907,dqx:-.0006970250266402328,dqy:.004589077191424147,dqz:.002761879889971855,dqw:.9999854131666704},{dt:56.80000001192093,dqx:-.004863976903080567,dqy:.0026926309594624337,dqz:.0030168304535644758,dqw:.999979994900506},{dt:55.799999952316284,dqx:-.0015231303279912773,dqy:.0031107709587165685,dqz:.0002333694802739983,dqw:.9999939743402115},{dt:112.20000004768372,dqx:-.0014814179240610138,dqy:.00277213783958628,dqz:-.005866488560027208,dqw:.9999778522370921},{dt:56.39999997615814,dqx:-.01975597650372782,dqy:.05705014518095105,dqz:-.019868208355802157,dqw:.9979780742200435},{dt:58.39999997615814,dqx:.002774161156958465,dqy:-.002496059324496803,dqz:.006259182027770996,dqw:.9999734478265244},{dt:54,dqx:.0005216792290381879,dqy:-.002485750601412838,dqz:.0032188817870188458,dqw:.9999915938120535},{dt:113.40000003576279,dqx:-.0018948335746395081,dqy:.0003479873749163455,dqz:-.00018564412113529494,dqw:.9999981270216317},{dt:1,dqx:.34413091406637925,dqy:.07268103117411281,dqz:-.0011428421353849097,dqw:.9361036671240848},{dt:113.59999996423721,dqx:.20521036982373878,dqy:.01121441468258807,dqz:-.0030525942247384454,dqw:.978648876098384},{dt:53.5,dqx:.1707762167980856,dqy:.02115289695613001,dqz:.04143190253265907,dqw:.9842110729813096},{dt:56.200000047683716,dqx:-.024024296861203366,dqy:-.0018852822519281175,dqz:.014777657080788547,dqw:.9996003700091142},{dt:58.799999952316284,dqx:-.00984621386116785,dqy:-.0038768308743366334,dqz:.011418565172891214,dqw:.9998788119689128},{dt:167.80000001192093,dqx:-.008995826904829692,dqy:-.004663883221003703,dqz:.0055639079511183714,dqw:.9999331808775578},{dt:.5,dqx:-.004308527828121457,dqy:-.0019823418227874075,dqz:.0001425482757405564,dqw:.999988743231063},{dt:54,dqx:.1886017243202795,dqy:-.005544118671357394,dqz:.06627051287073497,dqw:.9797994036819092},{dt:56.5,dqx:-.006256430016309862,dqy:-.0074409446485595825,dqz:.01709074540034937,dqw:.9998066792374658},{dt:112.40000003576279,dqx:.0022707773092715145,dqy:-.003843069711425541,dqz:.004638282844793744,dqw:.9999792801442721},{dt:59.299999952316284,dqx:-7855682826268806e-21,dqy:-.002548863567998199,dqz:-.0010860709707729444,dqw:.9999961618339575},{dt:53.10000002384186,dqx:-.0011566755011677803,dqy:.0008675669363870202,dqz:9288843304010481e-20,dqw:.9999989504000165},{dt:56.69999998807907,dqx:-.001554405048807203,dqy:.0027664354240595976,dqz:.0015870786468637696,dqw:.9999937059008707},{dt:112.10000002384186,dqx:-.0014906190149571487,dqy:.001133325806983252,dqz:.0012143990018603674,dqw:.9999975094282145},{dt:.3999999761581421,dqx:-.029709713407167396,dqy:.02318455851070488,dqz:-.05665472285702765,dqw:.9976823400030298},{dt:112.69999998807907,dqx:.0026145706632014643,dqy:-.000657440463508064,dqz:-.000633881543773313,dqw:.9999961649858826},{dt:55.700000047683716,dqx:.005238215821881309,dqy:-60933985009489766e-21,dqz:.0014374859840250035,dqw:.9999852453992002},{dt:59.19999998807907,dqx:.03540161286204812,dqy:-.01815541003293184,dqz:.03625117333709045,dqw:.9985504290345012},{dt:53.30000001192093,dqx:.0011129933292776048,dqy:-.008191342909025318,dqz:.04168066759913404,dqw:.9990967846488581},{dt:113.5,dqx:.013702523221161826,dqy:10894580036766022e-21,dqz:.03149014884750344,dqw:.9994101316597926},{dt:55.69999998807907,dqx:.00932583192719261,dqy:-.0024815927207761795,dqz:.00316616408139549,dqw:.9999484216505589},{dt:112.59999996423721,dqx:-.002325265338728528,dqy:.00020857061954594053,dqz:-.011144946974156638,dqw:.9999351677965649},{dt:.5,dqx:-.007504188361502313,dqy:.0005252868888668202,dqz:-.010760089669381915,dqw:.9999138121363393},{dt:115,dqx:-.025920919416004225,dqy:-.0017849894050026155,dqz:-.017929689105534347,dqw:.9995015987971364},{dt:53,dqx:-.7343595837117938,dqy:-.0943541156954921,dqz:-.19275319461447382,dqw:.6439406095501954},{dt:55.90000003576279,dqx:.00802070551749373,dqy:-.00907756189464098,dqz:.01465411839278643,dqw:.9998192451474323},{dt:57.69999998807907,dqx:.017050367678882513,dqy:-.005876982986946271,dqz:.022705333461170304,dqw:.9995795185303686},{dt:55.60000002384186,dqx:.012721171632768815,dqy:-.0007331176009268553,dqz:.012412341066262857,dqw:.9998417715419415}]}];const t=Ty(n,window.location);t!==null&&(e.page=t,e.pageParams=window.history.state);const i=localStorage.getItem("settings");i!==null&&(e.settings=JSON.parse(i));const r=localStorage.getItem("history");return r!==null&&(e.history=JSON.parse(r)),e.pbTime=Ly(e.history),e}const p1={Start:"start",Cancel:"cancel",Pause:"pause",Reconstruct:"reconstruct"};function xr(n){const e=n.value;if(/^#[0-9a-fA-F]{3}([0-9a-fA-F]{3})?$/.test(e))return e}function vh(n){if(/^[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}$/.test(n))return n}class CD{constructor(e,t){this.cube=t,this.containerDiv=document.getElementById("container"),this.overlayDiv=document.getElementById("overlay");const i=document.getElementById("importHistory"),r=document.getElementById("enableGyroscope"),s=document.getElementById("recordGyroscope"),a=document.getElementById("showCube");this.macInput=document.getElementById("mac"),this.btnA=document.getElementById("start"),this.connectBtn=document.getElementById("connect"),this.scrambleTxt=document.getElementById("scramble"),this.timerTxt=document.getElementById("timer"),this.powerBar=document.getElementById("powerBar"),this.historyTable=document.getElementById("historyTable"),this.stageTable=document.getElementById("stageTable"),this.pbTable=document.getElementById("pbTable"),this.dateField=document.getElementById("dateField"),this.timeField=document.getElementById("timeField"),this.countField=document.getElementById("countField"),this.tpsField=document.getElementById("tpsField"),this.scrambleField=document.getElementById("scrambleField"),this.moveField=document.getElementById("moveField"),this.pageNumberTxt=document.getElementById("pageNumber"),this.totalPagesTxt=document.getElementById("totalPages");const o=document.getElementById("redColor"),l=document.getElementById("redSwatch"),c=document.getElementById("orangeColor"),d=document.getElementById("orangeSwatch"),u=document.getElementById("whiteColor"),f=document.getElementById("whiteSwatch"),h=document.getElementById("yellowColor"),m=document.getElementById("yellowSwatch"),x=document.getElementById("greenColor"),p=document.getElementById("greenSwatch"),v=document.getElementById("blueColor"),g=document.getElementById("blueSwatch"),_=document.getElementById("internalColor"),y=document.getElementById("internalSwatch");Wi(this.macInput,"input").subscribe(()=>{const pe=vh(this.macInput.value);this.connectBtn.classList.toggle("disabled",!pe)}),Wi(document.getElementById("settingsBody"),"input").subscribe(pe=>{if(pe.target?.className=="colorInput"&&xr(pe.target)!==void 0){const _e=xr(o),Ie=xr(c),me=xr(u),xe=xr(h),Ee=xr(x),Fe=xr(v),Pe=xr(_),U=this.state.settings.colors,D=[_e!==void 0?_e:U[0],Ie!==void 0?Ie:U[1],me!==void 0?me:U[2],xe!==void 0?xe:U[3],Ee!==void 0?Ee:U[4],Fe!==void 0?Fe:U[5]],be=Pe!==void 0?Pe:this.state.settings.internalColor;l.style.backgroundColor=D[0],d.style.backgroundColor=D[1],f.style.backgroundColor=D[2],m.style.backgroundColor=D[3],p.style.backgroundColor=D[4],g.style.backgroundColor=D[5],y.style.backgroundColor=be,this.state.settings.colors=D,this.state.settings.internalColor=be,localStorage.setItem("settings",JSON.stringify(this.state.settings)),this.cube.updateOptions({colors:D,internalColor:be})}});const M=xh("#enableGyroscope",pe=>({type:"UPDATE_SETTINGS",enableGyroscope:pe})),w=xh("#recordGyroscope",pe=>({type:"UPDATE_SETTINGS",recordGyroscope:pe})),b=xh("#showCube",pe=>({type:"UPDATE_SETTINGS",showCube:pe})),S=_n("#resetSettings",()=>{const pe=xi.DEFAULT_COLORS,_e=xi.DEFAULT_INTERNAL_COLOR;return o.value=l.style.backgroundColor=pe[0],c.value=d.style.backgroundColor=pe[1],u.value=f.style.backgroundColor=pe[2],h.value=m.style.backgroundColor=pe[3],x.value=p.style.backgroundColor=pe[4],v.value=g.style.backgroundColor=pe[5],_.value=y.style.backgroundColor=_e,a.checked=!0,r.checked=!0,s.checked=!1,this.state.settings.colors=xi.DEFAULT_COLORS,this.state.settings.internalColor=_e,this.cube.updateOptions({colors:pe,internalColor:_e}),{type:"UPDATE_SETTINGS",showCube:!0,enableGyroscope:!0,recordGyroscope:!1}}),E=_n("#historyBody",pe=>{const _e=pe?.target?.dataset.num;if(_e!=null)return{type:"GO_TO_PAGE",page:"DETAILED_STATS_PAGE",params:{num:parseInt(_e)}}}),C=_n("#connect",()=>{const pe=vh(this.macInput.value);return pe===void 0?void 0:{type:"CONNECT",macAddress:pe}}),I=_n("#clearHistory",()=>({type:"CLEAR_HISTORY"})),W=_n("#exportHistory",()=>null);Wi(i,"change").subscribe(()=>{const pe=i.files;pe!==null&&pe[0].text().then(_e=>{const Ie=JSON.parse(_e);Ie!=null&&(this.state.history.unshift(...Ie),this.state.pbTime=Ly(this.state.history),localStorage.setItem("history",JSON.stringify(this.state.history)))})});const H=Wi(window,"popstate").pipe(Us(pe=>{const _e=pe,Ie=Ty(e,window.location);return Ie!==null?{type:"GO_TO_PAGE",page:Ie,params:_e.state,popping:!0}:{type:"GO_TO_PAGE",page:"TRAIN_PAGE"}})),A=Kr("#settingsTab","SETTINGS_PAGE"),q=Kr("#solveTab","SOLVE_PAGE"),N=Kr("#scrambleTab","SCRAMBLE_PAGE"),X=Kr("#trainTab","TRAIN_PAGE"),Z=Kr("#historyTab","HISTORY_PAGE"),$=Kr("#adminTab","ADMIN_PAGE"),J=Kr("#helpTab","HELP_PAGE"),R=_n("#start",()=>({type:this.btnA.textContent==="Start"?"START":"CANCEL"})),k=_n("#center",()=>({type:"CENTER"})),j=_n("#reset",()=>({type:"RESET"})),K=_n("#firstPage",()=>({type:"ADJUST_PAGE",pageDelta:-1/0})),B=_n("#prevPage",()=>({type:"ADJUST_PAGE",pageDelta:-1})),oe=_n("#nextPage",()=>({type:"ADJUST_PAGE",pageDelta:1})),Re=_n("#lastPage",()=>({type:"ADJUST_PAGE",pageDelta:1/0}));this.turnSubject=new fn,this.stopTimerSubject=new fn,this.cubeStateSubject=new fn;const Ae=FI(H,M,w,b,S,C,E,I,A,q,N,X,Z,$,J,R,k,j,K,B,oe,Re,this.turnSubject,this.cubeStateSubject);this.state=LD(e),this.cube.updateOptions({colors:this.state.settings.colors,internalColor:this.state.settings.internalColor}),l.style.backgroundColor=this.state.settings.colors[0],d.style.backgroundColor=this.state.settings.colors[1],f.style.backgroundColor=this.state.settings.colors[2],m.style.backgroundColor=this.state.settings.colors[3],p.style.backgroundColor=this.state.settings.colors[4],g.style.backgroundColor=this.state.settings.colors[5],y.style.backgroundColor=this.state.settings.internalColor,o.value=this.state.settings.colors[0],c.value=this.state.settings.colors[1],u.value=this.state.settings.colors[2],h.value=this.state.settings.colors[3],x.value=this.state.settings.colors[4],v.value=this.state.settings.colors[5],_.value=this.state.settings.internalColor,W.subscribe(()=>{const pe=`data:text/json;chatset=utf-8,${encodeURIComponent(JSON.stringify(this.state.history))}`,_e=document.createElement("a");_e.href=pe,_e.download=`history-${new Date().toISOString()}.json`,_e.click()}),this.macInput.value=this.state.settings.macAddress,this.historyTable.innerHTML=f1(this.state.history,this.state.pageNumber),this.pbTable.innerHTML=h1(this.state.history),r.checked=this.state.settings.enableGyroscope,s.checked=this.state.settings.recordGyroscope,a.checked=this.state.settings.showCube,this.containerDiv.classList.toggle("hidden",!this.state.settings.showCube),this.connectBtn.classList.toggle("disabled",!vh(this.macInput.value)),Ae.subscribe(pe=>this.intentHandler(pe)),this.intentHandler({type:"GO_TO_PAGE",page:this.state.page,params:this.state.pageParams,popping:!0})}containerDiv;overlayDiv;macInput;btnA;connectBtn;scrambleTxt;timerTxt;powerBar;historyTable;stageTable;pbTable;dateField;timeField;countField;tpsField;scrambleField;moveField;pageNumberTxt;totalPagesTxt;state;turnSubject;stopTimerSubject;cubeStateSubject;adapter=null;timerSub=null;wakeLock=null;replayer=null;replayerSub=null;async setupAdapter(){let e;const t=this.adapter;if(t===null)throw new Error("Null adapter, this shouldn't happen.");let i=0;t.gyroUpdates.subscribe(({nx:s,ny:a,nz:o,nw:l})=>{const c=window.performance.now(),d=c-i;if(i=c,this.state.settings.enableGyroscope){const u=new Dt(-a,-s,o,l).normalize();if(e!==void 0){const f=u.clone().multiply(e.invert());this.cube.applyQuaternion(f);const h=this.state.buffer;h!==null&&h.push(new NI(d,f.x,f.y,f.z,f.w))}e=u}else e=void 0}),t.emitPowerRequest(),setInterval(()=>{t.emitPowerRequest()},1e4),t.powerResponses.subscribe(({chargeState:s,power:a})=>{s===0?this.powerBar.textContent=a+"%":s===1?this.powerBar.textContent="Charging":this.powerBar.textContent="Charged",this.powerBar.classList.toggle("low",a<=10),this.powerBar.style.width=`${a}%`});let r=-1;t.moveResponses.subscribe(({sequenceNumber:s,lastTurns:a})=>{let o=0;r===-1?o=1:(o=s-r,o<0&&(o+=256),o>a.length&&console.log("WARNING: Some moves were missed."),o=Math.min(a.length,o)),r=s;for(let l=o-1;l>=0;l--){const c=a[l],d=c.value.toString();this.turnSubject.next({type:"TURN",move:new Pc(c.timestamp,d)}),this.cube.turn(d,c.timestamp)}}),this.adapter.goneToSleepNotifications.subscribe(()=>{this.connectBtn.classList.remove("hidden")}),await this.adapter.startNotifications(),this.adapter.emitCubeStateRequest(),this.adapter.cubeStateResponses.subscribe(s=>{this.cube.setState(s.cubeState),this.cubeStateSubject.next({type:"CUBE_STATE",cubeState:s.cubeState})}),this.connectBtn.classList.add("hidden"),this.macInput.classList.add("hidden")}intentHandler(e){ED(this.state,e).forEach(t=>this.dispatcher(t))}dispatcher(e){switch(e.type){case"CONNECT":this.adapter=new uD(e.macAddress),this.adapter.connect().then(()=>this.setupAdapter()).catch(i=>{if(i instanceof Ey)window.alert('Currently, Web Bluetooth is only supported in Google Chrome, Edge, and Opera and must be enabled by enabling "Experimental Web Platform features at about://flags/#enable-experimental-web-platform-features_name');else throw i});break;case"UPDATE_PROPS":if(e.props.scrambleText!==void 0&&(this.scrambleTxt.textContent=e.props.scrambleText),e.props.page!==void 0&&(this.overlayDiv.className=e.props.page,this.timerTxt.textContent=gh(0)),e.props.buttonAText!==void 0&&(e.props.buttonAText===""?this.btnA.classList.add("hidden"):(this.btnA.classList.remove("hidden"),this.btnA.textContent=e.props.buttonAText,this.btnA.className=p1[e.props.buttonAText])),e.props.history!==void 0&&(this.historyTable.innerHTML=f1(e.props.history,this.state.pageNumber),this.pbTable.innerHTML=h1(e.props.history)),e.props.selectedRecording!==void 0){const i=e.props.selectedRecording.moves,r=e.props.selectedRecording.when,s=(typeof r=="string"?new Date(r):r).toISOString(),a=c1(i.map(d=>d.value)),o=Lu(i.map(d=>d.value)),l=i.map(d=>d.timestamp),c=l.reduce((d,u)=>d+u,-l[0])/1e3;this.dateField.textContent=s,this.timeField.textContent=c.toString(),this.countField.textContent=o.length.toString(),this.tpsField.textContent=(o.length/c).toPrecision(3),this.scrambleField.textContent=a.join(" "),this.moveField.textContent=o.join(" "),this.stageTable.innerHTML=AD(i)}e.props.showCube!==void 0&&this.containerDiv.classList.toggle("hidden",!e.props.showCube),e.props.pageNumber!==void 0&&(this.pageNumberTxt.textContent=e.props.pageNumber.toString()),e.props.totalPages!==void 0&&(this.totalPagesTxt.textContent=e.props.totalPages.toString());break;case"START_TIMER":this.timerSub?.unsubscribe(),this.timerSub=oy().pipe(Us(({elapsed:i})=>i)).pipe(qI(this.stopTimerSubject)).subscribe(i=>{this.timerTxt.textContent=gh(i)});break;case"STOP_TIMER":this.stopTimerSubject.next();break;case"START_NOTIFICATIONS":this.adapter!==null&&(this.adapter.startNotifications(),this.adapter.emitCubeStateRequest());break;case"STOP_NOTIFICATIONS":this.adapter!==null&&this.adapter.stopNotifications();break;case"FETCH_CUBE_STATE":this.adapter!==null&&this.adapter.emitCubeStateRequest();break;case"SET_CUBE_STATE":this.adapter!==null&&this.adapter.reset(),this.cube.reset();break;case"CENTER":this.cube.center();break;case"INIT_REPLAY":this.replayer?.pause(),this.replayerSub?.unsubscribe();const t=c1(e.moves.map(i=>i.value));this.replayer=new $I(e.moves,GI(t),e.gyroEntries),this.replayerSub=this.replayer.actions.subscribe(i=>{switch(i.type){case"SET_CUBE":this.cube.setState(i.cubeState),this.cube.center();break;case"MOVE":this.cube.turn(i.move.value,i.move.timestamp);break;case"GYRO":this.state.settings.enableGyroscope&&this.cube.applyQuaternion(i.dq);break;case"TIME":this.timerTxt.textContent=gh(i.elapsedTime);break;case"END":this.btnA.textContent="Start",this.btnA.className=p1.Start;break}}),this.replayer.emitState();break;case"START_REPLAY":this.replayer?.play();break;case"PAUSE_REPLAY":this.replayer?.pause();break;case"WAKELOCK":e.enable?this.wakeLock!==null?this.wakeLock?.release().then(()=>{navigator.wakeLock.request("screen").then(i=>{this.wakeLock=i})}):navigator.wakeLock.request("screen").then(i=>{this.wakeLock=i}):this.wakeLock?.release().then(()=>{this.wakeLock=null});break;default:console.log(JSON.stringify(e))}}}function RD(n,e){new CD(n,e)}function PD(n,e=100){const t=window.innerWidth,i=window.innerHeight,r=new Dn(75,t/i,.1,1e3);r.position.y=25,r.position.z=-50;const s=new B1({antialias:!0});s.setSize(t,i),n.appendChild(s.domElement);const a=new BP(r,s.domElement);a.enableZoom=!0,a.enablePan=!1,a.minDistance=5,a.maxDistance=1e3,a.rotateSpeed=2,a.usePanModAlt=!1;const o=new Ew,l=getComputedStyle(document.querySelector("body")).backgroundColor;o.background=new mt(l);const c=new Aw(16777215);o.add(c);const d=new xi({cubieSize:5,turnTime:e});o.add(d),window.addEventListener("resize",()=>{const f=window.innerWidth,h=window.innerHeight;r.aspect=f/h,r.updateProjectionMatrix(),s.setSize(f,h)});function u(){requestAnimationFrame(u),s.render(o,r)}return u(),d}function ID(n){RD(n,PD(document.getElementById("container"),100));const e=document.getElementById("splash");window.requestIdleCallback(()=>{Fs.exports.initialize("kociemba"),e.style.display="none"})}ID("/smartcube/");
