(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))i(r);new MutationObserver(r=>{for(const s of r)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&i(o)}).observe(document,{childList:!0,subtree:!0});function t(r){const s={};return r.integrity&&(s.integrity=r.integrity),r.referrerPolicy&&(s.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?s.credentials="include":r.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(r){if(r.ep)return;r.ep=!0;const s=t(r);fetch(r.href,s)}})();/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Zp="143",LM=0,Xm=1,CM=2,Fb=1,RM=2,ya=3,Ra=0,qn=1,wo=2,PM=1,lr=0,xo=1,Ym=2,Zm=3,Jm=4,IM=5,fo=100,DM=101,OM=102,Km=103,Qm=104,FM=200,NM=201,BM=202,UM=203,Nb=204,Bb=205,zM=206,GM=207,kM=208,HM=209,VM=210,WM=0,qM=1,$M=2,Xd=3,jM=4,XM=5,YM=6,ZM=7,Jp=0,JM=1,KM=2,Oi=0,QM=1,ew=2,tw=3,nw=4,iw=5,Ub=300,So=301,Eo=302,Yd=303,Zd=304,Pu=306,Jd=1e3,Vn=1001,Kd=1002,rn=1003,e0=1004,t0=1005,Ln=1006,rw=1007,Iu=1008,rs=1009,sw=1010,ow=1011,zb=1012,aw=1013,qr=1014,$r=1015,Pa=1016,cw=1017,lw=1018,vo=1020,uw=1021,fw=1022,si=1023,hw=1024,dw=1025,Jr=1026,To=1027,pw=1028,mw=1029,gw=1030,xw=1031,vw=1033,Ju=33776,Ku=33777,Qu=33778,ef=33779,n0=35840,i0=35841,r0=35842,s0=35843,bw=36196,o0=37492,a0=37496,c0=37808,l0=37809,u0=37810,f0=37811,h0=37812,d0=37813,p0=37814,m0=37815,g0=37816,x0=37817,v0=37818,b0=37819,y0=37820,_0=37821,M0=36492,ss=3e3,Et=3001,yw=3200,_w=3201,Gb=0,Mw=1,Ri="srgb",jr="srgb-linear",tf=7680,ww=519,w0=35044,S0="300 es",Qd=1035;let qo=class{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(t)===-1&&i[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const i=this._listeners;return i[e]!==void 0&&i[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const r=this._listeners[e];if(r!==void 0){const s=r.indexOf(t);s!==-1&&r.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const i=this._listeners[e.type];if(i!==void 0){e.target=this;const r=i.slice(0);for(let s=0,o=r.length;s<o;s++)r[s].call(this,e);e.target=null}}};const zt=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],nf=Math.PI/180,E0=180/Math.PI;function hc(){const n=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(zt[n&255]+zt[n>>8&255]+zt[n>>16&255]+zt[n>>24&255]+"-"+zt[e&255]+zt[e>>8&255]+"-"+zt[e>>16&15|64]+zt[e>>24&255]+"-"+zt[t&63|128]+zt[t>>8&255]+"-"+zt[t>>16&255]+zt[t>>24&255]+zt[i&255]+zt[i>>8&255]+zt[i>>16&255]+zt[i>>24&255]).toLowerCase()}function gn(n,e,t){return Math.max(e,Math.min(t,n))}function Sw(n,e){return(n%e+e)%e}function rf(n,e,t){return(1-t)*n+t*e}function T0(n){return(n&n-1)===0&&n!==0}function ep(n){return Math.pow(2,Math.floor(Math.log(n)/Math.LN2))}let gt=class kb{constructor(e=0,t=0){kb.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,i=this.y,r=e.elements;return this.x=r[0]*t+r[3]*i+r[6],this.y=r[1]*t+r[4]*i+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const i=Math.cos(t),r=Math.sin(t),s=this.x-e.x,o=this.y-e.y;return this.x=s*i-o*r+e.x,this.y=s*r+o*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}},oi=class Hb{constructor(){Hb.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(e,t,i,r,s,o,a,l,c){const u=this.elements;return u[0]=e,u[1]=r,u[2]=a,u[3]=t,u[4]=s,u[5]=l,u[6]=i,u[7]=o,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,r=t.elements,s=this.elements,o=i[0],a=i[3],l=i[6],c=i[1],u=i[4],f=i[7],h=i[2],d=i[5],p=i[8],g=r[0],m=r[3],v=r[6],x=r[1],M=r[4],b=r[7],w=r[2],y=r[5],_=r[8];return s[0]=o*g+a*x+l*w,s[3]=o*m+a*M+l*y,s[6]=o*v+a*b+l*_,s[1]=c*g+u*x+f*w,s[4]=c*m+u*M+f*y,s[7]=c*v+u*b+f*_,s[2]=h*g+d*x+p*w,s[5]=h*m+d*M+p*y,s[8]=h*v+d*b+p*_,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8];return t*o*u-t*a*c-i*s*u+i*a*l+r*s*c-r*o*l}invert(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],f=u*o-a*c,h=a*l-u*s,d=c*s-o*l,p=t*f+i*h+r*d;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const g=1/p;return e[0]=f*g,e[1]=(r*c-u*i)*g,e[2]=(a*i-r*o)*g,e[3]=h*g,e[4]=(u*t-r*l)*g,e[5]=(r*s-a*t)*g,e[6]=d*g,e[7]=(i*l-c*t)*g,e[8]=(o*t-i*s)*g,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,r,s,o,a){const l=Math.cos(s),c=Math.sin(s);return this.set(i*l,i*c,-i*(l*o+c*a)+o+e,-r*c,r*l,-r*(-c*o+l*a)+a+t,0,0,1),this}scale(e,t){const i=this.elements;return i[0]*=e,i[3]*=e,i[6]*=e,i[1]*=t,i[4]*=t,i[7]*=t,this}rotate(e){const t=Math.cos(e),i=Math.sin(e),r=this.elements,s=r[0],o=r[3],a=r[6],l=r[1],c=r[4],u=r[7];return r[0]=t*s+i*l,r[3]=t*o+i*c,r[6]=t*a+i*u,r[1]=-i*s+t*l,r[4]=-i*o+t*c,r[7]=-i*a+t*u,this}translate(e,t){const i=this.elements;return i[0]+=e*i[2],i[3]+=e*i[5],i[6]+=e*i[8],i[1]+=t*i[2],i[4]+=t*i[5],i[7]+=t*i[8],this}equals(e){const t=this.elements,i=e.elements;for(let r=0;r<9;r++)if(t[r]!==i[r])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}};function Vb(n){for(let e=n.length-1;e>=0;--e)if(n[e]>65535)return!0;return!1}function ql(n){return document.createElementNS("http://www.w3.org/1999/xhtml",n)}function Kr(n){return n<.04045?n*.0773993808:Math.pow(n*.9478672986+.0521327014,2.4)}function zl(n){return n<.0031308?n*12.92:1.055*Math.pow(n,.41666)-.055}const sf={[Ri]:{[jr]:Kr},[jr]:{[Ri]:zl}},On={legacyMode:!0,get workingColorSpace(){return jr},set workingColorSpace(n){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(n,e,t){if(this.legacyMode||e===t||!e||!t)return n;if(sf[e]&&sf[e][t]!==void 0){const i=sf[e][t];return n.r=i(n.r),n.g=i(n.g),n.b=i(n.b),n}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(n,e){return this.convert(n,this.workingColorSpace,e)},toWorkingColorSpace:function(n,e){return this.convert(n,e,this.workingColorSpace)}},Wb={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},It={r:0,g:0,b:0},Fn={h:0,s:0,l:0},Cc={h:0,s:0,l:0};function of(n,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?n+(e-n)*6*t:t<1/2?e:t<2/3?n+(e-n)*6*(2/3-t):n}function Rc(n,e){return e.r=n.r,e.g=n.g,e.b=n.b,e}let lt=class{constructor(e,t,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,t===void 0&&i===void 0?this.set(e):this.setRGB(e,t,i)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Ri){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,On.toWorkingColorSpace(this,t),this}setRGB(e,t,i,r=jr){return this.r=e,this.g=t,this.b=i,On.toWorkingColorSpace(this,r),this}setHSL(e,t,i,r=jr){if(e=Sw(e,1),t=gn(t,0,1),i=gn(i,0,1),t===0)this.r=this.g=this.b=i;else{const s=i<=.5?i*(1+t):i+t-i*t,o=2*i-s;this.r=of(o,s,e+1/3),this.g=of(o,s,e),this.b=of(o,s,e-1/3)}return On.toWorkingColorSpace(this,r),this}setStyle(e,t=Ri){function i(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let s;const o=r[1],a=r[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(s[1],10))/255,this.g=Math.min(255,parseInt(s[2],10))/255,this.b=Math.min(255,parseInt(s[3],10))/255,On.toWorkingColorSpace(this,t),i(s[4]),this;if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(s[1],10))/100,this.g=Math.min(100,parseInt(s[2],10))/100,this.b=Math.min(100,parseInt(s[3],10))/100,On.toWorkingColorSpace(this,t),i(s[4]),this;break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const l=parseFloat(s[1])/360,c=parseInt(s[2],10)/100,u=parseInt(s[3],10)/100;return i(s[4]),this.setHSL(l,c,u,t)}break}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=r[1],o=s.length;if(o===3)return this.r=parseInt(s.charAt(0)+s.charAt(0),16)/255,this.g=parseInt(s.charAt(1)+s.charAt(1),16)/255,this.b=parseInt(s.charAt(2)+s.charAt(2),16)/255,On.toWorkingColorSpace(this,t),this;if(o===6)return this.r=parseInt(s.charAt(0)+s.charAt(1),16)/255,this.g=parseInt(s.charAt(2)+s.charAt(3),16)/255,this.b=parseInt(s.charAt(4)+s.charAt(5),16)/255,On.toWorkingColorSpace(this,t),this}return e&&e.length>0?this.setColorName(e,t):this}setColorName(e,t=Ri){const i=Wb[e.toLowerCase()];return i!==void 0?this.setHex(i,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Kr(e.r),this.g=Kr(e.g),this.b=Kr(e.b),this}copyLinearToSRGB(e){return this.r=zl(e.r),this.g=zl(e.g),this.b=zl(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Ri){return On.fromWorkingColorSpace(Rc(this,It),e),gn(It.r*255,0,255)<<16^gn(It.g*255,0,255)<<8^gn(It.b*255,0,255)<<0}getHexString(e=Ri){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=jr){On.fromWorkingColorSpace(Rc(this,It),t);const i=It.r,r=It.g,s=It.b,o=Math.max(i,r,s),a=Math.min(i,r,s);let l,c;const u=(a+o)/2;if(a===o)l=0,c=0;else{const f=o-a;switch(c=u<=.5?f/(o+a):f/(2-o-a),o){case i:l=(r-s)/f+(r<s?6:0);break;case r:l=(s-i)/f+2;break;case s:l=(i-r)/f+4;break}l/=6}return e.h=l,e.s=c,e.l=u,e}getRGB(e,t=jr){return On.fromWorkingColorSpace(Rc(this,It),t),e.r=It.r,e.g=It.g,e.b=It.b,e}getStyle(e=Ri){return On.fromWorkingColorSpace(Rc(this,It),e),e!==Ri?`color(${e} ${It.r} ${It.g} ${It.b})`:`rgb(${It.r*255|0},${It.g*255|0},${It.b*255|0})`}offsetHSL(e,t,i){return this.getHSL(Fn),Fn.h+=e,Fn.s+=t,Fn.l+=i,this.setHSL(Fn.h,Fn.s,Fn.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(Fn),e.getHSL(Cc);const i=rf(Fn.h,Cc.h,t),r=rf(Fn.s,Cc.s,t),s=rf(Fn.l,Cc.l,t);return this.setHSL(i,r,s),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),e.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}};lt.NAMES=Wb;let Ps,qb=class{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Ps===void 0&&(Ps=ql("canvas")),Ps.width=e.width,Ps.height=e.height;const i=Ps.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),t=Ps}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=ql("canvas");t.width=e.width,t.height=e.height;const i=t.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const r=i.getImageData(0,0,e.width,e.height),s=r.data;for(let o=0;o<s.length;o++)s[o]=Kr(s[o]/255)*255;return i.putImageData(r,0,0),t}else if(e.data){const t=e.data.slice(0);for(let i=0;i<t.length;i++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[i]=Math.floor(Kr(t[i]/255)*255):t[i]=Kr(t[i]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}};class $b{constructor(e=null){this.isSource=!0,this.uuid=hc(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const i={uuid:this.uuid,url:""},r=this.data;if(r!==null){let s;if(Array.isArray(r)){s=[];for(let o=0,a=r.length;o<a;o++)r[o].isDataTexture?s.push(af(r[o].image)):s.push(af(r[o]))}else s=af(r);i.url=s}return t||(e.images[this.uuid]=i),i}}function af(n){return typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&n instanceof ImageBitmap?qb.getDataURL(n):n.data?{data:Array.from(n.data),width:n.width,height:n.height,type:n.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Ew=0,wr=class tp extends qo{constructor(e=tp.DEFAULT_IMAGE,t=tp.DEFAULT_MAPPING,i=Vn,r=Vn,s=Ln,o=Iu,a=si,l=rs,c=1,u=ss){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Ew++}),this.uuid=hc(),this.name="",this.source=new $b(e),this.mipmaps=[],this.mapping=t,this.wrapS=i,this.wrapT=r,this.magFilter=s,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new gt(0,0),this.repeat=new gt(1,1),this.center=new gt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new oi,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Ub)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Jd:e.x=e.x-Math.floor(e.x);break;case Vn:e.x=e.x<0?0:1;break;case Kd:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Jd:e.y=e.y-Math.floor(e.y);break;case Vn:e.y=e.y<0?0:1;break;case Kd:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}};wr.DEFAULT_IMAGE=null;wr.DEFAULT_MAPPING=Ub;let Vt=class jb{constructor(e=0,t=0,i=0,r=1){jb.prototype.isVector4=!0,this.x=e,this.y=t,this.z=i,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,r){return this.x=e,this.y=t,this.z=i,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,i=this.y,r=this.z,s=this.w,o=e.elements;return this.x=o[0]*t+o[4]*i+o[8]*r+o[12]*s,this.y=o[1]*t+o[5]*i+o[9]*r+o[13]*s,this.z=o[2]*t+o[6]*i+o[10]*r+o[14]*s,this.w=o[3]*t+o[7]*i+o[11]*r+o[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,r,s;const l=e.elements,c=l[0],u=l[4],f=l[8],h=l[1],d=l[5],p=l[9],g=l[2],m=l[6],v=l[10];if(Math.abs(u-h)<.01&&Math.abs(f-g)<.01&&Math.abs(p-m)<.01){if(Math.abs(u+h)<.1&&Math.abs(f+g)<.1&&Math.abs(p+m)<.1&&Math.abs(c+d+v-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const M=(c+1)/2,b=(d+1)/2,w=(v+1)/2,y=(u+h)/4,_=(f+g)/4,S=(p+m)/4;return M>b&&M>w?M<.01?(i=0,r=.707106781,s=.707106781):(i=Math.sqrt(M),r=y/i,s=_/i):b>w?b<.01?(i=.707106781,r=0,s=.707106781):(r=Math.sqrt(b),i=y/r,s=S/r):w<.01?(i=.707106781,r=.707106781,s=0):(s=Math.sqrt(w),i=_/s,r=S/s),this.set(i,r,s,t),this}let x=Math.sqrt((m-p)*(m-p)+(f-g)*(f-g)+(h-u)*(h-u));return Math.abs(x)<.001&&(x=1),this.x=(m-p)/x,this.y=(f-g)/x,this.z=(h-u)/x,this.w=Math.acos((c+d+v-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}},os=class extends qo{constructor(e,t,i={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Vt(0,0,e,t),this.scissorTest=!1,this.viewport=new Vt(0,0,e,t);const r={width:e,height:t,depth:1};this.texture=new wr(r,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=i.generateMipmaps!==void 0?i.generateMipmaps:!1,this.texture.internalFormat=i.internalFormat!==void 0?i.internalFormat:null,this.texture.minFilter=i.minFilter!==void 0?i.minFilter:Ln,this.depthBuffer=i.depthBuffer!==void 0?i.depthBuffer:!0,this.stencilBuffer=i.stencilBuffer!==void 0?i.stencilBuffer:!1,this.depthTexture=i.depthTexture!==void 0?i.depthTexture:null,this.samples=i.samples!==void 0?i.samples:0}setSize(e,t,i=1){(this.width!==e||this.height!==t||this.depth!==i)&&(this.width=e,this.height=t,this.depth=i,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=i,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new $b(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}};class Xb extends wr{constructor(e=null,t=1,i=1,r=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:i,depth:r},this.magFilter=rn,this.minFilter=rn,this.wrapR=Vn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Tw extends wr{constructor(e=null,t=1,i=1,r=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:i,depth:r},this.magFilter=rn,this.minFilter=rn,this.wrapR=Vn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}let At=class{constructor(e=0,t=0,i=0,r=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=i,this._w=r}static slerpFlat(e,t,i,r,s,o,a){let l=i[r+0],c=i[r+1],u=i[r+2],f=i[r+3];const h=s[o+0],d=s[o+1],p=s[o+2],g=s[o+3];if(a===0){e[t+0]=l,e[t+1]=c,e[t+2]=u,e[t+3]=f;return}if(a===1){e[t+0]=h,e[t+1]=d,e[t+2]=p,e[t+3]=g;return}if(f!==g||l!==h||c!==d||u!==p){let m=1-a;const v=l*h+c*d+u*p+f*g,x=v>=0?1:-1,M=1-v*v;if(M>Number.EPSILON){const w=Math.sqrt(M),y=Math.atan2(w,v*x);m=Math.sin(m*y)/w,a=Math.sin(a*y)/w}const b=a*x;if(l=l*m+h*b,c=c*m+d*b,u=u*m+p*b,f=f*m+g*b,m===1-a){const w=1/Math.sqrt(l*l+c*c+u*u+f*f);l*=w,c*=w,u*=w,f*=w}}e[t]=l,e[t+1]=c,e[t+2]=u,e[t+3]=f}static multiplyQuaternionsFlat(e,t,i,r,s,o){const a=i[r],l=i[r+1],c=i[r+2],u=i[r+3],f=s[o],h=s[o+1],d=s[o+2],p=s[o+3];return e[t]=a*p+u*f+l*d-c*h,e[t+1]=l*p+u*h+c*f-a*d,e[t+2]=c*p+u*d+a*h-l*f,e[t+3]=u*p-a*f-l*h-c*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,r){return this._x=e,this._y=t,this._z=i,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const i=e._x,r=e._y,s=e._z,o=e._order,a=Math.cos,l=Math.sin,c=a(i/2),u=a(r/2),f=a(s/2),h=l(i/2),d=l(r/2),p=l(s/2);switch(o){case"XYZ":this._x=h*u*f+c*d*p,this._y=c*d*f-h*u*p,this._z=c*u*p+h*d*f,this._w=c*u*f-h*d*p;break;case"YXZ":this._x=h*u*f+c*d*p,this._y=c*d*f-h*u*p,this._z=c*u*p-h*d*f,this._w=c*u*f+h*d*p;break;case"ZXY":this._x=h*u*f-c*d*p,this._y=c*d*f+h*u*p,this._z=c*u*p+h*d*f,this._w=c*u*f-h*d*p;break;case"ZYX":this._x=h*u*f-c*d*p,this._y=c*d*f+h*u*p,this._z=c*u*p-h*d*f,this._w=c*u*f+h*d*p;break;case"YZX":this._x=h*u*f+c*d*p,this._y=c*d*f+h*u*p,this._z=c*u*p-h*d*f,this._w=c*u*f-h*d*p;break;case"XZY":this._x=h*u*f-c*d*p,this._y=c*d*f-h*u*p,this._z=c*u*p+h*d*f,this._w=c*u*f+h*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const i=t/2,r=Math.sin(i);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,i=t[0],r=t[4],s=t[8],o=t[1],a=t[5],l=t[9],c=t[2],u=t[6],f=t[10],h=i+a+f;if(h>0){const d=.5/Math.sqrt(h+1);this._w=.25/d,this._x=(u-l)*d,this._y=(s-c)*d,this._z=(o-r)*d}else if(i>a&&i>f){const d=2*Math.sqrt(1+i-a-f);this._w=(u-l)/d,this._x=.25*d,this._y=(r+o)/d,this._z=(s+c)/d}else if(a>f){const d=2*Math.sqrt(1+a-i-f);this._w=(s-c)/d,this._x=(r+o)/d,this._y=.25*d,this._z=(l+u)/d}else{const d=2*Math.sqrt(1+f-i-a);this._w=(o-r)/d,this._x=(s+c)/d,this._y=(l+u)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(gn(this.dot(e),-1,1)))}rotateTowards(e,t){const i=this.angleTo(e);if(i===0)return this;const r=Math.min(1,t/i);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const i=e._x,r=e._y,s=e._z,o=e._w,a=t._x,l=t._y,c=t._z,u=t._w;return this._x=i*u+o*a+r*c-s*l,this._y=r*u+o*l+s*a-i*c,this._z=s*u+o*c+i*l-r*a,this._w=o*u-i*a-r*l-s*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const i=this._x,r=this._y,s=this._z,o=this._w;let a=o*e._w+i*e._x+r*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=i,this._y=r,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const d=1-t;return this._w=d*o+t*this._w,this._x=d*i+t*this._x,this._y=d*r+t*this._y,this._z=d*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),u=Math.atan2(c,a),f=Math.sin((1-t)*u)/c,h=Math.sin(t*u)/c;return this._w=o*f+this._w*h,this._x=i*f+this._x*h,this._y=r*f+this._y*h,this._z=s*f+this._z*h,this._onChangeCallback(),this}slerpQuaternions(e,t,i){return this.copy(e).slerp(t,i)}random(){const e=Math.random(),t=Math.sqrt(1-e),i=Math.sqrt(e),r=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(r),i*Math.sin(s),i*Math.cos(s),t*Math.sin(r))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}},ce=class Yb{constructor(e=0,t=0,i=0){Yb.prototype.isVector3=!0,this.x=e,this.y=t,this.z=i}set(e,t,i){return i===void 0&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(A0.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(A0.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[3]*i+s[6]*r,this.y=s[1]*t+s[4]*i+s[7]*r,this.z=s[2]*t+s[5]*i+s[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,i=this.y,r=this.z,s=e.elements,o=1/(s[3]*t+s[7]*i+s[11]*r+s[15]);return this.x=(s[0]*t+s[4]*i+s[8]*r+s[12])*o,this.y=(s[1]*t+s[5]*i+s[9]*r+s[13])*o,this.z=(s[2]*t+s[6]*i+s[10]*r+s[14])*o,this}applyQuaternion(e){const t=this.x,i=this.y,r=this.z,s=e.x,o=e.y,a=e.z,l=e.w,c=l*t+o*r-a*i,u=l*i+a*t-s*r,f=l*r+s*i-o*t,h=-s*t-o*i-a*r;return this.x=c*l+h*-s+u*-a-f*-o,this.y=u*l+h*-o+f*-s-c*-a,this.z=f*l+h*-a+c*-o-u*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[4]*i+s[8]*r,this.y=s[1]*t+s[5]*i+s[9]*r,this.z=s[2]*t+s[6]*i+s[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const i=e.x,r=e.y,s=e.z,o=t.x,a=t.y,l=t.z;return this.x=r*l-s*a,this.y=s*o-i*l,this.z=i*a-r*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return cf.copy(this).projectOnVector(e),this.sub(cf)}reflect(e){return this.sub(cf.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(gn(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y,r=this.z-e.z;return t*t+i*i+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){const r=Math.sin(t)*e;return this.x=r*Math.sin(i),this.y=Math.cos(t)*e,this.z=r*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,i=Math.sqrt(1-e**2);return this.x=i*Math.cos(t),this.y=i*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}};const cf=new ce,A0=new At;let dc=class{constructor(e=new ce(1/0,1/0,1/0),t=new ce(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,i=1/0,r=1/0,s=-1/0,o=-1/0,a=-1/0;for(let l=0,c=e.length;l<c;l+=3){const u=e[l],f=e[l+1],h=e[l+2];u<t&&(t=u),f<i&&(i=f),h<r&&(r=h),u>s&&(s=u),f>o&&(o=f),h>a&&(a=h)}return this.min.set(t,i,r),this.max.set(s,o,a),this}setFromBufferAttribute(e){let t=1/0,i=1/0,r=1/0,s=-1/0,o=-1/0,a=-1/0;for(let l=0,c=e.count;l<c;l++){const u=e.getX(l),f=e.getY(l),h=e.getZ(l);u<t&&(t=u),f<i&&(i=f),h<r&&(r=h),u>s&&(s=u),f>o&&(o=f),h>a&&(a=h)}return this.min.set(t,i,r),this.max.set(s,o,a),this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=Lr.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(i!==void 0)if(t&&i.attributes!=null&&i.attributes.position!==void 0){const s=i.attributes.position;for(let o=0,a=s.count;o<a;o++)Lr.fromBufferAttribute(s,o).applyMatrix4(e.matrixWorld),this.expandByPoint(Lr)}else i.boundingBox===null&&i.computeBoundingBox(),lf.copy(i.boundingBox),lf.applyMatrix4(e.matrixWorld),this.union(lf);const r=e.children;for(let s=0,o=r.length;s<o;s++)this.expandByObject(r[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Lr),Lr.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(sa),Pc.subVectors(this.max,sa),Is.subVectors(e.a,sa),Ds.subVectors(e.b,sa),Os.subVectors(e.c,sa),Wi.subVectors(Ds,Is),qi.subVectors(Os,Ds),Cr.subVectors(Is,Os);let t=[0,-Wi.z,Wi.y,0,-qi.z,qi.y,0,-Cr.z,Cr.y,Wi.z,0,-Wi.x,qi.z,0,-qi.x,Cr.z,0,-Cr.x,-Wi.y,Wi.x,0,-qi.y,qi.x,0,-Cr.y,Cr.x,0];return!uf(t,Is,Ds,Os,Pc)||(t=[1,0,0,0,1,0,0,0,1],!uf(t,Is,Ds,Os,Pc))?!1:(Ic.crossVectors(Wi,qi),t=[Ic.x,Ic.y,Ic.z],uf(t,Is,Ds,Os,Pc))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Lr.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=this.getSize(Lr).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(bi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),bi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),bi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),bi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),bi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),bi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),bi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),bi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(bi),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}};const bi=[new ce,new ce,new ce,new ce,new ce,new ce,new ce,new ce],Lr=new ce,lf=new dc,Is=new ce,Ds=new ce,Os=new ce,Wi=new ce,qi=new ce,Cr=new ce,sa=new ce,Pc=new ce,Ic=new ce,Rr=new ce;function uf(n,e,t,i,r){for(let s=0,o=n.length-3;s<=o;s+=3){Rr.fromArray(n,s);const a=r.x*Math.abs(Rr.x)+r.y*Math.abs(Rr.y)+r.z*Math.abs(Rr.z),l=e.dot(Rr),c=t.dot(Rr),u=i.dot(Rr);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>a)return!1}return!0}const Aw=new dc,L0=new ce,Dc=new ce,ff=new ce;let Kp=class{constructor(e=new ce,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const i=this.center;t!==void 0?i.copy(t):Aw.setFromPoints(e).getCenter(i);let r=0;for(let s=0,o=e.length;s<o;s++)r=Math.max(r,i.distanceToSquared(e[s]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){ff.subVectors(e,this.center);const t=ff.lengthSq();if(t>this.radius*this.radius){const i=Math.sqrt(t),r=(i-this.radius)*.5;this.center.add(ff.multiplyScalar(r/i)),this.radius+=r}return this}union(e){return this.center.equals(e.center)===!0?Dc.set(0,0,1).multiplyScalar(e.radius):Dc.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(L0.copy(e.center).add(Dc)),this.expandByPoint(L0.copy(e.center).sub(Dc)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}};const yi=new ce,hf=new ce,Oc=new ce,$i=new ce,df=new ce,Fc=new ce,pf=new ce;let Lw=class{constructor(e=new ce,t=new ce(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,yi)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(i).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=yi.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(yi.copy(this.direction).multiplyScalar(t).add(this.origin),yi.distanceToSquared(e))}distanceSqToSegment(e,t,i,r){hf.copy(e).add(t).multiplyScalar(.5),Oc.copy(t).sub(e).normalize(),$i.copy(this.origin).sub(hf);const s=e.distanceTo(t)*.5,o=-this.direction.dot(Oc),a=$i.dot(this.direction),l=-$i.dot(Oc),c=$i.lengthSq(),u=Math.abs(1-o*o);let f,h,d,p;if(u>0)if(f=o*l-a,h=o*a-l,p=s*u,f>=0)if(h>=-p)if(h<=p){const g=1/u;f*=g,h*=g,d=f*(f+o*h+2*a)+h*(o*f+h+2*l)+c}else h=s,f=Math.max(0,-(o*h+a)),d=-f*f+h*(h+2*l)+c;else h=-s,f=Math.max(0,-(o*h+a)),d=-f*f+h*(h+2*l)+c;else h<=-p?(f=Math.max(0,-(-o*s+a)),h=f>0?-s:Math.min(Math.max(-s,-l),s),d=-f*f+h*(h+2*l)+c):h<=p?(f=0,h=Math.min(Math.max(-s,-l),s),d=h*(h+2*l)+c):(f=Math.max(0,-(o*s+a)),h=f>0?s:Math.min(Math.max(-s,-l),s),d=-f*f+h*(h+2*l)+c);else h=o>0?-s:s,f=Math.max(0,-(o*h+a)),d=-f*f+h*(h+2*l)+c;return i&&i.copy(this.direction).multiplyScalar(f).add(this.origin),r&&r.copy(Oc).multiplyScalar(h).add(hf),d}intersectSphere(e,t){yi.subVectors(e.center,this.origin);const i=yi.dot(this.direction),r=yi.dot(yi)-i*i,s=e.radius*e.radius;if(r>s)return null;const o=Math.sqrt(s-r),a=i-o,l=i+o;return a<0&&l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){const i=this.distanceToPlane(e);return i===null?null:this.at(i,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let i,r,s,o,a,l;const c=1/this.direction.x,u=1/this.direction.y,f=1/this.direction.z,h=this.origin;return c>=0?(i=(e.min.x-h.x)*c,r=(e.max.x-h.x)*c):(i=(e.max.x-h.x)*c,r=(e.min.x-h.x)*c),u>=0?(s=(e.min.y-h.y)*u,o=(e.max.y-h.y)*u):(s=(e.max.y-h.y)*u,o=(e.min.y-h.y)*u),i>o||s>r||((s>i||i!==i)&&(i=s),(o<r||r!==r)&&(r=o),f>=0?(a=(e.min.z-h.z)*f,l=(e.max.z-h.z)*f):(a=(e.max.z-h.z)*f,l=(e.min.z-h.z)*f),i>l||a>r)||((a>i||i!==i)&&(i=a),(l<r||r!==r)&&(r=l),r<0)?null:this.at(i>=0?i:r,t)}intersectsBox(e){return this.intersectBox(e,yi)!==null}intersectTriangle(e,t,i,r,s){df.subVectors(t,e),Fc.subVectors(i,e),pf.crossVectors(df,Fc);let o=this.direction.dot(pf),a;if(o>0){if(r)return null;a=1}else if(o<0)a=-1,o=-o;else return null;$i.subVectors(this.origin,e);const l=a*this.direction.dot(Fc.crossVectors($i,Fc));if(l<0)return null;const c=a*this.direction.dot(df.cross($i));if(c<0||l+c>o)return null;const u=-a*$i.dot(pf);return u<0?null:this.at(u/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}},sn=class np{constructor(){np.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(e,t,i,r,s,o,a,l,c,u,f,h,d,p,g,m){const v=this.elements;return v[0]=e,v[4]=t,v[8]=i,v[12]=r,v[1]=s,v[5]=o,v[9]=a,v[13]=l,v[2]=c,v[6]=u,v[10]=f,v[14]=h,v[3]=d,v[7]=p,v[11]=g,v[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new np().fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){const t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,i=e.elements,r=1/Fs.setFromMatrixColumn(e,0).length(),s=1/Fs.setFromMatrixColumn(e,1).length(),o=1/Fs.setFromMatrixColumn(e,2).length();return t[0]=i[0]*r,t[1]=i[1]*r,t[2]=i[2]*r,t[3]=0,t[4]=i[4]*s,t[5]=i[5]*s,t[6]=i[6]*s,t[7]=0,t[8]=i[8]*o,t[9]=i[9]*o,t[10]=i[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,i=e.x,r=e.y,s=e.z,o=Math.cos(i),a=Math.sin(i),l=Math.cos(r),c=Math.sin(r),u=Math.cos(s),f=Math.sin(s);if(e.order==="XYZ"){const h=o*u,d=o*f,p=a*u,g=a*f;t[0]=l*u,t[4]=-l*f,t[8]=c,t[1]=d+p*c,t[5]=h-g*c,t[9]=-a*l,t[2]=g-h*c,t[6]=p+d*c,t[10]=o*l}else if(e.order==="YXZ"){const h=l*u,d=l*f,p=c*u,g=c*f;t[0]=h+g*a,t[4]=p*a-d,t[8]=o*c,t[1]=o*f,t[5]=o*u,t[9]=-a,t[2]=d*a-p,t[6]=g+h*a,t[10]=o*l}else if(e.order==="ZXY"){const h=l*u,d=l*f,p=c*u,g=c*f;t[0]=h-g*a,t[4]=-o*f,t[8]=p+d*a,t[1]=d+p*a,t[5]=o*u,t[9]=g-h*a,t[2]=-o*c,t[6]=a,t[10]=o*l}else if(e.order==="ZYX"){const h=o*u,d=o*f,p=a*u,g=a*f;t[0]=l*u,t[4]=p*c-d,t[8]=h*c+g,t[1]=l*f,t[5]=g*c+h,t[9]=d*c-p,t[2]=-c,t[6]=a*l,t[10]=o*l}else if(e.order==="YZX"){const h=o*l,d=o*c,p=a*l,g=a*c;t[0]=l*u,t[4]=g-h*f,t[8]=p*f+d,t[1]=f,t[5]=o*u,t[9]=-a*u,t[2]=-c*u,t[6]=d*f+p,t[10]=h-g*f}else if(e.order==="XZY"){const h=o*l,d=o*c,p=a*l,g=a*c;t[0]=l*u,t[4]=-f,t[8]=c*u,t[1]=h*f+g,t[5]=o*u,t[9]=d*f-p,t[2]=p*f-d,t[6]=a*u,t[10]=g*f+h}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Cw,e,Rw)}lookAt(e,t,i){const r=this.elements;return fn.subVectors(e,t),fn.lengthSq()===0&&(fn.z=1),fn.normalize(),ji.crossVectors(i,fn),ji.lengthSq()===0&&(Math.abs(i.z)===1?fn.x+=1e-4:fn.z+=1e-4,fn.normalize(),ji.crossVectors(i,fn)),ji.normalize(),Nc.crossVectors(fn,ji),r[0]=ji.x,r[4]=Nc.x,r[8]=fn.x,r[1]=ji.y,r[5]=Nc.y,r[9]=fn.y,r[2]=ji.z,r[6]=Nc.z,r[10]=fn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,r=t.elements,s=this.elements,o=i[0],a=i[4],l=i[8],c=i[12],u=i[1],f=i[5],h=i[9],d=i[13],p=i[2],g=i[6],m=i[10],v=i[14],x=i[3],M=i[7],b=i[11],w=i[15],y=r[0],_=r[4],S=r[8],E=r[12],R=r[1],I=r[5],$=r[9],q=r[13],L=r[2],N=r[6],G=r[10],X=r[14],K=r[3],j=r[7],ee=r[11],P=r[15];return s[0]=o*y+a*R+l*L+c*K,s[4]=o*_+a*I+l*N+c*j,s[8]=o*S+a*$+l*G+c*ee,s[12]=o*E+a*q+l*X+c*P,s[1]=u*y+f*R+h*L+d*K,s[5]=u*_+f*I+h*N+d*j,s[9]=u*S+f*$+h*G+d*ee,s[13]=u*E+f*q+h*X+d*P,s[2]=p*y+g*R+m*L+v*K,s[6]=p*_+g*I+m*N+v*j,s[10]=p*S+g*$+m*G+v*ee,s[14]=p*E+g*q+m*X+v*P,s[3]=x*y+M*R+b*L+w*K,s[7]=x*_+M*I+b*N+w*j,s[11]=x*S+M*$+b*G+w*ee,s[15]=x*E+M*q+b*X+w*P,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[4],r=e[8],s=e[12],o=e[1],a=e[5],l=e[9],c=e[13],u=e[2],f=e[6],h=e[10],d=e[14],p=e[3],g=e[7],m=e[11],v=e[15];return p*(+s*l*f-r*c*f-s*a*h+i*c*h+r*a*d-i*l*d)+g*(+t*l*d-t*c*h+s*o*h-r*o*d+r*c*u-s*l*u)+m*(+t*c*f-t*a*d-s*o*f+i*o*d+s*a*u-i*c*u)+v*(-r*a*u-t*l*f+t*a*h+r*o*f-i*o*h+i*l*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=i),this}invert(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],f=e[9],h=e[10],d=e[11],p=e[12],g=e[13],m=e[14],v=e[15],x=f*m*c-g*h*c+g*l*d-a*m*d-f*l*v+a*h*v,M=p*h*c-u*m*c-p*l*d+o*m*d+u*l*v-o*h*v,b=u*g*c-p*f*c+p*a*d-o*g*d-u*a*v+o*f*v,w=p*f*l-u*g*l-p*a*h+o*g*h+u*a*m-o*f*m,y=t*x+i*M+r*b+s*w;if(y===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const _=1/y;return e[0]=x*_,e[1]=(g*h*s-f*m*s-g*r*d+i*m*d+f*r*v-i*h*v)*_,e[2]=(a*m*s-g*l*s+g*r*c-i*m*c-a*r*v+i*l*v)*_,e[3]=(f*l*s-a*h*s-f*r*c+i*h*c+a*r*d-i*l*d)*_,e[4]=M*_,e[5]=(u*m*s-p*h*s+p*r*d-t*m*d-u*r*v+t*h*v)*_,e[6]=(p*l*s-o*m*s-p*r*c+t*m*c+o*r*v-t*l*v)*_,e[7]=(o*h*s-u*l*s+u*r*c-t*h*c-o*r*d+t*l*d)*_,e[8]=b*_,e[9]=(p*f*s-u*g*s-p*i*d+t*g*d+u*i*v-t*f*v)*_,e[10]=(o*g*s-p*a*s+p*i*c-t*g*c-o*i*v+t*a*v)*_,e[11]=(u*a*s-o*f*s-u*i*c+t*f*c+o*i*d-t*a*d)*_,e[12]=w*_,e[13]=(u*g*r-p*f*r+p*i*h-t*g*h-u*i*m+t*f*m)*_,e[14]=(p*a*r-o*g*r-p*i*l+t*g*l+o*i*m-t*a*m)*_,e[15]=(o*f*r-u*a*r+u*i*l-t*f*l-o*i*h+t*a*h)*_,this}scale(e){const t=this.elements,i=e.x,r=e.y,s=e.z;return t[0]*=i,t[4]*=r,t[8]*=s,t[1]*=i,t[5]*=r,t[9]*=s,t[2]*=i,t[6]*=r,t[10]*=s,t[3]*=i,t[7]*=r,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,r))}makeTranslation(e,t,i){return this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const i=Math.cos(t),r=Math.sin(t),s=1-i,o=e.x,a=e.y,l=e.z,c=s*o,u=s*a;return this.set(c*o+i,c*a-r*l,c*l+r*a,0,c*a+r*l,u*a+i,u*l-r*o,0,c*l-r*a,u*l+r*o,s*l*l+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,r,s,o){return this.set(1,i,s,0,e,1,o,0,t,r,1,0,0,0,0,1),this}compose(e,t,i){const r=this.elements,s=t._x,o=t._y,a=t._z,l=t._w,c=s+s,u=o+o,f=a+a,h=s*c,d=s*u,p=s*f,g=o*u,m=o*f,v=a*f,x=l*c,M=l*u,b=l*f,w=i.x,y=i.y,_=i.z;return r[0]=(1-(g+v))*w,r[1]=(d+b)*w,r[2]=(p-M)*w,r[3]=0,r[4]=(d-b)*y,r[5]=(1-(h+v))*y,r[6]=(m+x)*y,r[7]=0,r[8]=(p+M)*_,r[9]=(m-x)*_,r[10]=(1-(h+g))*_,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,i){const r=this.elements;let s=Fs.set(r[0],r[1],r[2]).length();const o=Fs.set(r[4],r[5],r[6]).length(),a=Fs.set(r[8],r[9],r[10]).length();this.determinant()<0&&(s=-s),e.x=r[12],e.y=r[13],e.z=r[14],Nn.copy(this);const c=1/s,u=1/o,f=1/a;return Nn.elements[0]*=c,Nn.elements[1]*=c,Nn.elements[2]*=c,Nn.elements[4]*=u,Nn.elements[5]*=u,Nn.elements[6]*=u,Nn.elements[8]*=f,Nn.elements[9]*=f,Nn.elements[10]*=f,t.setFromRotationMatrix(Nn),i.x=s,i.y=o,i.z=a,this}makePerspective(e,t,i,r,s,o){const a=this.elements,l=2*s/(t-e),c=2*s/(i-r),u=(t+e)/(t-e),f=(i+r)/(i-r),h=-(o+s)/(o-s),d=-2*o*s/(o-s);return a[0]=l,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=c,a[9]=f,a[13]=0,a[2]=0,a[6]=0,a[10]=h,a[14]=d,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(e,t,i,r,s,o){const a=this.elements,l=1/(t-e),c=1/(i-r),u=1/(o-s),f=(t+e)*l,h=(i+r)*c,d=(o+s)*u;return a[0]=2*l,a[4]=0,a[8]=0,a[12]=-f,a[1]=0,a[5]=2*c,a[9]=0,a[13]=-h,a[2]=0,a[6]=0,a[10]=-2*u,a[14]=-d,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(e){const t=this.elements,i=e.elements;for(let r=0;r<16;r++)if(t[r]!==i[r])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}};const Fs=new ce,Nn=new sn,Cw=new ce(0,0,0),Rw=new ce(1,1,1),ji=new ce,Nc=new ce,fn=new ce,C0=new sn,R0=new At;let Qp=class Zb{constructor(e=0,t=0,i=0,r=Zb.DefaultOrder){this.isEuler=!0,this._x=e,this._y=t,this._z=i,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,r=this._order){return this._x=e,this._y=t,this._z=i,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){const r=e.elements,s=r[0],o=r[4],a=r[8],l=r[1],c=r[5],u=r[9],f=r[2],h=r[6],d=r[10];switch(t){case"XYZ":this._y=Math.asin(gn(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,d),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(h,c),this._z=0);break;case"YXZ":this._x=Math.asin(-gn(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-f,s),this._z=0);break;case"ZXY":this._x=Math.asin(gn(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(-f,d),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-gn(f,-1,1)),Math.abs(f)<.9999999?(this._x=Math.atan2(h,d),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(gn(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-f,s)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-gn(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(h,c),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-u,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return C0.makeRotationFromQuaternion(e),this.setFromRotationMatrix(C0,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return R0.setFromEuler(this),this.setFromQuaternion(R0,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}};Qp.DefaultOrder="XYZ";Qp.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];let Jb=class{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}},Pw=0;const P0=new ce,Ns=new At,_i=new sn,Bc=new ce,oa=new ce,Iw=new ce,Dw=new At,I0=new ce(1,0,0),D0=new ce(0,1,0),O0=new ce(0,0,1),Ow={type:"added"},F0={type:"removed"};let Gi=class ip extends qo{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Pw++}),this.uuid=hc(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=ip.DefaultUp.clone();const e=new ce,t=new Qp,i=new At,r=new ce(1,1,1);function s(){i.setFromEuler(t,!1)}function o(){t.setFromQuaternion(i,void 0,!1)}t._onChange(s),i._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new sn},normalMatrix:{value:new oi}}),this.matrix=new sn,this.matrixWorld=new sn,this.matrixAutoUpdate=ip.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Jb,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Ns.setFromAxisAngle(e,t),this.quaternion.multiply(Ns),this}rotateOnWorldAxis(e,t){return Ns.setFromAxisAngle(e,t),this.quaternion.premultiply(Ns),this}rotateX(e){return this.rotateOnAxis(I0,e)}rotateY(e){return this.rotateOnAxis(D0,e)}rotateZ(e){return this.rotateOnAxis(O0,e)}translateOnAxis(e,t){return P0.copy(e).applyQuaternion(this.quaternion),this.position.add(P0.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(I0,e)}translateY(e){return this.translateOnAxis(D0,e)}translateZ(e){return this.translateOnAxis(O0,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(_i.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?Bc.copy(e):Bc.set(e,t,i);const r=this.parent;this.updateWorldMatrix(!0,!1),oa.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?_i.lookAt(oa,Bc,this.up):_i.lookAt(Bc,oa,this.up),this.quaternion.setFromRotationMatrix(_i),r&&(_i.extractRotation(r.matrixWorld),Ns.setFromRotationMatrix(_i),this.quaternion.premultiply(Ns.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(Ow)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(F0)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(F0)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),_i.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),_i.multiply(e.parent.matrixWorld)),e.applyMatrix4(_i),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,r=this.children.length;i<r;i++){const o=this.children[i].getObjectByProperty(e,t);if(o!==void 0)return o}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(oa,e,Iw),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(oa,Dw,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].updateMatrixWorld(e)}updateWorldMatrix(e,t){const i=this.parent;if(e===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const r=this.children;for(let s=0,o=r.length;s<o;s++)r[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(r.instanceColor=this.instanceColor.toJSON()));function s(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=s(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++){const f=l[c];s(e.shapes,f)}else s(e.shapes,l)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(s(e.materials,this.material[l]));r.material=a}else r.material=s(e.materials,this.material);if(this.children.length>0){r.children=[];for(let a=0;a<this.children.length;a++)r.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];r.animations.push(s(e.animations,l))}}if(t){const a=o(e.geometries),l=o(e.materials),c=o(e.textures),u=o(e.images),f=o(e.shapes),h=o(e.skeletons),d=o(e.animations),p=o(e.nodes);a.length>0&&(i.geometries=a),l.length>0&&(i.materials=l),c.length>0&&(i.textures=c),u.length>0&&(i.images=u),f.length>0&&(i.shapes=f),h.length>0&&(i.skeletons=h),d.length>0&&(i.animations=d),p.length>0&&(i.nodes=p)}return i.object=r,i;function o(a){const l=[];for(const c in a){const u=a[c];delete u.metadata,l.push(u)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let i=0;i<e.children.length;i++){const r=e.children[i];this.add(r.clone())}return this}};Gi.DefaultUp=new ce(0,1,0);Gi.DefaultMatrixAutoUpdate=!0;const Bn=new ce,Mi=new ce,mf=new ce,wi=new ce,Bs=new ce,Us=new ce,N0=new ce,gf=new ce,xf=new ce,vf=new ce;let bf=class ho{constructor(e=new ce,t=new ce,i=new ce){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,r){r.subVectors(i,t),Bn.subVectors(e,t),r.cross(Bn);const s=r.lengthSq();return s>0?r.multiplyScalar(1/Math.sqrt(s)):r.set(0,0,0)}static getBarycoord(e,t,i,r,s){Bn.subVectors(r,t),Mi.subVectors(i,t),mf.subVectors(e,t);const o=Bn.dot(Bn),a=Bn.dot(Mi),l=Bn.dot(mf),c=Mi.dot(Mi),u=Mi.dot(mf),f=o*c-a*a;if(f===0)return s.set(-2,-1,-1);const h=1/f,d=(c*l-a*u)*h,p=(o*u-a*l)*h;return s.set(1-d-p,p,d)}static containsPoint(e,t,i,r){return this.getBarycoord(e,t,i,r,wi),wi.x>=0&&wi.y>=0&&wi.x+wi.y<=1}static getUV(e,t,i,r,s,o,a,l){return this.getBarycoord(e,t,i,r,wi),l.set(0,0),l.addScaledVector(s,wi.x),l.addScaledVector(o,wi.y),l.addScaledVector(a,wi.z),l}static isFrontFacing(e,t,i,r){return Bn.subVectors(i,t),Mi.subVectors(e,t),Bn.cross(Mi).dot(r)<0}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,r){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,i,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Bn.subVectors(this.c,this.b),Mi.subVectors(this.a,this.b),Bn.cross(Mi).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return ho.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return ho.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,i,r,s){return ho.getUV(e,this.a,this.b,this.c,t,i,r,s)}containsPoint(e){return ho.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return ho.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const i=this.a,r=this.b,s=this.c;let o,a;Bs.subVectors(r,i),Us.subVectors(s,i),gf.subVectors(e,i);const l=Bs.dot(gf),c=Us.dot(gf);if(l<=0&&c<=0)return t.copy(i);xf.subVectors(e,r);const u=Bs.dot(xf),f=Us.dot(xf);if(u>=0&&f<=u)return t.copy(r);const h=l*f-u*c;if(h<=0&&l>=0&&u<=0)return o=l/(l-u),t.copy(i).addScaledVector(Bs,o);vf.subVectors(e,s);const d=Bs.dot(vf),p=Us.dot(vf);if(p>=0&&d<=p)return t.copy(s);const g=d*c-l*p;if(g<=0&&c>=0&&p<=0)return a=c/(c-p),t.copy(i).addScaledVector(Us,a);const m=u*p-d*f;if(m<=0&&f-u>=0&&d-p>=0)return N0.subVectors(s,r),a=(f-u)/(f-u+(d-p)),t.copy(r).addScaledVector(N0,a);const v=1/(m+g+h);return o=g*v,a=h*v,t.copy(i).addScaledVector(Bs,o).addScaledVector(Us,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}},Fw=0,pc=class extends qo{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Fw++}),this.uuid=hc(),this.name="",this.type="Material",this.blending=xo,this.side=Ra,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=Nb,this.blendDst=Bb,this.blendEquation=fo,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Xd,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=ww,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=tf,this.stencilZFail=tf,this.stencilZPass=tf,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const i=e[t];if(i===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if(t==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=i===PM;continue}const r=this[t];if(r===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}r&&r.isColor?r.set(i):r&&r.isVector3&&i&&i.isVector3?r.copy(i):this[t]=i}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const i={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==xo&&(i.blending=this.blending),this.side!==Ra&&(i.side=this.side),this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.colorWrite=this.colorWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(i.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(i.wireframe=this.wireframe),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=this.flatShading),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData);function r(s){const o=[];for(const a in s){const l=s[a];delete l.metadata,o.push(l)}return o}if(t){const s=r(e.textures),o=r(e.images);s.length>0&&(i.textures=s),o.length>0&&(i.images=o)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let i=null;if(t!==null){const r=t.length;i=new Array(r);for(let s=0;s!==r;++s)i[s]=t[s].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}},Kb=class extends pc{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new lt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Jp,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}};const Ct=new ce,Uc=new gt;let ci=class{constructor(e,t,i){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=i===!0,this.usage=w0,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let r=0,s=this.itemSize;r<s;r++)this.array[e+r]=t.array[i+r];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){const t=this.array;let i=0;for(let r=0,s=e.length;r<s;r++){let o=e[r];o===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),o=new lt),t[i++]=o.r,t[i++]=o.g,t[i++]=o.b}return this}copyVector2sArray(e){const t=this.array;let i=0;for(let r=0,s=e.length;r<s;r++){let o=e[r];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),o=new gt),t[i++]=o.x,t[i++]=o.y}return this}copyVector3sArray(e){const t=this.array;let i=0;for(let r=0,s=e.length;r<s;r++){let o=e[r];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),o=new ce),t[i++]=o.x,t[i++]=o.y,t[i++]=o.z}return this}copyVector4sArray(e){const t=this.array;let i=0;for(let r=0,s=e.length;r<s;r++){let o=e[r];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",r),o=new Vt),t[i++]=o.x,t[i++]=o.y,t[i++]=o.z,t[i++]=o.w}return this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,i=this.count;t<i;t++)Uc.fromBufferAttribute(this,t),Uc.applyMatrix3(e),this.setXY(t,Uc.x,Uc.y);else if(this.itemSize===3)for(let t=0,i=this.count;t<i;t++)Ct.fromBufferAttribute(this,t),Ct.applyMatrix3(e),this.setXYZ(t,Ct.x,Ct.y,Ct.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)Ct.fromBufferAttribute(this,t),Ct.applyMatrix4(e),this.setXYZ(t,Ct.x,Ct.y,Ct.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)Ct.fromBufferAttribute(this,t),Ct.applyNormalMatrix(e),this.setXYZ(t,Ct.x,Ct.y,Ct.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)Ct.fromBufferAttribute(this,t),Ct.transformDirection(e),this.setXYZ(t,Ct.x,Ct.y,Ct.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=r,this}setXYZW(e,t,i,r,s){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=r,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==w0&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}},Qb=class extends ci{constructor(e,t,i){super(new Uint16Array(e),t,i)}},ey=class extends ci{constructor(e,t,i){super(new Uint32Array(e),t,i)}},Qr=class extends ci{constructor(e,t,i){super(new Float32Array(e),t,i)}},Nw=0;const Tn=new sn,yf=new Gi,zs=new ce,hn=new dc,aa=new dc,Ot=new ce;let mc=class ty extends qo{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Nw++}),this.uuid=hc(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Vb(e)?ey:Qb)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const s=new oi().getNormalMatrix(e);i.applyNormalMatrix(s),i.needsUpdate=!0}const r=this.attributes.tangent;return r!==void 0&&(r.transformDirection(e),r.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Tn.makeRotationFromQuaternion(e),this.applyMatrix4(Tn),this}rotateX(e){return Tn.makeRotationX(e),this.applyMatrix4(Tn),this}rotateY(e){return Tn.makeRotationY(e),this.applyMatrix4(Tn),this}rotateZ(e){return Tn.makeRotationZ(e),this.applyMatrix4(Tn),this}translate(e,t,i){return Tn.makeTranslation(e,t,i),this.applyMatrix4(Tn),this}scale(e,t,i){return Tn.makeScale(e,t,i),this.applyMatrix4(Tn),this}lookAt(e){return yf.lookAt(e),yf.updateMatrix(),this.applyMatrix4(yf.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(zs).negate(),this.translate(zs.x,zs.y,zs.z),this}setFromPoints(e){const t=[];for(let i=0,r=e.length;i<r;i++){const s=e[i];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new Qr(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new dc);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new ce(-1/0,-1/0,-1/0),new ce(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let i=0,r=t.length;i<r;i++){const s=t[i];hn.setFromBufferAttribute(s),this.morphTargetsRelative?(Ot.addVectors(this.boundingBox.min,hn.min),this.boundingBox.expandByPoint(Ot),Ot.addVectors(this.boundingBox.max,hn.max),this.boundingBox.expandByPoint(Ot)):(this.boundingBox.expandByPoint(hn.min),this.boundingBox.expandByPoint(hn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Kp);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new ce,1/0);return}if(e){const i=this.boundingSphere.center;if(hn.setFromBufferAttribute(e),t)for(let s=0,o=t.length;s<o;s++){const a=t[s];aa.setFromBufferAttribute(a),this.morphTargetsRelative?(Ot.addVectors(hn.min,aa.min),hn.expandByPoint(Ot),Ot.addVectors(hn.max,aa.max),hn.expandByPoint(Ot)):(hn.expandByPoint(aa.min),hn.expandByPoint(aa.max))}hn.getCenter(i);let r=0;for(let s=0,o=e.count;s<o;s++)Ot.fromBufferAttribute(e,s),r=Math.max(r,i.distanceToSquared(Ot));if(t)for(let s=0,o=t.length;s<o;s++){const a=t[s],l=this.morphTargetsRelative;for(let c=0,u=a.count;c<u;c++)Ot.fromBufferAttribute(a,c),l&&(zs.fromBufferAttribute(e,c),Ot.add(zs)),r=Math.max(r,i.distanceToSquared(Ot))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=e.array,r=t.position.array,s=t.normal.array,o=t.uv.array,a=r.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new ci(new Float32Array(4*a),4));const l=this.getAttribute("tangent").array,c=[],u=[];for(let R=0;R<a;R++)c[R]=new ce,u[R]=new ce;const f=new ce,h=new ce,d=new ce,p=new gt,g=new gt,m=new gt,v=new ce,x=new ce;function M(R,I,$){f.fromArray(r,R*3),h.fromArray(r,I*3),d.fromArray(r,$*3),p.fromArray(o,R*2),g.fromArray(o,I*2),m.fromArray(o,$*2),h.sub(f),d.sub(f),g.sub(p),m.sub(p);const q=1/(g.x*m.y-m.x*g.y);isFinite(q)&&(v.copy(h).multiplyScalar(m.y).addScaledVector(d,-g.y).multiplyScalar(q),x.copy(d).multiplyScalar(g.x).addScaledVector(h,-m.x).multiplyScalar(q),c[R].add(v),c[I].add(v),c[$].add(v),u[R].add(x),u[I].add(x),u[$].add(x))}let b=this.groups;b.length===0&&(b=[{start:0,count:i.length}]);for(let R=0,I=b.length;R<I;++R){const $=b[R],q=$.start,L=$.count;for(let N=q,G=q+L;N<G;N+=3)M(i[N+0],i[N+1],i[N+2])}const w=new ce,y=new ce,_=new ce,S=new ce;function E(R){_.fromArray(s,R*3),S.copy(_);const I=c[R];w.copy(I),w.sub(_.multiplyScalar(_.dot(I))).normalize(),y.crossVectors(S,I);const q=y.dot(u[R])<0?-1:1;l[R*4]=w.x,l[R*4+1]=w.y,l[R*4+2]=w.z,l[R*4+3]=q}for(let R=0,I=b.length;R<I;++R){const $=b[R],q=$.start,L=$.count;for(let N=q,G=q+L;N<G;N+=3)E(i[N+0]),E(i[N+1]),E(i[N+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new ci(new Float32Array(t.count*3),3),this.setAttribute("normal",i);else for(let h=0,d=i.count;h<d;h++)i.setXYZ(h,0,0,0);const r=new ce,s=new ce,o=new ce,a=new ce,l=new ce,c=new ce,u=new ce,f=new ce;if(e)for(let h=0,d=e.count;h<d;h+=3){const p=e.getX(h+0),g=e.getX(h+1),m=e.getX(h+2);r.fromBufferAttribute(t,p),s.fromBufferAttribute(t,g),o.fromBufferAttribute(t,m),u.subVectors(o,s),f.subVectors(r,s),u.cross(f),a.fromBufferAttribute(i,p),l.fromBufferAttribute(i,g),c.fromBufferAttribute(i,m),a.add(u),l.add(u),c.add(u),i.setXYZ(p,a.x,a.y,a.z),i.setXYZ(g,l.x,l.y,l.z),i.setXYZ(m,c.x,c.y,c.z)}else for(let h=0,d=t.count;h<d;h+=3)r.fromBufferAttribute(t,h+0),s.fromBufferAttribute(t,h+1),o.fromBufferAttribute(t,h+2),u.subVectors(o,s),f.subVectors(r,s),u.cross(f),i.setXYZ(h+0,u.x,u.y,u.z),i.setXYZ(h+1,u.x,u.y,u.z),i.setXYZ(h+2,u.x,u.y,u.z);this.normalizeNormals(),i.needsUpdate=!0}}merge(e,t){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}t===void 0&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const i=this.attributes;for(const r in i){if(e.attributes[r]===void 0)continue;const o=i[r].array,a=e.attributes[r],l=a.array,c=a.itemSize*t,u=Math.min(l.length,o.length-c);for(let f=0,h=c;f<u;f++,h++)o[h]=l[f]}return this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)Ot.fromBufferAttribute(e,t),Ot.normalize(),e.setXYZ(t,Ot.x,Ot.y,Ot.z)}toNonIndexed(){function e(a,l){const c=a.array,u=a.itemSize,f=a.normalized,h=new c.constructor(l.length*u);let d=0,p=0;for(let g=0,m=l.length;g<m;g++){a.isInterleavedBufferAttribute?d=l[g]*a.data.stride+a.offset:d=l[g]*u;for(let v=0;v<u;v++)h[p++]=c[d++]}return new ci(h,u,f)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new ty,i=this.index.array,r=this.attributes;for(const a in r){const l=r[a],c=e(l,i);t.setAttribute(a,c)}const s=this.morphAttributes;for(const a in s){const l=[],c=s[a];for(let u=0,f=c.length;u<f;u++){const h=c[u],d=e(h,i);l.push(d)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const i=this.attributes;for(const l in i){const c=i[l];e.data.attributes[l]=c.toJSON(e.data)}const r={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let f=0,h=c.length;f<h;f++){const d=c[f];u.push(d.toJSON(e.data))}u.length>0&&(r[l]=u,s=!0)}s&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone(t));const r=e.attributes;for(const c in r){const u=r[c];this.setAttribute(c,u.clone(t))}const s=e.morphAttributes;for(const c in s){const u=[],f=s[c];for(let h=0,d=f.length;h<d;h++)u.push(f[h].clone(t));this.morphAttributes[c]=u}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let c=0,u=o.length;c<u;c++){const f=o[c];this.addGroup(f.start,f.count,f.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,e.parameters!==void 0&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}};const B0=new sn,Gs=new Lw,_f=new Kp,Xi=new ce,Yi=new ce,Zi=new ce,Mf=new ce,wf=new ce,Sf=new ce,zc=new ce,Gc=new ce,kc=new ce,Hc=new gt,Vc=new gt,Wc=new gt,Ef=new ce,qc=new ce;let Ii=class extends Gi{constructor(e=new mc,t=new Kb){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const r=t[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=r.length;s<o;s++){const a=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}raycast(e,t){const i=this.geometry,r=this.material,s=this.matrixWorld;if(r===void 0||(i.boundingSphere===null&&i.computeBoundingSphere(),_f.copy(i.boundingSphere),_f.applyMatrix4(s),e.ray.intersectsSphere(_f)===!1)||(B0.copy(s).invert(),Gs.copy(e.ray).applyMatrix4(B0),i.boundingBox!==null&&Gs.intersectsBox(i.boundingBox)===!1))return;let o;const a=i.index,l=i.attributes.position,c=i.morphAttributes.position,u=i.morphTargetsRelative,f=i.attributes.uv,h=i.attributes.uv2,d=i.groups,p=i.drawRange;if(a!==null)if(Array.isArray(r))for(let g=0,m=d.length;g<m;g++){const v=d[g],x=r[v.materialIndex],M=Math.max(v.start,p.start),b=Math.min(a.count,Math.min(v.start+v.count,p.start+p.count));for(let w=M,y=b;w<y;w+=3){const _=a.getX(w),S=a.getX(w+1),E=a.getX(w+2);o=$c(this,x,e,Gs,l,c,u,f,h,_,S,E),o&&(o.faceIndex=Math.floor(w/3),o.face.materialIndex=v.materialIndex,t.push(o))}}else{const g=Math.max(0,p.start),m=Math.min(a.count,p.start+p.count);for(let v=g,x=m;v<x;v+=3){const M=a.getX(v),b=a.getX(v+1),w=a.getX(v+2);o=$c(this,r,e,Gs,l,c,u,f,h,M,b,w),o&&(o.faceIndex=Math.floor(v/3),t.push(o))}}else if(l!==void 0)if(Array.isArray(r))for(let g=0,m=d.length;g<m;g++){const v=d[g],x=r[v.materialIndex],M=Math.max(v.start,p.start),b=Math.min(l.count,Math.min(v.start+v.count,p.start+p.count));for(let w=M,y=b;w<y;w+=3){const _=w,S=w+1,E=w+2;o=$c(this,x,e,Gs,l,c,u,f,h,_,S,E),o&&(o.faceIndex=Math.floor(w/3),o.face.materialIndex=v.materialIndex,t.push(o))}}else{const g=Math.max(0,p.start),m=Math.min(l.count,p.start+p.count);for(let v=g,x=m;v<x;v+=3){const M=v,b=v+1,w=v+2;o=$c(this,r,e,Gs,l,c,u,f,h,M,b,w),o&&(o.faceIndex=Math.floor(v/3),t.push(o))}}}};function Bw(n,e,t,i,r,s,o,a){let l;if(e.side===qn?l=i.intersectTriangle(o,s,r,!0,a):l=i.intersectTriangle(r,s,o,e.side!==wo,a),l===null)return null;qc.copy(a),qc.applyMatrix4(n.matrixWorld);const c=t.ray.origin.distanceTo(qc);return c<t.near||c>t.far?null:{distance:c,point:qc.clone(),object:n}}function $c(n,e,t,i,r,s,o,a,l,c,u,f){Xi.fromBufferAttribute(r,c),Yi.fromBufferAttribute(r,u),Zi.fromBufferAttribute(r,f);const h=n.morphTargetInfluences;if(s&&h){zc.set(0,0,0),Gc.set(0,0,0),kc.set(0,0,0);for(let p=0,g=s.length;p<g;p++){const m=h[p],v=s[p];m!==0&&(Mf.fromBufferAttribute(v,c),wf.fromBufferAttribute(v,u),Sf.fromBufferAttribute(v,f),o?(zc.addScaledVector(Mf,m),Gc.addScaledVector(wf,m),kc.addScaledVector(Sf,m)):(zc.addScaledVector(Mf.sub(Xi),m),Gc.addScaledVector(wf.sub(Yi),m),kc.addScaledVector(Sf.sub(Zi),m)))}Xi.add(zc),Yi.add(Gc),Zi.add(kc)}n.isSkinnedMesh&&(n.boneTransform(c,Xi),n.boneTransform(u,Yi),n.boneTransform(f,Zi));const d=Bw(n,e,t,i,Xi,Yi,Zi,Ef);if(d){a&&(Hc.fromBufferAttribute(a,c),Vc.fromBufferAttribute(a,u),Wc.fromBufferAttribute(a,f),d.uv=bf.getUV(Ef,Xi,Yi,Zi,Hc,Vc,Wc,new gt)),l&&(Hc.fromBufferAttribute(l,c),Vc.fromBufferAttribute(l,u),Wc.fromBufferAttribute(l,f),d.uv2=bf.getUV(Ef,Xi,Yi,Zi,Hc,Vc,Wc,new gt));const p={a:c,b:u,c:f,normal:new ce,materialIndex:0};bf.getNormal(Xi,Yi,Zi,p.normal),d.face=p}return d}let Du=class ny extends mc{constructor(e=1,t=1,i=1,r=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:r,heightSegments:s,depthSegments:o};const a=this;r=Math.floor(r),s=Math.floor(s),o=Math.floor(o);const l=[],c=[],u=[],f=[];let h=0,d=0;p("z","y","x",-1,-1,i,t,e,o,s,0),p("z","y","x",1,-1,i,t,-e,o,s,1),p("x","z","y",1,1,e,i,t,r,o,2),p("x","z","y",1,-1,e,i,-t,r,o,3),p("x","y","z",1,-1,e,t,i,r,s,4),p("x","y","z",-1,-1,e,t,-i,r,s,5),this.setIndex(l),this.setAttribute("position",new Qr(c,3)),this.setAttribute("normal",new Qr(u,3)),this.setAttribute("uv",new Qr(f,2));function p(g,m,v,x,M,b,w,y,_,S,E){const R=b/_,I=w/S,$=b/2,q=w/2,L=y/2,N=_+1,G=S+1;let X=0,K=0;const j=new ce;for(let ee=0;ee<G;ee++){const P=ee*I-q;for(let V=0;V<N;V++){const Y=V*R-$;j[g]=Y*x,j[m]=P*M,j[v]=L,c.push(j.x,j.y,j.z),j[g]=0,j[m]=0,j[v]=y>0?1:-1,u.push(j.x,j.y,j.z),f.push(V/_),f.push(1-ee/S),X+=1}}for(let ee=0;ee<S;ee++)for(let P=0;P<_;P++){const V=h+P+N*ee,Y=h+P+N*(ee+1),Q=h+(P+1)+N*(ee+1),B=h+(P+1)+N*ee;l.push(V,Y,B),l.push(Y,Q,B),K+=6}a.addGroup(d,K,E),d+=K,h+=X}}static fromJSON(e){return new ny(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}};function Ao(n){const e={};for(const t in n){e[t]={};for(const i in n[t]){const r=n[t][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?e[t][i]=r.clone():Array.isArray(r)?e[t][i]=r.slice():e[t][i]=r}}return e}function Gt(n){const e={};for(let t=0;t<n.length;t++){const i=Ao(n[t]);for(const r in i)e[r]=i[r]}return e}function Uw(n){const e=[];for(let t=0;t<n.length;t++)e.push(n[t].clone());return e}const zw={clone:Ao,merge:Gt};var Gw=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,kw=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;let as=class extends pc{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=Gw,this.fragmentShader=kw,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&(e.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Ao(e.uniforms),this.uniformsGroups=Uw(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const r in this.uniforms){const o=this.uniforms[r].value;o&&o.isTexture?t.uniforms[r]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[r]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[r]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[r]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[r]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[r]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[r]={type:"m4",value:o.toArray()}:t.uniforms[r]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const i={};for(const r in this.extensions)this.extensions[r]===!0&&(i[r]=!0);return Object.keys(i).length>0&&(t.extensions=i),t}},iy=class extends Gi{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new sn,this.projectionMatrix=new sn,this.projectionMatrixInverse=new sn}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}},Cn=class extends iy{constructor(e=50,t=1,i=.1,r=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=E0*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(nf*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return E0*2*Math.atan(Math.tan(nf*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,i,r,s,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=r,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(nf*.5*this.fov)/this.zoom,i=2*t,r=this.aspect*i,s=-.5*r;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;s+=o.offsetX*r/l,t-=o.offsetY*i/c,r*=o.width/l,i*=o.height/c}const a=this.filmOffset;a!==0&&(s+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+r,t,t-i,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}};const ks=90,Hs=1;let Hw=class extends Gi{constructor(e,t,i){if(super(),this.type="CubeCamera",i.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=i;const r=new Cn(ks,Hs,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new ce(1,0,0)),this.add(r);const s=new Cn(ks,Hs,e,t);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new ce(-1,0,0)),this.add(s);const o=new Cn(ks,Hs,e,t);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(new ce(0,1,0)),this.add(o);const a=new Cn(ks,Hs,e,t);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new ce(0,-1,0)),this.add(a);const l=new Cn(ks,Hs,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new ce(0,0,1)),this.add(l);const c=new Cn(ks,Hs,e,t);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new ce(0,0,-1)),this.add(c)}update(e,t){this.parent===null&&this.updateMatrixWorld();const i=this.renderTarget,[r,s,o,a,l,c]=this.children,u=e.getRenderTarget(),f=e.toneMapping,h=e.xr.enabled;e.toneMapping=Oi,e.xr.enabled=!1;const d=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0),e.render(t,r),e.setRenderTarget(i,1),e.render(t,s),e.setRenderTarget(i,2),e.render(t,o),e.setRenderTarget(i,3),e.render(t,a),e.setRenderTarget(i,4),e.render(t,l),i.texture.generateMipmaps=d,e.setRenderTarget(i,5),e.render(t,c),e.setRenderTarget(u),e.toneMapping=f,e.xr.enabled=h,i.texture.needsPMREMUpdate=!0}},ry=class extends wr{constructor(e,t,i,r,s,o,a,l,c,u){e=e!==void 0?e:[],t=t!==void 0?t:So,super(e,t,i,r,s,o,a,l,c,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}},Vw=class extends os{constructor(e,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const i={width:e,height:e,depth:1},r=[i,i,i,i,i,i];this.texture=new ry(r,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:Ln}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new Du(5,5,5),s=new as({name:"CubemapFromEquirect",uniforms:Ao(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:qn,blending:lr});s.uniforms.tEquirect.value=t;const o=new Ii(r,s),a=t.minFilter;return t.minFilter===Iu&&(t.minFilter=Ln),new Hw(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,i,r){const s=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,i,r);e.setRenderTarget(s)}};const Tf=new ce,Ww=new ce,qw=new oi;let zr=class{constructor(e=new ce(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,r){return this.normal.set(e,t,i),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){const r=Tf.subVectors(i,t).cross(Ww.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const i=e.delta(Tf),r=this.normal.dot(i);if(r===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/r;return s<0||s>1?null:t.copy(i).multiplyScalar(s).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const i=t||qw.getNormalMatrix(e),r=this.coplanarPoint(Tf).applyMatrix4(e),s=this.normal.applyMatrix3(i).normalize();return this.constant=-r.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}};const Vs=new Kp,jc=new ce;let sy=class{constructor(e=new zr,t=new zr,i=new zr,r=new zr,s=new zr,o=new zr){this.planes=[e,t,i,r,s,o]}set(e,t,i,r,s,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(i),a[3].copy(r),a[4].copy(s),a[5].copy(o),this}copy(e){const t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e){const t=this.planes,i=e.elements,r=i[0],s=i[1],o=i[2],a=i[3],l=i[4],c=i[5],u=i[6],f=i[7],h=i[8],d=i[9],p=i[10],g=i[11],m=i[12],v=i[13],x=i[14],M=i[15];return t[0].setComponents(a-r,f-l,g-h,M-m).normalize(),t[1].setComponents(a+r,f+l,g+h,M+m).normalize(),t[2].setComponents(a+s,f+c,g+d,M+v).normalize(),t[3].setComponents(a-s,f-c,g-d,M-v).normalize(),t[4].setComponents(a-o,f-u,g-p,M-x).normalize(),t[5].setComponents(a+o,f+u,g+p,M+x).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),Vs.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(Vs)}intersectsSprite(e){return Vs.center.set(0,0,0),Vs.radius=.7071067811865476,Vs.applyMatrix4(e.matrixWorld),this.intersectsSphere(Vs)}intersectsSphere(e){const t=this.planes,i=e.center,r=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(i)<r)return!1;return!0}intersectsBox(e){const t=this.planes;for(let i=0;i<6;i++){const r=t[i];if(jc.x=r.normal.x>0?e.max.x:e.min.x,jc.y=r.normal.y>0?e.max.y:e.min.y,jc.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(jc)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}};function oy(){let n=null,e=!1,t=null,i=null;function r(s,o){t(s,o),i=n.requestAnimationFrame(r)}return{start:function(){e!==!0&&t!==null&&(i=n.requestAnimationFrame(r),e=!0)},stop:function(){n.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){n=s}}}function $w(n,e){const t=e.isWebGL2,i=new WeakMap;function r(c,u){const f=c.array,h=c.usage,d=n.createBuffer();n.bindBuffer(u,d),n.bufferData(u,f,h),c.onUploadCallback();let p;if(f instanceof Float32Array)p=5126;else if(f instanceof Uint16Array)if(c.isFloat16BufferAttribute)if(t)p=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else p=5123;else if(f instanceof Int16Array)p=5122;else if(f instanceof Uint32Array)p=5125;else if(f instanceof Int32Array)p=5124;else if(f instanceof Int8Array)p=5120;else if(f instanceof Uint8Array)p=5121;else if(f instanceof Uint8ClampedArray)p=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+f);return{buffer:d,type:p,bytesPerElement:f.BYTES_PER_ELEMENT,version:c.version}}function s(c,u,f){const h=u.array,d=u.updateRange;n.bindBuffer(f,c),d.count===-1?n.bufferSubData(f,0,h):(t?n.bufferSubData(f,d.offset*h.BYTES_PER_ELEMENT,h,d.offset,d.count):n.bufferSubData(f,d.offset*h.BYTES_PER_ELEMENT,h.subarray(d.offset,d.offset+d.count)),d.count=-1)}function o(c){return c.isInterleavedBufferAttribute&&(c=c.data),i.get(c)}function a(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=i.get(c);u&&(n.deleteBuffer(u.buffer),i.delete(c))}function l(c,u){if(c.isGLBufferAttribute){const h=i.get(c);(!h||h.version<c.version)&&i.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const f=i.get(c);f===void 0?i.set(c,r(c,u)):f.version<c.version&&(s(f.buffer,c,u),f.version=c.version)}return{get:o,remove:a,update:l}}let jw=class ay extends mc{constructor(e=1,t=1,i=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:r};const s=e/2,o=t/2,a=Math.floor(i),l=Math.floor(r),c=a+1,u=l+1,f=e/a,h=t/l,d=[],p=[],g=[],m=[];for(let v=0;v<u;v++){const x=v*h-o;for(let M=0;M<c;M++){const b=M*f-s;p.push(b,-x,0),g.push(0,0,1),m.push(M/a),m.push(1-v/l)}}for(let v=0;v<l;v++)for(let x=0;x<a;x++){const M=x+c*v,b=x+c*(v+1),w=x+1+c*(v+1),y=x+1+c*v;d.push(M,b,y),d.push(b,w,y)}this.setIndex(d),this.setAttribute("position",new Qr(p,3)),this.setAttribute("normal",new Qr(g,3)),this.setAttribute("uv",new Qr(m,2))}static fromJSON(e){return new ay(e.width,e.height,e.widthSegments,e.heightSegments)}};var Xw=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,Yw=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Zw=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,Jw=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,Kw=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,Qw=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,e3="vec3 transformed = vec3( position );",t3=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,n3=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
#ifdef USE_IRIDESCENCE
	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,i3=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,r3=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,s3=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,o3=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,a3=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,c3=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,l3=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,u3=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,f3=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,h3=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,d3=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,p3=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,m3=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,g3=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,x3=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,v3=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,b3=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,y3="gl_FragColor = linearToOutputTexel( gl_FragColor );",_3=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,M3=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,w3=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,S3=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,E3=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,T3=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,A3=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,L3=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,C3=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,R3=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,P3=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,I3=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,D3=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,O3=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointLightInfo( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotLightInfo( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );
		#endif
	}
	#pragma unroll_loop_end
#endif`,F3=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,N3=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,B3=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,U3=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,z3=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,G3=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,k3=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,H3=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	#ifdef USE_IRIDESCENCE
		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );
	#else
		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,V3=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,W3=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,q3=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,$3=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,j3=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,X3=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,Y3=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,Z3=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,J3=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,K3=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Q3=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,eS=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,tS=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,nS=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,iS=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,rS=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,sS=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,oS=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,aS=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,cS=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,lS=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,uS=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,fS=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,hS=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,dS=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,pS=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,mS=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,gS=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,xS=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,vS=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,bS=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,yS=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,_S=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,MS=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,wS=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,SS=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,ES=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,TS=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,AS=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,LS=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,CS=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,RS=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,PS=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,IS=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,DS=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,OS=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,FS=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,NS=`#ifdef USE_TRANSMISSION
	float transmissionAlpha = 1.0;
	float transmissionFactor = transmission;
	float thicknessFactor = thickness;
	#ifdef USE_TRANSMISSIONMAP
		transmissionFactor *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		thicknessFactor *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,
		attenuationColor, attenuationDistance );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );
	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );
#endif`,BS=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( attenuationDistance == 0.0 ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,US=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,zS=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,GS=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,kS=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,HS=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,VS=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,WS=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const qS=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,$S=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	gl_FragColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );
	#endif
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,jS=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,XS=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,YS=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,ZS=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,JS=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,KS=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,QS=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,e2=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,t2=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,n2=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,i2=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,r2=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,s2=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,o2=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,a2=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,c2=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,l2=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,u2=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,f2=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,h2=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,d2=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,p2=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,m2=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,g2=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,x2=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,v2=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,b2=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,y2=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,_2=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,M2=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,rt={alphamap_fragment:Xw,alphamap_pars_fragment:Yw,alphatest_fragment:Zw,alphatest_pars_fragment:Jw,aomap_fragment:Kw,aomap_pars_fragment:Qw,begin_vertex:e3,beginnormal_vertex:t3,bsdfs:n3,iridescence_fragment:i3,bumpmap_pars_fragment:r3,clipping_planes_fragment:s3,clipping_planes_pars_fragment:o3,clipping_planes_pars_vertex:a3,clipping_planes_vertex:c3,color_fragment:l3,color_pars_fragment:u3,color_pars_vertex:f3,color_vertex:h3,common:d3,cube_uv_reflection_fragment:p3,defaultnormal_vertex:m3,displacementmap_pars_vertex:g3,displacementmap_vertex:x3,emissivemap_fragment:v3,emissivemap_pars_fragment:b3,encodings_fragment:y3,encodings_pars_fragment:_3,envmap_fragment:M3,envmap_common_pars_fragment:w3,envmap_pars_fragment:S3,envmap_pars_vertex:E3,envmap_physical_pars_fragment:N3,envmap_vertex:T3,fog_vertex:A3,fog_pars_vertex:L3,fog_fragment:C3,fog_pars_fragment:R3,gradientmap_pars_fragment:P3,lightmap_fragment:I3,lightmap_pars_fragment:D3,lights_lambert_vertex:O3,lights_pars_begin:F3,lights_toon_fragment:B3,lights_toon_pars_fragment:U3,lights_phong_fragment:z3,lights_phong_pars_fragment:G3,lights_physical_fragment:k3,lights_physical_pars_fragment:H3,lights_fragment_begin:V3,lights_fragment_maps:W3,lights_fragment_end:q3,logdepthbuf_fragment:$3,logdepthbuf_pars_fragment:j3,logdepthbuf_pars_vertex:X3,logdepthbuf_vertex:Y3,map_fragment:Z3,map_pars_fragment:J3,map_particle_fragment:K3,map_particle_pars_fragment:Q3,metalnessmap_fragment:eS,metalnessmap_pars_fragment:tS,morphcolor_vertex:nS,morphnormal_vertex:iS,morphtarget_pars_vertex:rS,morphtarget_vertex:sS,normal_fragment_begin:oS,normal_fragment_maps:aS,normal_pars_fragment:cS,normal_pars_vertex:lS,normal_vertex:uS,normalmap_pars_fragment:fS,clearcoat_normal_fragment_begin:hS,clearcoat_normal_fragment_maps:dS,clearcoat_pars_fragment:pS,iridescence_pars_fragment:mS,output_fragment:gS,packing:xS,premultiplied_alpha_fragment:vS,project_vertex:bS,dithering_fragment:yS,dithering_pars_fragment:_S,roughnessmap_fragment:MS,roughnessmap_pars_fragment:wS,shadowmap_pars_fragment:SS,shadowmap_pars_vertex:ES,shadowmap_vertex:TS,shadowmask_pars_fragment:AS,skinbase_vertex:LS,skinning_pars_vertex:CS,skinning_vertex:RS,skinnormal_vertex:PS,specularmap_fragment:IS,specularmap_pars_fragment:DS,tonemapping_fragment:OS,tonemapping_pars_fragment:FS,transmission_fragment:NS,transmission_pars_fragment:BS,uv_pars_fragment:US,uv_pars_vertex:zS,uv_vertex:GS,uv2_pars_fragment:kS,uv2_pars_vertex:HS,uv2_vertex:VS,worldpos_vertex:WS,background_vert:qS,background_frag:$S,cube_vert:jS,cube_frag:XS,depth_vert:YS,depth_frag:ZS,distanceRGBA_vert:JS,distanceRGBA_frag:KS,equirect_vert:QS,equirect_frag:e2,linedashed_vert:t2,linedashed_frag:n2,meshbasic_vert:i2,meshbasic_frag:r2,meshlambert_vert:s2,meshlambert_frag:o2,meshmatcap_vert:a2,meshmatcap_frag:c2,meshnormal_vert:l2,meshnormal_frag:u2,meshphong_vert:f2,meshphong_frag:h2,meshphysical_vert:d2,meshphysical_frag:p2,meshtoon_vert:m2,meshtoon_frag:g2,points_vert:x2,points_frag:v2,shadow_vert:b2,shadow_frag:y2,sprite_vert:_2,sprite_frag:M2},Oe={common:{diffuse:{value:new lt(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new oi},uv2Transform:{value:new oi},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new gt(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new lt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new lt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new oi}},sprite:{diffuse:{value:new lt(16777215)},opacity:{value:1},center:{value:new gt(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new oi}}},ii={basic:{uniforms:Gt([Oe.common,Oe.specularmap,Oe.envmap,Oe.aomap,Oe.lightmap,Oe.fog]),vertexShader:rt.meshbasic_vert,fragmentShader:rt.meshbasic_frag},lambert:{uniforms:Gt([Oe.common,Oe.specularmap,Oe.envmap,Oe.aomap,Oe.lightmap,Oe.emissivemap,Oe.fog,Oe.lights,{emissive:{value:new lt(0)}}]),vertexShader:rt.meshlambert_vert,fragmentShader:rt.meshlambert_frag},phong:{uniforms:Gt([Oe.common,Oe.specularmap,Oe.envmap,Oe.aomap,Oe.lightmap,Oe.emissivemap,Oe.bumpmap,Oe.normalmap,Oe.displacementmap,Oe.fog,Oe.lights,{emissive:{value:new lt(0)},specular:{value:new lt(1118481)},shininess:{value:30}}]),vertexShader:rt.meshphong_vert,fragmentShader:rt.meshphong_frag},standard:{uniforms:Gt([Oe.common,Oe.envmap,Oe.aomap,Oe.lightmap,Oe.emissivemap,Oe.bumpmap,Oe.normalmap,Oe.displacementmap,Oe.roughnessmap,Oe.metalnessmap,Oe.fog,Oe.lights,{emissive:{value:new lt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:rt.meshphysical_vert,fragmentShader:rt.meshphysical_frag},toon:{uniforms:Gt([Oe.common,Oe.aomap,Oe.lightmap,Oe.emissivemap,Oe.bumpmap,Oe.normalmap,Oe.displacementmap,Oe.gradientmap,Oe.fog,Oe.lights,{emissive:{value:new lt(0)}}]),vertexShader:rt.meshtoon_vert,fragmentShader:rt.meshtoon_frag},matcap:{uniforms:Gt([Oe.common,Oe.bumpmap,Oe.normalmap,Oe.displacementmap,Oe.fog,{matcap:{value:null}}]),vertexShader:rt.meshmatcap_vert,fragmentShader:rt.meshmatcap_frag},points:{uniforms:Gt([Oe.points,Oe.fog]),vertexShader:rt.points_vert,fragmentShader:rt.points_frag},dashed:{uniforms:Gt([Oe.common,Oe.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:rt.linedashed_vert,fragmentShader:rt.linedashed_frag},depth:{uniforms:Gt([Oe.common,Oe.displacementmap]),vertexShader:rt.depth_vert,fragmentShader:rt.depth_frag},normal:{uniforms:Gt([Oe.common,Oe.bumpmap,Oe.normalmap,Oe.displacementmap,{opacity:{value:1}}]),vertexShader:rt.meshnormal_vert,fragmentShader:rt.meshnormal_frag},sprite:{uniforms:Gt([Oe.sprite,Oe.fog]),vertexShader:rt.sprite_vert,fragmentShader:rt.sprite_frag},background:{uniforms:{uvTransform:{value:new oi},t2D:{value:null}},vertexShader:rt.background_vert,fragmentShader:rt.background_frag},cube:{uniforms:Gt([Oe.envmap,{opacity:{value:1}}]),vertexShader:rt.cube_vert,fragmentShader:rt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:rt.equirect_vert,fragmentShader:rt.equirect_frag},distanceRGBA:{uniforms:Gt([Oe.common,Oe.displacementmap,{referencePosition:{value:new ce},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:rt.distanceRGBA_vert,fragmentShader:rt.distanceRGBA_frag},shadow:{uniforms:Gt([Oe.lights,Oe.fog,{color:{value:new lt(0)},opacity:{value:1}}]),vertexShader:rt.shadow_vert,fragmentShader:rt.shadow_frag}};ii.physical={uniforms:Gt([ii.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new gt(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new lt(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new gt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new lt(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new lt(1,1,1)},specularColorMap:{value:null}}]),vertexShader:rt.meshphysical_vert,fragmentShader:rt.meshphysical_frag};function w2(n,e,t,i,r,s){const o=new lt(0);let a=r===!0?0:1,l,c,u=null,f=0,h=null;function d(g,m){let v=!1,x=m.isScene===!0?m.background:null;x&&x.isTexture&&(x=e.get(x));const M=n.xr,b=M.getSession&&M.getSession();b&&b.environmentBlendMode==="additive"&&(x=null),x===null?p(o,a):x&&x.isColor&&(p(x,1),v=!0),(n.autoClear||v)&&n.clear(n.autoClearColor,n.autoClearDepth,n.autoClearStencil),x&&(x.isCubeTexture||x.mapping===Pu)?(c===void 0&&(c=new Ii(new Du(1,1,1),new as({name:"BackgroundCubeMaterial",uniforms:Ao(ii.cube.uniforms),vertexShader:ii.cube.vertexShader,fragmentShader:ii.cube.fragmentShader,side:qn,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(w,y,_){this.matrixWorld.copyPosition(_.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(c)),c.material.uniforms.envMap.value=x,c.material.uniforms.flipEnvMap.value=x.isCubeTexture&&x.isRenderTargetTexture===!1?-1:1,(u!==x||f!==x.version||h!==n.toneMapping)&&(c.material.needsUpdate=!0,u=x,f=x.version,h=n.toneMapping),c.layers.enableAll(),g.unshift(c,c.geometry,c.material,0,0,null)):x&&x.isTexture&&(l===void 0&&(l=new Ii(new jw(2,2),new as({name:"BackgroundMaterial",uniforms:Ao(ii.background.uniforms),vertexShader:ii.background.vertexShader,fragmentShader:ii.background.fragmentShader,side:Ra,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(l)),l.material.uniforms.t2D.value=x,x.matrixAutoUpdate===!0&&x.updateMatrix(),l.material.uniforms.uvTransform.value.copy(x.matrix),(u!==x||f!==x.version||h!==n.toneMapping)&&(l.material.needsUpdate=!0,u=x,f=x.version,h=n.toneMapping),l.layers.enableAll(),g.unshift(l,l.geometry,l.material,0,0,null))}function p(g,m){t.buffers.color.setClear(g.r,g.g,g.b,m,s)}return{getClearColor:function(){return o},setClearColor:function(g,m=1){o.set(g),a=m,p(o,a)},getClearAlpha:function(){return a},setClearAlpha:function(g){a=g,p(o,a)},render:d}}function S2(n,e,t,i){const r=n.getParameter(34921),s=i.isWebGL2?null:e.get("OES_vertex_array_object"),o=i.isWebGL2||s!==null,a={},l=m(null);let c=l,u=!1;function f(L,N,G,X,K){let j=!1;if(o){const ee=g(X,G,N);c!==ee&&(c=ee,d(c.object)),j=v(L,X,G,K),j&&x(L,X,G,K)}else{const ee=N.wireframe===!0;(c.geometry!==X.id||c.program!==G.id||c.wireframe!==ee)&&(c.geometry=X.id,c.program=G.id,c.wireframe=ee,j=!0)}K!==null&&t.update(K,34963),(j||u)&&(u=!1,S(L,N,G,X),K!==null&&n.bindBuffer(34963,t.get(K).buffer))}function h(){return i.isWebGL2?n.createVertexArray():s.createVertexArrayOES()}function d(L){return i.isWebGL2?n.bindVertexArray(L):s.bindVertexArrayOES(L)}function p(L){return i.isWebGL2?n.deleteVertexArray(L):s.deleteVertexArrayOES(L)}function g(L,N,G){const X=G.wireframe===!0;let K=a[L.id];K===void 0&&(K={},a[L.id]=K);let j=K[N.id];j===void 0&&(j={},K[N.id]=j);let ee=j[X];return ee===void 0&&(ee=m(h()),j[X]=ee),ee}function m(L){const N=[],G=[],X=[];for(let K=0;K<r;K++)N[K]=0,G[K]=0,X[K]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:N,enabledAttributes:G,attributeDivisors:X,object:L,attributes:{},index:null}}function v(L,N,G,X){const K=c.attributes,j=N.attributes;let ee=0;const P=G.getAttributes();for(const V in P)if(P[V].location>=0){const Q=K[V];let B=j[V];if(B===void 0&&(V==="instanceMatrix"&&L.instanceMatrix&&(B=L.instanceMatrix),V==="instanceColor"&&L.instanceColor&&(B=L.instanceColor)),Q===void 0||Q.attribute!==B||B&&Q.data!==B.data)return!0;ee++}return c.attributesNum!==ee||c.index!==X}function x(L,N,G,X){const K={},j=N.attributes;let ee=0;const P=G.getAttributes();for(const V in P)if(P[V].location>=0){let Q=j[V];Q===void 0&&(V==="instanceMatrix"&&L.instanceMatrix&&(Q=L.instanceMatrix),V==="instanceColor"&&L.instanceColor&&(Q=L.instanceColor));const B={};B.attribute=Q,Q&&Q.data&&(B.data=Q.data),K[V]=B,ee++}c.attributes=K,c.attributesNum=ee,c.index=X}function M(){const L=c.newAttributes;for(let N=0,G=L.length;N<G;N++)L[N]=0}function b(L){w(L,0)}function w(L,N){const G=c.newAttributes,X=c.enabledAttributes,K=c.attributeDivisors;G[L]=1,X[L]===0&&(n.enableVertexAttribArray(L),X[L]=1),K[L]!==N&&((i.isWebGL2?n:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](L,N),K[L]=N)}function y(){const L=c.newAttributes,N=c.enabledAttributes;for(let G=0,X=N.length;G<X;G++)N[G]!==L[G]&&(n.disableVertexAttribArray(G),N[G]=0)}function _(L,N,G,X,K,j){i.isWebGL2===!0&&(G===5124||G===5125)?n.vertexAttribIPointer(L,N,G,K,j):n.vertexAttribPointer(L,N,G,X,K,j)}function S(L,N,G,X){if(i.isWebGL2===!1&&(L.isInstancedMesh||X.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;M();const K=X.attributes,j=G.getAttributes(),ee=N.defaultAttributeValues;for(const P in j){const V=j[P];if(V.location>=0){let Y=K[P];if(Y===void 0&&(P==="instanceMatrix"&&L.instanceMatrix&&(Y=L.instanceMatrix),P==="instanceColor"&&L.instanceColor&&(Y=L.instanceColor)),Y!==void 0){const Q=Y.normalized,B=Y.itemSize,oe=t.get(Y);if(oe===void 0)continue;const Se=oe.buffer,we=oe.type,ye=oe.bytesPerElement;if(Y.isInterleavedBufferAttribute){const _e=Y.data,Ie=_e.stride,he=Y.offset;if(_e.isInstancedInterleavedBuffer){for(let pe=0;pe<V.locationSize;pe++)w(V.location+pe,_e.meshPerAttribute);L.isInstancedMesh!==!0&&X._maxInstanceCount===void 0&&(X._maxInstanceCount=_e.meshPerAttribute*_e.count)}else for(let pe=0;pe<V.locationSize;pe++)b(V.location+pe);n.bindBuffer(34962,Se);for(let pe=0;pe<V.locationSize;pe++)_(V.location+pe,B/V.locationSize,we,Q,Ie*ye,(he+B/V.locationSize*pe)*ye)}else{if(Y.isInstancedBufferAttribute){for(let _e=0;_e<V.locationSize;_e++)w(V.location+_e,Y.meshPerAttribute);L.isInstancedMesh!==!0&&X._maxInstanceCount===void 0&&(X._maxInstanceCount=Y.meshPerAttribute*Y.count)}else for(let _e=0;_e<V.locationSize;_e++)b(V.location+_e);n.bindBuffer(34962,Se);for(let _e=0;_e<V.locationSize;_e++)_(V.location+_e,B/V.locationSize,we,Q,B*ye,B/V.locationSize*_e*ye)}}else if(ee!==void 0){const Q=ee[P];if(Q!==void 0)switch(Q.length){case 2:n.vertexAttrib2fv(V.location,Q);break;case 3:n.vertexAttrib3fv(V.location,Q);break;case 4:n.vertexAttrib4fv(V.location,Q);break;default:n.vertexAttrib1fv(V.location,Q)}}}}y()}function E(){$();for(const L in a){const N=a[L];for(const G in N){const X=N[G];for(const K in X)p(X[K].object),delete X[K];delete N[G]}delete a[L]}}function R(L){if(a[L.id]===void 0)return;const N=a[L.id];for(const G in N){const X=N[G];for(const K in X)p(X[K].object),delete X[K];delete N[G]}delete a[L.id]}function I(L){for(const N in a){const G=a[N];if(G[L.id]===void 0)continue;const X=G[L.id];for(const K in X)p(X[K].object),delete X[K];delete G[L.id]}}function $(){q(),u=!0,c!==l&&(c=l,d(c.object))}function q(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:f,reset:$,resetDefaultState:q,dispose:E,releaseStatesOfGeometry:R,releaseStatesOfProgram:I,initAttributes:M,enableAttribute:b,disableUnusedAttributes:y}}function E2(n,e,t,i){const r=i.isWebGL2;let s;function o(c){s=c}function a(c,u){n.drawArrays(s,c,u),t.update(u,s,1)}function l(c,u,f){if(f===0)return;let h,d;if(r)h=n,d="drawArraysInstanced";else if(h=e.get("ANGLE_instanced_arrays"),d="drawArraysInstancedANGLE",h===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}h[d](s,c,u,f),t.update(u,s,f)}this.setMode=o,this.render=a,this.renderInstances=l}function T2(n,e,t){let i;function r(){if(i!==void 0)return i;if(e.has("EXT_texture_filter_anisotropic")===!0){const _=e.get("EXT_texture_filter_anisotropic");i=n.getParameter(_.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function s(_){if(_==="highp"){if(n.getShaderPrecisionFormat(35633,36338).precision>0&&n.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";_="mediump"}return _==="mediump"&&n.getShaderPrecisionFormat(35633,36337).precision>0&&n.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&n instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext<"u"&&n instanceof WebGL2ComputeRenderingContext;let a=t.precision!==void 0?t.precision:"highp";const l=s(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const c=o||e.has("WEBGL_draw_buffers"),u=t.logarithmicDepthBuffer===!0,f=n.getParameter(34930),h=n.getParameter(35660),d=n.getParameter(3379),p=n.getParameter(34076),g=n.getParameter(34921),m=n.getParameter(36347),v=n.getParameter(36348),x=n.getParameter(36349),M=h>0,b=o||e.has("OES_texture_float"),w=M&&b,y=o?n.getParameter(36183):0;return{isWebGL2:o,drawBuffers:c,getMaxAnisotropy:r,getMaxPrecision:s,precision:a,logarithmicDepthBuffer:u,maxTextures:f,maxVertexTextures:h,maxTextureSize:d,maxCubemapSize:p,maxAttributes:g,maxVertexUniforms:m,maxVaryings:v,maxFragmentUniforms:x,vertexTextures:M,floatFragmentTextures:b,floatVertexTextures:w,maxSamples:y}}function A2(n){const e=this;let t=null,i=0,r=!1,s=!1;const o=new zr,a=new oi,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(f,h,d){const p=f.length!==0||h||i!==0||r;return r=h,t=u(f,d,0),i=f.length,p},this.beginShadows=function(){s=!0,u(null)},this.endShadows=function(){s=!1,c()},this.setState=function(f,h,d){const p=f.clippingPlanes,g=f.clipIntersection,m=f.clipShadows,v=n.get(f);if(!r||p===null||p.length===0||s&&!m)s?u(null):c();else{const x=s?0:i,M=x*4;let b=v.clippingState||null;l.value=b,b=u(p,h,M,d);for(let w=0;w!==M;++w)b[w]=t[w];v.clippingState=b,this.numIntersection=g?this.numPlanes:0,this.numPlanes+=x}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function u(f,h,d,p){const g=f!==null?f.length:0;let m=null;if(g!==0){if(m=l.value,p!==!0||m===null){const v=d+g*4,x=h.matrixWorldInverse;a.getNormalMatrix(x),(m===null||m.length<v)&&(m=new Float32Array(v));for(let M=0,b=d;M!==g;++M,b+=4)o.copy(f[M]).applyMatrix4(x,a),o.normal.toArray(m,b),m[b+3]=o.constant}l.value=m,l.needsUpdate=!0}return e.numPlanes=g,e.numIntersection=0,m}}function L2(n){let e=new WeakMap;function t(o,a){return a===Yd?o.mapping=So:a===Zd&&(o.mapping=Eo),o}function i(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const a=o.mapping;if(a===Yd||a===Zd)if(e.has(o)){const l=e.get(o).texture;return t(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new Vw(l.height/2);return c.fromEquirectangularTexture(n,o),e.set(o,c),o.addEventListener("dispose",r),t(c.texture,o.mapping)}else return null}}return o}function r(o){const a=o.target;a.removeEventListener("dispose",r);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function s(){e=new WeakMap}return{get:i,dispose:s}}let C2=class extends iy{constructor(e=-1,t=1,i=1,r=-1,s=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=r,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,i,r,s,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=r,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let s=i-e,o=i+e,a=r+t,l=r-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,o=s+c*this.view.width,a-=u*this.view.offsetY,l=a-u*this.view.height}this.projectionMatrix.makeOrthographic(s,o,a,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}};const po=4,U0=[.125,.215,.35,.446,.526,.582],Vr=20,Af=new C2,z0=new lt;let Lf=null;const Gr=(1+Math.sqrt(5))/2,Ws=1/Gr,G0=[new ce(1,1,1),new ce(-1,1,1),new ce(1,1,-1),new ce(-1,1,-1),new ce(0,Gr,Ws),new ce(0,Gr,-Ws),new ce(Ws,0,Gr),new ce(-Ws,0,Gr),new ce(Gr,Ws,0),new ce(-Gr,Ws,0)];let k0=class{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,r=100){Lf=this._renderer.getRenderTarget(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,i,r,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=W0(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=V0(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Lf),e.scissorTest=!1,Xc(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===So||e.mapping===Eo?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Lf=this._renderer.getRenderTarget();const i=t||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,i={magFilter:Ln,minFilter:Ln,generateMipmaps:!1,type:Pa,format:si,encoding:ss,depthBuffer:!1},r=H0(e,t,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=H0(e,t,i);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=R2(s)),this._blurMaterial=P2(s,e,t)}return r}_compileMaterial(e){const t=new Ii(this._lodPlanes[0],e);this._renderer.compile(t,Af)}_sceneToCubeUV(e,t,i,r){const a=new Cn(90,1,t,i),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],u=this._renderer,f=u.autoClear,h=u.toneMapping;u.getClearColor(z0),u.toneMapping=Oi,u.autoClear=!1;const d=new Kb({name:"PMREM.Background",side:qn,depthWrite:!1,depthTest:!1}),p=new Ii(new Du,d);let g=!1;const m=e.background;m?m.isColor&&(d.color.copy(m),e.background=null,g=!0):(d.color.copy(z0),g=!0);for(let v=0;v<6;v++){const x=v%3;x===0?(a.up.set(0,l[v],0),a.lookAt(c[v],0,0)):x===1?(a.up.set(0,0,l[v]),a.lookAt(0,c[v],0)):(a.up.set(0,l[v],0),a.lookAt(0,0,c[v]));const M=this._cubeSize;Xc(r,x*M,v>2?M:0,M,M),u.setRenderTarget(r),g&&u.render(p,a),u.render(e,a)}p.geometry.dispose(),p.material.dispose(),u.toneMapping=h,u.autoClear=f,e.background=m}_textureToCubeUV(e,t){const i=this._renderer,r=e.mapping===So||e.mapping===Eo;r?(this._cubemapMaterial===null&&(this._cubemapMaterial=W0()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=V0());const s=r?this._cubemapMaterial:this._equirectMaterial,o=new Ii(this._lodPlanes[0],s),a=s.uniforms;a.envMap.value=e;const l=this._cubeSize;Xc(t,0,0,3*l,2*l),i.setRenderTarget(t),i.render(o,Af)}_applyPMREM(e){const t=this._renderer,i=t.autoClear;t.autoClear=!1;for(let r=1;r<this._lodPlanes.length;r++){const s=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),o=G0[(r-1)%G0.length];this._blur(e,r-1,r,s,o)}t.autoClear=i}_blur(e,t,i,r,s){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,i,r,"latitudinal",s),this._halfBlur(o,e,i,i,r,"longitudinal",s)}_halfBlur(e,t,i,r,s,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,f=new Ii(this._lodPlanes[r],c),h=c.uniforms,d=this._sizeLods[i]-1,p=isFinite(s)?Math.PI/(2*d):2*Math.PI/(2*Vr-1),g=s/p,m=isFinite(s)?1+Math.floor(u*g):Vr;m>Vr&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${Vr}`);const v=[];let x=0;for(let _=0;_<Vr;++_){const S=_/g,E=Math.exp(-S*S/2);v.push(E),_===0?x+=E:_<m&&(x+=2*E)}for(let _=0;_<v.length;_++)v[_]=v[_]/x;h.envMap.value=e.texture,h.samples.value=m,h.weights.value=v,h.latitudinal.value=o==="latitudinal",a&&(h.poleAxis.value=a);const{_lodMax:M}=this;h.dTheta.value=p,h.mipInt.value=M-i;const b=this._sizeLods[r],w=3*b*(r>M-po?r-M+po:0),y=4*(this._cubeSize-b);Xc(t,w,y,3*b,2*b),l.setRenderTarget(t),l.render(f,Af)}};function R2(n){const e=[],t=[],i=[];let r=n;const s=n-po+1+U0.length;for(let o=0;o<s;o++){const a=Math.pow(2,r);t.push(a);let l=1/a;o>n-po?l=U0[o-n+po-1]:o===0&&(l=0),i.push(l);const c=1/(a-2),u=-c,f=1+c,h=[u,u,f,u,f,f,u,u,f,f,u,f],d=6,p=6,g=3,m=2,v=1,x=new Float32Array(g*p*d),M=new Float32Array(m*p*d),b=new Float32Array(v*p*d);for(let y=0;y<d;y++){const _=y%3*2/3-1,S=y>2?0:-1,E=[_,S,0,_+2/3,S,0,_+2/3,S+1,0,_,S,0,_+2/3,S+1,0,_,S+1,0];x.set(E,g*p*y),M.set(h,m*p*y);const R=[y,y,y,y,y,y];b.set(R,v*p*y)}const w=new mc;w.setAttribute("position",new ci(x,g)),w.setAttribute("uv",new ci(M,m)),w.setAttribute("faceIndex",new ci(b,v)),e.push(w),r>po&&r--}return{lodPlanes:e,sizeLods:t,sigmas:i}}function H0(n,e,t){const i=new os(n,e,t);return i.texture.mapping=Pu,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function Xc(n,e,t,i,r){n.viewport.set(e,t,i,r),n.scissor.set(e,t,i,r)}function P2(n,e,t){const i=new Float32Array(Vr),r=new ce(0,1,0);return new as({name:"SphericalGaussianBlur",defines:{n:Vr,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${n}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:em(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:lr,depthTest:!1,depthWrite:!1})}function V0(){return new as({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:em(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:lr,depthTest:!1,depthWrite:!1})}function W0(){return new as({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:em(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:lr,depthTest:!1,depthWrite:!1})}function em(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function I2(n){let e=new WeakMap,t=null;function i(a){if(a&&a.isTexture){const l=a.mapping,c=l===Yd||l===Zd,u=l===So||l===Eo;if(c||u)if(a.isRenderTargetTexture&&a.needsPMREMUpdate===!0){a.needsPMREMUpdate=!1;let f=e.get(a);return t===null&&(t=new k0(n)),f=c?t.fromEquirectangular(a,f):t.fromCubemap(a,f),e.set(a,f),f.texture}else{if(e.has(a))return e.get(a).texture;{const f=a.image;if(c&&f&&f.height>0||u&&f&&r(f)){t===null&&(t=new k0(n));const h=c?t.fromEquirectangular(a):t.fromCubemap(a);return e.set(a,h),a.addEventListener("dispose",s),h.texture}else return null}}}return a}function r(a){let l=0;const c=6;for(let u=0;u<c;u++)a[u]!==void 0&&l++;return l===c}function s(a){const l=a.target;l.removeEventListener("dispose",s);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:i,dispose:o}}function D2(n){const e={};function t(i){if(e[i]!==void 0)return e[i];let r;switch(i){case"WEBGL_depth_texture":r=n.getExtension("WEBGL_depth_texture")||n.getExtension("MOZ_WEBGL_depth_texture")||n.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=n.getExtension("WEBGL_compressed_texture_pvrtc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=n.getExtension(i)}return e[i]=r,r}return{has:function(i){return t(i)!==null},init:function(i){i.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(i){const r=t(i);return r===null&&console.warn("THREE.WebGLRenderer: "+i+" extension not supported."),r}}}function O2(n,e,t,i){const r={},s=new WeakMap;function o(f){const h=f.target;h.index!==null&&e.remove(h.index);for(const p in h.attributes)e.remove(h.attributes[p]);h.removeEventListener("dispose",o),delete r[h.id];const d=s.get(h);d&&(e.remove(d),s.delete(h)),i.releaseStatesOfGeometry(h),h.isInstancedBufferGeometry===!0&&delete h._maxInstanceCount,t.memory.geometries--}function a(f,h){return r[h.id]===!0||(h.addEventListener("dispose",o),r[h.id]=!0,t.memory.geometries++),h}function l(f){const h=f.attributes;for(const p in h)e.update(h[p],34962);const d=f.morphAttributes;for(const p in d){const g=d[p];for(let m=0,v=g.length;m<v;m++)e.update(g[m],34962)}}function c(f){const h=[],d=f.index,p=f.attributes.position;let g=0;if(d!==null){const x=d.array;g=d.version;for(let M=0,b=x.length;M<b;M+=3){const w=x[M+0],y=x[M+1],_=x[M+2];h.push(w,y,y,_,_,w)}}else{const x=p.array;g=p.version;for(let M=0,b=x.length/3-1;M<b;M+=3){const w=M+0,y=M+1,_=M+2;h.push(w,y,y,_,_,w)}}const m=new(Vb(h)?ey:Qb)(h,1);m.version=g;const v=s.get(f);v&&e.remove(v),s.set(f,m)}function u(f){const h=s.get(f);if(h){const d=f.index;d!==null&&h.version<d.version&&c(f)}else c(f);return s.get(f)}return{get:a,update:l,getWireframeAttribute:u}}function F2(n,e,t,i){const r=i.isWebGL2;let s;function o(h){s=h}let a,l;function c(h){a=h.type,l=h.bytesPerElement}function u(h,d){n.drawElements(s,d,a,h*l),t.update(d,s,1)}function f(h,d,p){if(p===0)return;let g,m;if(r)g=n,m="drawElementsInstanced";else if(g=e.get("ANGLE_instanced_arrays"),m="drawElementsInstancedANGLE",g===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}g[m](s,d,a,h*l,p),t.update(d,s,p)}this.setMode=o,this.setIndex=c,this.render=u,this.renderInstances=f}function N2(n){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function i(s,o,a){switch(t.calls++,o){case 4:t.triangles+=a*(s/3);break;case 1:t.lines+=a*(s/2);break;case 3:t.lines+=a*(s-1);break;case 2:t.lines+=a*s;break;case 0:t.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function r(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:r,update:i}}function B2(n,e){return n[0]-e[0]}function U2(n,e){return Math.abs(e[1])-Math.abs(n[1])}function Cf(n,e){let t=1;const i=e.isInterleavedBufferAttribute?e.data.array:e.array;i instanceof Int8Array?t=127:i instanceof Uint8Array?t=255:i instanceof Uint16Array?t=65535:i instanceof Int16Array?t=32767:i instanceof Int32Array?t=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",i),n.divideScalar(t)}function z2(n,e,t){const i={},r=new Float32Array(8),s=new WeakMap,o=new Vt,a=[];for(let c=0;c<8;c++)a[c]=[c,0];function l(c,u,f,h){const d=c.morphTargetInfluences;if(e.isWebGL2===!0){const g=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,m=g!==void 0?g.length:0;let v=s.get(u);if(v===void 0||v.count!==m){let G=function(){L.dispose(),s.delete(u),u.removeEventListener("dispose",G)};var p=G;v!==void 0&&v.texture.dispose();const b=u.morphAttributes.position!==void 0,w=u.morphAttributes.normal!==void 0,y=u.morphAttributes.color!==void 0,_=u.morphAttributes.position||[],S=u.morphAttributes.normal||[],E=u.morphAttributes.color||[];let R=0;b===!0&&(R=1),w===!0&&(R=2),y===!0&&(R=3);let I=u.attributes.position.count*R,$=1;I>e.maxTextureSize&&($=Math.ceil(I/e.maxTextureSize),I=e.maxTextureSize);const q=new Float32Array(I*$*4*m),L=new Xb(q,I,$,m);L.type=$r,L.needsUpdate=!0;const N=R*4;for(let X=0;X<m;X++){const K=_[X],j=S[X],ee=E[X],P=I*$*4*X;for(let V=0;V<K.count;V++){const Y=V*N;b===!0&&(o.fromBufferAttribute(K,V),K.normalized===!0&&Cf(o,K),q[P+Y+0]=o.x,q[P+Y+1]=o.y,q[P+Y+2]=o.z,q[P+Y+3]=0),w===!0&&(o.fromBufferAttribute(j,V),j.normalized===!0&&Cf(o,j),q[P+Y+4]=o.x,q[P+Y+5]=o.y,q[P+Y+6]=o.z,q[P+Y+7]=0),y===!0&&(o.fromBufferAttribute(ee,V),ee.normalized===!0&&Cf(o,ee),q[P+Y+8]=o.x,q[P+Y+9]=o.y,q[P+Y+10]=o.z,q[P+Y+11]=ee.itemSize===4?o.w:1)}}v={count:m,texture:L,size:new gt(I,$)},s.set(u,v),u.addEventListener("dispose",G)}let x=0;for(let b=0;b<d.length;b++)x+=d[b];const M=u.morphTargetsRelative?1:1-x;h.getUniforms().setValue(n,"morphTargetBaseInfluence",M),h.getUniforms().setValue(n,"morphTargetInfluences",d),h.getUniforms().setValue(n,"morphTargetsTexture",v.texture,t),h.getUniforms().setValue(n,"morphTargetsTextureSize",v.size)}else{const g=d===void 0?0:d.length;let m=i[u.id];if(m===void 0||m.length!==g){m=[];for(let w=0;w<g;w++)m[w]=[w,0];i[u.id]=m}for(let w=0;w<g;w++){const y=m[w];y[0]=w,y[1]=d[w]}m.sort(U2);for(let w=0;w<8;w++)w<g&&m[w][1]?(a[w][0]=m[w][0],a[w][1]=m[w][1]):(a[w][0]=Number.MAX_SAFE_INTEGER,a[w][1]=0);a.sort(B2);const v=u.morphAttributes.position,x=u.morphAttributes.normal;let M=0;for(let w=0;w<8;w++){const y=a[w],_=y[0],S=y[1];_!==Number.MAX_SAFE_INTEGER&&S?(v&&u.getAttribute("morphTarget"+w)!==v[_]&&u.setAttribute("morphTarget"+w,v[_]),x&&u.getAttribute("morphNormal"+w)!==x[_]&&u.setAttribute("morphNormal"+w,x[_]),r[w]=S,M+=S):(v&&u.hasAttribute("morphTarget"+w)===!0&&u.deleteAttribute("morphTarget"+w),x&&u.hasAttribute("morphNormal"+w)===!0&&u.deleteAttribute("morphNormal"+w),r[w]=0)}const b=u.morphTargetsRelative?1:1-M;h.getUniforms().setValue(n,"morphTargetBaseInfluence",b),h.getUniforms().setValue(n,"morphTargetInfluences",r)}}return{update:l}}function G2(n,e,t,i){let r=new WeakMap;function s(l){const c=i.render.frame,u=l.geometry,f=e.get(l,u);return r.get(f)!==c&&(e.update(f),r.set(f,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),t.update(l.instanceMatrix,34962),l.instanceColor!==null&&t.update(l.instanceColor,34962)),f}function o(){r=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:s,dispose:o}}const cy=new wr,ly=new Xb,uy=new Tw,fy=new ry,q0=[],$0=[],j0=new Float32Array(16),X0=new Float32Array(9),Y0=new Float32Array(4);function $o(n,e,t){const i=n[0];if(i<=0||i>0)return n;const r=e*t;let s=q0[r];if(s===void 0&&(s=new Float32Array(r),q0[r]=s),e!==0){i.toArray(s,0);for(let o=1,a=0;o!==e;++o)a+=t,n[o].toArray(s,a)}return s}function Jt(n,e){if(n.length!==e.length)return!1;for(let t=0,i=n.length;t<i;t++)if(n[t]!==e[t])return!1;return!0}function Kt(n,e){for(let t=0,i=e.length;t<i;t++)n[t]=e[t]}function Ou(n,e){let t=$0[e];t===void 0&&(t=new Int32Array(e),$0[e]=t);for(let i=0;i!==e;++i)t[i]=n.allocateTextureUnit();return t}function k2(n,e){const t=this.cache;t[0]!==e&&(n.uniform1f(this.addr,e),t[0]=e)}function H2(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Jt(t,e))return;n.uniform2fv(this.addr,e),Kt(t,e)}}function V2(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(n.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(Jt(t,e))return;n.uniform3fv(this.addr,e),Kt(t,e)}}function W2(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Jt(t,e))return;n.uniform4fv(this.addr,e),Kt(t,e)}}function q2(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(Jt(t,e))return;n.uniformMatrix2fv(this.addr,!1,e),Kt(t,e)}else{if(Jt(t,i))return;Y0.set(i),n.uniformMatrix2fv(this.addr,!1,Y0),Kt(t,i)}}function $2(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(Jt(t,e))return;n.uniformMatrix3fv(this.addr,!1,e),Kt(t,e)}else{if(Jt(t,i))return;X0.set(i),n.uniformMatrix3fv(this.addr,!1,X0),Kt(t,i)}}function j2(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(Jt(t,e))return;n.uniformMatrix4fv(this.addr,!1,e),Kt(t,e)}else{if(Jt(t,i))return;j0.set(i),n.uniformMatrix4fv(this.addr,!1,j0),Kt(t,i)}}function X2(n,e){const t=this.cache;t[0]!==e&&(n.uniform1i(this.addr,e),t[0]=e)}function Y2(n,e){const t=this.cache;Jt(t,e)||(n.uniform2iv(this.addr,e),Kt(t,e))}function Z2(n,e){const t=this.cache;Jt(t,e)||(n.uniform3iv(this.addr,e),Kt(t,e))}function J2(n,e){const t=this.cache;Jt(t,e)||(n.uniform4iv(this.addr,e),Kt(t,e))}function K2(n,e){const t=this.cache;t[0]!==e&&(n.uniform1ui(this.addr,e),t[0]=e)}function Q2(n,e){const t=this.cache;Jt(t,e)||(n.uniform2uiv(this.addr,e),Kt(t,e))}function eE(n,e){const t=this.cache;Jt(t,e)||(n.uniform3uiv(this.addr,e),Kt(t,e))}function tE(n,e){const t=this.cache;Jt(t,e)||(n.uniform4uiv(this.addr,e),Kt(t,e))}function nE(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTexture2D(e||cy,r)}function iE(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTexture3D(e||uy,r)}function rE(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTextureCube(e||fy,r)}function sE(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTexture2DArray(e||ly,r)}function oE(n){switch(n){case 5126:return k2;case 35664:return H2;case 35665:return V2;case 35666:return W2;case 35674:return q2;case 35675:return $2;case 35676:return j2;case 5124:case 35670:return X2;case 35667:case 35671:return Y2;case 35668:case 35672:return Z2;case 35669:case 35673:return J2;case 5125:return K2;case 36294:return Q2;case 36295:return eE;case 36296:return tE;case 35678:case 36198:case 36298:case 36306:case 35682:return nE;case 35679:case 36299:case 36307:return iE;case 35680:case 36300:case 36308:case 36293:return rE;case 36289:case 36303:case 36311:case 36292:return sE}}function aE(n,e){n.uniform1fv(this.addr,e)}function cE(n,e){const t=$o(e,this.size,2);n.uniform2fv(this.addr,t)}function lE(n,e){const t=$o(e,this.size,3);n.uniform3fv(this.addr,t)}function uE(n,e){const t=$o(e,this.size,4);n.uniform4fv(this.addr,t)}function fE(n,e){const t=$o(e,this.size,4);n.uniformMatrix2fv(this.addr,!1,t)}function hE(n,e){const t=$o(e,this.size,9);n.uniformMatrix3fv(this.addr,!1,t)}function dE(n,e){const t=$o(e,this.size,16);n.uniformMatrix4fv(this.addr,!1,t)}function pE(n,e){n.uniform1iv(this.addr,e)}function mE(n,e){n.uniform2iv(this.addr,e)}function gE(n,e){n.uniform3iv(this.addr,e)}function xE(n,e){n.uniform4iv(this.addr,e)}function vE(n,e){n.uniform1uiv(this.addr,e)}function bE(n,e){n.uniform2uiv(this.addr,e)}function yE(n,e){n.uniform3uiv(this.addr,e)}function _E(n,e){n.uniform4uiv(this.addr,e)}function ME(n,e,t){const i=e.length,r=Ou(t,i);n.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)t.setTexture2D(e[s]||cy,r[s])}function wE(n,e,t){const i=e.length,r=Ou(t,i);n.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)t.setTexture3D(e[s]||uy,r[s])}function SE(n,e,t){const i=e.length,r=Ou(t,i);n.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)t.setTextureCube(e[s]||fy,r[s])}function EE(n,e,t){const i=e.length,r=Ou(t,i);n.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)t.setTexture2DArray(e[s]||ly,r[s])}function TE(n){switch(n){case 5126:return aE;case 35664:return cE;case 35665:return lE;case 35666:return uE;case 35674:return fE;case 35675:return hE;case 35676:return dE;case 5124:case 35670:return pE;case 35667:case 35671:return mE;case 35668:case 35672:return gE;case 35669:case 35673:return xE;case 5125:return vE;case 36294:return bE;case 36295:return yE;case 36296:return _E;case 35678:case 36198:case 36298:case 36306:case 35682:return ME;case 35679:case 36299:case 36307:return wE;case 35680:case 36300:case 36308:case 36293:return SE;case 36289:case 36303:case 36311:case 36292:return EE}}let AE=class{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.setValue=oE(t.type)}},LE=class{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.size=t.size,this.setValue=TE(t.type)}},CE=class{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,i){const r=this.seq;for(let s=0,o=r.length;s!==o;++s){const a=r[s];a.setValue(e,t[a.id],i)}}};const Rf=/(\w+)(\])?(\[|\.)?/g;function Z0(n,e){n.seq.push(e),n.map[e.id]=e}function RE(n,e,t){const i=n.name,r=i.length;for(Rf.lastIndex=0;;){const s=Rf.exec(i),o=Rf.lastIndex;let a=s[1];const l=s[2]==="]",c=s[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===r){Z0(t,c===void 0?new AE(a,n,e):new LE(a,n,e));break}else{let f=t.map[a];f===void 0&&(f=new CE(a),Z0(t,f)),t=f}}}let Gl=class{constructor(e,t){this.seq=[],this.map={};const i=e.getProgramParameter(t,35718);for(let r=0;r<i;++r){const s=e.getActiveUniform(t,r),o=e.getUniformLocation(t,s.name);RE(s,o,this)}}setValue(e,t,i,r){const s=this.map[t];s!==void 0&&s.setValue(e,i,r)}setOptional(e,t,i){const r=t[i];r!==void 0&&this.setValue(e,i,r)}static upload(e,t,i,r){for(let s=0,o=t.length;s!==o;++s){const a=t[s],l=i[a.id];l.needsUpdate!==!1&&a.setValue(e,l.value,r)}}static seqWithValue(e,t){const i=[];for(let r=0,s=e.length;r!==s;++r){const o=e[r];o.id in t&&i.push(o)}return i}};function J0(n,e,t){const i=n.createShader(e);return n.shaderSource(i,t),n.compileShader(i),i}let PE=0;function IE(n,e){const t=n.split(`
`),i=[],r=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let o=r;o<s;o++){const a=o+1;i.push(`${a===e?">":" "} ${a}: ${t[o]}`)}return i.join(`
`)}function DE(n){switch(n){case ss:return["Linear","( value )"];case Et:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",n),["Linear","( value )"]}}function K0(n,e,t){const i=n.getShaderParameter(e,35713),r=n.getShaderInfoLog(e).trim();if(i&&r==="")return"";const s=/ERROR: 0:(\d+)/.exec(r);if(s){const o=parseInt(s[1]);return t.toUpperCase()+`

`+r+`

`+IE(n.getShaderSource(e),o)}else return r}function OE(n,e){const t=DE(e);return"vec4 "+n+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function FE(n,e){let t;switch(e){case QM:t="Linear";break;case ew:t="Reinhard";break;case tw:t="OptimizedCineon";break;case nw:t="ACESFilmic";break;case iw:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+n+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function NE(n){return[n.extensionDerivatives||n.envMapCubeUVHeight||n.bumpMap||n.tangentSpaceNormalMap||n.clearcoatNormalMap||n.flatShading||n.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(n.extensionFragDepth||n.logarithmicDepthBuffer)&&n.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",n.extensionDrawBuffers&&n.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(n.extensionShaderTextureLOD||n.envMap||n.transmission)&&n.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(_a).join(`
`)}function BE(n){const e=[];for(const t in n){const i=n[t];i!==!1&&e.push("#define "+t+" "+i)}return e.join(`
`)}function UE(n,e){const t={},i=n.getProgramParameter(e,35721);for(let r=0;r<i;r++){const s=n.getActiveAttrib(e,r),o=s.name;let a=1;s.type===35674&&(a=2),s.type===35675&&(a=3),s.type===35676&&(a=4),t[o]={type:s.type,location:n.getAttribLocation(e,o),locationSize:a}}return t}function _a(n){return n!==""}function Q0(n,e){return n.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function eg(n,e){return n.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const zE=/^[ \t]*#include +<([\w\d./]+)>/gm;function rp(n){return n.replace(zE,GE)}function GE(n,e){const t=rt[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return rp(t)}const kE=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,HE=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function tg(n){return n.replace(HE,hy).replace(kE,VE)}function VE(n,e,t,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),hy(n,e,t,i)}function hy(n,e,t,i){let r="";for(let s=parseInt(e);s<parseInt(t);s++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function ng(n){let e="precision "+n.precision+` float;
precision `+n.precision+" int;";return n.precision==="highp"?e+=`
#define HIGH_PRECISION`:n.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:n.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function WE(n){let e="SHADOWMAP_TYPE_BASIC";return n.shadowMapType===Fb?e="SHADOWMAP_TYPE_PCF":n.shadowMapType===RM?e="SHADOWMAP_TYPE_PCF_SOFT":n.shadowMapType===ya&&(e="SHADOWMAP_TYPE_VSM"),e}function qE(n){let e="ENVMAP_TYPE_CUBE";if(n.envMap)switch(n.envMapMode){case So:case Eo:e="ENVMAP_TYPE_CUBE";break;case Pu:e="ENVMAP_TYPE_CUBE_UV";break}return e}function $E(n){let e="ENVMAP_MODE_REFLECTION";if(n.envMap)switch(n.envMapMode){case Eo:e="ENVMAP_MODE_REFRACTION";break}return e}function jE(n){let e="ENVMAP_BLENDING_NONE";if(n.envMap)switch(n.combine){case Jp:e="ENVMAP_BLENDING_MULTIPLY";break;case JM:e="ENVMAP_BLENDING_MIX";break;case KM:e="ENVMAP_BLENDING_ADD";break}return e}function XE(n){const e=n.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),112)),texelHeight:i,maxMip:t}}function YE(n,e,t,i){const r=n.getContext(),s=t.defines;let o=t.vertexShader,a=t.fragmentShader;const l=WE(t),c=qE(t),u=$E(t),f=jE(t),h=XE(t),d=t.isWebGL2?"":NE(t),p=BE(s),g=r.createProgram();let m,v,x=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(m=[p].filter(_a).join(`
`),m.length>0&&(m+=`
`),v=[d,p].filter(_a).join(`
`),v.length>0&&(v+=`
`)):(m=[ng(t),"#define SHADER_NAME "+t.shaderName,p,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(_a).join(`
`),v=[d,ng(t),"#define SHADER_NAME "+t.shaderName,p,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+u:"",t.envMap?"#define "+f:"",h?"#define CUBEUV_TEXEL_WIDTH "+h.texelWidth:"",h?"#define CUBEUV_TEXEL_HEIGHT "+h.texelHeight:"",h?"#define CUBEUV_MAX_MIP "+h.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Oi?"#define TONE_MAPPING":"",t.toneMapping!==Oi?rt.tonemapping_pars_fragment:"",t.toneMapping!==Oi?FE("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",rt.encodings_pars_fragment,OE("linearToOutputTexel",t.outputEncoding),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(_a).join(`
`)),o=rp(o),o=Q0(o,t),o=eg(o,t),a=rp(a),a=Q0(a,t),a=eg(a,t),o=tg(o),a=tg(a),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(x=`#version 300 es
`,m=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,v=["#define varying in",t.glslVersion===S0?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===S0?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+v);const M=x+m+o,b=x+v+a,w=J0(r,35633,M),y=J0(r,35632,b);if(r.attachShader(g,w),r.attachShader(g,y),t.index0AttributeName!==void 0?r.bindAttribLocation(g,0,t.index0AttributeName):t.morphTargets===!0&&r.bindAttribLocation(g,0,"position"),r.linkProgram(g),n.debug.checkShaderErrors){const E=r.getProgramInfoLog(g).trim(),R=r.getShaderInfoLog(w).trim(),I=r.getShaderInfoLog(y).trim();let $=!0,q=!0;if(r.getProgramParameter(g,35714)===!1){$=!1;const L=K0(r,w,"vertex"),N=K0(r,y,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(g,35715)+`

Program Info Log: `+E+`
`+L+`
`+N)}else E!==""?console.warn("THREE.WebGLProgram: Program Info Log:",E):(R===""||I==="")&&(q=!1);q&&(this.diagnostics={runnable:$,programLog:E,vertexShader:{log:R,prefix:m},fragmentShader:{log:I,prefix:v}})}r.deleteShader(w),r.deleteShader(y);let _;this.getUniforms=function(){return _===void 0&&(_=new Gl(r,g)),_};let S;return this.getAttributes=function(){return S===void 0&&(S=UE(r,g)),S},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(g),this.program=void 0},this.name=t.shaderName,this.id=PE++,this.cacheKey=e,this.usedTimes=1,this.program=g,this.vertexShader=w,this.fragmentShader=y,this}let ZE=0;class JE{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,i=e.fragmentShader,r=this._getShaderStage(t),s=this._getShaderStage(i),o=this._getShaderCacheForMaterial(e);return o.has(r)===!1&&(o.add(r),r.usedTimes++),o.has(s)===!1&&(o.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const i of t)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;return t.has(e)===!1&&t.set(e,new Set),t.get(e)}_getShaderStage(e){const t=this.shaderCache;if(t.has(e)===!1){const i=new KE(e);t.set(e,i)}return t.get(e)}}class KE{constructor(e){this.id=ZE++,this.code=e,this.usedTimes=0}}function QE(n,e,t,i,r,s,o){const a=new Jb,l=new JE,c=[],u=r.isWebGL2,f=r.logarithmicDepthBuffer,h=r.vertexTextures;let d=r.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function g(S,E,R,I,$){const q=I.fog,L=$.geometry,N=S.isMeshStandardMaterial?I.environment:null,G=(S.isMeshStandardMaterial?t:e).get(S.envMap||N),X=G&&G.mapping===Pu?G.image.height:null,K=p[S.type];S.precision!==null&&(d=r.getMaxPrecision(S.precision),d!==S.precision&&console.warn("THREE.WebGLProgram.getParameters:",S.precision,"not supported, using",d,"instead."));const j=L.morphAttributes.position||L.morphAttributes.normal||L.morphAttributes.color,ee=j!==void 0?j.length:0;let P=0;L.morphAttributes.position!==void 0&&(P=1),L.morphAttributes.normal!==void 0&&(P=2),L.morphAttributes.color!==void 0&&(P=3);let V,Y,Q,B;if(K){const Ie=ii[K];V=Ie.vertexShader,Y=Ie.fragmentShader}else V=S.vertexShader,Y=S.fragmentShader,l.update(S),Q=l.getVertexShaderID(S),B=l.getFragmentShaderID(S);const oe=n.getRenderTarget(),Se=S.alphaTest>0,we=S.clearcoat>0,ye=S.iridescence>0;return{isWebGL2:u,shaderID:K,shaderName:S.type,vertexShader:V,fragmentShader:Y,defines:S.defines,customVertexShaderID:Q,customFragmentShaderID:B,isRawShaderMaterial:S.isRawShaderMaterial===!0,glslVersion:S.glslVersion,precision:d,instancing:$.isInstancedMesh===!0,instancingColor:$.isInstancedMesh===!0&&$.instanceColor!==null,supportsVertexTextures:h,outputEncoding:oe===null?n.outputEncoding:oe.isXRRenderTarget===!0?oe.texture.encoding:ss,map:!!S.map,matcap:!!S.matcap,envMap:!!G,envMapMode:G&&G.mapping,envMapCubeUVHeight:X,lightMap:!!S.lightMap,aoMap:!!S.aoMap,emissiveMap:!!S.emissiveMap,bumpMap:!!S.bumpMap,normalMap:!!S.normalMap,objectSpaceNormalMap:S.normalMapType===Mw,tangentSpaceNormalMap:S.normalMapType===Gb,decodeVideoTexture:!!S.map&&S.map.isVideoTexture===!0&&S.map.encoding===Et,clearcoat:we,clearcoatMap:we&&!!S.clearcoatMap,clearcoatRoughnessMap:we&&!!S.clearcoatRoughnessMap,clearcoatNormalMap:we&&!!S.clearcoatNormalMap,iridescence:ye,iridescenceMap:ye&&!!S.iridescenceMap,iridescenceThicknessMap:ye&&!!S.iridescenceThicknessMap,displacementMap:!!S.displacementMap,roughnessMap:!!S.roughnessMap,metalnessMap:!!S.metalnessMap,specularMap:!!S.specularMap,specularIntensityMap:!!S.specularIntensityMap,specularColorMap:!!S.specularColorMap,opaque:S.transparent===!1&&S.blending===xo,alphaMap:!!S.alphaMap,alphaTest:Se,gradientMap:!!S.gradientMap,sheen:S.sheen>0,sheenColorMap:!!S.sheenColorMap,sheenRoughnessMap:!!S.sheenRoughnessMap,transmission:S.transmission>0,transmissionMap:!!S.transmissionMap,thicknessMap:!!S.thicknessMap,combine:S.combine,vertexTangents:!!S.normalMap&&!!L.attributes.tangent,vertexColors:S.vertexColors,vertexAlphas:S.vertexColors===!0&&!!L.attributes.color&&L.attributes.color.itemSize===4,vertexUvs:!!S.map||!!S.bumpMap||!!S.normalMap||!!S.specularMap||!!S.alphaMap||!!S.emissiveMap||!!S.roughnessMap||!!S.metalnessMap||!!S.clearcoatMap||!!S.clearcoatRoughnessMap||!!S.clearcoatNormalMap||!!S.iridescenceMap||!!S.iridescenceThicknessMap||!!S.displacementMap||!!S.transmissionMap||!!S.thicknessMap||!!S.specularIntensityMap||!!S.specularColorMap||!!S.sheenColorMap||!!S.sheenRoughnessMap,uvsVertexOnly:!(S.map||S.bumpMap||S.normalMap||S.specularMap||S.alphaMap||S.emissiveMap||S.roughnessMap||S.metalnessMap||S.clearcoatNormalMap||S.iridescenceMap||S.iridescenceThicknessMap||S.transmission>0||S.transmissionMap||S.thicknessMap||S.specularIntensityMap||S.specularColorMap||S.sheen>0||S.sheenColorMap||S.sheenRoughnessMap)&&!!S.displacementMap,fog:!!q,useFog:S.fog===!0,fogExp2:q&&q.isFogExp2,flatShading:!!S.flatShading,sizeAttenuation:S.sizeAttenuation,logarithmicDepthBuffer:f,skinning:$.isSkinnedMesh===!0,morphTargets:L.morphAttributes.position!==void 0,morphNormals:L.morphAttributes.normal!==void 0,morphColors:L.morphAttributes.color!==void 0,morphTargetsCount:ee,morphTextureStride:P,numDirLights:E.directional.length,numPointLights:E.point.length,numSpotLights:E.spot.length,numRectAreaLights:E.rectArea.length,numHemiLights:E.hemi.length,numDirLightShadows:E.directionalShadowMap.length,numPointLightShadows:E.pointShadowMap.length,numSpotLightShadows:E.spotShadowMap.length,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:S.dithering,shadowMapEnabled:n.shadowMap.enabled&&R.length>0,shadowMapType:n.shadowMap.type,toneMapping:S.toneMapped?n.toneMapping:Oi,physicallyCorrectLights:n.physicallyCorrectLights,premultipliedAlpha:S.premultipliedAlpha,doubleSided:S.side===wo,flipSided:S.side===qn,useDepthPacking:!!S.depthPacking,depthPacking:S.depthPacking||0,index0AttributeName:S.index0AttributeName,extensionDerivatives:S.extensions&&S.extensions.derivatives,extensionFragDepth:S.extensions&&S.extensions.fragDepth,extensionDrawBuffers:S.extensions&&S.extensions.drawBuffers,extensionShaderTextureLOD:S.extensions&&S.extensions.shaderTextureLOD,rendererExtensionFragDepth:u||i.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||i.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||i.has("EXT_shader_texture_lod"),customProgramCacheKey:S.customProgramCacheKey()}}function m(S){const E=[];if(S.shaderID?E.push(S.shaderID):(E.push(S.customVertexShaderID),E.push(S.customFragmentShaderID)),S.defines!==void 0)for(const R in S.defines)E.push(R),E.push(S.defines[R]);return S.isRawShaderMaterial===!1&&(v(E,S),x(E,S),E.push(n.outputEncoding)),E.push(S.customProgramCacheKey),E.join()}function v(S,E){S.push(E.precision),S.push(E.outputEncoding),S.push(E.envMapMode),S.push(E.envMapCubeUVHeight),S.push(E.combine),S.push(E.vertexUvs),S.push(E.fogExp2),S.push(E.sizeAttenuation),S.push(E.morphTargetsCount),S.push(E.morphAttributeCount),S.push(E.numDirLights),S.push(E.numPointLights),S.push(E.numSpotLights),S.push(E.numHemiLights),S.push(E.numRectAreaLights),S.push(E.numDirLightShadows),S.push(E.numPointLightShadows),S.push(E.numSpotLightShadows),S.push(E.shadowMapType),S.push(E.toneMapping),S.push(E.numClippingPlanes),S.push(E.numClipIntersection),S.push(E.depthPacking)}function x(S,E){a.disableAll(),E.isWebGL2&&a.enable(0),E.supportsVertexTextures&&a.enable(1),E.instancing&&a.enable(2),E.instancingColor&&a.enable(3),E.map&&a.enable(4),E.matcap&&a.enable(5),E.envMap&&a.enable(6),E.lightMap&&a.enable(7),E.aoMap&&a.enable(8),E.emissiveMap&&a.enable(9),E.bumpMap&&a.enable(10),E.normalMap&&a.enable(11),E.objectSpaceNormalMap&&a.enable(12),E.tangentSpaceNormalMap&&a.enable(13),E.clearcoat&&a.enable(14),E.clearcoatMap&&a.enable(15),E.clearcoatRoughnessMap&&a.enable(16),E.clearcoatNormalMap&&a.enable(17),E.iridescence&&a.enable(18),E.iridescenceMap&&a.enable(19),E.iridescenceThicknessMap&&a.enable(20),E.displacementMap&&a.enable(21),E.specularMap&&a.enable(22),E.roughnessMap&&a.enable(23),E.metalnessMap&&a.enable(24),E.gradientMap&&a.enable(25),E.alphaMap&&a.enable(26),E.alphaTest&&a.enable(27),E.vertexColors&&a.enable(28),E.vertexAlphas&&a.enable(29),E.vertexUvs&&a.enable(30),E.vertexTangents&&a.enable(31),E.uvsVertexOnly&&a.enable(32),E.fog&&a.enable(33),S.push(a.mask),a.disableAll(),E.useFog&&a.enable(0),E.flatShading&&a.enable(1),E.logarithmicDepthBuffer&&a.enable(2),E.skinning&&a.enable(3),E.morphTargets&&a.enable(4),E.morphNormals&&a.enable(5),E.morphColors&&a.enable(6),E.premultipliedAlpha&&a.enable(7),E.shadowMapEnabled&&a.enable(8),E.physicallyCorrectLights&&a.enable(9),E.doubleSided&&a.enable(10),E.flipSided&&a.enable(11),E.useDepthPacking&&a.enable(12),E.dithering&&a.enable(13),E.specularIntensityMap&&a.enable(14),E.specularColorMap&&a.enable(15),E.transmission&&a.enable(16),E.transmissionMap&&a.enable(17),E.thicknessMap&&a.enable(18),E.sheen&&a.enable(19),E.sheenColorMap&&a.enable(20),E.sheenRoughnessMap&&a.enable(21),E.decodeVideoTexture&&a.enable(22),E.opaque&&a.enable(23),S.push(a.mask)}function M(S){const E=p[S.type];let R;if(E){const I=ii[E];R=zw.clone(I.uniforms)}else R=S.uniforms;return R}function b(S,E){let R;for(let I=0,$=c.length;I<$;I++){const q=c[I];if(q.cacheKey===E){R=q,++R.usedTimes;break}}return R===void 0&&(R=new YE(n,E,S,s),c.push(R)),R}function w(S){if(--S.usedTimes===0){const E=c.indexOf(S);c[E]=c[c.length-1],c.pop(),S.destroy()}}function y(S){l.remove(S)}function _(){l.dispose()}return{getParameters:g,getProgramCacheKey:m,getUniforms:M,acquireProgram:b,releaseProgram:w,releaseShaderCache:y,programs:c,dispose:_}}function eT(){let n=new WeakMap;function e(s){let o=n.get(s);return o===void 0&&(o={},n.set(s,o)),o}function t(s){n.delete(s)}function i(s,o,a){n.get(s)[o]=a}function r(){n=new WeakMap}return{get:e,remove:t,update:i,dispose:r}}function tT(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.material.id!==e.material.id?n.material.id-e.material.id:n.z!==e.z?n.z-e.z:n.id-e.id}function ig(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.z!==e.z?e.z-n.z:n.id-e.id}function rg(){const n=[];let e=0;const t=[],i=[],r=[];function s(){e=0,t.length=0,i.length=0,r.length=0}function o(f,h,d,p,g,m){let v=n[e];return v===void 0?(v={id:f.id,object:f,geometry:h,material:d,groupOrder:p,renderOrder:f.renderOrder,z:g,group:m},n[e]=v):(v.id=f.id,v.object=f,v.geometry=h,v.material=d,v.groupOrder=p,v.renderOrder=f.renderOrder,v.z=g,v.group=m),e++,v}function a(f,h,d,p,g,m){const v=o(f,h,d,p,g,m);d.transmission>0?i.push(v):d.transparent===!0?r.push(v):t.push(v)}function l(f,h,d,p,g,m){const v=o(f,h,d,p,g,m);d.transmission>0?i.unshift(v):d.transparent===!0?r.unshift(v):t.unshift(v)}function c(f,h){t.length>1&&t.sort(f||tT),i.length>1&&i.sort(h||ig),r.length>1&&r.sort(h||ig)}function u(){for(let f=e,h=n.length;f<h;f++){const d=n[f];if(d.id===null)break;d.id=null,d.object=null,d.geometry=null,d.material=null,d.group=null}}return{opaque:t,transmissive:i,transparent:r,init:s,push:a,unshift:l,finish:u,sort:c}}function nT(){let n=new WeakMap;function e(i,r){let s;return n.has(i)===!1?(s=new rg,n.set(i,[s])):r>=n.get(i).length?(s=new rg,n.get(i).push(s)):s=n.get(i)[r],s}function t(){n=new WeakMap}return{get:e,dispose:t}}function iT(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new ce,color:new lt};break;case"SpotLight":t={position:new ce,direction:new ce,color:new lt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new ce,color:new lt,distance:0,decay:0};break;case"HemisphereLight":t={direction:new ce,skyColor:new lt,groundColor:new lt};break;case"RectAreaLight":t={color:new lt,position:new ce,halfWidth:new ce,halfHeight:new ce};break}return n[e.id]=t,t}}}function rT(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new gt};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new gt};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new gt,shadowCameraNear:1,shadowCameraFar:1e3};break}return n[e.id]=t,t}}}let sT=0;function oT(n,e){return(e.castShadow?1:0)-(n.castShadow?1:0)}function aT(n,e){const t=new iT,i=rT(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let u=0;u<9;u++)r.probe.push(new ce);const s=new ce,o=new sn,a=new sn;function l(u,f){let h=0,d=0,p=0;for(let E=0;E<9;E++)r.probe[E].set(0,0,0);let g=0,m=0,v=0,x=0,M=0,b=0,w=0,y=0;u.sort(oT);const _=f!==!0?Math.PI:1;for(let E=0,R=u.length;E<R;E++){const I=u[E],$=I.color,q=I.intensity,L=I.distance,N=I.shadow&&I.shadow.map?I.shadow.map.texture:null;if(I.isAmbientLight)h+=$.r*q*_,d+=$.g*q*_,p+=$.b*q*_;else if(I.isLightProbe)for(let G=0;G<9;G++)r.probe[G].addScaledVector(I.sh.coefficients[G],q);else if(I.isDirectionalLight){const G=t.get(I);if(G.color.copy(I.color).multiplyScalar(I.intensity*_),I.castShadow){const X=I.shadow,K=i.get(I);K.shadowBias=X.bias,K.shadowNormalBias=X.normalBias,K.shadowRadius=X.radius,K.shadowMapSize=X.mapSize,r.directionalShadow[g]=K,r.directionalShadowMap[g]=N,r.directionalShadowMatrix[g]=I.shadow.matrix,b++}r.directional[g]=G,g++}else if(I.isSpotLight){const G=t.get(I);if(G.position.setFromMatrixPosition(I.matrixWorld),G.color.copy($).multiplyScalar(q*_),G.distance=L,G.coneCos=Math.cos(I.angle),G.penumbraCos=Math.cos(I.angle*(1-I.penumbra)),G.decay=I.decay,I.castShadow){const X=I.shadow,K=i.get(I);K.shadowBias=X.bias,K.shadowNormalBias=X.normalBias,K.shadowRadius=X.radius,K.shadowMapSize=X.mapSize,r.spotShadow[v]=K,r.spotShadowMap[v]=N,r.spotShadowMatrix[v]=I.shadow.matrix,y++}r.spot[v]=G,v++}else if(I.isRectAreaLight){const G=t.get(I);G.color.copy($).multiplyScalar(q),G.halfWidth.set(I.width*.5,0,0),G.halfHeight.set(0,I.height*.5,0),r.rectArea[x]=G,x++}else if(I.isPointLight){const G=t.get(I);if(G.color.copy(I.color).multiplyScalar(I.intensity*_),G.distance=I.distance,G.decay=I.decay,I.castShadow){const X=I.shadow,K=i.get(I);K.shadowBias=X.bias,K.shadowNormalBias=X.normalBias,K.shadowRadius=X.radius,K.shadowMapSize=X.mapSize,K.shadowCameraNear=X.camera.near,K.shadowCameraFar=X.camera.far,r.pointShadow[m]=K,r.pointShadowMap[m]=N,r.pointShadowMatrix[m]=I.shadow.matrix,w++}r.point[m]=G,m++}else if(I.isHemisphereLight){const G=t.get(I);G.skyColor.copy(I.color).multiplyScalar(q*_),G.groundColor.copy(I.groundColor).multiplyScalar(q*_),r.hemi[M]=G,M++}}x>0&&(e.isWebGL2||n.has("OES_texture_float_linear")===!0?(r.rectAreaLTC1=Oe.LTC_FLOAT_1,r.rectAreaLTC2=Oe.LTC_FLOAT_2):n.has("OES_texture_half_float_linear")===!0?(r.rectAreaLTC1=Oe.LTC_HALF_1,r.rectAreaLTC2=Oe.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=h,r.ambient[1]=d,r.ambient[2]=p;const S=r.hash;(S.directionalLength!==g||S.pointLength!==m||S.spotLength!==v||S.rectAreaLength!==x||S.hemiLength!==M||S.numDirectionalShadows!==b||S.numPointShadows!==w||S.numSpotShadows!==y)&&(r.directional.length=g,r.spot.length=v,r.rectArea.length=x,r.point.length=m,r.hemi.length=M,r.directionalShadow.length=b,r.directionalShadowMap.length=b,r.pointShadow.length=w,r.pointShadowMap.length=w,r.spotShadow.length=y,r.spotShadowMap.length=y,r.directionalShadowMatrix.length=b,r.pointShadowMatrix.length=w,r.spotShadowMatrix.length=y,S.directionalLength=g,S.pointLength=m,S.spotLength=v,S.rectAreaLength=x,S.hemiLength=M,S.numDirectionalShadows=b,S.numPointShadows=w,S.numSpotShadows=y,r.version=sT++)}function c(u,f){let h=0,d=0,p=0,g=0,m=0;const v=f.matrixWorldInverse;for(let x=0,M=u.length;x<M;x++){const b=u[x];if(b.isDirectionalLight){const w=r.directional[h];w.direction.setFromMatrixPosition(b.matrixWorld),s.setFromMatrixPosition(b.target.matrixWorld),w.direction.sub(s),w.direction.transformDirection(v),h++}else if(b.isSpotLight){const w=r.spot[p];w.position.setFromMatrixPosition(b.matrixWorld),w.position.applyMatrix4(v),w.direction.setFromMatrixPosition(b.matrixWorld),s.setFromMatrixPosition(b.target.matrixWorld),w.direction.sub(s),w.direction.transformDirection(v),p++}else if(b.isRectAreaLight){const w=r.rectArea[g];w.position.setFromMatrixPosition(b.matrixWorld),w.position.applyMatrix4(v),a.identity(),o.copy(b.matrixWorld),o.premultiply(v),a.extractRotation(o),w.halfWidth.set(b.width*.5,0,0),w.halfHeight.set(0,b.height*.5,0),w.halfWidth.applyMatrix4(a),w.halfHeight.applyMatrix4(a),g++}else if(b.isPointLight){const w=r.point[d];w.position.setFromMatrixPosition(b.matrixWorld),w.position.applyMatrix4(v),d++}else if(b.isHemisphereLight){const w=r.hemi[m];w.direction.setFromMatrixPosition(b.matrixWorld),w.direction.transformDirection(v),m++}}}return{setup:l,setupView:c,state:r}}function sg(n,e){const t=new aT(n,e),i=[],r=[];function s(){i.length=0,r.length=0}function o(f){i.push(f)}function a(f){r.push(f)}function l(f){t.setup(i,f)}function c(f){t.setupView(i,f)}return{init:s,state:{lightsArray:i,shadowsArray:r,lights:t},setupLights:l,setupLightsView:c,pushLight:o,pushShadow:a}}function cT(n,e){let t=new WeakMap;function i(s,o=0){let a;return t.has(s)===!1?(a=new sg(n,e),t.set(s,[a])):o>=t.get(s).length?(a=new sg(n,e),t.get(s).push(a)):a=t.get(s)[o],a}function r(){t=new WeakMap}return{get:i,dispose:r}}let lT=class extends pc{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=yw,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}},uT=class extends pc{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new ce,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}};const fT=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,hT=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function dT(n,e,t){let i=new sy;const r=new gt,s=new gt,o=new Vt,a=new lT({depthPacking:_w}),l=new uT,c={},u=t.maxTextureSize,f={0:qn,1:Ra,2:wo},h=new as({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new gt},radius:{value:4}},vertexShader:fT,fragmentShader:hT}),d=h.clone();d.defines.HORIZONTAL_PASS=1;const p=new mc;p.setAttribute("position",new ci(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const g=new Ii(p,h),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Fb,this.render=function(b,w,y){if(m.enabled===!1||m.autoUpdate===!1&&m.needsUpdate===!1||b.length===0)return;const _=n.getRenderTarget(),S=n.getActiveCubeFace(),E=n.getActiveMipmapLevel(),R=n.state;R.setBlending(lr),R.buffers.color.setClear(1,1,1,1),R.buffers.depth.setTest(!0),R.setScissorTest(!1);for(let I=0,$=b.length;I<$;I++){const q=b[I],L=q.shadow;if(L===void 0){console.warn("THREE.WebGLShadowMap:",q,"has no shadow.");continue}if(L.autoUpdate===!1&&L.needsUpdate===!1)continue;r.copy(L.mapSize);const N=L.getFrameExtents();if(r.multiply(N),s.copy(L.mapSize),(r.x>u||r.y>u)&&(r.x>u&&(s.x=Math.floor(u/N.x),r.x=s.x*N.x,L.mapSize.x=s.x),r.y>u&&(s.y=Math.floor(u/N.y),r.y=s.y*N.y,L.mapSize.y=s.y)),L.map===null){const X=this.type!==ya?{minFilter:rn,magFilter:rn}:{};L.map=new os(r.x,r.y,X),L.map.texture.name=q.name+".shadowMap",L.camera.updateProjectionMatrix()}n.setRenderTarget(L.map),n.clear();const G=L.getViewportCount();for(let X=0;X<G;X++){const K=L.getViewport(X);o.set(s.x*K.x,s.y*K.y,s.x*K.z,s.y*K.w),R.viewport(o),L.updateMatrices(q,X),i=L.getFrustum(),M(w,y,L.camera,q,this.type)}L.isPointLightShadow!==!0&&this.type===ya&&v(L,y),L.needsUpdate=!1}m.needsUpdate=!1,n.setRenderTarget(_,S,E)};function v(b,w){const y=e.update(g);h.defines.VSM_SAMPLES!==b.blurSamples&&(h.defines.VSM_SAMPLES=b.blurSamples,d.defines.VSM_SAMPLES=b.blurSamples,h.needsUpdate=!0,d.needsUpdate=!0),b.mapPass===null&&(b.mapPass=new os(r.x,r.y)),h.uniforms.shadow_pass.value=b.map.texture,h.uniforms.resolution.value=b.mapSize,h.uniforms.radius.value=b.radius,n.setRenderTarget(b.mapPass),n.clear(),n.renderBufferDirect(w,null,y,h,g,null),d.uniforms.shadow_pass.value=b.mapPass.texture,d.uniforms.resolution.value=b.mapSize,d.uniforms.radius.value=b.radius,n.setRenderTarget(b.map),n.clear(),n.renderBufferDirect(w,null,y,d,g,null)}function x(b,w,y,_,S,E){let R=null;const I=y.isPointLight===!0?b.customDistanceMaterial:b.customDepthMaterial;if(I!==void 0?R=I:R=y.isPointLight===!0?l:a,n.localClippingEnabled&&w.clipShadows===!0&&Array.isArray(w.clippingPlanes)&&w.clippingPlanes.length!==0||w.displacementMap&&w.displacementScale!==0||w.alphaMap&&w.alphaTest>0){const $=R.uuid,q=w.uuid;let L=c[$];L===void 0&&(L={},c[$]=L);let N=L[q];N===void 0&&(N=R.clone(),L[q]=N),R=N}return R.visible=w.visible,R.wireframe=w.wireframe,E===ya?R.side=w.shadowSide!==null?w.shadowSide:w.side:R.side=w.shadowSide!==null?w.shadowSide:f[w.side],R.alphaMap=w.alphaMap,R.alphaTest=w.alphaTest,R.clipShadows=w.clipShadows,R.clippingPlanes=w.clippingPlanes,R.clipIntersection=w.clipIntersection,R.displacementMap=w.displacementMap,R.displacementScale=w.displacementScale,R.displacementBias=w.displacementBias,R.wireframeLinewidth=w.wireframeLinewidth,R.linewidth=w.linewidth,y.isPointLight===!0&&R.isMeshDistanceMaterial===!0&&(R.referencePosition.setFromMatrixPosition(y.matrixWorld),R.nearDistance=_,R.farDistance=S),R}function M(b,w,y,_,S){if(b.visible===!1)return;if(b.layers.test(w.layers)&&(b.isMesh||b.isLine||b.isPoints)&&(b.castShadow||b.receiveShadow&&S===ya)&&(!b.frustumCulled||i.intersectsObject(b))){b.modelViewMatrix.multiplyMatrices(y.matrixWorldInverse,b.matrixWorld);const I=e.update(b),$=b.material;if(Array.isArray($)){const q=I.groups;for(let L=0,N=q.length;L<N;L++){const G=q[L],X=$[G.materialIndex];if(X&&X.visible){const K=x(b,X,_,y.near,y.far,S);n.renderBufferDirect(y,null,I,K,b,G)}}}else if($.visible){const q=x(b,$,_,y.near,y.far,S);n.renderBufferDirect(y,null,I,q,b,null)}}const R=b.children;for(let I=0,$=R.length;I<$;I++)M(R[I],w,y,_,S)}}function pT(n,e,t){const i=t.isWebGL2;function r(){let re=!1;const ze=new Vt;let xe=null;const Be=new Vt(0,0,0,0);return{setMask:function(Fe){xe!==Fe&&!re&&(n.colorMask(Fe,Fe,Fe,Fe),xe=Fe)},setLocked:function(Fe){re=Fe},setClear:function(Fe,it,ot,dt,cn){cn===!0&&(Fe*=dt,it*=dt,ot*=dt),ze.set(Fe,it,ot,dt),Be.equals(ze)===!1&&(n.clearColor(Fe,it,ot,dt),Be.copy(ze))},reset:function(){re=!1,xe=null,Be.set(-1,0,0,0)}}}function s(){let re=!1,ze=null,xe=null,Be=null;return{setTest:function(Fe){Fe?Se(2929):we(2929)},setMask:function(Fe){ze!==Fe&&!re&&(n.depthMask(Fe),ze=Fe)},setFunc:function(Fe){if(xe!==Fe){if(Fe)switch(Fe){case WM:n.depthFunc(512);break;case qM:n.depthFunc(519);break;case $M:n.depthFunc(513);break;case Xd:n.depthFunc(515);break;case jM:n.depthFunc(514);break;case XM:n.depthFunc(518);break;case YM:n.depthFunc(516);break;case ZM:n.depthFunc(517);break;default:n.depthFunc(515)}else n.depthFunc(515);xe=Fe}},setLocked:function(Fe){re=Fe},setClear:function(Fe){Be!==Fe&&(n.clearDepth(Fe),Be=Fe)},reset:function(){re=!1,ze=null,xe=null,Be=null}}}function o(){let re=!1,ze=null,xe=null,Be=null,Fe=null,it=null,ot=null,dt=null,cn=null;return{setTest:function(pt){re||(pt?Se(2960):we(2960))},setMask:function(pt){ze!==pt&&!re&&(n.stencilMask(pt),ze=pt)},setFunc:function(pt,U,ue){(xe!==pt||Be!==U||Fe!==ue)&&(n.stencilFunc(pt,U,ue),xe=pt,Be=U,Fe=ue)},setOp:function(pt,U,ue){(it!==pt||ot!==U||dt!==ue)&&(n.stencilOp(pt,U,ue),it=pt,ot=U,dt=ue)},setLocked:function(pt){re=pt},setClear:function(pt){cn!==pt&&(n.clearStencil(pt),cn=pt)},reset:function(){re=!1,ze=null,xe=null,Be=null,Fe=null,it=null,ot=null,dt=null,cn=null}}}const a=new r,l=new s,c=new o,u=new WeakMap,f=new WeakMap;let h={},d={},p=new WeakMap,g=[],m=null,v=!1,x=null,M=null,b=null,w=null,y=null,_=null,S=null,E=!1,R=null,I=null,$=null,q=null,L=null;const N=n.getParameter(35661);let G=!1,X=0;const K=n.getParameter(7938);K.indexOf("WebGL")!==-1?(X=parseFloat(/^WebGL (\d)/.exec(K)[1]),G=X>=1):K.indexOf("OpenGL ES")!==-1&&(X=parseFloat(/^OpenGL ES (\d)/.exec(K)[1]),G=X>=2);let j=null,ee={};const P=n.getParameter(3088),V=n.getParameter(2978),Y=new Vt().fromArray(P),Q=new Vt().fromArray(V);function B(re,ze,xe){const Be=new Uint8Array(4),Fe=n.createTexture();n.bindTexture(re,Fe),n.texParameteri(re,10241,9728),n.texParameteri(re,10240,9728);for(let it=0;it<xe;it++)n.texImage2D(ze+it,0,6408,1,1,0,6408,5121,Be);return Fe}const oe={};oe[3553]=B(3553,3553,1),oe[34067]=B(34067,34069,6),a.setClear(0,0,0,1),l.setClear(1),c.setClear(0),Se(2929),l.setFunc(Xd),Ce(!1),O(Xm),Se(2884),Te(lr);function Se(re){h[re]!==!0&&(n.enable(re),h[re]=!0)}function we(re){h[re]!==!1&&(n.disable(re),h[re]=!1)}function ye(re,ze){return d[re]!==ze?(n.bindFramebuffer(re,ze),d[re]=ze,i&&(re===36009&&(d[36160]=ze),re===36160&&(d[36009]=ze)),!0):!1}function _e(re,ze){let xe=g,Be=!1;if(re)if(xe=p.get(ze),xe===void 0&&(xe=[],p.set(ze,xe)),re.isWebGLMultipleRenderTargets){const Fe=re.texture;if(xe.length!==Fe.length||xe[0]!==36064){for(let it=0,ot=Fe.length;it<ot;it++)xe[it]=36064+it;xe.length=Fe.length,Be=!0}}else xe[0]!==36064&&(xe[0]=36064,Be=!0);else xe[0]!==1029&&(xe[0]=1029,Be=!0);Be&&(t.isWebGL2?n.drawBuffers(xe):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(xe))}function Ie(re){return m!==re?(n.useProgram(re),m=re,!0):!1}const he={[fo]:32774,[DM]:32778,[OM]:32779};if(i)he[Km]=32775,he[Qm]=32776;else{const re=e.get("EXT_blend_minmax");re!==null&&(he[Km]=re.MIN_EXT,he[Qm]=re.MAX_EXT)}const pe={[FM]:0,[NM]:1,[BM]:768,[Nb]:770,[VM]:776,[kM]:774,[zM]:772,[UM]:769,[Bb]:771,[HM]:775,[GM]:773};function Te(re,ze,xe,Be,Fe,it,ot,dt){if(re===lr){v===!0&&(we(3042),v=!1);return}if(v===!1&&(Se(3042),v=!0),re!==IM){if(re!==x||dt!==E){if((M!==fo||y!==fo)&&(n.blendEquation(32774),M=fo,y=fo),dt)switch(re){case xo:n.blendFuncSeparate(1,771,1,771);break;case Ym:n.blendFunc(1,1);break;case Zm:n.blendFuncSeparate(0,769,0,1);break;case Jm:n.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",re);break}else switch(re){case xo:n.blendFuncSeparate(770,771,1,771);break;case Ym:n.blendFunc(770,1);break;case Zm:n.blendFuncSeparate(0,769,0,1);break;case Jm:n.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",re);break}b=null,w=null,_=null,S=null,x=re,E=dt}return}Fe=Fe||ze,it=it||xe,ot=ot||Be,(ze!==M||Fe!==y)&&(n.blendEquationSeparate(he[ze],he[Fe]),M=ze,y=Fe),(xe!==b||Be!==w||it!==_||ot!==S)&&(n.blendFuncSeparate(pe[xe],pe[Be],pe[it],pe[ot]),b=xe,w=Be,_=it,S=ot),x=re,E=null}function Ne(re,ze){re.side===wo?we(2884):Se(2884);let xe=re.side===qn;ze&&(xe=!xe),Ce(xe),re.blending===xo&&re.transparent===!1?Te(lr):Te(re.blending,re.blendEquation,re.blendSrc,re.blendDst,re.blendEquationAlpha,re.blendSrcAlpha,re.blendDstAlpha,re.premultipliedAlpha),l.setFunc(re.depthFunc),l.setTest(re.depthTest),l.setMask(re.depthWrite),a.setMask(re.colorWrite);const Be=re.stencilWrite;c.setTest(Be),Be&&(c.setMask(re.stencilWriteMask),c.setFunc(re.stencilFunc,re.stencilRef,re.stencilFuncMask),c.setOp(re.stencilFail,re.stencilZFail,re.stencilZPass)),me(re.polygonOffset,re.polygonOffsetFactor,re.polygonOffsetUnits),re.alphaToCoverage===!0?Se(32926):we(32926)}function Ce(re){R!==re&&(re?n.frontFace(2304):n.frontFace(2305),R=re)}function O(re){re!==LM?(Se(2884),re!==I&&(re===Xm?n.cullFace(1029):re===CM?n.cullFace(1028):n.cullFace(1032))):we(2884),I=re}function D(re){re!==$&&(G&&n.lineWidth(re),$=re)}function me(re,ze,xe){re?(Se(32823),(q!==ze||L!==xe)&&(n.polygonOffset(ze,xe),q=ze,L=xe)):we(32823)}function be(re){re?Se(3089):we(3089)}function Z(re){re===void 0&&(re=33984+N-1),j!==re&&(n.activeTexture(re),j=re)}function C(re,ze){j===null&&Z();let xe=ee[j];xe===void 0&&(xe={type:void 0,texture:void 0},ee[j]=xe),(xe.type!==re||xe.texture!==ze)&&(n.bindTexture(re,ze||oe[re]),xe.type=re,xe.texture=ze)}function A(){const re=ee[j];re!==void 0&&re.type!==void 0&&(n.bindTexture(re.type,null),re.type=void 0,re.texture=void 0)}function ie(){try{n.compressedTexImage2D.apply(n,arguments)}catch(re){console.error("THREE.WebGLState:",re)}}function se(){try{n.texSubImage2D.apply(n,arguments)}catch(re){console.error("THREE.WebGLState:",re)}}function le(){try{n.texSubImage3D.apply(n,arguments)}catch(re){console.error("THREE.WebGLState:",re)}}function ge(){try{n.compressedTexSubImage2D.apply(n,arguments)}catch(re){console.error("THREE.WebGLState:",re)}}function Re(){try{n.texStorage2D.apply(n,arguments)}catch(re){console.error("THREE.WebGLState:",re)}}function ne(){try{n.texStorage3D.apply(n,arguments)}catch(re){console.error("THREE.WebGLState:",re)}}function Me(){try{n.texImage2D.apply(n,arguments)}catch(re){console.error("THREE.WebGLState:",re)}}function Le(){try{n.texImage3D.apply(n,arguments)}catch(re){console.error("THREE.WebGLState:",re)}}function Ue(re){Y.equals(re)===!1&&(n.scissor(re.x,re.y,re.z,re.w),Y.copy(re))}function ke(re){Q.equals(re)===!1&&(n.viewport(re.x,re.y,re.z,re.w),Q.copy(re))}function Ye(re,ze){let xe=f.get(ze);xe===void 0&&(xe=new WeakMap,f.set(ze,xe));let Be=xe.get(re);Be===void 0&&(Be=n.getUniformBlockIndex(ze,re.name),xe.set(re,Be))}function st(re,ze){const Be=f.get(ze).get(re);u.get(re)!==Be&&(n.uniformBlockBinding(ze,Be,re.__bindingPointIndex),u.set(re,Be))}function yt(){n.disable(3042),n.disable(2884),n.disable(2929),n.disable(32823),n.disable(3089),n.disable(2960),n.disable(32926),n.blendEquation(32774),n.blendFunc(1,0),n.blendFuncSeparate(1,0,1,0),n.colorMask(!0,!0,!0,!0),n.clearColor(0,0,0,0),n.depthMask(!0),n.depthFunc(513),n.clearDepth(1),n.stencilMask(4294967295),n.stencilFunc(519,0,4294967295),n.stencilOp(7680,7680,7680),n.clearStencil(0),n.cullFace(1029),n.frontFace(2305),n.polygonOffset(0,0),n.activeTexture(33984),n.bindFramebuffer(36160,null),i===!0&&(n.bindFramebuffer(36009,null),n.bindFramebuffer(36008,null)),n.useProgram(null),n.lineWidth(1),n.scissor(0,0,n.canvas.width,n.canvas.height),n.viewport(0,0,n.canvas.width,n.canvas.height),h={},j=null,ee={},d={},p=new WeakMap,g=[],m=null,v=!1,x=null,M=null,b=null,w=null,y=null,_=null,S=null,E=!1,R=null,I=null,$=null,q=null,L=null,Y.set(0,0,n.canvas.width,n.canvas.height),Q.set(0,0,n.canvas.width,n.canvas.height),a.reset(),l.reset(),c.reset()}return{buffers:{color:a,depth:l,stencil:c},enable:Se,disable:we,bindFramebuffer:ye,drawBuffers:_e,useProgram:Ie,setBlending:Te,setMaterial:Ne,setFlipSided:Ce,setCullFace:O,setLineWidth:D,setPolygonOffset:me,setScissorTest:be,activeTexture:Z,bindTexture:C,unbindTexture:A,compressedTexImage2D:ie,texImage2D:Me,texImage3D:Le,updateUBOMapping:Ye,uniformBlockBinding:st,texStorage2D:Re,texStorage3D:ne,texSubImage2D:se,texSubImage3D:le,compressedTexSubImage2D:ge,scissor:Ue,viewport:ke,reset:yt}}function mT(n,e,t,i,r,s,o){const a=r.isWebGL2,l=r.maxTextures,c=r.maxCubemapSize,u=r.maxTextureSize,f=r.maxSamples,h=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,d=/OculusBrowser/g.test(navigator.userAgent),p=new WeakMap;let g;const m=new WeakMap;let v=!1;try{v=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function x(C,A){return v?new OffscreenCanvas(C,A):ql("canvas")}function M(C,A,ie,se){let le=1;if((C.width>se||C.height>se)&&(le=se/Math.max(C.width,C.height)),le<1||A===!0)if(typeof HTMLImageElement<"u"&&C instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&C instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&C instanceof ImageBitmap){const ge=A?ep:Math.floor,Re=ge(le*C.width),ne=ge(le*C.height);g===void 0&&(g=x(Re,ne));const Me=ie?x(Re,ne):g;return Me.width=Re,Me.height=ne,Me.getContext("2d").drawImage(C,0,0,Re,ne),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+C.width+"x"+C.height+") to ("+Re+"x"+ne+")."),Me}else return"data"in C&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+C.width+"x"+C.height+")."),C;return C}function b(C){return T0(C.width)&&T0(C.height)}function w(C){return a?!1:C.wrapS!==Vn||C.wrapT!==Vn||C.minFilter!==rn&&C.minFilter!==Ln}function y(C,A){return C.generateMipmaps&&A&&C.minFilter!==rn&&C.minFilter!==Ln}function _(C){n.generateMipmap(C)}function S(C,A,ie,se,le=!1){if(a===!1)return A;if(C!==null){if(n[C]!==void 0)return n[C];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+C+"'")}let ge=A;return A===6403&&(ie===5126&&(ge=33326),ie===5131&&(ge=33325),ie===5121&&(ge=33321)),A===33319&&(ie===5126&&(ge=33328),ie===5131&&(ge=33327),ie===5121&&(ge=33323)),A===6408&&(ie===5126&&(ge=34836),ie===5131&&(ge=34842),ie===5121&&(ge=se===Et&&le===!1?35907:32856),ie===32819&&(ge=32854),ie===32820&&(ge=32855)),(ge===33325||ge===33326||ge===33327||ge===33328||ge===34842||ge===34836)&&e.get("EXT_color_buffer_float"),ge}function E(C,A,ie){return y(C,ie)===!0||C.isFramebufferTexture&&C.minFilter!==rn&&C.minFilter!==Ln?Math.log2(Math.max(A.width,A.height))+1:C.mipmaps!==void 0&&C.mipmaps.length>0?C.mipmaps.length:C.isCompressedTexture&&Array.isArray(C.image)?A.mipmaps.length:1}function R(C){return C===rn||C===e0||C===t0?9728:9729}function I(C){const A=C.target;A.removeEventListener("dispose",I),q(A),A.isVideoTexture&&p.delete(A)}function $(C){const A=C.target;A.removeEventListener("dispose",$),N(A)}function q(C){const A=i.get(C);if(A.__webglInit===void 0)return;const ie=C.source,se=m.get(ie);if(se){const le=se[A.__cacheKey];le.usedTimes--,le.usedTimes===0&&L(C),Object.keys(se).length===0&&m.delete(ie)}i.remove(C)}function L(C){const A=i.get(C);n.deleteTexture(A.__webglTexture);const ie=C.source,se=m.get(ie);delete se[A.__cacheKey],o.memory.textures--}function N(C){const A=C.texture,ie=i.get(C),se=i.get(A);if(se.__webglTexture!==void 0&&(n.deleteTexture(se.__webglTexture),o.memory.textures--),C.depthTexture&&C.depthTexture.dispose(),C.isWebGLCubeRenderTarget)for(let le=0;le<6;le++)n.deleteFramebuffer(ie.__webglFramebuffer[le]),ie.__webglDepthbuffer&&n.deleteRenderbuffer(ie.__webglDepthbuffer[le]);else{if(n.deleteFramebuffer(ie.__webglFramebuffer),ie.__webglDepthbuffer&&n.deleteRenderbuffer(ie.__webglDepthbuffer),ie.__webglMultisampledFramebuffer&&n.deleteFramebuffer(ie.__webglMultisampledFramebuffer),ie.__webglColorRenderbuffer)for(let le=0;le<ie.__webglColorRenderbuffer.length;le++)ie.__webglColorRenderbuffer[le]&&n.deleteRenderbuffer(ie.__webglColorRenderbuffer[le]);ie.__webglDepthRenderbuffer&&n.deleteRenderbuffer(ie.__webglDepthRenderbuffer)}if(C.isWebGLMultipleRenderTargets)for(let le=0,ge=A.length;le<ge;le++){const Re=i.get(A[le]);Re.__webglTexture&&(n.deleteTexture(Re.__webglTexture),o.memory.textures--),i.remove(A[le])}i.remove(A),i.remove(C)}let G=0;function X(){G=0}function K(){const C=G;return C>=l&&console.warn("THREE.WebGLTextures: Trying to use "+C+" texture units while this GPU supports only "+l),G+=1,C}function j(C){const A=[];return A.push(C.wrapS),A.push(C.wrapT),A.push(C.magFilter),A.push(C.minFilter),A.push(C.anisotropy),A.push(C.internalFormat),A.push(C.format),A.push(C.type),A.push(C.generateMipmaps),A.push(C.premultiplyAlpha),A.push(C.flipY),A.push(C.unpackAlignment),A.push(C.encoding),A.join()}function ee(C,A){const ie=i.get(C);if(C.isVideoTexture&&be(C),C.isRenderTargetTexture===!1&&C.version>0&&ie.__version!==C.version){const se=C.image;if(se===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(se.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{we(ie,C,A);return}}t.activeTexture(33984+A),t.bindTexture(3553,ie.__webglTexture)}function P(C,A){const ie=i.get(C);if(C.version>0&&ie.__version!==C.version){we(ie,C,A);return}t.activeTexture(33984+A),t.bindTexture(35866,ie.__webglTexture)}function V(C,A){const ie=i.get(C);if(C.version>0&&ie.__version!==C.version){we(ie,C,A);return}t.activeTexture(33984+A),t.bindTexture(32879,ie.__webglTexture)}function Y(C,A){const ie=i.get(C);if(C.version>0&&ie.__version!==C.version){ye(ie,C,A);return}t.activeTexture(33984+A),t.bindTexture(34067,ie.__webglTexture)}const Q={[Jd]:10497,[Vn]:33071,[Kd]:33648},B={[rn]:9728,[e0]:9984,[t0]:9986,[Ln]:9729,[rw]:9985,[Iu]:9987};function oe(C,A,ie){if(ie?(n.texParameteri(C,10242,Q[A.wrapS]),n.texParameteri(C,10243,Q[A.wrapT]),(C===32879||C===35866)&&n.texParameteri(C,32882,Q[A.wrapR]),n.texParameteri(C,10240,B[A.magFilter]),n.texParameteri(C,10241,B[A.minFilter])):(n.texParameteri(C,10242,33071),n.texParameteri(C,10243,33071),(C===32879||C===35866)&&n.texParameteri(C,32882,33071),(A.wrapS!==Vn||A.wrapT!==Vn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),n.texParameteri(C,10240,R(A.magFilter)),n.texParameteri(C,10241,R(A.minFilter)),A.minFilter!==rn&&A.minFilter!==Ln&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const se=e.get("EXT_texture_filter_anisotropic");if(A.type===$r&&e.has("OES_texture_float_linear")===!1||a===!1&&A.type===Pa&&e.has("OES_texture_half_float_linear")===!1)return;(A.anisotropy>1||i.get(A).__currentAnisotropy)&&(n.texParameterf(C,se.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(A.anisotropy,r.getMaxAnisotropy())),i.get(A).__currentAnisotropy=A.anisotropy)}}function Se(C,A){let ie=!1;C.__webglInit===void 0&&(C.__webglInit=!0,A.addEventListener("dispose",I));const se=A.source;let le=m.get(se);le===void 0&&(le={},m.set(se,le));const ge=j(A);if(ge!==C.__cacheKey){le[ge]===void 0&&(le[ge]={texture:n.createTexture(),usedTimes:0},o.memory.textures++,ie=!0),le[ge].usedTimes++;const Re=le[C.__cacheKey];Re!==void 0&&(le[C.__cacheKey].usedTimes--,Re.usedTimes===0&&L(A)),C.__cacheKey=ge,C.__webglTexture=le[ge].texture}return ie}function we(C,A,ie){let se=3553;A.isDataArrayTexture&&(se=35866),A.isData3DTexture&&(se=32879);const le=Se(C,A),ge=A.source;if(t.activeTexture(33984+ie),t.bindTexture(se,C.__webglTexture),ge.version!==ge.__currentVersion||le===!0){n.pixelStorei(37440,A.flipY),n.pixelStorei(37441,A.premultiplyAlpha),n.pixelStorei(3317,A.unpackAlignment),n.pixelStorei(37443,0);const Re=w(A)&&b(A.image)===!1;let ne=M(A.image,Re,!1,u);ne=Z(A,ne);const Me=b(ne)||a,Le=s.convert(A.format,A.encoding);let Ue=s.convert(A.type),ke=S(A.internalFormat,Le,Ue,A.encoding,A.isVideoTexture);oe(se,A,Me);let Ye;const st=A.mipmaps,yt=a&&A.isVideoTexture!==!0,re=ge.__currentVersion===void 0||le===!0,ze=E(A,ne,Me);if(A.isDepthTexture)ke=6402,a?A.type===$r?ke=36012:A.type===qr?ke=33190:A.type===vo?ke=35056:ke=33189:A.type===$r&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),A.format===Jr&&ke===6402&&A.type!==zb&&A.type!==qr&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),A.type=qr,Ue=s.convert(A.type)),A.format===To&&ke===6402&&(ke=34041,A.type!==vo&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),A.type=vo,Ue=s.convert(A.type))),re&&(yt?t.texStorage2D(3553,1,ke,ne.width,ne.height):t.texImage2D(3553,0,ke,ne.width,ne.height,0,Le,Ue,null));else if(A.isDataTexture)if(st.length>0&&Me){yt&&re&&t.texStorage2D(3553,ze,ke,st[0].width,st[0].height);for(let xe=0,Be=st.length;xe<Be;xe++)Ye=st[xe],yt?t.texSubImage2D(3553,xe,0,0,Ye.width,Ye.height,Le,Ue,Ye.data):t.texImage2D(3553,xe,ke,Ye.width,Ye.height,0,Le,Ue,Ye.data);A.generateMipmaps=!1}else yt?(re&&t.texStorage2D(3553,ze,ke,ne.width,ne.height),t.texSubImage2D(3553,0,0,0,ne.width,ne.height,Le,Ue,ne.data)):t.texImage2D(3553,0,ke,ne.width,ne.height,0,Le,Ue,ne.data);else if(A.isCompressedTexture){yt&&re&&t.texStorage2D(3553,ze,ke,st[0].width,st[0].height);for(let xe=0,Be=st.length;xe<Be;xe++)Ye=st[xe],A.format!==si?Le!==null?yt?t.compressedTexSubImage2D(3553,xe,0,0,Ye.width,Ye.height,Le,Ye.data):t.compressedTexImage2D(3553,xe,ke,Ye.width,Ye.height,0,Ye.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):yt?t.texSubImage2D(3553,xe,0,0,Ye.width,Ye.height,Le,Ue,Ye.data):t.texImage2D(3553,xe,ke,Ye.width,Ye.height,0,Le,Ue,Ye.data)}else if(A.isDataArrayTexture)yt?(re&&t.texStorage3D(35866,ze,ke,ne.width,ne.height,ne.depth),t.texSubImage3D(35866,0,0,0,0,ne.width,ne.height,ne.depth,Le,Ue,ne.data)):t.texImage3D(35866,0,ke,ne.width,ne.height,ne.depth,0,Le,Ue,ne.data);else if(A.isData3DTexture)yt?(re&&t.texStorage3D(32879,ze,ke,ne.width,ne.height,ne.depth),t.texSubImage3D(32879,0,0,0,0,ne.width,ne.height,ne.depth,Le,Ue,ne.data)):t.texImage3D(32879,0,ke,ne.width,ne.height,ne.depth,0,Le,Ue,ne.data);else if(A.isFramebufferTexture){if(re)if(yt)t.texStorage2D(3553,ze,ke,ne.width,ne.height);else{let xe=ne.width,Be=ne.height;for(let Fe=0;Fe<ze;Fe++)t.texImage2D(3553,Fe,ke,xe,Be,0,Le,Ue,null),xe>>=1,Be>>=1}}else if(st.length>0&&Me){yt&&re&&t.texStorage2D(3553,ze,ke,st[0].width,st[0].height);for(let xe=0,Be=st.length;xe<Be;xe++)Ye=st[xe],yt?t.texSubImage2D(3553,xe,0,0,Le,Ue,Ye):t.texImage2D(3553,xe,ke,Le,Ue,Ye);A.generateMipmaps=!1}else yt?(re&&t.texStorage2D(3553,ze,ke,ne.width,ne.height),t.texSubImage2D(3553,0,0,0,Le,Ue,ne)):t.texImage2D(3553,0,ke,Le,Ue,ne);y(A,Me)&&_(se),ge.__currentVersion=ge.version,A.onUpdate&&A.onUpdate(A)}C.__version=A.version}function ye(C,A,ie){if(A.image.length!==6)return;const se=Se(C,A),le=A.source;if(t.activeTexture(33984+ie),t.bindTexture(34067,C.__webglTexture),le.version!==le.__currentVersion||se===!0){n.pixelStorei(37440,A.flipY),n.pixelStorei(37441,A.premultiplyAlpha),n.pixelStorei(3317,A.unpackAlignment),n.pixelStorei(37443,0);const ge=A.isCompressedTexture||A.image[0].isCompressedTexture,Re=A.image[0]&&A.image[0].isDataTexture,ne=[];for(let xe=0;xe<6;xe++)!ge&&!Re?ne[xe]=M(A.image[xe],!1,!0,c):ne[xe]=Re?A.image[xe].image:A.image[xe],ne[xe]=Z(A,ne[xe]);const Me=ne[0],Le=b(Me)||a,Ue=s.convert(A.format,A.encoding),ke=s.convert(A.type),Ye=S(A.internalFormat,Ue,ke,A.encoding),st=a&&A.isVideoTexture!==!0,yt=le.__currentVersion===void 0||se===!0;let re=E(A,Me,Le);oe(34067,A,Le);let ze;if(ge){st&&yt&&t.texStorage2D(34067,re,Ye,Me.width,Me.height);for(let xe=0;xe<6;xe++){ze=ne[xe].mipmaps;for(let Be=0;Be<ze.length;Be++){const Fe=ze[Be];A.format!==si?Ue!==null?st?t.compressedTexSubImage2D(34069+xe,Be,0,0,Fe.width,Fe.height,Ue,Fe.data):t.compressedTexImage2D(34069+xe,Be,Ye,Fe.width,Fe.height,0,Fe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):st?t.texSubImage2D(34069+xe,Be,0,0,Fe.width,Fe.height,Ue,ke,Fe.data):t.texImage2D(34069+xe,Be,Ye,Fe.width,Fe.height,0,Ue,ke,Fe.data)}}}else{ze=A.mipmaps,st&&yt&&(ze.length>0&&re++,t.texStorage2D(34067,re,Ye,ne[0].width,ne[0].height));for(let xe=0;xe<6;xe++)if(Re){st?t.texSubImage2D(34069+xe,0,0,0,ne[xe].width,ne[xe].height,Ue,ke,ne[xe].data):t.texImage2D(34069+xe,0,Ye,ne[xe].width,ne[xe].height,0,Ue,ke,ne[xe].data);for(let Be=0;Be<ze.length;Be++){const it=ze[Be].image[xe].image;st?t.texSubImage2D(34069+xe,Be+1,0,0,it.width,it.height,Ue,ke,it.data):t.texImage2D(34069+xe,Be+1,Ye,it.width,it.height,0,Ue,ke,it.data)}}else{st?t.texSubImage2D(34069+xe,0,0,0,Ue,ke,ne[xe]):t.texImage2D(34069+xe,0,Ye,Ue,ke,ne[xe]);for(let Be=0;Be<ze.length;Be++){const Fe=ze[Be];st?t.texSubImage2D(34069+xe,Be+1,0,0,Ue,ke,Fe.image[xe]):t.texImage2D(34069+xe,Be+1,Ye,Ue,ke,Fe.image[xe])}}}y(A,Le)&&_(34067),le.__currentVersion=le.version,A.onUpdate&&A.onUpdate(A)}C.__version=A.version}function _e(C,A,ie,se,le){const ge=s.convert(ie.format,ie.encoding),Re=s.convert(ie.type),ne=S(ie.internalFormat,ge,Re,ie.encoding);i.get(A).__hasExternalTextures||(le===32879||le===35866?t.texImage3D(le,0,ne,A.width,A.height,A.depth,0,ge,Re,null):t.texImage2D(le,0,ne,A.width,A.height,0,ge,Re,null)),t.bindFramebuffer(36160,C),me(A)?h.framebufferTexture2DMultisampleEXT(36160,se,le,i.get(ie).__webglTexture,0,D(A)):n.framebufferTexture2D(36160,se,le,i.get(ie).__webglTexture,0),t.bindFramebuffer(36160,null)}function Ie(C,A,ie){if(n.bindRenderbuffer(36161,C),A.depthBuffer&&!A.stencilBuffer){let se=33189;if(ie||me(A)){const le=A.depthTexture;le&&le.isDepthTexture&&(le.type===$r?se=36012:le.type===qr&&(se=33190));const ge=D(A);me(A)?h.renderbufferStorageMultisampleEXT(36161,ge,se,A.width,A.height):n.renderbufferStorageMultisample(36161,ge,se,A.width,A.height)}else n.renderbufferStorage(36161,se,A.width,A.height);n.framebufferRenderbuffer(36160,36096,36161,C)}else if(A.depthBuffer&&A.stencilBuffer){const se=D(A);ie&&me(A)===!1?n.renderbufferStorageMultisample(36161,se,35056,A.width,A.height):me(A)?h.renderbufferStorageMultisampleEXT(36161,se,35056,A.width,A.height):n.renderbufferStorage(36161,34041,A.width,A.height),n.framebufferRenderbuffer(36160,33306,36161,C)}else{const se=A.isWebGLMultipleRenderTargets===!0?A.texture:[A.texture];for(let le=0;le<se.length;le++){const ge=se[le],Re=s.convert(ge.format,ge.encoding),ne=s.convert(ge.type),Me=S(ge.internalFormat,Re,ne,ge.encoding),Le=D(A);ie&&me(A)===!1?n.renderbufferStorageMultisample(36161,Le,Me,A.width,A.height):me(A)?h.renderbufferStorageMultisampleEXT(36161,Le,Me,A.width,A.height):n.renderbufferStorage(36161,Me,A.width,A.height)}}n.bindRenderbuffer(36161,null)}function he(C,A){if(A&&A.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,C),!(A.depthTexture&&A.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(A.depthTexture).__webglTexture||A.depthTexture.image.width!==A.width||A.depthTexture.image.height!==A.height)&&(A.depthTexture.image.width=A.width,A.depthTexture.image.height=A.height,A.depthTexture.needsUpdate=!0),ee(A.depthTexture,0);const se=i.get(A.depthTexture).__webglTexture,le=D(A);if(A.depthTexture.format===Jr)me(A)?h.framebufferTexture2DMultisampleEXT(36160,36096,3553,se,0,le):n.framebufferTexture2D(36160,36096,3553,se,0);else if(A.depthTexture.format===To)me(A)?h.framebufferTexture2DMultisampleEXT(36160,33306,3553,se,0,le):n.framebufferTexture2D(36160,33306,3553,se,0);else throw new Error("Unknown depthTexture format")}function pe(C){const A=i.get(C),ie=C.isWebGLCubeRenderTarget===!0;if(C.depthTexture&&!A.__autoAllocateDepthBuffer){if(ie)throw new Error("target.depthTexture not supported in Cube render targets");he(A.__webglFramebuffer,C)}else if(ie){A.__webglDepthbuffer=[];for(let se=0;se<6;se++)t.bindFramebuffer(36160,A.__webglFramebuffer[se]),A.__webglDepthbuffer[se]=n.createRenderbuffer(),Ie(A.__webglDepthbuffer[se],C,!1)}else t.bindFramebuffer(36160,A.__webglFramebuffer),A.__webglDepthbuffer=n.createRenderbuffer(),Ie(A.__webglDepthbuffer,C,!1);t.bindFramebuffer(36160,null)}function Te(C,A,ie){const se=i.get(C);A!==void 0&&_e(se.__webglFramebuffer,C,C.texture,36064,3553),ie!==void 0&&pe(C)}function Ne(C){const A=C.texture,ie=i.get(C),se=i.get(A);C.addEventListener("dispose",$),C.isWebGLMultipleRenderTargets!==!0&&(se.__webglTexture===void 0&&(se.__webglTexture=n.createTexture()),se.__version=A.version,o.memory.textures++);const le=C.isWebGLCubeRenderTarget===!0,ge=C.isWebGLMultipleRenderTargets===!0,Re=b(C)||a;if(le){ie.__webglFramebuffer=[];for(let ne=0;ne<6;ne++)ie.__webglFramebuffer[ne]=n.createFramebuffer()}else{if(ie.__webglFramebuffer=n.createFramebuffer(),ge)if(r.drawBuffers){const ne=C.texture;for(let Me=0,Le=ne.length;Me<Le;Me++){const Ue=i.get(ne[Me]);Ue.__webglTexture===void 0&&(Ue.__webglTexture=n.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(a&&C.samples>0&&me(C)===!1){const ne=ge?A:[A];ie.__webglMultisampledFramebuffer=n.createFramebuffer(),ie.__webglColorRenderbuffer=[],t.bindFramebuffer(36160,ie.__webglMultisampledFramebuffer);for(let Me=0;Me<ne.length;Me++){const Le=ne[Me];ie.__webglColorRenderbuffer[Me]=n.createRenderbuffer(),n.bindRenderbuffer(36161,ie.__webglColorRenderbuffer[Me]);const Ue=s.convert(Le.format,Le.encoding),ke=s.convert(Le.type),Ye=S(Le.internalFormat,Ue,ke,Le.encoding),st=D(C);n.renderbufferStorageMultisample(36161,st,Ye,C.width,C.height),n.framebufferRenderbuffer(36160,36064+Me,36161,ie.__webglColorRenderbuffer[Me])}n.bindRenderbuffer(36161,null),C.depthBuffer&&(ie.__webglDepthRenderbuffer=n.createRenderbuffer(),Ie(ie.__webglDepthRenderbuffer,C,!0)),t.bindFramebuffer(36160,null)}}if(le){t.bindTexture(34067,se.__webglTexture),oe(34067,A,Re);for(let ne=0;ne<6;ne++)_e(ie.__webglFramebuffer[ne],C,A,36064,34069+ne);y(A,Re)&&_(34067),t.unbindTexture()}else if(ge){const ne=C.texture;for(let Me=0,Le=ne.length;Me<Le;Me++){const Ue=ne[Me],ke=i.get(Ue);t.bindTexture(3553,ke.__webglTexture),oe(3553,Ue,Re),_e(ie.__webglFramebuffer,C,Ue,36064+Me,3553),y(Ue,Re)&&_(3553)}t.unbindTexture()}else{let ne=3553;(C.isWebGL3DRenderTarget||C.isWebGLArrayRenderTarget)&&(a?ne=C.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(ne,se.__webglTexture),oe(ne,A,Re),_e(ie.__webglFramebuffer,C,A,36064,ne),y(A,Re)&&_(ne),t.unbindTexture()}C.depthBuffer&&pe(C)}function Ce(C){const A=b(C)||a,ie=C.isWebGLMultipleRenderTargets===!0?C.texture:[C.texture];for(let se=0,le=ie.length;se<le;se++){const ge=ie[se];if(y(ge,A)){const Re=C.isWebGLCubeRenderTarget?34067:3553,ne=i.get(ge).__webglTexture;t.bindTexture(Re,ne),_(Re),t.unbindTexture()}}}function O(C){if(a&&C.samples>0&&me(C)===!1){const A=C.isWebGLMultipleRenderTargets?C.texture:[C.texture],ie=C.width,se=C.height;let le=16384;const ge=[],Re=C.stencilBuffer?33306:36096,ne=i.get(C),Me=C.isWebGLMultipleRenderTargets===!0;if(Me)for(let Le=0;Le<A.length;Le++)t.bindFramebuffer(36160,ne.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(36160,36064+Le,36161,null),t.bindFramebuffer(36160,ne.__webglFramebuffer),n.framebufferTexture2D(36009,36064+Le,3553,null,0);t.bindFramebuffer(36008,ne.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,ne.__webglFramebuffer);for(let Le=0;Le<A.length;Le++){ge.push(36064+Le),C.depthBuffer&&ge.push(Re);const Ue=ne.__ignoreDepthValues!==void 0?ne.__ignoreDepthValues:!1;if(Ue===!1&&(C.depthBuffer&&(le|=256),C.stencilBuffer&&(le|=1024)),Me&&n.framebufferRenderbuffer(36008,36064,36161,ne.__webglColorRenderbuffer[Le]),Ue===!0&&(n.invalidateFramebuffer(36008,[Re]),n.invalidateFramebuffer(36009,[Re])),Me){const ke=i.get(A[Le]).__webglTexture;n.framebufferTexture2D(36009,36064,3553,ke,0)}n.blitFramebuffer(0,0,ie,se,0,0,ie,se,le,9728),d&&n.invalidateFramebuffer(36008,ge)}if(t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,null),Me)for(let Le=0;Le<A.length;Le++){t.bindFramebuffer(36160,ne.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(36160,36064+Le,36161,ne.__webglColorRenderbuffer[Le]);const Ue=i.get(A[Le]).__webglTexture;t.bindFramebuffer(36160,ne.__webglFramebuffer),n.framebufferTexture2D(36009,36064+Le,3553,Ue,0)}t.bindFramebuffer(36009,ne.__webglMultisampledFramebuffer)}}function D(C){return Math.min(f,C.samples)}function me(C){const A=i.get(C);return a&&C.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&A.__useRenderToTexture!==!1}function be(C){const A=o.render.frame;p.get(C)!==A&&(p.set(C,A),C.update())}function Z(C,A){const ie=C.encoding,se=C.format,le=C.type;return C.isCompressedTexture===!0||C.isVideoTexture===!0||C.format===Qd||ie!==ss&&(ie===Et?a===!1?e.has("EXT_sRGB")===!0&&se===si?(C.format=Qd,C.minFilter=Ln,C.generateMipmaps=!1):A=qb.sRGBToLinear(A):(se!==si||le!==rs)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",ie)),A}this.allocateTextureUnit=K,this.resetTextureUnits=X,this.setTexture2D=ee,this.setTexture2DArray=P,this.setTexture3D=V,this.setTextureCube=Y,this.rebindTextures=Te,this.setupRenderTarget=Ne,this.updateRenderTargetMipmap=Ce,this.updateMultisampleRenderTarget=O,this.setupDepthRenderbuffer=pe,this.setupFrameBufferTexture=_e,this.useMultisampledRTT=me}function gT(n,e,t){const i=t.isWebGL2;function r(s,o=null){let a;if(s===rs)return 5121;if(s===cw)return 32819;if(s===lw)return 32820;if(s===sw)return 5120;if(s===ow)return 5122;if(s===zb)return 5123;if(s===aw)return 5124;if(s===qr)return 5125;if(s===$r)return 5126;if(s===Pa)return i?5131:(a=e.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(s===uw)return 6406;if(s===si)return 6408;if(s===hw)return 6409;if(s===dw)return 6410;if(s===Jr)return 6402;if(s===To)return 34041;if(s===pw)return 6403;if(s===fw)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(s===Qd)return a=e.get("EXT_sRGB"),a!==null?a.SRGB_ALPHA_EXT:null;if(s===mw)return 36244;if(s===gw)return 33319;if(s===xw)return 33320;if(s===vw)return 36249;if(s===Ju||s===Ku||s===Qu||s===ef)if(o===Et)if(a=e.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(s===Ju)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===Ku)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===Qu)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===ef)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=e.get("WEBGL_compressed_texture_s3tc"),a!==null){if(s===Ju)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===Ku)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===Qu)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===ef)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===n0||s===i0||s===r0||s===s0)if(a=e.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(s===n0)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===i0)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===r0)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===s0)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===bw)return a=e.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===o0||s===a0)if(a=e.get("WEBGL_compressed_texture_etc"),a!==null){if(s===o0)return o===Et?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(s===a0)return o===Et?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===c0||s===l0||s===u0||s===f0||s===h0||s===d0||s===p0||s===m0||s===g0||s===x0||s===v0||s===b0||s===y0||s===_0)if(a=e.get("WEBGL_compressed_texture_astc"),a!==null){if(s===c0)return o===Et?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===l0)return o===Et?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===u0)return o===Et?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===f0)return o===Et?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===h0)return o===Et?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===d0)return o===Et?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===p0)return o===Et?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===m0)return o===Et?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===g0)return o===Et?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===x0)return o===Et?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===v0)return o===Et?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===b0)return o===Et?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===y0)return o===Et?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===_0)return o===Et?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===M0)if(a=e.get("EXT_texture_compression_bptc"),a!==null){if(s===M0)return o===Et?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;return s===vo?i?34042:(a=e.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null):n[s]!==void 0?n[s]:null}return{convert:r}}let xT=class extends Cn{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}},Ma=class extends Gi{constructor(){super(),this.isGroup=!0,this.type="Group"}};const vT={type:"move"};let Pf=class{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Ma,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Ma,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new ce,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new ce),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Ma,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new ce,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new ce),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,i){let r=null,s=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(c&&e.hand){o=!0;for(const g of e.hand.values()){const m=t.getJointPose(g,i);if(c.joints[g.jointName]===void 0){const x=new Ma;x.matrixAutoUpdate=!1,x.visible=!1,c.joints[g.jointName]=x,c.add(x)}const v=c.joints[g.jointName];m!==null&&(v.matrix.fromArray(m.transform.matrix),v.matrix.decompose(v.position,v.rotation,v.scale),v.jointRadius=m.radius),v.visible=m!==null}const u=c.joints["index-finger-tip"],f=c.joints["thumb-tip"],h=u.position.distanceTo(f.position),d=.02,p=.005;c.inputState.pinching&&h>d+p?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&h<=d-p&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,i),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(r=t.getPose(e.targetRaySpace,i),r===null&&s!==null&&(r=s),r!==null&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),r.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(r.linearVelocity)):a.hasLinearVelocity=!1,r.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(r.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(vT)))}return a!==null&&(a.visible=r!==null),l!==null&&(l.visible=s!==null),c!==null&&(c.visible=o!==null),this}},bT=class extends wr{constructor(e,t,i,r,s,o,a,l,c,u){if(u=u!==void 0?u:Jr,u!==Jr&&u!==To)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");i===void 0&&u===Jr&&(i=qr),i===void 0&&u===To&&(i=vo),super(null,r,s,o,a,l,u,i,c),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=a!==void 0?a:rn,this.minFilter=l!==void 0?l:rn,this.flipY=!1,this.generateMipmaps=!1}},yT=class extends qo{constructor(e,t){super();const i=this;let r=null,s=1,o=null,a="local-floor",l=null,c=null,u=null,f=null,h=null,d=null;const p=t.getContextAttributes();let g=null,m=null;const v=[],x=[],M=new Cn;M.layers.enable(1),M.viewport=new Vt;const b=new Cn;b.layers.enable(2),b.viewport=new Vt;const w=[M,b],y=new xT;y.layers.enable(1),y.layers.enable(2);let _=null,S=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(j){let ee=v[j];return ee===void 0&&(ee=new Pf,v[j]=ee),ee.getTargetRaySpace()},this.getControllerGrip=function(j){let ee=v[j];return ee===void 0&&(ee=new Pf,v[j]=ee),ee.getGripSpace()},this.getHand=function(j){let ee=v[j];return ee===void 0&&(ee=new Pf,v[j]=ee),ee.getHandSpace()};function E(j){const ee=x.indexOf(j.inputSource);if(ee===-1)return;const P=v[ee];P!==void 0&&P.dispatchEvent({type:j.type,data:j.inputSource})}function R(){r.removeEventListener("select",E),r.removeEventListener("selectstart",E),r.removeEventListener("selectend",E),r.removeEventListener("squeeze",E),r.removeEventListener("squeezestart",E),r.removeEventListener("squeezeend",E),r.removeEventListener("end",R),r.removeEventListener("inputsourceschange",I);for(let j=0;j<v.length;j++){const ee=x[j];ee!==null&&(x[j]=null,v[j].disconnect(ee))}_=null,S=null,e.setRenderTarget(g),h=null,f=null,u=null,r=null,m=null,K.stop(),i.isPresenting=!1,i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(j){s=j,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(j){a=j,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||o},this.setReferenceSpace=function(j){l=j},this.getBaseLayer=function(){return f!==null?f:h},this.getBinding=function(){return u},this.getFrame=function(){return d},this.getSession=function(){return r},this.setSession=async function(j){if(r=j,r!==null){if(g=e.getRenderTarget(),r.addEventListener("select",E),r.addEventListener("selectstart",E),r.addEventListener("selectend",E),r.addEventListener("squeeze",E),r.addEventListener("squeezestart",E),r.addEventListener("squeezeend",E),r.addEventListener("end",R),r.addEventListener("inputsourceschange",I),p.xrCompatible!==!0&&await t.makeXRCompatible(),r.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const ee={antialias:r.renderState.layers===void 0?p.antialias:!0,alpha:p.alpha,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:s};h=new XRWebGLLayer(r,t,ee),r.updateRenderState({baseLayer:h}),m=new os(h.framebufferWidth,h.framebufferHeight,{format:si,type:rs,encoding:e.outputEncoding})}else{let ee=null,P=null,V=null;p.depth&&(V=p.stencil?35056:33190,ee=p.stencil?To:Jr,P=p.stencil?vo:qr);const Y={colorFormat:32856,depthFormat:V,scaleFactor:s};u=new XRWebGLBinding(r,t),f=u.createProjectionLayer(Y),r.updateRenderState({layers:[f]}),m=new os(f.textureWidth,f.textureHeight,{format:si,type:rs,depthTexture:new bT(f.textureWidth,f.textureHeight,P,void 0,void 0,void 0,void 0,void 0,void 0,ee),stencilBuffer:p.stencil,encoding:e.outputEncoding,samples:p.antialias?4:0});const Q=e.properties.get(m);Q.__ignoreDepthValues=f.ignoreDepthValues}m.isXRRenderTarget=!0,this.setFoveation(1),l=null,o=await r.requestReferenceSpace(a),K.setContext(r),K.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}};function I(j){for(let ee=0;ee<j.removed.length;ee++){const P=j.removed[ee],V=x.indexOf(P);V>=0&&(x[V]=null,v[V].dispatchEvent({type:"disconnected",data:P}))}for(let ee=0;ee<j.added.length;ee++){const P=j.added[ee];let V=x.indexOf(P);if(V===-1){for(let Q=0;Q<v.length;Q++)if(Q>=x.length){x.push(P),V=Q;break}else if(x[Q]===null){x[Q]=P,V=Q;break}if(V===-1)break}const Y=v[V];Y&&Y.dispatchEvent({type:"connected",data:P})}}const $=new ce,q=new ce;function L(j,ee,P){$.setFromMatrixPosition(ee.matrixWorld),q.setFromMatrixPosition(P.matrixWorld);const V=$.distanceTo(q),Y=ee.projectionMatrix.elements,Q=P.projectionMatrix.elements,B=Y[14]/(Y[10]-1),oe=Y[14]/(Y[10]+1),Se=(Y[9]+1)/Y[5],we=(Y[9]-1)/Y[5],ye=(Y[8]-1)/Y[0],_e=(Q[8]+1)/Q[0],Ie=B*ye,he=B*_e,pe=V/(-ye+_e),Te=pe*-ye;ee.matrixWorld.decompose(j.position,j.quaternion,j.scale),j.translateX(Te),j.translateZ(pe),j.matrixWorld.compose(j.position,j.quaternion,j.scale),j.matrixWorldInverse.copy(j.matrixWorld).invert();const Ne=B+pe,Ce=oe+pe,O=Ie-Te,D=he+(V-Te),me=Se*oe/Ce*Ne,be=we*oe/Ce*Ne;j.projectionMatrix.makePerspective(O,D,me,be,Ne,Ce)}function N(j,ee){ee===null?j.matrixWorld.copy(j.matrix):j.matrixWorld.multiplyMatrices(ee.matrixWorld,j.matrix),j.matrixWorldInverse.copy(j.matrixWorld).invert()}this.updateCamera=function(j){if(r===null)return;y.near=b.near=M.near=j.near,y.far=b.far=M.far=j.far,(_!==y.near||S!==y.far)&&(r.updateRenderState({depthNear:y.near,depthFar:y.far}),_=y.near,S=y.far);const ee=j.parent,P=y.cameras;N(y,ee);for(let Y=0;Y<P.length;Y++)N(P[Y],ee);y.matrixWorld.decompose(y.position,y.quaternion,y.scale),j.position.copy(y.position),j.quaternion.copy(y.quaternion),j.scale.copy(y.scale),j.matrix.copy(y.matrix),j.matrixWorld.copy(y.matrixWorld);const V=j.children;for(let Y=0,Q=V.length;Y<Q;Y++)V[Y].updateMatrixWorld(!0);P.length===2?L(y,M,b):y.projectionMatrix.copy(M.projectionMatrix)},this.getCamera=function(){return y},this.getFoveation=function(){if(f!==null)return f.fixedFoveation;if(h!==null)return h.fixedFoveation},this.setFoveation=function(j){f!==null&&(f.fixedFoveation=j),h!==null&&h.fixedFoveation!==void 0&&(h.fixedFoveation=j)};let G=null;function X(j,ee){if(c=ee.getViewerPose(l||o),d=ee,c!==null){const P=c.views;h!==null&&(e.setRenderTargetFramebuffer(m,h.framebuffer),e.setRenderTarget(m));let V=!1;P.length!==y.cameras.length&&(y.cameras.length=0,V=!0);for(let Y=0;Y<P.length;Y++){const Q=P[Y];let B=null;if(h!==null)B=h.getViewport(Q);else{const Se=u.getViewSubImage(f,Q);B=Se.viewport,Y===0&&(e.setRenderTargetTextures(m,Se.colorTexture,f.ignoreDepthValues?void 0:Se.depthStencilTexture),e.setRenderTarget(m))}let oe=w[Y];oe===void 0&&(oe=new Cn,oe.layers.enable(Y),oe.viewport=new Vt,w[Y]=oe),oe.matrix.fromArray(Q.transform.matrix),oe.projectionMatrix.fromArray(Q.projectionMatrix),oe.viewport.set(B.x,B.y,B.width,B.height),Y===0&&y.matrix.copy(oe.matrix),V===!0&&y.cameras.push(oe)}}for(let P=0;P<v.length;P++){const V=x[P],Y=v[P];V!==null&&Y!==void 0&&Y.update(V,ee,l||o)}G&&G(j,ee),d=null}const K=new oy;K.setAnimationLoop(X),this.setAnimationLoop=function(j){G=j},this.dispose=function(){}}};function _T(n,e){function t(g,m){g.fogColor.value.copy(m.color),m.isFog?(g.fogNear.value=m.near,g.fogFar.value=m.far):m.isFogExp2&&(g.fogDensity.value=m.density)}function i(g,m,v,x,M){m.isMeshBasicMaterial||m.isMeshLambertMaterial?r(g,m):m.isMeshToonMaterial?(r(g,m),u(g,m)):m.isMeshPhongMaterial?(r(g,m),c(g,m)):m.isMeshStandardMaterial?(r(g,m),f(g,m),m.isMeshPhysicalMaterial&&h(g,m,M)):m.isMeshMatcapMaterial?(r(g,m),d(g,m)):m.isMeshDepthMaterial?r(g,m):m.isMeshDistanceMaterial?(r(g,m),p(g,m)):m.isMeshNormalMaterial?r(g,m):m.isLineBasicMaterial?(s(g,m),m.isLineDashedMaterial&&o(g,m)):m.isPointsMaterial?a(g,m,v,x):m.isSpriteMaterial?l(g,m):m.isShadowMaterial?(g.color.value.copy(m.color),g.opacity.value=m.opacity):m.isShaderMaterial&&(m.uniformsNeedUpdate=!1)}function r(g,m){g.opacity.value=m.opacity,m.color&&g.diffuse.value.copy(m.color),m.emissive&&g.emissive.value.copy(m.emissive).multiplyScalar(m.emissiveIntensity),m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap),m.bumpMap&&(g.bumpMap.value=m.bumpMap,g.bumpScale.value=m.bumpScale,m.side===qn&&(g.bumpScale.value*=-1)),m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias),m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap),m.normalMap&&(g.normalMap.value=m.normalMap,g.normalScale.value.copy(m.normalScale),m.side===qn&&g.normalScale.value.negate()),m.specularMap&&(g.specularMap.value=m.specularMap),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest);const v=e.get(m).envMap;if(v&&(g.envMap.value=v,g.flipEnvMap.value=v.isCubeTexture&&v.isRenderTargetTexture===!1?-1:1,g.reflectivity.value=m.reflectivity,g.ior.value=m.ior,g.refractionRatio.value=m.refractionRatio),m.lightMap){g.lightMap.value=m.lightMap;const b=n.physicallyCorrectLights!==!0?Math.PI:1;g.lightMapIntensity.value=m.lightMapIntensity*b}m.aoMap&&(g.aoMap.value=m.aoMap,g.aoMapIntensity.value=m.aoMapIntensity);let x;m.map?x=m.map:m.specularMap?x=m.specularMap:m.displacementMap?x=m.displacementMap:m.normalMap?x=m.normalMap:m.bumpMap?x=m.bumpMap:m.roughnessMap?x=m.roughnessMap:m.metalnessMap?x=m.metalnessMap:m.alphaMap?x=m.alphaMap:m.emissiveMap?x=m.emissiveMap:m.clearcoatMap?x=m.clearcoatMap:m.clearcoatNormalMap?x=m.clearcoatNormalMap:m.clearcoatRoughnessMap?x=m.clearcoatRoughnessMap:m.iridescenceMap?x=m.iridescenceMap:m.iridescenceThicknessMap?x=m.iridescenceThicknessMap:m.specularIntensityMap?x=m.specularIntensityMap:m.specularColorMap?x=m.specularColorMap:m.transmissionMap?x=m.transmissionMap:m.thicknessMap?x=m.thicknessMap:m.sheenColorMap?x=m.sheenColorMap:m.sheenRoughnessMap&&(x=m.sheenRoughnessMap),x!==void 0&&(x.isWebGLRenderTarget&&(x=x.texture),x.matrixAutoUpdate===!0&&x.updateMatrix(),g.uvTransform.value.copy(x.matrix));let M;m.aoMap?M=m.aoMap:m.lightMap&&(M=m.lightMap),M!==void 0&&(M.isWebGLRenderTarget&&(M=M.texture),M.matrixAutoUpdate===!0&&M.updateMatrix(),g.uv2Transform.value.copy(M.matrix))}function s(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity}function o(g,m){g.dashSize.value=m.dashSize,g.totalSize.value=m.dashSize+m.gapSize,g.scale.value=m.scale}function a(g,m,v,x){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.size.value=m.size*v,g.scale.value=x*.5,m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest);let M;m.map?M=m.map:m.alphaMap&&(M=m.alphaMap),M!==void 0&&(M.matrixAutoUpdate===!0&&M.updateMatrix(),g.uvTransform.value.copy(M.matrix))}function l(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.rotation.value=m.rotation,m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest);let v;m.map?v=m.map:m.alphaMap&&(v=m.alphaMap),v!==void 0&&(v.matrixAutoUpdate===!0&&v.updateMatrix(),g.uvTransform.value.copy(v.matrix))}function c(g,m){g.specular.value.copy(m.specular),g.shininess.value=Math.max(m.shininess,1e-4)}function u(g,m){m.gradientMap&&(g.gradientMap.value=m.gradientMap)}function f(g,m){g.roughness.value=m.roughness,g.metalness.value=m.metalness,m.roughnessMap&&(g.roughnessMap.value=m.roughnessMap),m.metalnessMap&&(g.metalnessMap.value=m.metalnessMap),e.get(m).envMap&&(g.envMapIntensity.value=m.envMapIntensity)}function h(g,m,v){g.ior.value=m.ior,m.sheen>0&&(g.sheenColor.value.copy(m.sheenColor).multiplyScalar(m.sheen),g.sheenRoughness.value=m.sheenRoughness,m.sheenColorMap&&(g.sheenColorMap.value=m.sheenColorMap),m.sheenRoughnessMap&&(g.sheenRoughnessMap.value=m.sheenRoughnessMap)),m.clearcoat>0&&(g.clearcoat.value=m.clearcoat,g.clearcoatRoughness.value=m.clearcoatRoughness,m.clearcoatMap&&(g.clearcoatMap.value=m.clearcoatMap),m.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=m.clearcoatRoughnessMap),m.clearcoatNormalMap&&(g.clearcoatNormalScale.value.copy(m.clearcoatNormalScale),g.clearcoatNormalMap.value=m.clearcoatNormalMap,m.side===qn&&g.clearcoatNormalScale.value.negate())),m.iridescence>0&&(g.iridescence.value=m.iridescence,g.iridescenceIOR.value=m.iridescenceIOR,g.iridescenceThicknessMinimum.value=m.iridescenceThicknessRange[0],g.iridescenceThicknessMaximum.value=m.iridescenceThicknessRange[1],m.iridescenceMap&&(g.iridescenceMap.value=m.iridescenceMap),m.iridescenceThicknessMap&&(g.iridescenceThicknessMap.value=m.iridescenceThicknessMap)),m.transmission>0&&(g.transmission.value=m.transmission,g.transmissionSamplerMap.value=v.texture,g.transmissionSamplerSize.value.set(v.width,v.height),m.transmissionMap&&(g.transmissionMap.value=m.transmissionMap),g.thickness.value=m.thickness,m.thicknessMap&&(g.thicknessMap.value=m.thicknessMap),g.attenuationDistance.value=m.attenuationDistance,g.attenuationColor.value.copy(m.attenuationColor)),g.specularIntensity.value=m.specularIntensity,g.specularColor.value.copy(m.specularColor),m.specularIntensityMap&&(g.specularIntensityMap.value=m.specularIntensityMap),m.specularColorMap&&(g.specularColorMap.value=m.specularColorMap)}function d(g,m){m.matcap&&(g.matcap.value=m.matcap)}function p(g,m){g.referencePosition.value.copy(m.referencePosition),g.nearDistance.value=m.nearDistance,g.farDistance.value=m.farDistance}return{refreshFogUniforms:t,refreshMaterialUniforms:i}}function MT(n,e,t,i){let r={},s={},o=[];const a=t.isWebGL2?n.getParameter(35375):0;function l(x,M){const b=M.program;i.uniformBlockBinding(x,b)}function c(x,M){let b=r[x.id];b===void 0&&(p(x),b=u(x),r[x.id]=b,x.addEventListener("dispose",m));const w=M.program;i.updateUBOMapping(x,w);const y=e.render.frame;s[x.id]!==y&&(h(x),s[x.id]=y)}function u(x){const M=f();x.__bindingPointIndex=M;const b=n.createBuffer(),w=x.__size,y=x.usage;return n.bindBuffer(35345,b),n.bufferData(35345,w,y),n.bindBuffer(35345,null),n.bindBufferBase(35345,M,b),b}function f(){for(let x=0;x<a;x++)if(o.indexOf(x)===-1)return o.push(x),x;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function h(x){const M=r[x.id],b=x.uniforms,w=x.__cache;n.bindBuffer(35345,M);for(let y=0,_=b.length;y<_;y++){const S=b[y];if(d(S,y,w)===!0){const E=S.value,R=S.__offset;typeof E=="number"?(S.__data[0]=E,n.bufferSubData(35345,R,S.__data)):(S.value.isMatrix3?(S.__data[0]=S.value.elements[0],S.__data[1]=S.value.elements[1],S.__data[2]=S.value.elements[2],S.__data[3]=S.value.elements[0],S.__data[4]=S.value.elements[3],S.__data[5]=S.value.elements[4],S.__data[6]=S.value.elements[5],S.__data[7]=S.value.elements[0],S.__data[8]=S.value.elements[6],S.__data[9]=S.value.elements[7],S.__data[10]=S.value.elements[8],S.__data[11]=S.value.elements[0]):E.toArray(S.__data),n.bufferSubData(35345,R,S.__data))}}n.bindBuffer(35345,null)}function d(x,M,b){const w=x.value;if(b[M]===void 0)return typeof w=="number"?b[M]=w:b[M]=w.clone(),!0;if(typeof w=="number"){if(b[M]!==w)return b[M]=w,!0}else{const y=b[M];if(y.equals(w)===!1)return y.copy(w),!0}return!1}function p(x){const M=x.uniforms;let b=0;const w=16;let y=0;for(let _=0,S=M.length;_<S;_++){const E=M[_],R=g(E);if(E.__data=new Float32Array(R.storage/Float32Array.BYTES_PER_ELEMENT),E.__offset=b,_>0){y=b%w;const I=w-y;y!==0&&I-R.boundary<0&&(b+=w-y,E.__offset=b)}b+=R.storage}return y=b%w,y>0&&(b+=w-y),x.__size=b,x.__cache={},this}function g(x){const M=x.value,b={boundary:0,storage:0};return typeof M=="number"?(b.boundary=4,b.storage=4):M.isVector2?(b.boundary=8,b.storage=8):M.isVector3||M.isColor?(b.boundary=16,b.storage=12):M.isVector4?(b.boundary=16,b.storage=16):M.isMatrix3?(b.boundary=48,b.storage=48):M.isMatrix4?(b.boundary=64,b.storage=64):M.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",M),b}function m(x){const M=x.target;M.removeEventListener("dispose",m);const b=o.indexOf(M.__bindingPointIndex);o.splice(b,1),n.deleteBuffer(r[M.id]),delete r[M.id],delete s[M.id]}function v(){for(const x in r)n.deleteBuffer(r[x]);o=[],r={},s={}}return{bind:l,update:c,dispose:v}}function wT(){const n=ql("canvas");return n.style.display="block",n}function dy(n={}){this.isWebGLRenderer=!0;const e=n.canvas!==void 0?n.canvas:wT(),t=n.context!==void 0?n.context:null,i=n.depth!==void 0?n.depth:!0,r=n.stencil!==void 0?n.stencil:!0,s=n.antialias!==void 0?n.antialias:!1,o=n.premultipliedAlpha!==void 0?n.premultipliedAlpha:!0,a=n.preserveDrawingBuffer!==void 0?n.preserveDrawingBuffer:!1,l=n.powerPreference!==void 0?n.powerPreference:"default",c=n.failIfMajorPerformanceCaveat!==void 0?n.failIfMajorPerformanceCaveat:!1;let u;t!==null?u=t.getContextAttributes().alpha:u=n.alpha!==void 0?n.alpha:!1;let f=null,h=null;const d=[],p=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=ss,this.physicallyCorrectLights=!1,this.toneMapping=Oi,this.toneMappingExposure=1,Object.defineProperties(this,{gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});const g=this;let m=!1,v=0,x=0,M=null,b=-1,w=null;const y=new Vt,_=new Vt;let S=null,E=e.width,R=e.height,I=1,$=null,q=null;const L=new Vt(0,0,E,R),N=new Vt(0,0,E,R);let G=!1;const X=new sy;let K=!1,j=!1,ee=null;const P=new sn,V=new gt,Y=new ce,Q={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function B(){return M===null?I:1}let oe=t;function Se(T,H){for(let J=0;J<T.length;J++){const z=T[J],te=e.getContext(z,H);if(te!==null)return te}return null}try{const T={alpha:!0,depth:i,stencil:r,antialias:s,premultipliedAlpha:o,preserveDrawingBuffer:a,powerPreference:l,failIfMajorPerformanceCaveat:c};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Zp}`),e.addEventListener("webglcontextlost",Ye,!1),e.addEventListener("webglcontextrestored",st,!1),e.addEventListener("webglcontextcreationerror",yt,!1),oe===null){const H=["webgl2","webgl","experimental-webgl"];if(g.isWebGL1Renderer===!0&&H.shift(),oe=Se(H,T),oe===null)throw Se(H)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}oe.getShaderPrecisionFormat===void 0&&(oe.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(T){throw console.error("THREE.WebGLRenderer: "+T.message),T}let we,ye,_e,Ie,he,pe,Te,Ne,Ce,O,D,me,be,Z,C,A,ie,se,le,ge,Re,ne,Me,Le;function Ue(){we=new D2(oe),ye=new T2(oe,we,n),we.init(ye),ne=new gT(oe,we,ye),_e=new pT(oe,we,ye),Ie=new N2,he=new eT,pe=new mT(oe,we,_e,he,ye,ne,Ie),Te=new L2(g),Ne=new I2(g),Ce=new $w(oe,ye),Me=new S2(oe,we,Ce,ye),O=new O2(oe,Ce,Ie,Me),D=new G2(oe,O,Ce,Ie),le=new z2(oe,ye,pe),A=new A2(he),me=new QE(g,Te,Ne,we,ye,Me,A),be=new _T(g,he),Z=new nT,C=new cT(we,ye),se=new w2(g,Te,_e,D,u,o),ie=new dT(g,D,ye),Le=new MT(oe,Ie,ye,_e),ge=new E2(oe,we,Ie,ye),Re=new F2(oe,we,Ie,ye),Ie.programs=me.programs,g.capabilities=ye,g.extensions=we,g.properties=he,g.renderLists=Z,g.shadowMap=ie,g.state=_e,g.info=Ie}Ue();const ke=new yT(g,oe);this.xr=ke,this.getContext=function(){return oe},this.getContextAttributes=function(){return oe.getContextAttributes()},this.forceContextLoss=function(){const T=we.get("WEBGL_lose_context");T&&T.loseContext()},this.forceContextRestore=function(){const T=we.get("WEBGL_lose_context");T&&T.restoreContext()},this.getPixelRatio=function(){return I},this.setPixelRatio=function(T){T!==void 0&&(I=T,this.setSize(E,R,!1))},this.getSize=function(T){return T.set(E,R)},this.setSize=function(T,H,J){if(ke.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}E=T,R=H,e.width=Math.floor(T*I),e.height=Math.floor(H*I),J!==!1&&(e.style.width=T+"px",e.style.height=H+"px"),this.setViewport(0,0,T,H)},this.getDrawingBufferSize=function(T){return T.set(E*I,R*I).floor()},this.setDrawingBufferSize=function(T,H,J){E=T,R=H,I=J,e.width=Math.floor(T*J),e.height=Math.floor(H*J),this.setViewport(0,0,T,H)},this.getCurrentViewport=function(T){return T.copy(y)},this.getViewport=function(T){return T.copy(L)},this.setViewport=function(T,H,J,z){T.isVector4?L.set(T.x,T.y,T.z,T.w):L.set(T,H,J,z),_e.viewport(y.copy(L).multiplyScalar(I).floor())},this.getScissor=function(T){return T.copy(N)},this.setScissor=function(T,H,J,z){T.isVector4?N.set(T.x,T.y,T.z,T.w):N.set(T,H,J,z),_e.scissor(_.copy(N).multiplyScalar(I).floor())},this.getScissorTest=function(){return G},this.setScissorTest=function(T){_e.setScissorTest(G=T)},this.setOpaqueSort=function(T){$=T},this.setTransparentSort=function(T){q=T},this.getClearColor=function(T){return T.copy(se.getClearColor())},this.setClearColor=function(){se.setClearColor.apply(se,arguments)},this.getClearAlpha=function(){return se.getClearAlpha()},this.setClearAlpha=function(){se.setClearAlpha.apply(se,arguments)},this.clear=function(T=!0,H=!0,J=!0){let z=0;T&&(z|=16384),H&&(z|=256),J&&(z|=1024),oe.clear(z)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Ye,!1),e.removeEventListener("webglcontextrestored",st,!1),e.removeEventListener("webglcontextcreationerror",yt,!1),Z.dispose(),C.dispose(),he.dispose(),Te.dispose(),Ne.dispose(),D.dispose(),Me.dispose(),Le.dispose(),me.dispose(),ke.dispose(),ke.removeEventListener("sessionstart",it),ke.removeEventListener("sessionend",ot),ee&&(ee.dispose(),ee=null),dt.stop()};function Ye(T){T.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),m=!0}function st(){console.log("THREE.WebGLRenderer: Context Restored."),m=!1;const T=Ie.autoReset,H=ie.enabled,J=ie.autoUpdate,z=ie.needsUpdate,te=ie.type;Ue(),Ie.autoReset=T,ie.enabled=H,ie.autoUpdate=J,ie.needsUpdate=z,ie.type=te}function yt(T){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",T.statusMessage)}function re(T){const H=T.target;H.removeEventListener("dispose",re),ze(H)}function ze(T){xe(T),he.remove(T)}function xe(T){const H=he.get(T).programs;H!==void 0&&(H.forEach(function(J){me.releaseProgram(J)}),T.isShaderMaterial&&me.releaseShaderCache(T))}this.renderBufferDirect=function(T,H,J,z,te,Ae){H===null&&(H=Q);const Pe=te.isMesh&&te.matrixWorld.determinant()<0,We=ae(T,H,J,z,te);_e.setMaterial(z,Pe);let Ve=J.index;const et=J.attributes.position;if(Ve===null){if(et===void 0||et.count===0)return}else if(Ve.count===0)return;let $e=1;z.wireframe===!0&&(Ve=O.getWireframeAttribute(J),$e=2),Me.setup(te,z,We,J,Ve);let Qe,ct=ge;Ve!==null&&(Qe=Ce.get(Ve),ct=Re,ct.setIndex(Qe));const ln=Ve!==null?Ve.count:et.count,Ls=J.drawRange.start*$e,Cs=J.drawRange.count*$e,Qn=Ae!==null?Ae.start*$e:0,at=Ae!==null?Ae.count*$e:1/0,Rs=Math.max(Ls,Qn),Lt=Math.min(ln,Ls+Cs,Qn+at)-1,En=Math.max(0,Lt-Rs+1);if(En!==0){if(te.isMesh)z.wireframe===!0?(_e.setLineWidth(z.wireframeLinewidth*B()),ct.setMode(1)):ct.setMode(4);else if(te.isLine){let Vi=z.linewidth;Vi===void 0&&(Vi=1),_e.setLineWidth(Vi*B()),te.isLineSegments?ct.setMode(1):te.isLineLoop?ct.setMode(2):ct.setMode(3)}else te.isPoints?ct.setMode(0):te.isSprite&&ct.setMode(4);if(te.isInstancedMesh)ct.renderInstances(Rs,En,te.count);else if(J.isInstancedBufferGeometry){const Vi=Math.min(J.instanceCount,J._maxInstanceCount);ct.renderInstances(Rs,En,Vi)}else ct.render(Rs,En)}},this.compile=function(T,H){h=C.get(T),h.init(),p.push(h),T.traverseVisible(function(J){J.isLight&&J.layers.test(H.layers)&&(h.pushLight(J),J.castShadow&&h.pushShadow(J))}),h.setupLights(g.physicallyCorrectLights),T.traverse(function(J){const z=J.material;if(z)if(Array.isArray(z))for(let te=0;te<z.length;te++){const Ae=z[te];k(Ae,T,J)}else k(z,T,J)}),p.pop(),h=null};let Be=null;function Fe(T){Be&&Be(T)}function it(){dt.stop()}function ot(){dt.start()}const dt=new oy;dt.setAnimationLoop(Fe),typeof self<"u"&&dt.setContext(self),this.setAnimationLoop=function(T){Be=T,ke.setAnimationLoop(T),T===null?dt.stop():dt.start()},ke.addEventListener("sessionstart",it),ke.addEventListener("sessionend",ot),this.render=function(T,H){if(H!==void 0&&H.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(m===!0)return;T.autoUpdate===!0&&T.updateMatrixWorld(),H.parent===null&&H.updateMatrixWorld(),ke.enabled===!0&&ke.isPresenting===!0&&(ke.cameraAutoUpdate===!0&&ke.updateCamera(H),H=ke.getCamera()),T.isScene===!0&&T.onBeforeRender(g,T,H,M),h=C.get(T,p.length),h.init(),p.push(h),P.multiplyMatrices(H.projectionMatrix,H.matrixWorldInverse),X.setFromProjectionMatrix(P),j=this.localClippingEnabled,K=A.init(this.clippingPlanes,j,H),f=Z.get(T,d.length),f.init(),d.push(f),cn(T,H,0,g.sortObjects),f.finish(),g.sortObjects===!0&&f.sort($,q),K===!0&&A.beginShadows();const J=h.state.shadowsArray;if(ie.render(J,T,H),K===!0&&A.endShadows(),this.info.autoReset===!0&&this.info.reset(),se.render(f,T),h.setupLights(g.physicallyCorrectLights),H.isArrayCamera){const z=H.cameras;for(let te=0,Ae=z.length;te<Ae;te++){const Pe=z[te];pt(f,T,Pe,Pe.viewport)}}else pt(f,T,H);M!==null&&(pe.updateMultisampleRenderTarget(M),pe.updateRenderTargetMipmap(M)),T.isScene===!0&&T.onAfterRender(g,T,H),Me.resetDefaultState(),b=-1,w=null,p.pop(),p.length>0?h=p[p.length-1]:h=null,d.pop(),d.length>0?f=d[d.length-1]:f=null};function cn(T,H,J,z){if(T.visible===!1)return;if(T.layers.test(H.layers)){if(T.isGroup)J=T.renderOrder;else if(T.isLOD)T.autoUpdate===!0&&T.update(H);else if(T.isLight)h.pushLight(T),T.castShadow&&h.pushShadow(T);else if(T.isSprite){if(!T.frustumCulled||X.intersectsSprite(T)){z&&Y.setFromMatrixPosition(T.matrixWorld).applyMatrix4(P);const Pe=D.update(T),We=T.material;We.visible&&f.push(T,Pe,We,J,Y.z,null)}}else if((T.isMesh||T.isLine||T.isPoints)&&(T.isSkinnedMesh&&T.skeleton.frame!==Ie.render.frame&&(T.skeleton.update(),T.skeleton.frame=Ie.render.frame),!T.frustumCulled||X.intersectsObject(T))){z&&Y.setFromMatrixPosition(T.matrixWorld).applyMatrix4(P);const Pe=D.update(T),We=T.material;if(Array.isArray(We)){const Ve=Pe.groups;for(let et=0,$e=Ve.length;et<$e;et++){const Qe=Ve[et],ct=We[Qe.materialIndex];ct&&ct.visible&&f.push(T,Pe,ct,J,Y.z,Qe)}}else We.visible&&f.push(T,Pe,We,J,Y.z,null)}}const Ae=T.children;for(let Pe=0,We=Ae.length;Pe<We;Pe++)cn(Ae[Pe],H,J,z)}function pt(T,H,J,z){const te=T.opaque,Ae=T.transmissive,Pe=T.transparent;h.setupLightsView(J),Ae.length>0&&U(te,H,J),z&&_e.viewport(y.copy(z)),te.length>0&&ue(te,H,J),Ae.length>0&&ue(Ae,H,J),Pe.length>0&&ue(Pe,H,J),_e.buffers.depth.setTest(!0),_e.buffers.depth.setMask(!0),_e.buffers.color.setMask(!0),_e.setPolygonOffset(!1)}function U(T,H,J){const z=ye.isWebGL2;ee===null&&(ee=new os(1,1,{generateMipmaps:!0,type:we.has("EXT_color_buffer_half_float")?Pa:rs,minFilter:Iu,samples:z&&s===!0?4:0})),g.getDrawingBufferSize(V),z?ee.setSize(V.x,V.y):ee.setSize(ep(V.x),ep(V.y));const te=g.getRenderTarget();g.setRenderTarget(ee),g.clear();const Ae=g.toneMapping;g.toneMapping=Oi,ue(T,H,J),g.toneMapping=Ae,pe.updateMultisampleRenderTarget(ee),pe.updateRenderTargetMipmap(ee),g.setRenderTarget(te)}function ue(T,H,J){const z=H.isScene===!0?H.overrideMaterial:null;for(let te=0,Ae=T.length;te<Ae;te++){const Pe=T[te],We=Pe.object,Ve=Pe.geometry,et=z===null?Pe.material:z,$e=Pe.group;We.layers.test(J.layers)&&fe(We,H,J,Ve,et,$e)}}function fe(T,H,J,z,te,Ae){T.onBeforeRender(g,H,J,z,te,Ae),T.modelViewMatrix.multiplyMatrices(J.matrixWorldInverse,T.matrixWorld),T.normalMatrix.getNormalMatrix(T.modelViewMatrix),te.onBeforeRender(g,H,J,z,T,Ae),te.transparent===!0&&te.side===wo?(te.side=qn,te.needsUpdate=!0,g.renderBufferDirect(J,H,z,te,T,Ae),te.side=Ra,te.needsUpdate=!0,g.renderBufferDirect(J,H,z,te,T,Ae),te.side=wo):g.renderBufferDirect(J,H,z,te,T,Ae),T.onAfterRender(g,H,J,z,te,Ae)}function k(T,H,J){H.isScene!==!0&&(H=Q);const z=he.get(T),te=h.state.lights,Ae=h.state.shadowsArray,Pe=te.state.version,We=me.getParameters(T,te.state,Ae,H,J),Ve=me.getProgramCacheKey(We);let et=z.programs;z.environment=T.isMeshStandardMaterial?H.environment:null,z.fog=H.fog,z.envMap=(T.isMeshStandardMaterial?Ne:Te).get(T.envMap||z.environment),et===void 0&&(T.addEventListener("dispose",re),et=new Map,z.programs=et);let $e=et.get(Ve);if($e!==void 0){if(z.currentProgram===$e&&z.lightsStateVersion===Pe)return W(T,We),$e}else We.uniforms=me.getUniforms(T),T.onBuild(J,We,g),T.onBeforeCompile(We,g),$e=me.acquireProgram(We,Ve),et.set(Ve,$e),z.uniforms=We.uniforms;const Qe=z.uniforms;(!T.isShaderMaterial&&!T.isRawShaderMaterial||T.clipping===!0)&&(Qe.clippingPlanes=A.uniform),W(T,We),z.needsLights=ve(T),z.lightsStateVersion=Pe,z.needsLights&&(Qe.ambientLightColor.value=te.state.ambient,Qe.lightProbe.value=te.state.probe,Qe.directionalLights.value=te.state.directional,Qe.directionalLightShadows.value=te.state.directionalShadow,Qe.spotLights.value=te.state.spot,Qe.spotLightShadows.value=te.state.spotShadow,Qe.rectAreaLights.value=te.state.rectArea,Qe.ltc_1.value=te.state.rectAreaLTC1,Qe.ltc_2.value=te.state.rectAreaLTC2,Qe.pointLights.value=te.state.point,Qe.pointLightShadows.value=te.state.pointShadow,Qe.hemisphereLights.value=te.state.hemi,Qe.directionalShadowMap.value=te.state.directionalShadowMap,Qe.directionalShadowMatrix.value=te.state.directionalShadowMatrix,Qe.spotShadowMap.value=te.state.spotShadowMap,Qe.spotShadowMatrix.value=te.state.spotShadowMatrix,Qe.pointShadowMap.value=te.state.pointShadowMap,Qe.pointShadowMatrix.value=te.state.pointShadowMatrix);const ct=$e.getUniforms(),ln=Gl.seqWithValue(ct.seq,Qe);return z.currentProgram=$e,z.uniformsList=ln,$e}function W(T,H){const J=he.get(T);J.outputEncoding=H.outputEncoding,J.instancing=H.instancing,J.skinning=H.skinning,J.morphTargets=H.morphTargets,J.morphNormals=H.morphNormals,J.morphColors=H.morphColors,J.morphTargetsCount=H.morphTargetsCount,J.numClippingPlanes=H.numClippingPlanes,J.numIntersection=H.numClipIntersection,J.vertexAlphas=H.vertexAlphas,J.vertexTangents=H.vertexTangents,J.toneMapping=H.toneMapping}function ae(T,H,J,z,te){H.isScene!==!0&&(H=Q),pe.resetTextureUnits();const Ae=H.fog,Pe=z.isMeshStandardMaterial?H.environment:null,We=M===null?g.outputEncoding:M.isXRRenderTarget===!0?M.texture.encoding:ss,Ve=(z.isMeshStandardMaterial?Ne:Te).get(z.envMap||Pe),et=z.vertexColors===!0&&!!J.attributes.color&&J.attributes.color.itemSize===4,$e=!!z.normalMap&&!!J.attributes.tangent,Qe=!!J.morphAttributes.position,ct=!!J.morphAttributes.normal,ln=!!J.morphAttributes.color,Ls=z.toneMapped?g.toneMapping:Oi,Cs=J.morphAttributes.position||J.morphAttributes.normal||J.morphAttributes.color,Qn=Cs!==void 0?Cs.length:0,at=he.get(z),Rs=h.state.lights;if(K===!0&&(j===!0||T!==w)){const un=T===w&&z.id===b;A.setState(z,T,un)}let Lt=!1;z.version===at.__version?(at.needsLights&&at.lightsStateVersion!==Rs.state.version||at.outputEncoding!==We||te.isInstancedMesh&&at.instancing===!1||!te.isInstancedMesh&&at.instancing===!0||te.isSkinnedMesh&&at.skinning===!1||!te.isSkinnedMesh&&at.skinning===!0||at.envMap!==Ve||z.fog===!0&&at.fog!==Ae||at.numClippingPlanes!==void 0&&(at.numClippingPlanes!==A.numPlanes||at.numIntersection!==A.numIntersection)||at.vertexAlphas!==et||at.vertexTangents!==$e||at.morphTargets!==Qe||at.morphNormals!==ct||at.morphColors!==ln||at.toneMapping!==Ls||ye.isWebGL2===!0&&at.morphTargetsCount!==Qn)&&(Lt=!0):(Lt=!0,at.__version=z.version);let En=at.currentProgram;Lt===!0&&(En=k(z,H,te));let Vi=!1,ia=!1,Xu=!1;const Xt=En.getUniforms(),ra=at.uniforms;if(_e.useProgram(En.program)&&(Vi=!0,ia=!0,Xu=!0),z.id!==b&&(b=z.id,ia=!0),Vi||w!==T){if(Xt.setValue(oe,"projectionMatrix",T.projectionMatrix),ye.logarithmicDepthBuffer&&Xt.setValue(oe,"logDepthBufFC",2/(Math.log(T.far+1)/Math.LN2)),w!==T&&(w=T,ia=!0,Xu=!0),z.isShaderMaterial||z.isMeshPhongMaterial||z.isMeshToonMaterial||z.isMeshStandardMaterial||z.envMap){const un=Xt.map.cameraPosition;un!==void 0&&un.setValue(oe,Y.setFromMatrixPosition(T.matrixWorld))}(z.isMeshPhongMaterial||z.isMeshToonMaterial||z.isMeshLambertMaterial||z.isMeshBasicMaterial||z.isMeshStandardMaterial||z.isShaderMaterial)&&Xt.setValue(oe,"isOrthographic",T.isOrthographicCamera===!0),(z.isMeshPhongMaterial||z.isMeshToonMaterial||z.isMeshLambertMaterial||z.isMeshBasicMaterial||z.isMeshStandardMaterial||z.isShaderMaterial||z.isShadowMaterial||te.isSkinnedMesh)&&Xt.setValue(oe,"viewMatrix",T.matrixWorldInverse)}if(te.isSkinnedMesh){Xt.setOptional(oe,te,"bindMatrix"),Xt.setOptional(oe,te,"bindMatrixInverse");const un=te.skeleton;un&&(ye.floatVertexTextures?(un.boneTexture===null&&un.computeBoneTexture(),Xt.setValue(oe,"boneTexture",un.boneTexture,pe),Xt.setValue(oe,"boneTextureSize",un.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const Yu=J.morphAttributes;if((Yu.position!==void 0||Yu.normal!==void 0||Yu.color!==void 0&&ye.isWebGL2===!0)&&le.update(te,J,z,En),(ia||at.receiveShadow!==te.receiveShadow)&&(at.receiveShadow=te.receiveShadow,Xt.setValue(oe,"receiveShadow",te.receiveShadow)),ia&&(Xt.setValue(oe,"toneMappingExposure",g.toneMappingExposure),at.needsLights&&de(ra,Xu),Ae&&z.fog===!0&&be.refreshFogUniforms(ra,Ae),be.refreshMaterialUniforms(ra,z,I,R,ee),Gl.upload(oe,at.uniformsList,ra,pe)),z.isShaderMaterial&&z.uniformsNeedUpdate===!0&&(Gl.upload(oe,at.uniformsList,ra,pe),z.uniformsNeedUpdate=!1),z.isSpriteMaterial&&Xt.setValue(oe,"center",te.center),Xt.setValue(oe,"modelViewMatrix",te.modelViewMatrix),Xt.setValue(oe,"normalMatrix",te.normalMatrix),Xt.setValue(oe,"modelMatrix",te.matrixWorld),z.isShaderMaterial||z.isRawShaderMaterial){const un=z.uniformsGroups;for(let Zu=0,AM=un.length;Zu<AM;Zu++)if(ye.isWebGL2){const jm=un[Zu];Le.update(jm,En),Le.bind(jm,En)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return En}function de(T,H){T.ambientLightColor.needsUpdate=H,T.lightProbe.needsUpdate=H,T.directionalLights.needsUpdate=H,T.directionalLightShadows.needsUpdate=H,T.pointLights.needsUpdate=H,T.pointLightShadows.needsUpdate=H,T.spotLights.needsUpdate=H,T.spotLightShadows.needsUpdate=H,T.rectAreaLights.needsUpdate=H,T.hemisphereLights.needsUpdate=H}function ve(T){return T.isMeshLambertMaterial||T.isMeshToonMaterial||T.isMeshPhongMaterial||T.isMeshStandardMaterial||T.isShadowMaterial||T.isShaderMaterial&&T.lights===!0}this.getActiveCubeFace=function(){return v},this.getActiveMipmapLevel=function(){return x},this.getRenderTarget=function(){return M},this.setRenderTargetTextures=function(T,H,J){he.get(T.texture).__webglTexture=H,he.get(T.depthTexture).__webglTexture=J;const z=he.get(T);z.__hasExternalTextures=!0,z.__hasExternalTextures&&(z.__autoAllocateDepthBuffer=J===void 0,z.__autoAllocateDepthBuffer||we.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),z.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(T,H){const J=he.get(T);J.__webglFramebuffer=H,J.__useDefaultFramebuffer=H===void 0},this.setRenderTarget=function(T,H=0,J=0){M=T,v=H,x=J;let z=!0;if(T){const Ve=he.get(T);Ve.__useDefaultFramebuffer!==void 0?(_e.bindFramebuffer(36160,null),z=!1):Ve.__webglFramebuffer===void 0?pe.setupRenderTarget(T):Ve.__hasExternalTextures&&pe.rebindTextures(T,he.get(T.texture).__webglTexture,he.get(T.depthTexture).__webglTexture)}let te=null,Ae=!1,Pe=!1;if(T){const Ve=T.texture;(Ve.isData3DTexture||Ve.isDataArrayTexture)&&(Pe=!0);const et=he.get(T).__webglFramebuffer;T.isWebGLCubeRenderTarget?(te=et[H],Ae=!0):ye.isWebGL2&&T.samples>0&&pe.useMultisampledRTT(T)===!1?te=he.get(T).__webglMultisampledFramebuffer:te=et,y.copy(T.viewport),_.copy(T.scissor),S=T.scissorTest}else y.copy(L).multiplyScalar(I).floor(),_.copy(N).multiplyScalar(I).floor(),S=G;if(_e.bindFramebuffer(36160,te)&&ye.drawBuffers&&z&&_e.drawBuffers(T,te),_e.viewport(y),_e.scissor(_),_e.setScissorTest(S),Ae){const Ve=he.get(T.texture);oe.framebufferTexture2D(36160,36064,34069+H,Ve.__webglTexture,J)}else if(Pe){const Ve=he.get(T.texture),et=H||0;oe.framebufferTextureLayer(36160,36064,Ve.__webglTexture,J||0,et)}b=-1},this.readRenderTargetPixels=function(T,H,J,z,te,Ae,Pe){if(!(T&&T.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let We=he.get(T).__webglFramebuffer;if(T.isWebGLCubeRenderTarget&&Pe!==void 0&&(We=We[Pe]),We){_e.bindFramebuffer(36160,We);try{const Ve=T.texture,et=Ve.format,$e=Ve.type;if(et!==si&&ne.convert(et)!==oe.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const Qe=$e===Pa&&(we.has("EXT_color_buffer_half_float")||ye.isWebGL2&&we.has("EXT_color_buffer_float"));if($e!==rs&&ne.convert($e)!==oe.getParameter(35738)&&!($e===$r&&(ye.isWebGL2||we.has("OES_texture_float")||we.has("WEBGL_color_buffer_float")))&&!Qe){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}H>=0&&H<=T.width-z&&J>=0&&J<=T.height-te&&oe.readPixels(H,J,z,te,ne.convert(et),ne.convert($e),Ae)}finally{const Ve=M!==null?he.get(M).__webglFramebuffer:null;_e.bindFramebuffer(36160,Ve)}}},this.copyFramebufferToTexture=function(T,H,J=0){const z=Math.pow(2,-J),te=Math.floor(H.image.width*z),Ae=Math.floor(H.image.height*z);pe.setTexture2D(H,0),oe.copyTexSubImage2D(3553,J,0,0,T.x,T.y,te,Ae),_e.unbindTexture()},this.copyTextureToTexture=function(T,H,J,z=0){const te=H.image.width,Ae=H.image.height,Pe=ne.convert(J.format),We=ne.convert(J.type);pe.setTexture2D(J,0),oe.pixelStorei(37440,J.flipY),oe.pixelStorei(37441,J.premultiplyAlpha),oe.pixelStorei(3317,J.unpackAlignment),H.isDataTexture?oe.texSubImage2D(3553,z,T.x,T.y,te,Ae,Pe,We,H.image.data):H.isCompressedTexture?oe.compressedTexSubImage2D(3553,z,T.x,T.y,H.mipmaps[0].width,H.mipmaps[0].height,Pe,H.mipmaps[0].data):oe.texSubImage2D(3553,z,T.x,T.y,Pe,We,H.image),z===0&&J.generateMipmaps&&oe.generateMipmap(3553),_e.unbindTexture()},this.copyTextureToTexture3D=function(T,H,J,z,te=0){if(g.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Ae=T.max.x-T.min.x+1,Pe=T.max.y-T.min.y+1,We=T.max.z-T.min.z+1,Ve=ne.convert(z.format),et=ne.convert(z.type);let $e;if(z.isData3DTexture)pe.setTexture3D(z,0),$e=32879;else if(z.isDataArrayTexture)pe.setTexture2DArray(z,0),$e=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}oe.pixelStorei(37440,z.flipY),oe.pixelStorei(37441,z.premultiplyAlpha),oe.pixelStorei(3317,z.unpackAlignment);const Qe=oe.getParameter(3314),ct=oe.getParameter(32878),ln=oe.getParameter(3316),Ls=oe.getParameter(3315),Cs=oe.getParameter(32877),Qn=J.isCompressedTexture?J.mipmaps[0]:J.image;oe.pixelStorei(3314,Qn.width),oe.pixelStorei(32878,Qn.height),oe.pixelStorei(3316,T.min.x),oe.pixelStorei(3315,T.min.y),oe.pixelStorei(32877,T.min.z),J.isDataTexture||J.isData3DTexture?oe.texSubImage3D($e,te,H.x,H.y,H.z,Ae,Pe,We,Ve,et,Qn.data):J.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),oe.compressedTexSubImage3D($e,te,H.x,H.y,H.z,Ae,Pe,We,Ve,Qn.data)):oe.texSubImage3D($e,te,H.x,H.y,H.z,Ae,Pe,We,Ve,et,Qn),oe.pixelStorei(3314,Qe),oe.pixelStorei(32878,ct),oe.pixelStorei(3316,ln),oe.pixelStorei(3315,Ls),oe.pixelStorei(32877,Cs),te===0&&z.generateMipmaps&&oe.generateMipmap($e),_e.unbindTexture()},this.initTexture=function(T){T.isCubeTexture?pe.setTextureCube(T,0):T.isData3DTexture?pe.setTexture3D(T,0):T.isDataArrayTexture?pe.setTexture2DArray(T,0):pe.setTexture2D(T,0),_e.unbindTexture()},this.resetState=function(){v=0,x=0,M=null,_e.reset(),Me.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}let ST=class extends dy{};ST.prototype.isWebGL1Renderer=!0;let ET=class extends Gi{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),t}},Yc=class extends pc{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new lt(16777215),this.specular=new lt(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new lt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Gb,this.normalScale=new gt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Jp,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}},TT=class extends Gi{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new lt(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}},AT=class extends TT{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}};typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Zp}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Zp);var og=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function LT(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}function CT(n){if(Object.prototype.hasOwnProperty.call(n,"__esModule"))return n;var e=n.default;if(typeof e=="function"){var t=function i(){var r=!1;try{r=this instanceof i}catch{}return r?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(n).forEach(function(i){var r=Object.getOwnPropertyDescriptor(n,i);Object.defineProperty(t,i,r.get?r:{enumerable:!0,get:function(){return n[i]}})}),t}var If={},ag={},Df,cg;function Jn(){if(cg)return Df;cg=1;var n=function(e){return e&&e.Math==Math&&e};return Df=n(typeof globalThis=="object"&&globalThis)||n(typeof window=="object"&&window)||n(typeof self=="object"&&self)||n(typeof og=="object"&&og)||(function(){return this})()||Function("return this")(),Df}var Of={},Ff,lg;function gi(){return lg||(lg=1,Ff=function(n){try{return!!n()}catch{return!0}}),Ff}var Nf,ug;function xi(){if(ug)return Nf;ug=1;var n=gi();return Nf=!n(function(){return Object.defineProperty({},1,{get:function(){return 7}})[1]!=7}),Nf}var Bf,fg;function py(){if(fg)return Bf;fg=1;var n=gi();return Bf=!n(function(){var e=(function(){}).bind();return typeof e!="function"||e.hasOwnProperty("prototype")}),Bf}var Uf,hg;function Fu(){if(hg)return Uf;hg=1;var n=py(),e=Function.prototype.call;return Uf=n?e.bind(e):function(){return e.apply(e,arguments)},Uf}var zf={},dg;function RT(){if(dg)return zf;dg=1;var n={}.propertyIsEnumerable,e=Object.getOwnPropertyDescriptor,t=e&&!n.call({1:2},1);return zf.f=t?function(r){var s=e(this,r);return!!s&&s.enumerable}:n,zf}var Gf,pg;function tm(){return pg||(pg=1,Gf=function(n,e){return{enumerable:!(n&1),configurable:!(n&2),writable:!(n&4),value:e}}),Gf}var kf,mg;function Kn(){if(mg)return kf;mg=1;var n=py(),e=Function,t=e.prototype,i=t.bind,r=t.call,s=n&&i.bind(r,r);return kf=function(o){return o instanceof e?n?s(o):function(){return r.apply(o,arguments)}:void 0},kf}var Hf,gg;function my(){if(gg)return Hf;gg=1;var n=Kn(),e=n({}.toString),t=n("".slice);return Hf=function(i){return t(e(i),8,-1)},Hf}var Vf,xg;function PT(){if(xg)return Vf;xg=1;var n=Kn(),e=gi(),t=my(),i=Object,r=n("".split);return Vf=e(function(){return!i("z").propertyIsEnumerable(0)})?function(s){return t(s)=="String"?r(s,""):i(s)}:i,Vf}var Wf,vg;function gy(){return vg||(vg=1,Wf=function(n){return n==null}),Wf}var qf,bg;function xy(){if(bg)return qf;bg=1;var n=gy(),e=TypeError;return qf=function(t){if(n(t))throw e("Can't call method on "+t);return t},qf}var $f,yg;function gc(){if(yg)return $f;yg=1;var n=PT(),e=xy();return $f=function(t){return n(e(t))},$f}var jf,_g;function vy(){if(_g)return jf;_g=1;var n=typeof document=="object"&&document.all,e=typeof n>"u"&&n!==void 0;return jf={all:n,IS_HTMLDDA:e},jf}var Xf,Mg;function jt(){if(Mg)return Xf;Mg=1;var n=vy(),e=n.all;return Xf=n.IS_HTMLDDA?function(t){return typeof t=="function"||t===e}:function(t){return typeof t=="function"},Xf}var Yf,wg;function jo(){if(wg)return Yf;wg=1;var n=jt(),e=vy(),t=e.all;return Yf=e.IS_HTMLDDA?function(i){return typeof i=="object"?i!==null:n(i)||i===t}:function(i){return typeof i=="object"?i!==null:n(i)},Yf}var Zf,Sg;function Nu(){if(Sg)return Zf;Sg=1;var n=Jn(),e=jt(),t=function(i){return e(i)?i:void 0};return Zf=function(i,r){return arguments.length<2?t(n[i]):n[i]&&n[i][r]},Zf}var Jf,Eg;function by(){if(Eg)return Jf;Eg=1;var n=Kn();return Jf=n({}.isPrototypeOf),Jf}var Kf,Tg;function IT(){if(Tg)return Kf;Tg=1;var n=Nu();return Kf=n("navigator","userAgent")||"",Kf}var Qf,Ag;function DT(){if(Ag)return Qf;Ag=1;var n=Jn(),e=IT(),t=n.process,i=n.Deno,r=t&&t.versions||i&&i.version,s=r&&r.v8,o,a;return s&&(o=s.split("."),a=o[0]>0&&o[0]<4?1:+(o[0]+o[1])),!a&&e&&(o=e.match(/Edge\/(\d+)/),(!o||o[1]>=74)&&(o=e.match(/Chrome\/(\d+)/),o&&(a=+o[1]))),Qf=a,Qf}var eh,Lg;function yy(){if(Lg)return eh;Lg=1;var n=DT(),e=gi();return eh=!!Object.getOwnPropertySymbols&&!e(function(){var t=Symbol();return!String(t)||!(Object(t)instanceof Symbol)||!Symbol.sham&&n&&n<41}),eh}var th,Cg;function _y(){if(Cg)return th;Cg=1;var n=yy();return th=n&&!Symbol.sham&&typeof Symbol.iterator=="symbol",th}var nh,Rg;function My(){if(Rg)return nh;Rg=1;var n=Nu(),e=jt(),t=by(),i=_y(),r=Object;return nh=i?function(s){return typeof s=="symbol"}:function(s){var o=n("Symbol");return e(o)&&t(o.prototype,r(s))},nh}var ih,Pg;function OT(){if(Pg)return ih;Pg=1;var n=String;return ih=function(e){try{return n(e)}catch{return"Object"}},ih}var rh,Ig;function FT(){if(Ig)return rh;Ig=1;var n=jt(),e=OT(),t=TypeError;return rh=function(i){if(n(i))return i;throw t(e(i)+" is not a function")},rh}var sh,Dg;function NT(){if(Dg)return sh;Dg=1;var n=FT(),e=gy();return sh=function(t,i){var r=t[i];return e(r)?void 0:n(r)},sh}var oh,Og;function BT(){if(Og)return oh;Og=1;var n=Fu(),e=jt(),t=jo(),i=TypeError;return oh=function(r,s){var o,a;if(s==="string"&&e(o=r.toString)&&!t(a=n(o,r))||e(o=r.valueOf)&&!t(a=n(o,r))||s!=="string"&&e(o=r.toString)&&!t(a=n(o,r)))return a;throw i("Can't convert object to primitive value")},oh}var ah={exports:{}},ch,Fg;function Bu(){return Fg||(Fg=1,ch=!1),ch}var lh,Ng;function nm(){if(Ng)return lh;Ng=1;var n=Jn(),e=Object.defineProperty;return lh=function(t,i){try{e(n,t,{value:i,configurable:!0,writable:!0})}catch{n[t]=i}return i},lh}var uh,Bg;function im(){if(Bg)return uh;Bg=1;var n=Jn(),e=nm(),t="__core-js_shared__",i=n[t]||e(t,{});return uh=i,uh}var Ug;function wy(){if(Ug)return ah.exports;Ug=1;var n=Bu(),e=im();return(ah.exports=function(t,i){return e[t]||(e[t]=i!==void 0?i:{})})("versions",[]).push({version:"3.25.4",mode:n?"pure":"global",copyright:"© 2014-2022 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.25.4/LICENSE",source:"https://github.com/zloirock/core-js"}),ah.exports}var fh,zg;function Sy(){if(zg)return fh;zg=1;var n=xy(),e=Object;return fh=function(t){return e(n(t))},fh}var hh,Gg;function vi(){if(Gg)return hh;Gg=1;var n=Kn(),e=Sy(),t=n({}.hasOwnProperty);return hh=Object.hasOwn||function(r,s){return t(e(r),s)},hh}var dh,kg;function Ey(){if(kg)return dh;kg=1;var n=Kn(),e=0,t=Math.random(),i=n(1 .toString);return dh=function(r){return"Symbol("+(r===void 0?"":r)+")_"+i(++e+t,36)},dh}var ph,Hg;function Sr(){if(Hg)return ph;Hg=1;var n=Jn(),e=wy(),t=vi(),i=Ey(),r=yy(),s=_y(),o=e("wks"),a=n.Symbol,l=a&&a.for,c=s?a:a&&a.withoutSetter||i;return ph=function(u){if(!t(o,u)||!(r||typeof o[u]=="string")){var f="Symbol."+u;r&&t(a,u)?o[u]=a[u]:s&&l?o[u]=l(f):o[u]=c(f)}return o[u]},ph}var mh,Vg;function UT(){if(Vg)return mh;Vg=1;var n=Fu(),e=jo(),t=My(),i=NT(),r=BT(),s=Sr(),o=TypeError,a=s("toPrimitive");return mh=function(l,c){if(!e(l)||t(l))return l;var u=i(l,a),f;if(u){if(c===void 0&&(c="default"),f=n(u,l,c),!e(f)||t(f))return f;throw o("Can't convert object to primitive value")}return c===void 0&&(c="number"),r(l,c)},mh}var gh,Wg;function Ty(){if(Wg)return gh;Wg=1;var n=UT(),e=My();return gh=function(t){var i=n(t,"string");return e(i)?i:i+""},gh}var xh,qg;function rm(){if(qg)return xh;qg=1;var n=Jn(),e=jo(),t=n.document,i=e(t)&&e(t.createElement);return xh=function(r){return i?t.createElement(r):{}},xh}var vh,$g;function Ay(){if($g)return vh;$g=1;var n=xi(),e=gi(),t=rm();return vh=!n&&!e(function(){return Object.defineProperty(t("div"),"a",{get:function(){return 7}}).a!=7}),vh}var jg;function Ly(){if(jg)return Of;jg=1;var n=xi(),e=Fu(),t=RT(),i=tm(),r=gc(),s=Ty(),o=vi(),a=Ay(),l=Object.getOwnPropertyDescriptor;return Of.f=n?l:function(u,f){if(u=r(u),f=s(f),a)try{return l(u,f)}catch{}if(o(u,f))return i(!e(t.f,u,f),u[f])},Of}var bh={},yh,Xg;function Cy(){if(Xg)return yh;Xg=1;var n=xi(),e=gi();return yh=n&&e(function(){return Object.defineProperty(function(){},"prototype",{value:42,writable:!1}).prototype!=42}),yh}var _h,Yg;function xc(){if(Yg)return _h;Yg=1;var n=jo(),e=String,t=TypeError;return _h=function(i){if(n(i))return i;throw t(e(i)+" is not an object")},_h}var Zg;function Er(){if(Zg)return bh;Zg=1;var n=xi(),e=Ay(),t=Cy(),i=xc(),r=Ty(),s=TypeError,o=Object.defineProperty,a=Object.getOwnPropertyDescriptor,l="enumerable",c="configurable",u="writable";return bh.f=n?t?function(h,d,p){if(i(h),d=r(d),i(p),typeof h=="function"&&d==="prototype"&&"value"in p&&u in p&&!p[u]){var g=a(h,d);g&&g[u]&&(h[d]=p.value,p={configurable:c in p?p[c]:g[c],enumerable:l in p?p[l]:g[l],writable:!1})}return o(h,d,p)}:o:function(h,d,p){if(i(h),d=r(d),i(p),e)try{return o(h,d,p)}catch{}if("get"in p||"set"in p)throw s("Accessors not supported");return"value"in p&&(h[d]=p.value),h},bh}var Mh,Jg;function Uu(){if(Jg)return Mh;Jg=1;var n=xi(),e=Er(),t=tm();return Mh=n?function(i,r,s){return e.f(i,r,t(1,s))}:function(i,r,s){return i[r]=s,i},Mh}var wh={exports:{}},Sh,Kg;function Ry(){if(Kg)return Sh;Kg=1;var n=xi(),e=vi(),t=Function.prototype,i=n&&Object.getOwnPropertyDescriptor,r=e(t,"name"),s=r&&(function(){}).name==="something",o=r&&(!n||n&&i(t,"name").configurable);return Sh={EXISTS:r,PROPER:s,CONFIGURABLE:o},Sh}var Eh,Qg;function zT(){if(Qg)return Eh;Qg=1;var n=Kn(),e=jt(),t=im(),i=n(Function.toString);return e(t.inspectSource)||(t.inspectSource=function(r){return i(r)}),Eh=t.inspectSource,Eh}var Th,ex;function GT(){if(ex)return Th;ex=1;var n=Jn(),e=jt(),t=n.WeakMap;return Th=e(t)&&/native code/.test(String(t)),Th}var Ah,tx;function sm(){if(tx)return Ah;tx=1;var n=wy(),e=Ey(),t=n("keys");return Ah=function(i){return t[i]||(t[i]=e(i))},Ah}var Lh,nx;function om(){return nx||(nx=1,Lh={}),Lh}var Ch,ix;function Py(){if(ix)return Ch;ix=1;var n=GT(),e=Jn(),t=Kn(),i=jo(),r=Uu(),s=vi(),o=im(),a=sm(),l=om(),c="Object already initialized",u=e.TypeError,f=e.WeakMap,h,d,p,g=function(y){return p(y)?d(y):h(y,{})},m=function(y){return function(_){var S;if(!i(_)||(S=d(_)).type!==y)throw u("Incompatible receiver, "+y+" required");return S}};if(n||o.state){var v=o.state||(o.state=new f),x=t(v.get),M=t(v.has),b=t(v.set);h=function(y,_){if(M(v,y))throw u(c);return _.facade=y,b(v,y,_),_},d=function(y){return x(v,y)||{}},p=function(y){return M(v,y)}}else{var w=a("state");l[w]=!0,h=function(y,_){if(s(y,w))throw u(c);return _.facade=y,r(y,w,_),_},d=function(y){return s(y,w)?y[w]:{}},p=function(y){return s(y,w)}}return Ch={set:h,get:d,has:p,enforce:g,getterFor:m},Ch}var rx;function kT(){if(rx)return wh.exports;rx=1;var n=gi(),e=jt(),t=vi(),i=xi(),r=Ry().CONFIGURABLE,s=zT(),o=Py(),a=o.enforce,l=o.get,c=Object.defineProperty,u=i&&!n(function(){return c(function(){},"length",{value:8}).length!==8}),f=String(String).split("String"),h=wh.exports=function(d,p,g){String(p).slice(0,7)==="Symbol("&&(p="["+String(p).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),g&&g.getter&&(p="get "+p),g&&g.setter&&(p="set "+p),(!t(d,"name")||r&&d.name!==p)&&(i?c(d,"name",{value:p,configurable:!0}):d.name=p),u&&g&&t(g,"arity")&&d.length!==g.arity&&c(d,"length",{value:g.arity});try{g&&t(g,"constructor")&&g.constructor?i&&c(d,"prototype",{writable:!1}):d.prototype&&(d.prototype=void 0)}catch{}var m=a(d);return t(m,"source")||(m.source=f.join(typeof p=="string"?p:"")),d};return Function.prototype.toString=h(function(){return e(this)&&l(this).source||s(this)},"toString"),wh.exports}var Rh,sx;function am(){if(sx)return Rh;sx=1;var n=jt(),e=Er(),t=kT(),i=nm();return Rh=function(r,s,o,a){a||(a={});var l=a.enumerable,c=a.name!==void 0?a.name:s;if(n(o)&&t(o,c,a),a.global)l?r[s]=o:i(s,o);else{try{a.unsafe?r[s]&&(l=!0):delete r[s]}catch{}l?r[s]=o:e.f(r,s,{value:o,enumerable:!1,configurable:!a.nonConfigurable,writable:!a.nonWritable})}return r},Rh}var Ph={},Ih,ox;function HT(){if(ox)return Ih;ox=1;var n=Math.ceil,e=Math.floor;return Ih=Math.trunc||function(i){var r=+i;return(r>0?e:n)(r)},Ih}var Dh,ax;function Iy(){if(ax)return Dh;ax=1;var n=HT();return Dh=function(e){var t=+e;return t!==t||t===0?0:n(t)},Dh}var Oh,cx;function VT(){if(cx)return Oh;cx=1;var n=Iy(),e=Math.max,t=Math.min;return Oh=function(i,r){var s=n(i);return s<0?e(s+r,0):t(s,r)},Oh}var Fh,lx;function WT(){if(lx)return Fh;lx=1;var n=Iy(),e=Math.min;return Fh=function(t){return t>0?e(n(t),9007199254740991):0},Fh}var Nh,ux;function qT(){if(ux)return Nh;ux=1;var n=WT();return Nh=function(e){return n(e.length)},Nh}var Bh,fx;function $T(){if(fx)return Bh;fx=1;var n=gc(),e=VT(),t=qT(),i=function(r){return function(s,o,a){var l=n(s),c=t(l),u=e(a,c),f;if(r&&o!=o){for(;c>u;)if(f=l[u++],f!=f)return!0}else for(;c>u;u++)if((r||u in l)&&l[u]===o)return r||u||0;return!r&&-1}};return Bh={includes:i(!0),indexOf:i(!1)},Bh}var Uh,hx;function Dy(){if(hx)return Uh;hx=1;var n=Kn(),e=vi(),t=gc(),i=$T().indexOf,r=om(),s=n([].push);return Uh=function(o,a){var l=t(o),c=0,u=[],f;for(f in l)!e(r,f)&&e(l,f)&&s(u,f);for(;a.length>c;)e(l,f=a[c++])&&(~i(u,f)||s(u,f));return u},Uh}var zh,dx;function cm(){return dx||(dx=1,zh=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]),zh}var px;function jT(){if(px)return Ph;px=1;var n=Dy(),e=cm(),t=e.concat("length","prototype");return Ph.f=Object.getOwnPropertyNames||function(r){return n(r,t)},Ph}var Gh={},mx;function XT(){return mx||(mx=1,Gh.f=Object.getOwnPropertySymbols),Gh}var kh,gx;function YT(){if(gx)return kh;gx=1;var n=Nu(),e=Kn(),t=jT(),i=XT(),r=xc(),s=e([].concat);return kh=n("Reflect","ownKeys")||function(a){var l=t.f(r(a)),c=i.f;return c?s(l,c(a)):l},kh}var Hh,xx;function Oy(){if(xx)return Hh;xx=1;var n=vi(),e=YT(),t=Ly(),i=Er();return Hh=function(r,s,o){for(var a=e(s),l=i.f,c=t.f,u=0;u<a.length;u++){var f=a[u];!n(r,f)&&!(o&&n(o,f))&&l(r,f,c(s,f))}},Hh}var Vh,vx;function ZT(){if(vx)return Vh;vx=1;var n=gi(),e=jt(),t=/#|\.prototype\./,i=function(l,c){var u=s[r(l)];return u==a?!0:u==o?!1:e(c)?n(c):!!c},r=i.normalize=function(l){return String(l).replace(t,".").toLowerCase()},s=i.data={},o=i.NATIVE="N",a=i.POLYFILL="P";return Vh=i,Vh}var Wh,bx;function Fy(){if(bx)return Wh;bx=1;var n=Jn(),e=Ly().f,t=Uu(),i=am(),r=nm(),s=Oy(),o=ZT();return Wh=function(a,l){var c=a.target,u=a.global,f=a.stat,h,d,p,g,m,v;if(u?d=n:f?d=n[c]||r(c,{}):d=(n[c]||{}).prototype,d)for(p in l){if(m=l[p],a.dontCallGetSet?(v=e(d,p),g=v&&v.value):g=d[p],h=o(u?p:c+(f?".":"#")+p,a.forced),!h&&g!==void 0){if(typeof m==typeof g)continue;s(m,g)}(a.sham||g&&g.sham)&&t(m,"sham",!0),i(d,p,m,a)}},Wh}var qh,yx;function JT(){if(yx)return qh;yx=1;var n=Sr(),e=n("toStringTag"),t={};return t[e]="z",qh=String(t)==="[object z]",qh}var $h,_x;function KT(){if(_x)return $h;_x=1;var n=JT(),e=jt(),t=my(),i=Sr(),r=i("toStringTag"),s=Object,o=t((function(){return arguments})())=="Arguments",a=function(l,c){try{return l[c]}catch{}};return $h=n?t:function(l){var c,u,f;return l===void 0?"Undefined":l===null?"Null":typeof(u=a(c=s(l),r))=="string"?u:o?t(c):(f=t(c))=="Object"&&e(c.callee)?"Arguments":f},$h}var jh,Mx;function QT(){if(Mx)return jh;Mx=1;var n=KT(),e=String;return jh=function(t){if(n(t)==="Symbol")throw TypeError("Cannot convert a Symbol value to a string");return e(t)},jh}var wx;function eA(){if(wx)return ag;wx=1;var n=Fy(),e=xi(),t=Jn(),i=Kn(),r=vi(),s=jt(),o=by(),a=QT(),l=Er().f,c=Oy(),u=t.Symbol,f=u&&u.prototype;if(e&&s(u)&&(!("description"in f)||u().description!==void 0)){var h={},d=function(){var w=arguments.length<1||arguments[0]===void 0?void 0:a(arguments[0]),y=o(f,this)?new u(w):w===void 0?u():u(w);return w===""&&(h[y]=!0),y};c(d,u),d.prototype=f,f.constructor=d;var p=String(u("test"))=="Symbol(test)",g=i(f.valueOf),m=i(f.toString),v=/^Symbol\((.*)\)[^)]+$/,x=i("".replace),M=i("".slice);l(f,"description",{configurable:!0,get:function(){var w=g(this);if(r(h,w))return"";var y=m(w),_=p?M(y,7,-1):x(y,v,"$1");return _===""?void 0:_}}),n({global:!0,constructor:!0,forced:!0},{Symbol:d})}return ag}var Sx={},Xh,Ex;function tA(){return Ex||(Ex=1,Xh={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}),Xh}var Yh,Tx;function nA(){if(Tx)return Yh;Tx=1;var n=rm(),e=n("span").classList,t=e&&e.constructor&&e.constructor.prototype;return Yh=t===Object.prototype?void 0:t,Yh}var Zh={},Jh,Ax;function iA(){if(Ax)return Jh;Ax=1;var n=Dy(),e=cm();return Jh=Object.keys||function(i){return n(i,e)},Jh}var Lx;function rA(){if(Lx)return Zh;Lx=1;var n=xi(),e=Cy(),t=Er(),i=xc(),r=gc(),s=iA();return Zh.f=n&&!e?Object.defineProperties:function(a,l){i(a);for(var c=r(l),u=s(l),f=u.length,h=0,d;f>h;)t.f(a,d=u[h++],c[d]);return a},Zh}var Kh,Cx;function sA(){if(Cx)return Kh;Cx=1;var n=Nu();return Kh=n("document","documentElement"),Kh}var Qh,Rx;function lm(){if(Rx)return Qh;Rx=1;var n=xc(),e=rA(),t=cm(),i=om(),r=sA(),s=rm(),o=sm(),a=">",l="<",c="prototype",u="script",f=o("IE_PROTO"),h=function(){},d=function(x){return l+u+a+x+l+"/"+u+a},p=function(x){x.write(d("")),x.close();var M=x.parentWindow.Object;return x=null,M},g=function(){var x=s("iframe"),M="java"+u+":",b;return x.style.display="none",r.appendChild(x),x.src=String(M),b=x.contentWindow.document,b.open(),b.write(d("document.F=Object")),b.close(),b.F},m,v=function(){try{m=new ActiveXObject("htmlfile")}catch{}v=typeof document<"u"?document.domain&&m?p(m):g():p(m);for(var x=t.length;x--;)delete v[c][t[x]];return v()};return i[f]=!0,Qh=Object.create||function(M,b){var w;return M!==null?(h[c]=n(M),w=new h,h[c]=null,w[f]=M):w=v(),b===void 0?w:e.f(w,b)},Qh}var ed,Px;function oA(){if(Px)return ed;Px=1;var n=Sr(),e=lm(),t=Er().f,i=n("unscopables"),r=Array.prototype;return r[i]==null&&t(r,i,{configurable:!0,value:e(null)}),ed=function(s){r[i][s]=!0},ed}var td,Ix;function um(){return Ix||(Ix=1,td={}),td}var nd,Dx;function aA(){if(Dx)return nd;Dx=1;var n=gi();return nd=!n(function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}),nd}var id,Ox;function Ny(){if(Ox)return id;Ox=1;var n=vi(),e=jt(),t=Sy(),i=sm(),r=aA(),s=i("IE_PROTO"),o=Object,a=o.prototype;return id=r?o.getPrototypeOf:function(l){var c=t(l);if(n(c,s))return c[s];var u=c.constructor;return e(u)&&c instanceof u?u.prototype:c instanceof o?a:null},id}var rd,Fx;function By(){if(Fx)return rd;Fx=1;var n=gi(),e=jt(),t=jo(),i=lm(),r=Ny(),s=am(),o=Sr(),a=Bu(),l=o("iterator"),c=!1,u,f,h;[].keys&&(h=[].keys(),"next"in h?(f=r(r(h)),f!==Object.prototype&&(u=f)):c=!0);var d=!t(u)||n(function(){var p={};return u[l].call(p)!==p});return d?u={}:a&&(u=i(u)),e(u[l])||s(u,l,function(){return this}),rd={IteratorPrototype:u,BUGGY_SAFARI_ITERATORS:c},rd}var sd,Nx;function Uy(){if(Nx)return sd;Nx=1;var n=Er().f,e=vi(),t=Sr(),i=t("toStringTag");return sd=function(r,s,o){r&&!o&&(r=r.prototype),r&&!e(r,i)&&n(r,i,{configurable:!0,value:s})},sd}var od,Bx;function cA(){if(Bx)return od;Bx=1;var n=By().IteratorPrototype,e=lm(),t=tm(),i=Uy(),r=um(),s=function(){return this};return od=function(o,a,l,c){var u=a+" Iterator";return o.prototype=e(n,{next:t(+!c,l)}),i(o,u,!1,!0),r[u]=s,o},od}var ad,Ux;function lA(){if(Ux)return ad;Ux=1;var n=jt(),e=String,t=TypeError;return ad=function(i){if(typeof i=="object"||n(i))return i;throw t("Can't set "+e(i)+" as a prototype")},ad}var cd,zx;function uA(){if(zx)return cd;zx=1;var n=Kn(),e=xc(),t=lA();return cd=Object.setPrototypeOf||("__proto__"in{}?(function(){var i=!1,r={},s;try{s=n(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set),s(r,[]),i=r instanceof Array}catch{}return function(a,l){return e(a),t(l),i?s(a,l):a.__proto__=l,a}})():void 0),cd}var ld,Gx;function fA(){if(Gx)return ld;Gx=1;var n=Fy(),e=Fu(),t=Bu(),i=Ry(),r=jt(),s=cA(),o=Ny(),a=uA(),l=Uy(),c=Uu(),u=am(),f=Sr(),h=um(),d=By(),p=i.PROPER,g=i.CONFIGURABLE,m=d.IteratorPrototype,v=d.BUGGY_SAFARI_ITERATORS,x=f("iterator"),M="keys",b="values",w="entries",y=function(){return this};return ld=function(_,S,E,R,I,$,q){s(E,S,R);var L=function(Q){if(Q===I&&j)return j;if(!v&&Q in X)return X[Q];switch(Q){case M:return function(){return new E(this,Q)};case b:return function(){return new E(this,Q)};case w:return function(){return new E(this,Q)}}return function(){return new E(this)}},N=S+" Iterator",G=!1,X=_.prototype,K=X[x]||X["@@iterator"]||I&&X[I],j=!v&&K||L(I),ee=S=="Array"&&X.entries||K,P,V,Y;if(ee&&(P=o(ee.call(new _)),P!==Object.prototype&&P.next&&(!t&&o(P)!==m&&(a?a(P,m):r(P[x])||u(P,x,y)),l(P,N,!0,!0),t&&(h[N]=y))),p&&I==b&&K&&K.name!==b&&(!t&&g?c(X,"name",b):(G=!0,j=function(){return e(K,this)})),I)if(V={values:L(b),keys:$?j:L(M),entries:L(w)},q)for(Y in V)(v||G||!(Y in X))&&u(X,Y,V[Y]);else n({target:S,proto:!0,forced:v||G},V);return(!t||q)&&X[x]!==j&&u(X,x,j,{name:I}),h[S]=j,V},ld}var ud,kx;function hA(){return kx||(kx=1,ud=function(n,e){return{value:n,done:e}}),ud}var fd,Hx;function dA(){if(Hx)return fd;Hx=1;var n=gc(),e=oA(),t=um(),i=Py(),r=Er().f,s=fA(),o=hA(),a=Bu(),l=xi(),c="Array Iterator",u=i.set,f=i.getterFor(c);fd=s(Array,"Array",function(d,p){u(this,{type:c,target:n(d),index:0,kind:p})},function(){var d=f(this),p=d.target,g=d.kind,m=d.index++;return!p||m>=p.length?(d.target=void 0,o(void 0,!0)):g=="keys"?o(m,!1):g=="values"?o(p[m],!1):o([m,p[m]],!1)},"values");var h=t.Arguments=t.Array;if(e("keys"),e("values"),e("entries"),!a&&l&&h.name!=="values")try{r(h,"name",{value:"values"})}catch{}return fd}var Vx;function pA(){if(Vx)return Sx;Vx=1;var n=Jn(),e=tA(),t=nA(),i=dA(),r=Uu(),s=Sr(),o=s("iterator"),a=s("toStringTag"),l=i.values,c=function(f,h){if(f){if(f[o]!==l)try{r(f,o,l)}catch{f[o]=l}if(f[a]||r(f,a,h),e[h]){for(var d in i)if(f[d]!==i[d])try{r(f,d,i[d])}catch{f[d]=i[d]}}}};for(var u in e)c(n[u]&&n[u].prototype,u);return c(t,"DOMTokenList"),Sx}const fm="125",mA={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},gA={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},zy=0,sp=1,Gy=2,xA=3,vA=0,hm=1,ky=2,mo=3,Xo=0,Rt=1,vc=2,dm=1,bA=2,Fi=0,bo=1,op=2,ap=3,cp=4,Hy=5,Wr=100,Vy=101,Wy=102,lp=103,up=104,qy=200,$y=201,jy=202,Xy=203,pm=204,mm=205,Yy=206,Zy=207,Jy=208,Ky=209,Qy=210,e_=0,t_=1,n_=2,$l=3,i_=4,r_=5,s_=6,o_=7,bc=0,a_=1,c_=2,es=0,l_=1,u_=2,f_=3,h_=4,d_=5,zu=300,yc=301,_c=302,jl=303,Xl=304,Yo=306,Mc=307,Ia=1e3,Zt=1001,Da=1002,Dt=1003,Yl=1004,yA=1004,Zl=1005,_A=1005,Nt=1006,gm=1007,MA=1007,Zo=1008,wA=1008,Jo=1009,p_=1010,m_=1011,Oa=1012,g_=1013,Ea=1014,Pi=1015,Fa=1016,x_=1017,v_=1018,b_=1019,yo=1020,y_=1021,ur=1022,yn=1023,__=1024,M_=1025,w_=yn,ts=1026,Lo=1027,S_=1028,E_=1029,T_=1030,A_=1031,L_=1032,C_=1033,fp=33776,hp=33777,dp=33778,pp=33779,mp=35840,gp=35841,xp=35842,vp=35843,R_=36196,bp=37492,yp=37496,P_=37808,I_=37809,D_=37810,O_=37811,F_=37812,N_=37813,B_=37814,U_=37815,z_=37816,G_=37817,k_=37818,H_=37819,V_=37820,W_=37821,q_=36492,$_=37840,j_=37841,X_=37842,Y_=37843,Z_=37844,J_=37845,K_=37846,Q_=37847,e1=37848,t1=37849,n1=37850,i1=37851,r1=37852,s1=37853,o1=2200,a1=2201,c1=2202,Na=2300,Ta=2301,kl=2302,Xr=2400,Yr=2401,Ba=2402,Gu=2500,xm=2501,l1=0,SA=1,EA=2,Qt=3e3,wc=3001,ku=3007,Hu=3002,u1=3003,vm=3004,bm=3005,ym=3006,f1=3200,h1=3201,Ts=0,d1=1,TA=0,Hl=7680,AA=7681,LA=7682,CA=7683,RA=34055,PA=34056,IA=5386,DA=512,OA=513,FA=514,NA=515,BA=516,UA=517,zA=518,p1=519,Sc=35044,cs=35048,GA=35040,kA=35045,HA=35049,VA=35041,WA=35046,qA=35050,$A=35042,jA="100",_p="300 es";function ki(){}Object.assign(ki.prototype,{addEventListener:function(n,e){this._listeners===void 0&&(this._listeners={});const t=this._listeners;t[n]===void 0&&(t[n]=[]),t[n].indexOf(e)===-1&&t[n].push(e)},hasEventListener:function(n,e){if(this._listeners===void 0)return!1;const t=this._listeners;return t[n]!==void 0&&t[n].indexOf(e)!==-1},removeEventListener:function(n,e){if(this._listeners===void 0)return;const i=this._listeners[n];if(i!==void 0){const r=i.indexOf(e);r!==-1&&i.splice(r,1)}},dispatchEvent:function(n){if(this._listeners===void 0)return;const t=this._listeners[n.type];if(t!==void 0){n.target=this;const i=t.slice(0);for(let r=0,s=i.length;r<s;r++)i[r].call(this,n)}}});const Bt=[];for(let n=0;n<256;n++)Bt[n]=(n<16?"0":"")+n.toString(16);let Zc=1234567;const Ke={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){const n=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(Bt[n&255]+Bt[n>>8&255]+Bt[n>>16&255]+Bt[n>>24&255]+"-"+Bt[e&255]+Bt[e>>8&255]+"-"+Bt[e>>16&15|64]+Bt[e>>24&255]+"-"+Bt[t&63|128]+Bt[t>>8&255]+"-"+Bt[t>>16&255]+Bt[t>>24&255]+Bt[i&255]+Bt[i>>8&255]+Bt[i>>16&255]+Bt[i>>24&255]).toUpperCase()},clamp:function(n,e,t){return Math.max(e,Math.min(t,n))},euclideanModulo:function(n,e){return(n%e+e)%e},mapLinear:function(n,e,t,i,r){return i+(n-e)*(r-i)/(t-e)},lerp:function(n,e,t){return(1-t)*n+t*e},damp:function(n,e,t,i){return Ke.lerp(n,e,1-Math.exp(-t*i))},pingpong:function(n,e=1){return e-Math.abs(Ke.euclideanModulo(n,e*2)-e)},smoothstep:function(n,e,t){return n<=e?0:n>=t?1:(n=(n-e)/(t-e),n*n*(3-2*n))},smootherstep:function(n,e,t){return n<=e?0:n>=t?1:(n=(n-e)/(t-e),n*n*n*(n*(n*6-15)+10))},randInt:function(n,e){return n+Math.floor(Math.random()*(e-n+1))},randFloat:function(n,e){return n+Math.random()*(e-n)},randFloatSpread:function(n){return n*(.5-Math.random())},seededRandom:function(n){return n!==void 0&&(Zc=n%2147483647),Zc=Zc*16807%2147483647,(Zc-1)/2147483646},degToRad:function(n){return n*Ke.DEG2RAD},radToDeg:function(n){return n*Ke.RAD2DEG},isPowerOfTwo:function(n){return(n&n-1)===0&&n!==0},ceilPowerOfTwo:function(n){return Math.pow(2,Math.ceil(Math.log(n)/Math.LN2))},floorPowerOfTwo:function(n){return Math.pow(2,Math.floor(Math.log(n)/Math.LN2))},setQuaternionFromProperEuler:function(n,e,t,i,r){const s=Math.cos,o=Math.sin,a=s(t/2),l=o(t/2),c=s((e+i)/2),u=o((e+i)/2),f=s((e-i)/2),h=o((e-i)/2),d=s((i-e)/2),p=o((i-e)/2);switch(r){case"XYX":n.set(a*u,l*f,l*h,a*c);break;case"YZY":n.set(l*h,a*u,l*f,a*c);break;case"ZXZ":n.set(l*f,l*h,a*u,a*c);break;case"XZX":n.set(a*u,l*p,l*d,a*c);break;case"YXY":n.set(l*d,a*u,l*p,a*c);break;case"ZYZ":n.set(l*p,l*d,a*u,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}};class Ee{constructor(e=0,t=0){Object.defineProperty(this,"isVector2",{value:!0}),this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,i=this.y,r=e.elements;return this.x=r[0]*t+r[3]*i+r[6],this.y=r[1]*t+r[4]*i+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,i){return i!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const i=Math.cos(t),r=Math.sin(t),s=this.x-e.x,o=this.y-e.y;return this.x=s*i-o*r+e.x,this.y=s*r+o*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}class vn{constructor(){Object.defineProperty(this,"isMatrix3",{value:!0}),this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,i,r,s,o,a,l,c){const u=this.elements;return u[0]=e,u[1]=r,u[2]=a,u[3]=t,u[4]=s,u[5]=l,u[6]=i,u[7]=o,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}clone(){return new this.constructor().fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,r=t.elements,s=this.elements,o=i[0],a=i[3],l=i[6],c=i[1],u=i[4],f=i[7],h=i[2],d=i[5],p=i[8],g=r[0],m=r[3],v=r[6],x=r[1],M=r[4],b=r[7],w=r[2],y=r[5],_=r[8];return s[0]=o*g+a*x+l*w,s[3]=o*m+a*M+l*y,s[6]=o*v+a*b+l*_,s[1]=c*g+u*x+f*w,s[4]=c*m+u*M+f*y,s[7]=c*v+u*b+f*_,s[2]=h*g+d*x+p*w,s[5]=h*m+d*M+p*y,s[8]=h*v+d*b+p*_,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8];return t*o*u-t*a*c-i*s*u+i*a*l+r*s*c-r*o*l}invert(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],f=u*o-a*c,h=a*l-u*s,d=c*s-o*l,p=t*f+i*h+r*d;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const g=1/p;return e[0]=f*g,e[1]=(r*c-u*i)*g,e[2]=(a*i-r*o)*g,e[3]=h*g,e[4]=(u*t-r*l)*g,e[5]=(r*s-a*t)*g,e[6]=d*g,e[7]=(i*l-c*t)*g,e[8]=(o*t-i*s)*g,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).copy(this).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,r,s,o,a){const l=Math.cos(s),c=Math.sin(s);return this.set(i*l,i*c,-i*(l*o+c*a)+o+e,-r*c,r*l,-r*(-c*o+l*a)+a+t,0,0,1),this}scale(e,t){const i=this.elements;return i[0]*=e,i[3]*=e,i[6]*=e,i[1]*=t,i[4]*=t,i[7]*=t,this}rotate(e){const t=Math.cos(e),i=Math.sin(e),r=this.elements,s=r[0],o=r[3],a=r[6],l=r[1],c=r[4],u=r[7];return r[0]=t*s+i*l,r[3]=t*o+i*c,r[6]=t*a+i*u,r[1]=-i*s+t*l,r[4]=-i*o+t*c,r[7]=-i*a+t*u,this}translate(e,t){const i=this.elements;return i[0]+=e*i[2],i[3]+=e*i[5],i[6]+=e*i[8],i[1]+=t*i[2],i[4]+=t*i[5],i[7]+=t*i[8],this}equals(e){const t=this.elements,i=e.elements;for(let r=0;r<9;r++)if(t[r]!==i[r])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}}let qs;const As={getDataURL:function(n){if(/^data:/i.test(n.src)||typeof HTMLCanvasElement>"u")return n.src;let e;if(n instanceof HTMLCanvasElement)e=n;else{qs===void 0&&(qs=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),qs.width=n.width,qs.height=n.height;const t=qs.getContext("2d");n instanceof ImageData?t.putImageData(n,0,0):t.drawImage(n,0,0,n.width,n.height),e=qs}return e.width>2048||e.height>2048?e.toDataURL("image/jpeg",.6):e.toDataURL("image/png")}};let XA=0;function ht(n=ht.DEFAULT_IMAGE,e=ht.DEFAULT_MAPPING,t=Zt,i=Zt,r=Nt,s=Zo,o=yn,a=Jo,l=1,c=Qt){Object.defineProperty(this,"id",{value:XA++}),this.uuid=Ke.generateUUID(),this.name="",this.image=n,this.mipmaps=[],this.mapping=e,this.wrapS=t,this.wrapT=i,this.magFilter=r,this.minFilter=s,this.anisotropy=l,this.format=o,this.internalFormat=null,this.type=a,this.offset=new Ee(0,0),this.repeat=new Ee(1,1),this.center=new Ee(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new vn,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=c,this.version=0,this.onUpdate=null}ht.DEFAULT_IMAGE=void 0;ht.DEFAULT_MAPPING=zu;ht.prototype=Object.assign(Object.create(ki.prototype),{constructor:ht,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return new this.constructor().copy(this)},copy:function(n){return this.name=n.name,this.image=n.image,this.mipmaps=n.mipmaps.slice(0),this.mapping=n.mapping,this.wrapS=n.wrapS,this.wrapT=n.wrapT,this.magFilter=n.magFilter,this.minFilter=n.minFilter,this.anisotropy=n.anisotropy,this.format=n.format,this.internalFormat=n.internalFormat,this.type=n.type,this.offset.copy(n.offset),this.repeat.copy(n.repeat),this.center.copy(n.center),this.rotation=n.rotation,this.matrixAutoUpdate=n.matrixAutoUpdate,this.matrix.copy(n.matrix),this.generateMipmaps=n.generateMipmaps,this.premultiplyAlpha=n.premultiplyAlpha,this.flipY=n.flipY,this.unpackAlignment=n.unpackAlignment,this.encoding=n.encoding,this},toJSON:function(n){const e=n===void 0||typeof n=="string";if(!e&&n.textures[this.uuid]!==void 0)return n.textures[this.uuid];const t={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(this.image!==void 0){const i=this.image;if(i.uuid===void 0&&(i.uuid=Ke.generateUUID()),!e&&n.images[i.uuid]===void 0){let r;if(Array.isArray(i)){r=[];for(let s=0,o=i.length;s<o;s++)i[s].isDataTexture?r.push(hd(i[s].image)):r.push(hd(i[s]))}else r=hd(i);n.images[i.uuid]={uuid:i.uuid,url:r}}t.image=i.uuid}return e||(n.textures[this.uuid]=t),t},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(n){if(this.mapping!==zu)return n;if(n.applyMatrix3(this.matrix),n.x<0||n.x>1)switch(this.wrapS){case Ia:n.x=n.x-Math.floor(n.x);break;case Zt:n.x=n.x<0?0:1;break;case Da:Math.abs(Math.floor(n.x)%2)===1?n.x=Math.ceil(n.x)-n.x:n.x=n.x-Math.floor(n.x);break}if(n.y<0||n.y>1)switch(this.wrapT){case Ia:n.y=n.y-Math.floor(n.y);break;case Zt:n.y=n.y<0?0:1;break;case Da:Math.abs(Math.floor(n.y)%2)===1?n.y=Math.ceil(n.y)-n.y:n.y=n.y-Math.floor(n.y);break}return this.flipY&&(n.y=1-n.y),n}});Object.defineProperty(ht.prototype,"needsUpdate",{set:function(n){n===!0&&this.version++}});function hd(n){return typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&n instanceof ImageBitmap?As.getDataURL(n):n.data?{data:Array.prototype.slice.call(n.data),width:n.width,height:n.height,type:n.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}class ft{constructor(e=0,t=0,i=0,r=1){Object.defineProperty(this,"isVector4",{value:!0}),this.x=e,this.y=t,this.z=i,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,r){return this.x=e,this.y=t,this.z=i,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,i=this.y,r=this.z,s=this.w,o=e.elements;return this.x=o[0]*t+o[4]*i+o[8]*r+o[12]*s,this.y=o[1]*t+o[5]*i+o[9]*r+o[13]*s,this.z=o[2]*t+o[6]*i+o[10]*r+o[14]*s,this.w=o[3]*t+o[7]*i+o[11]*r+o[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,r,s;const l=e.elements,c=l[0],u=l[4],f=l[8],h=l[1],d=l[5],p=l[9],g=l[2],m=l[6],v=l[10];if(Math.abs(u-h)<.01&&Math.abs(f-g)<.01&&Math.abs(p-m)<.01){if(Math.abs(u+h)<.1&&Math.abs(f+g)<.1&&Math.abs(p+m)<.1&&Math.abs(c+d+v-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const M=(c+1)/2,b=(d+1)/2,w=(v+1)/2,y=(u+h)/4,_=(f+g)/4,S=(p+m)/4;return M>b&&M>w?M<.01?(i=0,r=.707106781,s=.707106781):(i=Math.sqrt(M),r=y/i,s=_/i):b>w?b<.01?(i=.707106781,r=0,s=.707106781):(r=Math.sqrt(b),i=y/r,s=S/r):w<.01?(i=.707106781,r=.707106781,s=0):(s=Math.sqrt(w),i=_/s,r=S/s),this.set(i,r,s,t),this}let x=Math.sqrt((m-p)*(m-p)+(f-g)*(f-g)+(h-u)*(h-u));return Math.abs(x)<.001&&(x=1),this.x=(m-p)/x,this.y=(f-g)/x,this.z=(h-u)/x,this.w=Math.acos((c+d+v-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,i){return i!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}class fr extends ki{constructor(e,t,i){super(),Object.defineProperty(this,"isWebGLRenderTarget",{value:!0}),this.width=e,this.height=t,this.scissor=new ft(0,0,e,t),this.scissorTest=!1,this.viewport=new ft(0,0,e,t),i=i||{},this.texture=new ht(void 0,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.texture.image={},this.texture.image.width=e,this.texture.image.height=t,this.texture.generateMipmaps=i.generateMipmaps!==void 0?i.generateMipmaps:!1,this.texture.minFilter=i.minFilter!==void 0?i.minFilter:Nt,this.depthBuffer=i.depthBuffer!==void 0?i.depthBuffer:!0,this.stencilBuffer=i.stencilBuffer!==void 0?i.stencilBuffer:!1,this.depthTexture=i.depthTexture!==void 0?i.depthTexture:null}setSize(e,t){(this.width!==e||this.height!==t)&&(this.width=e,this.height=t,this.texture.image.width=e,this.texture.image.height=t,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}class YA extends fr{constructor(e,t,i){super(e,t,i),Object.defineProperty(this,"isWebGLMultisampleRenderTarget",{value:!0}),this.samples=4}copy(e){return super.copy.call(this,e),this.samples=e.samples,this}}class Wt{constructor(e=0,t=0,i=0,r=1){Object.defineProperty(this,"isQuaternion",{value:!0}),this._x=e,this._y=t,this._z=i,this._w=r}static slerp(e,t,i,r){return i.copy(e).slerp(t,r)}static slerpFlat(e,t,i,r,s,o,a){let l=i[r+0],c=i[r+1],u=i[r+2],f=i[r+3];const h=s[o+0],d=s[o+1],p=s[o+2],g=s[o+3];if(f!==g||l!==h||c!==d||u!==p){let m=1-a;const v=l*h+c*d+u*p+f*g,x=v>=0?1:-1,M=1-v*v;if(M>Number.EPSILON){const w=Math.sqrt(M),y=Math.atan2(w,v*x);m=Math.sin(m*y)/w,a=Math.sin(a*y)/w}const b=a*x;if(l=l*m+h*b,c=c*m+d*b,u=u*m+p*b,f=f*m+g*b,m===1-a){const w=1/Math.sqrt(l*l+c*c+u*u+f*f);l*=w,c*=w,u*=w,f*=w}}e[t]=l,e[t+1]=c,e[t+2]=u,e[t+3]=f}static multiplyQuaternionsFlat(e,t,i,r,s,o){const a=i[r],l=i[r+1],c=i[r+2],u=i[r+3],f=s[o],h=s[o+1],d=s[o+2],p=s[o+3];return e[t]=a*p+u*f+l*d-c*h,e[t+1]=l*p+u*h+c*f-a*d,e[t+2]=c*p+u*d+a*h-l*f,e[t+3]=u*p-a*f-l*h-c*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,r){return this._x=e,this._y=t,this._z=i,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const i=e._x,r=e._y,s=e._z,o=e._order,a=Math.cos,l=Math.sin,c=a(i/2),u=a(r/2),f=a(s/2),h=l(i/2),d=l(r/2),p=l(s/2);switch(o){case"XYZ":this._x=h*u*f+c*d*p,this._y=c*d*f-h*u*p,this._z=c*u*p+h*d*f,this._w=c*u*f-h*d*p;break;case"YXZ":this._x=h*u*f+c*d*p,this._y=c*d*f-h*u*p,this._z=c*u*p-h*d*f,this._w=c*u*f+h*d*p;break;case"ZXY":this._x=h*u*f-c*d*p,this._y=c*d*f+h*u*p,this._z=c*u*p+h*d*f,this._w=c*u*f-h*d*p;break;case"ZYX":this._x=h*u*f-c*d*p,this._y=c*d*f+h*u*p,this._z=c*u*p-h*d*f,this._w=c*u*f+h*d*p;break;case"YZX":this._x=h*u*f+c*d*p,this._y=c*d*f+h*u*p,this._z=c*u*p-h*d*f,this._w=c*u*f-h*d*p;break;case"XZY":this._x=h*u*f-c*d*p,this._y=c*d*f-h*u*p,this._z=c*u*p+h*d*f,this._w=c*u*f+h*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const i=t/2,r=Math.sin(i);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,i=t[0],r=t[4],s=t[8],o=t[1],a=t[5],l=t[9],c=t[2],u=t[6],f=t[10],h=i+a+f;if(h>0){const d=.5/Math.sqrt(h+1);this._w=.25/d,this._x=(u-l)*d,this._y=(s-c)*d,this._z=(o-r)*d}else if(i>a&&i>f){const d=2*Math.sqrt(1+i-a-f);this._w=(u-l)/d,this._x=.25*d,this._y=(r+o)/d,this._z=(s+c)/d}else if(a>f){const d=2*Math.sqrt(1+a-i-f);this._w=(s-c)/d,this._x=(r+o)/d,this._y=.25*d,this._z=(l+u)/d}else{const d=2*Math.sqrt(1+f-i-a);this._w=(o-r)/d,this._x=(s+c)/d,this._y=(l+u)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let r=e.dot(t)+1;return r<1e-6?(r=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=r):(this._x=0,this._y=-e.z,this._z=e.y,this._w=r)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=r),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Ke.clamp(this.dot(e),-1,1)))}rotateTowards(e,t){const i=this.angleTo(e);if(i===0)return this;const r=Math.min(1,t/i);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return t!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const i=e._x,r=e._y,s=e._z,o=e._w,a=t._x,l=t._y,c=t._z,u=t._w;return this._x=i*u+o*a+r*c-s*l,this._y=r*u+o*l+s*a-i*c,this._z=s*u+o*c+i*l-r*a,this._w=o*u-i*a-r*l-s*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const i=this._x,r=this._y,s=this._z,o=this._w;let a=o*e._w+i*e._x+r*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=i,this._y=r,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const d=1-t;return this._w=d*o+t*this._w,this._x=d*i+t*this._x,this._y=d*r+t*this._y,this._z=d*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),u=Math.atan2(c,a),f=Math.sin((1-t)*u)/c,h=Math.sin(t*u)/c;return this._w=o*f+this._w*h,this._x=i*f+this._x*h,this._y=r*f+this._y*h,this._z=s*f+this._z*h,this._onChangeCallback(),this}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}class F{constructor(e=0,t=0,i=0){Object.defineProperty(this,"isVector3",{value:!0}),this.x=e,this.y=t,this.z=i}set(e,t,i){return i===void 0&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(Wx.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Wx.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[3]*i+s[6]*r,this.y=s[1]*t+s[4]*i+s[7]*r,this.z=s[2]*t+s[5]*i+s[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,i=this.y,r=this.z,s=e.elements,o=1/(s[3]*t+s[7]*i+s[11]*r+s[15]);return this.x=(s[0]*t+s[4]*i+s[8]*r+s[12])*o,this.y=(s[1]*t+s[5]*i+s[9]*r+s[13])*o,this.z=(s[2]*t+s[6]*i+s[10]*r+s[14])*o,this}applyQuaternion(e){const t=this.x,i=this.y,r=this.z,s=e.x,o=e.y,a=e.z,l=e.w,c=l*t+o*r-a*i,u=l*i+a*t-s*r,f=l*r+s*i-o*t,h=-s*t-o*i-a*r;return this.x=c*l+h*-s+u*-a-f*-o,this.y=u*l+h*-o+f*-s-c*-a,this.z=f*l+h*-a+c*-o-u*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[4]*i+s[8]*r,this.y=s[1]*t+s[5]*i+s[9]*r,this.z=s[2]*t+s[6]*i+s[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e,t){return t!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){const i=e.x,r=e.y,s=e.z,o=t.x,a=t.y,l=t.z;return this.x=r*l-s*a,this.y=s*o-i*l,this.z=i*a-r*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return dd.copy(this).projectOnVector(e),this.sub(dd)}reflect(e){return this.sub(dd.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(Ke.clamp(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y,r=this.z-e.z;return t*t+i*i+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){const r=Math.sin(t)*e;return this.x=r*Math.sin(i),this.y=Math.cos(t)*e,this.z=r*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,i){return i!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}const dd=new F,Wx=new Wt;class Hi{constructor(e,t){Object.defineProperty(this,"isBox3",{value:!0}),this.min=e!==void 0?e:new F(1/0,1/0,1/0),this.max=t!==void 0?t:new F(-1/0,-1/0,-1/0)}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,i=1/0,r=1/0,s=-1/0,o=-1/0,a=-1/0;for(let l=0,c=e.length;l<c;l+=3){const u=e[l],f=e[l+1],h=e[l+2];u<t&&(t=u),f<i&&(i=f),h<r&&(r=h),u>s&&(s=u),f>o&&(o=f),h>a&&(a=h)}return this.min.set(t,i,r),this.max.set(s,o,a),this}setFromBufferAttribute(e){let t=1/0,i=1/0,r=1/0,s=-1/0,o=-1/0,a=-1/0;for(let l=0,c=e.count;l<c;l++){const u=e.getX(l),f=e.getY(l),h=e.getZ(l);u<t&&(t=u),f<i&&(i=f),h<r&&(r=h),u>s&&(s=u),f>o&&(o=f),h>a&&(a=h)}return this.min.set(t,i,r),this.max.set(s,o,a),this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=ca.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e){return this.makeEmpty(),this.expandByObject(e)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return e===void 0&&(console.warn("THREE.Box3: .getCenter() target is now required"),e=new F),this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return e===void 0&&(console.warn("THREE.Box3: .getSize() target is now required"),e=new F),this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e){e.updateWorldMatrix(!1,!1);const t=e.geometry;t!==void 0&&(t.boundingBox===null&&t.computeBoundingBox(),md.copy(t.boundingBox),md.applyMatrix4(e.matrixWorld),this.union(md));const i=e.children;for(let r=0,s=i.length;r<s;r++)this.expandByObject(i[r]);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t===void 0&&(console.warn("THREE.Box3: .getParameter() target is now required"),t=new F),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,ca),ca.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(la),Jc.subVectors(this.max,la),$s.subVectors(e.a,la),js.subVectors(e.b,la),Xs.subVectors(e.c,la),Ji.subVectors(js,$s),Ki.subVectors(Xs,js),Pr.subVectors($s,Xs);let t=[0,-Ji.z,Ji.y,0,-Ki.z,Ki.y,0,-Pr.z,Pr.y,Ji.z,0,-Ji.x,Ki.z,0,-Ki.x,Pr.z,0,-Pr.x,-Ji.y,Ji.x,0,-Ki.y,Ki.x,0,-Pr.y,Pr.x,0];return!pd(t,$s,js,Xs,Jc)||(t=[1,0,0,0,1,0,0,0,1],!pd(t,$s,js,Xs,Jc))?!1:(Kc.crossVectors(Ji,Ki),t=[Kc.x,Kc.y,Kc.z],pd(t,$s,js,Xs,Jc))}clampPoint(e,t){return t===void 0&&(console.warn("THREE.Box3: .clampPoint() target is now required"),t=new F),t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return ca.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return e===void 0&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(e.center),e.radius=this.getSize(ca).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Si[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Si[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Si[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Si[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Si[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Si[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Si[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Si[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Si),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}function pd(n,e,t,i,r){for(let s=0,o=n.length-3;s<=o;s+=3){Ir.fromArray(n,s);const a=r.x*Math.abs(Ir.x)+r.y*Math.abs(Ir.y)+r.z*Math.abs(Ir.z),l=e.dot(Ir),c=t.dot(Ir),u=i.dot(Ir);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>a)return!1}return!0}const Si=[new F,new F,new F,new F,new F,new F,new F,new F],ca=new F,md=new Hi,$s=new F,js=new F,Xs=new F,Ji=new F,Ki=new F,Pr=new F,la=new F,Jc=new F,Kc=new F,Ir=new F,ZA=new Hi;class Tr{constructor(e,t){this.center=e!==void 0?e:new F,this.radius=t!==void 0?t:-1}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const i=this.center;t!==void 0?i.copy(t):ZA.setFromPoints(e).getCenter(i);let r=0;for(let s=0,o=e.length;s<o;s++)r=Math.max(r,i.distanceToSquared(e[s]));return this.radius=Math.sqrt(r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const i=this.center.distanceToSquared(e);return t===void 0&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),t=new F),t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return e===void 0&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),e=new Hi),this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}}const Ei=new F,gd=new F,Qc=new F,Qi=new F,xd=new F,el=new F,vd=new F;class Ko{constructor(e,t){this.origin=e!==void 0?e:new F,this.direction=t!==void 0?t:new F(0,0,-1)}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}clone(){return new this.constructor().copy(this)}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t===void 0&&(console.warn("THREE.Ray: .at() target is now required"),t=new F),t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Ei)),this}closestPointToPoint(e,t){t===void 0&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),t=new F),t.subVectors(e,this.origin);const i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(i).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Ei.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Ei.copy(this.direction).multiplyScalar(t).add(this.origin),Ei.distanceToSquared(e))}distanceSqToSegment(e,t,i,r){gd.copy(e).add(t).multiplyScalar(.5),Qc.copy(t).sub(e).normalize(),Qi.copy(this.origin).sub(gd);const s=e.distanceTo(t)*.5,o=-this.direction.dot(Qc),a=Qi.dot(this.direction),l=-Qi.dot(Qc),c=Qi.lengthSq(),u=Math.abs(1-o*o);let f,h,d,p;if(u>0)if(f=o*l-a,h=o*a-l,p=s*u,f>=0)if(h>=-p)if(h<=p){const g=1/u;f*=g,h*=g,d=f*(f+o*h+2*a)+h*(o*f+h+2*l)+c}else h=s,f=Math.max(0,-(o*h+a)),d=-f*f+h*(h+2*l)+c;else h=-s,f=Math.max(0,-(o*h+a)),d=-f*f+h*(h+2*l)+c;else h<=-p?(f=Math.max(0,-(-o*s+a)),h=f>0?-s:Math.min(Math.max(-s,-l),s),d=-f*f+h*(h+2*l)+c):h<=p?(f=0,h=Math.min(Math.max(-s,-l),s),d=h*(h+2*l)+c):(f=Math.max(0,-(o*s+a)),h=f>0?s:Math.min(Math.max(-s,-l),s),d=-f*f+h*(h+2*l)+c);else h=o>0?-s:s,f=Math.max(0,-(o*h+a)),d=-f*f+h*(h+2*l)+c;return i&&i.copy(this.direction).multiplyScalar(f).add(this.origin),r&&r.copy(Qc).multiplyScalar(h).add(gd),d}intersectSphere(e,t){Ei.subVectors(e.center,this.origin);const i=Ei.dot(this.direction),r=Ei.dot(Ei)-i*i,s=e.radius*e.radius;if(r>s)return null;const o=Math.sqrt(s-r),a=i-o,l=i+o;return a<0&&l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){const i=this.distanceToPlane(e);return i===null?null:this.at(i,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let i,r,s,o,a,l;const c=1/this.direction.x,u=1/this.direction.y,f=1/this.direction.z,h=this.origin;return c>=0?(i=(e.min.x-h.x)*c,r=(e.max.x-h.x)*c):(i=(e.max.x-h.x)*c,r=(e.min.x-h.x)*c),u>=0?(s=(e.min.y-h.y)*u,o=(e.max.y-h.y)*u):(s=(e.max.y-h.y)*u,o=(e.min.y-h.y)*u),i>o||s>r||((s>i||i!==i)&&(i=s),(o<r||r!==r)&&(r=o),f>=0?(a=(e.min.z-h.z)*f,l=(e.max.z-h.z)*f):(a=(e.max.z-h.z)*f,l=(e.min.z-h.z)*f),i>l||a>r)||((a>i||i!==i)&&(i=a),(l<r||r!==r)&&(r=l),r<0)?null:this.at(i>=0?i:r,t)}intersectsBox(e){return this.intersectBox(e,Ei)!==null}intersectTriangle(e,t,i,r,s){xd.subVectors(t,e),el.subVectors(i,e),vd.crossVectors(xd,el);let o=this.direction.dot(vd),a;if(o>0){if(r)return null;a=1}else if(o<0)a=-1,o=-o;else return null;Qi.subVectors(this.origin,e);const l=a*this.direction.dot(el.crossVectors(Qi,el));if(l<0)return null;const c=a*this.direction.dot(xd.cross(Qi));if(c<0||l+c>o)return null;const u=-a*Qi.dot(vd);return u<0?null:this.at(u/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}}class tt{constructor(){Object.defineProperty(this,"isMatrix4",{value:!0}),this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,i,r,s,o,a,l,c,u,f,h,d,p,g,m){const v=this.elements;return v[0]=e,v[4]=t,v[8]=i,v[12]=r,v[1]=s,v[5]=o,v[9]=a,v[13]=l,v[2]=c,v[6]=u,v[10]=f,v[14]=h,v[3]=d,v[7]=p,v[11]=g,v[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new tt().fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){const t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,i=e.elements,r=1/Ys.setFromMatrixColumn(e,0).length(),s=1/Ys.setFromMatrixColumn(e,1).length(),o=1/Ys.setFromMatrixColumn(e,2).length();return t[0]=i[0]*r,t[1]=i[1]*r,t[2]=i[2]*r,t[3]=0,t[4]=i[4]*s,t[5]=i[5]*s,t[6]=i[6]*s,t[7]=0,t[8]=i[8]*o,t[9]=i[9]*o,t[10]=i[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,i=e.x,r=e.y,s=e.z,o=Math.cos(i),a=Math.sin(i),l=Math.cos(r),c=Math.sin(r),u=Math.cos(s),f=Math.sin(s);if(e.order==="XYZ"){const h=o*u,d=o*f,p=a*u,g=a*f;t[0]=l*u,t[4]=-l*f,t[8]=c,t[1]=d+p*c,t[5]=h-g*c,t[9]=-a*l,t[2]=g-h*c,t[6]=p+d*c,t[10]=o*l}else if(e.order==="YXZ"){const h=l*u,d=l*f,p=c*u,g=c*f;t[0]=h+g*a,t[4]=p*a-d,t[8]=o*c,t[1]=o*f,t[5]=o*u,t[9]=-a,t[2]=d*a-p,t[6]=g+h*a,t[10]=o*l}else if(e.order==="ZXY"){const h=l*u,d=l*f,p=c*u,g=c*f;t[0]=h-g*a,t[4]=-o*f,t[8]=p+d*a,t[1]=d+p*a,t[5]=o*u,t[9]=g-h*a,t[2]=-o*c,t[6]=a,t[10]=o*l}else if(e.order==="ZYX"){const h=o*u,d=o*f,p=a*u,g=a*f;t[0]=l*u,t[4]=p*c-d,t[8]=h*c+g,t[1]=l*f,t[5]=g*c+h,t[9]=d*c-p,t[2]=-c,t[6]=a*l,t[10]=o*l}else if(e.order==="YZX"){const h=o*l,d=o*c,p=a*l,g=a*c;t[0]=l*u,t[4]=g-h*f,t[8]=p*f+d,t[1]=f,t[5]=o*u,t[9]=-a*u,t[2]=-c*u,t[6]=d*f+p,t[10]=h-g*f}else if(e.order==="XZY"){const h=o*l,d=o*c,p=a*l,g=a*c;t[0]=l*u,t[4]=-f,t[8]=c*u,t[1]=h*f+g,t[5]=o*u,t[9]=d*f-p,t[2]=p*f-d,t[6]=a*u,t[10]=g*f+h}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(JA,e,KA)}lookAt(e,t,i){const r=this.elements;return dn.subVectors(e,t),dn.lengthSq()===0&&(dn.z=1),dn.normalize(),er.crossVectors(i,dn),er.lengthSq()===0&&(Math.abs(i.z)===1?dn.x+=1e-4:dn.z+=1e-4,dn.normalize(),er.crossVectors(i,dn)),er.normalize(),tl.crossVectors(dn,er),r[0]=er.x,r[4]=tl.x,r[8]=dn.x,r[1]=er.y,r[5]=tl.y,r[9]=dn.y,r[2]=er.z,r[6]=tl.z,r[10]=dn.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,r=t.elements,s=this.elements,o=i[0],a=i[4],l=i[8],c=i[12],u=i[1],f=i[5],h=i[9],d=i[13],p=i[2],g=i[6],m=i[10],v=i[14],x=i[3],M=i[7],b=i[11],w=i[15],y=r[0],_=r[4],S=r[8],E=r[12],R=r[1],I=r[5],$=r[9],q=r[13],L=r[2],N=r[6],G=r[10],X=r[14],K=r[3],j=r[7],ee=r[11],P=r[15];return s[0]=o*y+a*R+l*L+c*K,s[4]=o*_+a*I+l*N+c*j,s[8]=o*S+a*$+l*G+c*ee,s[12]=o*E+a*q+l*X+c*P,s[1]=u*y+f*R+h*L+d*K,s[5]=u*_+f*I+h*N+d*j,s[9]=u*S+f*$+h*G+d*ee,s[13]=u*E+f*q+h*X+d*P,s[2]=p*y+g*R+m*L+v*K,s[6]=p*_+g*I+m*N+v*j,s[10]=p*S+g*$+m*G+v*ee,s[14]=p*E+g*q+m*X+v*P,s[3]=x*y+M*R+b*L+w*K,s[7]=x*_+M*I+b*N+w*j,s[11]=x*S+M*$+b*G+w*ee,s[15]=x*E+M*q+b*X+w*P,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[4],r=e[8],s=e[12],o=e[1],a=e[5],l=e[9],c=e[13],u=e[2],f=e[6],h=e[10],d=e[14],p=e[3],g=e[7],m=e[11],v=e[15];return p*(+s*l*f-r*c*f-s*a*h+i*c*h+r*a*d-i*l*d)+g*(+t*l*d-t*c*h+s*o*h-r*o*d+r*c*u-s*l*u)+m*(+t*c*f-t*a*d-s*o*f+i*o*d+s*a*u-i*c*u)+v*(-r*a*u-t*l*f+t*a*h+r*o*f-i*o*h+i*l*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=i),this}invert(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],f=e[9],h=e[10],d=e[11],p=e[12],g=e[13],m=e[14],v=e[15],x=f*m*c-g*h*c+g*l*d-a*m*d-f*l*v+a*h*v,M=p*h*c-u*m*c-p*l*d+o*m*d+u*l*v-o*h*v,b=u*g*c-p*f*c+p*a*d-o*g*d-u*a*v+o*f*v,w=p*f*l-u*g*l-p*a*h+o*g*h+u*a*m-o*f*m,y=t*x+i*M+r*b+s*w;if(y===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const _=1/y;return e[0]=x*_,e[1]=(g*h*s-f*m*s-g*r*d+i*m*d+f*r*v-i*h*v)*_,e[2]=(a*m*s-g*l*s+g*r*c-i*m*c-a*r*v+i*l*v)*_,e[3]=(f*l*s-a*h*s-f*r*c+i*h*c+a*r*d-i*l*d)*_,e[4]=M*_,e[5]=(u*m*s-p*h*s+p*r*d-t*m*d-u*r*v+t*h*v)*_,e[6]=(p*l*s-o*m*s-p*r*c+t*m*c+o*r*v-t*l*v)*_,e[7]=(o*h*s-u*l*s+u*r*c-t*h*c-o*r*d+t*l*d)*_,e[8]=b*_,e[9]=(p*f*s-u*g*s-p*i*d+t*g*d+u*i*v-t*f*v)*_,e[10]=(o*g*s-p*a*s+p*i*c-t*g*c-o*i*v+t*a*v)*_,e[11]=(u*a*s-o*f*s-u*i*c+t*f*c+o*i*d-t*a*d)*_,e[12]=w*_,e[13]=(u*g*r-p*f*r+p*i*h-t*g*h-u*i*m+t*f*m)*_,e[14]=(p*a*r-o*g*r-p*i*l+t*g*l+o*i*m-t*a*m)*_,e[15]=(o*f*r-u*a*r+u*i*l-t*f*l-o*i*h+t*a*h)*_,this}scale(e){const t=this.elements,i=e.x,r=e.y,s=e.z;return t[0]*=i,t[4]*=r,t[8]*=s,t[1]*=i,t[5]*=r,t[9]*=s,t[2]*=i,t[6]*=r,t[10]*=s,t[3]*=i,t[7]*=r,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,r))}makeTranslation(e,t,i){return this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const i=Math.cos(t),r=Math.sin(t),s=1-i,o=e.x,a=e.y,l=e.z,c=s*o,u=s*a;return this.set(c*o+i,c*a-r*l,c*l+r*a,0,c*a+r*l,u*a+i,u*l-r*o,0,c*l-r*a,u*l+r*o,s*l*l+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i){return this.set(1,t,i,0,e,1,i,0,e,t,1,0,0,0,0,1),this}compose(e,t,i){const r=this.elements,s=t._x,o=t._y,a=t._z,l=t._w,c=s+s,u=o+o,f=a+a,h=s*c,d=s*u,p=s*f,g=o*u,m=o*f,v=a*f,x=l*c,M=l*u,b=l*f,w=i.x,y=i.y,_=i.z;return r[0]=(1-(g+v))*w,r[1]=(d+b)*w,r[2]=(p-M)*w,r[3]=0,r[4]=(d-b)*y,r[5]=(1-(h+v))*y,r[6]=(m+x)*y,r[7]=0,r[8]=(p+M)*_,r[9]=(m-x)*_,r[10]=(1-(h+g))*_,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,i){const r=this.elements;let s=Ys.set(r[0],r[1],r[2]).length();const o=Ys.set(r[4],r[5],r[6]).length(),a=Ys.set(r[8],r[9],r[10]).length();this.determinant()<0&&(s=-s),e.x=r[12],e.y=r[13],e.z=r[14],Un.copy(this);const c=1/s,u=1/o,f=1/a;return Un.elements[0]*=c,Un.elements[1]*=c,Un.elements[2]*=c,Un.elements[4]*=u,Un.elements[5]*=u,Un.elements[6]*=u,Un.elements[8]*=f,Un.elements[9]*=f,Un.elements[10]*=f,t.setFromRotationMatrix(Un),i.x=s,i.y=o,i.z=a,this}makePerspective(e,t,i,r,s,o){o===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const a=this.elements,l=2*s/(t-e),c=2*s/(i-r),u=(t+e)/(t-e),f=(i+r)/(i-r),h=-(o+s)/(o-s),d=-2*o*s/(o-s);return a[0]=l,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=c,a[9]=f,a[13]=0,a[2]=0,a[6]=0,a[10]=h,a[14]=d,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(e,t,i,r,s,o){const a=this.elements,l=1/(t-e),c=1/(i-r),u=1/(o-s),f=(t+e)*l,h=(i+r)*c,d=(o+s)*u;return a[0]=2*l,a[4]=0,a[8]=0,a[12]=-f,a[1]=0,a[5]=2*c,a[9]=0,a[13]=-h,a[2]=0,a[6]=0,a[10]=-2*u,a[14]=-d,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(e){const t=this.elements,i=e.elements;for(let r=0;r<16;r++)if(t[r]!==i[r])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}const Ys=new F,Un=new tt,JA=new F(0,0,0),KA=new F(1,1,1),er=new F,tl=new F,dn=new F;class Qo{constructor(e=0,t=0,i=0,r=Qo.DefaultOrder){Object.defineProperty(this,"isEuler",{value:!0}),this._x=e,this._y=t,this._z=i,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,r){return this._x=e,this._y=t,this._z=i,this._order=r||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t,i){const r=Ke.clamp,s=e.elements,o=s[0],a=s[4],l=s[8],c=s[1],u=s[5],f=s[9],h=s[2],d=s[6],p=s[10];switch(t=t||this._order,t){case"XYZ":this._y=Math.asin(r(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-f,p),this._z=Math.atan2(-a,o)):(this._x=Math.atan2(d,u),this._z=0);break;case"YXZ":this._x=Math.asin(-r(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(l,p),this._z=Math.atan2(c,u)):(this._y=Math.atan2(-h,o),this._z=0);break;case"ZXY":this._x=Math.asin(r(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-h,p),this._z=Math.atan2(-a,u)):(this._y=0,this._z=Math.atan2(c,o));break;case"ZYX":this._y=Math.asin(-r(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(d,p),this._z=Math.atan2(c,o)):(this._x=0,this._z=Math.atan2(-a,u));break;case"YZX":this._z=Math.asin(r(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-f,u),this._y=Math.atan2(-h,o)):(this._x=0,this._y=Math.atan2(l,p));break;case"XZY":this._z=Math.asin(-r(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(d,u),this._y=Math.atan2(l,o)):(this._x=Math.atan2(-f,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,i!==!1&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return qx.makeRotationFromQuaternion(e),this.setFromRotationMatrix(qx,t,i)}setFromVector3(e,t){return this.set(e.x,e.y,e.z,t||this._order)}reorder(e){return $x.setFromEuler(this),this.setFromQuaternion($x,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}toVector3(e){return e?e.set(this._x,this._y,this._z):new F(this._x,this._y,this._z)}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}Qo.DefaultOrder="XYZ";Qo.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];const qx=new tt,$x=new Wt;class _m{constructor(){this.mask=1}set(e){this.mask=1<<e|0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}}let QA=0;const jx=new F,Zs=new Wt,Ti=new tt,nl=new F,ua=new F,eL=new F,tL=new Wt,Xx=new F(1,0,0),Yx=new F(0,1,0),Zx=new F(0,0,1),nL={type:"added"},Jx={type:"removed"};function qe(){Object.defineProperty(this,"id",{value:QA++}),this.uuid=Ke.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=qe.DefaultUp.clone();const n=new F,e=new Qo,t=new Wt,i=new F(1,1,1);function r(){t.setFromEuler(e,!1)}function s(){e.setFromQuaternion(t,void 0,!1)}e._onChange(r),t._onChange(s),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:n},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:t},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new tt},normalMatrix:{value:new vn}}),this.matrix=new tt,this.matrixWorld=new tt,this.matrixAutoUpdate=qe.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new _m,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}qe.DefaultUp=new F(0,1,0);qe.DefaultMatrixAutoUpdate=!0;qe.prototype=Object.assign(Object.create(ki.prototype),{constructor:qe,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(n){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(n),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(n){return this.quaternion.premultiply(n),this},setRotationFromAxisAngle:function(n,e){this.quaternion.setFromAxisAngle(n,e)},setRotationFromEuler:function(n){this.quaternion.setFromEuler(n,!0)},setRotationFromMatrix:function(n){this.quaternion.setFromRotationMatrix(n)},setRotationFromQuaternion:function(n){this.quaternion.copy(n)},rotateOnAxis:function(n,e){return Zs.setFromAxisAngle(n,e),this.quaternion.multiply(Zs),this},rotateOnWorldAxis:function(n,e){return Zs.setFromAxisAngle(n,e),this.quaternion.premultiply(Zs),this},rotateX:function(n){return this.rotateOnAxis(Xx,n)},rotateY:function(n){return this.rotateOnAxis(Yx,n)},rotateZ:function(n){return this.rotateOnAxis(Zx,n)},translateOnAxis:function(n,e){return jx.copy(n).applyQuaternion(this.quaternion),this.position.add(jx.multiplyScalar(e)),this},translateX:function(n){return this.translateOnAxis(Xx,n)},translateY:function(n){return this.translateOnAxis(Yx,n)},translateZ:function(n){return this.translateOnAxis(Zx,n)},localToWorld:function(n){return n.applyMatrix4(this.matrixWorld)},worldToLocal:function(n){return n.applyMatrix4(Ti.copy(this.matrixWorld).invert())},lookAt:function(n,e,t){n.isVector3?nl.copy(n):nl.set(n,e,t);const i=this.parent;this.updateWorldMatrix(!0,!1),ua.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ti.lookAt(ua,nl,this.up):Ti.lookAt(nl,ua,this.up),this.quaternion.setFromRotationMatrix(Ti),i&&(Ti.extractRotation(i.matrixWorld),Zs.setFromRotationMatrix(Ti),this.quaternion.premultiply(Zs.invert()))},add:function(n){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return n===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",n),this):(n&&n.isObject3D?(n.parent!==null&&n.parent.remove(n),n.parent=this,this.children.push(n),n.dispatchEvent(nL)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",n),this)},remove:function(n){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(n);return e!==-1&&(n.parent=null,this.children.splice(e,1),n.dispatchEvent(Jx)),this},clear:function(){for(let n=0;n<this.children.length;n++){const e=this.children[n];e.parent=null,e.dispatchEvent(Jx)}return this.children.length=0,this},attach:function(n){return this.updateWorldMatrix(!0,!1),Ti.copy(this.matrixWorld).invert(),n.parent!==null&&(n.parent.updateWorldMatrix(!0,!1),Ti.multiply(n.parent.matrixWorld)),n.applyMatrix4(Ti),n.updateWorldMatrix(!1,!1),this.add(n),this},getObjectById:function(n){return this.getObjectByProperty("id",n)},getObjectByName:function(n){return this.getObjectByProperty("name",n)},getObjectByProperty:function(n,e){if(this[n]===e)return this;for(let t=0,i=this.children.length;t<i;t++){const s=this.children[t].getObjectByProperty(n,e);if(s!==void 0)return s}},getWorldPosition:function(n){return n===void 0&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),n=new F),this.updateWorldMatrix(!0,!1),n.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(n){return n===void 0&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),n=new Wt),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ua,n,eL),n},getWorldScale:function(n){return n===void 0&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),n=new F),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ua,tL,n),n},getWorldDirection:function(n){n===void 0&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),n=new F),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return n.set(e[8],e[9],e[10]).normalize()},raycast:function(){},traverse:function(n){n(this);const e=this.children;for(let t=0,i=e.length;t<i;t++)e[t].traverse(n)},traverseVisible:function(n){if(this.visible===!1)return;n(this);const e=this.children;for(let t=0,i=e.length;t<i;t++)e[t].traverseVisible(n)},traverseAncestors:function(n){const e=this.parent;e!==null&&(n(e),e.traverseAncestors(n))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(n){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||n)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,n=!0);const e=this.children;for(let t=0,i=e.length;t<i;t++)e[t].updateMatrixWorld(n)},updateWorldMatrix:function(n,e){const t=this.parent;if(n===!0&&t!==null&&t.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),e===!0){const i=this.children;for(let r=0,s=i.length;r<s;r++)i[r].updateWorldMatrix(!1,!0)}},toJSON:function(n){const e=n===void 0||typeof n=="string",t={};e&&(n={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},t.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON());function r(o,a){return o[a.uuid]===void 0&&(o[a.uuid]=a.toJSON(n)),a.uuid}if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(n.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const a=o.shapes;if(Array.isArray(a))for(let l=0,c=a.length;l<c;l++){const u=a[l];r(n.shapes,u)}else r(n.shapes,a)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(n.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let a=0,l=this.material.length;a<l;a++)o.push(r(n.materials,this.material[a]));i.material=o}else i.material=r(n.materials,this.material);if(this.children.length>0){i.children=[];for(let o=0;o<this.children.length;o++)i.children.push(this.children[o].toJSON(n).object)}if(this.animations.length>0){i.animations=[];for(let o=0;o<this.animations.length;o++){const a=this.animations[o];i.animations.push(r(n.animations,a))}}if(e){const o=s(n.geometries),a=s(n.materials),l=s(n.textures),c=s(n.images),u=s(n.shapes),f=s(n.skeletons),h=s(n.animations);o.length>0&&(t.geometries=o),a.length>0&&(t.materials=a),l.length>0&&(t.textures=l),c.length>0&&(t.images=c),u.length>0&&(t.shapes=u),f.length>0&&(t.skeletons=f),h.length>0&&(t.animations=h)}return t.object=i,t;function s(o){const a=[];for(const l in o){const c=o[l];delete c.metadata,a.push(c)}return a}},clone:function(n){return new this.constructor().copy(this,n)},copy:function(n,e=!0){if(this.name=n.name,this.up.copy(n.up),this.position.copy(n.position),this.rotation.order=n.rotation.order,this.quaternion.copy(n.quaternion),this.scale.copy(n.scale),this.matrix.copy(n.matrix),this.matrixWorld.copy(n.matrixWorld),this.matrixAutoUpdate=n.matrixAutoUpdate,this.matrixWorldNeedsUpdate=n.matrixWorldNeedsUpdate,this.layers.mask=n.layers.mask,this.visible=n.visible,this.castShadow=n.castShadow,this.receiveShadow=n.receiveShadow,this.frustumCulled=n.frustumCulled,this.renderOrder=n.renderOrder,this.userData=JSON.parse(JSON.stringify(n.userData)),e===!0)for(let t=0;t<n.children.length;t++){const i=n.children[t];this.add(i.clone())}return this}});const bd=new F,iL=new F,rL=new vn;class ri{constructor(e,t){Object.defineProperty(this,"isPlane",{value:!0}),this.normal=e!==void 0?e:new F(1,0,0),this.constant=t!==void 0?t:0}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,r){return this.normal.set(e,t,i),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){const r=bd.subVectors(i,t).cross(iL.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}clone(){return new this.constructor().copy(this)}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t===void 0&&(console.warn("THREE.Plane: .projectPoint() target is now required"),t=new F),t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){t===void 0&&(console.warn("THREE.Plane: .intersectLine() target is now required"),t=new F);const i=e.delta(bd),r=this.normal.dot(i);if(r===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):void 0;const s=-(e.start.dot(this.normal)+this.constant)/r;if(!(s<0||s>1))return t.copy(i).multiplyScalar(s).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e===void 0&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),e=new F),e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const i=t||rL.getNormalMatrix(e),r=this.coplanarPoint(bd).applyMatrix4(e),s=this.normal.applyMatrix3(i).normalize();return this.constant=-r.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}}const zn=new F,Ai=new F,yd=new F,Li=new F,Js=new F,Ks=new F,Kx=new F,_d=new F,Md=new F,wd=new F;class Ht{constructor(e,t,i){this.a=e!==void 0?e:new F,this.b=t!==void 0?t:new F,this.c=i!==void 0?i:new F}static getNormal(e,t,i,r){r===void 0&&(console.warn("THREE.Triangle: .getNormal() target is now required"),r=new F),r.subVectors(i,t),zn.subVectors(e,t),r.cross(zn);const s=r.lengthSq();return s>0?r.multiplyScalar(1/Math.sqrt(s)):r.set(0,0,0)}static getBarycoord(e,t,i,r,s){zn.subVectors(r,t),Ai.subVectors(i,t),yd.subVectors(e,t);const o=zn.dot(zn),a=zn.dot(Ai),l=zn.dot(yd),c=Ai.dot(Ai),u=Ai.dot(yd),f=o*c-a*a;if(s===void 0&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),s=new F),f===0)return s.set(-2,-1,-1);const h=1/f,d=(c*l-a*u)*h,p=(o*u-a*l)*h;return s.set(1-d-p,p,d)}static containsPoint(e,t,i,r){return this.getBarycoord(e,t,i,r,Li),Li.x>=0&&Li.y>=0&&Li.x+Li.y<=1}static getUV(e,t,i,r,s,o,a,l){return this.getBarycoord(e,t,i,r,Li),l.set(0,0),l.addScaledVector(s,Li.x),l.addScaledVector(o,Li.y),l.addScaledVector(a,Li.z),l}static isFrontFacing(e,t,i,r){return zn.subVectors(i,t),Ai.subVectors(e,t),zn.cross(Ai).dot(r)<0}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,r){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[r]),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return zn.subVectors(this.c,this.b),Ai.subVectors(this.a,this.b),zn.cross(Ai).length()*.5}getMidpoint(e){return e===void 0&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),e=new F),e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Ht.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e===void 0&&(console.warn("THREE.Triangle: .getPlane() target is now required"),e=new ri),e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Ht.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,i,r,s){return Ht.getUV(e,this.a,this.b,this.c,t,i,r,s)}containsPoint(e){return Ht.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Ht.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){t===void 0&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),t=new F);const i=this.a,r=this.b,s=this.c;let o,a;Js.subVectors(r,i),Ks.subVectors(s,i),_d.subVectors(e,i);const l=Js.dot(_d),c=Ks.dot(_d);if(l<=0&&c<=0)return t.copy(i);Md.subVectors(e,r);const u=Js.dot(Md),f=Ks.dot(Md);if(u>=0&&f<=u)return t.copy(r);const h=l*f-u*c;if(h<=0&&l>=0&&u<=0)return o=l/(l-u),t.copy(i).addScaledVector(Js,o);wd.subVectors(e,s);const d=Js.dot(wd),p=Ks.dot(wd);if(p>=0&&d<=p)return t.copy(s);const g=d*c-l*p;if(g<=0&&c>=0&&p<=0)return a=c/(c-p),t.copy(i).addScaledVector(Ks,a);const m=u*p-d*f;if(m<=0&&f-u>=0&&d-p>=0)return Kx.subVectors(s,r),a=(f-u)/(f-u+(d-p)),t.copy(r).addScaledVector(Kx,a);const v=1/(m+g+h);return o=g*v,a=h*v,t.copy(i).addScaledVector(Js,o).addScaledVector(Ks,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const m1={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Gn={h:0,s:0,l:0},il={h:0,s:0,l:0};function Sd(n,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?n+(e-n)*6*t:t<1/2?e:t<2/3?n+(e-n)*6*(2/3-t):n}function Ed(n){return n<.04045?n*.0773993808:Math.pow(n*.9478672986+.0521327014,2.4)}function Td(n){return n<.0031308?n*12.92:1.055*Math.pow(n,.41666)-.055}class Ge{constructor(e,t,i){return Object.defineProperty(this,"isColor",{value:!0}),t===void 0&&i===void 0?this.set(e):this.setRGB(e,t,i)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,this}setRGB(e,t,i){return this.r=e,this.g=t,this.b=i,this}setHSL(e,t,i){if(e=Ke.euclideanModulo(e,1),t=Ke.clamp(t,0,1),i=Ke.clamp(i,0,1),t===0)this.r=this.g=this.b=i;else{const r=i<=.5?i*(1+t):i+t-i*t,s=2*i-r;this.r=Sd(s,r,e+1/3),this.g=Sd(s,r,e),this.b=Sd(s,r,e-1/3)}return this}setStyle(e){function t(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let r;const s=i[1],o=i[2];switch(s){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,t(r[4]),this;if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,t(r[4]),this;break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)){const a=parseFloat(r[1])/360,l=parseInt(r[2],10)/100,c=parseInt(r[3],10)/100;return t(r[4]),this.setHSL(a,l,c)}break}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=i[1],s=r.length;if(s===3)return this.r=parseInt(r.charAt(0)+r.charAt(0),16)/255,this.g=parseInt(r.charAt(1)+r.charAt(1),16)/255,this.b=parseInt(r.charAt(2)+r.charAt(2),16)/255,this;if(s===6)return this.r=parseInt(r.charAt(0)+r.charAt(1),16)/255,this.g=parseInt(r.charAt(2)+r.charAt(3),16)/255,this.b=parseInt(r.charAt(4)+r.charAt(5),16)/255,this}return e&&e.length>0?this.setColorName(e):this}setColorName(e){const t=m1[e];return t!==void 0?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copyGammaToLinear(e,t=2){return this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this}copyLinearToGamma(e,t=2){const i=t>0?1/t:1;return this.r=Math.pow(e.r,i),this.g=Math.pow(e.g,i),this.b=Math.pow(e.b,i),this}convertGammaToLinear(e){return this.copyGammaToLinear(this,e),this}convertLinearToGamma(e){return this.copyLinearToGamma(this,e),this}copySRGBToLinear(e){return this.r=Ed(e.r),this.g=Ed(e.g),this.b=Ed(e.b),this}copyLinearToSRGB(e){return this.r=Td(e.r),this.g=Td(e.g),this.b=Td(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return this.r*255<<16^this.g*255<<8^this.b*255<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(e){e===void 0&&(console.warn("THREE.Color: .getHSL() target is now required"),e={h:0,s:0,l:0});const t=this.r,i=this.g,r=this.b,s=Math.max(t,i,r),o=Math.min(t,i,r);let a,l;const c=(o+s)/2;if(o===s)a=0,l=0;else{const u=s-o;switch(l=c<=.5?u/(s+o):u/(2-s-o),s){case t:a=(i-r)/u+(i<r?6:0);break;case i:a=(r-t)/u+2;break;case r:a=(t-i)/u+4;break}a/=6}return e.h=a,e.s=l,e.l=c,e}getStyle(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"}offsetHSL(e,t,i){return this.getHSL(Gn),Gn.h+=e,Gn.s+=t,Gn.l+=i,this.setHSL(Gn.h,Gn.s,Gn.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(Gn),e.getHSL(il);const i=Ke.lerp(Gn.h,il.h,t),r=Ke.lerp(Gn.s,il.s,t),s=Ke.lerp(Gn.l,il.l,t);return this.setHSL(i,r,s),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),e.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}Ge.NAMES=m1;Ge.prototype.r=1;Ge.prototype.g=1;Ge.prototype.b=1;class Mm{constructor(e,t,i,r,s,o=0){this.a=e,this.b=t,this.c=i,this.normal=r&&r.isVector3?r:new F,this.vertexNormals=Array.isArray(r)?r:[],this.color=s&&s.isColor?s:new Ge,this.vertexColors=Array.isArray(s)?s:[],this.materialIndex=o}clone(){return new this.constructor().copy(this)}copy(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(let t=0,i=e.vertexNormals.length;t<i;t++)this.vertexNormals[t]=e.vertexNormals[t].clone();for(let t=0,i=e.vertexColors.length;t<i;t++)this.vertexColors[t]=e.vertexColors[t].clone();return this}}let sL=0;function Je(){Object.defineProperty(this,"id",{value:sL++}),this.uuid=Ke.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=bo,this.side=Xo,this.flatShading=!1,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=pm,this.blendDst=mm,this.blendEquation=Wr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=$l,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=p1,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Hl,this.stencilZFail=Hl,this.stencilZPass=Hl,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}Je.prototype=Object.assign(Object.create(ki.prototype),{constructor:Je,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(n){if(n!==void 0)for(const e in n){const t=n[e];if(t===void 0){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if(e==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=t===dm;continue}const i=this[e];if(i===void 0){console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.");continue}i&&i.isColor?i.set(t):i&&i.isVector3&&t&&t.isVector3?i.copy(t):this[e]=t}},toJSON:function(n){const e=n===void 0||typeof n=="string";e&&(n={textures:{},images:{}});const t={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),this.color&&this.color.isColor&&(t.color=this.color.getHex()),this.roughness!==void 0&&(t.roughness=this.roughness),this.metalness!==void 0&&(t.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(t.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(t.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(t.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(t.specular=this.specular.getHex()),this.shininess!==void 0&&(t.shininess=this.shininess),this.clearcoat!==void 0&&(t.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(t.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(t.clearcoatMap=this.clearcoatMap.toJSON(n).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(t.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(n).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(t.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(n).uuid,t.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(t.map=this.map.toJSON(n).uuid),this.matcap&&this.matcap.isTexture&&(t.matcap=this.matcap.toJSON(n).uuid),this.alphaMap&&this.alphaMap.isTexture&&(t.alphaMap=this.alphaMap.toJSON(n).uuid),this.lightMap&&this.lightMap.isTexture&&(t.lightMap=this.lightMap.toJSON(n).uuid),this.aoMap&&this.aoMap.isTexture&&(t.aoMap=this.aoMap.toJSON(n).uuid,t.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(t.bumpMap=this.bumpMap.toJSON(n).uuid,t.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(t.normalMap=this.normalMap.toJSON(n).uuid,t.normalMapType=this.normalMapType,t.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(t.displacementMap=this.displacementMap.toJSON(n).uuid,t.displacementScale=this.displacementScale,t.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(t.roughnessMap=this.roughnessMap.toJSON(n).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(t.metalnessMap=this.metalnessMap.toJSON(n).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(t.emissiveMap=this.emissiveMap.toJSON(n).uuid),this.specularMap&&this.specularMap.isTexture&&(t.specularMap=this.specularMap.toJSON(n).uuid),this.envMap&&this.envMap.isTexture&&(t.envMap=this.envMap.toJSON(n).uuid,t.reflectivity=this.reflectivity,t.refractionRatio=this.refractionRatio,this.combine!==void 0&&(t.combine=this.combine),this.envMapIntensity!==void 0&&(t.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(t.gradientMap=this.gradientMap.toJSON(n).uuid),this.size!==void 0&&(t.size=this.size),this.sizeAttenuation!==void 0&&(t.sizeAttenuation=this.sizeAttenuation),this.blending!==bo&&(t.blending=this.blending),this.flatShading===!0&&(t.flatShading=this.flatShading),this.side!==Xo&&(t.side=this.side),this.vertexColors&&(t.vertexColors=!0),this.opacity<1&&(t.opacity=this.opacity),this.transparent===!0&&(t.transparent=this.transparent),t.depthFunc=this.depthFunc,t.depthTest=this.depthTest,t.depthWrite=this.depthWrite,t.stencilWrite=this.stencilWrite,t.stencilWriteMask=this.stencilWriteMask,t.stencilFunc=this.stencilFunc,t.stencilRef=this.stencilRef,t.stencilFuncMask=this.stencilFuncMask,t.stencilFail=this.stencilFail,t.stencilZFail=this.stencilZFail,t.stencilZPass=this.stencilZPass,this.rotation&&this.rotation!==0&&(t.rotation=this.rotation),this.polygonOffset===!0&&(t.polygonOffset=!0),this.polygonOffsetFactor!==0&&(t.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(t.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&this.linewidth!==1&&(t.linewidth=this.linewidth),this.dashSize!==void 0&&(t.dashSize=this.dashSize),this.gapSize!==void 0&&(t.gapSize=this.gapSize),this.scale!==void 0&&(t.scale=this.scale),this.dithering===!0&&(t.dithering=!0),this.alphaTest>0&&(t.alphaTest=this.alphaTest),this.premultipliedAlpha===!0&&(t.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(t.wireframe=this.wireframe),this.wireframeLinewidth>1&&(t.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(t.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(t.wireframeLinejoin=this.wireframeLinejoin),this.morphTargets===!0&&(t.morphTargets=!0),this.morphNormals===!0&&(t.morphNormals=!0),this.skinning===!0&&(t.skinning=!0),this.visible===!1&&(t.visible=!1),this.toneMapped===!1&&(t.toneMapped=!1),JSON.stringify(this.userData)!=="{}"&&(t.userData=this.userData);function i(r){const s=[];for(const o in r){const a=r[o];delete a.metadata,s.push(a)}return s}if(e){const r=i(n.textures),s=i(n.images);r.length>0&&(t.textures=r),s.length>0&&(t.images=s)}return t},clone:function(){return new this.constructor().copy(this)},copy:function(n){this.name=n.name,this.fog=n.fog,this.blending=n.blending,this.side=n.side,this.flatShading=n.flatShading,this.vertexColors=n.vertexColors,this.opacity=n.opacity,this.transparent=n.transparent,this.blendSrc=n.blendSrc,this.blendDst=n.blendDst,this.blendEquation=n.blendEquation,this.blendSrcAlpha=n.blendSrcAlpha,this.blendDstAlpha=n.blendDstAlpha,this.blendEquationAlpha=n.blendEquationAlpha,this.depthFunc=n.depthFunc,this.depthTest=n.depthTest,this.depthWrite=n.depthWrite,this.stencilWriteMask=n.stencilWriteMask,this.stencilFunc=n.stencilFunc,this.stencilRef=n.stencilRef,this.stencilFuncMask=n.stencilFuncMask,this.stencilFail=n.stencilFail,this.stencilZFail=n.stencilZFail,this.stencilZPass=n.stencilZPass,this.stencilWrite=n.stencilWrite;const e=n.clippingPlanes;let t=null;if(e!==null){const i=e.length;t=new Array(i);for(let r=0;r!==i;++r)t[r]=e[r].clone()}return this.clippingPlanes=t,this.clipIntersection=n.clipIntersection,this.clipShadows=n.clipShadows,this.shadowSide=n.shadowSide,this.colorWrite=n.colorWrite,this.precision=n.precision,this.polygonOffset=n.polygonOffset,this.polygonOffsetFactor=n.polygonOffsetFactor,this.polygonOffsetUnits=n.polygonOffsetUnits,this.dithering=n.dithering,this.alphaTest=n.alphaTest,this.premultipliedAlpha=n.premultipliedAlpha,this.visible=n.visible,this.toneMapped=n.toneMapped,this.userData=JSON.parse(JSON.stringify(n.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}});Object.defineProperty(Je.prototype,"needsUpdate",{set:function(n){n===!0&&this.version++}});function Mn(n){Je.call(this),this.type="MeshBasicMaterial",this.color=new Ge(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=bc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(n)}Mn.prototype=Object.create(Je.prototype);Mn.prototype.constructor=Mn;Mn.prototype.isMeshBasicMaterial=!0;Mn.prototype.copy=function(n){return Je.prototype.copy.call(this,n),this.color.copy(n.color),this.map=n.map,this.lightMap=n.lightMap,this.lightMapIntensity=n.lightMapIntensity,this.aoMap=n.aoMap,this.aoMapIntensity=n.aoMapIntensity,this.specularMap=n.specularMap,this.alphaMap=n.alphaMap,this.envMap=n.envMap,this.combine=n.combine,this.reflectivity=n.reflectivity,this.refractionRatio=n.refractionRatio,this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this.wireframeLinecap=n.wireframeLinecap,this.wireframeLinejoin=n.wireframeLinejoin,this.skinning=n.skinning,this.morphTargets=n.morphTargets,this};const mt=new F,rl=new Ee;function Ze(n,e,t){if(Array.isArray(n))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=n,this.itemSize=e,this.count=n!==void 0?n.length/e:0,this.normalized=t===!0,this.usage=Sc,this.updateRange={offset:0,count:-1},this.version=0}Object.defineProperty(Ze.prototype,"needsUpdate",{set:function(n){n===!0&&this.version++}});Object.assign(Ze.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(n){return this.usage=n,this},copy:function(n){return this.name=n.name,this.array=new n.array.constructor(n.array),this.itemSize=n.itemSize,this.count=n.count,this.normalized=n.normalized,this.usage=n.usage,this},copyAt:function(n,e,t){n*=this.itemSize,t*=e.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[n+i]=e.array[t+i];return this},copyArray:function(n){return this.array.set(n),this},copyColorsArray:function(n){const e=this.array;let t=0;for(let i=0,r=n.length;i<r;i++){let s=n[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),s=new Ge),e[t++]=s.r,e[t++]=s.g,e[t++]=s.b}return this},copyVector2sArray:function(n){const e=this.array;let t=0;for(let i=0,r=n.length;i<r;i++){let s=n[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),s=new Ee),e[t++]=s.x,e[t++]=s.y}return this},copyVector3sArray:function(n){const e=this.array;let t=0;for(let i=0,r=n.length;i<r;i++){let s=n[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),s=new F),e[t++]=s.x,e[t++]=s.y,e[t++]=s.z}return this},copyVector4sArray:function(n){const e=this.array;let t=0;for(let i=0,r=n.length;i<r;i++){let s=n[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),s=new ft),e[t++]=s.x,e[t++]=s.y,e[t++]=s.z,e[t++]=s.w}return this},applyMatrix3:function(n){if(this.itemSize===2)for(let e=0,t=this.count;e<t;e++)rl.fromBufferAttribute(this,e),rl.applyMatrix3(n),this.setXY(e,rl.x,rl.y);else if(this.itemSize===3)for(let e=0,t=this.count;e<t;e++)mt.fromBufferAttribute(this,e),mt.applyMatrix3(n),this.setXYZ(e,mt.x,mt.y,mt.z);return this},applyMatrix4:function(n){for(let e=0,t=this.count;e<t;e++)mt.x=this.getX(e),mt.y=this.getY(e),mt.z=this.getZ(e),mt.applyMatrix4(n),this.setXYZ(e,mt.x,mt.y,mt.z);return this},applyNormalMatrix:function(n){for(let e=0,t=this.count;e<t;e++)mt.x=this.getX(e),mt.y=this.getY(e),mt.z=this.getZ(e),mt.applyNormalMatrix(n),this.setXYZ(e,mt.x,mt.y,mt.z);return this},transformDirection:function(n){for(let e=0,t=this.count;e<t;e++)mt.x=this.getX(e),mt.y=this.getY(e),mt.z=this.getZ(e),mt.transformDirection(n),this.setXYZ(e,mt.x,mt.y,mt.z);return this},set:function(n,e=0){return this.array.set(n,e),this},getX:function(n){return this.array[n*this.itemSize]},setX:function(n,e){return this.array[n*this.itemSize]=e,this},getY:function(n){return this.array[n*this.itemSize+1]},setY:function(n,e){return this.array[n*this.itemSize+1]=e,this},getZ:function(n){return this.array[n*this.itemSize+2]},setZ:function(n,e){return this.array[n*this.itemSize+2]=e,this},getW:function(n){return this.array[n*this.itemSize+3]},setW:function(n,e){return this.array[n*this.itemSize+3]=e,this},setXY:function(n,e,t){return n*=this.itemSize,this.array[n+0]=e,this.array[n+1]=t,this},setXYZ:function(n,e,t,i){return n*=this.itemSize,this.array[n+0]=e,this.array[n+1]=t,this.array[n+2]=i,this},setXYZW:function(n,e,t,i,r){return n*=this.itemSize,this.array[n+0]=e,this.array[n+1]=t,this.array[n+2]=i,this.array[n+3]=r,this},onUpload:function(n){return this.onUploadCallback=n,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}});function Ua(n,e,t){Ze.call(this,new Int8Array(n),e,t)}Ua.prototype=Object.create(Ze.prototype);Ua.prototype.constructor=Ua;function za(n,e,t){Ze.call(this,new Uint8Array(n),e,t)}za.prototype=Object.create(Ze.prototype);za.prototype.constructor=za;function Ga(n,e,t){Ze.call(this,new Uint8ClampedArray(n),e,t)}Ga.prototype=Object.create(Ze.prototype);Ga.prototype.constructor=Ga;function ka(n,e,t){Ze.call(this,new Int16Array(n),e,t)}ka.prototype=Object.create(Ze.prototype);ka.prototype.constructor=ka;function ls(n,e,t){Ze.call(this,new Uint16Array(n),e,t)}ls.prototype=Object.create(Ze.prototype);ls.prototype.constructor=ls;function Ha(n,e,t){Ze.call(this,new Int32Array(n),e,t)}Ha.prototype=Object.create(Ze.prototype);Ha.prototype.constructor=Ha;function us(n,e,t){Ze.call(this,new Uint32Array(n),e,t)}us.prototype=Object.create(Ze.prototype);us.prototype.constructor=us;function Va(n,e,t){Ze.call(this,new Uint16Array(n),e,t)}Va.prototype=Object.create(Ze.prototype);Va.prototype.constructor=Va;Va.prototype.isFloat16BufferAttribute=!0;function He(n,e,t){Ze.call(this,new Float32Array(n),e,t)}He.prototype=Object.create(Ze.prototype);He.prototype.constructor=He;function Wa(n,e,t){Ze.call(this,new Float64Array(n),e,t)}Wa.prototype=Object.create(Ze.prototype);Wa.prototype.constructor=Wa;function g1(n){if(n.length===0)return-1/0;let e=n[0];for(let t=1,i=n.length;t<i;++t)n[t]>e&&(e=n[t]);return e}const oL={Int8Array,Uint8Array,Uint8ClampedArray:typeof Uint8ClampedArray<"u"?Uint8ClampedArray:Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function wa(n,e){return new oL[n](e)}let aL=0;const ei=new tt,Ad=new qe,Qs=new F,pn=new Hi,fa=new Hi,Ft=new F;function Xe(){Object.defineProperty(this,"id",{value:aL++}),this.uuid=Ke.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}Xe.prototype=Object.assign(Object.create(ki.prototype),{constructor:Xe,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(n){return Array.isArray(n)?this.index=new(g1(n)>65535?us:ls)(n,1):this.index=n,this},getAttribute:function(n){return this.attributes[n]},setAttribute:function(n,e){return this.attributes[n]=e,this},deleteAttribute:function(n){return delete this.attributes[n],this},hasAttribute:function(n){return this.attributes[n]!==void 0},addGroup:function(n,e,t=0){this.groups.push({start:n,count:e,materialIndex:t})},clearGroups:function(){this.groups=[]},setDrawRange:function(n,e){this.drawRange.start=n,this.drawRange.count=e},applyMatrix4:function(n){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(n),e.needsUpdate=!0);const t=this.attributes.normal;if(t!==void 0){const r=new vn().getNormalMatrix(n);t.applyNormalMatrix(r),t.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(n),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this},rotateX:function(n){return ei.makeRotationX(n),this.applyMatrix4(ei),this},rotateY:function(n){return ei.makeRotationY(n),this.applyMatrix4(ei),this},rotateZ:function(n){return ei.makeRotationZ(n),this.applyMatrix4(ei),this},translate:function(n,e,t){return ei.makeTranslation(n,e,t),this.applyMatrix4(ei),this},scale:function(n,e,t){return ei.makeScale(n,e,t),this.applyMatrix4(ei),this},lookAt:function(n){return Ad.lookAt(n),Ad.updateMatrix(),this.applyMatrix4(Ad.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Qs).negate(),this.translate(Qs.x,Qs.y,Qs.z),this},setFromPoints:function(n){const e=[];for(let t=0,i=n.length;t<i;t++){const r=n[t];e.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new He(e,3)),this},computeBoundingBox:function(){this.boundingBox===null&&(this.boundingBox=new Hi);const n=this.attributes.position,e=this.morphAttributes.position;if(n&&n.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new F(-1/0,-1/0,-1/0),new F(1/0,1/0,1/0));return}if(n!==void 0){if(this.boundingBox.setFromBufferAttribute(n),e)for(let t=0,i=e.length;t<i;t++){const r=e[t];pn.setFromBufferAttribute(r),this.morphTargetsRelative?(Ft.addVectors(this.boundingBox.min,pn.min),this.boundingBox.expandByPoint(Ft),Ft.addVectors(this.boundingBox.max,pn.max),this.boundingBox.expandByPoint(Ft)):(this.boundingBox.expandByPoint(pn.min),this.boundingBox.expandByPoint(pn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){this.boundingSphere===null&&(this.boundingSphere=new Tr);const n=this.attributes.position,e=this.morphAttributes.position;if(n&&n.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new F,1/0);return}if(n){const t=this.boundingSphere.center;if(pn.setFromBufferAttribute(n),e)for(let r=0,s=e.length;r<s;r++){const o=e[r];fa.setFromBufferAttribute(o),this.morphTargetsRelative?(Ft.addVectors(pn.min,fa.min),pn.expandByPoint(Ft),Ft.addVectors(pn.max,fa.max),pn.expandByPoint(Ft)):(pn.expandByPoint(fa.min),pn.expandByPoint(fa.max))}pn.getCenter(t);let i=0;for(let r=0,s=n.count;r<s;r++)Ft.fromBufferAttribute(n,r),i=Math.max(i,t.distanceToSquared(Ft));if(e)for(let r=0,s=e.length;r<s;r++){const o=e[r],a=this.morphTargetsRelative;for(let l=0,c=o.count;l<c;l++)Ft.fromBufferAttribute(o,l),a&&(Qs.fromBufferAttribute(n,l),Ft.add(Qs)),i=Math.max(i,t.distanceToSquared(Ft))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeTangents:function(){const n=this.index,e=this.attributes;if(n===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const t=n.array,i=e.position.array,r=e.normal.array,s=e.uv.array,o=i.length/3;e.tangent===void 0&&this.setAttribute("tangent",new Ze(new Float32Array(4*o),4));const a=e.tangent.array,l=[],c=[];for(let E=0;E<o;E++)l[E]=new F,c[E]=new F;const u=new F,f=new F,h=new F,d=new Ee,p=new Ee,g=new Ee,m=new F,v=new F;function x(E,R,I){u.fromArray(i,E*3),f.fromArray(i,R*3),h.fromArray(i,I*3),d.fromArray(s,E*2),p.fromArray(s,R*2),g.fromArray(s,I*2),f.sub(u),h.sub(u),p.sub(d),g.sub(d);const $=1/(p.x*g.y-g.x*p.y);isFinite($)&&(m.copy(f).multiplyScalar(g.y).addScaledVector(h,-p.y).multiplyScalar($),v.copy(h).multiplyScalar(p.x).addScaledVector(f,-g.x).multiplyScalar($),l[E].add(m),l[R].add(m),l[I].add(m),c[E].add(v),c[R].add(v),c[I].add(v))}let M=this.groups;M.length===0&&(M=[{start:0,count:t.length}]);for(let E=0,R=M.length;E<R;++E){const I=M[E],$=I.start,q=I.count;for(let L=$,N=$+q;L<N;L+=3)x(t[L+0],t[L+1],t[L+2])}const b=new F,w=new F,y=new F,_=new F;function S(E){y.fromArray(r,E*3),_.copy(y);const R=l[E];b.copy(R),b.sub(y.multiplyScalar(y.dot(R))).normalize(),w.crossVectors(_,R);const $=w.dot(c[E])<0?-1:1;a[E*4]=b.x,a[E*4+1]=b.y,a[E*4+2]=b.z,a[E*4+3]=$}for(let E=0,R=M.length;E<R;++E){const I=M[E],$=I.start,q=I.count;for(let L=$,N=$+q;L<N;L+=3)S(t[L+0]),S(t[L+1]),S(t[L+2])}},computeVertexNormals:function(){const n=this.index,e=this.getAttribute("position");if(e!==void 0){let t=this.getAttribute("normal");if(t===void 0)t=new Ze(new Float32Array(e.count*3),3),this.setAttribute("normal",t);else for(let f=0,h=t.count;f<h;f++)t.setXYZ(f,0,0,0);const i=new F,r=new F,s=new F,o=new F,a=new F,l=new F,c=new F,u=new F;if(n)for(let f=0,h=n.count;f<h;f+=3){const d=n.getX(f+0),p=n.getX(f+1),g=n.getX(f+2);i.fromBufferAttribute(e,d),r.fromBufferAttribute(e,p),s.fromBufferAttribute(e,g),c.subVectors(s,r),u.subVectors(i,r),c.cross(u),o.fromBufferAttribute(t,d),a.fromBufferAttribute(t,p),l.fromBufferAttribute(t,g),o.add(c),a.add(c),l.add(c),t.setXYZ(d,o.x,o.y,o.z),t.setXYZ(p,a.x,a.y,a.z),t.setXYZ(g,l.x,l.y,l.z)}else for(let f=0,h=e.count;f<h;f+=3)i.fromBufferAttribute(e,f+0),r.fromBufferAttribute(e,f+1),s.fromBufferAttribute(e,f+2),c.subVectors(s,r),u.subVectors(i,r),c.cross(u),t.setXYZ(f+0,c.x,c.y,c.z),t.setXYZ(f+1,c.x,c.y,c.z),t.setXYZ(f+2,c.x,c.y,c.z);this.normalizeNormals(),t.needsUpdate=!0}},merge:function(n,e){if(!(n&&n.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",n);return}e===void 0&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const t=this.attributes;for(const i in t){if(n.attributes[i]===void 0)continue;const s=t[i].array,o=n.attributes[i],a=o.array,l=o.itemSize*e,c=Math.min(a.length,s.length-l);for(let u=0,f=l;u<c;u++,f++)s[f]=a[u]}return this},normalizeNormals:function(){const n=this.attributes.normal;for(let e=0,t=n.count;e<t;e++)Ft.fromBufferAttribute(n,e),Ft.normalize(),n.setXYZ(e,Ft.x,Ft.y,Ft.z)},toNonIndexed:function(){function n(o,a){const l=o.array,c=o.itemSize,u=o.normalized,f=new l.constructor(a.length*c);let h=0,d=0;for(let p=0,g=a.length;p<g;p++){h=a[p]*c;for(let m=0;m<c;m++)f[d++]=l[h++]}return new Ze(f,c,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new Xe,t=this.index.array,i=this.attributes;for(const o in i){const a=i[o],l=n(a,t);e.setAttribute(o,l)}const r=this.morphAttributes;for(const o in r){const a=[],l=r[o];for(let c=0,u=l.length;c<u;c++){const f=l[c],h=n(f,t);a.push(h)}e.morphAttributes[o]=a}e.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let o=0,a=s.length;o<a;o++){const l=s[o];e.addGroup(l.start,l.count,l.materialIndex)}return e},toJSON:function(){const n={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),Object.keys(this.userData).length>0&&(n.userData=this.userData),this.parameters!==void 0){const a=this.parameters;for(const l in a)a[l]!==void 0&&(n[l]=a[l]);return n}n.data={attributes:{}};const e=this.index;e!==null&&(n.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const t=this.attributes;for(const a in t){const l=t[a],c=l.toJSON(n.data);l.name!==""&&(c.name=l.name),n.data.attributes[a]=c}const i={};let r=!1;for(const a in this.morphAttributes){const l=this.morphAttributes[a],c=[];for(let u=0,f=l.length;u<f;u++){const h=l[u],d=h.toJSON(n.data);h.name!==""&&(d.name=h.name),c.push(d)}c.length>0&&(i[a]=c,r=!0)}r&&(n.data.morphAttributes=i,n.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;s.length>0&&(n.data.groups=JSON.parse(JSON.stringify(s)));const o=this.boundingSphere;return o!==null&&(n.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),n},clone:function(){return new Xe().copy(this)},copy:function(n){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=n.name;const t=n.index;t!==null&&this.setIndex(t.clone(e));const i=n.attributes;for(const l in i){const c=i[l];this.setAttribute(l,c.clone(e))}const r=n.morphAttributes;for(const l in r){const c=[],u=r[l];for(let f=0,h=u.length;f<h;f++)c.push(u[f].clone(e));this.morphAttributes[l]=c}this.morphTargetsRelative=n.morphTargetsRelative;const s=n.groups;for(let l=0,c=s.length;l<c;l++){const u=s[l];this.addGroup(u.start,u.count,u.materialIndex)}const o=n.boundingBox;o!==null&&(this.boundingBox=o.clone());const a=n.boundingSphere;return a!==null&&(this.boundingSphere=a.clone()),this.drawRange.start=n.drawRange.start,this.drawRange.count=n.drawRange.count,this.userData=n.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});const Qx=new tt,eo=new Ko,Ld=new Tr,tr=new F,nr=new F,ir=new F,Cd=new F,Rd=new F,Pd=new F,sl=new F,ol=new F,al=new F,cl=new Ee,ll=new Ee,ul=new Ee,Id=new F,fl=new F;function xt(n=new Xe,e=new Mn){qe.call(this),this.type="Mesh",this.geometry=n,this.material=e,this.updateMorphTargets()}xt.prototype=Object.assign(Object.create(qe.prototype),{constructor:xt,isMesh:!0,copy:function(n){return qe.prototype.copy.call(this,n),n.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=n.morphTargetInfluences.slice()),n.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},n.morphTargetDictionary)),this.material=n.material,this.geometry=n.geometry,this},updateMorphTargets:function(){const n=this.geometry;if(n.isBufferGeometry){const e=n.morphAttributes,t=Object.keys(e);if(t.length>0){const i=e[t[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=i.length;r<s;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}else{const e=n.morphTargets;e!==void 0&&e.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(n,e){const t=this.geometry,i=this.material,r=this.matrixWorld;if(i===void 0||(t.boundingSphere===null&&t.computeBoundingSphere(),Ld.copy(t.boundingSphere),Ld.applyMatrix4(r),n.ray.intersectsSphere(Ld)===!1)||(Qx.copy(r).invert(),eo.copy(n.ray).applyMatrix4(Qx),t.boundingBox!==null&&eo.intersectsBox(t.boundingBox)===!1))return;let s;if(t.isBufferGeometry){const o=t.index,a=t.attributes.position,l=t.morphAttributes.position,c=t.morphTargetsRelative,u=t.attributes.uv,f=t.attributes.uv2,h=t.groups,d=t.drawRange;if(o!==null)if(Array.isArray(i))for(let p=0,g=h.length;p<g;p++){const m=h[p],v=i[m.materialIndex],x=Math.max(m.start,d.start),M=Math.min(m.start+m.count,d.start+d.count);for(let b=x,w=M;b<w;b+=3){const y=o.getX(b),_=o.getX(b+1),S=o.getX(b+2);s=hl(this,v,n,eo,a,l,c,u,f,y,_,S),s&&(s.faceIndex=Math.floor(b/3),s.face.materialIndex=m.materialIndex,e.push(s))}}else{const p=Math.max(0,d.start),g=Math.min(o.count,d.start+d.count);for(let m=p,v=g;m<v;m+=3){const x=o.getX(m),M=o.getX(m+1),b=o.getX(m+2);s=hl(this,i,n,eo,a,l,c,u,f,x,M,b),s&&(s.faceIndex=Math.floor(m/3),e.push(s))}}else if(a!==void 0)if(Array.isArray(i))for(let p=0,g=h.length;p<g;p++){const m=h[p],v=i[m.materialIndex],x=Math.max(m.start,d.start),M=Math.min(m.start+m.count,d.start+d.count);for(let b=x,w=M;b<w;b+=3){const y=b,_=b+1,S=b+2;s=hl(this,v,n,eo,a,l,c,u,f,y,_,S),s&&(s.faceIndex=Math.floor(b/3),s.face.materialIndex=m.materialIndex,e.push(s))}}else{const p=Math.max(0,d.start),g=Math.min(a.count,d.start+d.count);for(let m=p,v=g;m<v;m+=3){const x=m,M=m+1,b=m+2;s=hl(this,i,n,eo,a,l,c,u,f,x,M,b),s&&(s.faceIndex=Math.floor(m/3),e.push(s))}}}else t.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}});function cL(n,e,t,i,r,s,o,a){let l;if(e.side===Rt?l=i.intersectTriangle(o,s,r,!0,a):l=i.intersectTriangle(r,s,o,e.side!==vc,a),l===null)return null;fl.copy(a),fl.applyMatrix4(n.matrixWorld);const c=t.ray.origin.distanceTo(fl);return c<t.near||c>t.far?null:{distance:c,point:fl.clone(),object:n}}function hl(n,e,t,i,r,s,o,a,l,c,u,f){tr.fromBufferAttribute(r,c),nr.fromBufferAttribute(r,u),ir.fromBufferAttribute(r,f);const h=n.morphTargetInfluences;if(e.morphTargets&&s&&h){sl.set(0,0,0),ol.set(0,0,0),al.set(0,0,0);for(let p=0,g=s.length;p<g;p++){const m=h[p],v=s[p];m!==0&&(Cd.fromBufferAttribute(v,c),Rd.fromBufferAttribute(v,u),Pd.fromBufferAttribute(v,f),o?(sl.addScaledVector(Cd,m),ol.addScaledVector(Rd,m),al.addScaledVector(Pd,m)):(sl.addScaledVector(Cd.sub(tr),m),ol.addScaledVector(Rd.sub(nr),m),al.addScaledVector(Pd.sub(ir),m)))}tr.add(sl),nr.add(ol),ir.add(al)}n.isSkinnedMesh&&(n.boneTransform(c,tr),n.boneTransform(u,nr),n.boneTransform(f,ir));const d=cL(n,e,t,i,tr,nr,ir,Id);if(d){a&&(cl.fromBufferAttribute(a,c),ll.fromBufferAttribute(a,u),ul.fromBufferAttribute(a,f),d.uv=Ht.getUV(Id,tr,nr,ir,cl,ll,ul,new Ee)),l&&(cl.fromBufferAttribute(l,c),ll.fromBufferAttribute(l,u),ul.fromBufferAttribute(l,f),d.uv2=Ht.getUV(Id,tr,nr,ir,cl,ll,ul,new Ee));const p=new Mm(c,u,f);Ht.getNormal(tr,nr,ir,p.normal),d.face=p}return d}class fs extends Xe{constructor(e=1,t=1,i=1,r=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:r,heightSegments:s,depthSegments:o};const a=this;r=Math.floor(r),s=Math.floor(s),o=Math.floor(o);const l=[],c=[],u=[],f=[];let h=0,d=0;p("z","y","x",-1,-1,i,t,e,o,s,0),p("z","y","x",1,-1,i,t,-e,o,s,1),p("x","z","y",1,1,e,i,t,r,o,2),p("x","z","y",1,-1,e,i,-t,r,o,3),p("x","y","z",1,-1,e,t,i,r,s,4),p("x","y","z",-1,-1,e,t,-i,r,s,5),this.setIndex(l),this.setAttribute("position",new He(c,3)),this.setAttribute("normal",new He(u,3)),this.setAttribute("uv",new He(f,2));function p(g,m,v,x,M,b,w,y,_,S,E){const R=b/_,I=w/S,$=b/2,q=w/2,L=y/2,N=_+1,G=S+1;let X=0,K=0;const j=new F;for(let ee=0;ee<G;ee++){const P=ee*I-q;for(let V=0;V<N;V++){const Y=V*R-$;j[g]=Y*x,j[m]=P*M,j[v]=L,c.push(j.x,j.y,j.z),j[g]=0,j[m]=0,j[v]=y>0?1:-1,u.push(j.x,j.y,j.z),f.push(V/_),f.push(1-ee/S),X+=1}}for(let ee=0;ee<S;ee++)for(let P=0;P<_;P++){const V=h+P+N*ee,Y=h+P+N*(ee+1),Q=h+(P+1)+N*(ee+1),B=h+(P+1)+N*ee;l.push(V,Y,B),l.push(Y,Q,B),K+=6}a.addGroup(d,K,E),d+=K,h+=X}}}function Co(n){const e={};for(const t in n){e[t]={};for(const i in n[t]){const r=n[t][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture)?e[t][i]=r.clone():Array.isArray(r)?e[t][i]=r.slice():e[t][i]=r}}return e}function kt(n){const e={};for(let t=0;t<n.length;t++){const i=Co(n[t]);for(const r in i)e[r]=i[r]}return e}const x1={clone:Co,merge:kt};var lL=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,uL=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;function en(n){Je.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=lL,this.fragmentShader=uL,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,n!==void 0&&(n.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(n))}en.prototype=Object.create(Je.prototype);en.prototype.constructor=en;en.prototype.isShaderMaterial=!0;en.prototype.copy=function(n){return Je.prototype.copy.call(this,n),this.fragmentShader=n.fragmentShader,this.vertexShader=n.vertexShader,this.uniforms=Co(n.uniforms),this.defines=Object.assign({},n.defines),this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this.lights=n.lights,this.clipping=n.clipping,this.skinning=n.skinning,this.morphTargets=n.morphTargets,this.morphNormals=n.morphNormals,this.extensions=Object.assign({},n.extensions),this.glslVersion=n.glslVersion,this};en.prototype.toJSON=function(n){const e=Je.prototype.toJSON.call(this,n);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const s=this.uniforms[i].value;s&&s.isTexture?e.uniforms[i]={type:"t",value:s.toJSON(n).uuid}:s&&s.isColor?e.uniforms[i]={type:"c",value:s.getHex()}:s&&s.isVector2?e.uniforms[i]={type:"v2",value:s.toArray()}:s&&s.isVector3?e.uniforms[i]={type:"v3",value:s.toArray()}:s&&s.isVector4?e.uniforms[i]={type:"v4",value:s.toArray()}:s&&s.isMatrix3?e.uniforms[i]={type:"m3",value:s.toArray()}:s&&s.isMatrix4?e.uniforms[i]={type:"m4",value:s.toArray()}:e.uniforms[i]={value:s}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const t={};for(const i in this.extensions)this.extensions[i]===!0&&(t[i]=!0);return Object.keys(t).length>0&&(e.extensions=t),e};function ui(){qe.call(this),this.type="Camera",this.matrixWorldInverse=new tt,this.projectionMatrix=new tt,this.projectionMatrixInverse=new tt}ui.prototype=Object.assign(Object.create(qe.prototype),{constructor:ui,isCamera:!0,copy:function(n,e){return qe.prototype.copy.call(this,n,e),this.matrixWorldInverse.copy(n.matrixWorldInverse),this.projectionMatrix.copy(n.projectionMatrix),this.projectionMatrixInverse.copy(n.projectionMatrixInverse),this},getWorldDirection:function(n){n===void 0&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),n=new F),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return n.set(-e[8],-e[9],-e[10]).normalize()},updateMatrixWorld:function(n){qe.prototype.updateMatrixWorld.call(this,n),this.matrixWorldInverse.copy(this.matrixWorld).invert()},updateWorldMatrix:function(n,e){qe.prototype.updateWorldMatrix.call(this,n,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()},clone:function(){return new this.constructor().copy(this)}});function Pt(n=50,e=1,t=.1,i=2e3){ui.call(this),this.type="PerspectiveCamera",this.fov=n,this.zoom=1,this.near=t,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}Pt.prototype=Object.assign(Object.create(ui.prototype),{constructor:Pt,isPerspectiveCamera:!0,copy:function(n,e){return ui.prototype.copy.call(this,n,e),this.fov=n.fov,this.zoom=n.zoom,this.near=n.near,this.far=n.far,this.focus=n.focus,this.aspect=n.aspect,this.view=n.view===null?null:Object.assign({},n.view),this.filmGauge=n.filmGauge,this.filmOffset=n.filmOffset,this},setFocalLength:function(n){const e=.5*this.getFilmHeight()/n;this.fov=Ke.RAD2DEG*2*Math.atan(e),this.updateProjectionMatrix()},getFocalLength:function(){const n=Math.tan(Ke.DEG2RAD*.5*this.fov);return .5*this.getFilmHeight()/n},getEffectiveFOV:function(){return Ke.RAD2DEG*2*Math.atan(Math.tan(Ke.DEG2RAD*.5*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(n,e,t,i,r,s){this.aspect=n/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=n,this.view.fullHeight=e,this.view.offsetX=t,this.view.offsetY=i,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()},clearViewOffset:function(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const n=this.near;let e=n*Math.tan(Ke.DEG2RAD*.5*this.fov)/this.zoom,t=2*e,i=this.aspect*t,r=-.5*i;const s=this.view;if(this.view!==null&&this.view.enabled){const a=s.fullWidth,l=s.fullHeight;r+=s.offsetX*i/a,e-=s.offsetY*t/l,i*=s.width/a,t*=s.height/l}const o=this.filmOffset;o!==0&&(r+=n*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,e,e-t,n,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(n){const e=qe.prototype.toJSON.call(this,n);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}});const to=90,no=1;function hs(n,e,t){if(qe.call(this),this.type="CubeCamera",t.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=t;const i=new Pt(to,no,n,e);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new F(1,0,0)),this.add(i);const r=new Pt(to,no,n,e);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new F(-1,0,0)),this.add(r);const s=new Pt(to,no,n,e);s.layers=this.layers,s.up.set(0,0,1),s.lookAt(new F(0,1,0)),this.add(s);const o=new Pt(to,no,n,e);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(new F(0,-1,0)),this.add(o);const a=new Pt(to,no,n,e);a.layers=this.layers,a.up.set(0,-1,0),a.lookAt(new F(0,0,1)),this.add(a);const l=new Pt(to,no,n,e);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new F(0,0,-1)),this.add(l),this.update=function(c,u){this.parent===null&&this.updateMatrixWorld();const f=c.xr.enabled,h=c.getRenderTarget();c.xr.enabled=!1;const d=t.texture.generateMipmaps;t.texture.generateMipmaps=!1,c.setRenderTarget(t,0),c.render(u,i),c.setRenderTarget(t,1),c.render(u,r),c.setRenderTarget(t,2),c.render(u,s),c.setRenderTarget(t,3),c.render(u,o),c.setRenderTarget(t,4),c.render(u,a),t.texture.generateMipmaps=d,c.setRenderTarget(t,5),c.render(u,l),c.setRenderTarget(h),c.xr.enabled=f}}hs.prototype=Object.create(qe.prototype);hs.prototype.constructor=hs;function fi(n,e,t,i,r,s,o,a,l,c){n=n!==void 0?n:[],e=e!==void 0?e:yc,o=o!==void 0?o:ur,ht.call(this,n,e,t,i,r,s,o,a,l,c),this.flipY=!1,this._needsFlipEnvMap=!0}fi.prototype=Object.create(ht.prototype);fi.prototype.constructor=fi;fi.prototype.isCubeTexture=!0;Object.defineProperty(fi.prototype,"images",{get:function(){return this.image},set:function(n){this.image=n}});class wm extends fr{constructor(e,t,i){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=i),super(e,e,t),Object.defineProperty(this,"isWebGLCubeRenderTarget",{value:!0}),t=t||{},this.texture=new fi(void 0,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.format=yn,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new fs(5,5,5),s=new en({name:"CubemapFromEquirect",uniforms:Co(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:Rt,blending:Fi});s.uniforms.tEquirect.value=t;const o=new xt(r,s),a=t.minFilter;return t.minFilter===Zo&&(t.minFilter=Nt),new hs(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,i,r){const s=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,i,r);e.setRenderTarget(s)}}function Bi(n,e,t,i,r,s,o,a,l,c,u,f){ht.call(this,null,s,o,a,l,c,i,r,u,f),this.image={data:n||null,width:e||1,height:t||1},this.magFilter=l!==void 0?l:Dt,this.minFilter=c!==void 0?c:Dt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}Bi.prototype=Object.create(ht.prototype);Bi.prototype.constructor=Bi;Bi.prototype.isDataTexture=!0;const io=new Tr,dl=new F;class Ec{constructor(e,t,i,r,s,o){this.planes=[e!==void 0?e:new ri,t!==void 0?t:new ri,i!==void 0?i:new ri,r!==void 0?r:new ri,s!==void 0?s:new ri,o!==void 0?o:new ri]}set(e,t,i,r,s,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(i),a[3].copy(r),a[4].copy(s),a[5].copy(o),this}clone(){return new this.constructor().copy(this)}copy(e){const t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e){const t=this.planes,i=e.elements,r=i[0],s=i[1],o=i[2],a=i[3],l=i[4],c=i[5],u=i[6],f=i[7],h=i[8],d=i[9],p=i[10],g=i[11],m=i[12],v=i[13],x=i[14],M=i[15];return t[0].setComponents(a-r,f-l,g-h,M-m).normalize(),t[1].setComponents(a+r,f+l,g+h,M+m).normalize(),t[2].setComponents(a+s,f+c,g+d,M+v).normalize(),t[3].setComponents(a-s,f-c,g-d,M-v).normalize(),t[4].setComponents(a-o,f-u,g-p,M-x).normalize(),t[5].setComponents(a+o,f+u,g+p,M+x).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),io.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(io)}intersectsSprite(e){return io.center.set(0,0,0),io.radius=.7071067811865476,io.applyMatrix4(e.matrixWorld),this.intersectsSphere(io)}intersectsSphere(e){const t=this.planes,i=e.center,r=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(i)<r)return!1;return!0}intersectsBox(e){const t=this.planes;for(let i=0;i<6;i++){const r=t[i];if(dl.x=r.normal.x>0?e.max.x:e.min.x,dl.y=r.normal.y>0?e.max.y:e.min.y,dl.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(dl)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}}function v1(){let n=null,e=!1,t=null,i=null;function r(s,o){t(s,o),i=n.requestAnimationFrame(r)}return{start:function(){e!==!0&&t!==null&&(i=n.requestAnimationFrame(r),e=!0)},stop:function(){n.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){n=s}}}function fL(n,e){const t=e.isWebGL2,i=new WeakMap;function r(c,u){const f=c.array,h=c.usage,d=n.createBuffer();n.bindBuffer(u,d),n.bufferData(u,f,h),c.onUploadCallback();let p=5126;return f instanceof Float32Array?p=5126:f instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):f instanceof Uint16Array?c.isFloat16BufferAttribute?t?p=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):p=5123:f instanceof Int16Array?p=5122:f instanceof Uint32Array?p=5125:f instanceof Int32Array?p=5124:f instanceof Int8Array?p=5120:f instanceof Uint8Array&&(p=5121),{buffer:d,type:p,bytesPerElement:f.BYTES_PER_ELEMENT,version:c.version}}function s(c,u,f){const h=u.array,d=u.updateRange;n.bindBuffer(f,c),d.count===-1?n.bufferSubData(f,0,h):(t?n.bufferSubData(f,d.offset*h.BYTES_PER_ELEMENT,h,d.offset,d.count):n.bufferSubData(f,d.offset*h.BYTES_PER_ELEMENT,h.subarray(d.offset,d.offset+d.count)),d.count=-1)}function o(c){return c.isInterleavedBufferAttribute&&(c=c.data),i.get(c)}function a(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=i.get(c);u&&(n.deleteBuffer(u.buffer),i.delete(c))}function l(c,u){if(c.isGLBufferAttribute){const h=i.get(c);(!h||h.version<c.version)&&i.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const f=i.get(c);f===void 0?i.set(c,r(c,u)):f.version<c.version&&(s(f.buffer,c,u),f.version=c.version)}return{get:o,remove:a,update:l}}class qa extends Xe{constructor(e=1,t=1,i=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:r};const s=e/2,o=t/2,a=Math.floor(i),l=Math.floor(r),c=a+1,u=l+1,f=e/a,h=t/l,d=[],p=[],g=[],m=[];for(let v=0;v<u;v++){const x=v*h-o;for(let M=0;M<c;M++){const b=M*f-s;p.push(b,-x,0),g.push(0,0,1),m.push(M/a),m.push(1-v/l)}}for(let v=0;v<l;v++)for(let x=0;x<a;x++){const M=x+c*v,b=x+c*(v+1),w=x+1+c*(v+1),y=x+1+c*v;d.push(M,b,y),d.push(b,w,y)}this.setIndex(d),this.setAttribute("position",new He(p,3)),this.setAttribute("normal",new He(g,3)),this.setAttribute("uv",new He(m,2))}}var hL=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,dL=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,pL=`#ifdef ALPHATEST
	if ( diffuseColor.a < ALPHATEST ) discard;
#endif`,mL=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );
	#endif
#endif`,gL=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,xL="vec3 transformed = vec3( position );",vL=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,bL=`vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	return vec2( -1.04, 1.04 ) * a004 + r.zw;
}
float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
#if defined ( PHYSICALLY_CORRECT_LIGHTS )
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
#else
	if( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
		return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );
	}
	return 1.0;
#endif
}
vec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {
	float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );
	return ( 1.0 - specularColor ) * fresnel + specularColor;
}
vec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {
	float fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );
	vec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;
	return Fr * fresnel + F0;
}
float G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	return 1.0 / ( gl * gv );
}
float G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( incidentLight.direction + viewDir );
	float dotNL = saturate( dot( normal, incidentLight.direction ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( G * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
vec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );
	return specularColor * brdf.x + brdf.y;
}
void BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
	vec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );
	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );
	vec3 FssEss = F * brdf.x + brdf.y;
	float Ess = brdf.x + brdf.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );
	float dotNH = saturate( dot( geometry.normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
float GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {
	return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );
}
float BlinnExponentToGGXRoughness( const in float blinnExponent ) {
	return sqrt( 2.0 / ( blinnExponent + 2.0 ) );
}
#if defined( USE_SHEEN )
float D_Charlie(float roughness, float NoH) {
	float invAlpha = 1.0 / roughness;
	float cos2h = NoH * NoH;
	float sin2h = max(1.0 - cos2h, 0.0078125);	return (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);
}
float V_Neubelt(float NoV, float NoL) {
	return saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));
}
vec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {
	vec3 N = geometry.normal;
	vec3 V = geometry.viewDir;
	vec3 H = normalize( V + L );
	float dotNH = saturate( dot( N, H ) );
	return specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );
}
#endif`,yL=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 );
		fDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,_L=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,ML=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,wL=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,SL=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,EL=`#ifdef USE_COLOR
	diffuseColor.rgb *= vColor;
#endif`,TL=`#ifdef USE_COLOR
	varying vec3 vColor;
#endif`,AL=`#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,LL=`#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor.xyz *= color.xyz;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,CL=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement(a) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract(sin(sn) * c);
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
vec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	float distance = dot( planeNormal, point - pointOnPlane );
	return - distance * planeNormal + point;
}
float sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return sign( dot( point - pointOnPlane, planeNormal ) );
}
vec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,RL=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_maxMipLevel 8.0
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_maxTileSize 256.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		float texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );
		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );
		vec2 f = fract( uv );
		uv += 0.5 - f;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		if ( mipInt < cubeUV_maxMipLevel ) {
			uv.y += 2.0 * cubeUV_maxTileSize;
		}
		uv.y += filterInt * 2.0 * cubeUV_minTileSize;
		uv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );
		uv *= texelSize;
		vec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.x += texelSize;
		vec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.y += texelSize;
		vec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.x -= texelSize;
		vec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		vec3 tm = mix( tl, tr, f.x );
		vec3 bm = mix( bl, br, f.x );
		return mix( tm, bm, f.y );
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,PL=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,IL=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,DL=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,OL=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,FL=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,NL="gl_FragColor = linearToOutputTexel( gl_FragColor );",BL=`
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 GammaToLinear( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );
}
vec4 LinearToGamma( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );
}
vec4 sRGBToLinear( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 RGBEToLinear( in vec4 value ) {
	return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );
}
vec4 LinearToRGBE( in vec4 value ) {
	float maxComponent = max( max( value.r, value.g ), value.b );
	float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );
	return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );
}
vec4 RGBMToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * value.a * maxRange, 1.0 );
}
vec4 LinearToRGBM( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float M = clamp( maxRGB / maxRange, 0.0, 1.0 );
	M = ceil( M * 255.0 ) / 255.0;
	return vec4( value.rgb / ( M * maxRange ), M );
}
vec4 RGBDToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );
}
vec4 LinearToRGBD( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float D = max( maxRange / maxRGB, 1.0 );
	D = clamp( floor( D ) / 255.0, 0.0, 1.0 );
	return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );
}
const mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );
vec4 LinearToLogLuv( in vec4 value ) {
	vec3 Xp_Y_XYZp = cLogLuvM * value.rgb;
	Xp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );
	vec4 vResult;
	vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;
	float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;
	vResult.w = fract( Le );
	vResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;
	return vResult;
}
const mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );
vec4 LogLuvToLinear( in vec4 value ) {
	float Le = value.z * 255.0 + value.w;
	vec3 Xp_Y_XYZp;
	Xp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );
	Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;
	Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;
	vec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;
	return vec4( max( vRGB, 0.0 ), 1.0 );
}`,UL=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifndef ENVMAP_TYPE_CUBE_UV
		envColor = envMapTexelToLinear( envColor );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,zL=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform int maxMipLevel;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,GL=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,kL=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,HL=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,VL=`#ifdef USE_FOG
	fogDepth = - mvPosition.z;
#endif`,WL=`#ifdef USE_FOG
	varying float fogDepth;
#endif`,qL=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, fogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,$L=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float fogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,jL=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return texture2D( gradientMap, coord ).rgb;
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,XL=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel= texture2D( lightMap, vUv2 );
	reflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
#endif`,YL=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,ZL=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );
		#endif
	}
	#pragma unroll_loop_end
#endif`,JL=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {
	vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	return irradiance;
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		directLight.color = directionalLight.color;
		directLight.direction = directionalLight.direction;
		directLight.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		vec3 lVector = pointLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		directLight.color = pointLight.color;
		directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );
		directLight.visible = ( directLight.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		vec3 lVector = spotLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		float angleCos = dot( directLight.direction, spotLight.direction );
		if ( angleCos > spotLight.coneCos ) {
			float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );
			directLight.color = spotLight.color;
			directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );
			directLight.visible = true;
		} else {
			directLight.color = vec3( 0.0 );
			directLight.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {
		float dotNL = dot( geometry.normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			irradiance *= PI;
		#endif
		return irradiance;
	}
#endif`,KL=`#if defined( USE_ENVMAP )
	#ifdef ENVMAP_MODE_REFRACTION
		uniform float refractionRatio;
	#endif
	vec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {
		vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );
			#else
				vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
		#else
			vec4 envMapColor = vec4( 0.0 );
		#endif
		return PI * envMapColor.rgb * envMapIntensity;
	}
	float getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {
		float maxMIPLevelScalar = float( maxMIPLevel );
		float sigma = PI * roughness * roughness / ( 1.0 + roughness );
		float desiredMIPLevel = maxMIPLevelScalar + log2( sigma );
		return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );
	}
	vec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( -viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
		#else
			vec3 reflectVec = refract( -viewDir, normal, refractionRatio );
		#endif
		reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
		float specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );
			#else
				vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
		#endif
		return envMapColor.rgb * envMapIntensity;
	}
#endif`,QL=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,eC=`varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,tC=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,nC=`varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,iC=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;
material.specularRoughness = min( material.specularRoughness, 1.0 );
#ifdef REFLECTIVITY
	material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );
#endif
#ifdef CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheen;
#endif`,rC=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float specularRoughness;
	vec3 specularColor;
#ifdef CLEARCOAT
	float clearcoat;
	float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	vec3 sheenColor;
#endif
};
#define MAXIMUM_SPECULAR_COEFFICIENT 0.16
#define DEFAULT_SPECULAR_COEFFICIENT 0.04
float clearcoatDHRApprox( const in float roughness, const in float dotNL ) {
	return DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.specularRoughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	#ifdef CLEARCOAT
		float ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = ccDotNL * directLight.color;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			ccIrradiance *= PI;
		#endif
		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );
		reflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );
	#else
		float clearcoatDHR = 0.0;
	#endif
	#ifdef USE_SHEEN
		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(
			material.specularRoughness,
			directLight.direction,
			geometry,
			material.sheenColor
		);
	#else
		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);
	#endif
	reflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef CLEARCOAT
		float ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		reflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );
		float ccDotNL = ccDotNV;
		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );
	#else
		float clearcoatDHR = 0.0;
	#endif
	float clearcoatInv = 1.0 - clearcoatDHR;
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	BRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,sC=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointDirectLightIrradiance( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotDirectLightIrradiance( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,oC=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			lightMapIrradiance *= PI;
		#endif
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );
	#ifdef CLEARCOAT
		clearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );
	#endif
#endif`,aC=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,cC=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,lC=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,uC=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,fC=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,hC=`#ifdef USE_MAP
	vec4 texelColor = texture2D( map, vUv );
	texelColor = mapTexelToLinear( texelColor );
	diffuseColor *= texelColor;
#endif`,dC=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,pC=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	vec4 mapTexel = texture2D( map, uv );
	diffuseColor *= mapTexelToLinear( mapTexel );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,mC=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,gC=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,xC=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,vC=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
	objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
	objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
	objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
#endif`,bC=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifndef USE_MORPHNORMALS
		uniform float morphTargetInfluences[ 8 ];
	#else
		uniform float morphTargetInfluences[ 4 ];
	#endif
#endif`,yC=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	transformed += morphTarget0 * morphTargetInfluences[ 0 ];
	transformed += morphTarget1 * morphTargetInfluences[ 1 ];
	transformed += morphTarget2 * morphTargetInfluences[ 2 ];
	transformed += morphTarget3 * morphTargetInfluences[ 3 ];
	#ifndef USE_MORPHNORMALS
		transformed += morphTarget4 * morphTargetInfluences[ 4 ];
		transformed += morphTarget5 * morphTargetInfluences[ 5 ];
		transformed += morphTarget6 * morphTargetInfluences[ 6 ];
		transformed += morphTarget7 * morphTargetInfluences[ 7 ];
	#endif
#endif`,_C=`#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
			bitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,MC=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( -vViewPosition, normal, mapN );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );
#endif`,wC=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		float scale = sign( st1.t * st0.s - st0.t * st1.s );
		vec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );
		vec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );
		vec3 N = normalize( surf_norm );
		mat3 tsn = mat3( S, T, N );
		mapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		return normalize( tsn * mapN );
	}
#endif`,SC=`#ifdef CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,EC=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );
	#endif
#endif`,TC=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,AC=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return (( near + viewZ ) * far ) / (( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,LC=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,CC=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,RC=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,PC=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,IC=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,DC=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,OC=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,FC=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,NC=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,BC=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,UC=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,zC=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform highp sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif`,GC=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,kC=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,HC=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,VC=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,WC=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,qC=`#ifndef saturate
#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,$C=`#ifdef USE_TRANSMISSIONMAP
	totalTransmission *= texture2D( transmissionMap, vUv ).r;
#endif`,jC=`#ifdef USE_TRANSMISSIONMAP
	uniform sampler2D transmissionMap;
#endif`,XC=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,YC=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,ZC=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,JC=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,KC=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,QC=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,eR=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`,tR=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,nR=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,iR=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,rR=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,sR=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,oR=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,aR=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,cR=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,lR=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	vec4 texColor = texture2D( tEquirect, sampleUV );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,uR=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,fR=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,hR=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,dR=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
	
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,pR=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <skinbase_vertex>
	#ifdef USE_ENVMAP
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,mR=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,gR=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,xR=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <fog_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
		matcapColor = matcapTexelToLinear( matcapColor );
	#else
		vec4 matcapColor = vec4( 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,vR=`#define MATCAP
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#ifndef FLAT_SHADED
		vNormal = normalize( transformedNormal );
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,bR=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,yR=`#define TOON
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,_R=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,MR=`#define PHONG
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,wR=`#define STANDARD
#ifdef PHYSICAL
	#define REFLECTIVITY
	#define CLEARCOAT
	#define TRANSMISSION
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef TRANSMISSION
	uniform float transmission;
#endif
#ifdef REFLECTIVITY
	uniform float reflectivity;
#endif
#ifdef CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheen;
#endif
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <transmissionmap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <lights_physical_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#ifdef TRANSMISSION
		float totalTransmission = transmission;
	#endif
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <transmissionmap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#ifdef TRANSMISSION
		diffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );
	#endif
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,SR=`#define STANDARD
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,ER=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <packing>
#include <uv_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
}`,TR=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,AR=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,LR=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,CR=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,RR=`#include <common>
#include <fog_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <begin_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,PR=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,IR=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`;const nt={alphamap_fragment:hL,alphamap_pars_fragment:dL,alphatest_fragment:pL,aomap_fragment:mL,aomap_pars_fragment:gL,begin_vertex:xL,beginnormal_vertex:vL,bsdfs:bL,bumpmap_pars_fragment:yL,clipping_planes_fragment:_L,clipping_planes_pars_fragment:ML,clipping_planes_pars_vertex:wL,clipping_planes_vertex:SL,color_fragment:EL,color_pars_fragment:TL,color_pars_vertex:AL,color_vertex:LL,common:CL,cube_uv_reflection_fragment:RL,defaultnormal_vertex:PL,displacementmap_pars_vertex:IL,displacementmap_vertex:DL,emissivemap_fragment:OL,emissivemap_pars_fragment:FL,encodings_fragment:NL,encodings_pars_fragment:BL,envmap_fragment:UL,envmap_common_pars_fragment:zL,envmap_pars_fragment:GL,envmap_pars_vertex:kL,envmap_physical_pars_fragment:KL,envmap_vertex:HL,fog_vertex:VL,fog_pars_vertex:WL,fog_fragment:qL,fog_pars_fragment:$L,gradientmap_pars_fragment:jL,lightmap_fragment:XL,lightmap_pars_fragment:YL,lights_lambert_vertex:ZL,lights_pars_begin:JL,lights_toon_fragment:QL,lights_toon_pars_fragment:eC,lights_phong_fragment:tC,lights_phong_pars_fragment:nC,lights_physical_fragment:iC,lights_physical_pars_fragment:rC,lights_fragment_begin:sC,lights_fragment_maps:oC,lights_fragment_end:aC,logdepthbuf_fragment:cC,logdepthbuf_pars_fragment:lC,logdepthbuf_pars_vertex:uC,logdepthbuf_vertex:fC,map_fragment:hC,map_pars_fragment:dC,map_particle_fragment:pC,map_particle_pars_fragment:mC,metalnessmap_fragment:gC,metalnessmap_pars_fragment:xC,morphnormal_vertex:vC,morphtarget_pars_vertex:bC,morphtarget_vertex:yC,normal_fragment_begin:_C,normal_fragment_maps:MC,normalmap_pars_fragment:wC,clearcoat_normal_fragment_begin:SC,clearcoat_normal_fragment_maps:EC,clearcoat_pars_fragment:TC,packing:AC,premultiplied_alpha_fragment:LC,project_vertex:CC,dithering_fragment:RC,dithering_pars_fragment:PC,roughnessmap_fragment:IC,roughnessmap_pars_fragment:DC,shadowmap_pars_fragment:OC,shadowmap_pars_vertex:FC,shadowmap_vertex:NC,shadowmask_pars_fragment:BC,skinbase_vertex:UC,skinning_pars_vertex:zC,skinning_vertex:GC,skinnormal_vertex:kC,specularmap_fragment:HC,specularmap_pars_fragment:VC,tonemapping_fragment:WC,tonemapping_pars_fragment:qC,transmissionmap_fragment:$C,transmissionmap_pars_fragment:jC,uv_pars_fragment:XC,uv_pars_vertex:YC,uv_vertex:ZC,uv2_pars_fragment:JC,uv2_pars_vertex:KC,uv2_vertex:QC,worldpos_vertex:eR,background_frag:tR,background_vert:nR,cube_frag:iR,cube_vert:rR,depth_frag:sR,depth_vert:oR,distanceRGBA_frag:aR,distanceRGBA_vert:cR,equirect_frag:lR,equirect_vert:uR,linedashed_frag:fR,linedashed_vert:hR,meshbasic_frag:dR,meshbasic_vert:pR,meshlambert_frag:mR,meshlambert_vert:gR,meshmatcap_frag:xR,meshmatcap_vert:vR,meshtoon_frag:bR,meshtoon_vert:yR,meshphong_frag:_R,meshphong_vert:MR,meshphysical_frag:wR,meshphysical_vert:SR,normal_frag:ER,normal_vert:TR,points_frag:AR,points_vert:LR,shadow_frag:CR,shadow_vert:RR,sprite_frag:PR,sprite_vert:IR},De={common:{diffuse:{value:new Ge(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new vn},uv2Transform:{value:new vn},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Ee(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ge(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ge(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new vn}},sprite:{diffuse:{value:new Ge(15658734)},opacity:{value:1},center:{value:new Ee(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new vn}}},Hn={basic:{uniforms:kt([De.common,De.specularmap,De.envmap,De.aomap,De.lightmap,De.fog]),vertexShader:nt.meshbasic_vert,fragmentShader:nt.meshbasic_frag},lambert:{uniforms:kt([De.common,De.specularmap,De.envmap,De.aomap,De.lightmap,De.emissivemap,De.fog,De.lights,{emissive:{value:new Ge(0)}}]),vertexShader:nt.meshlambert_vert,fragmentShader:nt.meshlambert_frag},phong:{uniforms:kt([De.common,De.specularmap,De.envmap,De.aomap,De.lightmap,De.emissivemap,De.bumpmap,De.normalmap,De.displacementmap,De.fog,De.lights,{emissive:{value:new Ge(0)},specular:{value:new Ge(1118481)},shininess:{value:30}}]),vertexShader:nt.meshphong_vert,fragmentShader:nt.meshphong_frag},standard:{uniforms:kt([De.common,De.envmap,De.aomap,De.lightmap,De.emissivemap,De.bumpmap,De.normalmap,De.displacementmap,De.roughnessmap,De.metalnessmap,De.fog,De.lights,{emissive:{value:new Ge(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:nt.meshphysical_vert,fragmentShader:nt.meshphysical_frag},toon:{uniforms:kt([De.common,De.aomap,De.lightmap,De.emissivemap,De.bumpmap,De.normalmap,De.displacementmap,De.gradientmap,De.fog,De.lights,{emissive:{value:new Ge(0)}}]),vertexShader:nt.meshtoon_vert,fragmentShader:nt.meshtoon_frag},matcap:{uniforms:kt([De.common,De.bumpmap,De.normalmap,De.displacementmap,De.fog,{matcap:{value:null}}]),vertexShader:nt.meshmatcap_vert,fragmentShader:nt.meshmatcap_frag},points:{uniforms:kt([De.points,De.fog]),vertexShader:nt.points_vert,fragmentShader:nt.points_frag},dashed:{uniforms:kt([De.common,De.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:nt.linedashed_vert,fragmentShader:nt.linedashed_frag},depth:{uniforms:kt([De.common,De.displacementmap]),vertexShader:nt.depth_vert,fragmentShader:nt.depth_frag},normal:{uniforms:kt([De.common,De.bumpmap,De.normalmap,De.displacementmap,{opacity:{value:1}}]),vertexShader:nt.normal_vert,fragmentShader:nt.normal_frag},sprite:{uniforms:kt([De.sprite,De.fog]),vertexShader:nt.sprite_vert,fragmentShader:nt.sprite_frag},background:{uniforms:{uvTransform:{value:new vn},t2D:{value:null}},vertexShader:nt.background_vert,fragmentShader:nt.background_frag},cube:{uniforms:kt([De.envmap,{opacity:{value:1}}]),vertexShader:nt.cube_vert,fragmentShader:nt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:nt.equirect_vert,fragmentShader:nt.equirect_frag},distanceRGBA:{uniforms:kt([De.common,De.displacementmap,{referencePosition:{value:new F},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:nt.distanceRGBA_vert,fragmentShader:nt.distanceRGBA_frag},shadow:{uniforms:kt([De.lights,De.fog,{color:{value:new Ge(0)},opacity:{value:1}}]),vertexShader:nt.shadow_vert,fragmentShader:nt.shadow_frag}};Hn.physical={uniforms:kt([Hn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Ee(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new Ge(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:nt.meshphysical_vert,fragmentShader:nt.meshphysical_frag};function DR(n,e,t,i,r){const s=new Ge(0);let o=0,a,l,c=null,u=0,f=null;function h(p,g,m,v){let x=g.isScene===!0?g.background:null;x&&x.isTexture&&(x=e.get(x));const M=n.xr,b=M.getSession&&M.getSession();b&&b.environmentBlendMode==="additive"&&(x=null),x===null?d(s,o):x&&x.isColor&&(d(x,1),v=!0),(n.autoClear||v)&&n.clear(n.autoClearColor,n.autoClearDepth,n.autoClearStencil),x&&(x.isCubeTexture||x.isWebGLCubeRenderTarget||x.mapping===Yo)?(l===void 0&&(l=new xt(new fs(1,1,1),new en({name:"BackgroundCubeMaterial",uniforms:Co(Hn.cube.uniforms),vertexShader:Hn.cube.vertexShader,fragmentShader:Hn.cube.fragmentShader,side:Rt,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),l.geometry.deleteAttribute("uv"),l.onBeforeRender=function(w,y,_){this.matrixWorld.copyPosition(_.matrixWorld)},Object.defineProperty(l.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(l)),x.isWebGLCubeRenderTarget&&(x=x.texture),l.material.uniforms.envMap.value=x,l.material.uniforms.flipEnvMap.value=x.isCubeTexture&&x._needsFlipEnvMap?-1:1,(c!==x||u!==x.version||f!==n.toneMapping)&&(l.material.needsUpdate=!0,c=x,u=x.version,f=n.toneMapping),p.unshift(l,l.geometry,l.material,0,0,null)):x&&x.isTexture&&(a===void 0&&(a=new xt(new qa(2,2),new en({name:"BackgroundMaterial",uniforms:Co(Hn.background.uniforms),vertexShader:Hn.background.vertexShader,fragmentShader:Hn.background.fragmentShader,side:Xo,depthTest:!1,depthWrite:!1,fog:!1})),a.geometry.deleteAttribute("normal"),Object.defineProperty(a.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(a)),a.material.uniforms.t2D.value=x,x.matrixAutoUpdate===!0&&x.updateMatrix(),a.material.uniforms.uvTransform.value.copy(x.matrix),(c!==x||u!==x.version||f!==n.toneMapping)&&(a.material.needsUpdate=!0,c=x,u=x.version,f=n.toneMapping),p.unshift(a,a.geometry,a.material,0,0,null))}function d(p,g){t.buffers.color.setClear(p.r,p.g,p.b,g,r)}return{getClearColor:function(){return s},setClearColor:function(p,g=1){s.set(p),o=g,d(s,o)},getClearAlpha:function(){return o},setClearAlpha:function(p){o=p,d(s,o)},render:h}}function OR(n,e,t,i){const r=n.getParameter(34921),s=i.isWebGL2?null:e.get("OES_vertex_array_object"),o=i.isWebGL2||s!==null,a={},l=g(null);let c=l;function u(q,L,N,G,X){let K=!1;if(o){const j=p(G,N,L);c!==j&&(c=j,h(c.object)),K=m(G,X),K&&v(G,X)}else{const j=L.wireframe===!0;(c.geometry!==G.id||c.program!==N.id||c.wireframe!==j)&&(c.geometry=G.id,c.program=N.id,c.wireframe=j,K=!0)}q.isInstancedMesh===!0&&(K=!0),X!==null&&t.update(X,34963),K&&(_(q,L,N,G),X!==null&&n.bindBuffer(34963,t.get(X).buffer))}function f(){return i.isWebGL2?n.createVertexArray():s.createVertexArrayOES()}function h(q){return i.isWebGL2?n.bindVertexArray(q):s.bindVertexArrayOES(q)}function d(q){return i.isWebGL2?n.deleteVertexArray(q):s.deleteVertexArrayOES(q)}function p(q,L,N){const G=N.wireframe===!0;let X=a[q.id];X===void 0&&(X={},a[q.id]=X);let K=X[L.id];K===void 0&&(K={},X[L.id]=K);let j=K[G];return j===void 0&&(j=g(f()),K[G]=j),j}function g(q){const L=[],N=[],G=[];for(let X=0;X<r;X++)L[X]=0,N[X]=0,G[X]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:L,enabledAttributes:N,attributeDivisors:G,object:q,attributes:{},index:null}}function m(q,L){const N=c.attributes,G=q.attributes;let X=0;for(const K in G){const j=N[K],ee=G[K];if(j===void 0||j.attribute!==ee||j.data!==ee.data)return!0;X++}return c.attributesNum!==X||c.index!==L}function v(q,L){const N={},G=q.attributes;let X=0;for(const K in G){const j=G[K],ee={};ee.attribute=j,j.data&&(ee.data=j.data),N[K]=ee,X++}c.attributes=N,c.attributesNum=X,c.index=L}function x(){const q=c.newAttributes;for(let L=0,N=q.length;L<N;L++)q[L]=0}function M(q){b(q,0)}function b(q,L){const N=c.newAttributes,G=c.enabledAttributes,X=c.attributeDivisors;N[q]=1,G[q]===0&&(n.enableVertexAttribArray(q),G[q]=1),X[q]!==L&&((i.isWebGL2?n:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](q,L),X[q]=L)}function w(){const q=c.newAttributes,L=c.enabledAttributes;for(let N=0,G=L.length;N<G;N++)L[N]!==q[N]&&(n.disableVertexAttribArray(N),L[N]=0)}function y(q,L,N,G,X,K){i.isWebGL2===!0&&(N===5124||N===5125)?n.vertexAttribIPointer(q,L,N,X,K):n.vertexAttribPointer(q,L,N,G,X,K)}function _(q,L,N,G){if(i.isWebGL2===!1&&(q.isInstancedMesh||G.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;x();const X=G.attributes,K=N.getAttributes(),j=L.defaultAttributeValues;for(const ee in K){const P=K[ee];if(P>=0){const V=X[ee];if(V!==void 0){const Y=V.normalized,Q=V.itemSize,B=t.get(V);if(B===void 0)continue;const oe=B.buffer,Se=B.type,we=B.bytesPerElement;if(V.isInterleavedBufferAttribute){const ye=V.data,_e=ye.stride,Ie=V.offset;ye&&ye.isInstancedInterleavedBuffer?(b(P,ye.meshPerAttribute),G._maxInstanceCount===void 0&&(G._maxInstanceCount=ye.meshPerAttribute*ye.count)):M(P),n.bindBuffer(34962,oe),y(P,Q,Se,Y,_e*we,Ie*we)}else V.isInstancedBufferAttribute?(b(P,V.meshPerAttribute),G._maxInstanceCount===void 0&&(G._maxInstanceCount=V.meshPerAttribute*V.count)):M(P),n.bindBuffer(34962,oe),y(P,Q,Se,Y,0,0)}else if(ee==="instanceMatrix"){const Y=t.get(q.instanceMatrix);if(Y===void 0)continue;const Q=Y.buffer,B=Y.type;b(P+0,1),b(P+1,1),b(P+2,1),b(P+3,1),n.bindBuffer(34962,Q),n.vertexAttribPointer(P+0,4,B,!1,64,0),n.vertexAttribPointer(P+1,4,B,!1,64,16),n.vertexAttribPointer(P+2,4,B,!1,64,32),n.vertexAttribPointer(P+3,4,B,!1,64,48)}else if(ee==="instanceColor"){const Y=t.get(q.instanceColor);if(Y===void 0)continue;const Q=Y.buffer,B=Y.type;b(P,1),n.bindBuffer(34962,Q),n.vertexAttribPointer(P,3,B,!1,12,0)}else if(j!==void 0){const Y=j[ee];if(Y!==void 0)switch(Y.length){case 2:n.vertexAttrib2fv(P,Y);break;case 3:n.vertexAttrib3fv(P,Y);break;case 4:n.vertexAttrib4fv(P,Y);break;default:n.vertexAttrib1fv(P,Y)}}}}w()}function S(){I();for(const q in a){const L=a[q];for(const N in L){const G=L[N];for(const X in G)d(G[X].object),delete G[X];delete L[N]}delete a[q]}}function E(q){if(a[q.id]===void 0)return;const L=a[q.id];for(const N in L){const G=L[N];for(const X in G)d(G[X].object),delete G[X];delete L[N]}delete a[q.id]}function R(q){for(const L in a){const N=a[L];if(N[q.id]===void 0)continue;const G=N[q.id];for(const X in G)d(G[X].object),delete G[X];delete N[q.id]}}function I(){$(),c!==l&&(c=l,h(c.object))}function $(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:u,reset:I,resetDefaultState:$,dispose:S,releaseStatesOfGeometry:E,releaseStatesOfProgram:R,initAttributes:x,enableAttribute:M,disableUnusedAttributes:w}}function FR(n,e,t,i){const r=i.isWebGL2;let s;function o(c){s=c}function a(c,u){n.drawArrays(s,c,u),t.update(u,s,1)}function l(c,u,f){if(f===0)return;let h,d;if(r)h=n,d="drawArraysInstanced";else if(h=e.get("ANGLE_instanced_arrays"),d="drawArraysInstancedANGLE",h===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}h[d](s,c,u,f),t.update(u,s,f)}this.setMode=o,this.render=a,this.renderInstances=l}function NR(n,e,t){let i;function r(){if(i!==void 0)return i;const y=e.get("EXT_texture_filter_anisotropic");return y!==null?i=n.getParameter(y.MAX_TEXTURE_MAX_ANISOTROPY_EXT):i=0,i}function s(y){if(y==="highp"){if(n.getShaderPrecisionFormat(35633,36338).precision>0&&n.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";y="mediump"}return y==="mediump"&&n.getShaderPrecisionFormat(35633,36337).precision>0&&n.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&n instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext<"u"&&n instanceof WebGL2ComputeRenderingContext;let a=t.precision!==void 0?t.precision:"highp";const l=s(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const c=t.logarithmicDepthBuffer===!0,u=n.getParameter(34930),f=n.getParameter(35660),h=n.getParameter(3379),d=n.getParameter(34076),p=n.getParameter(34921),g=n.getParameter(36347),m=n.getParameter(36348),v=n.getParameter(36349),x=f>0,M=o||!!e.get("OES_texture_float"),b=x&&M,w=o?n.getParameter(36183):0;return{isWebGL2:o,getMaxAnisotropy:r,getMaxPrecision:s,precision:a,logarithmicDepthBuffer:c,maxTextures:u,maxVertexTextures:f,maxTextureSize:h,maxCubemapSize:d,maxAttributes:p,maxVertexUniforms:g,maxVaryings:m,maxFragmentUniforms:v,vertexTextures:x,floatFragmentTextures:M,floatVertexTextures:b,maxSamples:w}}function BR(n){const e=this;let t=null,i=0,r=!1,s=!1;const o=new ri,a=new vn,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(f,h,d){const p=f.length!==0||h||i!==0||r;return r=h,t=u(f,d,0),i=f.length,p},this.beginShadows=function(){s=!0,u(null)},this.endShadows=function(){s=!1,c()},this.setState=function(f,h,d){const p=f.clippingPlanes,g=f.clipIntersection,m=f.clipShadows,v=n.get(f);if(!r||p===null||p.length===0||s&&!m)s?u(null):c();else{const x=s?0:i,M=x*4;let b=v.clippingState||null;l.value=b,b=u(p,h,M,d);for(let w=0;w!==M;++w)b[w]=t[w];v.clippingState=b,this.numIntersection=g?this.numPlanes:0,this.numPlanes+=x}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function u(f,h,d,p){const g=f!==null?f.length:0;let m=null;if(g!==0){if(m=l.value,p!==!0||m===null){const v=d+g*4,x=h.matrixWorldInverse;a.getNormalMatrix(x),(m===null||m.length<v)&&(m=new Float32Array(v));for(let M=0,b=d;M!==g;++M,b+=4)o.copy(f[M]).applyMatrix4(x,a),o.normal.toArray(m,b),m[b+3]=o.constant}l.value=m,l.needsUpdate=!0}return e.numPlanes=g,e.numIntersection=0,m}}function UR(n){let e=new WeakMap;function t(o,a){return a===jl?o.mapping=yc:a===Xl&&(o.mapping=_c),o}function i(o){if(o&&o.isTexture){const a=o.mapping;if(a===jl||a===Xl)if(e.has(o)){const l=e.get(o).texture;return t(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=n.getRenderList(),u=n.getRenderTarget(),f=new wm(l.height/2);return f.fromEquirectangularTexture(n,o),e.set(o,f),n.setRenderTarget(u),n.setRenderList(c),o.addEventListener("dispose",r),t(f.texture,o.mapping)}else return null}}return o}function r(o){const a=o.target;a.removeEventListener("dispose",r);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function s(){e=new WeakMap}return{get:i,dispose:s}}function zR(n){const e={};function t(i){if(e[i]!==void 0)return e[i];let r;switch(i){case"WEBGL_depth_texture":r=n.getExtension("WEBGL_depth_texture")||n.getExtension("MOZ_WEBGL_depth_texture")||n.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=n.getExtension("WEBGL_compressed_texture_pvrtc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=n.getExtension(i)}return e[i]=r,r}return{has:function(i){return t(i)!==null},init:function(i){i.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float")},get:function(i){const r=t(i);return r===null&&console.warn("THREE.WebGLRenderer: "+i+" extension not supported."),r}}}function GR(n,e,t,i){const r={},s=new WeakMap;function o(f){const h=f.target;h.index!==null&&e.remove(h.index);for(const p in h.attributes)e.remove(h.attributes[p]);h.removeEventListener("dispose",o),delete r[h.id];const d=s.get(h);d&&(e.remove(d),s.delete(h)),i.releaseStatesOfGeometry(h),h.isInstancedBufferGeometry===!0&&delete h._maxInstanceCount,t.memory.geometries--}function a(f,h){return r[h.id]===!0||(h.addEventListener("dispose",o),r[h.id]=!0,t.memory.geometries++),h}function l(f){const h=f.attributes;for(const p in h)e.update(h[p],34962);const d=f.morphAttributes;for(const p in d){const g=d[p];for(let m=0,v=g.length;m<v;m++)e.update(g[m],34962)}}function c(f){const h=[],d=f.index,p=f.attributes.position;let g=0;if(d!==null){const x=d.array;g=d.version;for(let M=0,b=x.length;M<b;M+=3){const w=x[M+0],y=x[M+1],_=x[M+2];h.push(w,y,y,_,_,w)}}else{const x=p.array;g=p.version;for(let M=0,b=x.length/3-1;M<b;M+=3){const w=M+0,y=M+1,_=M+2;h.push(w,y,y,_,_,w)}}const m=new(g1(h)>65535?us:ls)(h,1);m.version=g;const v=s.get(f);v&&e.remove(v),s.set(f,m)}function u(f){const h=s.get(f);if(h){const d=f.index;d!==null&&h.version<d.version&&c(f)}else c(f);return s.get(f)}return{get:a,update:l,getWireframeAttribute:u}}function kR(n,e,t,i){const r=i.isWebGL2;let s;function o(h){s=h}let a,l;function c(h){a=h.type,l=h.bytesPerElement}function u(h,d){n.drawElements(s,d,a,h*l),t.update(d,s,1)}function f(h,d,p){if(p===0)return;let g,m;if(r)g=n,m="drawElementsInstanced";else if(g=e.get("ANGLE_instanced_arrays"),m="drawElementsInstancedANGLE",g===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}g[m](s,d,a,h*l,p),t.update(d,s,p)}this.setMode=o,this.setIndex=c,this.render=u,this.renderInstances=f}function HR(n){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function i(s,o,a){switch(t.calls++,o){case 4:t.triangles+=a*(s/3);break;case 1:t.lines+=a*(s/2);break;case 3:t.lines+=a*(s-1);break;case 2:t.lines+=a*s;break;case 0:t.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function r(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:r,update:i}}function VR(n,e){return n[0]-e[0]}function WR(n,e){return Math.abs(e[1])-Math.abs(n[1])}function qR(n){const e={},t=new Float32Array(8),i=[];for(let s=0;s<8;s++)i[s]=[s,0];function r(s,o,a,l){const c=s.morphTargetInfluences,u=c===void 0?0:c.length;let f=e[o.id];if(f===void 0){f=[];for(let m=0;m<u;m++)f[m]=[m,0];e[o.id]=f}for(let m=0;m<u;m++){const v=f[m];v[0]=m,v[1]=c[m]}f.sort(WR);for(let m=0;m<8;m++)m<u&&f[m][1]?(i[m][0]=f[m][0],i[m][1]=f[m][1]):(i[m][0]=Number.MAX_SAFE_INTEGER,i[m][1]=0);i.sort(VR);const h=a.morphTargets&&o.morphAttributes.position,d=a.morphNormals&&o.morphAttributes.normal;let p=0;for(let m=0;m<8;m++){const v=i[m],x=v[0],M=v[1];x!==Number.MAX_SAFE_INTEGER&&M?(h&&o.getAttribute("morphTarget"+m)!==h[x]&&o.setAttribute("morphTarget"+m,h[x]),d&&o.getAttribute("morphNormal"+m)!==d[x]&&o.setAttribute("morphNormal"+m,d[x]),t[m]=M,p+=M):(h&&o.hasAttribute("morphTarget"+m)===!0&&o.deleteAttribute("morphTarget"+m),d&&o.hasAttribute("morphNormal"+m)===!0&&o.deleteAttribute("morphNormal"+m),t[m]=0)}const g=o.morphTargetsRelative?1:1-p;l.getUniforms().setValue(n,"morphTargetBaseInfluence",g),l.getUniforms().setValue(n,"morphTargetInfluences",t)}return{update:r}}function $R(n,e,t,i){let r=new WeakMap;function s(l){const c=i.render.frame,u=l.geometry,f=e.get(l,u);return r.get(f)!==c&&(e.update(f),r.set(f,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),t.update(l.instanceMatrix,34962),l.instanceColor!==null&&t.update(l.instanceColor,34962)),f}function o(){r=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:s,dispose:o}}function Ro(n=null,e=1,t=1,i=1){ht.call(this,null),this.image={data:n,width:e,height:t,depth:i},this.magFilter=Dt,this.minFilter=Dt,this.wrapR=Zt,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}Ro.prototype=Object.create(ht.prototype);Ro.prototype.constructor=Ro;Ro.prototype.isDataTexture2DArray=!0;function Po(n=null,e=1,t=1,i=1){ht.call(this,null),this.image={data:n,width:e,height:t,depth:i},this.magFilter=Dt,this.minFilter=Dt,this.wrapR=Zt,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}Po.prototype=Object.create(ht.prototype);Po.prototype.constructor=Po;Po.prototype.isDataTexture3D=!0;const b1=new ht,jR=new Ro,XR=new Po,y1=new fi,ev=[],tv=[],nv=new Float32Array(16),iv=new Float32Array(9),rv=new Float32Array(4);function ea(n,e,t){const i=n[0];if(i<=0||i>0)return n;const r=e*t;let s=ev[r];if(s===void 0&&(s=new Float32Array(r),ev[r]=s),e!==0){i.toArray(s,0);for(let o=1,a=0;o!==e;++o)a+=t,n[o].toArray(s,a)}return s}function Pn(n,e){if(n.length!==e.length)return!1;for(let t=0,i=n.length;t<i;t++)if(n[t]!==e[t])return!1;return!0}function wn(n,e){for(let t=0,i=e.length;t<i;t++)n[t]=e[t]}function _1(n,e){let t=tv[e];t===void 0&&(t=new Int32Array(e),tv[e]=t);for(let i=0;i!==e;++i)t[i]=n.allocateTextureUnit();return t}function YR(n,e){const t=this.cache;t[0]!==e&&(n.uniform1f(this.addr,e),t[0]=e)}function ZR(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Pn(t,e))return;n.uniform2fv(this.addr,e),wn(t,e)}}function JR(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(n.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(Pn(t,e))return;n.uniform3fv(this.addr,e),wn(t,e)}}function KR(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Pn(t,e))return;n.uniform4fv(this.addr,e),wn(t,e)}}function QR(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(Pn(t,e))return;n.uniformMatrix2fv(this.addr,!1,e),wn(t,e)}else{if(Pn(t,i))return;rv.set(i),n.uniformMatrix2fv(this.addr,!1,rv),wn(t,i)}}function e4(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(Pn(t,e))return;n.uniformMatrix3fv(this.addr,!1,e),wn(t,e)}else{if(Pn(t,i))return;iv.set(i),n.uniformMatrix3fv(this.addr,!1,iv),wn(t,i)}}function t4(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(Pn(t,e))return;n.uniformMatrix4fv(this.addr,!1,e),wn(t,e)}else{if(Pn(t,i))return;nv.set(i),n.uniformMatrix4fv(this.addr,!1,nv),wn(t,i)}}function n4(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.safeSetTexture2D(e||b1,r)}function i4(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTexture2DArray(e||jR,r)}function r4(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTexture3D(e||XR,r)}function s4(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.safeSetTextureCube(e||y1,r)}function o4(n,e){const t=this.cache;t[0]!==e&&(n.uniform1i(this.addr,e),t[0]=e)}function a4(n,e){const t=this.cache;Pn(t,e)||(n.uniform2iv(this.addr,e),wn(t,e))}function c4(n,e){const t=this.cache;Pn(t,e)||(n.uniform3iv(this.addr,e),wn(t,e))}function l4(n,e){const t=this.cache;Pn(t,e)||(n.uniform4iv(this.addr,e),wn(t,e))}function u4(n,e){const t=this.cache;t[0]!==e&&(n.uniform1ui(this.addr,e),t[0]=e)}function f4(n){switch(n){case 5126:return YR;case 35664:return ZR;case 35665:return JR;case 35666:return KR;case 35674:return QR;case 35675:return e4;case 35676:return t4;case 5124:case 35670:return o4;case 35667:case 35671:return a4;case 35668:case 35672:return c4;case 35669:case 35673:return l4;case 5125:return u4;case 35678:case 36198:case 36298:case 36306:case 35682:return n4;case 35679:case 36299:case 36307:return r4;case 35680:case 36300:case 36308:case 36293:return s4;case 36289:case 36303:case 36311:case 36292:return i4}}function h4(n,e){n.uniform1fv(this.addr,e)}function d4(n,e){n.uniform1iv(this.addr,e)}function p4(n,e){n.uniform2iv(this.addr,e)}function m4(n,e){n.uniform3iv(this.addr,e)}function g4(n,e){n.uniform4iv(this.addr,e)}function x4(n,e){const t=ea(e,this.size,2);n.uniform2fv(this.addr,t)}function v4(n,e){const t=ea(e,this.size,3);n.uniform3fv(this.addr,t)}function b4(n,e){const t=ea(e,this.size,4);n.uniform4fv(this.addr,t)}function y4(n,e){const t=ea(e,this.size,4);n.uniformMatrix2fv(this.addr,!1,t)}function _4(n,e){const t=ea(e,this.size,9);n.uniformMatrix3fv(this.addr,!1,t)}function M4(n,e){const t=ea(e,this.size,16);n.uniformMatrix4fv(this.addr,!1,t)}function w4(n,e,t){const i=e.length,r=_1(t,i);n.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)t.safeSetTexture2D(e[s]||b1,r[s])}function S4(n,e,t){const i=e.length,r=_1(t,i);n.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)t.safeSetTextureCube(e[s]||y1,r[s])}function E4(n){switch(n){case 5126:return h4;case 35664:return x4;case 35665:return v4;case 35666:return b4;case 35674:return y4;case 35675:return _4;case 35676:return M4;case 5124:case 35670:return d4;case 35667:case 35671:return p4;case 35668:case 35672:return m4;case 35669:case 35673:return g4;case 35678:case 36198:case 36298:case 36306:case 35682:return w4;case 35680:case 36300:case 36308:case 36293:return S4}}function T4(n,e,t){this.id=n,this.addr=t,this.cache=[],this.setValue=f4(e.type)}function M1(n,e,t){this.id=n,this.addr=t,this.cache=[],this.size=e.size,this.setValue=E4(e.type)}M1.prototype.updateCache=function(n){const e=this.cache;n instanceof Float32Array&&e.length!==n.length&&(this.cache=new Float32Array(n.length)),wn(e,n)};function w1(n){this.id=n,this.seq=[],this.map={}}w1.prototype.setValue=function(n,e,t){const i=this.seq;for(let r=0,s=i.length;r!==s;++r){const o=i[r];o.setValue(n,e[o.id],t)}};const Dd=/(\w+)(\])?(\[|\.)?/g;function sv(n,e){n.seq.push(e),n.map[e.id]=e}function A4(n,e,t){const i=n.name,r=i.length;for(Dd.lastIndex=0;;){const s=Dd.exec(i),o=Dd.lastIndex;let a=s[1];const l=s[2]==="]",c=s[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===r){sv(t,c===void 0?new T4(a,n,e):new M1(a,n,e));break}else{let f=t.map[a];f===void 0&&(f=new w1(a),sv(t,f)),t=f}}}function hr(n,e){this.seq=[],this.map={};const t=n.getProgramParameter(e,35718);for(let i=0;i<t;++i){const r=n.getActiveUniform(e,i),s=n.getUniformLocation(e,r.name);A4(r,s,this)}}hr.prototype.setValue=function(n,e,t,i){const r=this.map[e];r!==void 0&&r.setValue(n,t,i)};hr.prototype.setOptional=function(n,e,t){const i=e[t];i!==void 0&&this.setValue(n,t,i)};hr.upload=function(n,e,t,i){for(let r=0,s=e.length;r!==s;++r){const o=e[r],a=t[o.id];a.needsUpdate!==!1&&o.setValue(n,a.value,i)}};hr.seqWithValue=function(n,e){const t=[];for(let i=0,r=n.length;i!==r;++i){const s=n[i];s.id in e&&t.push(s)}return t};function ov(n,e,t){const i=n.createShader(e);return n.shaderSource(i,t),n.compileShader(i),i}let L4=0;function C4(n){const e=n.split(`
`);for(let t=0;t<e.length;t++)e[t]=t+1+": "+e[t];return e.join(`
`)}function S1(n){switch(n){case Qt:return["Linear","( value )"];case wc:return["sRGB","( value )"];case Hu:return["RGBE","( value )"];case vm:return["RGBM","( value, 7.0 )"];case bm:return["RGBM","( value, 16.0 )"];case ym:return["RGBD","( value, 256.0 )"];case ku:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case u1:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",n),["Linear","( value )"]}}function av(n,e,t){const i=n.getShaderParameter(e,35713),r=n.getShaderInfoLog(e).trim();if(i&&r==="")return"";const s=n.getShaderSource(e);return"THREE.WebGLShader: gl.getShaderInfoLog() "+t+`
`+r+C4(s)}function ha(n,e){const t=S1(e);return"vec4 "+n+"( vec4 value ) { return "+t[0]+"ToLinear"+t[1]+"; }"}function R4(n,e){const t=S1(e);return"vec4 "+n+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function P4(n,e){let t;switch(e){case l_:t="Linear";break;case u_:t="Reinhard";break;case f_:t="OptimizedCineon";break;case h_:t="ACESFilmic";break;case d_:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+n+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function I4(n){return[n.extensionDerivatives||n.envMapCubeUV||n.bumpMap||n.tangentSpaceNormalMap||n.clearcoatNormalMap||n.flatShading||n.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(n.extensionFragDepth||n.logarithmicDepthBuffer)&&n.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",n.extensionDrawBuffers&&n.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Sa).join(`
`)}function D4(n){const e=[];for(const t in n){const i=n[t];i!==!1&&e.push("#define "+t+" "+i)}return e.join(`
`)}function O4(n,e){const t={},i=n.getProgramParameter(e,35721);for(let r=0;r<i;r++){const o=n.getActiveAttrib(e,r).name;t[o]=n.getAttribLocation(e,o)}return t}function Sa(n){return n!==""}function cv(n,e){return n.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function lv(n,e){return n.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const F4=/^[ \t]*#include +<([\w\d./]+)>/gm;function Mp(n){return n.replace(F4,N4)}function N4(n,e){const t=nt[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return Mp(t)}const B4=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,U4=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function uv(n){return n.replace(U4,E1).replace(B4,z4)}function z4(n,e,t,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),E1(n,e,t,i)}function E1(n,e,t,i){let r="";for(let s=parseInt(e);s<parseInt(t);s++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function fv(n){let e="precision "+n.precision+` float;
precision `+n.precision+" int;";return n.precision==="highp"?e+=`
#define HIGH_PRECISION`:n.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:n.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function G4(n){let e="SHADOWMAP_TYPE_BASIC";return n.shadowMapType===hm?e="SHADOWMAP_TYPE_PCF":n.shadowMapType===ky?e="SHADOWMAP_TYPE_PCF_SOFT":n.shadowMapType===mo&&(e="SHADOWMAP_TYPE_VSM"),e}function k4(n){let e="ENVMAP_TYPE_CUBE";if(n.envMap)switch(n.envMapMode){case yc:case _c:e="ENVMAP_TYPE_CUBE";break;case Yo:case Mc:e="ENVMAP_TYPE_CUBE_UV";break}return e}function H4(n){let e="ENVMAP_MODE_REFLECTION";if(n.envMap)switch(n.envMapMode){case _c:case Mc:e="ENVMAP_MODE_REFRACTION";break}return e}function V4(n){let e="ENVMAP_BLENDING_NONE";if(n.envMap)switch(n.combine){case bc:e="ENVMAP_BLENDING_MULTIPLY";break;case a_:e="ENVMAP_BLENDING_MIX";break;case c_:e="ENVMAP_BLENDING_ADD";break}return e}function W4(n,e,t,i){const r=n.getContext(),s=t.defines;let o=t.vertexShader,a=t.fragmentShader;const l=G4(t),c=k4(t),u=H4(t),f=V4(t),h=n.gammaFactor>0?n.gammaFactor:1,d=t.isWebGL2?"":I4(t),p=D4(s),g=r.createProgram();let m,v,x=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(m=[p].filter(Sa).join(`
`),m.length>0&&(m+=`
`),v=[d,p].filter(Sa).join(`
`),v.length>0&&(v+=`
`)):(m=[fv(t),"#define SHADER_NAME "+t.shaderName,p,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+h,"#define MAX_BONES "+t.maxBones,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.useVertexTexture?"#define BONE_TEXTURE":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#ifdef USE_COLOR","	attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Sa).join(`
`),v=[d,fv(t),"#define SHADER_NAME "+t.shaderName,p,t.alphaTest?"#define ALPHATEST "+t.alphaTest+(t.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+h,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+u:"",t.envMap?"#define "+f:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.sheen?"#define USE_SHEEN":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(t.extensionShaderTextureLOD||t.envMap)&&t.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==es?"#define TONE_MAPPING":"",t.toneMapping!==es?nt.tonemapping_pars_fragment:"",t.toneMapping!==es?P4("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",nt.encodings_pars_fragment,t.map?ha("mapTexelToLinear",t.mapEncoding):"",t.matcap?ha("matcapTexelToLinear",t.matcapEncoding):"",t.envMap?ha("envMapTexelToLinear",t.envMapEncoding):"",t.emissiveMap?ha("emissiveMapTexelToLinear",t.emissiveMapEncoding):"",t.lightMap?ha("lightMapTexelToLinear",t.lightMapEncoding):"",R4("linearToOutputTexel",t.outputEncoding),t.depthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Sa).join(`
`)),o=Mp(o),o=cv(o,t),o=lv(o,t),a=Mp(a),a=cv(a,t),a=lv(a,t),o=uv(o),a=uv(a),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(x=`#version 300 es
`,m=["#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,v=["#define varying in",t.glslVersion===_p?"":"out highp vec4 pc_fragColor;",t.glslVersion===_p?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+v);const M=x+m+o,b=x+v+a,w=ov(r,35633,M),y=ov(r,35632,b);if(r.attachShader(g,w),r.attachShader(g,y),t.index0AttributeName!==void 0?r.bindAttribLocation(g,0,t.index0AttributeName):t.morphTargets===!0&&r.bindAttribLocation(g,0,"position"),r.linkProgram(g),n.debug.checkShaderErrors){const E=r.getProgramInfoLog(g).trim(),R=r.getShaderInfoLog(w).trim(),I=r.getShaderInfoLog(y).trim();let $=!0,q=!0;if(r.getProgramParameter(g,35714)===!1){$=!1;const L=av(r,w,"vertex"),N=av(r,y,"fragment");console.error("THREE.WebGLProgram: shader error: ",r.getError(),"35715",r.getProgramParameter(g,35715),"gl.getProgramInfoLog",E,L,N)}else E!==""?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",E):(R===""||I==="")&&(q=!1);q&&(this.diagnostics={runnable:$,programLog:E,vertexShader:{log:R,prefix:m},fragmentShader:{log:I,prefix:v}})}r.deleteShader(w),r.deleteShader(y);let _;this.getUniforms=function(){return _===void 0&&(_=new hr(r,g)),_};let S;return this.getAttributes=function(){return S===void 0&&(S=O4(r,g)),S},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(g),this.program=void 0},this.name=t.shaderName,this.id=L4++,this.cacheKey=e,this.usedTimes=1,this.program=g,this.vertexShader=w,this.fragmentShader=y,this}function q4(n,e,t,i,r,s){const o=[],a=i.isWebGL2,l=i.logarithmicDepthBuffer,c=i.floatVertexTextures,u=i.maxVertexUniforms,f=i.vertexTextures;let h=i.precision;const d={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},p=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function g(y){const S=y.skeleton.bones;if(c)return 1024;{const R=Math.floor((u-20)/4),I=Math.min(R,S.length);return I<S.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+S.length+" bones. This GPU supports "+I+"."),0):I}}function m(y){let _;return y&&y.isTexture?_=y.encoding:y&&y.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),_=y.texture.encoding):_=Qt,_}function v(y,_,S,E,R){const I=E.fog,$=y.isMeshStandardMaterial?E.environment:null,q=e.get(y.envMap||$),L=d[y.type],N=R.isSkinnedMesh?g(R):0;y.precision!==null&&(h=i.getMaxPrecision(y.precision),h!==y.precision&&console.warn("THREE.WebGLProgram.getParameters:",y.precision,"not supported, using",h,"instead."));let G,X;if(L){const ee=Hn[L];G=ee.vertexShader,X=ee.fragmentShader}else G=y.vertexShader,X=y.fragmentShader;const K=n.getRenderTarget();return{isWebGL2:a,shaderID:L,shaderName:y.type,vertexShader:G,fragmentShader:X,defines:y.defines,isRawShaderMaterial:y.isRawShaderMaterial===!0,glslVersion:y.glslVersion,precision:h,instancing:R.isInstancedMesh===!0,instancingColor:R.isInstancedMesh===!0&&R.instanceColor!==null,supportsVertexTextures:f,outputEncoding:K!==null?m(K.texture):n.outputEncoding,map:!!y.map,mapEncoding:m(y.map),matcap:!!y.matcap,matcapEncoding:m(y.matcap),envMap:!!q,envMapMode:q&&q.mapping,envMapEncoding:m(q),envMapCubeUV:!!q&&(q.mapping===Yo||q.mapping===Mc),lightMap:!!y.lightMap,lightMapEncoding:m(y.lightMap),aoMap:!!y.aoMap,emissiveMap:!!y.emissiveMap,emissiveMapEncoding:m(y.emissiveMap),bumpMap:!!y.bumpMap,normalMap:!!y.normalMap,objectSpaceNormalMap:y.normalMapType===d1,tangentSpaceNormalMap:y.normalMapType===Ts,clearcoatMap:!!y.clearcoatMap,clearcoatRoughnessMap:!!y.clearcoatRoughnessMap,clearcoatNormalMap:!!y.clearcoatNormalMap,displacementMap:!!y.displacementMap,roughnessMap:!!y.roughnessMap,metalnessMap:!!y.metalnessMap,specularMap:!!y.specularMap,alphaMap:!!y.alphaMap,gradientMap:!!y.gradientMap,sheen:!!y.sheen,transmissionMap:!!y.transmissionMap,combine:y.combine,vertexTangents:y.normalMap&&y.vertexTangents,vertexColors:y.vertexColors,vertexUvs:!!y.map||!!y.bumpMap||!!y.normalMap||!!y.specularMap||!!y.alphaMap||!!y.emissiveMap||!!y.roughnessMap||!!y.metalnessMap||!!y.clearcoatMap||!!y.clearcoatRoughnessMap||!!y.clearcoatNormalMap||!!y.displacementMap||!!y.transmissionMap,uvsVertexOnly:!(y.map||y.bumpMap||y.normalMap||y.specularMap||y.alphaMap||y.emissiveMap||y.roughnessMap||y.metalnessMap||y.clearcoatNormalMap||y.transmissionMap)&&!!y.displacementMap,fog:!!I,useFog:y.fog,fogExp2:I&&I.isFogExp2,flatShading:y.flatShading,sizeAttenuation:y.sizeAttenuation,logarithmicDepthBuffer:l,skinning:y.skinning&&N>0,maxBones:N,useVertexTexture:c,morphTargets:y.morphTargets,morphNormals:y.morphNormals,maxMorphTargets:n.maxMorphTargets,maxMorphNormals:n.maxMorphNormals,numDirLights:_.directional.length,numPointLights:_.point.length,numSpotLights:_.spot.length,numRectAreaLights:_.rectArea.length,numHemiLights:_.hemi.length,numDirLightShadows:_.directionalShadowMap.length,numPointLightShadows:_.pointShadowMap.length,numSpotLightShadows:_.spotShadowMap.length,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,dithering:y.dithering,shadowMapEnabled:n.shadowMap.enabled&&S.length>0,shadowMapType:n.shadowMap.type,toneMapping:y.toneMapped?n.toneMapping:es,physicallyCorrectLights:n.physicallyCorrectLights,premultipliedAlpha:y.premultipliedAlpha,alphaTest:y.alphaTest,doubleSided:y.side===vc,flipSided:y.side===Rt,depthPacking:y.depthPacking!==void 0?y.depthPacking:!1,index0AttributeName:y.index0AttributeName,extensionDerivatives:y.extensions&&y.extensions.derivatives,extensionFragDepth:y.extensions&&y.extensions.fragDepth,extensionDrawBuffers:y.extensions&&y.extensions.drawBuffers,extensionShaderTextureLOD:y.extensions&&y.extensions.shaderTextureLOD,rendererExtensionFragDepth:a||t.has("EXT_frag_depth"),rendererExtensionDrawBuffers:a||t.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:a||t.has("EXT_shader_texture_lod"),customProgramCacheKey:y.customProgramCacheKey()}}function x(y){const _=[];if(y.shaderID?_.push(y.shaderID):(_.push(y.fragmentShader),_.push(y.vertexShader)),y.defines!==void 0)for(const S in y.defines)_.push(S),_.push(y.defines[S]);if(y.isRawShaderMaterial===!1){for(let S=0;S<p.length;S++)_.push(y[p[S]]);_.push(n.outputEncoding),_.push(n.gammaFactor)}return _.push(y.customProgramCacheKey),_.join()}function M(y){const _=d[y.type];let S;if(_){const E=Hn[_];S=x1.clone(E.uniforms)}else S=y.uniforms;return S}function b(y,_){let S;for(let E=0,R=o.length;E<R;E++){const I=o[E];if(I.cacheKey===_){S=I,++S.usedTimes;break}}return S===void 0&&(S=new W4(n,_,y,r),o.push(S)),S}function w(y){if(--y.usedTimes===0){const _=o.indexOf(y);o[_]=o[o.length-1],o.pop(),y.destroy()}}return{getParameters:v,getProgramCacheKey:x,getUniforms:M,acquireProgram:b,releaseProgram:w,programs:o}}function $4(){let n=new WeakMap;function e(s){let o=n.get(s);return o===void 0&&(o={},n.set(s,o)),o}function t(s){n.delete(s)}function i(s,o,a){n.get(s)[o]=a}function r(){n=new WeakMap}return{get:e,remove:t,update:i,dispose:r}}function j4(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.program!==e.program?n.program.id-e.program.id:n.material.id!==e.material.id?n.material.id-e.material.id:n.z!==e.z?n.z-e.z:n.id-e.id}function X4(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.z!==e.z?e.z-n.z:n.id-e.id}function hv(n){const e=[];let t=0;const i=[],r=[],s={id:-1};function o(){t=0,i.length=0,r.length=0}function a(h,d,p,g,m,v){let x=e[t];const M=n.get(p);return x===void 0?(x={id:h.id,object:h,geometry:d,material:p,program:M.program||s,groupOrder:g,renderOrder:h.renderOrder,z:m,group:v},e[t]=x):(x.id=h.id,x.object=h,x.geometry=d,x.material=p,x.program=M.program||s,x.groupOrder=g,x.renderOrder=h.renderOrder,x.z=m,x.group=v),t++,x}function l(h,d,p,g,m,v){const x=a(h,d,p,g,m,v);(p.transparent===!0?r:i).push(x)}function c(h,d,p,g,m,v){const x=a(h,d,p,g,m,v);(p.transparent===!0?r:i).unshift(x)}function u(h,d){i.length>1&&i.sort(h||j4),r.length>1&&r.sort(d||X4)}function f(){for(let h=t,d=e.length;h<d;h++){const p=e[h];if(p.id===null)break;p.id=null,p.object=null,p.geometry=null,p.material=null,p.program=null,p.group=null}}return{opaque:i,transparent:r,init:o,push:l,unshift:c,finish:f,sort:u}}function Y4(n){let e=new WeakMap;function t(r,s){const o=e.get(r);let a;return o===void 0?(a=new hv(n),e.set(r,new WeakMap),e.get(r).set(s,a)):(a=o.get(s),a===void 0&&(a=new hv(n),o.set(s,a))),a}function i(){e=new WeakMap}return{get:t,dispose:i}}function Z4(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new F,color:new Ge};break;case"SpotLight":t={position:new F,direction:new F,color:new Ge,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new F,color:new Ge,distance:0,decay:0};break;case"HemisphereLight":t={direction:new F,skyColor:new Ge,groundColor:new Ge};break;case"RectAreaLight":t={color:new Ge,position:new F,halfWidth:new F,halfHeight:new F};break}return n[e.id]=t,t}}}function J4(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Ee};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Ee};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Ee,shadowCameraNear:1,shadowCameraFar:1e3};break}return n[e.id]=t,t}}}let K4=0;function Q4(n,e){return(e.castShadow?1:0)-(n.castShadow?1:0)}function eP(n,e){const t=new Z4,i=J4(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let u=0;u<9;u++)r.probe.push(new F);const s=new F,o=new tt,a=new tt;function l(u){let f=0,h=0,d=0;for(let _=0;_<9;_++)r.probe[_].set(0,0,0);let p=0,g=0,m=0,v=0,x=0,M=0,b=0,w=0;u.sort(Q4);for(let _=0,S=u.length;_<S;_++){const E=u[_],R=E.color,I=E.intensity,$=E.distance,q=E.shadow&&E.shadow.map?E.shadow.map.texture:null;if(E.isAmbientLight)f+=R.r*I,h+=R.g*I,d+=R.b*I;else if(E.isLightProbe)for(let L=0;L<9;L++)r.probe[L].addScaledVector(E.sh.coefficients[L],I);else if(E.isDirectionalLight){const L=t.get(E);if(L.color.copy(E.color).multiplyScalar(E.intensity),E.castShadow){const N=E.shadow,G=i.get(E);G.shadowBias=N.bias,G.shadowNormalBias=N.normalBias,G.shadowRadius=N.radius,G.shadowMapSize=N.mapSize,r.directionalShadow[p]=G,r.directionalShadowMap[p]=q,r.directionalShadowMatrix[p]=E.shadow.matrix,M++}r.directional[p]=L,p++}else if(E.isSpotLight){const L=t.get(E);if(L.position.setFromMatrixPosition(E.matrixWorld),L.color.copy(R).multiplyScalar(I),L.distance=$,L.coneCos=Math.cos(E.angle),L.penumbraCos=Math.cos(E.angle*(1-E.penumbra)),L.decay=E.decay,E.castShadow){const N=E.shadow,G=i.get(E);G.shadowBias=N.bias,G.shadowNormalBias=N.normalBias,G.shadowRadius=N.radius,G.shadowMapSize=N.mapSize,r.spotShadow[m]=G,r.spotShadowMap[m]=q,r.spotShadowMatrix[m]=E.shadow.matrix,w++}r.spot[m]=L,m++}else if(E.isRectAreaLight){const L=t.get(E);L.color.copy(R).multiplyScalar(I),L.halfWidth.set(E.width*.5,0,0),L.halfHeight.set(0,E.height*.5,0),r.rectArea[v]=L,v++}else if(E.isPointLight){const L=t.get(E);if(L.color.copy(E.color).multiplyScalar(E.intensity),L.distance=E.distance,L.decay=E.decay,E.castShadow){const N=E.shadow,G=i.get(E);G.shadowBias=N.bias,G.shadowNormalBias=N.normalBias,G.shadowRadius=N.radius,G.shadowMapSize=N.mapSize,G.shadowCameraNear=N.camera.near,G.shadowCameraFar=N.camera.far,r.pointShadow[g]=G,r.pointShadowMap[g]=q,r.pointShadowMatrix[g]=E.shadow.matrix,b++}r.point[g]=L,g++}else if(E.isHemisphereLight){const L=t.get(E);L.skyColor.copy(E.color).multiplyScalar(I),L.groundColor.copy(E.groundColor).multiplyScalar(I),r.hemi[x]=L,x++}}v>0&&(e.isWebGL2||n.has("OES_texture_float_linear")===!0?(r.rectAreaLTC1=De.LTC_FLOAT_1,r.rectAreaLTC2=De.LTC_FLOAT_2):n.has("OES_texture_half_float_linear")===!0?(r.rectAreaLTC1=De.LTC_HALF_1,r.rectAreaLTC2=De.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=f,r.ambient[1]=h,r.ambient[2]=d;const y=r.hash;(y.directionalLength!==p||y.pointLength!==g||y.spotLength!==m||y.rectAreaLength!==v||y.hemiLength!==x||y.numDirectionalShadows!==M||y.numPointShadows!==b||y.numSpotShadows!==w)&&(r.directional.length=p,r.spot.length=m,r.rectArea.length=v,r.point.length=g,r.hemi.length=x,r.directionalShadow.length=M,r.directionalShadowMap.length=M,r.pointShadow.length=b,r.pointShadowMap.length=b,r.spotShadow.length=w,r.spotShadowMap.length=w,r.directionalShadowMatrix.length=M,r.pointShadowMatrix.length=b,r.spotShadowMatrix.length=w,y.directionalLength=p,y.pointLength=g,y.spotLength=m,y.rectAreaLength=v,y.hemiLength=x,y.numDirectionalShadows=M,y.numPointShadows=b,y.numSpotShadows=w,r.version=K4++)}function c(u,f){let h=0,d=0,p=0,g=0,m=0;const v=f.matrixWorldInverse;for(let x=0,M=u.length;x<M;x++){const b=u[x];if(b.isDirectionalLight){const w=r.directional[h];w.direction.setFromMatrixPosition(b.matrixWorld),s.setFromMatrixPosition(b.target.matrixWorld),w.direction.sub(s),w.direction.transformDirection(v),h++}else if(b.isSpotLight){const w=r.spot[p];w.position.setFromMatrixPosition(b.matrixWorld),w.position.applyMatrix4(v),w.direction.setFromMatrixPosition(b.matrixWorld),s.setFromMatrixPosition(b.target.matrixWorld),w.direction.sub(s),w.direction.transformDirection(v),p++}else if(b.isRectAreaLight){const w=r.rectArea[g];w.position.setFromMatrixPosition(b.matrixWorld),w.position.applyMatrix4(v),a.identity(),o.copy(b.matrixWorld),o.premultiply(v),a.extractRotation(o),w.halfWidth.set(b.width*.5,0,0),w.halfHeight.set(0,b.height*.5,0),w.halfWidth.applyMatrix4(a),w.halfHeight.applyMatrix4(a),g++}else if(b.isPointLight){const w=r.point[d];w.position.setFromMatrixPosition(b.matrixWorld),w.position.applyMatrix4(v),d++}else if(b.isHemisphereLight){const w=r.hemi[m];w.direction.setFromMatrixPosition(b.matrixWorld),w.direction.transformDirection(v),w.direction.normalize(),m++}}}return{setup:l,setupView:c,state:r}}function dv(n,e){const t=new eP(n,e),i=[],r=[];function s(){i.length=0,r.length=0}function o(f){i.push(f)}function a(f){r.push(f)}function l(){t.setup(i)}function c(f){t.setupView(i,f)}return{init:s,state:{lightsArray:i,shadowsArray:r,lights:t},setupLights:l,setupLightsView:c,pushLight:o,pushShadow:a}}function tP(n,e){let t=new WeakMap;function i(s,o=0){let a;return t.has(s)===!1?(a=new dv(n,e),t.set(s,[]),t.get(s).push(a)):o>=t.get(s).length?(a=new dv(n,e),t.get(s).push(a)):a=t.get(s)[o],a}function r(){t=new WeakMap}return{get:i,dispose:r}}function mr(n){Je.call(this),this.type="MeshDepthMaterial",this.depthPacking=f1,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(n)}mr.prototype=Object.create(Je.prototype);mr.prototype.constructor=mr;mr.prototype.isMeshDepthMaterial=!0;mr.prototype.copy=function(n){return Je.prototype.copy.call(this,n),this.depthPacking=n.depthPacking,this.skinning=n.skinning,this.morphTargets=n.morphTargets,this.map=n.map,this.alphaMap=n.alphaMap,this.displacementMap=n.displacementMap,this.displacementScale=n.displacementScale,this.displacementBias=n.displacementBias,this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this};function gr(n){Je.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new F,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(n)}gr.prototype=Object.create(Je.prototype);gr.prototype.constructor=gr;gr.prototype.isMeshDistanceMaterial=!0;gr.prototype.copy=function(n){return Je.prototype.copy.call(this,n),this.referencePosition.copy(n.referencePosition),this.nearDistance=n.nearDistance,this.farDistance=n.farDistance,this.skinning=n.skinning,this.morphTargets=n.morphTargets,this.map=n.map,this.alphaMap=n.alphaMap,this.displacementMap=n.displacementMap,this.displacementScale=n.displacementScale,this.displacementBias=n.displacementBias,this};var nP=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	float mean = 0.0;
	float squared_mean = 0.0;
	float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );
	for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean * HALF_SAMPLE_RATE;
	squared_mean = squared_mean * HALF_SAMPLE_RATE;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`,iP=`void main() {
	gl_Position = vec4( position, 1.0 );
}`;function T1(n,e,t){let i=new Ec;const r=new Ee,s=new Ee,o=new ft,a=[],l=[],c={},u={0:Rt,1:Xo,2:vc},f=new en({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new Ee},radius:{value:4}},vertexShader:iP,fragmentShader:nP}),h=f.clone();h.defines.HORIZONTAL_PASS=1;const d=new Xe;d.setAttribute("position",new Ze(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const p=new xt(d,f),g=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=hm,this.render=function(w,y,_){if(g.enabled===!1||g.autoUpdate===!1&&g.needsUpdate===!1||w.length===0)return;const S=n.getRenderTarget(),E=n.getActiveCubeFace(),R=n.getActiveMipmapLevel(),I=n.state;I.setBlending(Fi),I.buffers.color.setClear(1,1,1,1),I.buffers.depth.setTest(!0),I.setScissorTest(!1);for(let $=0,q=w.length;$<q;$++){const L=w[$],N=L.shadow;if(N===void 0){console.warn("THREE.WebGLShadowMap:",L,"has no shadow.");continue}if(N.autoUpdate===!1&&N.needsUpdate===!1)continue;r.copy(N.mapSize);const G=N.getFrameExtents();if(r.multiply(G),s.copy(N.mapSize),(r.x>t||r.y>t)&&(r.x>t&&(s.x=Math.floor(t/G.x),r.x=s.x*G.x,N.mapSize.x=s.x),r.y>t&&(s.y=Math.floor(t/G.y),r.y=s.y*G.y,N.mapSize.y=s.y)),N.map===null&&!N.isPointLightShadow&&this.type===mo){const K={minFilter:Nt,magFilter:Nt,format:yn};N.map=new fr(r.x,r.y,K),N.map.texture.name=L.name+".shadowMap",N.mapPass=new fr(r.x,r.y,K),N.camera.updateProjectionMatrix()}if(N.map===null){const K={minFilter:Dt,magFilter:Dt,format:yn};N.map=new fr(r.x,r.y,K),N.map.texture.name=L.name+".shadowMap",N.camera.updateProjectionMatrix()}n.setRenderTarget(N.map),n.clear();const X=N.getViewportCount();for(let K=0;K<X;K++){const j=N.getViewport(K);o.set(s.x*j.x,s.y*j.y,s.x*j.z,s.y*j.w),I.viewport(o),N.updateMatrices(L,K),i=N.getFrustum(),b(y,_,N.camera,L,this.type)}!N.isPointLightShadow&&this.type===mo&&m(N,_),N.needsUpdate=!1}g.needsUpdate=!1,n.setRenderTarget(S,E,R)};function m(w,y){const _=e.update(p);f.uniforms.shadow_pass.value=w.map.texture,f.uniforms.resolution.value=w.mapSize,f.uniforms.radius.value=w.radius,n.setRenderTarget(w.mapPass),n.clear(),n.renderBufferDirect(y,null,_,f,p,null),h.uniforms.shadow_pass.value=w.mapPass.texture,h.uniforms.resolution.value=w.mapSize,h.uniforms.radius.value=w.radius,n.setRenderTarget(w.map),n.clear(),n.renderBufferDirect(y,null,_,h,p,null)}function v(w,y,_){const S=w<<0|y<<1|_<<2;let E=a[S];return E===void 0&&(E=new mr({depthPacking:h1,morphTargets:w,skinning:y}),a[S]=E),E}function x(w,y,_){const S=w<<0|y<<1|_<<2;let E=l[S];return E===void 0&&(E=new gr({morphTargets:w,skinning:y}),l[S]=E),E}function M(w,y,_,S,E,R,I){let $=null,q=v,L=w.customDepthMaterial;if(S.isPointLight===!0&&(q=x,L=w.customDistanceMaterial),L===void 0){let N=!1;_.morphTargets===!0&&(N=y.morphAttributes&&y.morphAttributes.position&&y.morphAttributes.position.length>0);let G=!1;w.isSkinnedMesh===!0&&(_.skinning===!0?G=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",w));const X=w.isInstancedMesh===!0;$=q(N,G,X)}else $=L;if(n.localClippingEnabled&&_.clipShadows===!0&&_.clippingPlanes.length!==0){const N=$.uuid,G=_.uuid;let X=c[N];X===void 0&&(X={},c[N]=X);let K=X[G];K===void 0&&(K=$.clone(),X[G]=K),$=K}return $.visible=_.visible,$.wireframe=_.wireframe,I===mo?$.side=_.shadowSide!==null?_.shadowSide:_.side:$.side=_.shadowSide!==null?_.shadowSide:u[_.side],$.clipShadows=_.clipShadows,$.clippingPlanes=_.clippingPlanes,$.clipIntersection=_.clipIntersection,$.wireframeLinewidth=_.wireframeLinewidth,$.linewidth=_.linewidth,S.isPointLight===!0&&$.isMeshDistanceMaterial===!0&&($.referencePosition.setFromMatrixPosition(S.matrixWorld),$.nearDistance=E,$.farDistance=R),$}function b(w,y,_,S,E){if(w.visible===!1)return;if(w.layers.test(y.layers)&&(w.isMesh||w.isLine||w.isPoints)&&(w.castShadow||w.receiveShadow&&E===mo)&&(!w.frustumCulled||i.intersectsObject(w))){w.modelViewMatrix.multiplyMatrices(_.matrixWorldInverse,w.matrixWorld);const $=e.update(w),q=w.material;if(Array.isArray(q)){const L=$.groups;for(let N=0,G=L.length;N<G;N++){const X=L[N],K=q[X.materialIndex];if(K&&K.visible){const j=M(w,$,K,S,_.near,_.far,E);n.renderBufferDirect(_,null,$,j,w,X)}}}else if(q.visible){const L=M(w,$,q,S,_.near,_.far,E);n.renderBufferDirect(_,null,$,L,w,null)}}const I=w.children;for(let $=0,q=I.length;$<q;$++)b(I[$],y,_,S,E)}}function rP(n,e,t){const i=t.isWebGL2;function r(){let Z=!1;const C=new ft;let A=null;const ie=new ft(0,0,0,0);return{setMask:function(se){A!==se&&!Z&&(n.colorMask(se,se,se,se),A=se)},setLocked:function(se){Z=se},setClear:function(se,le,ge,Re,ne){ne===!0&&(se*=Re,le*=Re,ge*=Re),C.set(se,le,ge,Re),ie.equals(C)===!1&&(n.clearColor(se,le,ge,Re),ie.copy(C))},reset:function(){Z=!1,A=null,ie.set(-1,0,0,0)}}}function s(){let Z=!1,C=null,A=null,ie=null;return{setTest:function(se){se?ee(2929):P(2929)},setMask:function(se){C!==se&&!Z&&(n.depthMask(se),C=se)},setFunc:function(se){if(A!==se){if(se)switch(se){case e_:n.depthFunc(512);break;case t_:n.depthFunc(519);break;case n_:n.depthFunc(513);break;case $l:n.depthFunc(515);break;case i_:n.depthFunc(514);break;case r_:n.depthFunc(518);break;case s_:n.depthFunc(516);break;case o_:n.depthFunc(517);break;default:n.depthFunc(515)}else n.depthFunc(515);A=se}},setLocked:function(se){Z=se},setClear:function(se){ie!==se&&(n.clearDepth(se),ie=se)},reset:function(){Z=!1,C=null,A=null,ie=null}}}function o(){let Z=!1,C=null,A=null,ie=null,se=null,le=null,ge=null,Re=null,ne=null;return{setTest:function(Me){Z||(Me?ee(2960):P(2960))},setMask:function(Me){C!==Me&&!Z&&(n.stencilMask(Me),C=Me)},setFunc:function(Me,Le,Ue){(A!==Me||ie!==Le||se!==Ue)&&(n.stencilFunc(Me,Le,Ue),A=Me,ie=Le,se=Ue)},setOp:function(Me,Le,Ue){(le!==Me||ge!==Le||Re!==Ue)&&(n.stencilOp(Me,Le,Ue),le=Me,ge=Le,Re=Ue)},setLocked:function(Me){Z=Me},setClear:function(Me){ne!==Me&&(n.clearStencil(Me),ne=Me)},reset:function(){Z=!1,C=null,A=null,ie=null,se=null,le=null,ge=null,Re=null,ne=null}}}const a=new r,l=new s,c=new o;let u={},f=null,h=null,d=null,p=null,g=null,m=null,v=null,x=null,M=null,b=!1,w=null,y=null,_=null,S=null,E=null;const R=n.getParameter(35661);let I=!1,$=0;const q=n.getParameter(7938);q.indexOf("WebGL")!==-1?($=parseFloat(/^WebGL (\d)/.exec(q)[1]),I=$>=1):q.indexOf("OpenGL ES")!==-1&&($=parseFloat(/^OpenGL ES (\d)/.exec(q)[1]),I=$>=2);let L=null,N={};const G=new ft,X=new ft;function K(Z,C,A){const ie=new Uint8Array(4),se=n.createTexture();n.bindTexture(Z,se),n.texParameteri(Z,10241,9728),n.texParameteri(Z,10240,9728);for(let le=0;le<A;le++)n.texImage2D(C+le,0,6408,1,1,0,6408,5121,ie);return se}const j={};j[3553]=K(3553,3553,1),j[34067]=K(34067,34069,6),a.setClear(0,0,0,1),l.setClear(1),c.setClear(0),ee(2929),l.setFunc($l),Se(!1),we(sp),ee(2884),B(Fi);function ee(Z){u[Z]!==!0&&(n.enable(Z),u[Z]=!0)}function P(Z){u[Z]!==!1&&(n.disable(Z),u[Z]=!1)}function V(Z){return f!==Z?(n.useProgram(Z),f=Z,!0):!1}const Y={[Wr]:32774,[Vy]:32778,[Wy]:32779};if(i)Y[lp]=32775,Y[up]=32776;else{const Z=e.get("EXT_blend_minmax");Z!==null&&(Y[lp]=Z.MIN_EXT,Y[up]=Z.MAX_EXT)}const Q={[qy]:0,[$y]:1,[jy]:768,[pm]:770,[Qy]:776,[Jy]:774,[Yy]:772,[Xy]:769,[mm]:771,[Ky]:775,[Zy]:773};function B(Z,C,A,ie,se,le,ge,Re){if(Z===Fi){h&&(P(3042),h=!1);return}if(h||(ee(3042),h=!0),Z!==Hy){if(Z!==d||Re!==b){if((p!==Wr||v!==Wr)&&(n.blendEquation(32774),p=Wr,v=Wr),Re)switch(Z){case bo:n.blendFuncSeparate(1,771,1,771);break;case op:n.blendFunc(1,1);break;case ap:n.blendFuncSeparate(0,0,769,771);break;case cp:n.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",Z);break}else switch(Z){case bo:n.blendFuncSeparate(770,771,1,771);break;case op:n.blendFunc(770,1);break;case ap:n.blendFunc(0,769);break;case cp:n.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",Z);break}g=null,m=null,x=null,M=null,d=Z,b=Re}return}se=se||C,le=le||A,ge=ge||ie,(C!==p||se!==v)&&(n.blendEquationSeparate(Y[C],Y[se]),p=C,v=se),(A!==g||ie!==m||le!==x||ge!==M)&&(n.blendFuncSeparate(Q[A],Q[ie],Q[le],Q[ge]),g=A,m=ie,x=le,M=ge),d=Z,b=null}function oe(Z,C){Z.side===vc?P(2884):ee(2884);let A=Z.side===Rt;C&&(A=!A),Se(A),Z.blending===bo&&Z.transparent===!1?B(Fi):B(Z.blending,Z.blendEquation,Z.blendSrc,Z.blendDst,Z.blendEquationAlpha,Z.blendSrcAlpha,Z.blendDstAlpha,Z.premultipliedAlpha),l.setFunc(Z.depthFunc),l.setTest(Z.depthTest),l.setMask(Z.depthWrite),a.setMask(Z.colorWrite);const ie=Z.stencilWrite;c.setTest(ie),ie&&(c.setMask(Z.stencilWriteMask),c.setFunc(Z.stencilFunc,Z.stencilRef,Z.stencilFuncMask),c.setOp(Z.stencilFail,Z.stencilZFail,Z.stencilZPass)),_e(Z.polygonOffset,Z.polygonOffsetFactor,Z.polygonOffsetUnits)}function Se(Z){w!==Z&&(Z?n.frontFace(2304):n.frontFace(2305),w=Z)}function we(Z){Z!==zy?(ee(2884),Z!==y&&(Z===sp?n.cullFace(1029):Z===Gy?n.cullFace(1028):n.cullFace(1032))):P(2884),y=Z}function ye(Z){Z!==_&&(I&&n.lineWidth(Z),_=Z)}function _e(Z,C,A){Z?(ee(32823),(S!==C||E!==A)&&(n.polygonOffset(C,A),S=C,E=A)):P(32823)}function Ie(Z){Z?ee(3089):P(3089)}function he(Z){Z===void 0&&(Z=33984+R-1),L!==Z&&(n.activeTexture(Z),L=Z)}function pe(Z,C){L===null&&he();let A=N[L];A===void 0&&(A={type:void 0,texture:void 0},N[L]=A),(A.type!==Z||A.texture!==C)&&(n.bindTexture(Z,C||j[Z]),A.type=Z,A.texture=C)}function Te(){const Z=N[L];Z!==void 0&&Z.type!==void 0&&(n.bindTexture(Z.type,null),Z.type=void 0,Z.texture=void 0)}function Ne(){try{n.compressedTexImage2D.apply(n,arguments)}catch(Z){console.error("THREE.WebGLState:",Z)}}function Ce(){try{n.texImage2D.apply(n,arguments)}catch(Z){console.error("THREE.WebGLState:",Z)}}function O(){try{n.texImage3D.apply(n,arguments)}catch(Z){console.error("THREE.WebGLState:",Z)}}function D(Z){G.equals(Z)===!1&&(n.scissor(Z.x,Z.y,Z.z,Z.w),G.copy(Z))}function me(Z){X.equals(Z)===!1&&(n.viewport(Z.x,Z.y,Z.z,Z.w),X.copy(Z))}function be(){u={},L=null,N={},f=null,h=null,d=null,p=null,g=null,m=null,v=null,x=null,M=null,b=!1,w=null,y=null,_=null,S=null,E=null,a.reset(),l.reset(),c.reset()}return{buffers:{color:a,depth:l,stencil:c},enable:ee,disable:P,useProgram:V,setBlending:B,setMaterial:oe,setFlipSided:Se,setCullFace:we,setLineWidth:ye,setPolygonOffset:_e,setScissorTest:Ie,activeTexture:he,bindTexture:pe,unbindTexture:Te,compressedTexImage2D:Ne,texImage2D:Ce,texImage3D:O,scissor:D,viewport:me,reset:be}}function sP(n,e,t,i,r,s,o){const a=r.isWebGL2,l=r.maxTextures,c=r.maxCubemapSize,u=r.maxTextureSize,f=r.maxSamples,h=new WeakMap;let d,p=!1;try{p=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function g(O,D){return p?new OffscreenCanvas(O,D):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function m(O,D,me,be){let Z=1;if((O.width>be||O.height>be)&&(Z=be/Math.max(O.width,O.height)),Z<1||D===!0)if(typeof HTMLImageElement<"u"&&O instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&O instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&O instanceof ImageBitmap){const C=D?Ke.floorPowerOfTwo:Math.floor,A=C(Z*O.width),ie=C(Z*O.height);d===void 0&&(d=g(A,ie));const se=me?g(A,ie):d;return se.width=A,se.height=ie,se.getContext("2d").drawImage(O,0,0,A,ie),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+O.width+"x"+O.height+") to ("+A+"x"+ie+")."),se}else return"data"in O&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+O.width+"x"+O.height+")."),O;return O}function v(O){return Ke.isPowerOfTwo(O.width)&&Ke.isPowerOfTwo(O.height)}function x(O){return a?!1:O.wrapS!==Zt||O.wrapT!==Zt||O.minFilter!==Dt&&O.minFilter!==Nt}function M(O,D){return O.generateMipmaps&&D&&O.minFilter!==Dt&&O.minFilter!==Nt}function b(O,D,me,be){n.generateMipmap(O);const Z=i.get(D);Z.__maxMipLevel=Math.log(Math.max(me,be))*Math.LOG2E}function w(O,D,me){if(a===!1)return D;if(O!==null){if(n[O]!==void 0)return n[O];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+O+"'")}let be=D;return D===6403&&(me===5126&&(be=33326),me===5131&&(be=33325),me===5121&&(be=33321)),D===6407&&(me===5126&&(be=34837),me===5131&&(be=34843),me===5121&&(be=32849)),D===6408&&(me===5126&&(be=34836),me===5131&&(be=34842),me===5121&&(be=32856)),(be===33325||be===33326||be===34842||be===34836)&&e.get("EXT_color_buffer_float"),be}function y(O){return O===Dt||O===Yl||O===Zl?9728:9729}function _(O){const D=O.target;D.removeEventListener("dispose",_),E(D),D.isVideoTexture&&h.delete(D),o.memory.textures--}function S(O){const D=O.target;D.removeEventListener("dispose",S),R(D),o.memory.textures--}function E(O){const D=i.get(O);D.__webglInit!==void 0&&(n.deleteTexture(D.__webglTexture),i.remove(O))}function R(O){const D=i.get(O),me=i.get(O.texture);if(O){if(me.__webglTexture!==void 0&&n.deleteTexture(me.__webglTexture),O.depthTexture&&O.depthTexture.dispose(),O.isWebGLCubeRenderTarget)for(let be=0;be<6;be++)n.deleteFramebuffer(D.__webglFramebuffer[be]),D.__webglDepthbuffer&&n.deleteRenderbuffer(D.__webglDepthbuffer[be]);else n.deleteFramebuffer(D.__webglFramebuffer),D.__webglDepthbuffer&&n.deleteRenderbuffer(D.__webglDepthbuffer),D.__webglMultisampledFramebuffer&&n.deleteFramebuffer(D.__webglMultisampledFramebuffer),D.__webglColorRenderbuffer&&n.deleteRenderbuffer(D.__webglColorRenderbuffer),D.__webglDepthRenderbuffer&&n.deleteRenderbuffer(D.__webglDepthRenderbuffer);i.remove(O.texture),i.remove(O)}}let I=0;function $(){I=0}function q(){const O=I;return O>=l&&console.warn("THREE.WebGLTextures: Trying to use "+O+" texture units while this GPU supports only "+l),I+=1,O}function L(O,D){const me=i.get(O);if(O.isVideoTexture&&he(O),O.version>0&&me.__version!==O.version){const be=O.image;if(be===void 0)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else if(be.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{V(me,O,D);return}}t.activeTexture(33984+D),t.bindTexture(3553,me.__webglTexture)}function N(O,D){const me=i.get(O);if(O.version>0&&me.__version!==O.version){V(me,O,D);return}t.activeTexture(33984+D),t.bindTexture(35866,me.__webglTexture)}function G(O,D){const me=i.get(O);if(O.version>0&&me.__version!==O.version){V(me,O,D);return}t.activeTexture(33984+D),t.bindTexture(32879,me.__webglTexture)}function X(O,D){const me=i.get(O);if(O.version>0&&me.__version!==O.version){Y(me,O,D);return}t.activeTexture(33984+D),t.bindTexture(34067,me.__webglTexture)}const K={[Ia]:10497,[Zt]:33071,[Da]:33648},j={[Dt]:9728,[Yl]:9984,[Zl]:9986,[Nt]:9729,[gm]:9985,[Zo]:9987};function ee(O,D,me){me?(n.texParameteri(O,10242,K[D.wrapS]),n.texParameteri(O,10243,K[D.wrapT]),(O===32879||O===35866)&&n.texParameteri(O,32882,K[D.wrapR]),n.texParameteri(O,10240,j[D.magFilter]),n.texParameteri(O,10241,j[D.minFilter])):(n.texParameteri(O,10242,33071),n.texParameteri(O,10243,33071),(O===32879||O===35866)&&n.texParameteri(O,32882,33071),(D.wrapS!==Zt||D.wrapT!==Zt)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),n.texParameteri(O,10240,y(D.magFilter)),n.texParameteri(O,10241,y(D.minFilter)),D.minFilter!==Dt&&D.minFilter!==Nt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));const be=e.get("EXT_texture_filter_anisotropic");if(be){if(D.type===Pi&&e.get("OES_texture_float_linear")===null||D.type===Fa&&(a||e.get("OES_texture_half_float_linear"))===null)return;(D.anisotropy>1||i.get(D).__currentAnisotropy)&&(n.texParameterf(O,be.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(D.anisotropy,r.getMaxAnisotropy())),i.get(D).__currentAnisotropy=D.anisotropy)}}function P(O,D){O.__webglInit===void 0&&(O.__webglInit=!0,D.addEventListener("dispose",_),O.__webglTexture=n.createTexture(),o.memory.textures++)}function V(O,D,me){let be=3553;D.isDataTexture2DArray&&(be=35866),D.isDataTexture3D&&(be=32879),P(O,D),t.activeTexture(33984+me),t.bindTexture(be,O.__webglTexture),n.pixelStorei(37440,D.flipY),n.pixelStorei(37441,D.premultiplyAlpha),n.pixelStorei(3317,D.unpackAlignment);const Z=x(D)&&v(D.image)===!1,C=m(D.image,Z,!1,u),A=v(C)||a,ie=s.convert(D.format);let se=s.convert(D.type),le=w(D.internalFormat,ie,se);ee(be,D,A);let ge;const Re=D.mipmaps;if(D.isDepthTexture)le=6402,a?D.type===Pi?le=36012:D.type===Ea?le=33190:D.type===yo?le=35056:le=33189:D.type===Pi&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),D.format===ts&&le===6402&&D.type!==Oa&&D.type!==Ea&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),D.type=Oa,se=s.convert(D.type)),D.format===Lo&&le===6402&&(le=34041,D.type!==yo&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),D.type=yo,se=s.convert(D.type))),t.texImage2D(3553,0,le,C.width,C.height,0,ie,se,null);else if(D.isDataTexture)if(Re.length>0&&A){for(let ne=0,Me=Re.length;ne<Me;ne++)ge=Re[ne],t.texImage2D(3553,ne,le,ge.width,ge.height,0,ie,se,ge.data);D.generateMipmaps=!1,O.__maxMipLevel=Re.length-1}else t.texImage2D(3553,0,le,C.width,C.height,0,ie,se,C.data),O.__maxMipLevel=0;else if(D.isCompressedTexture){for(let ne=0,Me=Re.length;ne<Me;ne++)ge=Re[ne],D.format!==yn&&D.format!==ur?ie!==null?t.compressedTexImage2D(3553,ne,le,ge.width,ge.height,0,ge.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):t.texImage2D(3553,ne,le,ge.width,ge.height,0,ie,se,ge.data);O.__maxMipLevel=Re.length-1}else if(D.isDataTexture2DArray)t.texImage3D(35866,0,le,C.width,C.height,C.depth,0,ie,se,C.data),O.__maxMipLevel=0;else if(D.isDataTexture3D)t.texImage3D(32879,0,le,C.width,C.height,C.depth,0,ie,se,C.data),O.__maxMipLevel=0;else if(Re.length>0&&A){for(let ne=0,Me=Re.length;ne<Me;ne++)ge=Re[ne],t.texImage2D(3553,ne,le,ie,se,ge);D.generateMipmaps=!1,O.__maxMipLevel=Re.length-1}else t.texImage2D(3553,0,le,ie,se,C),O.__maxMipLevel=0;M(D,A)&&b(be,D,C.width,C.height),O.__version=D.version,D.onUpdate&&D.onUpdate(D)}function Y(O,D,me){if(D.image.length!==6)return;P(O,D),t.activeTexture(33984+me),t.bindTexture(34067,O.__webglTexture),n.pixelStorei(37440,D.flipY),n.pixelStorei(37441,D.premultiplyAlpha),n.pixelStorei(3317,D.unpackAlignment);const be=D&&(D.isCompressedTexture||D.image[0].isCompressedTexture),Z=D.image[0]&&D.image[0].isDataTexture,C=[];for(let ne=0;ne<6;ne++)!be&&!Z?C[ne]=m(D.image[ne],!1,!0,c):C[ne]=Z?D.image[ne].image:D.image[ne];const A=C[0],ie=v(A)||a,se=s.convert(D.format),le=s.convert(D.type),ge=w(D.internalFormat,se,le);ee(34067,D,ie);let Re;if(be){for(let ne=0;ne<6;ne++){Re=C[ne].mipmaps;for(let Me=0;Me<Re.length;Me++){const Le=Re[Me];D.format!==yn&&D.format!==ur?se!==null?t.compressedTexImage2D(34069+ne,Me,ge,Le.width,Le.height,0,Le.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):t.texImage2D(34069+ne,Me,ge,Le.width,Le.height,0,se,le,Le.data)}}O.__maxMipLevel=Re.length-1}else{Re=D.mipmaps;for(let ne=0;ne<6;ne++)if(Z){t.texImage2D(34069+ne,0,ge,C[ne].width,C[ne].height,0,se,le,C[ne].data);for(let Me=0;Me<Re.length;Me++){const Ue=Re[Me].image[ne].image;t.texImage2D(34069+ne,Me+1,ge,Ue.width,Ue.height,0,se,le,Ue.data)}}else{t.texImage2D(34069+ne,0,ge,se,le,C[ne]);for(let Me=0;Me<Re.length;Me++){const Le=Re[Me];t.texImage2D(34069+ne,Me+1,ge,se,le,Le.image[ne])}}O.__maxMipLevel=Re.length}M(D,ie)&&b(34067,D,A.width,A.height),O.__version=D.version,D.onUpdate&&D.onUpdate(D)}function Q(O,D,me,be){const Z=s.convert(D.texture.format),C=s.convert(D.texture.type),A=w(D.texture.internalFormat,Z,C);t.texImage2D(be,0,A,D.width,D.height,0,Z,C,null),n.bindFramebuffer(36160,O),n.framebufferTexture2D(36160,me,be,i.get(D.texture).__webglTexture,0),n.bindFramebuffer(36160,null)}function B(O,D,me){if(n.bindRenderbuffer(36161,O),D.depthBuffer&&!D.stencilBuffer){let be=33189;if(me){const Z=D.depthTexture;Z&&Z.isDepthTexture&&(Z.type===Pi?be=36012:Z.type===Ea&&(be=33190));const C=Ie(D);n.renderbufferStorageMultisample(36161,C,be,D.width,D.height)}else n.renderbufferStorage(36161,be,D.width,D.height);n.framebufferRenderbuffer(36160,36096,36161,O)}else if(D.depthBuffer&&D.stencilBuffer){if(me){const be=Ie(D);n.renderbufferStorageMultisample(36161,be,35056,D.width,D.height)}else n.renderbufferStorage(36161,34041,D.width,D.height);n.framebufferRenderbuffer(36160,33306,36161,O)}else{const be=s.convert(D.texture.format),Z=s.convert(D.texture.type),C=w(D.texture.internalFormat,be,Z);if(me){const A=Ie(D);n.renderbufferStorageMultisample(36161,A,C,D.width,D.height)}else n.renderbufferStorage(36161,C,D.width,D.height)}n.bindRenderbuffer(36161,null)}function oe(O,D){if(D&&D.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(36160,O),!(D.depthTexture&&D.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(D.depthTexture).__webglTexture||D.depthTexture.image.width!==D.width||D.depthTexture.image.height!==D.height)&&(D.depthTexture.image.width=D.width,D.depthTexture.image.height=D.height,D.depthTexture.needsUpdate=!0),L(D.depthTexture,0);const be=i.get(D.depthTexture).__webglTexture;if(D.depthTexture.format===ts)n.framebufferTexture2D(36160,36096,3553,be,0);else if(D.depthTexture.format===Lo)n.framebufferTexture2D(36160,33306,3553,be,0);else throw new Error("Unknown depthTexture format")}function Se(O){const D=i.get(O),me=O.isWebGLCubeRenderTarget===!0;if(O.depthTexture){if(me)throw new Error("target.depthTexture not supported in Cube render targets");oe(D.__webglFramebuffer,O)}else if(me){D.__webglDepthbuffer=[];for(let be=0;be<6;be++)n.bindFramebuffer(36160,D.__webglFramebuffer[be]),D.__webglDepthbuffer[be]=n.createRenderbuffer(),B(D.__webglDepthbuffer[be],O,!1)}else n.bindFramebuffer(36160,D.__webglFramebuffer),D.__webglDepthbuffer=n.createRenderbuffer(),B(D.__webglDepthbuffer,O,!1);n.bindFramebuffer(36160,null)}function we(O){const D=i.get(O),me=i.get(O.texture);O.addEventListener("dispose",S),me.__webglTexture=n.createTexture(),o.memory.textures++;const be=O.isWebGLCubeRenderTarget===!0,Z=O.isWebGLMultisampleRenderTarget===!0,C=v(O)||a;if(a&&O.texture.format===ur&&(O.texture.type===Pi||O.texture.type===Fa)&&(O.texture.format=yn,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),be){D.__webglFramebuffer=[];for(let A=0;A<6;A++)D.__webglFramebuffer[A]=n.createFramebuffer()}else if(D.__webglFramebuffer=n.createFramebuffer(),Z)if(a){D.__webglMultisampledFramebuffer=n.createFramebuffer(),D.__webglColorRenderbuffer=n.createRenderbuffer(),n.bindRenderbuffer(36161,D.__webglColorRenderbuffer);const A=s.convert(O.texture.format),ie=s.convert(O.texture.type),se=w(O.texture.internalFormat,A,ie),le=Ie(O);n.renderbufferStorageMultisample(36161,le,se,O.width,O.height),n.bindFramebuffer(36160,D.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(36160,36064,36161,D.__webglColorRenderbuffer),n.bindRenderbuffer(36161,null),O.depthBuffer&&(D.__webglDepthRenderbuffer=n.createRenderbuffer(),B(D.__webglDepthRenderbuffer,O,!0)),n.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(be){t.bindTexture(34067,me.__webglTexture),ee(34067,O.texture,C);for(let A=0;A<6;A++)Q(D.__webglFramebuffer[A],O,36064,34069+A);M(O.texture,C)&&b(34067,O.texture,O.width,O.height),t.bindTexture(34067,null)}else t.bindTexture(3553,me.__webglTexture),ee(3553,O.texture,C),Q(D.__webglFramebuffer,O,36064,3553),M(O.texture,C)&&b(3553,O.texture,O.width,O.height),t.bindTexture(3553,null);O.depthBuffer&&Se(O)}function ye(O){const D=O.texture,me=v(O)||a;if(M(D,me)){const be=O.isWebGLCubeRenderTarget?34067:3553,Z=i.get(D).__webglTexture;t.bindTexture(be,Z),b(be,D,O.width,O.height),t.bindTexture(be,null)}}function _e(O){if(O.isWebGLMultisampleRenderTarget)if(a){const D=i.get(O);n.bindFramebuffer(36008,D.__webglMultisampledFramebuffer),n.bindFramebuffer(36009,D.__webglFramebuffer);const me=O.width,be=O.height;let Z=16384;O.depthBuffer&&(Z|=256),O.stencilBuffer&&(Z|=1024),n.blitFramebuffer(0,0,me,be,0,0,me,be,Z,9728),n.bindFramebuffer(36160,D.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}function Ie(O){return a&&O.isWebGLMultisampleRenderTarget?Math.min(f,O.samples):0}function he(O){const D=o.render.frame;h.get(O)!==D&&(h.set(O,D),O.update())}let pe=!1,Te=!1;function Ne(O,D){O&&O.isWebGLRenderTarget&&(pe===!1&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),pe=!0),O=O.texture),L(O,D)}function Ce(O,D){O&&O.isWebGLCubeRenderTarget&&(Te===!1&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),Te=!0),O=O.texture),X(O,D)}this.allocateTextureUnit=q,this.resetTextureUnits=$,this.setTexture2D=L,this.setTexture2DArray=N,this.setTexture3D=G,this.setTextureCube=X,this.setupRenderTarget=we,this.updateRenderTargetMipmap=ye,this.updateMultisampleRenderTarget=_e,this.safeSetTexture2D=Ne,this.safeSetTextureCube=Ce}function A1(n,e,t){const i=t.isWebGL2;function r(s){let o;if(s===Jo)return 5121;if(s===x_)return 32819;if(s===v_)return 32820;if(s===b_)return 33635;if(s===p_)return 5120;if(s===m_)return 5122;if(s===Oa)return 5123;if(s===g_)return 5124;if(s===Ea)return 5125;if(s===Pi)return 5126;if(s===Fa)return i?5131:(o=e.get("OES_texture_half_float"),o!==null?o.HALF_FLOAT_OES:null);if(s===y_)return 6406;if(s===ur)return 6407;if(s===yn)return 6408;if(s===__)return 6409;if(s===M_)return 6410;if(s===ts)return 6402;if(s===Lo)return 34041;if(s===S_)return 6403;if(s===E_)return 36244;if(s===T_)return 33319;if(s===A_)return 33320;if(s===L_)return 36248;if(s===C_)return 36249;if(s===fp||s===hp||s===dp||s===pp)if(o=e.get("WEBGL_compressed_texture_s3tc"),o!==null){if(s===fp)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===hp)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===dp)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===pp)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===mp||s===gp||s===xp||s===vp)if(o=e.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(s===mp)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===gp)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===xp)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===vp)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===R_)return o=e.get("WEBGL_compressed_texture_etc1"),o!==null?o.COMPRESSED_RGB_ETC1_WEBGL:null;if((s===bp||s===yp)&&(o=e.get("WEBGL_compressed_texture_etc"),o!==null)){if(s===bp)return o.COMPRESSED_RGB8_ETC2;if(s===yp)return o.COMPRESSED_RGBA8_ETC2_EAC}if(s===P_||s===I_||s===D_||s===O_||s===F_||s===N_||s===B_||s===U_||s===z_||s===G_||s===k_||s===H_||s===V_||s===W_||s===$_||s===j_||s===X_||s===Y_||s===Z_||s===J_||s===K_||s===Q_||s===e1||s===t1||s===n1||s===i1||s===r1||s===s1)return o=e.get("WEBGL_compressed_texture_astc"),o!==null?s:null;if(s===q_)return o=e.get("EXT_texture_compression_bptc"),o!==null?s:null;if(s===yo)return i?34042:(o=e.get("WEBGL_depth_texture"),o!==null?o.UNSIGNED_INT_24_8_WEBGL:null)}return{convert:r}}function Jl(n=[]){Pt.call(this),this.cameras=n}Jl.prototype=Object.assign(Object.create(Pt.prototype),{constructor:Jl,isArrayCamera:!0});function ar(){qe.call(this),this.type="Group"}ar.prototype=Object.assign(Object.create(qe.prototype),{constructor:ar,isGroup:!0});function Aa(){this._targetRay=null,this._grip=null,this._hand=null}Object.assign(Aa.prototype,{constructor:Aa,getHandSpace:function(){return this._hand===null&&(this._hand=new ar,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand},getTargetRaySpace:function(){return this._targetRay===null&&(this._targetRay=new ar,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1),this._targetRay},getGripSpace:function(){return this._grip===null&&(this._grip=new ar,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1),this._grip},dispatchEvent:function(n){return this._targetRay!==null&&this._targetRay.dispatchEvent(n),this._grip!==null&&this._grip.dispatchEvent(n),this._hand!==null&&this._hand.dispatchEvent(n),this},disconnect:function(n){return this.dispatchEvent({type:"disconnected",data:n}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this},update:function(n,e,t){let i=null,r=null,s=null;const o=this._targetRay,a=this._grip,l=this._hand;if(n&&e.session.visibilityState!=="visible-blurred")if(l&&n.hand){s=!0;for(const p of n.hand.values()){const g=e.getJointPose(p,t);if(l.joints[p.jointName]===void 0){const v=new ar;v.matrixAutoUpdate=!1,v.visible=!1,l.joints[p.jointName]=v,l.add(v)}const m=l.joints[p.jointName];g!==null&&(m.matrix.fromArray(g.transform.matrix),m.matrix.decompose(m.position,m.rotation,m.scale),m.jointRadius=g.radius),m.visible=g!==null}const c=l.joints["index-finger-tip"],u=l.joints["thumb-tip"],f=c.position.distanceTo(u.position),h=.02,d=.005;l.inputState.pinching&&f>h+d?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:n.handedness,target:this})):!l.inputState.pinching&&f<=h-d&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:n.handedness,target:this}))}else o!==null&&(i=e.getPose(n.targetRaySpace,t),i!==null&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale))),a!==null&&n.gripSpace&&(r=e.getPose(n.gripSpace,t),r!==null&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale)));return o!==null&&(o.visible=i!==null),a!==null&&(a.visible=r!==null),l!==null&&(l.visible=s!==null),this}});function L1(n,e){const t=this;let i=null,r=1,s=null,o="local-floor",a=null;const l=[],c=new Map,u=new Pt;u.layers.enable(1),u.viewport=new ft;const f=new Pt;f.layers.enable(2),f.viewport=new ft;const h=[u,f],d=new Jl;d.layers.enable(1),d.layers.enable(2);let p=null,g=null;this.enabled=!1,this.isPresenting=!1,this.getController=function(R){let I=l[R];return I===void 0&&(I=new Aa,l[R]=I),I.getTargetRaySpace()},this.getControllerGrip=function(R){let I=l[R];return I===void 0&&(I=new Aa,l[R]=I),I.getGripSpace()},this.getHand=function(R){let I=l[R];return I===void 0&&(I=new Aa,l[R]=I),I.getHandSpace()};function m(R){const I=c.get(R.inputSource);I&&I.dispatchEvent({type:R.type,data:R.inputSource})}function v(){c.forEach(function(R,I){R.disconnect(I)}),c.clear(),p=null,g=null,n.setFramebuffer(null),n.setRenderTarget(n.getRenderTarget()),E.stop(),t.isPresenting=!1,t.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(R){r=R,t.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(R){o=R,t.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return s},this.getSession=function(){return i},this.setSession=async function(R){if(i=R,i!==null){i.addEventListener("select",m),i.addEventListener("selectstart",m),i.addEventListener("selectend",m),i.addEventListener("squeeze",m),i.addEventListener("squeezestart",m),i.addEventListener("squeezeend",m),i.addEventListener("end",v),i.addEventListener("inputsourceschange",x);const I=e.getContextAttributes();I.xrCompatible!==!0&&await e.makeXRCompatible();const $={antialias:I.antialias,alpha:I.alpha,depth:I.depth,stencil:I.stencil,framebufferScaleFactor:r},q=new XRWebGLLayer(i,e,$);i.updateRenderState({baseLayer:q}),s=await i.requestReferenceSpace(o),E.setContext(i),E.start(),t.isPresenting=!0,t.dispatchEvent({type:"sessionstart"})}};function x(R){const I=i.inputSources;for(let $=0;$<l.length;$++)c.set(I[$],l[$]);for(let $=0;$<R.removed.length;$++){const q=R.removed[$],L=c.get(q);L&&(L.dispatchEvent({type:"disconnected",data:q}),c.delete(q))}for(let $=0;$<R.added.length;$++){const q=R.added[$],L=c.get(q);L&&L.dispatchEvent({type:"connected",data:q})}}const M=new F,b=new F;function w(R,I,$){M.setFromMatrixPosition(I.matrixWorld),b.setFromMatrixPosition($.matrixWorld);const q=M.distanceTo(b),L=I.projectionMatrix.elements,N=$.projectionMatrix.elements,G=L[14]/(L[10]-1),X=L[14]/(L[10]+1),K=(L[9]+1)/L[5],j=(L[9]-1)/L[5],ee=(L[8]-1)/L[0],P=(N[8]+1)/N[0],V=G*ee,Y=G*P,Q=q/(-ee+P),B=Q*-ee;I.matrixWorld.decompose(R.position,R.quaternion,R.scale),R.translateX(B),R.translateZ(Q),R.matrixWorld.compose(R.position,R.quaternion,R.scale),R.matrixWorldInverse.copy(R.matrixWorld).invert();const oe=G+Q,Se=X+Q,we=V-B,ye=Y+(q-B),_e=K*X/Se*oe,Ie=j*X/Se*oe;R.projectionMatrix.makePerspective(we,ye,_e,Ie,oe,Se)}function y(R,I){I===null?R.matrixWorld.copy(R.matrix):R.matrixWorld.multiplyMatrices(I.matrixWorld,R.matrix),R.matrixWorldInverse.copy(R.matrixWorld).invert()}this.getCamera=function(R){d.near=f.near=u.near=R.near,d.far=f.far=u.far=R.far,(p!==d.near||g!==d.far)&&(i.updateRenderState({depthNear:d.near,depthFar:d.far}),p=d.near,g=d.far);const I=R.parent,$=d.cameras;y(d,I);for(let L=0;L<$.length;L++)y($[L],I);R.matrixWorld.copy(d.matrixWorld),R.matrix.copy(d.matrix),R.matrix.decompose(R.position,R.quaternion,R.scale);const q=R.children;for(let L=0,N=q.length;L<N;L++)q[L].updateMatrixWorld(!0);return $.length===2?w(d,u,f):d.projectionMatrix.copy(u.projectionMatrix),d};let _=null;function S(R,I){if(a=I.getViewerPose(s),a!==null){const q=a.views,L=i.renderState.baseLayer;n.setFramebuffer(L.framebuffer);let N=!1;q.length!==d.cameras.length&&(d.cameras.length=0,N=!0);for(let G=0;G<q.length;G++){const X=q[G],K=L.getViewport(X),j=h[G];j.matrix.fromArray(X.transform.matrix),j.projectionMatrix.fromArray(X.projectionMatrix),j.viewport.set(K.x,K.y,K.width,K.height),G===0&&d.matrix.copy(j.matrix),N===!0&&d.cameras.push(j)}}const $=i.inputSources;for(let q=0;q<l.length;q++){const L=l[q],N=$[q];L.update(N,I,s)}_&&_(R,I)}const E=new v1;E.setAnimationLoop(S),this.setAnimationLoop=function(R){_=R},this.dispose=function(){}}Object.assign(L1.prototype,ki.prototype);function oP(n){function e(v,x){v.fogColor.value.copy(x.color),x.isFog?(v.fogNear.value=x.near,v.fogFar.value=x.far):x.isFogExp2&&(v.fogDensity.value=x.density)}function t(v,x,M,b){x.isMeshBasicMaterial?i(v,x):x.isMeshLambertMaterial?(i(v,x),l(v,x)):x.isMeshToonMaterial?(i(v,x),u(v,x)):x.isMeshPhongMaterial?(i(v,x),c(v,x)):x.isMeshStandardMaterial?(i(v,x),x.isMeshPhysicalMaterial?h(v,x):f(v,x)):x.isMeshMatcapMaterial?(i(v,x),d(v,x)):x.isMeshDepthMaterial?(i(v,x),p(v,x)):x.isMeshDistanceMaterial?(i(v,x),g(v,x)):x.isMeshNormalMaterial?(i(v,x),m(v,x)):x.isLineBasicMaterial?(r(v,x),x.isLineDashedMaterial&&s(v,x)):x.isPointsMaterial?o(v,x,M,b):x.isSpriteMaterial?a(v,x):x.isShadowMaterial?(v.color.value.copy(x.color),v.opacity.value=x.opacity):x.isShaderMaterial&&(x.uniformsNeedUpdate=!1)}function i(v,x){v.opacity.value=x.opacity,x.color&&v.diffuse.value.copy(x.color),x.emissive&&v.emissive.value.copy(x.emissive).multiplyScalar(x.emissiveIntensity),x.map&&(v.map.value=x.map),x.alphaMap&&(v.alphaMap.value=x.alphaMap),x.specularMap&&(v.specularMap.value=x.specularMap);const M=n.get(x).envMap;if(M){v.envMap.value=M,v.flipEnvMap.value=M.isCubeTexture&&M._needsFlipEnvMap?-1:1,v.reflectivity.value=x.reflectivity,v.refractionRatio.value=x.refractionRatio;const y=n.get(M).__maxMipLevel;y!==void 0&&(v.maxMipLevel.value=y)}x.lightMap&&(v.lightMap.value=x.lightMap,v.lightMapIntensity.value=x.lightMapIntensity),x.aoMap&&(v.aoMap.value=x.aoMap,v.aoMapIntensity.value=x.aoMapIntensity);let b;x.map?b=x.map:x.specularMap?b=x.specularMap:x.displacementMap?b=x.displacementMap:x.normalMap?b=x.normalMap:x.bumpMap?b=x.bumpMap:x.roughnessMap?b=x.roughnessMap:x.metalnessMap?b=x.metalnessMap:x.alphaMap?b=x.alphaMap:x.emissiveMap?b=x.emissiveMap:x.clearcoatMap?b=x.clearcoatMap:x.clearcoatNormalMap?b=x.clearcoatNormalMap:x.clearcoatRoughnessMap&&(b=x.clearcoatRoughnessMap),b!==void 0&&(b.isWebGLRenderTarget&&(b=b.texture),b.matrixAutoUpdate===!0&&b.updateMatrix(),v.uvTransform.value.copy(b.matrix));let w;x.aoMap?w=x.aoMap:x.lightMap&&(w=x.lightMap),w!==void 0&&(w.isWebGLRenderTarget&&(w=w.texture),w.matrixAutoUpdate===!0&&w.updateMatrix(),v.uv2Transform.value.copy(w.matrix))}function r(v,x){v.diffuse.value.copy(x.color),v.opacity.value=x.opacity}function s(v,x){v.dashSize.value=x.dashSize,v.totalSize.value=x.dashSize+x.gapSize,v.scale.value=x.scale}function o(v,x,M,b){v.diffuse.value.copy(x.color),v.opacity.value=x.opacity,v.size.value=x.size*M,v.scale.value=b*.5,x.map&&(v.map.value=x.map),x.alphaMap&&(v.alphaMap.value=x.alphaMap);let w;x.map?w=x.map:x.alphaMap&&(w=x.alphaMap),w!==void 0&&(w.matrixAutoUpdate===!0&&w.updateMatrix(),v.uvTransform.value.copy(w.matrix))}function a(v,x){v.diffuse.value.copy(x.color),v.opacity.value=x.opacity,v.rotation.value=x.rotation,x.map&&(v.map.value=x.map),x.alphaMap&&(v.alphaMap.value=x.alphaMap);let M;x.map?M=x.map:x.alphaMap&&(M=x.alphaMap),M!==void 0&&(M.matrixAutoUpdate===!0&&M.updateMatrix(),v.uvTransform.value.copy(M.matrix))}function l(v,x){x.emissiveMap&&(v.emissiveMap.value=x.emissiveMap)}function c(v,x){v.specular.value.copy(x.specular),v.shininess.value=Math.max(x.shininess,1e-4),x.emissiveMap&&(v.emissiveMap.value=x.emissiveMap),x.bumpMap&&(v.bumpMap.value=x.bumpMap,v.bumpScale.value=x.bumpScale,x.side===Rt&&(v.bumpScale.value*=-1)),x.normalMap&&(v.normalMap.value=x.normalMap,v.normalScale.value.copy(x.normalScale),x.side===Rt&&v.normalScale.value.negate()),x.displacementMap&&(v.displacementMap.value=x.displacementMap,v.displacementScale.value=x.displacementScale,v.displacementBias.value=x.displacementBias)}function u(v,x){x.gradientMap&&(v.gradientMap.value=x.gradientMap),x.emissiveMap&&(v.emissiveMap.value=x.emissiveMap),x.bumpMap&&(v.bumpMap.value=x.bumpMap,v.bumpScale.value=x.bumpScale,x.side===Rt&&(v.bumpScale.value*=-1)),x.normalMap&&(v.normalMap.value=x.normalMap,v.normalScale.value.copy(x.normalScale),x.side===Rt&&v.normalScale.value.negate()),x.displacementMap&&(v.displacementMap.value=x.displacementMap,v.displacementScale.value=x.displacementScale,v.displacementBias.value=x.displacementBias)}function f(v,x){v.roughness.value=x.roughness,v.metalness.value=x.metalness,x.roughnessMap&&(v.roughnessMap.value=x.roughnessMap),x.metalnessMap&&(v.metalnessMap.value=x.metalnessMap),x.emissiveMap&&(v.emissiveMap.value=x.emissiveMap),x.bumpMap&&(v.bumpMap.value=x.bumpMap,v.bumpScale.value=x.bumpScale,x.side===Rt&&(v.bumpScale.value*=-1)),x.normalMap&&(v.normalMap.value=x.normalMap,v.normalScale.value.copy(x.normalScale),x.side===Rt&&v.normalScale.value.negate()),x.displacementMap&&(v.displacementMap.value=x.displacementMap,v.displacementScale.value=x.displacementScale,v.displacementBias.value=x.displacementBias),n.get(x).envMap&&(v.envMapIntensity.value=x.envMapIntensity)}function h(v,x){f(v,x),v.reflectivity.value=x.reflectivity,v.clearcoat.value=x.clearcoat,v.clearcoatRoughness.value=x.clearcoatRoughness,x.sheen&&v.sheen.value.copy(x.sheen),x.clearcoatMap&&(v.clearcoatMap.value=x.clearcoatMap),x.clearcoatRoughnessMap&&(v.clearcoatRoughnessMap.value=x.clearcoatRoughnessMap),x.clearcoatNormalMap&&(v.clearcoatNormalScale.value.copy(x.clearcoatNormalScale),v.clearcoatNormalMap.value=x.clearcoatNormalMap,x.side===Rt&&v.clearcoatNormalScale.value.negate()),v.transmission.value=x.transmission,x.transmissionMap&&(v.transmissionMap.value=x.transmissionMap)}function d(v,x){x.matcap&&(v.matcap.value=x.matcap),x.bumpMap&&(v.bumpMap.value=x.bumpMap,v.bumpScale.value=x.bumpScale,x.side===Rt&&(v.bumpScale.value*=-1)),x.normalMap&&(v.normalMap.value=x.normalMap,v.normalScale.value.copy(x.normalScale),x.side===Rt&&v.normalScale.value.negate()),x.displacementMap&&(v.displacementMap.value=x.displacementMap,v.displacementScale.value=x.displacementScale,v.displacementBias.value=x.displacementBias)}function p(v,x){x.displacementMap&&(v.displacementMap.value=x.displacementMap,v.displacementScale.value=x.displacementScale,v.displacementBias.value=x.displacementBias)}function g(v,x){x.displacementMap&&(v.displacementMap.value=x.displacementMap,v.displacementScale.value=x.displacementScale,v.displacementBias.value=x.displacementBias),v.referencePosition.value.copy(x.referencePosition),v.nearDistance.value=x.nearDistance,v.farDistance.value=x.farDistance}function m(v,x){x.bumpMap&&(v.bumpMap.value=x.bumpMap,v.bumpScale.value=x.bumpScale,x.side===Rt&&(v.bumpScale.value*=-1)),x.normalMap&&(v.normalMap.value=x.normalMap,v.normalScale.value.copy(x.normalScale),x.side===Rt&&v.normalScale.value.negate()),x.displacementMap&&(v.displacementMap.value=x.displacementMap,v.displacementScale.value=x.displacementScale,v.displacementBias.value=x.displacementBias)}return{refreshFogUniforms:e,refreshMaterialUniforms:t}}function aP(){const n=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return n.style.display="block",n}function Tc(n){n=n||{};const e=n.canvas!==void 0?n.canvas:aP(),t=n.context!==void 0?n.context:null,i=n.alpha!==void 0?n.alpha:!1,r=n.depth!==void 0?n.depth:!0,s=n.stencil!==void 0?n.stencil:!0,o=n.antialias!==void 0?n.antialias:!1,a=n.premultipliedAlpha!==void 0?n.premultipliedAlpha:!0,l=n.preserveDrawingBuffer!==void 0?n.preserveDrawingBuffer:!1,c=n.powerPreference!==void 0?n.powerPreference:"default",u=n.failIfMajorPerformanceCaveat!==void 0?n.failIfMajorPerformanceCaveat:!1;let f=null,h=null;const d=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=Qt,this.physicallyCorrectLights=!1,this.toneMapping=es,this.toneMappingExposure=1,this.maxMorphTargets=8,this.maxMorphNormals=4;const p=this;let g=!1,m=null,v=0,x=0,M=null,b=null,w=-1,y=null;const _=new ft,S=new ft;let E=null,R=e.width,I=e.height,$=1,q=null,L=null;const N=new ft(0,0,R,I),G=new ft(0,0,R,I);let X=!1;const K=new Ec;let j=!1,ee=!1;const P=new tt,V=new F,Y={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Q(){return M===null?$:1}let B=t;function oe(U,ue){for(let fe=0;fe<U.length;fe++){const k=U[fe],W=e.getContext(k,ue);if(W!==null)return W}return null}try{const U={alpha:i,depth:r,stencil:s,antialias:o,premultipliedAlpha:a,preserveDrawingBuffer:l,powerPreference:c,failIfMajorPerformanceCaveat:u};if(e.addEventListener("webglcontextlost",Le,!1),e.addEventListener("webglcontextrestored",Ue,!1),B===null){const ue=["webgl2","webgl","experimental-webgl"];if(p.isWebGL1Renderer===!0&&ue.shift(),B=oe(ue,U),B===null)throw oe(ue)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}B.getShaderPrecisionFormat===void 0&&(B.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(U){throw console.error("THREE.WebGLRenderer: "+U.message),U}let Se,we,ye,_e,Ie,he,pe,Te,Ne,Ce,O,D,me,be,Z,C,A,ie,se,le,ge;function Re(){Se=new zR(B),we=new NR(B,Se,n),Se.init(we),le=new A1(B,Se,we),ye=new rP(B,Se,we),ye.scissor(S.copy(G).multiplyScalar($).floor()),ye.viewport(_.copy(N).multiplyScalar($).floor()),_e=new HR,Ie=new $4,he=new sP(B,Se,ye,Ie,we,le,_e),pe=new UR(p),Te=new fL(B,we),ge=new OR(B,Se,Te,we),Ne=new GR(B,Te,_e,ge),Ce=new $R(B,Ne,Te,_e),A=new qR(B),Z=new BR(Ie),O=new q4(p,pe,Se,we,ge,Z),D=new oP(Ie),me=new Y4(Ie),be=new tP(Se,we),C=new DR(p,pe,ye,Ce,a),ie=new FR(B,Se,_e,we),se=new kR(B,Se,_e,we),_e.programs=O.programs,p.capabilities=we,p.extensions=Se,p.properties=Ie,p.renderLists=me,p.state=ye,p.info=_e}Re();const ne=new L1(p,B);this.xr=ne;const Me=new T1(p,Ce,we.maxTextureSize);this.shadowMap=Me,this.getContext=function(){return B},this.getContextAttributes=function(){return B.getContextAttributes()},this.forceContextLoss=function(){const U=Se.get("WEBGL_lose_context");U&&U.loseContext()},this.forceContextRestore=function(){const U=Se.get("WEBGL_lose_context");U&&U.restoreContext()},this.getPixelRatio=function(){return $},this.setPixelRatio=function(U){U!==void 0&&($=U,this.setSize(R,I,!1))},this.getSize=function(U){return U===void 0&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),U=new Ee),U.set(R,I)},this.setSize=function(U,ue,fe){if(ne.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}R=U,I=ue,e.width=Math.floor(U*$),e.height=Math.floor(ue*$),fe!==!1&&(e.style.width=U+"px",e.style.height=ue+"px"),this.setViewport(0,0,U,ue)},this.getDrawingBufferSize=function(U){return U===void 0&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),U=new Ee),U.set(R*$,I*$).floor()},this.setDrawingBufferSize=function(U,ue,fe){R=U,I=ue,$=fe,e.width=Math.floor(U*fe),e.height=Math.floor(ue*fe),this.setViewport(0,0,U,ue)},this.getCurrentViewport=function(U){return U===void 0&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),U=new ft),U.copy(_)},this.getViewport=function(U){return U.copy(N)},this.setViewport=function(U,ue,fe,k){U.isVector4?N.set(U.x,U.y,U.z,U.w):N.set(U,ue,fe,k),ye.viewport(_.copy(N).multiplyScalar($).floor())},this.getScissor=function(U){return U.copy(G)},this.setScissor=function(U,ue,fe,k){U.isVector4?G.set(U.x,U.y,U.z,U.w):G.set(U,ue,fe,k),ye.scissor(S.copy(G).multiplyScalar($).floor())},this.getScissorTest=function(){return X},this.setScissorTest=function(U){ye.setScissorTest(X=U)},this.setOpaqueSort=function(U){q=U},this.setTransparentSort=function(U){L=U},this.getClearColor=function(U){return U===void 0&&(console.warn("WebGLRenderer: .getClearColor() now requires a Color as an argument"),U=new Ge),U.copy(C.getClearColor())},this.setClearColor=function(){C.setClearColor.apply(C,arguments)},this.getClearAlpha=function(){return C.getClearAlpha()},this.setClearAlpha=function(){C.setClearAlpha.apply(C,arguments)},this.clear=function(U,ue,fe){let k=0;(U===void 0||U)&&(k|=16384),(ue===void 0||ue)&&(k|=256),(fe===void 0||fe)&&(k|=1024),B.clear(k)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Le,!1),e.removeEventListener("webglcontextrestored",Ue,!1),me.dispose(),be.dispose(),Ie.dispose(),pe.dispose(),Ce.dispose(),ge.dispose(),ne.dispose(),xe.stop()};function Le(U){U.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),g=!0}function Ue(){console.log("THREE.WebGLRenderer: Context Restored."),g=!1,Re()}function ke(U){const ue=U.target;ue.removeEventListener("dispose",ke),Ye(ue)}function Ye(U){st(U),Ie.remove(U)}function st(U){const ue=Ie.get(U).program;ue!==void 0&&O.releaseProgram(ue)}function yt(U,ue){U.render(function(fe){p.renderBufferImmediate(fe,ue)})}this.renderBufferImmediate=function(U,ue){ge.initAttributes();const fe=Ie.get(U);U.hasPositions&&!fe.position&&(fe.position=B.createBuffer()),U.hasNormals&&!fe.normal&&(fe.normal=B.createBuffer()),U.hasUvs&&!fe.uv&&(fe.uv=B.createBuffer()),U.hasColors&&!fe.color&&(fe.color=B.createBuffer());const k=ue.getAttributes();U.hasPositions&&(B.bindBuffer(34962,fe.position),B.bufferData(34962,U.positionArray,35048),ge.enableAttribute(k.position),B.vertexAttribPointer(k.position,3,5126,!1,0,0)),U.hasNormals&&(B.bindBuffer(34962,fe.normal),B.bufferData(34962,U.normalArray,35048),ge.enableAttribute(k.normal),B.vertexAttribPointer(k.normal,3,5126,!1,0,0)),U.hasUvs&&(B.bindBuffer(34962,fe.uv),B.bufferData(34962,U.uvArray,35048),ge.enableAttribute(k.uv),B.vertexAttribPointer(k.uv,2,5126,!1,0,0)),U.hasColors&&(B.bindBuffer(34962,fe.color),B.bufferData(34962,U.colorArray,35048),ge.enableAttribute(k.color),B.vertexAttribPointer(k.color,3,5126,!1,0,0)),ge.disableUnusedAttributes(),B.drawArrays(4,0,U.count),U.count=0},this.renderBufferDirect=function(U,ue,fe,k,W,ae){ue===null&&(ue=Y);const de=W.isMesh&&W.matrixWorld.determinant()<0,ve=dt(U,ue,k,W);ye.setMaterial(k,de);let T=fe.index;const H=fe.attributes.position;if(T===null){if(H===void 0||H.count===0)return}else if(T.count===0)return;let J=1;k.wireframe===!0&&(T=Ne.getWireframeAttribute(fe),J=2),(k.morphTargets||k.morphNormals)&&A.update(W,fe,k,ve),ge.setup(W,k,ve,fe,T);let z,te=ie;T!==null&&(z=Te.get(T),te=se,te.setIndex(z));const Ae=T!==null?T.count:H.count,Pe=fe.drawRange.start*J,We=fe.drawRange.count*J,Ve=ae!==null?ae.start*J:0,et=ae!==null?ae.count*J:1/0,$e=Math.max(Pe,Ve),Qe=Math.min(Ae,Pe+We,Ve+et)-1,ct=Math.max(0,Qe-$e+1);if(ct!==0){if(W.isMesh)k.wireframe===!0?(ye.setLineWidth(k.wireframeLinewidth*Q()),te.setMode(1)):te.setMode(4);else if(W.isLine){let ln=k.linewidth;ln===void 0&&(ln=1),ye.setLineWidth(ln*Q()),W.isLineSegments?te.setMode(1):W.isLineLoop?te.setMode(2):te.setMode(3)}else W.isPoints?te.setMode(0):W.isSprite&&te.setMode(4);if(W.isInstancedMesh)te.renderInstances($e,ct,W.count);else if(fe.isInstancedBufferGeometry){const ln=Math.min(fe.instanceCount,fe._maxInstanceCount);te.renderInstances($e,ct,ln)}else te.render($e,ct)}},this.compile=function(U,ue){h=be.get(U),h.init(),U.traverseVisible(function(k){k.isLight&&k.layers.test(ue.layers)&&(h.pushLight(k),k.castShadow&&h.pushShadow(k))}),h.setupLights();const fe=new WeakMap;U.traverse(function(k){const W=k.material;if(W)if(Array.isArray(W))for(let ae=0;ae<W.length;ae++){const de=W[ae];fe.has(de)===!1&&(ot(de,U,k),fe.set(de))}else fe.has(W)===!1&&(ot(W,U,k),fe.set(W))})};let re=null;function ze(U){ne.isPresenting||re&&re(U)}const xe=new v1;xe.setAnimationLoop(ze),typeof window<"u"&&xe.setContext(window),this.setAnimationLoop=function(U){re=U,ne.setAnimationLoop(U),U===null?xe.stop():xe.start()},this.render=function(U,ue){let fe,k;if(arguments[2]!==void 0&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),fe=arguments[2]),arguments[3]!==void 0&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),k=arguments[3]),ue!==void 0&&ue.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(g===!0)return;ge.resetDefaultState(),w=-1,y=null,U.autoUpdate===!0&&U.updateMatrixWorld(),ue.parent===null&&ue.updateMatrixWorld(),ne.enabled===!0&&ne.isPresenting===!0&&(ue=ne.getCamera(ue)),U.isScene===!0&&U.onBeforeRender(p,U,ue,fe||M),h=be.get(U,d.length),h.init(),d.push(h),P.multiplyMatrices(ue.projectionMatrix,ue.matrixWorldInverse),K.setFromProjectionMatrix(P),ee=this.localClippingEnabled,j=Z.init(this.clippingPlanes,ee,ue),f=me.get(U,ue),f.init(),Be(U,ue,0,p.sortObjects),f.finish(),p.sortObjects===!0&&f.sort(q,L),j===!0&&Z.beginShadows();const W=h.state.shadowsArray;Me.render(W,U,ue),h.setupLights(),h.setupLightsView(ue),j===!0&&Z.endShadows(),this.info.autoReset===!0&&this.info.reset(),fe!==void 0&&this.setRenderTarget(fe),C.render(f,U,ue,k);const ae=f.opaque,de=f.transparent;ae.length>0&&Fe(ae,U,ue),de.length>0&&Fe(de,U,ue),U.isScene===!0&&U.onAfterRender(p,U,ue),M!==null&&(he.updateRenderTargetMipmap(M),he.updateMultisampleRenderTarget(M)),ye.buffers.depth.setTest(!0),ye.buffers.depth.setMask(!0),ye.buffers.color.setMask(!0),ye.setPolygonOffset(!1),d.pop(),d.length>0?h=d[d.length-1]:h=null,f=null};function Be(U,ue,fe,k){if(U.visible===!1)return;if(U.layers.test(ue.layers)){if(U.isGroup)fe=U.renderOrder;else if(U.isLOD)U.autoUpdate===!0&&U.update(ue);else if(U.isLight)h.pushLight(U),U.castShadow&&h.pushShadow(U);else if(U.isSprite){if(!U.frustumCulled||K.intersectsSprite(U)){k&&V.setFromMatrixPosition(U.matrixWorld).applyMatrix4(P);const de=Ce.update(U),ve=U.material;ve.visible&&f.push(U,de,ve,fe,V.z,null)}}else if(U.isImmediateRenderObject)k&&V.setFromMatrixPosition(U.matrixWorld).applyMatrix4(P),f.push(U,null,U.material,fe,V.z,null);else if((U.isMesh||U.isLine||U.isPoints)&&(U.isSkinnedMesh&&U.skeleton.frame!==_e.render.frame&&(U.skeleton.update(),U.skeleton.frame=_e.render.frame),!U.frustumCulled||K.intersectsObject(U))){k&&V.setFromMatrixPosition(U.matrixWorld).applyMatrix4(P);const de=Ce.update(U),ve=U.material;if(Array.isArray(ve)){const T=de.groups;for(let H=0,J=T.length;H<J;H++){const z=T[H],te=ve[z.materialIndex];te&&te.visible&&f.push(U,de,te,fe,V.z,z)}}else ve.visible&&f.push(U,de,ve,fe,V.z,null)}}const ae=U.children;for(let de=0,ve=ae.length;de<ve;de++)Be(ae[de],ue,fe,k)}function Fe(U,ue,fe){const k=ue.isScene===!0?ue.overrideMaterial:null;for(let W=0,ae=U.length;W<ae;W++){const de=U[W],ve=de.object,T=de.geometry,H=k===null?de.material:k,J=de.group;if(fe.isArrayCamera){const z=fe.cameras;for(let te=0,Ae=z.length;te<Ae;te++){const Pe=z[te];ve.layers.test(Pe.layers)&&(ye.viewport(_.copy(Pe.viewport)),h.setupLightsView(Pe),it(ve,ue,Pe,T,H,J))}}else it(ve,ue,fe,T,H,J)}}function it(U,ue,fe,k,W,ae){if(U.onBeforeRender(p,ue,fe,k,W,ae),U.modelViewMatrix.multiplyMatrices(fe.matrixWorldInverse,U.matrixWorld),U.normalMatrix.getNormalMatrix(U.modelViewMatrix),U.isImmediateRenderObject){const de=dt(fe,ue,W,U);ye.setMaterial(W),ge.reset(),yt(U,de)}else p.renderBufferDirect(fe,ue,k,W,U,ae);U.onAfterRender(p,ue,fe,k,W,ae)}function ot(U,ue,fe){ue.isScene!==!0&&(ue=Y);const k=Ie.get(U),W=h.state.lights,ae=h.state.shadowsArray,de=W.state.version,ve=O.getParameters(U,W.state,ae,ue,fe),T=O.getProgramCacheKey(ve);let H=k.program,J=!0;if(k.environment=U.isMeshStandardMaterial?ue.environment:null,k.fog=ue.fog,k.envMap=pe.get(U.envMap||k.environment),H===void 0)U.addEventListener("dispose",ke);else if(H.cacheKey!==T)st(U);else if(k.lightsStateVersion!==de)J=!1;else{if(ve.shaderID!==void 0)return;J=!1}J&&(ve.uniforms=O.getUniforms(U),U.onBeforeCompile(ve,p),H=O.acquireProgram(ve,T),k.program=H,k.uniforms=ve.uniforms,k.outputEncoding=ve.outputEncoding);const z=k.uniforms;(!U.isShaderMaterial&&!U.isRawShaderMaterial||U.clipping===!0)&&(k.numClippingPlanes=Z.numPlanes,k.numIntersection=Z.numIntersection,z.clippingPlanes=Z.uniform),k.needsLights=pt(U),k.lightsStateVersion=de,k.needsLights&&(z.ambientLightColor.value=W.state.ambient,z.lightProbe.value=W.state.probe,z.directionalLights.value=W.state.directional,z.directionalLightShadows.value=W.state.directionalShadow,z.spotLights.value=W.state.spot,z.spotLightShadows.value=W.state.spotShadow,z.rectAreaLights.value=W.state.rectArea,z.ltc_1.value=W.state.rectAreaLTC1,z.ltc_2.value=W.state.rectAreaLTC2,z.pointLights.value=W.state.point,z.pointLightShadows.value=W.state.pointShadow,z.hemisphereLights.value=W.state.hemi,z.directionalShadowMap.value=W.state.directionalShadowMap,z.directionalShadowMatrix.value=W.state.directionalShadowMatrix,z.spotShadowMap.value=W.state.spotShadowMap,z.spotShadowMatrix.value=W.state.spotShadowMatrix,z.pointShadowMap.value=W.state.pointShadowMap,z.pointShadowMatrix.value=W.state.pointShadowMatrix);const te=k.program.getUniforms(),Ae=hr.seqWithValue(te.seq,z);k.uniformsList=Ae}function dt(U,ue,fe,k){ue.isScene!==!0&&(ue=Y),he.resetTextureUnits();const W=ue.fog,ae=fe.isMeshStandardMaterial?ue.environment:null,de=M===null?p.outputEncoding:M.texture.encoding,ve=pe.get(fe.envMap||ae),T=Ie.get(fe),H=h.state.lights;if(j===!0&&(ee===!0||U!==y)){const Ve=U===y&&fe.id===w;Z.setState(fe,U,Ve)}fe.version===T.__version?(fe.fog&&T.fog!==W||T.environment!==ae||T.needsLights&&T.lightsStateVersion!==H.state.version||T.numClippingPlanes!==void 0&&(T.numClippingPlanes!==Z.numPlanes||T.numIntersection!==Z.numIntersection)||T.outputEncoding!==de||T.envMap!==ve)&&ot(fe,ue,k):(ot(fe,ue,k),T.__version=fe.version);let J=!1,z=!1,te=!1;const Ae=T.program,Pe=Ae.getUniforms(),We=T.uniforms;if(ye.useProgram(Ae.program)&&(J=!0,z=!0,te=!0),fe.id!==w&&(w=fe.id,z=!0),J||y!==U){if(Pe.setValue(B,"projectionMatrix",U.projectionMatrix),we.logarithmicDepthBuffer&&Pe.setValue(B,"logDepthBufFC",2/(Math.log(U.far+1)/Math.LN2)),y!==U&&(y=U,z=!0,te=!0),fe.isShaderMaterial||fe.isMeshPhongMaterial||fe.isMeshToonMaterial||fe.isMeshStandardMaterial||fe.envMap){const Ve=Pe.map.cameraPosition;Ve!==void 0&&Ve.setValue(B,V.setFromMatrixPosition(U.matrixWorld))}(fe.isMeshPhongMaterial||fe.isMeshToonMaterial||fe.isMeshLambertMaterial||fe.isMeshBasicMaterial||fe.isMeshStandardMaterial||fe.isShaderMaterial)&&Pe.setValue(B,"isOrthographic",U.isOrthographicCamera===!0),(fe.isMeshPhongMaterial||fe.isMeshToonMaterial||fe.isMeshLambertMaterial||fe.isMeshBasicMaterial||fe.isMeshStandardMaterial||fe.isShaderMaterial||fe.isShadowMaterial||fe.skinning)&&Pe.setValue(B,"viewMatrix",U.matrixWorldInverse)}if(fe.skinning){Pe.setOptional(B,k,"bindMatrix"),Pe.setOptional(B,k,"bindMatrixInverse");const Ve=k.skeleton;if(Ve){const et=Ve.bones;if(we.floatVertexTextures){if(Ve.boneTexture===null){let $e=Math.sqrt(et.length*4);$e=Ke.ceilPowerOfTwo($e),$e=Math.max($e,4);const Qe=new Float32Array($e*$e*4);Qe.set(Ve.boneMatrices);const ct=new Bi(Qe,$e,$e,yn,Pi);Ve.boneMatrices=Qe,Ve.boneTexture=ct,Ve.boneTextureSize=$e}Pe.setValue(B,"boneTexture",Ve.boneTexture,he),Pe.setValue(B,"boneTextureSize",Ve.boneTextureSize)}else Pe.setOptional(B,Ve,"boneMatrices")}}return(z||T.receiveShadow!==k.receiveShadow)&&(T.receiveShadow=k.receiveShadow,Pe.setValue(B,"receiveShadow",k.receiveShadow)),z&&(Pe.setValue(B,"toneMappingExposure",p.toneMappingExposure),T.needsLights&&cn(We,te),W&&fe.fog&&D.refreshFogUniforms(We,W),D.refreshMaterialUniforms(We,fe,$,I),hr.upload(B,T.uniformsList,We,he)),fe.isShaderMaterial&&fe.uniformsNeedUpdate===!0&&(hr.upload(B,T.uniformsList,We,he),fe.uniformsNeedUpdate=!1),fe.isSpriteMaterial&&Pe.setValue(B,"center",k.center),Pe.setValue(B,"modelViewMatrix",k.modelViewMatrix),Pe.setValue(B,"normalMatrix",k.normalMatrix),Pe.setValue(B,"modelMatrix",k.matrixWorld),Ae}function cn(U,ue){U.ambientLightColor.needsUpdate=ue,U.lightProbe.needsUpdate=ue,U.directionalLights.needsUpdate=ue,U.directionalLightShadows.needsUpdate=ue,U.pointLights.needsUpdate=ue,U.pointLightShadows.needsUpdate=ue,U.spotLights.needsUpdate=ue,U.spotLightShadows.needsUpdate=ue,U.rectAreaLights.needsUpdate=ue,U.hemisphereLights.needsUpdate=ue}function pt(U){return U.isMeshLambertMaterial||U.isMeshToonMaterial||U.isMeshPhongMaterial||U.isMeshStandardMaterial||U.isShadowMaterial||U.isShaderMaterial&&U.lights===!0}this.setFramebuffer=function(U){m!==U&&M===null&&B.bindFramebuffer(36160,U),m=U},this.getActiveCubeFace=function(){return v},this.getActiveMipmapLevel=function(){return x},this.getRenderList=function(){return f},this.setRenderList=function(U){f=U},this.getRenderTarget=function(){return M},this.setRenderTarget=function(U,ue=0,fe=0){M=U,v=ue,x=fe,U&&Ie.get(U).__webglFramebuffer===void 0&&he.setupRenderTarget(U);let k=m,W=!1;if(U){const ae=Ie.get(U).__webglFramebuffer;U.isWebGLCubeRenderTarget?(k=ae[ue],W=!0):U.isWebGLMultisampleRenderTarget?k=Ie.get(U).__webglMultisampledFramebuffer:k=ae,_.copy(U.viewport),S.copy(U.scissor),E=U.scissorTest}else _.copy(N).multiplyScalar($).floor(),S.copy(G).multiplyScalar($).floor(),E=X;if(b!==k&&(B.bindFramebuffer(36160,k),b=k),ye.viewport(_),ye.scissor(S),ye.setScissorTest(E),W){const ae=Ie.get(U.texture);B.framebufferTexture2D(36160,36064,34069+ue,ae.__webglTexture,fe)}},this.readRenderTargetPixels=function(U,ue,fe,k,W,ae,de){if(!(U&&U.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let ve=Ie.get(U).__webglFramebuffer;if(U.isWebGLCubeRenderTarget&&de!==void 0&&(ve=ve[de]),ve){let T=!1;ve!==b&&(B.bindFramebuffer(36160,ve),T=!0);try{const H=U.texture,J=H.format,z=H.type;if(J!==yn&&le.convert(J)!==B.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const te=z===Fa&&(Se.has("EXT_color_buffer_half_float")||we.isWebGL2&&Se.has("EXT_color_buffer_float"));if(z!==Jo&&le.convert(z)!==B.getParameter(35738)&&!(z===Pi&&(we.isWebGL2||Se.has("OES_texture_float")||Se.has("WEBGL_color_buffer_float")))&&!te){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}B.checkFramebufferStatus(36160)===36053?ue>=0&&ue<=U.width-k&&fe>=0&&fe<=U.height-W&&B.readPixels(ue,fe,k,W,le.convert(J),le.convert(z),ae):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{T&&B.bindFramebuffer(36160,b)}}},this.copyFramebufferToTexture=function(U,ue,fe=0){const k=Math.pow(2,-fe),W=Math.floor(ue.image.width*k),ae=Math.floor(ue.image.height*k),de=le.convert(ue.format);he.setTexture2D(ue,0),B.copyTexImage2D(3553,fe,de,U.x,U.y,W,ae,0),ye.unbindTexture()},this.copyTextureToTexture=function(U,ue,fe,k=0){const W=ue.image.width,ae=ue.image.height,de=le.convert(fe.format),ve=le.convert(fe.type);he.setTexture2D(fe,0),B.pixelStorei(37440,fe.flipY),B.pixelStorei(37441,fe.premultiplyAlpha),B.pixelStorei(3317,fe.unpackAlignment),ue.isDataTexture?B.texSubImage2D(3553,k,U.x,U.y,W,ae,de,ve,ue.image.data):ue.isCompressedTexture?B.compressedTexSubImage2D(3553,k,U.x,U.y,ue.mipmaps[0].width,ue.mipmaps[0].height,de,ue.mipmaps[0].data):B.texSubImage2D(3553,k,U.x,U.y,de,ve,ue.image),k===0&&fe.generateMipmaps&&B.generateMipmap(3553),ye.unbindTexture()},this.initTexture=function(U){he.setTexture2D(U,0),ye.unbindTexture()},this.resetState=function(){ye.reset(),ge.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function wp(n){Tc.call(this,n)}wp.prototype=Object.assign(Object.create(Tc.prototype),{constructor:wp,isWebGL1Renderer:!0});class Vu{constructor(e,t){Object.defineProperty(this,"isFogExp2",{value:!0}),this.name="",this.color=new Ge(e),this.density=t!==void 0?t:25e-5}clone(){return new Vu(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class Wu{constructor(e,t,i){Object.defineProperty(this,"isFog",{value:!0}),this.name="",this.color=new Ge(e),this.near=t!==void 0?t:1,this.far=i!==void 0?i:1e3}clone(){return new Wu(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class Sm extends qe{constructor(){super(),Object.defineProperty(this,"isScene",{value:!0}),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.background!==null&&(t.object.background=this.background.toJSON(e)),this.environment!==null&&(t.object.environment=this.environment.toJSON(e)),this.fog!==null&&(t.object.fog=this.fog.toJSON()),t}}function bn(n,e){this.array=n,this.stride=e,this.count=n!==void 0?n.length/e:0,this.usage=Sc,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Ke.generateUUID()}Object.defineProperty(bn.prototype,"needsUpdate",{set:function(n){n===!0&&this.version++}});Object.assign(bn.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(n){return this.usage=n,this},copy:function(n){return this.array=new n.array.constructor(n.array),this.count=n.count,this.stride=n.stride,this.usage=n.usage,this},copyAt:function(n,e,t){n*=this.stride,t*=e.stride;for(let i=0,r=this.stride;i<r;i++)this.array[n+i]=e.array[t+i];return this},set:function(n,e=0){return this.array.set(n,e),this},clone:function(n){n.arrayBuffers===void 0&&(n.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Ke.generateUUID()),n.arrayBuffers[this.array.buffer._uuid]===void 0&&(n.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(n.arrayBuffers[this.array.buffer._uuid]),t=new bn(e,this.stride);return t.setUsage(this.usage),t},onUpload:function(n){return this.onUploadCallback=n,this},toJSON:function(n){return n.arrayBuffers===void 0&&(n.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Ke.generateUUID()),n.arrayBuffers[this.array.buffer._uuid]===void 0&&(n.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});const Dr=new F;function xr(n,e,t,i){this.name="",this.data=n,this.itemSize=e,this.offset=t,this.normalized=i===!0}Object.defineProperties(xr.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}},needsUpdate:{set:function(n){this.data.needsUpdate=n}}});Object.assign(xr.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(n){for(let e=0,t=this.data.count;e<t;e++)Dr.x=this.getX(e),Dr.y=this.getY(e),Dr.z=this.getZ(e),Dr.applyMatrix4(n),this.setXYZ(e,Dr.x,Dr.y,Dr.z);return this},setX:function(n,e){return this.data.array[n*this.data.stride+this.offset]=e,this},setY:function(n,e){return this.data.array[n*this.data.stride+this.offset+1]=e,this},setZ:function(n,e){return this.data.array[n*this.data.stride+this.offset+2]=e,this},setW:function(n,e){return this.data.array[n*this.data.stride+this.offset+3]=e,this},getX:function(n){return this.data.array[n*this.data.stride+this.offset]},getY:function(n){return this.data.array[n*this.data.stride+this.offset+1]},getZ:function(n){return this.data.array[n*this.data.stride+this.offset+2]},getW:function(n){return this.data.array[n*this.data.stride+this.offset+3]},setXY:function(n,e,t){return n=n*this.data.stride+this.offset,this.data.array[n+0]=e,this.data.array[n+1]=t,this},setXYZ:function(n,e,t,i){return n=n*this.data.stride+this.offset,this.data.array[n+0]=e,this.data.array[n+1]=t,this.data.array[n+2]=i,this},setXYZW:function(n,e,t,i,r){return n=n*this.data.stride+this.offset,this.data.array[n+0]=e,this.data.array[n+1]=t,this.data.array[n+2]=i,this.data.array[n+3]=r,this},clone:function(n){if(n===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const i=t*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)e.push(this.data.array[i+r])}return new Ze(new this.array.constructor(e),this.itemSize,this.normalized)}else return n.interleavedBuffers===void 0&&(n.interleavedBuffers={}),n.interleavedBuffers[this.data.uuid]===void 0&&(n.interleavedBuffers[this.data.uuid]=this.data.clone(n)),new xr(n.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)},toJSON:function(n){if(n===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const i=t*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)e.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}else return n.interleavedBuffers===void 0&&(n.interleavedBuffers={}),n.interleavedBuffers[this.data.uuid]===void 0&&(n.interleavedBuffers[this.data.uuid]=this.data.toJSON(n)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}});function vr(n){Je.call(this),this.type="SpriteMaterial",this.color=new Ge(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(n)}vr.prototype=Object.create(Je.prototype);vr.prototype.constructor=vr;vr.prototype.isSpriteMaterial=!0;vr.prototype.copy=function(n){return Je.prototype.copy.call(this,n),this.color.copy(n.color),this.map=n.map,this.alphaMap=n.alphaMap,this.rotation=n.rotation,this.sizeAttenuation=n.sizeAttenuation,this};let ro;const da=new F,so=new F,oo=new F,ao=new Ee,pa=new Ee,C1=new tt,pl=new F,ma=new F,ml=new F,pv=new Ee,Od=new Ee,mv=new Ee;function $a(n){if(qe.call(this),this.type="Sprite",ro===void 0){ro=new Xe;const e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),t=new bn(e,5);ro.setIndex([0,1,2,0,2,3]),ro.setAttribute("position",new xr(t,3,0,!1)),ro.setAttribute("uv",new xr(t,2,3,!1))}this.geometry=ro,this.material=n!==void 0?n:new vr,this.center=new Ee(.5,.5)}$a.prototype=Object.assign(Object.create(qe.prototype),{constructor:$a,isSprite:!0,raycast:function(n,e){n.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),so.setFromMatrixScale(this.matrixWorld),C1.copy(n.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(n.camera.matrixWorldInverse,this.matrixWorld),oo.setFromMatrixPosition(this.modelViewMatrix),n.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&so.multiplyScalar(-oo.z);const t=this.material.rotation;let i,r;t!==0&&(r=Math.cos(t),i=Math.sin(t));const s=this.center;gl(pl.set(-.5,-.5,0),oo,s,so,i,r),gl(ma.set(.5,-.5,0),oo,s,so,i,r),gl(ml.set(.5,.5,0),oo,s,so,i,r),pv.set(0,0),Od.set(1,0),mv.set(1,1);let o=n.ray.intersectTriangle(pl,ma,ml,!1,da);if(o===null&&(gl(ma.set(-.5,.5,0),oo,s,so,i,r),Od.set(0,1),o=n.ray.intersectTriangle(pl,ml,ma,!1,da),o===null))return;const a=n.ray.origin.distanceTo(da);a<n.near||a>n.far||e.push({distance:a,point:da.clone(),uv:Ht.getUV(da,pl,ma,ml,pv,Od,mv,new Ee),face:null,object:this})},copy:function(n){return qe.prototype.copy.call(this,n),n.center!==void 0&&this.center.copy(n.center),this.material=n.material,this}});function gl(n,e,t,i,r,s){ao.subVectors(n,t).addScalar(.5).multiply(i),r!==void 0?(pa.x=s*ao.x-r*ao.y,pa.y=r*ao.x+s*ao.y):pa.copy(ao),n.copy(e),n.x+=pa.x,n.y+=pa.y,n.applyMatrix4(C1)}const xl=new F,gv=new F;function ja(){qe.call(this),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}ja.prototype=Object.assign(Object.create(qe.prototype),{constructor:ja,isLOD:!0,copy:function(n){qe.prototype.copy.call(this,n,!1);const e=n.levels;for(let t=0,i=e.length;t<i;t++){const r=e[t];this.addLevel(r.object.clone(),r.distance)}return this.autoUpdate=n.autoUpdate,this},addLevel:function(n,e=0){e=Math.abs(e);const t=this.levels;let i;for(i=0;i<t.length&&!(e<t[i].distance);i++);return t.splice(i,0,{distance:e,object:n}),this.add(n),this},getCurrentLevel:function(){return this._currentLevel},getObjectForDistance:function(n){const e=this.levels;if(e.length>0){let t,i;for(t=1,i=e.length;t<i&&!(n<e[t].distance);t++);return e[t-1].object}return null},raycast:function(n,e){if(this.levels.length>0){xl.setFromMatrixPosition(this.matrixWorld);const i=n.ray.origin.distanceTo(xl);this.getObjectForDistance(i).raycast(n,e)}},update:function(n){const e=this.levels;if(e.length>1){xl.setFromMatrixPosition(n.matrixWorld),gv.setFromMatrixPosition(this.matrixWorld);const t=xl.distanceTo(gv)/n.zoom;e[0].object.visible=!0;let i,r;for(i=1,r=e.length;i<r&&t>=e[i].distance;i++)e[i-1].object.visible=!1,e[i].object.visible=!0;for(this._currentLevel=i-1;i<r;i++)e[i].object.visible=!1}},toJSON:function(n){const e=qe.prototype.toJSON.call(this,n);this.autoUpdate===!1&&(e.object.autoUpdate=!1),e.object.levels=[];const t=this.levels;for(let i=0,r=t.length;i<r;i++){const s=t[i];e.object.levels.push({object:s.object.uuid,distance:s.distance})}return e}});const xv=new F,vv=new ft,bv=new ft,cP=new F,yv=new tt;function Xa(n,e){n&&n.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),xt.call(this,n,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new tt,this.bindMatrixInverse=new tt}Xa.prototype=Object.assign(Object.create(xt.prototype),{constructor:Xa,isSkinnedMesh:!0,copy:function(n){return xt.prototype.copy.call(this,n),this.bindMode=n.bindMode,this.bindMatrix.copy(n.bindMatrix),this.bindMatrixInverse.copy(n.bindMatrixInverse),this.skeleton=n.skeleton,this},bind:function(n,e){this.skeleton=n,e===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){const n=new ft,e=this.geometry.attributes.skinWeight;for(let t=0,i=e.count;t<i;t++){n.x=e.getX(t),n.y=e.getY(t),n.z=e.getZ(t),n.w=e.getW(t);const r=1/n.manhattanLength();r!==1/0?n.multiplyScalar(r):n.set(1,0,0,0),e.setXYZW(t,n.x,n.y,n.z,n.w)}},updateMatrixWorld:function(n){xt.prototype.updateMatrixWorld.call(this,n),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},boneTransform:function(n,e){const t=this.skeleton,i=this.geometry;vv.fromBufferAttribute(i.attributes.skinIndex,n),bv.fromBufferAttribute(i.attributes.skinWeight,n),xv.fromBufferAttribute(i.attributes.position,n).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let r=0;r<4;r++){const s=bv.getComponent(r);if(s!==0){const o=vv.getComponent(r);yv.multiplyMatrices(t.bones[o].matrixWorld,t.boneInverses[o]),e.addScaledVector(cP.copy(xv).applyMatrix4(yv),s)}}return e.applyMatrix4(this.bindMatrixInverse)}});function Ya(){qe.call(this),this.type="Bone"}Ya.prototype=Object.assign(Object.create(qe.prototype),{constructor:Ya,isBone:!0});const _v=new tt,lP=new tt;function Za(n=[],e=[]){this.uuid=Ke.generateUUID(),this.bones=n.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}Object.assign(Za.prototype,{init:function(){const n=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(n.length*16),e.length===0)this.calculateInverses();else if(n.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let t=0,i=this.bones.length;t<i;t++)this.boneInverses.push(new tt)}},calculateInverses:function(){this.boneInverses.length=0;for(let n=0,e=this.bones.length;n<e;n++){const t=new tt;this.bones[n]&&t.copy(this.bones[n].matrixWorld).invert(),this.boneInverses.push(t)}},pose:function(){for(let n=0,e=this.bones.length;n<e;n++){const t=this.bones[n];t&&t.matrixWorld.copy(this.boneInverses[n]).invert()}for(let n=0,e=this.bones.length;n<e;n++){const t=this.bones[n];t&&(t.parent&&t.parent.isBone?(t.matrix.copy(t.parent.matrixWorld).invert(),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))}},update:function(){const n=this.bones,e=this.boneInverses,t=this.boneMatrices,i=this.boneTexture;for(let r=0,s=n.length;r<s;r++){const o=n[r]?n[r].matrixWorld:lP;_v.multiplyMatrices(o,e[r]),_v.toArray(t,r*16)}i!==null&&(i.needsUpdate=!0)},clone:function(){return new Za(this.bones,this.boneInverses)},getBoneByName:function(n){for(let e=0,t=this.bones.length;e<t;e++){const i=this.bones[e];if(i.name===n)return i}},dispose:function(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)},fromJSON:function(n,e){this.uuid=n.uuid;for(let t=0,i=n.bones.length;t<i;t++){const r=n.bones[t];let s=e[r];s===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),s=new Ya),this.bones.push(s),this.boneInverses.push(new tt().fromArray(n.boneInverses[t]))}return this.init(),this},toJSON:function(){const n={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};n.uuid=this.uuid;const e=this.bones,t=this.boneInverses;for(let i=0,r=e.length;i<r;i++){const s=e[i];n.bones.push(s.uuid);const o=t[i];n.boneInverses.push(o.toArray())}return n}});const Mv=new tt,wv=new tt,vl=[],ga=new xt;function Kl(n,e,t){xt.call(this,n,e),this.instanceMatrix=new Ze(new Float32Array(t*16),16),this.instanceColor=null,this.count=t,this.frustumCulled=!1}Kl.prototype=Object.assign(Object.create(xt.prototype),{constructor:Kl,isInstancedMesh:!0,copy:function(n){return xt.prototype.copy.call(this,n),this.instanceMatrix.copy(n.instanceMatrix),n.instanceColor!==null&&(this.instanceColor=n.instanceColor.clone()),this.count=n.count,this},getColorAt:function(n,e){e.fromArray(this.instanceColor.array,n*3)},getMatrixAt:function(n,e){e.fromArray(this.instanceMatrix.array,n*16)},raycast:function(n,e){const t=this.matrixWorld,i=this.count;if(ga.geometry=this.geometry,ga.material=this.material,ga.material!==void 0)for(let r=0;r<i;r++){this.getMatrixAt(r,Mv),wv.multiplyMatrices(t,Mv),ga.matrixWorld=wv,ga.raycast(n,vl);for(let s=0,o=vl.length;s<o;s++){const a=vl[s];a.instanceId=r,a.object=this,e.push(a)}vl.length=0}},setColorAt:function(n,e){this.instanceColor===null&&(this.instanceColor=new Ze(new Float32Array(this.count*3),3)),e.toArray(this.instanceColor.array,n*3)},setMatrixAt:function(n,e){e.toArray(this.instanceMatrix.array,n*16)},updateMorphTargets:function(){},dispose:function(){this.dispatchEvent({type:"dispose"})}});function Mt(n){Je.call(this),this.type="LineBasicMaterial",this.color=new Ge(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(n)}Mt.prototype=Object.create(Je.prototype);Mt.prototype.constructor=Mt;Mt.prototype.isLineBasicMaterial=!0;Mt.prototype.copy=function(n){return Je.prototype.copy.call(this,n),this.color.copy(n.color),this.linewidth=n.linewidth,this.linecap=n.linecap,this.linejoin=n.linejoin,this.morphTargets=n.morphTargets,this};const Sv=new F,Ev=new F,Tv=new tt,Fd=new Ko,bl=new Tr;function In(n=new Xe,e=new Mt){qe.call(this),this.type="Line",this.geometry=n,this.material=e,this.updateMorphTargets()}In.prototype=Object.assign(Object.create(qe.prototype),{constructor:In,isLine:!0,copy:function(n){return qe.prototype.copy.call(this,n),this.material=n.material,this.geometry=n.geometry,this},computeLineDistances:function(){const n=this.geometry;if(n.isBufferGeometry)if(n.index===null){const e=n.attributes.position,t=[0];for(let i=1,r=e.count;i<r;i++)Sv.fromBufferAttribute(e,i-1),Ev.fromBufferAttribute(e,i),t[i]=t[i-1],t[i]+=Sv.distanceTo(Ev);n.setAttribute("lineDistance",new He(t,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else n.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this},raycast:function(n,e){const t=this.geometry,i=this.matrixWorld,r=n.params.Line.threshold;if(t.boundingSphere===null&&t.computeBoundingSphere(),bl.copy(t.boundingSphere),bl.applyMatrix4(i),bl.radius+=r,n.ray.intersectsSphere(bl)===!1)return;Tv.copy(i).invert(),Fd.copy(n.ray).applyMatrix4(Tv);const s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s,a=new F,l=new F,c=new F,u=new F,f=this.isLineSegments?2:1;if(t.isBufferGeometry){const h=t.index,p=t.attributes.position;if(h!==null){const g=h.array;for(let m=0,v=g.length-1;m<v;m+=f){const x=g[m],M=g[m+1];if(a.fromBufferAttribute(p,x),l.fromBufferAttribute(p,M),Fd.distanceSqToSegment(a,l,u,c)>o)continue;u.applyMatrix4(this.matrixWorld);const w=n.ray.origin.distanceTo(u);w<n.near||w>n.far||e.push({distance:w,point:c.clone().applyMatrix4(this.matrixWorld),index:m,face:null,faceIndex:null,object:this})}}else for(let g=0,m=p.count-1;g<m;g+=f){if(a.fromBufferAttribute(p,g),l.fromBufferAttribute(p,g+1),Fd.distanceSqToSegment(a,l,u,c)>o)continue;u.applyMatrix4(this.matrixWorld);const x=n.ray.origin.distanceTo(u);x<n.near||x>n.far||e.push({distance:x,point:c.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this})}}else t.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")},updateMorphTargets:function(){const n=this.geometry;if(n.isBufferGeometry){const e=n.morphAttributes,t=Object.keys(e);if(t.length>0){const i=e[t[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=i.length;r<s;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}else{const e=n.morphTargets;e!==void 0&&e.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});const Av=new F,Lv=new F;function tn(n,e){In.call(this,n,e),this.type="LineSegments"}tn.prototype=Object.assign(Object.create(In.prototype),{constructor:tn,isLineSegments:!0,computeLineDistances:function(){const n=this.geometry;if(n.isBufferGeometry)if(n.index===null){const e=n.attributes.position,t=[];for(let i=0,r=e.count;i<r;i+=2)Av.fromBufferAttribute(e,i),Lv.fromBufferAttribute(e,i+1),t[i]=i===0?0:t[i-1],t[i+1]=t[i]+Av.distanceTo(Lv);n.setAttribute("lineDistance",new He(t,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else n.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}});function Ql(n,e){In.call(this,n,e),this.type="LineLoop"}Ql.prototype=Object.assign(Object.create(In.prototype),{constructor:Ql,isLineLoop:!0});function $n(n){Je.call(this),this.type="PointsMaterial",this.color=new Ge(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(n)}$n.prototype=Object.create(Je.prototype);$n.prototype.constructor=$n;$n.prototype.isPointsMaterial=!0;$n.prototype.copy=function(n){return Je.prototype.copy.call(this,n),this.color.copy(n.color),this.map=n.map,this.alphaMap=n.alphaMap,this.size=n.size,this.sizeAttenuation=n.sizeAttenuation,this.morphTargets=n.morphTargets,this};const Cv=new tt,Sp=new Ko,yl=new Tr,_l=new F;function Io(n=new Xe,e=new $n){qe.call(this),this.type="Points",this.geometry=n,this.material=e,this.updateMorphTargets()}Io.prototype=Object.assign(Object.create(qe.prototype),{constructor:Io,isPoints:!0,copy:function(n){return qe.prototype.copy.call(this,n),this.material=n.material,this.geometry=n.geometry,this},raycast:function(n,e){const t=this.geometry,i=this.matrixWorld,r=n.params.Points.threshold;if(t.boundingSphere===null&&t.computeBoundingSphere(),yl.copy(t.boundingSphere),yl.applyMatrix4(i),yl.radius+=r,n.ray.intersectsSphere(yl)===!1)return;Cv.copy(i).invert(),Sp.copy(n.ray).applyMatrix4(Cv);const s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s;if(t.isBufferGeometry){const a=t.index,c=t.attributes.position;if(a!==null){const u=a.array;for(let f=0,h=u.length;f<h;f++){const d=u[f];_l.fromBufferAttribute(c,d),Rv(_l,d,o,i,n,e,this)}}else for(let u=0,f=c.count;u<f;u++)_l.fromBufferAttribute(c,u),Rv(_l,u,o,i,n,e,this)}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")},updateMorphTargets:function(){const n=this.geometry;if(n.isBufferGeometry){const e=n.morphAttributes,t=Object.keys(e);if(t.length>0){const i=e[t[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=i.length;r<s;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}else{const e=n.morphTargets;e!==void 0&&e.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});function Rv(n,e,t,i,r,s,o){const a=Sp.distanceSqToPoint(n);if(a<t){const l=new F;Sp.closestPointToPoint(n,l),l.applyMatrix4(i);const c=r.ray.origin.distanceTo(l);if(c<r.near||c>r.far)return;s.push({distance:c,distanceToRay:Math.sqrt(a),point:l,index:e,face:null,object:o})}}function Ep(n,e,t,i,r,s,o,a,l){ht.call(this,n,e,t,i,r,s,o,a,l),this.format=o!==void 0?o:ur,this.minFilter=s!==void 0?s:Nt,this.magFilter=r!==void 0?r:Nt,this.generateMipmaps=!1;const c=this;function u(){c.needsUpdate=!0,n.requestVideoFrameCallback(u)}"requestVideoFrameCallback"in n&&n.requestVideoFrameCallback(u)}Ep.prototype=Object.assign(Object.create(ht.prototype),{constructor:Ep,clone:function(){return new this.constructor(this.image).copy(this)},isVideoTexture:!0,update:function(){const n=this.image;"requestVideoFrameCallback"in n===!1&&n.readyState>=n.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}});function Do(n,e,t,i,r,s,o,a,l,c,u,f){ht.call(this,null,s,o,a,l,c,i,r,u,f),this.image={width:e,height:t},this.mipmaps=n,this.flipY=!1,this.generateMipmaps=!1}Do.prototype=Object.create(ht.prototype);Do.prototype.constructor=Do;Do.prototype.isCompressedTexture=!0;function Ja(n,e,t,i,r,s,o,a,l){ht.call(this,n,e,t,i,r,s,o,a,l),this.needsUpdate=!0}Ja.prototype=Object.create(ht.prototype);Ja.prototype.constructor=Ja;Ja.prototype.isCanvasTexture=!0;function Ka(n,e,t,i,r,s,o,a,l,c){if(c=c!==void 0?c:ts,c!==ts&&c!==Lo)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");t===void 0&&c===ts&&(t=Oa),t===void 0&&c===Lo&&(t=yo),ht.call(this,null,i,r,s,o,a,c,t,l),this.image={width:n,height:e},this.magFilter=o!==void 0?o:Dt,this.minFilter=a!==void 0?a:Dt,this.flipY=!1,this.generateMipmaps=!1}Ka.prototype=Object.create(ht.prototype);Ka.prototype.constructor=Ka;Ka.prototype.isDepthTexture=!0;class eu extends Xe{constructor(e=1,t=8,i=0,r=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:i,thetaLength:r},t=Math.max(3,t);const s=[],o=[],a=[],l=[],c=new F,u=new Ee;o.push(0,0,0),a.push(0,0,1),l.push(.5,.5);for(let f=0,h=3;f<=t;f++,h+=3){const d=i+f/t*r;c.x=e*Math.cos(d),c.y=e*Math.sin(d),o.push(c.x,c.y,c.z),a.push(0,0,1),u.x=(o[h]/e+1)/2,u.y=(o[h+1]/e+1)/2,l.push(u.x,u.y)}for(let f=1;f<=t;f++)s.push(f,f+1,0);this.setIndex(s),this.setAttribute("position",new He(o,3)),this.setAttribute("normal",new He(a,3)),this.setAttribute("uv",new He(l,2))}}class Oo extends Xe{constructor(e=1,t=1,i=1,r=8,s=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:i,radialSegments:r,heightSegments:s,openEnded:o,thetaStart:a,thetaLength:l};const c=this;r=Math.floor(r),s=Math.floor(s);const u=[],f=[],h=[],d=[];let p=0;const g=[],m=i/2;let v=0;x(),o===!1&&(e>0&&M(!0),t>0&&M(!1)),this.setIndex(u),this.setAttribute("position",new He(f,3)),this.setAttribute("normal",new He(h,3)),this.setAttribute("uv",new He(d,2));function x(){const b=new F,w=new F;let y=0;const _=(t-e)/i;for(let S=0;S<=s;S++){const E=[],R=S/s,I=R*(t-e)+e;for(let $=0;$<=r;$++){const q=$/r,L=q*l+a,N=Math.sin(L),G=Math.cos(L);w.x=I*N,w.y=-R*i+m,w.z=I*G,f.push(w.x,w.y,w.z),b.set(N,_,G).normalize(),h.push(b.x,b.y,b.z),d.push(q,1-R),E.push(p++)}g.push(E)}for(let S=0;S<r;S++)for(let E=0;E<s;E++){const R=g[E][S],I=g[E+1][S],$=g[E+1][S+1],q=g[E][S+1];u.push(R,I,q),u.push(I,$,q),y+=6}c.addGroup(v,y,0),v+=y}function M(b){const w=p,y=new Ee,_=new F;let S=0;const E=b===!0?e:t,R=b===!0?1:-1;for(let $=1;$<=r;$++)f.push(0,m*R,0),h.push(0,R,0),d.push(.5,.5),p++;const I=p;for(let $=0;$<=r;$++){const L=$/r*l+a,N=Math.cos(L),G=Math.sin(L);_.x=E*G,_.y=m*R,_.z=E*N,f.push(_.x,_.y,_.z),h.push(0,R,0),y.x=N*.5+.5,y.y=G*.5*R+.5,d.push(y.x,y.y),p++}for(let $=0;$<r;$++){const q=w+$,L=I+$;b===!0?u.push(L,L+1,q):u.push(L+1,L,q),S+=3}c.addGroup(v,S,b===!0?1:2),v+=S}}}class tu extends Oo{constructor(e=1,t=1,i=8,r=1,s=!1,o=0,a=Math.PI*2){super(0,e,t,i,r,s,o,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:i,heightSegments:r,openEnded:s,thetaStart:o,thetaLength:a}}}class br extends Xe{constructor(e,t,i=1,r=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:i,detail:r};const s=[],o=[];a(r),c(i),u(),this.setAttribute("position",new He(s,3)),this.setAttribute("normal",new He(s.slice(),3)),this.setAttribute("uv",new He(o,2)),r===0?this.computeVertexNormals():this.normalizeNormals();function a(x){const M=new F,b=new F,w=new F;for(let y=0;y<t.length;y+=3)d(t[y+0],M),d(t[y+1],b),d(t[y+2],w),l(M,b,w,x)}function l(x,M,b,w){const y=w+1,_=[];for(let S=0;S<=y;S++){_[S]=[];const E=x.clone().lerp(b,S/y),R=M.clone().lerp(b,S/y),I=y-S;for(let $=0;$<=I;$++)$===0&&S===y?_[S][$]=E:_[S][$]=E.clone().lerp(R,$/I)}for(let S=0;S<y;S++)for(let E=0;E<2*(y-S)-1;E++){const R=Math.floor(E/2);E%2===0?(h(_[S][R+1]),h(_[S+1][R]),h(_[S][R])):(h(_[S][R+1]),h(_[S+1][R+1]),h(_[S+1][R]))}}function c(x){const M=new F;for(let b=0;b<s.length;b+=3)M.x=s[b+0],M.y=s[b+1],M.z=s[b+2],M.normalize().multiplyScalar(x),s[b+0]=M.x,s[b+1]=M.y,s[b+2]=M.z}function u(){const x=new F;for(let M=0;M<s.length;M+=3){x.x=s[M+0],x.y=s[M+1],x.z=s[M+2];const b=m(x)/2/Math.PI+.5,w=v(x)/Math.PI+.5;o.push(b,1-w)}p(),f()}function f(){for(let x=0;x<o.length;x+=6){const M=o[x+0],b=o[x+2],w=o[x+4],y=Math.max(M,b,w),_=Math.min(M,b,w);y>.9&&_<.1&&(M<.2&&(o[x+0]+=1),b<.2&&(o[x+2]+=1),w<.2&&(o[x+4]+=1))}}function h(x){s.push(x.x,x.y,x.z)}function d(x,M){const b=x*3;M.x=e[b+0],M.y=e[b+1],M.z=e[b+2]}function p(){const x=new F,M=new F,b=new F,w=new F,y=new Ee,_=new Ee,S=new Ee;for(let E=0,R=0;E<s.length;E+=9,R+=6){x.set(s[E+0],s[E+1],s[E+2]),M.set(s[E+3],s[E+4],s[E+5]),b.set(s[E+6],s[E+7],s[E+8]),y.set(o[R+0],o[R+1]),_.set(o[R+2],o[R+3]),S.set(o[R+4],o[R+5]),w.copy(x).add(M).add(b).divideScalar(3);const I=m(w);g(y,R+0,x,I),g(_,R+2,M,I),g(S,R+4,b,I)}}function g(x,M,b,w){w<0&&x.x===1&&(o[M]=x.x-1),b.x===0&&b.z===0&&(o[M]=w/2/Math.PI+.5)}function m(x){return Math.atan2(x.z,-x.x)}function v(x){return Math.atan2(-x.y,Math.sqrt(x.x*x.x+x.z*x.z))}}}class nu extends br{constructor(e=1,t=0){const i=(1+Math.sqrt(5))/2,r=1/i,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-i,0,-r,i,0,r,-i,0,r,i,-r,-i,0,-r,i,0,r,-i,0,r,i,0,-i,0,-r,i,0,-r,-i,0,r,i,0,r],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,o,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}}const Ml=new F,wl=new F,Nd=new F,Sl=new Ht;class Em extends Xe{constructor(e,t){if(super(),this.type="EdgesGeometry",this.parameters={thresholdAngle:t},t=t!==void 0?t:1,e.isGeometry===!0){console.error("THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return}const r=Math.pow(10,4),s=Math.cos(Ke.DEG2RAD*t),o=e.getIndex(),a=e.getAttribute("position"),l=o?o.count:a.count,c=[0,0,0],u=["a","b","c"],f=new Array(3),h={},d=[];for(let p=0;p<l;p+=3){o?(c[0]=o.getX(p),c[1]=o.getX(p+1),c[2]=o.getX(p+2)):(c[0]=p,c[1]=p+1,c[2]=p+2);const{a:g,b:m,c:v}=Sl;if(g.fromBufferAttribute(a,c[0]),m.fromBufferAttribute(a,c[1]),v.fromBufferAttribute(a,c[2]),Sl.getNormal(Nd),f[0]=`${Math.round(g.x*r)},${Math.round(g.y*r)},${Math.round(g.z*r)}`,f[1]=`${Math.round(m.x*r)},${Math.round(m.y*r)},${Math.round(m.z*r)}`,f[2]=`${Math.round(v.x*r)},${Math.round(v.y*r)},${Math.round(v.z*r)}`,!(f[0]===f[1]||f[1]===f[2]||f[2]===f[0]))for(let x=0;x<3;x++){const M=(x+1)%3,b=f[x],w=f[M],y=Sl[u[x]],_=Sl[u[M]],S=`${b}_${w}`,E=`${w}_${b}`;E in h&&h[E]?(Nd.dot(h[E].normal)<=s&&(d.push(y.x,y.y,y.z),d.push(_.x,_.y,_.z)),h[E]=null):S in h||(h[S]={index0:c[x],index1:c[M],normal:Nd.clone()})}}for(const p in h)if(h[p]){const{index0:g,index1:m}=h[p];Ml.fromBufferAttribute(a,g),wl.fromBufferAttribute(a,m),d.push(Ml.x,Ml.y,Ml.z),d.push(wl.x,wl.y,wl.z)}this.setAttribute("position",new He(d,3))}}const uP={triangulate:function(n,e,t){t=t||2;const i=e&&e.length,r=i?e[0]*t:n.length;let s=R1(n,0,r,t,!0);const o=[];if(!s||s.next===s.prev)return o;let a,l,c,u,f,h,d;if(i&&(s=mP(n,e,s,t)),n.length>80*t){a=c=n[0],l=u=n[1];for(let p=t;p<r;p+=t)f=n[p],h=n[p+1],f<a&&(a=f),h<l&&(l=h),f>c&&(c=f),h>u&&(u=h);d=Math.max(c-a,u-l),d=d!==0?1/d:0}return Qa(s,o,t,a,l,d),o}};function R1(n,e,t,i,r){let s,o;if(r===TP(n,e,t,i)>0)for(s=e;s<t;s+=i)o=Pv(s,n[s],n[s+1],o);else for(s=t-i;s>=e;s-=i)o=Pv(s,n[s],n[s+1],o);return o&&qu(o,o.next)&&(tc(o),o=o.next),o}function yr(n,e){if(!n)return n;e||(e=n);let t=n,i;do if(i=!1,!t.steiner&&(qu(t,t.next)||wt(t.prev,t,t.next)===0)){if(tc(t),t=e=t.prev,t===t.next)break;i=!0}else t=t.next;while(i||t!==e);return e}function Qa(n,e,t,i,r,s,o){if(!n)return;!o&&s&&yP(n,i,r,s);let a=n,l,c;for(;n.prev!==n.next;){if(l=n.prev,c=n.next,s?hP(n,i,r,s):fP(n)){e.push(l.i/t),e.push(n.i/t),e.push(c.i/t),tc(n),n=c.next,a=c.next;continue}if(n=c,n===a){o?o===1?(n=dP(yr(n),e,t),Qa(n,e,t,i,r,s,2)):o===2&&pP(n,e,t,i,r,s):Qa(yr(n),e,t,i,r,s,1);break}}}function fP(n){const e=n.prev,t=n,i=n.next;if(wt(e,t,i)>=0)return!1;let r=n.next.next;for(;r!==n.prev;){if(go(e.x,e.y,t.x,t.y,i.x,i.y,r.x,r.y)&&wt(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function hP(n,e,t,i){const r=n.prev,s=n,o=n.next;if(wt(r,s,o)>=0)return!1;const a=r.x<s.x?r.x<o.x?r.x:o.x:s.x<o.x?s.x:o.x,l=r.y<s.y?r.y<o.y?r.y:o.y:s.y<o.y?s.y:o.y,c=r.x>s.x?r.x>o.x?r.x:o.x:s.x>o.x?s.x:o.x,u=r.y>s.y?r.y>o.y?r.y:o.y:s.y>o.y?s.y:o.y,f=Tp(a,l,e,t,i),h=Tp(c,u,e,t,i);let d=n.prevZ,p=n.nextZ;for(;d&&d.z>=f&&p&&p.z<=h;){if(d!==n.prev&&d!==n.next&&go(r.x,r.y,s.x,s.y,o.x,o.y,d.x,d.y)&&wt(d.prev,d,d.next)>=0||(d=d.prevZ,p!==n.prev&&p!==n.next&&go(r.x,r.y,s.x,s.y,o.x,o.y,p.x,p.y)&&wt(p.prev,p,p.next)>=0))return!1;p=p.nextZ}for(;d&&d.z>=f;){if(d!==n.prev&&d!==n.next&&go(r.x,r.y,s.x,s.y,o.x,o.y,d.x,d.y)&&wt(d.prev,d,d.next)>=0)return!1;d=d.prevZ}for(;p&&p.z<=h;){if(p!==n.prev&&p!==n.next&&go(r.x,r.y,s.x,s.y,o.x,o.y,p.x,p.y)&&wt(p.prev,p,p.next)>=0)return!1;p=p.nextZ}return!0}function dP(n,e,t){let i=n;do{const r=i.prev,s=i.next.next;!qu(r,s)&&P1(r,i,i.next,s)&&ec(r,s)&&ec(s,r)&&(e.push(r.i/t),e.push(i.i/t),e.push(s.i/t),tc(i),tc(i.next),i=n=s),i=i.next}while(i!==n);return yr(i)}function pP(n,e,t,i,r,s){let o=n;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&wP(o,a)){let l=I1(o,a);o=yr(o,o.next),l=yr(l,l.next),Qa(o,e,t,i,r,s),Qa(l,e,t,i,r,s);return}a=a.next}o=o.next}while(o!==n)}function mP(n,e,t,i){const r=[];let s,o,a,l,c;for(s=0,o=e.length;s<o;s++)a=e[s]*i,l=s<o-1?e[s+1]*i:n.length,c=R1(n,a,l,i,!1),c===c.next&&(c.steiner=!0),r.push(MP(c));for(r.sort(gP),s=0;s<r.length;s++)xP(r[s],t),t=yr(t,t.next);return t}function gP(n,e){return n.x-e.x}function xP(n,e){if(e=vP(n,e),e){const t=I1(e,n);yr(e,e.next),yr(t,t.next)}}function vP(n,e){let t=e;const i=n.x,r=n.y;let s=-1/0,o;do{if(r<=t.y&&r>=t.next.y&&t.next.y!==t.y){const h=t.x+(r-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(h<=i&&h>s){if(s=h,h===i){if(r===t.y)return t;if(r===t.next.y)return t.next}o=t.x<t.next.x?t:t.next}}t=t.next}while(t!==e);if(!o)return null;if(i===s)return o;const a=o,l=o.x,c=o.y;let u=1/0,f;t=o;do i>=t.x&&t.x>=l&&i!==t.x&&go(r<c?i:s,r,l,c,r<c?s:i,r,t.x,t.y)&&(f=Math.abs(r-t.y)/(i-t.x),ec(t,n)&&(f<u||f===u&&(t.x>o.x||t.x===o.x&&bP(o,t)))&&(o=t,u=f)),t=t.next;while(t!==a);return o}function bP(n,e){return wt(n.prev,n,e.prev)<0&&wt(e.next,n,n.next)<0}function yP(n,e,t,i){let r=n;do r.z===null&&(r.z=Tp(r.x,r.y,e,t,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==n);r.prevZ.nextZ=null,r.prevZ=null,_P(r)}function _P(n){let e,t,i,r,s,o,a,l,c=1;do{for(t=n,n=null,s=null,o=0;t;){for(o++,i=t,a=0,e=0;e<c&&(a++,i=i.nextZ,!!i);e++);for(l=c;a>0||l>0&&i;)a!==0&&(l===0||!i||t.z<=i.z)?(r=t,t=t.nextZ,a--):(r=i,i=i.nextZ,l--),s?s.nextZ=r:n=r,r.prevZ=s,s=r;t=i}s.nextZ=null,c*=2}while(o>1);return n}function Tp(n,e,t,i,r){return n=32767*(n-t)*r,e=32767*(e-i)*r,n=(n|n<<8)&16711935,n=(n|n<<4)&252645135,n=(n|n<<2)&858993459,n=(n|n<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,n|e<<1}function MP(n){let e=n,t=n;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==n);return t}function go(n,e,t,i,r,s,o,a){return(r-o)*(e-a)-(n-o)*(s-a)>=0&&(n-o)*(i-a)-(t-o)*(e-a)>=0&&(t-o)*(s-a)-(r-o)*(i-a)>=0}function wP(n,e){return n.next.i!==e.i&&n.prev.i!==e.i&&!SP(n,e)&&(ec(n,e)&&ec(e,n)&&EP(n,e)&&(wt(n.prev,n,e.prev)||wt(n,e.prev,e))||qu(n,e)&&wt(n.prev,n,n.next)>0&&wt(e.prev,e,e.next)>0)}function wt(n,e,t){return(e.y-n.y)*(t.x-e.x)-(e.x-n.x)*(t.y-e.y)}function qu(n,e){return n.x===e.x&&n.y===e.y}function P1(n,e,t,i){const r=Tl(wt(n,e,t)),s=Tl(wt(n,e,i)),o=Tl(wt(t,i,n)),a=Tl(wt(t,i,e));return!!(r!==s&&o!==a||r===0&&El(n,t,e)||s===0&&El(n,i,e)||o===0&&El(t,n,i)||a===0&&El(t,e,i))}function El(n,e,t){return e.x<=Math.max(n.x,t.x)&&e.x>=Math.min(n.x,t.x)&&e.y<=Math.max(n.y,t.y)&&e.y>=Math.min(n.y,t.y)}function Tl(n){return n>0?1:n<0?-1:0}function SP(n,e){let t=n;do{if(t.i!==n.i&&t.next.i!==n.i&&t.i!==e.i&&t.next.i!==e.i&&P1(t,t.next,n,e))return!0;t=t.next}while(t!==n);return!1}function ec(n,e){return wt(n.prev,n,n.next)<0?wt(n,e,n.next)>=0&&wt(n,n.prev,e)>=0:wt(n,e,n.prev)<0||wt(n,n.next,e)<0}function EP(n,e){let t=n,i=!1;const r=(n.x+e.x)/2,s=(n.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&r<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(i=!i),t=t.next;while(t!==n);return i}function I1(n,e){const t=new Ap(n.i,n.x,n.y),i=new Ap(e.i,e.x,e.y),r=n.next,s=e.prev;return n.next=e,e.prev=n,t.next=r,r.prev=t,i.next=t,t.prev=i,s.next=i,i.prev=s,i}function Pv(n,e,t,i){const r=new Ap(n,e,t);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function tc(n){n.next.prev=n.prev,n.prev.next=n.next,n.prevZ&&(n.prevZ.nextZ=n.nextZ),n.nextZ&&(n.nextZ.prevZ=n.prevZ)}function Ap(n,e,t){this.i=n,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function TP(n,e,t,i){let r=0;for(let s=e,o=t-i;s<t;s+=i)r+=(n[o]-n[s])*(n[s+1]+n[o+1]),o=s;return r}const Ni={area:function(n){const e=n.length;let t=0;for(let i=e-1,r=0;r<e;i=r++)t+=n[i].x*n[r].y-n[r].x*n[i].y;return t*.5},isClockWise:function(n){return Ni.area(n)<0},triangulateShape:function(n,e){const t=[],i=[],r=[];Iv(n),Dv(t,n);let s=n.length;e.forEach(Iv);for(let a=0;a<e.length;a++)i.push(s),s+=e[a].length,Dv(t,e[a]);const o=uP.triangulate(t,i);for(let a=0;a<o.length;a+=3)r.push(o.slice(a,a+3));return r}};function Iv(n){const e=n.length;e>2&&n[e-1].equals(n[0])&&n.pop()}function Dv(n,e){for(let t=0;t<e.length;t++)n.push(e[t].x),n.push(e[t].y)}class ds extends Xe{constructor(e,t){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const i=this,r=[],s=[];for(let a=0,l=e.length;a<l;a++){const c=e[a];o(c)}this.setAttribute("position",new He(r,3)),this.setAttribute("uv",new He(s,2)),this.computeVertexNormals();function o(a){const l=[],c=t.curveSegments!==void 0?t.curveSegments:12,u=t.steps!==void 0?t.steps:1;let f=t.depth!==void 0?t.depth:100,h=t.bevelEnabled!==void 0?t.bevelEnabled:!0,d=t.bevelThickness!==void 0?t.bevelThickness:6,p=t.bevelSize!==void 0?t.bevelSize:d-2,g=t.bevelOffset!==void 0?t.bevelOffset:0,m=t.bevelSegments!==void 0?t.bevelSegments:3;const v=t.extrudePath,x=t.UVGenerator!==void 0?t.UVGenerator:AP;t.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),f=t.amount);let M,b=!1,w,y,_,S;v&&(M=v.getSpacedPoints(u),b=!0,h=!1,w=v.computeFrenetFrames(u,!1),y=new F,_=new F,S=new F),h||(m=0,d=0,p=0,g=0);const E=a.extractPoints(c);let R=E.shape;const I=E.holes;if(!Ni.isClockWise(R)){R=R.reverse();for(let he=0,pe=I.length;he<pe;he++){const Te=I[he];Ni.isClockWise(Te)&&(I[he]=Te.reverse())}}const q=Ni.triangulateShape(R,I),L=R;for(let he=0,pe=I.length;he<pe;he++){const Te=I[he];R=R.concat(Te)}function N(he,pe,Te){return pe||console.error("THREE.ExtrudeGeometry: vec does not exist"),pe.clone().multiplyScalar(Te).add(he)}const G=R.length,X=q.length;function K(he,pe,Te){let Ne,Ce,O;const D=he.x-pe.x,me=he.y-pe.y,be=Te.x-he.x,Z=Te.y-he.y,C=D*D+me*me,A=D*Z-me*be;if(Math.abs(A)>Number.EPSILON){const ie=Math.sqrt(C),se=Math.sqrt(be*be+Z*Z),le=pe.x-me/ie,ge=pe.y+D/ie,Re=Te.x-Z/se,ne=Te.y+be/se,Me=((Re-le)*Z-(ne-ge)*be)/(D*Z-me*be);Ne=le+D*Me-he.x,Ce=ge+me*Me-he.y;const Le=Ne*Ne+Ce*Ce;if(Le<=2)return new Ee(Ne,Ce);O=Math.sqrt(Le/2)}else{let ie=!1;D>Number.EPSILON?be>Number.EPSILON&&(ie=!0):D<-Number.EPSILON?be<-Number.EPSILON&&(ie=!0):Math.sign(me)===Math.sign(Z)&&(ie=!0),ie?(Ne=-me,Ce=D,O=Math.sqrt(C)):(Ne=D,Ce=me,O=Math.sqrt(C/2))}return new Ee(Ne/O,Ce/O)}const j=[];for(let he=0,pe=L.length,Te=pe-1,Ne=he+1;he<pe;he++,Te++,Ne++)Te===pe&&(Te=0),Ne===pe&&(Ne=0),j[he]=K(L[he],L[Te],L[Ne]);const ee=[];let P,V=j.concat();for(let he=0,pe=I.length;he<pe;he++){const Te=I[he];P=[];for(let Ne=0,Ce=Te.length,O=Ce-1,D=Ne+1;Ne<Ce;Ne++,O++,D++)O===Ce&&(O=0),D===Ce&&(D=0),P[Ne]=K(Te[Ne],Te[O],Te[D]);ee.push(P),V=V.concat(P)}for(let he=0;he<m;he++){const pe=he/m,Te=d*Math.cos(pe*Math.PI/2),Ne=p*Math.sin(pe*Math.PI/2)+g;for(let Ce=0,O=L.length;Ce<O;Ce++){const D=N(L[Ce],j[Ce],Ne);Se(D.x,D.y,-Te)}for(let Ce=0,O=I.length;Ce<O;Ce++){const D=I[Ce];P=ee[Ce];for(let me=0,be=D.length;me<be;me++){const Z=N(D[me],P[me],Ne);Se(Z.x,Z.y,-Te)}}}const Y=p+g;for(let he=0;he<G;he++){const pe=h?N(R[he],V[he],Y):R[he];b?(_.copy(w.normals[0]).multiplyScalar(pe.x),y.copy(w.binormals[0]).multiplyScalar(pe.y),S.copy(M[0]).add(_).add(y),Se(S.x,S.y,S.z)):Se(pe.x,pe.y,0)}for(let he=1;he<=u;he++)for(let pe=0;pe<G;pe++){const Te=h?N(R[pe],V[pe],Y):R[pe];b?(_.copy(w.normals[he]).multiplyScalar(Te.x),y.copy(w.binormals[he]).multiplyScalar(Te.y),S.copy(M[he]).add(_).add(y),Se(S.x,S.y,S.z)):Se(Te.x,Te.y,f/u*he)}for(let he=m-1;he>=0;he--){const pe=he/m,Te=d*Math.cos(pe*Math.PI/2),Ne=p*Math.sin(pe*Math.PI/2)+g;for(let Ce=0,O=L.length;Ce<O;Ce++){const D=N(L[Ce],j[Ce],Ne);Se(D.x,D.y,f+Te)}for(let Ce=0,O=I.length;Ce<O;Ce++){const D=I[Ce];P=ee[Ce];for(let me=0,be=D.length;me<be;me++){const Z=N(D[me],P[me],Ne);b?Se(Z.x,Z.y+M[u-1].y,M[u-1].x+Te):Se(Z.x,Z.y,f+Te)}}}Q(),B();function Q(){const he=r.length/3;if(h){let pe=0,Te=G*pe;for(let Ne=0;Ne<X;Ne++){const Ce=q[Ne];we(Ce[2]+Te,Ce[1]+Te,Ce[0]+Te)}pe=u+m*2,Te=G*pe;for(let Ne=0;Ne<X;Ne++){const Ce=q[Ne];we(Ce[0]+Te,Ce[1]+Te,Ce[2]+Te)}}else{for(let pe=0;pe<X;pe++){const Te=q[pe];we(Te[2],Te[1],Te[0])}for(let pe=0;pe<X;pe++){const Te=q[pe];we(Te[0]+G*u,Te[1]+G*u,Te[2]+G*u)}}i.addGroup(he,r.length/3-he,0)}function B(){const he=r.length/3;let pe=0;oe(L,pe),pe+=L.length;for(let Te=0,Ne=I.length;Te<Ne;Te++){const Ce=I[Te];oe(Ce,pe),pe+=Ce.length}i.addGroup(he,r.length/3-he,1)}function oe(he,pe){let Te=he.length;for(;--Te>=0;){const Ne=Te;let Ce=Te-1;Ce<0&&(Ce=he.length-1);for(let O=0,D=u+m*2;O<D;O++){const me=G*O,be=G*(O+1),Z=pe+Ne+me,C=pe+Ce+me,A=pe+Ce+be,ie=pe+Ne+be;ye(Z,C,A,ie)}}}function Se(he,pe,Te){l.push(he),l.push(pe),l.push(Te)}function we(he,pe,Te){_e(he),_e(pe),_e(Te);const Ne=r.length/3,Ce=x.generateTopUV(i,r,Ne-3,Ne-2,Ne-1);Ie(Ce[0]),Ie(Ce[1]),Ie(Ce[2])}function ye(he,pe,Te,Ne){_e(he),_e(pe),_e(Ne),_e(pe),_e(Te),_e(Ne);const Ce=r.length/3,O=x.generateSideWallUV(i,r,Ce-6,Ce-3,Ce-2,Ce-1);Ie(O[0]),Ie(O[1]),Ie(O[3]),Ie(O[1]),Ie(O[2]),Ie(O[3])}function _e(he){r.push(l[he*3+0]),r.push(l[he*3+1]),r.push(l[he*3+2])}function Ie(he){s.push(he.x),s.push(he.y)}}}toJSON(){const e=Xe.prototype.toJSON.call(this),t=this.parameters.shapes,i=this.parameters.options;return LP(t,i,e)}}const AP={generateTopUV:function(n,e,t,i,r){const s=e[t*3],o=e[t*3+1],a=e[i*3],l=e[i*3+1],c=e[r*3],u=e[r*3+1];return[new Ee(s,o),new Ee(a,l),new Ee(c,u)]},generateSideWallUV:function(n,e,t,i,r,s){const o=e[t*3],a=e[t*3+1],l=e[t*3+2],c=e[i*3],u=e[i*3+1],f=e[i*3+2],h=e[r*3],d=e[r*3+1],p=e[r*3+2],g=e[s*3],m=e[s*3+1],v=e[s*3+2];return Math.abs(a-u)<.01?[new Ee(o,1-l),new Ee(c,1-f),new Ee(h,1-p),new Ee(g,1-v)]:[new Ee(a,1-l),new Ee(u,1-f),new Ee(d,1-p),new Ee(m,1-v)]}};function LP(n,e,t){if(t.shapes=[],Array.isArray(n))for(let i=0,r=n.length;i<r;i++){const s=n[i];t.shapes.push(s.uuid)}else t.shapes.push(n.uuid);return e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class iu extends br{constructor(e=1,t=0){const i=(1+Math.sqrt(5))/2,r=[-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(r,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}}class ru extends Xe{constructor(e,t=12,i=0,r=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:i,phiLength:r},t=Math.floor(t),r=Ke.clamp(r,0,Math.PI*2);const s=[],o=[],a=[],l=1/t,c=new F,u=new Ee;for(let f=0;f<=t;f++){const h=i+f*l*r,d=Math.sin(h),p=Math.cos(h);for(let g=0;g<=e.length-1;g++)c.x=e[g].x*d,c.y=e[g].y,c.z=e[g].x*p,o.push(c.x,c.y,c.z),u.x=f/t,u.y=g/(e.length-1),a.push(u.x,u.y)}for(let f=0;f<t;f++)for(let h=0;h<e.length-1;h++){const d=h+f*e.length,p=d,g=d+e.length,m=d+e.length+1,v=d+1;s.push(p,g,v),s.push(g,m,v)}if(this.setIndex(s),this.setAttribute("position",new He(o,3)),this.setAttribute("uv",new He(a,2)),this.computeVertexNormals(),r===Math.PI*2){const f=this.attributes.normal.array,h=new F,d=new F,p=new F,g=t*e.length*3;for(let m=0,v=0;m<e.length;m++,v+=3)h.x=f[v+0],h.y=f[v+1],h.z=f[v+2],d.x=f[g+v+0],d.y=f[g+v+1],d.z=f[g+v+2],p.addVectors(h,d).normalize(),f[v+0]=f[g+v+0]=p.x,f[v+1]=f[g+v+1]=p.y,f[v+2]=f[g+v+2]=p.z}}}class nc extends br{constructor(e=1,t=0){const i=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],r=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(i,r,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}}function ps(n,e,t){Xe.call(this),this.type="ParametricGeometry",this.parameters={func:n,slices:e,stacks:t};const i=[],r=[],s=[],o=[],a=1e-5,l=new F,c=new F,u=new F,f=new F,h=new F;n.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const d=e+1;for(let p=0;p<=t;p++){const g=p/t;for(let m=0;m<=e;m++){const v=m/e;n(v,g,c),r.push(c.x,c.y,c.z),v-a>=0?(n(v-a,g,u),f.subVectors(c,u)):(n(v+a,g,u),f.subVectors(u,c)),g-a>=0?(n(v,g-a,u),h.subVectors(c,u)):(n(v,g+a,u),h.subVectors(u,c)),l.crossVectors(f,h).normalize(),s.push(l.x,l.y,l.z),o.push(v,g)}}for(let p=0;p<t;p++)for(let g=0;g<e;g++){const m=p*d+g,v=p*d+g+1,x=(p+1)*d+g+1,M=(p+1)*d+g;i.push(m,v,M),i.push(v,x,M)}this.setIndex(i),this.setAttribute("position",new He(r,3)),this.setAttribute("normal",new He(s,3)),this.setAttribute("uv",new He(o,2))}ps.prototype=Object.create(Xe.prototype);ps.prototype.constructor=ps;class su extends Xe{constructor(e=.5,t=1,i=8,r=1,s=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:i,phiSegments:r,thetaStart:s,thetaLength:o},i=Math.max(3,i),r=Math.max(1,r);const a=[],l=[],c=[],u=[];let f=e;const h=(t-e)/r,d=new F,p=new Ee;for(let g=0;g<=r;g++){for(let m=0;m<=i;m++){const v=s+m/i*o;d.x=f*Math.cos(v),d.y=f*Math.sin(v),l.push(d.x,d.y,d.z),c.push(0,0,1),p.x=(d.x/t+1)/2,p.y=(d.y/t+1)/2,u.push(p.x,p.y)}f+=h}for(let g=0;g<r;g++){const m=g*(i+1);for(let v=0;v<i;v++){const x=v+m,M=x,b=x+i+1,w=x+i+2,y=x+1;a.push(M,b,y),a.push(b,w,y)}}this.setIndex(a),this.setAttribute("position",new He(l,3)),this.setAttribute("normal",new He(c,3)),this.setAttribute("uv",new He(u,2))}}class ic extends Xe{constructor(e,t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const i=[],r=[],s=[],o=[];let a=0,l=0;if(Array.isArray(e)===!1)c(e);else for(let u=0;u<e.length;u++)c(e[u]),this.addGroup(a,l,u),a+=l,l=0;this.setIndex(i),this.setAttribute("position",new He(r,3)),this.setAttribute("normal",new He(s,3)),this.setAttribute("uv",new He(o,2));function c(u){const f=r.length/3,h=u.extractPoints(t);let d=h.shape;const p=h.holes;Ni.isClockWise(d)===!1&&(d=d.reverse());for(let m=0,v=p.length;m<v;m++){const x=p[m];Ni.isClockWise(x)===!0&&(p[m]=x.reverse())}const g=Ni.triangulateShape(d,p);for(let m=0,v=p.length;m<v;m++){const x=p[m];d=d.concat(x)}for(let m=0,v=d.length;m<v;m++){const x=d[m];r.push(x.x,x.y,0),s.push(0,0,1),o.push(x.x,x.y)}for(let m=0,v=g.length;m<v;m++){const x=g[m],M=x[0]+f,b=x[1]+f,w=x[2]+f;i.push(M,b,w),l+=3}}}toJSON(){const e=Xe.prototype.toJSON.call(this),t=this.parameters.shapes;return CP(t,e)}}function CP(n,e){if(e.shapes=[],Array.isArray(n))for(let t=0,i=n.length;t<i;t++){const r=n[t];e.shapes.push(r.uuid)}else e.shapes.push(n.uuid);return e}class rc extends Xe{constructor(e=1,t=8,i=6,r=0,s=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:i,phiStart:r,phiLength:s,thetaStart:o,thetaLength:a},t=Math.max(3,Math.floor(t)),i=Math.max(2,Math.floor(i));const l=Math.min(o+a,Math.PI);let c=0;const u=[],f=new F,h=new F,d=[],p=[],g=[],m=[];for(let v=0;v<=i;v++){const x=[],M=v/i;let b=0;v==0&&o==0?b=.5/t:v==i&&l==Math.PI&&(b=-.5/t);for(let w=0;w<=t;w++){const y=w/t;f.x=-e*Math.cos(r+y*s)*Math.sin(o+M*a),f.y=e*Math.cos(o+M*a),f.z=e*Math.sin(r+y*s)*Math.sin(o+M*a),p.push(f.x,f.y,f.z),h.copy(f).normalize(),g.push(h.x,h.y,h.z),m.push(y+b,1-M),x.push(c++)}u.push(x)}for(let v=0;v<i;v++)for(let x=0;x<t;x++){const M=u[v][x+1],b=u[v][x],w=u[v+1][x],y=u[v+1][x+1];(v!==0||o>0)&&d.push(M,b,y),(v!==i-1||l<Math.PI)&&d.push(b,w,y)}this.setIndex(d),this.setAttribute("position",new He(p,3)),this.setAttribute("normal",new He(g,3)),this.setAttribute("uv",new He(m,2))}}class ou extends br{constructor(e=1,t=0){const i=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],r=[2,1,0,0,3,2,1,3,0,2,3,1];super(i,r,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}}class au extends ds{constructor(e,t={}){const i=t.font;if(!(i&&i.isFont))return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new Xe;const r=i.generateShapes(e,t.size);t.depth=t.height!==void 0?t.height:50,t.bevelThickness===void 0&&(t.bevelThickness=10),t.bevelSize===void 0&&(t.bevelSize=8),t.bevelEnabled===void 0&&(t.bevelEnabled=!1),super(r,t),this.type="TextGeometry"}}class cu extends Xe{constructor(e=1,t=.4,i=8,r=6,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:i,tubularSegments:r,arc:s},i=Math.floor(i),r=Math.floor(r);const o=[],a=[],l=[],c=[],u=new F,f=new F,h=new F;for(let d=0;d<=i;d++)for(let p=0;p<=r;p++){const g=p/r*s,m=d/i*Math.PI*2;f.x=(e+t*Math.cos(m))*Math.cos(g),f.y=(e+t*Math.cos(m))*Math.sin(g),f.z=t*Math.sin(m),a.push(f.x,f.y,f.z),u.x=e*Math.cos(g),u.y=e*Math.sin(g),h.subVectors(f,u).normalize(),l.push(h.x,h.y,h.z),c.push(p/r),c.push(d/i)}for(let d=1;d<=i;d++)for(let p=1;p<=r;p++){const g=(r+1)*d+p-1,m=(r+1)*(d-1)+p-1,v=(r+1)*(d-1)+p,x=(r+1)*d+p;o.push(g,m,x),o.push(m,v,x)}this.setIndex(o),this.setAttribute("position",new He(a,3)),this.setAttribute("normal",new He(l,3)),this.setAttribute("uv",new He(c,2))}}class lu extends Xe{constructor(e=1,t=.4,i=64,r=8,s=2,o=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:i,radialSegments:r,p:s,q:o},i=Math.floor(i),r=Math.floor(r);const a=[],l=[],c=[],u=[],f=new F,h=new F,d=new F,p=new F,g=new F,m=new F,v=new F;for(let M=0;M<=i;++M){const b=M/i*s*Math.PI*2;x(b,s,o,e,d),x(b+.01,s,o,e,p),m.subVectors(p,d),v.addVectors(p,d),g.crossVectors(m,v),v.crossVectors(g,m),g.normalize(),v.normalize();for(let w=0;w<=r;++w){const y=w/r*Math.PI*2,_=-t*Math.cos(y),S=t*Math.sin(y);f.x=d.x+(_*v.x+S*g.x),f.y=d.y+(_*v.y+S*g.y),f.z=d.z+(_*v.z+S*g.z),l.push(f.x,f.y,f.z),h.subVectors(f,d).normalize(),c.push(h.x,h.y,h.z),u.push(M/i),u.push(w/r)}}for(let M=1;M<=i;M++)for(let b=1;b<=r;b++){const w=(r+1)*(M-1)+(b-1),y=(r+1)*M+(b-1),_=(r+1)*M+b,S=(r+1)*(M-1)+b;a.push(w,y,S),a.push(y,_,S)}this.setIndex(a),this.setAttribute("position",new He(l,3)),this.setAttribute("normal",new He(c,3)),this.setAttribute("uv",new He(u,2));function x(M,b,w,y,_){const S=Math.cos(M),E=Math.sin(M),R=w/b*M,I=Math.cos(R);_.x=y*(2+I)*.5*S,_.y=y*(2+I)*E*.5,_.z=y*Math.sin(R)*.5}}}class uu extends Xe{constructor(e,t=64,i=1,r=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:i,radialSegments:r,closed:s};const o=e.computeFrenetFrames(t,s);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const a=new F,l=new F,c=new Ee;let u=new F;const f=[],h=[],d=[],p=[];g(),this.setIndex(p),this.setAttribute("position",new He(f,3)),this.setAttribute("normal",new He(h,3)),this.setAttribute("uv",new He(d,2));function g(){for(let M=0;M<t;M++)m(M);m(s===!1?t:0),x(),v()}function m(M){u=e.getPointAt(M/t,u);const b=o.normals[M],w=o.binormals[M];for(let y=0;y<=r;y++){const _=y/r*Math.PI*2,S=Math.sin(_),E=-Math.cos(_);l.x=E*b.x+S*w.x,l.y=E*b.y+S*w.y,l.z=E*b.z+S*w.z,l.normalize(),h.push(l.x,l.y,l.z),a.x=u.x+i*l.x,a.y=u.y+i*l.y,a.z=u.z+i*l.z,f.push(a.x,a.y,a.z)}}function v(){for(let M=1;M<=t;M++)for(let b=1;b<=r;b++){const w=(r+1)*(M-1)+(b-1),y=(r+1)*M+(b-1),_=(r+1)*M+b,S=(r+1)*(M-1)+b;p.push(w,y,S),p.push(y,_,S)}}function x(){for(let M=0;M<=t;M++)for(let b=0;b<=r;b++)c.x=M/t,c.y=b/r,d.push(c.x,c.y)}}toJSON(){const e=Xe.prototype.toJSON.call(this);return e.path=this.parameters.path.toJSON(),e}}class Tm extends Xe{constructor(e){if(super(),this.type="WireframeGeometry",e.isGeometry===!0){console.error("THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return}const t=[],i=[0,0],r={},s=new F;if(e.index!==null){const o=e.attributes.position,a=e.index;let l=e.groups;l.length===0&&(l=[{start:0,count:a.count,materialIndex:0}]);for(let c=0,u=l.length;c<u;++c){const f=l[c],h=f.start,d=f.count;for(let p=h,g=h+d;p<g;p+=3)for(let m=0;m<3;m++){const v=a.getX(p+m),x=a.getX(p+(m+1)%3);i[0]=Math.min(v,x),i[1]=Math.max(v,x);const M=i[0]+","+i[1];r[M]===void 0&&(r[M]={index1:i[0],index2:i[1]})}}for(const c in r){const u=r[c];s.fromBufferAttribute(o,u.index1),t.push(s.x,s.y,s.z),s.fromBufferAttribute(o,u.index2),t.push(s.x,s.y,s.z)}}else{const o=e.attributes.position;for(let a=0,l=o.count/3;a<l;a++)for(let c=0;c<3;c++){const u=3*a+c;s.fromBufferAttribute(o,u),t.push(s.x,s.y,s.z);const f=3*a+(c+1)%3;s.fromBufferAttribute(o,f),t.push(s.x,s.y,s.z)}}this.setAttribute("position",new He(t,3))}}var Yt=Object.freeze({__proto__:null,BoxGeometry:fs,BoxBufferGeometry:fs,CircleGeometry:eu,CircleBufferGeometry:eu,ConeGeometry:tu,ConeBufferGeometry:tu,CylinderGeometry:Oo,CylinderBufferGeometry:Oo,DodecahedronGeometry:nu,DodecahedronBufferGeometry:nu,EdgesGeometry:Em,ExtrudeGeometry:ds,ExtrudeBufferGeometry:ds,IcosahedronGeometry:iu,IcosahedronBufferGeometry:iu,LatheGeometry:ru,LatheBufferGeometry:ru,OctahedronGeometry:nc,OctahedronBufferGeometry:nc,ParametricGeometry:ps,ParametricBufferGeometry:ps,PlaneGeometry:qa,PlaneBufferGeometry:qa,PolyhedronGeometry:br,PolyhedronBufferGeometry:br,RingGeometry:su,RingBufferGeometry:su,ShapeGeometry:ic,ShapeBufferGeometry:ic,SphereGeometry:rc,SphereBufferGeometry:rc,TetrahedronGeometry:ou,TetrahedronBufferGeometry:ou,TextGeometry:au,TextBufferGeometry:au,TorusGeometry:cu,TorusBufferGeometry:cu,TorusKnotGeometry:lu,TorusKnotBufferGeometry:lu,TubeGeometry:uu,TubeBufferGeometry:uu,WireframeGeometry:Tm});function ms(n){Je.call(this),this.type="ShadowMaterial",this.color=new Ge(0),this.transparent=!0,this.setValues(n)}ms.prototype=Object.create(Je.prototype);ms.prototype.constructor=ms;ms.prototype.isShadowMaterial=!0;ms.prototype.copy=function(n){return Je.prototype.copy.call(this,n),this.color.copy(n.color),this};function Ui(n){en.call(this,n),this.type="RawShaderMaterial"}Ui.prototype=Object.create(en.prototype);Ui.prototype.constructor=Ui;Ui.prototype.isRawShaderMaterial=!0;function hi(n){Je.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Ge(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ge(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ts,this.normalScale=new Ee(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.vertexTangents=!1,this.setValues(n)}hi.prototype=Object.create(Je.prototype);hi.prototype.constructor=hi;hi.prototype.isMeshStandardMaterial=!0;hi.prototype.copy=function(n){return Je.prototype.copy.call(this,n),this.defines={STANDARD:""},this.color.copy(n.color),this.roughness=n.roughness,this.metalness=n.metalness,this.map=n.map,this.lightMap=n.lightMap,this.lightMapIntensity=n.lightMapIntensity,this.aoMap=n.aoMap,this.aoMapIntensity=n.aoMapIntensity,this.emissive.copy(n.emissive),this.emissiveMap=n.emissiveMap,this.emissiveIntensity=n.emissiveIntensity,this.bumpMap=n.bumpMap,this.bumpScale=n.bumpScale,this.normalMap=n.normalMap,this.normalMapType=n.normalMapType,this.normalScale.copy(n.normalScale),this.displacementMap=n.displacementMap,this.displacementScale=n.displacementScale,this.displacementBias=n.displacementBias,this.roughnessMap=n.roughnessMap,this.metalnessMap=n.metalnessMap,this.alphaMap=n.alphaMap,this.envMap=n.envMap,this.envMapIntensity=n.envMapIntensity,this.refractionRatio=n.refractionRatio,this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this.wireframeLinecap=n.wireframeLinecap,this.wireframeLinejoin=n.wireframeLinejoin,this.skinning=n.skinning,this.morphTargets=n.morphTargets,this.morphNormals=n.morphNormals,this.vertexTangents=n.vertexTangents,this};function _r(n){hi.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Ee(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(e){this.reflectivity=Ke.clamp(2.5*(e-1)/(e+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(n)}_r.prototype=Object.create(hi.prototype);_r.prototype.constructor=_r;_r.prototype.isMeshPhysicalMaterial=!0;_r.prototype.copy=function(n){return hi.prototype.copy.call(this,n),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=n.clearcoat,this.clearcoatMap=n.clearcoatMap,this.clearcoatRoughness=n.clearcoatRoughness,this.clearcoatRoughnessMap=n.clearcoatRoughnessMap,this.clearcoatNormalMap=n.clearcoatNormalMap,this.clearcoatNormalScale.copy(n.clearcoatNormalScale),this.reflectivity=n.reflectivity,n.sheen?this.sheen=(this.sheen||new Ge).copy(n.sheen):this.sheen=null,this.transmission=n.transmission,this.transmissionMap=n.transmissionMap,this};function Mr(n){Je.call(this),this.type="MeshPhongMaterial",this.color=new Ge(16777215),this.specular=new Ge(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ge(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ts,this.normalScale=new Ee(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=bc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(n)}Mr.prototype=Object.create(Je.prototype);Mr.prototype.constructor=Mr;Mr.prototype.isMeshPhongMaterial=!0;Mr.prototype.copy=function(n){return Je.prototype.copy.call(this,n),this.color.copy(n.color),this.specular.copy(n.specular),this.shininess=n.shininess,this.map=n.map,this.lightMap=n.lightMap,this.lightMapIntensity=n.lightMapIntensity,this.aoMap=n.aoMap,this.aoMapIntensity=n.aoMapIntensity,this.emissive.copy(n.emissive),this.emissiveMap=n.emissiveMap,this.emissiveIntensity=n.emissiveIntensity,this.bumpMap=n.bumpMap,this.bumpScale=n.bumpScale,this.normalMap=n.normalMap,this.normalMapType=n.normalMapType,this.normalScale.copy(n.normalScale),this.displacementMap=n.displacementMap,this.displacementScale=n.displacementScale,this.displacementBias=n.displacementBias,this.specularMap=n.specularMap,this.alphaMap=n.alphaMap,this.envMap=n.envMap,this.combine=n.combine,this.reflectivity=n.reflectivity,this.refractionRatio=n.refractionRatio,this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this.wireframeLinecap=n.wireframeLinecap,this.wireframeLinejoin=n.wireframeLinejoin,this.skinning=n.skinning,this.morphTargets=n.morphTargets,this.morphNormals=n.morphNormals,this};function gs(n){Je.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Ge(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ge(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ts,this.normalScale=new Ee(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(n)}gs.prototype=Object.create(Je.prototype);gs.prototype.constructor=gs;gs.prototype.isMeshToonMaterial=!0;gs.prototype.copy=function(n){return Je.prototype.copy.call(this,n),this.color.copy(n.color),this.map=n.map,this.gradientMap=n.gradientMap,this.lightMap=n.lightMap,this.lightMapIntensity=n.lightMapIntensity,this.aoMap=n.aoMap,this.aoMapIntensity=n.aoMapIntensity,this.emissive.copy(n.emissive),this.emissiveMap=n.emissiveMap,this.emissiveIntensity=n.emissiveIntensity,this.bumpMap=n.bumpMap,this.bumpScale=n.bumpScale,this.normalMap=n.normalMap,this.normalMapType=n.normalMapType,this.normalScale.copy(n.normalScale),this.displacementMap=n.displacementMap,this.displacementScale=n.displacementScale,this.displacementBias=n.displacementBias,this.alphaMap=n.alphaMap,this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this.wireframeLinecap=n.wireframeLinecap,this.wireframeLinejoin=n.wireframeLinejoin,this.skinning=n.skinning,this.morphTargets=n.morphTargets,this.morphNormals=n.morphNormals,this};function xs(n){Je.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ts,this.normalScale=new Ee(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(n)}xs.prototype=Object.create(Je.prototype);xs.prototype.constructor=xs;xs.prototype.isMeshNormalMaterial=!0;xs.prototype.copy=function(n){return Je.prototype.copy.call(this,n),this.bumpMap=n.bumpMap,this.bumpScale=n.bumpScale,this.normalMap=n.normalMap,this.normalMapType=n.normalMapType,this.normalScale.copy(n.normalScale),this.displacementMap=n.displacementMap,this.displacementScale=n.displacementScale,this.displacementBias=n.displacementBias,this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this.skinning=n.skinning,this.morphTargets=n.morphTargets,this.morphNormals=n.morphNormals,this};function vs(n){Je.call(this),this.type="MeshLambertMaterial",this.color=new Ge(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ge(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=bc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(n)}vs.prototype=Object.create(Je.prototype);vs.prototype.constructor=vs;vs.prototype.isMeshLambertMaterial=!0;vs.prototype.copy=function(n){return Je.prototype.copy.call(this,n),this.color.copy(n.color),this.map=n.map,this.lightMap=n.lightMap,this.lightMapIntensity=n.lightMapIntensity,this.aoMap=n.aoMap,this.aoMapIntensity=n.aoMapIntensity,this.emissive.copy(n.emissive),this.emissiveMap=n.emissiveMap,this.emissiveIntensity=n.emissiveIntensity,this.specularMap=n.specularMap,this.alphaMap=n.alphaMap,this.envMap=n.envMap,this.combine=n.combine,this.reflectivity=n.reflectivity,this.refractionRatio=n.refractionRatio,this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this.wireframeLinecap=n.wireframeLinecap,this.wireframeLinejoin=n.wireframeLinejoin,this.skinning=n.skinning,this.morphTargets=n.morphTargets,this.morphNormals=n.morphNormals,this};function bs(n){Je.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Ge(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ts,this.normalScale=new Ee(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(n)}bs.prototype=Object.create(Je.prototype);bs.prototype.constructor=bs;bs.prototype.isMeshMatcapMaterial=!0;bs.prototype.copy=function(n){return Je.prototype.copy.call(this,n),this.defines={MATCAP:""},this.color.copy(n.color),this.matcap=n.matcap,this.map=n.map,this.bumpMap=n.bumpMap,this.bumpScale=n.bumpScale,this.normalMap=n.normalMap,this.normalMapType=n.normalMapType,this.normalScale.copy(n.normalScale),this.displacementMap=n.displacementMap,this.displacementScale=n.displacementScale,this.displacementBias=n.displacementBias,this.alphaMap=n.alphaMap,this.skinning=n.skinning,this.morphTargets=n.morphTargets,this.morphNormals=n.morphNormals,this};function ys(n){Mt.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(n)}ys.prototype=Object.create(Mt.prototype);ys.prototype.constructor=ys;ys.prototype.isLineDashedMaterial=!0;ys.prototype.copy=function(n){return Mt.prototype.copy.call(this,n),this.scale=n.scale,this.dashSize=n.dashSize,this.gapSize=n.gapSize,this};var RP=Object.freeze({__proto__:null,ShadowMaterial:ms,SpriteMaterial:vr,RawShaderMaterial:Ui,ShaderMaterial:en,PointsMaterial:$n,MeshPhysicalMaterial:_r,MeshStandardMaterial:hi,MeshPhongMaterial:Mr,MeshToonMaterial:gs,MeshNormalMaterial:xs,MeshLambertMaterial:vs,MeshDepthMaterial:mr,MeshDistanceMaterial:gr,MeshBasicMaterial:Mn,MeshMatcapMaterial:bs,LineDashedMaterial:ys,LineBasicMaterial:Mt,Material:Je});const _t={arraySlice:function(n,e,t){return _t.isTypedArray(n)?new n.constructor(n.subarray(e,t!==void 0?t:n.length)):n.slice(e,t)},convertArray:function(n,e,t){return!n||!t&&n.constructor===e?n:typeof e.BYTES_PER_ELEMENT=="number"?new e(n):Array.prototype.slice.call(n)},isTypedArray:function(n){return ArrayBuffer.isView(n)&&!(n instanceof DataView)},getKeyframeOrder:function(n){function e(r,s){return n[r]-n[s]}const t=n.length,i=new Array(t);for(let r=0;r!==t;++r)i[r]=r;return i.sort(e),i},sortedArray:function(n,e,t){const i=n.length,r=new n.constructor(i);for(let s=0,o=0;o!==i;++s){const a=t[s]*e;for(let l=0;l!==e;++l)r[o++]=n[a+l]}return r},flattenJSON:function(n,e,t,i){let r=1,s=n[0];for(;s!==void 0&&s[i]===void 0;)s=n[r++];if(s===void 0)return;let o=s[i];if(o!==void 0)if(Array.isArray(o))do o=s[i],o!==void 0&&(e.push(s.time),t.push.apply(t,o)),s=n[r++];while(s!==void 0);else if(o.toArray!==void 0)do o=s[i],o!==void 0&&(e.push(s.time),o.toArray(t,t.length)),s=n[r++];while(s!==void 0);else do o=s[i],o!==void 0&&(e.push(s.time),t.push(o)),s=n[r++];while(s!==void 0)},subclip:function(n,e,t,i,r=30){const s=n.clone();s.name=e;const o=[];for(let l=0;l<s.tracks.length;++l){const c=s.tracks[l],u=c.getValueSize(),f=[],h=[];for(let d=0;d<c.times.length;++d){const p=c.times[d]*r;if(!(p<t||p>=i)){f.push(c.times[d]);for(let g=0;g<u;++g)h.push(c.values[d*u+g])}}f.length!==0&&(c.times=_t.convertArray(f,c.times.constructor),c.values=_t.convertArray(h,c.values.constructor),o.push(c))}s.tracks=o;let a=1/0;for(let l=0;l<s.tracks.length;++l)a>s.tracks[l].times[0]&&(a=s.tracks[l].times[0]);for(let l=0;l<s.tracks.length;++l)s.tracks[l].shift(-1*a);return s.resetDuration(),s},makeClipAdditive:function(n,e=0,t=n,i=30){i<=0&&(i=30);const r=t.tracks.length,s=e/i;for(let o=0;o<r;++o){const a=t.tracks[o],l=a.ValueTypeName;if(l==="bool"||l==="string")continue;const c=n.tracks.find(function(v){return v.name===a.name&&v.ValueTypeName===l});if(c===void 0)continue;let u=0;const f=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=f/3);let h=0;const d=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(h=d/3);const p=a.times.length-1;let g;if(s<=a.times[0]){const v=u,x=f-u;g=_t.arraySlice(a.values,v,x)}else if(s>=a.times[p]){const v=p*f+u,x=v+f-u;g=_t.arraySlice(a.values,v,x)}else{const v=a.createInterpolant(),x=u,M=f-u;v.evaluate(s),g=_t.arraySlice(v.resultBuffer,x,M)}l==="quaternion"&&new Wt().fromArray(g).normalize().conjugate().toArray(g);const m=c.times.length;for(let v=0;v<m;++v){const x=v*d+h;if(l==="quaternion")Wt.multiplyQuaternionsFlat(c.values,x,g,0,c.values,x);else{const M=d-h*2;for(let b=0;b<M;++b)c.values[x+b]-=g[b]}}}return n.blendMode=xm,n}};function _n(n,e,t,i){this.parameterPositions=n,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new e.constructor(t),this.sampleValues=e,this.valueSize=t}Object.assign(_n.prototype,{evaluate:function(n){const e=this.parameterPositions;let t=this._cachedIndex,i=e[t],r=e[t-1];e:{t:{let s;n:{i:if(!(n<i)){for(let o=t+2;;){if(i===void 0){if(n<r)break i;return t=e.length,this._cachedIndex=t,this.afterEnd_(t-1,n,r)}if(t===o)break;if(r=i,i=e[++t],n<i)break t}s=e.length;break n}if(!(n>=r)){const o=e[1];n<o&&(t=2,r=o);for(let a=t-2;;){if(r===void 0)return this._cachedIndex=0,this.beforeStart_(0,n,i);if(t===a)break;if(i=r,r=e[--t-1],n>=r)break t}s=t,t=0;break n}break e}for(;t<s;){const o=t+s>>>1;n<e[o]?s=o:t=o+1}if(i=e[t],r=e[t-1],r===void 0)return this._cachedIndex=0,this.beforeStart_(0,n,i);if(i===void 0)return t=e.length,this._cachedIndex=t,this.afterEnd_(t-1,r,n)}this._cachedIndex=t,this.intervalChanged_(t,r,i)}return this.interpolate_(t,r,n,i)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(n){const e=this.resultBuffer,t=this.sampleValues,i=this.valueSize,r=n*i;for(let s=0;s!==i;++s)e[s]=t[r+s];return e},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}});Object.assign(_n.prototype,{beforeStart_:_n.prototype.copySampleValue_,afterEnd_:_n.prototype.copySampleValue_});function fu(n,e,t,i){_n.call(this,n,e,t,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}fu.prototype=Object.assign(Object.create(_n.prototype),{constructor:fu,DefaultSettings_:{endingStart:Xr,endingEnd:Xr},intervalChanged_:function(n,e,t){const i=this.parameterPositions;let r=n-2,s=n+1,o=i[r],a=i[s];if(o===void 0)switch(this.getSettings_().endingStart){case Yr:r=n,o=2*e-t;break;case Ba:r=i.length-2,o=e+i[r]-i[r+1];break;default:r=n,o=t}if(a===void 0)switch(this.getSettings_().endingEnd){case Yr:s=n,a=2*t-e;break;case Ba:s=1,a=t+i[1]-i[0];break;default:s=n-1,a=e}const l=(t-e)*.5,c=this.valueSize;this._weightPrev=l/(e-o),this._weightNext=l/(a-t),this._offsetPrev=r*c,this._offsetNext=s*c},interpolate_:function(n,e,t,i){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=n*o,l=a-o,c=this._offsetPrev,u=this._offsetNext,f=this._weightPrev,h=this._weightNext,d=(t-e)/(i-e),p=d*d,g=p*d,m=-f*g+2*f*p-f*d,v=(1+f)*g+(-1.5-2*f)*p+(-.5+f)*d+1,x=(-1-h)*g+(1.5+h)*p+.5*d,M=h*g-h*p;for(let b=0;b!==o;++b)r[b]=m*s[c+b]+v*s[l+b]+x*s[a+b]+M*s[u+b];return r}});function sc(n,e,t,i){_n.call(this,n,e,t,i)}sc.prototype=Object.assign(Object.create(_n.prototype),{constructor:sc,interpolate_:function(n,e,t,i){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=n*o,l=a-o,c=(t-e)/(i-e),u=1-c;for(let f=0;f!==o;++f)r[f]=s[l+f]*u+s[a+f]*c;return r}});function hu(n,e,t,i){_n.call(this,n,e,t,i)}hu.prototype=Object.assign(Object.create(_n.prototype),{constructor:hu,interpolate_:function(n){return this.copySampleValue_(n-1)}});function Ut(n,e,t,i){if(n===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(e===void 0||e.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+n);this.name=n,this.times=_t.convertArray(e,this.TimeBufferType),this.values=_t.convertArray(t,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}Object.assign(Ut,{toJSON:function(n){const e=n.constructor;let t;if(e.toJSON!==void 0)t=e.toJSON(n);else{t={name:n.name,times:_t.convertArray(n.times,Array),values:_t.convertArray(n.values,Array)};const i=n.getInterpolation();i!==n.DefaultInterpolation&&(t.interpolation=i)}return t.type=n.ValueTypeName,t}});Object.assign(Ut.prototype,{constructor:Ut,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:Ta,InterpolantFactoryMethodDiscrete:function(n){return new hu(this.times,this.values,this.getValueSize(),n)},InterpolantFactoryMethodLinear:function(n){return new sc(this.times,this.values,this.getValueSize(),n)},InterpolantFactoryMethodSmooth:function(n){return new fu(this.times,this.values,this.getValueSize(),n)},setInterpolation:function(n){let e;switch(n){case Na:e=this.InterpolantFactoryMethodDiscrete;break;case Ta:e=this.InterpolantFactoryMethodLinear;break;case kl:e=this.InterpolantFactoryMethodSmooth;break}if(e===void 0){const t="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(n!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(t);return console.warn("THREE.KeyframeTrack:",t),this}return this.createInterpolant=e,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Na;case this.InterpolantFactoryMethodLinear:return Ta;case this.InterpolantFactoryMethodSmooth:return kl}},getValueSize:function(){return this.values.length/this.times.length},shift:function(n){if(n!==0){const e=this.times;for(let t=0,i=e.length;t!==i;++t)e[t]+=n}return this},scale:function(n){if(n!==1){const e=this.times;for(let t=0,i=e.length;t!==i;++t)e[t]*=n}return this},trim:function(n,e){const t=this.times,i=t.length;let r=0,s=i-1;for(;r!==i&&t[r]<n;)++r;for(;s!==-1&&t[s]>e;)--s;if(++s,r!==0||s!==i){r>=s&&(s=Math.max(s,1),r=s-1);const o=this.getValueSize();this.times=_t.arraySlice(t,r,s),this.values=_t.arraySlice(this.values,r*o,s*o)}return this},validate:function(){let n=!0;const e=this.getValueSize();e-Math.floor(e)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),n=!1);const t=this.times,i=this.values,r=t.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),n=!1);let s=null;for(let o=0;o!==r;o++){const a=t[o];if(typeof a=="number"&&isNaN(a)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,a),n=!1;break}if(s!==null&&s>a){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,a,s),n=!1;break}s=a}if(i!==void 0&&_t.isTypedArray(i))for(let o=0,a=i.length;o!==a;++o){const l=i[o];if(isNaN(l)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,l),n=!1;break}}return n},optimize:function(){const n=_t.arraySlice(this.times),e=_t.arraySlice(this.values),t=this.getValueSize(),i=this.getInterpolation()===kl,r=n.length-1;let s=1;for(let o=1;o<r;++o){let a=!1;const l=n[o],c=n[o+1];if(l!==c&&(o!==1||l!==n[0]))if(i)a=!0;else{const u=o*t,f=u-t,h=u+t;for(let d=0;d!==t;++d){const p=e[u+d];if(p!==e[f+d]||p!==e[h+d]){a=!0;break}}}if(a){if(o!==s){n[s]=n[o];const u=o*t,f=s*t;for(let h=0;h!==t;++h)e[f+h]=e[u+h]}++s}}if(r>0){n[s]=n[r];for(let o=r*t,a=s*t,l=0;l!==t;++l)e[a+l]=e[o+l];++s}return s!==n.length?(this.times=_t.arraySlice(n,0,s),this.values=_t.arraySlice(e,0,s*t)):(this.times=n,this.values=e),this},clone:function(){const n=_t.arraySlice(this.times,0),e=_t.arraySlice(this.values,0),t=this.constructor,i=new t(this.name,n,e);return i.createInterpolant=this.createInterpolant,i}});function du(n,e,t){Ut.call(this,n,e,t)}du.prototype=Object.assign(Object.create(Ut.prototype),{constructor:du,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:Na,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function pu(n,e,t,i){Ut.call(this,n,e,t,i)}pu.prototype=Object.assign(Object.create(Ut.prototype),{constructor:pu,ValueTypeName:"color"});function Fo(n,e,t,i){Ut.call(this,n,e,t,i)}Fo.prototype=Object.assign(Object.create(Ut.prototype),{constructor:Fo,ValueTypeName:"number"});function mu(n,e,t,i){_n.call(this,n,e,t,i)}mu.prototype=Object.assign(Object.create(_n.prototype),{constructor:mu,interpolate_:function(n,e,t,i){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=(t-e)/(i-e);let l=n*o;for(let c=l+o;l!==c;l+=4)Wt.slerpFlat(r,0,s,l-o,s,l,a);return r}});function oc(n,e,t,i){Ut.call(this,n,e,t,i)}oc.prototype=Object.assign(Object.create(Ut.prototype),{constructor:oc,ValueTypeName:"quaternion",DefaultInterpolation:Ta,InterpolantFactoryMethodLinear:function(n){return new mu(this.times,this.values,this.getValueSize(),n)},InterpolantFactoryMethodSmooth:void 0});function gu(n,e,t,i){Ut.call(this,n,e,t,i)}gu.prototype=Object.assign(Object.create(Ut.prototype),{constructor:gu,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:Na,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function No(n,e,t,i){Ut.call(this,n,e,t,i)}No.prototype=Object.assign(Object.create(Ut.prototype),{constructor:No,ValueTypeName:"vector"});function xn(n,e=-1,t,i=Gu){this.name=n,this.tracks=t,this.duration=e,this.blendMode=i,this.uuid=Ke.generateUUID(),this.duration<0&&this.resetDuration()}function PP(n){switch(n.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Fo;case"vector":case"vector2":case"vector3":case"vector4":return No;case"color":return pu;case"quaternion":return oc;case"bool":case"boolean":return du;case"string":return gu}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+n)}function IP(n){if(n.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=PP(n.type);if(n.times===void 0){const t=[],i=[];_t.flattenJSON(n.keys,t,i,"value"),n.times=t,n.values=i}return e.parse!==void 0?e.parse(n):new e(n.name,n.times,n.values,n.interpolation)}Object.assign(xn,{parse:function(n){const e=[],t=n.tracks,i=1/(n.fps||1);for(let s=0,o=t.length;s!==o;++s)e.push(IP(t[s]).scale(i));const r=new xn(n.name,n.duration,e,n.blendMode);return r.uuid=n.uuid,r},toJSON:function(n){const e=[],t=n.tracks,i={name:n.name,duration:n.duration,tracks:e,uuid:n.uuid,blendMode:n.blendMode};for(let r=0,s=t.length;r!==s;++r)e.push(Ut.toJSON(t[r]));return i},CreateFromMorphTargetSequence:function(n,e,t,i){const r=e.length,s=[];for(let o=0;o<r;o++){let a=[],l=[];a.push((o+r-1)%r,o,(o+1)%r),l.push(0,1,0);const c=_t.getKeyframeOrder(a);a=_t.sortedArray(a,1,c),l=_t.sortedArray(l,1,c),!i&&a[0]===0&&(a.push(r),l.push(l[0])),s.push(new Fo(".morphTargetInfluences["+e[o].name+"]",a,l).scale(1/t))}return new xn(n,-1,s)},findByName:function(n,e){let t=n;if(!Array.isArray(n)){const i=n;t=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<t.length;i++)if(t[i].name===e)return t[i];return null},CreateClipsFromMorphTargetSequences:function(n,e,t){const i={},r=/^([\w-]*?)([\d]+)$/;for(let o=0,a=n.length;o<a;o++){const l=n[o],c=l.name.match(r);if(c&&c.length>1){const u=c[1];let f=i[u];f||(i[u]=f=[]),f.push(l)}}const s=[];for(const o in i)s.push(xn.CreateFromMorphTargetSequence(o,i[o],e,t));return s},parseAnimation:function(n,e){if(!n)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const t=function(u,f,h,d,p){if(h.length!==0){const g=[],m=[];_t.flattenJSON(h,g,m,d),g.length!==0&&p.push(new u(f,g,m))}},i=[],r=n.name||"default",s=n.fps||30,o=n.blendMode;let a=n.length||-1;const l=n.hierarchy||[];for(let u=0;u<l.length;u++){const f=l[u].keys;if(!(!f||f.length===0))if(f[0].morphTargets){const h={};let d;for(d=0;d<f.length;d++)if(f[d].morphTargets)for(let p=0;p<f[d].morphTargets.length;p++)h[f[d].morphTargets[p]]=-1;for(const p in h){const g=[],m=[];for(let v=0;v!==f[d].morphTargets.length;++v){const x=f[d];g.push(x.time),m.push(x.morphTarget===p?1:0)}i.push(new Fo(".morphTargetInfluence["+p+"]",g,m))}a=h.length*s}else{const h=".bones["+e[u].name+"]";t(No,h+".position",f,"pos",i),t(oc,h+".quaternion",f,"rot",i),t(No,h+".scale",f,"scl",i)}}return i.length===0?null:new xn(r,a,i,o)}});Object.assign(xn.prototype,{resetDuration:function(){const n=this.tracks;let e=0;for(let t=0,i=n.length;t!==i;++t){const r=this.tracks[t];e=Math.max(e,r.times[r.times.length-1])}return this.duration=e,this},trim:function(){for(let n=0;n<this.tracks.length;n++)this.tracks[n].trim(0,this.duration);return this},validate:function(){let n=!0;for(let e=0;e<this.tracks.length;e++)n=n&&this.tracks[e].validate();return n},optimize:function(){for(let n=0;n<this.tracks.length;n++)this.tracks[n].optimize();return this},clone:function(){const n=[];for(let e=0;e<this.tracks.length;e++)n.push(this.tracks[e].clone());return new xn(this.name,this.duration,n,this.blendMode)},toJSON:function(){return xn.toJSON(this)}});const _s={enabled:!1,files:{},add:function(n,e){this.enabled!==!1&&(this.files[n]=e)},get:function(n){if(this.enabled!==!1)return this.files[n]},remove:function(n){delete this.files[n]},clear:function(){this.files={}}};function Am(n,e,t){const i=this;let r=!1,s=0,o=0,a;const l=[];this.onStart=void 0,this.onLoad=n,this.onProgress=e,this.onError=t,this.itemStart=function(c){o++,r===!1&&i.onStart!==void 0&&i.onStart(c,s,o),r=!0},this.itemEnd=function(c){s++,i.onProgress!==void 0&&i.onProgress(c,s,o),s===o&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(c){i.onError!==void 0&&i.onError(c)},this.resolveURL=function(c){return a?a(c):c},this.setURLModifier=function(c){return a=c,this},this.addHandler=function(c,u){return l.push(c,u),this},this.removeHandler=function(c){const u=l.indexOf(c);return u!==-1&&l.splice(u,2),this},this.getHandler=function(c){for(let u=0,f=l.length;u<f;u+=2){const h=l[u],d=l[u+1];if(h.global&&(h.lastIndex=0),h.test(c))return d}return null}}const D1=new Am;function ut(n){this.manager=n!==void 0?n:D1,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}Object.assign(ut.prototype,{load:function(){},loadAsync:function(n,e){const t=this;return new Promise(function(i,r){t.load(n,i,e,r)})},parse:function(){},setCrossOrigin:function(n){return this.crossOrigin=n,this},setWithCredentials:function(n){return this.withCredentials=n,this},setPath:function(n){return this.path=n,this},setResourcePath:function(n){return this.resourcePath=n,this},setRequestHeader:function(n){return this.requestHeader=n,this}});const kn={};function Dn(n){ut.call(this,n)}Dn.prototype=Object.assign(Object.create(ut.prototype),{constructor:Dn,load:function(n,e,t,i){n===void 0&&(n=""),this.path!==void 0&&(n=this.path+n),n=this.manager.resolveURL(n);const r=this,s=_s.get(n);if(s!==void 0)return r.manager.itemStart(n),setTimeout(function(){e&&e(s),r.manager.itemEnd(n)},0),s;if(kn[n]!==void 0){kn[n].push({onLoad:e,onProgress:t,onError:i});return}const o=/^data:(.*?)(;base64)?,(.*)$/,a=n.match(o);let l;if(a){const c=a[1],u=!!a[2];let f=a[3];f=decodeURIComponent(f),u&&(f=atob(f));try{let h;const d=(this.responseType||"").toLowerCase();switch(d){case"arraybuffer":case"blob":const p=new Uint8Array(f.length);for(let m=0;m<f.length;m++)p[m]=f.charCodeAt(m);d==="blob"?h=new Blob([p.buffer],{type:c}):h=p.buffer;break;case"document":h=new DOMParser().parseFromString(f,c);break;case"json":h=JSON.parse(f);break;default:h=f;break}setTimeout(function(){e&&e(h),r.manager.itemEnd(n)},0)}catch(h){setTimeout(function(){i&&i(h),r.manager.itemError(n),r.manager.itemEnd(n)},0)}}else{kn[n]=[],kn[n].push({onLoad:e,onProgress:t,onError:i}),l=new XMLHttpRequest,l.open("GET",n,!0),l.addEventListener("load",function(c){const u=this.response,f=kn[n];if(delete kn[n],this.status===200||this.status===0){this.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),_s.add(n,u);for(let h=0,d=f.length;h<d;h++){const p=f[h];p.onLoad&&p.onLoad(u)}r.manager.itemEnd(n)}else{for(let h=0,d=f.length;h<d;h++){const p=f[h];p.onError&&p.onError(c)}r.manager.itemError(n),r.manager.itemEnd(n)}},!1),l.addEventListener("progress",function(c){const u=kn[n];for(let f=0,h=u.length;f<h;f++){const d=u[f];d.onProgress&&d.onProgress(c)}},!1),l.addEventListener("error",function(c){const u=kn[n];delete kn[n];for(let f=0,h=u.length;f<h;f++){const d=u[f];d.onError&&d.onError(c)}r.manager.itemError(n),r.manager.itemEnd(n)},!1),l.addEventListener("abort",function(c){const u=kn[n];delete kn[n];for(let f=0,h=u.length;f<h;f++){const d=u[f];d.onError&&d.onError(c)}r.manager.itemError(n),r.manager.itemEnd(n)},!1),this.responseType!==void 0&&(l.responseType=this.responseType),this.withCredentials!==void 0&&(l.withCredentials=this.withCredentials),l.overrideMimeType&&l.overrideMimeType(this.mimeType!==void 0?this.mimeType:"text/plain");for(const c in this.requestHeader)l.setRequestHeader(c,this.requestHeader[c]);l.send(null)}return r.manager.itemStart(n),l},setResponseType:function(n){return this.responseType=n,this},setMimeType:function(n){return this.mimeType=n,this}});function Lp(n){ut.call(this,n)}Lp.prototype=Object.assign(Object.create(ut.prototype),{constructor:Lp,load:function(n,e,t,i){const r=this,s=new Dn(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(n,function(o){try{e(r.parse(JSON.parse(o)))}catch(a){i?i(a):console.error(a),r.manager.itemError(n)}},t,i)},parse:function(n){const e=[];for(let t=0;t<n.length;t++){const i=xn.parse(n[t]);e.push(i)}return e}});function Cp(n){ut.call(this,n)}Cp.prototype=Object.assign(Object.create(ut.prototype),{constructor:Cp,load:function(n,e,t,i){const r=this,s=[],o=new Do,a=new Dn(this.manager);a.setPath(this.path),a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setWithCredentials(r.withCredentials);let l=0;function c(u){a.load(n[u],function(f){const h=r.parse(f,!0);s[u]={width:h.width,height:h.height,format:h.format,mipmaps:h.mipmaps},l+=1,l===6&&(h.mipmapCount===1&&(o.minFilter=Nt),o.image=s,o.format=h.format,o.needsUpdate=!0,e&&e(o))},t,i)}if(Array.isArray(n))for(let u=0,f=n.length;u<f;++u)c(u);else a.load(n,function(u){const f=r.parse(u,!0);if(f.isCubemap){const h=f.mipmaps.length/f.mipmapCount;for(let d=0;d<h;d++){s[d]={mipmaps:[]};for(let p=0;p<f.mipmapCount;p++)s[d].mipmaps.push(f.mipmaps[d*f.mipmapCount+p]),s[d].format=f.format,s[d].width=f.width,s[d].height=f.height}o.image=s}else o.image.width=f.width,o.image.height=f.height,o.mipmaps=f.mipmaps;f.mipmapCount===1&&(o.minFilter=Nt),o.format=f.format,o.needsUpdate=!0,e&&e(o)},t,i);return o}});function Bo(n){ut.call(this,n)}Bo.prototype=Object.assign(Object.create(ut.prototype),{constructor:Bo,load:function(n,e,t,i){this.path!==void 0&&(n=this.path+n),n=this.manager.resolveURL(n);const r=this,s=_s.get(n);if(s!==void 0)return r.manager.itemStart(n),setTimeout(function(){e&&e(s),r.manager.itemEnd(n)},0),s;const o=document.createElementNS("http://www.w3.org/1999/xhtml","img");function a(){o.removeEventListener("load",a,!1),o.removeEventListener("error",l,!1),_s.add(n,this),e&&e(this),r.manager.itemEnd(n)}function l(c){o.removeEventListener("load",a,!1),o.removeEventListener("error",l,!1),i&&i(c),r.manager.itemError(n),r.manager.itemEnd(n)}return o.addEventListener("load",a,!1),o.addEventListener("error",l,!1),n.substr(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),r.manager.itemStart(n),o.src=n,o}});function xu(n){ut.call(this,n)}xu.prototype=Object.assign(Object.create(ut.prototype),{constructor:xu,load:function(n,e,t,i){const r=new fi,s=new Bo(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let o=0;function a(l){s.load(n[l],function(c){r.images[l]=c,o++,o===6&&(r.needsUpdate=!0,e&&e(r))},void 0,i)}for(let l=0;l<n.length;++l)a(l);return r}});function vu(n){ut.call(this,n)}vu.prototype=Object.assign(Object.create(ut.prototype),{constructor:vu,load:function(n,e,t,i){const r=this,s=new Bi,o=new Dn(this.manager);return o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setPath(this.path),o.setWithCredentials(r.withCredentials),o.load(n,function(a){const l=r.parse(a);l&&(l.image!==void 0?s.image=l.image:l.data!==void 0&&(s.image.width=l.width,s.image.height=l.height,s.image.data=l.data),s.wrapS=l.wrapS!==void 0?l.wrapS:Zt,s.wrapT=l.wrapT!==void 0?l.wrapT:Zt,s.magFilter=l.magFilter!==void 0?l.magFilter:Nt,s.minFilter=l.minFilter!==void 0?l.minFilter:Nt,s.anisotropy=l.anisotropy!==void 0?l.anisotropy:1,l.encoding!==void 0&&(s.encoding=l.encoding),l.flipY!==void 0&&(s.flipY=l.flipY),l.format!==void 0&&(s.format=l.format),l.type!==void 0&&(s.type=l.type),l.mipmaps!==void 0&&(s.mipmaps=l.mipmaps,s.minFilter=Zo),l.mipmapCount===1&&(s.minFilter=Nt),s.needsUpdate=!0,e&&e(s,l))},t,i),s}});function bu(n){ut.call(this,n)}bu.prototype=Object.assign(Object.create(ut.prototype),{constructor:bu,load:function(n,e,t,i){const r=new ht,s=new Bo(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(n,function(o){r.image=o;const a=n.search(/\.jpe?g($|\?)/i)>0||n.search(/^data\:image\/jpeg/)===0;r.format=a?ur:yn,r.needsUpdate=!0,e!==void 0&&e(r)},t,i),r}});function je(){this.type="Curve",this.arcLengthDivisions=200}Object.assign(je.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(n,e){const t=this.getUtoTmapping(n);return this.getPoint(t,e)},getPoints:function(n=5){const e=[];for(let t=0;t<=n;t++)e.push(this.getPoint(t/n));return e},getSpacedPoints:function(n=5){const e=[];for(let t=0;t<=n;t++)e.push(this.getPointAt(t/n));return e},getLength:function(){const n=this.getLengths();return n[n.length-1]},getLengths:function(n){if(n===void 0&&(n=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===n+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let t,i=this.getPoint(0),r=0;e.push(0);for(let s=1;s<=n;s++)t=this.getPoint(s/n),r+=t.distanceTo(i),e.push(r),i=t;return this.cacheArcLengths=e,e},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(n,e){const t=this.getLengths();let i=0;const r=t.length;let s;e?s=e:s=n*t[r-1];let o=0,a=r-1,l;for(;o<=a;)if(i=Math.floor(o+(a-o)/2),l=t[i]-s,l<0)o=i+1;else if(l>0)a=i-1;else{a=i;break}if(i=a,t[i]===s)return i/(r-1);const c=t[i],f=t[i+1]-c,h=(s-c)/f;return(i+h)/(r-1)},getTangent:function(n,e){let i=n-1e-4,r=n+1e-4;i<0&&(i=0),r>1&&(r=1);const s=this.getPoint(i),o=this.getPoint(r),a=e||(s.isVector2?new Ee:new F);return a.copy(o).sub(s).normalize(),a},getTangentAt:function(n,e){const t=this.getUtoTmapping(n);return this.getTangent(t,e)},computeFrenetFrames:function(n,e){const t=new F,i=[],r=[],s=[],o=new F,a=new tt;for(let h=0;h<=n;h++){const d=h/n;i[h]=this.getTangentAt(d,new F),i[h].normalize()}r[0]=new F,s[0]=new F;let l=Number.MAX_VALUE;const c=Math.abs(i[0].x),u=Math.abs(i[0].y),f=Math.abs(i[0].z);c<=l&&(l=c,t.set(1,0,0)),u<=l&&(l=u,t.set(0,1,0)),f<=l&&t.set(0,0,1),o.crossVectors(i[0],t).normalize(),r[0].crossVectors(i[0],o),s[0].crossVectors(i[0],r[0]);for(let h=1;h<=n;h++){if(r[h]=r[h-1].clone(),s[h]=s[h-1].clone(),o.crossVectors(i[h-1],i[h]),o.length()>Number.EPSILON){o.normalize();const d=Math.acos(Ke.clamp(i[h-1].dot(i[h]),-1,1));r[h].applyMatrix4(a.makeRotationAxis(o,d))}s[h].crossVectors(i[h],r[h])}if(e===!0){let h=Math.acos(Ke.clamp(r[0].dot(r[n]),-1,1));h/=n,i[0].dot(o.crossVectors(r[0],r[n]))>0&&(h=-h);for(let d=1;d<=n;d++)r[d].applyMatrix4(a.makeRotationAxis(i[d],h*d)),s[d].crossVectors(i[d],r[d])}return{tangents:i,normals:r,binormals:s}},clone:function(){return new this.constructor().copy(this)},copy:function(n){return this.arcLengthDivisions=n.arcLengthDivisions,this},toJSON:function(){const n={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return n.arcLengthDivisions=this.arcLengthDivisions,n.type=this.type,n},fromJSON:function(n){return this.arcLengthDivisions=n.arcLengthDivisions,this}});function Sn(n,e,t,i,r,s,o,a){je.call(this),this.type="EllipseCurve",this.aX=n||0,this.aY=e||0,this.xRadius=t||1,this.yRadius=i||1,this.aStartAngle=r||0,this.aEndAngle=s||2*Math.PI,this.aClockwise=o||!1,this.aRotation=a||0}Sn.prototype=Object.create(je.prototype);Sn.prototype.constructor=Sn;Sn.prototype.isEllipseCurve=!0;Sn.prototype.getPoint=function(n,e){const t=e||new Ee,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const s=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(s?r=0:r=i),this.aClockwise===!0&&!s&&(r===i?r=-i:r=r-i);const o=this.aStartAngle+n*r;let a=this.aX+this.xRadius*Math.cos(o),l=this.aY+this.yRadius*Math.sin(o);if(this.aRotation!==0){const c=Math.cos(this.aRotation),u=Math.sin(this.aRotation),f=a-this.aX,h=l-this.aY;a=f*c-h*u+this.aX,l=f*u+h*c+this.aY}return t.set(a,l)};Sn.prototype.copy=function(n){return je.prototype.copy.call(this,n),this.aX=n.aX,this.aY=n.aY,this.xRadius=n.xRadius,this.yRadius=n.yRadius,this.aStartAngle=n.aStartAngle,this.aEndAngle=n.aEndAngle,this.aClockwise=n.aClockwise,this.aRotation=n.aRotation,this};Sn.prototype.toJSON=function(){const n=je.prototype.toJSON.call(this);return n.aX=this.aX,n.aY=this.aY,n.xRadius=this.xRadius,n.yRadius=this.yRadius,n.aStartAngle=this.aStartAngle,n.aEndAngle=this.aEndAngle,n.aClockwise=this.aClockwise,n.aRotation=this.aRotation,n};Sn.prototype.fromJSON=function(n){return je.prototype.fromJSON.call(this,n),this.aX=n.aX,this.aY=n.aY,this.xRadius=n.xRadius,this.yRadius=n.yRadius,this.aStartAngle=n.aStartAngle,this.aEndAngle=n.aEndAngle,this.aClockwise=n.aClockwise,this.aRotation=n.aRotation,this};function Uo(n,e,t,i,r,s){Sn.call(this,n,e,t,t,i,r,s),this.type="ArcCurve"}Uo.prototype=Object.create(Sn.prototype);Uo.prototype.constructor=Uo;Uo.prototype.isArcCurve=!0;function Lm(){let n=0,e=0,t=0,i=0;function r(s,o,a,l){n=s,e=a,t=-3*s+3*o-2*a-l,i=2*s-2*o+a+l}return{initCatmullRom:function(s,o,a,l,c){r(o,a,c*(a-s),c*(l-o))},initNonuniformCatmullRom:function(s,o,a,l,c,u,f){let h=(o-s)/c-(a-s)/(c+u)+(a-o)/u,d=(a-o)/u-(l-o)/(u+f)+(l-a)/f;h*=u,d*=u,r(o,a,h,d)},calc:function(s){const o=s*s,a=o*s;return n+e*s+t*o+i*a}}}const Al=new F,Bd=new Lm,Ud=new Lm,zd=new Lm;function $t(n=[],e=!1,t="centripetal",i=.5){je.call(this),this.type="CatmullRomCurve3",this.points=n,this.closed=e,this.curveType=t,this.tension=i}$t.prototype=Object.create(je.prototype);$t.prototype.constructor=$t;$t.prototype.isCatmullRomCurve3=!0;$t.prototype.getPoint=function(n,e=new F){const t=e,i=this.points,r=i.length,s=(r-(this.closed?0:1))*n;let o=Math.floor(s),a=s-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/r)+1)*r:a===0&&o===r-1&&(o=r-2,a=1);let l,c;this.closed||o>0?l=i[(o-1)%r]:(Al.subVectors(i[0],i[1]).add(i[0]),l=Al);const u=i[o%r],f=i[(o+1)%r];if(this.closed||o+2<r?c=i[(o+2)%r]:(Al.subVectors(i[r-1],i[r-2]).add(i[r-1]),c=Al),this.curveType==="centripetal"||this.curveType==="chordal"){const h=this.curveType==="chordal"?.5:.25;let d=Math.pow(l.distanceToSquared(u),h),p=Math.pow(u.distanceToSquared(f),h),g=Math.pow(f.distanceToSquared(c),h);p<1e-4&&(p=1),d<1e-4&&(d=p),g<1e-4&&(g=p),Bd.initNonuniformCatmullRom(l.x,u.x,f.x,c.x,d,p,g),Ud.initNonuniformCatmullRom(l.y,u.y,f.y,c.y,d,p,g),zd.initNonuniformCatmullRom(l.z,u.z,f.z,c.z,d,p,g)}else this.curveType==="catmullrom"&&(Bd.initCatmullRom(l.x,u.x,f.x,c.x,this.tension),Ud.initCatmullRom(l.y,u.y,f.y,c.y,this.tension),zd.initCatmullRom(l.z,u.z,f.z,c.z,this.tension));return t.set(Bd.calc(a),Ud.calc(a),zd.calc(a)),t};$t.prototype.copy=function(n){je.prototype.copy.call(this,n),this.points=[];for(let e=0,t=n.points.length;e<t;e++){const i=n.points[e];this.points.push(i.clone())}return this.closed=n.closed,this.curveType=n.curveType,this.tension=n.tension,this};$t.prototype.toJSON=function(){const n=je.prototype.toJSON.call(this);n.points=[];for(let e=0,t=this.points.length;e<t;e++){const i=this.points[e];n.points.push(i.toArray())}return n.closed=this.closed,n.curveType=this.curveType,n.tension=this.tension,n};$t.prototype.fromJSON=function(n){je.prototype.fromJSON.call(this,n),this.points=[];for(let e=0,t=n.points.length;e<t;e++){const i=n.points[e];this.points.push(new F().fromArray(i))}return this.closed=n.closed,this.curveType=n.curveType,this.tension=n.tension,this};function Ov(n,e,t,i,r){const s=(i-e)*.5,o=(r-t)*.5,a=n*n,l=n*a;return(2*t-2*i+s+o)*l+(-3*t+3*i-2*s-o)*a+s*n+t}function DP(n,e){const t=1-n;return t*t*e}function OP(n,e){return 2*(1-n)*n*e}function FP(n,e){return n*n*e}function La(n,e,t,i){return DP(n,e)+OP(n,t)+FP(n,i)}function NP(n,e){const t=1-n;return t*t*t*e}function BP(n,e){const t=1-n;return 3*t*t*n*e}function UP(n,e){return 3*(1-n)*n*n*e}function zP(n,e){return n*n*n*e}function Ca(n,e,t,i,r){return NP(n,e)+BP(n,t)+UP(n,i)+zP(n,r)}function jn(n=new Ee,e=new Ee,t=new Ee,i=new Ee){je.call(this),this.type="CubicBezierCurve",this.v0=n,this.v1=e,this.v2=t,this.v3=i}jn.prototype=Object.create(je.prototype);jn.prototype.constructor=jn;jn.prototype.isCubicBezierCurve=!0;jn.prototype.getPoint=function(n,e=new Ee){const t=e,i=this.v0,r=this.v1,s=this.v2,o=this.v3;return t.set(Ca(n,i.x,r.x,s.x,o.x),Ca(n,i.y,r.y,s.y,o.y)),t};jn.prototype.copy=function(n){return je.prototype.copy.call(this,n),this.v0.copy(n.v0),this.v1.copy(n.v1),this.v2.copy(n.v2),this.v3.copy(n.v3),this};jn.prototype.toJSON=function(){const n=je.prototype.toJSON.call(this);return n.v0=this.v0.toArray(),n.v1=this.v1.toArray(),n.v2=this.v2.toArray(),n.v3=this.v3.toArray(),n};jn.prototype.fromJSON=function(n){return je.prototype.fromJSON.call(this,n),this.v0.fromArray(n.v0),this.v1.fromArray(n.v1),this.v2.fromArray(n.v2),this.v3.fromArray(n.v3),this};function di(n=new F,e=new F,t=new F,i=new F){je.call(this),this.type="CubicBezierCurve3",this.v0=n,this.v1=e,this.v2=t,this.v3=i}di.prototype=Object.create(je.prototype);di.prototype.constructor=di;di.prototype.isCubicBezierCurve3=!0;di.prototype.getPoint=function(n,e=new F){const t=e,i=this.v0,r=this.v1,s=this.v2,o=this.v3;return t.set(Ca(n,i.x,r.x,s.x,o.x),Ca(n,i.y,r.y,s.y,o.y),Ca(n,i.z,r.z,s.z,o.z)),t};di.prototype.copy=function(n){return je.prototype.copy.call(this,n),this.v0.copy(n.v0),this.v1.copy(n.v1),this.v2.copy(n.v2),this.v3.copy(n.v3),this};di.prototype.toJSON=function(){const n=je.prototype.toJSON.call(this);return n.v0=this.v0.toArray(),n.v1=this.v1.toArray(),n.v2=this.v2.toArray(),n.v3=this.v3.toArray(),n};di.prototype.fromJSON=function(n){return je.prototype.fromJSON.call(this,n),this.v0.fromArray(n.v0),this.v1.fromArray(n.v1),this.v2.fromArray(n.v2),this.v3.fromArray(n.v3),this};function on(n=new Ee,e=new Ee){je.call(this),this.type="LineCurve",this.v1=n,this.v2=e}on.prototype=Object.create(je.prototype);on.prototype.constructor=on;on.prototype.isLineCurve=!0;on.prototype.getPoint=function(n,e=new Ee){const t=e;return n===1?t.copy(this.v2):(t.copy(this.v2).sub(this.v1),t.multiplyScalar(n).add(this.v1)),t};on.prototype.getPointAt=function(n,e){return this.getPoint(n,e)};on.prototype.getTangent=function(n,e){const t=e||new Ee;return t.copy(this.v2).sub(this.v1).normalize(),t};on.prototype.copy=function(n){return je.prototype.copy.call(this,n),this.v1.copy(n.v1),this.v2.copy(n.v2),this};on.prototype.toJSON=function(){const n=je.prototype.toJSON.call(this);return n.v1=this.v1.toArray(),n.v2=this.v2.toArray(),n};on.prototype.fromJSON=function(n){return je.prototype.fromJSON.call(this,n),this.v1.fromArray(n.v1),this.v2.fromArray(n.v2),this};function Xn(n=new F,e=new F){je.call(this),this.type="LineCurve3",this.v1=n,this.v2=e}Xn.prototype=Object.create(je.prototype);Xn.prototype.constructor=Xn;Xn.prototype.isLineCurve3=!0;Xn.prototype.getPoint=function(n,e=new F){const t=e;return n===1?t.copy(this.v2):(t.copy(this.v2).sub(this.v1),t.multiplyScalar(n).add(this.v1)),t};Xn.prototype.getPointAt=function(n,e){return this.getPoint(n,e)};Xn.prototype.copy=function(n){return je.prototype.copy.call(this,n),this.v1.copy(n.v1),this.v2.copy(n.v2),this};Xn.prototype.toJSON=function(){const n=je.prototype.toJSON.call(this);return n.v1=this.v1.toArray(),n.v2=this.v2.toArray(),n};Xn.prototype.fromJSON=function(n){return je.prototype.fromJSON.call(this,n),this.v1.fromArray(n.v1),this.v2.fromArray(n.v2),this};function Yn(n=new Ee,e=new Ee,t=new Ee){je.call(this),this.type="QuadraticBezierCurve",this.v0=n,this.v1=e,this.v2=t}Yn.prototype=Object.create(je.prototype);Yn.prototype.constructor=Yn;Yn.prototype.isQuadraticBezierCurve=!0;Yn.prototype.getPoint=function(n,e=new Ee){const t=e,i=this.v0,r=this.v1,s=this.v2;return t.set(La(n,i.x,r.x,s.x),La(n,i.y,r.y,s.y)),t};Yn.prototype.copy=function(n){return je.prototype.copy.call(this,n),this.v0.copy(n.v0),this.v1.copy(n.v1),this.v2.copy(n.v2),this};Yn.prototype.toJSON=function(){const n=je.prototype.toJSON.call(this);return n.v0=this.v0.toArray(),n.v1=this.v1.toArray(),n.v2=this.v2.toArray(),n};Yn.prototype.fromJSON=function(n){return je.prototype.fromJSON.call(this,n),this.v0.fromArray(n.v0),this.v1.fromArray(n.v1),this.v2.fromArray(n.v2),this};function pi(n=new F,e=new F,t=new F){je.call(this),this.type="QuadraticBezierCurve3",this.v0=n,this.v1=e,this.v2=t}pi.prototype=Object.create(je.prototype);pi.prototype.constructor=pi;pi.prototype.isQuadraticBezierCurve3=!0;pi.prototype.getPoint=function(n,e=new F){const t=e,i=this.v0,r=this.v1,s=this.v2;return t.set(La(n,i.x,r.x,s.x),La(n,i.y,r.y,s.y),La(n,i.z,r.z,s.z)),t};pi.prototype.copy=function(n){return je.prototype.copy.call(this,n),this.v0.copy(n.v0),this.v1.copy(n.v1),this.v2.copy(n.v2),this};pi.prototype.toJSON=function(){const n=je.prototype.toJSON.call(this);return n.v0=this.v0.toArray(),n.v1=this.v1.toArray(),n.v2=this.v2.toArray(),n};pi.prototype.fromJSON=function(n){return je.prototype.fromJSON.call(this,n),this.v0.fromArray(n.v0),this.v1.fromArray(n.v1),this.v2.fromArray(n.v2),this};function Zn(n=[]){je.call(this),this.type="SplineCurve",this.points=n}Zn.prototype=Object.create(je.prototype);Zn.prototype.constructor=Zn;Zn.prototype.isSplineCurve=!0;Zn.prototype.getPoint=function(n,e=new Ee){const t=e,i=this.points,r=(i.length-1)*n,s=Math.floor(r),o=r-s,a=i[s===0?s:s-1],l=i[s],c=i[s>i.length-2?i.length-1:s+1],u=i[s>i.length-3?i.length-1:s+2];return t.set(Ov(o,a.x,l.x,c.x,u.x),Ov(o,a.y,l.y,c.y,u.y)),t};Zn.prototype.copy=function(n){je.prototype.copy.call(this,n),this.points=[];for(let e=0,t=n.points.length;e<t;e++){const i=n.points[e];this.points.push(i.clone())}return this};Zn.prototype.toJSON=function(){const n=je.prototype.toJSON.call(this);n.points=[];for(let e=0,t=this.points.length;e<t;e++){const i=this.points[e];n.points.push(i.toArray())}return n};Zn.prototype.fromJSON=function(n){je.prototype.fromJSON.call(this,n),this.points=[];for(let e=0,t=n.points.length;e<t;e++){const i=n.points[e];this.points.push(new Ee().fromArray(i))}return this};var Rp=Object.freeze({__proto__:null,ArcCurve:Uo,CatmullRomCurve3:$t,CubicBezierCurve:jn,CubicBezierCurve3:di,EllipseCurve:Sn,LineCurve:on,LineCurve3:Xn,QuadraticBezierCurve:Yn,QuadraticBezierCurve3:pi,SplineCurve:Zn});function cr(){je.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}cr.prototype=Object.assign(Object.create(je.prototype),{constructor:cr,add:function(n){this.curves.push(n)},closePath:function(){const n=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);n.equals(e)||this.curves.push(new on(e,n))},getPoint:function(n){const e=n*this.getLength(),t=this.getCurveLengths();let i=0;for(;i<t.length;){if(t[i]>=e){const r=t[i]-e,s=this.curves[i],o=s.getLength(),a=o===0?0:1-r/o;return s.getPointAt(a)}i++}return null},getLength:function(){const n=this.getCurveLengths();return n[n.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const n=[];let e=0;for(let t=0,i=this.curves.length;t<i;t++)e+=this.curves[t].getLength(),n.push(e);return this.cacheLengths=n,n},getSpacedPoints:function(n=40){const e=[];for(let t=0;t<=n;t++)e.push(this.getPoint(t/n));return this.autoClose&&e.push(e[0]),e},getPoints:function(n=12){const e=[];let t;for(let i=0,r=this.curves;i<r.length;i++){const s=r[i],o=s&&s.isEllipseCurve?n*2:s&&(s.isLineCurve||s.isLineCurve3)?1:s&&s.isSplineCurve?n*s.points.length:n,a=s.getPoints(o);for(let l=0;l<a.length;l++){const c=a[l];t&&t.equals(c)||(e.push(c),t=c)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e},copy:function(n){je.prototype.copy.call(this,n),this.curves=[];for(let e=0,t=n.curves.length;e<t;e++){const i=n.curves[e];this.curves.push(i.clone())}return this.autoClose=n.autoClose,this},toJSON:function(){const n=je.prototype.toJSON.call(this);n.autoClose=this.autoClose,n.curves=[];for(let e=0,t=this.curves.length;e<t;e++){const i=this.curves[e];n.curves.push(i.toJSON())}return n},fromJSON:function(n){je.prototype.fromJSON.call(this,n),this.autoClose=n.autoClose,this.curves=[];for(let e=0,t=n.curves.length;e<t;e++){const i=n.curves[e];this.curves.push(new Rp[i.type]().fromJSON(i))}return this}});function Wn(n){cr.call(this),this.type="Path",this.currentPoint=new Ee,n&&this.setFromPoints(n)}Wn.prototype=Object.assign(Object.create(cr.prototype),{constructor:Wn,setFromPoints:function(n){this.moveTo(n[0].x,n[0].y);for(let e=1,t=n.length;e<t;e++)this.lineTo(n[e].x,n[e].y);return this},moveTo:function(n,e){return this.currentPoint.set(n,e),this},lineTo:function(n,e){const t=new on(this.currentPoint.clone(),new Ee(n,e));return this.curves.push(t),this.currentPoint.set(n,e),this},quadraticCurveTo:function(n,e,t,i){const r=new Yn(this.currentPoint.clone(),new Ee(n,e),new Ee(t,i));return this.curves.push(r),this.currentPoint.set(t,i),this},bezierCurveTo:function(n,e,t,i,r,s){const o=new jn(this.currentPoint.clone(),new Ee(n,e),new Ee(t,i),new Ee(r,s));return this.curves.push(o),this.currentPoint.set(r,s),this},splineThru:function(n){const e=[this.currentPoint.clone()].concat(n),t=new Zn(e);return this.curves.push(t),this.currentPoint.copy(n[n.length-1]),this},arc:function(n,e,t,i,r,s){const o=this.currentPoint.x,a=this.currentPoint.y;return this.absarc(n+o,e+a,t,i,r,s),this},absarc:function(n,e,t,i,r,s){return this.absellipse(n,e,t,t,i,r,s),this},ellipse:function(n,e,t,i,r,s,o,a){const l=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(n+l,e+c,t,i,r,s,o,a),this},absellipse:function(n,e,t,i,r,s,o,a){const l=new Sn(n,e,t,i,r,s,o,a);if(this.curves.length>0){const u=l.getPoint(0);u.equals(this.currentPoint)||this.lineTo(u.x,u.y)}this.curves.push(l);const c=l.getPoint(1);return this.currentPoint.copy(c),this},copy:function(n){return cr.prototype.copy.call(this,n),this.currentPoint.copy(n.currentPoint),this},toJSON:function(){const n=cr.prototype.toJSON.call(this);return n.currentPoint=this.currentPoint.toArray(),n},fromJSON:function(n){return cr.prototype.fromJSON.call(this,n),this.currentPoint.fromArray(n.currentPoint),this}});function dr(n){Wn.call(this,n),this.uuid=Ke.generateUUID(),this.type="Shape",this.holes=[]}dr.prototype=Object.assign(Object.create(Wn.prototype),{constructor:dr,getPointsHoles:function(n){const e=[];for(let t=0,i=this.holes.length;t<i;t++)e[t]=this.holes[t].getPoints(n);return e},extractPoints:function(n){return{shape:this.getPoints(n),holes:this.getPointsHoles(n)}},copy:function(n){Wn.prototype.copy.call(this,n),this.holes=[];for(let e=0,t=n.holes.length;e<t;e++){const i=n.holes[e];this.holes.push(i.clone())}return this},toJSON:function(){const n=Wn.prototype.toJSON.call(this);n.uuid=this.uuid,n.holes=[];for(let e=0,t=this.holes.length;e<t;e++){const i=this.holes[e];n.holes.push(i.toJSON())}return n},fromJSON:function(n){Wn.prototype.fromJSON.call(this,n),this.uuid=n.uuid,this.holes=[];for(let e=0,t=n.holes.length;e<t;e++){const i=n.holes[e];this.holes.push(new Wn().fromJSON(i))}return this}});function vt(n,e=1){qe.call(this),this.type="Light",this.color=new Ge(n),this.intensity=e}vt.prototype=Object.assign(Object.create(qe.prototype),{constructor:vt,isLight:!0,copy:function(n){return qe.prototype.copy.call(this,n),this.color.copy(n.color),this.intensity=n.intensity,this},toJSON:function(n){const e=qe.prototype.toJSON.call(this,n);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),e}});function yu(n,e,t){vt.call(this,n,t),this.type="HemisphereLight",this.position.copy(qe.DefaultUp),this.updateMatrix(),this.groundColor=new Ge(e)}yu.prototype=Object.assign(Object.create(vt.prototype),{constructor:yu,isHemisphereLight:!0,copy:function(n){return vt.prototype.copy.call(this,n),this.groundColor.copy(n.groundColor),this}});function zi(n){this.camera=n,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new Ee(512,512),this.map=null,this.mapPass=null,this.matrix=new tt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Ec,this._frameExtents=new Ee(1,1),this._viewportCount=1,this._viewports=[new ft(0,0,1,1)]}Object.assign(zi.prototype,{_projScreenMatrix:new tt,_lightPositionWorld:new F,_lookTarget:new F,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(n){const e=this.camera,t=this.matrix,i=this._projScreenMatrix,r=this._lookTarget,s=this._lightPositionWorld;s.setFromMatrixPosition(n.matrixWorld),e.position.copy(s),r.setFromMatrixPosition(n.target.matrixWorld),e.lookAt(r),e.updateMatrixWorld(),i.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(i),t.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),t.multiply(e.projectionMatrix),t.multiply(e.matrixWorldInverse)},getViewport:function(n){return this._viewports[n]},getFrameExtents:function(){return this._frameExtents},copy:function(n){return this.camera=n.camera.clone(),this.bias=n.bias,this.radius=n.radius,this.mapSize.copy(n.mapSize),this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){const n={};return this.bias!==0&&(n.bias=this.bias),this.normalBias!==0&&(n.normalBias=this.normalBias),this.radius!==1&&(n.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(n.mapSize=this.mapSize.toArray()),n.camera=this.camera.toJSON(!1).object,delete n.camera.matrix,n}});function Pp(){zi.call(this,new Pt(50,1,.5,500)),this.focus=1}Pp.prototype=Object.assign(Object.create(zi.prototype),{constructor:Pp,isSpotLightShadow:!0,updateMatrices:function(n){const e=this.camera,t=Ke.RAD2DEG*2*n.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=n.distance||e.far;(t!==e.fov||i!==e.aspect||r!==e.far)&&(e.fov=t,e.aspect=i,e.far=r,e.updateProjectionMatrix()),zi.prototype.updateMatrices.call(this,n)}});function _u(n,e,t,i,r,s){vt.call(this,n,e),this.type="SpotLight",this.position.copy(qe.DefaultUp),this.updateMatrix(),this.target=new qe,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(o){this.intensity=o/Math.PI}}),this.distance=t!==void 0?t:0,this.angle=i!==void 0?i:Math.PI/3,this.penumbra=r!==void 0?r:0,this.decay=s!==void 0?s:1,this.shadow=new Pp}_u.prototype=Object.assign(Object.create(vt.prototype),{constructor:_u,isSpotLight:!0,copy:function(n){return vt.prototype.copy.call(this,n),this.distance=n.distance,this.angle=n.angle,this.penumbra=n.penumbra,this.decay=n.decay,this.target=n.target.clone(),this.shadow=n.shadow.clone(),this}});function Ip(){zi.call(this,new Pt(90,1,.5,500)),this._frameExtents=new Ee(4,2),this._viewportCount=6,this._viewports=[new ft(2,1,1,1),new ft(0,1,1,1),new ft(3,1,1,1),new ft(1,1,1,1),new ft(3,0,1,1),new ft(1,0,1,1)],this._cubeDirections=[new F(1,0,0),new F(-1,0,0),new F(0,0,1),new F(0,0,-1),new F(0,1,0),new F(0,-1,0)],this._cubeUps=[new F(0,1,0),new F(0,1,0),new F(0,1,0),new F(0,1,0),new F(0,0,1),new F(0,0,-1)]}Ip.prototype=Object.assign(Object.create(zi.prototype),{constructor:Ip,isPointLightShadow:!0,updateMatrices:function(n,e=0){const t=this.camera,i=this.matrix,r=this._lightPositionWorld,s=this._lookTarget,o=this._projScreenMatrix;r.setFromMatrixPosition(n.matrixWorld),t.position.copy(r),s.copy(t.position),s.add(this._cubeDirections[e]),t.up.copy(this._cubeUps[e]),t.lookAt(s),t.updateMatrixWorld(),i.makeTranslation(-r.x,-r.y,-r.z),o.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(o)}});function Mu(n,e,t,i){vt.call(this,n,e),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return this.intensity*4*Math.PI},set:function(r){this.intensity=r/(4*Math.PI)}}),this.distance=t!==void 0?t:0,this.decay=i!==void 0?i:1,this.shadow=new Ip}Mu.prototype=Object.assign(Object.create(vt.prototype),{constructor:Mu,isPointLight:!0,copy:function(n){return vt.prototype.copy.call(this,n),this.distance=n.distance,this.decay=n.decay,this.shadow=n.shadow.clone(),this}});function zo(n=-1,e=1,t=1,i=-1,r=.1,s=2e3){ui.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=n,this.right=e,this.top=t,this.bottom=i,this.near=r,this.far=s,this.updateProjectionMatrix()}zo.prototype=Object.assign(Object.create(ui.prototype),{constructor:zo,isOrthographicCamera:!0,copy:function(n,e){return ui.prototype.copy.call(this,n,e),this.left=n.left,this.right=n.right,this.top=n.top,this.bottom=n.bottom,this.near=n.near,this.far=n.far,this.zoom=n.zoom,this.view=n.view===null?null:Object.assign({},n.view),this},setViewOffset:function(n,e,t,i,r,s){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=n,this.view.fullHeight=e,this.view.offsetX=t,this.view.offsetY=i,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()},clearViewOffset:function(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const n=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),t=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=t-n,s=t+n,o=i+e,a=i-e;if(this.view!==null&&this.view.enabled){const l=(this.right-this.left)/this.view.fullWidth/this.zoom,c=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=l*this.view.offsetX,s=r+l*this.view.width,o-=c*this.view.offsetY,a=o-c*this.view.height}this.projectionMatrix.makeOrthographic(r,s,o,a,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(n){const e=qe.prototype.toJSON.call(this,n);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}});function Dp(){zi.call(this,new zo(-5,5,5,-5,.5,500))}Dp.prototype=Object.assign(Object.create(zi.prototype),{constructor:Dp,isDirectionalLightShadow:!0,updateMatrices:function(n){zi.prototype.updateMatrices.call(this,n)}});function wu(n,e){vt.call(this,n,e),this.type="DirectionalLight",this.position.copy(qe.DefaultUp),this.updateMatrix(),this.target=new qe,this.shadow=new Dp}wu.prototype=Object.assign(Object.create(vt.prototype),{constructor:wu,isDirectionalLight:!0,copy:function(n){return vt.prototype.copy.call(this,n),this.target=n.target.clone(),this.shadow=n.shadow.clone(),this}});function Su(n,e){vt.call(this,n,e),this.type="AmbientLight"}Su.prototype=Object.assign(Object.create(vt.prototype),{constructor:Su,isAmbientLight:!0});function Eu(n,e,t,i){vt.call(this,n,e),this.type="RectAreaLight",this.width=t!==void 0?t:10,this.height=i!==void 0?i:10}Eu.prototype=Object.assign(Object.create(vt.prototype),{constructor:Eu,isRectAreaLight:!0,copy:function(n){return vt.prototype.copy.call(this,n),this.width=n.width,this.height=n.height,this},toJSON:function(n){const e=vt.prototype.toJSON.call(this,n);return e.object.width=this.width,e.object.height=this.height,e}});class O1{constructor(){Object.defineProperty(this,"isSphericalHarmonics3",{value:!0}),this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new F)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const i=e.x,r=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*r),t.addScaledVector(o[2],.488603*s),t.addScaledVector(o[3],.488603*i),t.addScaledVector(o[4],1.092548*(i*r)),t.addScaledVector(o[5],1.092548*(r*s)),t.addScaledVector(o[6],.315392*(3*s*s-1)),t.addScaledVector(o[7],1.092548*(i*s)),t.addScaledVector(o[8],.546274*(i*i-r*r)),t}getIrradianceAt(e,t){const i=e.x,r=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],2*.511664*r),t.addScaledVector(o[2],2*.511664*s),t.addScaledVector(o[3],2*.511664*i),t.addScaledVector(o[4],2*.429043*i*r),t.addScaledVector(o[5],2*.429043*r*s),t.addScaledVector(o[6],.743125*s*s-.247708),t.addScaledVector(o[7],2*.429043*i*s),t.addScaledVector(o[8],.429043*(i*i-r*r)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(e.coefficients[i],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let i=0;i<9;i++)this.coefficients[i].lerp(e.coefficients[i],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const i=this.coefficients;for(let r=0;r<9;r++)i[r].fromArray(e,t+r*3);return this}toArray(e=[],t=0){const i=this.coefficients;for(let r=0;r<9;r++)i[r].toArray(e,t+r*3);return e}static getBasisAt(e,t){const i=e.x,r=e.y,s=e.z;t[0]=.282095,t[1]=.488603*r,t[2]=.488603*s,t[3]=.488603*i,t[4]=1.092548*i*r,t[5]=1.092548*r*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*i*s,t[8]=.546274*(i*i-r*r)}}function Rn(n,e){vt.call(this,void 0,e),this.type="LightProbe",this.sh=n!==void 0?n:new O1}Rn.prototype=Object.assign(Object.create(vt.prototype),{constructor:Rn,isLightProbe:!0,copy:function(n){return vt.prototype.copy.call(this,n),this.sh.copy(n.sh),this},fromJSON:function(n){return this.intensity=n.intensity,this.sh.fromArray(n.sh),this},toJSON:function(n){const e=vt.prototype.toJSON.call(this,n);return e.object.sh=this.sh.toArray(),e}});function Tu(n){ut.call(this,n),this.textures={}}Tu.prototype=Object.assign(Object.create(ut.prototype),{constructor:Tu,load:function(n,e,t,i){const r=this,s=new Dn(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(n,function(o){try{e(r.parse(JSON.parse(o)))}catch(a){i?i(a):console.error(a),r.manager.itemError(n)}},t,i)},parse:function(n){const e=this.textures;function t(r){return e[r]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",r),e[r]}const i=new RP[n.type];if(n.uuid!==void 0&&(i.uuid=n.uuid),n.name!==void 0&&(i.name=n.name),n.color!==void 0&&i.color!==void 0&&i.color.setHex(n.color),n.roughness!==void 0&&(i.roughness=n.roughness),n.metalness!==void 0&&(i.metalness=n.metalness),n.sheen!==void 0&&(i.sheen=new Ge().setHex(n.sheen)),n.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(n.emissive),n.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(n.specular),n.shininess!==void 0&&(i.shininess=n.shininess),n.clearcoat!==void 0&&(i.clearcoat=n.clearcoat),n.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=n.clearcoatRoughness),n.fog!==void 0&&(i.fog=n.fog),n.flatShading!==void 0&&(i.flatShading=n.flatShading),n.blending!==void 0&&(i.blending=n.blending),n.combine!==void 0&&(i.combine=n.combine),n.side!==void 0&&(i.side=n.side),n.opacity!==void 0&&(i.opacity=n.opacity),n.transparent!==void 0&&(i.transparent=n.transparent),n.alphaTest!==void 0&&(i.alphaTest=n.alphaTest),n.depthTest!==void 0&&(i.depthTest=n.depthTest),n.depthWrite!==void 0&&(i.depthWrite=n.depthWrite),n.colorWrite!==void 0&&(i.colorWrite=n.colorWrite),n.stencilWrite!==void 0&&(i.stencilWrite=n.stencilWrite),n.stencilWriteMask!==void 0&&(i.stencilWriteMask=n.stencilWriteMask),n.stencilFunc!==void 0&&(i.stencilFunc=n.stencilFunc),n.stencilRef!==void 0&&(i.stencilRef=n.stencilRef),n.stencilFuncMask!==void 0&&(i.stencilFuncMask=n.stencilFuncMask),n.stencilFail!==void 0&&(i.stencilFail=n.stencilFail),n.stencilZFail!==void 0&&(i.stencilZFail=n.stencilZFail),n.stencilZPass!==void 0&&(i.stencilZPass=n.stencilZPass),n.wireframe!==void 0&&(i.wireframe=n.wireframe),n.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=n.wireframeLinewidth),n.wireframeLinecap!==void 0&&(i.wireframeLinecap=n.wireframeLinecap),n.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=n.wireframeLinejoin),n.rotation!==void 0&&(i.rotation=n.rotation),n.linewidth!==1&&(i.linewidth=n.linewidth),n.dashSize!==void 0&&(i.dashSize=n.dashSize),n.gapSize!==void 0&&(i.gapSize=n.gapSize),n.scale!==void 0&&(i.scale=n.scale),n.polygonOffset!==void 0&&(i.polygonOffset=n.polygonOffset),n.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=n.polygonOffsetFactor),n.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=n.polygonOffsetUnits),n.skinning!==void 0&&(i.skinning=n.skinning),n.morphTargets!==void 0&&(i.morphTargets=n.morphTargets),n.morphNormals!==void 0&&(i.morphNormals=n.morphNormals),n.dithering!==void 0&&(i.dithering=n.dithering),n.vertexTangents!==void 0&&(i.vertexTangents=n.vertexTangents),n.visible!==void 0&&(i.visible=n.visible),n.toneMapped!==void 0&&(i.toneMapped=n.toneMapped),n.userData!==void 0&&(i.userData=n.userData),n.vertexColors!==void 0&&(typeof n.vertexColors=="number"?i.vertexColors=n.vertexColors>0:i.vertexColors=n.vertexColors),n.uniforms!==void 0)for(const r in n.uniforms){const s=n.uniforms[r];switch(i.uniforms[r]={},s.type){case"t":i.uniforms[r].value=t(s.value);break;case"c":i.uniforms[r].value=new Ge().setHex(s.value);break;case"v2":i.uniforms[r].value=new Ee().fromArray(s.value);break;case"v3":i.uniforms[r].value=new F().fromArray(s.value);break;case"v4":i.uniforms[r].value=new ft().fromArray(s.value);break;case"m3":i.uniforms[r].value=new vn().fromArray(s.value);break;case"m4":i.uniforms[r].value=new tt().fromArray(s.value);break;default:i.uniforms[r].value=s.value}}if(n.defines!==void 0&&(i.defines=n.defines),n.vertexShader!==void 0&&(i.vertexShader=n.vertexShader),n.fragmentShader!==void 0&&(i.fragmentShader=n.fragmentShader),n.extensions!==void 0)for(const r in n.extensions)i.extensions[r]=n.extensions[r];if(n.shading!==void 0&&(i.flatShading=n.shading===1),n.size!==void 0&&(i.size=n.size),n.sizeAttenuation!==void 0&&(i.sizeAttenuation=n.sizeAttenuation),n.map!==void 0&&(i.map=t(n.map)),n.matcap!==void 0&&(i.matcap=t(n.matcap)),n.alphaMap!==void 0&&(i.alphaMap=t(n.alphaMap)),n.bumpMap!==void 0&&(i.bumpMap=t(n.bumpMap)),n.bumpScale!==void 0&&(i.bumpScale=n.bumpScale),n.normalMap!==void 0&&(i.normalMap=t(n.normalMap)),n.normalMapType!==void 0&&(i.normalMapType=n.normalMapType),n.normalScale!==void 0){let r=n.normalScale;Array.isArray(r)===!1&&(r=[r,r]),i.normalScale=new Ee().fromArray(r)}return n.displacementMap!==void 0&&(i.displacementMap=t(n.displacementMap)),n.displacementScale!==void 0&&(i.displacementScale=n.displacementScale),n.displacementBias!==void 0&&(i.displacementBias=n.displacementBias),n.roughnessMap!==void 0&&(i.roughnessMap=t(n.roughnessMap)),n.metalnessMap!==void 0&&(i.metalnessMap=t(n.metalnessMap)),n.emissiveMap!==void 0&&(i.emissiveMap=t(n.emissiveMap)),n.emissiveIntensity!==void 0&&(i.emissiveIntensity=n.emissiveIntensity),n.specularMap!==void 0&&(i.specularMap=t(n.specularMap)),n.envMap!==void 0&&(i.envMap=t(n.envMap)),n.envMapIntensity!==void 0&&(i.envMapIntensity=n.envMapIntensity),n.reflectivity!==void 0&&(i.reflectivity=n.reflectivity),n.refractionRatio!==void 0&&(i.refractionRatio=n.refractionRatio),n.lightMap!==void 0&&(i.lightMap=t(n.lightMap)),n.lightMapIntensity!==void 0&&(i.lightMapIntensity=n.lightMapIntensity),n.aoMap!==void 0&&(i.aoMap=t(n.aoMap)),n.aoMapIntensity!==void 0&&(i.aoMapIntensity=n.aoMapIntensity),n.gradientMap!==void 0&&(i.gradientMap=t(n.gradientMap)),n.clearcoatMap!==void 0&&(i.clearcoatMap=t(n.clearcoatMap)),n.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=t(n.clearcoatRoughnessMap)),n.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=t(n.clearcoatNormalMap)),n.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new Ee().fromArray(n.clearcoatNormalScale)),n.transmission!==void 0&&(i.transmission=n.transmission),n.transmissionMap!==void 0&&(i.transmissionMap=t(n.transmissionMap)),i},setTextures:function(n){return this.textures=n,this}});const Cm={decodeText:function(n){if(typeof TextDecoder<"u")return new TextDecoder().decode(n);let e="";for(let t=0,i=n.length;t<i;t++)e+=String.fromCharCode(n[t]);try{return decodeURIComponent(escape(e))}catch{return e}},extractUrlBase:function(n){const e=n.lastIndexOf("/");return e===-1?"./":n.substr(0,e+1)}};function ac(){Xe.call(this),this.type="InstancedBufferGeometry",this.instanceCount=1/0}ac.prototype=Object.assign(Object.create(Xe.prototype),{constructor:ac,isInstancedBufferGeometry:!0,copy:function(n){return Xe.prototype.copy.call(this,n),this.instanceCount=n.instanceCount,this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){const n=Xe.prototype.toJSON.call(this);return n.instanceCount=this.instanceCount,n.isInstancedBufferGeometry=!0,n}});function Au(n,e,t,i){typeof t=="number"&&(i=t,t=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),Ze.call(this,n,e,t),this.meshPerAttribute=i||1}Au.prototype=Object.assign(Object.create(Ze.prototype),{constructor:Au,isInstancedBufferAttribute:!0,copy:function(n){return Ze.prototype.copy.call(this,n),this.meshPerAttribute=n.meshPerAttribute,this},toJSON:function(){const n=Ze.prototype.toJSON.call(this);return n.meshPerAttribute=this.meshPerAttribute,n.isInstancedBufferAttribute=!0,n}});function Lu(n){ut.call(this,n)}Lu.prototype=Object.assign(Object.create(ut.prototype),{constructor:Lu,load:function(n,e,t,i){const r=this,s=new Dn(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(n,function(o){try{e(r.parse(JSON.parse(o)))}catch(a){i?i(a):console.error(a),r.manager.itemError(n)}},t,i)},parse:function(n){const e={},t={};function i(h,d){if(e[d]!==void 0)return e[d];const g=h.interleavedBuffers[d],m=r(h,g.buffer),v=wa(g.type,m),x=new bn(v,g.stride);return x.uuid=g.uuid,e[d]=x,x}function r(h,d){if(t[d]!==void 0)return t[d];const g=h.arrayBuffers[d],m=new Uint32Array(g).buffer;return t[d]=m,m}const s=n.isInstancedBufferGeometry?new ac:new Xe,o=n.data.index;if(o!==void 0){const h=wa(o.type,o.array);s.setIndex(new Ze(h,1))}const a=n.data.attributes;for(const h in a){const d=a[h];let p;if(d.isInterleavedBufferAttribute){const g=i(n.data,d.data);p=new xr(g,d.itemSize,d.offset,d.normalized)}else{const g=wa(d.type,d.array),m=d.isInstancedBufferAttribute?Au:Ze;p=new m(g,d.itemSize,d.normalized)}d.name!==void 0&&(p.name=d.name),s.setAttribute(h,p)}const l=n.data.morphAttributes;if(l)for(const h in l){const d=l[h],p=[];for(let g=0,m=d.length;g<m;g++){const v=d[g];let x;if(v.isInterleavedBufferAttribute){const M=i(n.data,v.data);x=new xr(M,v.itemSize,v.offset,v.normalized)}else{const M=wa(v.type,v.array);x=new Ze(M,v.itemSize,v.normalized)}v.name!==void 0&&(x.name=v.name),p.push(x)}s.morphAttributes[h]=p}n.data.morphTargetsRelative&&(s.morphTargetsRelative=!0);const u=n.data.groups||n.data.drawcalls||n.data.offsets;if(u!==void 0)for(let h=0,d=u.length;h!==d;++h){const p=u[h];s.addGroup(p.start,p.count,p.materialIndex)}const f=n.data.boundingSphere;if(f!==void 0){const h=new F;f.center!==void 0&&h.fromArray(f.center),s.boundingSphere=new Tr(h,f.radius)}return n.name&&(s.name=n.name),n.userData&&(s.userData=n.userData),s}});class GP extends ut{constructor(e){super(e)}load(e,t,i,r){const s=this,o=this.path===""?Cm.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||o;const a=new Dn(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(l){let c=null;try{c=JSON.parse(l)}catch(f){r!==void 0&&r(f),console.error("THREE:ObjectLoader: Can't parse "+e+".",f.message);return}const u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry"){console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(c,t)},i,r)}parse(e,t){const i=this.parseAnimations(e.animations),r=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,r),o=this.parseImages(e.images,function(){t!==void 0&&t(c)}),a=this.parseTextures(e.textures,o),l=this.parseMaterials(e.materials,a),c=this.parseObject(e.object,s,l,i),u=this.parseSkeletons(e.skeletons,c);if(this.bindSkeletons(c,u),t!==void 0){let f=!1;for(const h in o)if(o[h]instanceof HTMLImageElement){f=!0;break}f===!1&&t(c)}return c}parseShapes(e){const t={};if(e!==void 0)for(let i=0,r=e.length;i<r;i++){const s=new dr().fromJSON(e[i]);t[s.uuid]=s}return t}parseSkeletons(e,t){const i={},r={};if(t.traverse(function(s){s.isBone&&(r[s.uuid]=s)}),e!==void 0)for(let s=0,o=e.length;s<o;s++){const a=new Za().fromJSON(e[s],r);i[a.uuid]=a}return i}parseGeometries(e,t){const i={};let r;if(e!==void 0){const s=new Lu;for(let o=0,a=e.length;o<a;o++){let l;const c=e[o];switch(c.type){case"PlaneGeometry":case"PlaneBufferGeometry":l=new Yt[c.type](c.width,c.height,c.widthSegments,c.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":l=new Yt[c.type](c.width,c.height,c.depth,c.widthSegments,c.heightSegments,c.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":l=new Yt[c.type](c.radius,c.segments,c.thetaStart,c.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":l=new Yt[c.type](c.radiusTop,c.radiusBottom,c.height,c.radialSegments,c.heightSegments,c.openEnded,c.thetaStart,c.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":l=new Yt[c.type](c.radius,c.height,c.radialSegments,c.heightSegments,c.openEnded,c.thetaStart,c.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":l=new Yt[c.type](c.radius,c.widthSegments,c.heightSegments,c.phiStart,c.phiLength,c.thetaStart,c.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":l=new Yt[c.type](c.radius,c.detail);break;case"RingGeometry":case"RingBufferGeometry":l=new Yt[c.type](c.innerRadius,c.outerRadius,c.thetaSegments,c.phiSegments,c.thetaStart,c.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":l=new Yt[c.type](c.radius,c.tube,c.radialSegments,c.tubularSegments,c.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":l=new Yt[c.type](c.radius,c.tube,c.tubularSegments,c.radialSegments,c.p,c.q);break;case"TubeGeometry":case"TubeBufferGeometry":l=new Yt[c.type](new Rp[c.path.type]().fromJSON(c.path),c.tubularSegments,c.radius,c.radialSegments,c.closed);break;case"LatheGeometry":case"LatheBufferGeometry":l=new Yt[c.type](c.points,c.segments,c.phiStart,c.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":l=new Yt[c.type](c.vertices,c.indices,c.radius,c.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":r=[];for(let f=0,h=c.shapes.length;f<h;f++){const d=t[c.shapes[f]];r.push(d)}l=new Yt[c.type](r,c.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":r=[];for(let f=0,h=c.shapes.length;f<h;f++){const d=t[c.shapes[f]];r.push(d)}const u=c.options.extrudePath;u!==void 0&&(c.options.extrudePath=new Rp[u.type]().fromJSON(u)),l=new Yt[c.type](r,c.options);break;case"BufferGeometry":case"InstancedBufferGeometry":l=s.parse(c);break;case"Geometry":console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+c.type+'"');continue}l.uuid=c.uuid,c.name!==void 0&&(l.name=c.name),l.isBufferGeometry===!0&&c.userData!==void 0&&(l.userData=c.userData),i[c.uuid]=l}}return i}parseMaterials(e,t){const i={},r={};if(e!==void 0){const s=new Tu;s.setTextures(t);for(let o=0,a=e.length;o<a;o++){const l=e[o];if(l.type==="MultiMaterial"){const c=[];for(let u=0;u<l.materials.length;u++){const f=l.materials[u];i[f.uuid]===void 0&&(i[f.uuid]=s.parse(f)),c.push(i[f.uuid])}r[l.uuid]=c}else i[l.uuid]===void 0&&(i[l.uuid]=s.parse(l)),r[l.uuid]=i[l.uuid]}}return r}parseAnimations(e){const t={};if(e!==void 0)for(let i=0;i<e.length;i++){const r=e[i],s=xn.parse(r);t[s.uuid]=s}return t}parseImages(e,t){const i=this,r={};let s;function o(l){return i.manager.itemStart(l),s.load(l,function(){i.manager.itemEnd(l)},void 0,function(){i.manager.itemError(l),i.manager.itemEnd(l)})}function a(l){if(typeof l=="string"){const c=l,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:i.resourcePath+c;return o(u)}else return l.data?{data:wa(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){const l=new Am(t);s=new Bo(l),s.setCrossOrigin(this.crossOrigin);for(let c=0,u=e.length;c<u;c++){const f=e[c],h=f.url;if(Array.isArray(h)){r[f.uuid]=[];for(let d=0,p=h.length;d<p;d++){const g=h[d],m=a(g);m!==null&&(m instanceof HTMLImageElement?r[f.uuid].push(m):r[f.uuid].push(new Bi(m.data,m.width,m.height)))}}else{const d=a(f.url);d!==null&&(r[f.uuid]=d)}}}return r}parseTextures(e,t){function i(s,o){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),o[s])}const r={};if(e!==void 0)for(let s=0,o=e.length;s<o;s++){const a=e[s];a.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),t[a.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",a.image);let l;const c=t[a.image];Array.isArray(c)?(l=new fi(c),c.length===6&&(l.needsUpdate=!0)):(c&&c.data?l=new Bi(c.data,c.width,c.height):l=new ht(c),c&&(l.needsUpdate=!0)),l.uuid=a.uuid,a.name!==void 0&&(l.name=a.name),a.mapping!==void 0&&(l.mapping=i(a.mapping,kP)),a.offset!==void 0&&l.offset.fromArray(a.offset),a.repeat!==void 0&&l.repeat.fromArray(a.repeat),a.center!==void 0&&l.center.fromArray(a.center),a.rotation!==void 0&&(l.rotation=a.rotation),a.wrap!==void 0&&(l.wrapS=i(a.wrap[0],Fv),l.wrapT=i(a.wrap[1],Fv)),a.format!==void 0&&(l.format=a.format),a.type!==void 0&&(l.type=a.type),a.encoding!==void 0&&(l.encoding=a.encoding),a.minFilter!==void 0&&(l.minFilter=i(a.minFilter,Nv)),a.magFilter!==void 0&&(l.magFilter=i(a.magFilter,Nv)),a.anisotropy!==void 0&&(l.anisotropy=a.anisotropy),a.flipY!==void 0&&(l.flipY=a.flipY),a.premultiplyAlpha!==void 0&&(l.premultiplyAlpha=a.premultiplyAlpha),a.unpackAlignment!==void 0&&(l.unpackAlignment=a.unpackAlignment),r[a.uuid]=l}return r}parseObject(e,t,i,r){let s;function o(u){return t[u]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",u),t[u]}function a(u){if(u!==void 0){if(Array.isArray(u)){const f=[];for(let h=0,d=u.length;h<d;h++){const p=u[h];i[p]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",p),f.push(i[p])}return f}return i[u]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",u),i[u]}}let l,c;switch(e.type){case"Scene":s=new Sm,e.background!==void 0&&Number.isInteger(e.background)&&(s.background=new Ge(e.background)),e.fog!==void 0&&(e.fog.type==="Fog"?s.fog=new Wu(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(s.fog=new Vu(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":s=new Pt(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(s.focus=e.focus),e.zoom!==void 0&&(s.zoom=e.zoom),e.filmGauge!==void 0&&(s.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(s.filmOffset=e.filmOffset),e.view!==void 0&&(s.view=Object.assign({},e.view));break;case"OrthographicCamera":s=new zo(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(s.zoom=e.zoom),e.view!==void 0&&(s.view=Object.assign({},e.view));break;case"AmbientLight":s=new Su(e.color,e.intensity);break;case"DirectionalLight":s=new wu(e.color,e.intensity);break;case"PointLight":s=new Mu(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":s=new Eu(e.color,e.intensity,e.width,e.height);break;case"SpotLight":s=new _u(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":s=new yu(e.color,e.groundColor,e.intensity);break;case"LightProbe":s=new Rn().fromJSON(e);break;case"SkinnedMesh":l=o(e.geometry),c=a(e.material),s=new Xa(l,c),e.bindMode!==void 0&&(s.bindMode=e.bindMode),e.bindMatrix!==void 0&&s.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(s.skeleton=e.skeleton);break;case"Mesh":l=o(e.geometry),c=a(e.material),s=new xt(l,c);break;case"InstancedMesh":l=o(e.geometry),c=a(e.material);const u=e.count,f=e.instanceMatrix;s=new Kl(l,c,u),s.instanceMatrix=new Ze(new Float32Array(f.array),16);break;case"LOD":s=new ja;break;case"Line":s=new In(o(e.geometry),a(e.material));break;case"LineLoop":s=new Ql(o(e.geometry),a(e.material));break;case"LineSegments":s=new tn(o(e.geometry),a(e.material));break;case"PointCloud":case"Points":s=new Io(o(e.geometry),a(e.material));break;case"Sprite":s=new $a(a(e.material));break;case"Group":s=new ar;break;case"Bone":s=new Ya;break;default:s=new qe}if(s.uuid=e.uuid,e.name!==void 0&&(s.name=e.name),e.matrix!==void 0?(s.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(s.matrixAutoUpdate=e.matrixAutoUpdate),s.matrixAutoUpdate&&s.matrix.decompose(s.position,s.quaternion,s.scale)):(e.position!==void 0&&s.position.fromArray(e.position),e.rotation!==void 0&&s.rotation.fromArray(e.rotation),e.quaternion!==void 0&&s.quaternion.fromArray(e.quaternion),e.scale!==void 0&&s.scale.fromArray(e.scale)),e.castShadow!==void 0&&(s.castShadow=e.castShadow),e.receiveShadow!==void 0&&(s.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(s.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(s.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(s.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&s.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(s.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(s.visible=e.visible),e.frustumCulled!==void 0&&(s.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(s.renderOrder=e.renderOrder),e.userData!==void 0&&(s.userData=e.userData),e.layers!==void 0&&(s.layers.mask=e.layers),e.children!==void 0){const u=e.children;for(let f=0;f<u.length;f++)s.add(this.parseObject(u[f],t,i,r))}if(e.animations!==void 0){const u=e.animations;for(let f=0;f<u.length;f++){const h=u[f];s.animations.push(r[h])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(s.autoUpdate=e.autoUpdate);const u=e.levels;for(let f=0;f<u.length;f++){const h=u[f],d=s.getObjectByProperty("uuid",h.object);d!==void 0&&s.addLevel(d,h.distance)}}return s}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(i){if(i.isSkinnedMesh===!0&&i.skeleton!==void 0){const r=t[i.skeleton];r===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",i.skeleton):i.bind(r,i.bindMatrix)}})}setTexturePath(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}}const kP={UVMapping:zu,CubeReflectionMapping:yc,CubeRefractionMapping:_c,EquirectangularReflectionMapping:jl,EquirectangularRefractionMapping:Xl,CubeUVReflectionMapping:Yo,CubeUVRefractionMapping:Mc},Fv={RepeatWrapping:Ia,ClampToEdgeWrapping:Zt,MirroredRepeatWrapping:Da},Nv={NearestFilter:Dt,NearestMipmapNearestFilter:Yl,NearestMipmapLinearFilter:Zl,LinearFilter:Nt,LinearMipmapNearestFilter:gm,LinearMipmapLinearFilter:Zo};function Op(n){typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),ut.call(this,n),this.options={premultiplyAlpha:"none"}}Op.prototype=Object.assign(Object.create(ut.prototype),{constructor:Op,isImageBitmapLoader:!0,setOptions:function(e){return this.options=e,this},load:function(n,e,t,i){n===void 0&&(n=""),this.path!==void 0&&(n=this.path+n),n=this.manager.resolveURL(n);const r=this,s=_s.get(n);if(s!==void 0)return r.manager.itemStart(n),setTimeout(function(){e&&e(s),r.manager.itemEnd(n)},0),s;const o={};o.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",fetch(n,o).then(function(a){return a.blob()}).then(function(a){return createImageBitmap(a,r.options)}).then(function(a){_s.add(n,a),e&&e(a),r.manager.itemEnd(n)}).catch(function(a){i&&i(a),r.manager.itemError(n),r.manager.itemEnd(n)}),r.manager.itemStart(n)}});function Rm(){this.type="ShapePath",this.color=new Ge,this.subPaths=[],this.currentPath=null}Object.assign(Rm.prototype,{moveTo:function(n,e){return this.currentPath=new Wn,this.subPaths.push(this.currentPath),this.currentPath.moveTo(n,e),this},lineTo:function(n,e){return this.currentPath.lineTo(n,e),this},quadraticCurveTo:function(n,e,t,i){return this.currentPath.quadraticCurveTo(n,e,t,i),this},bezierCurveTo:function(n,e,t,i,r,s){return this.currentPath.bezierCurveTo(n,e,t,i,r,s),this},splineThru:function(n){return this.currentPath.splineThru(n),this},toShapes:function(n,e){function t(v){const x=[];for(let M=0,b=v.length;M<b;M++){const w=v[M],y=new dr;y.curves=w.curves,x.push(y)}return x}function i(v,x){const M=x.length;let b=!1;for(let w=M-1,y=0;y<M;w=y++){let _=x[w],S=x[y],E=S.x-_.x,R=S.y-_.y;if(Math.abs(R)>Number.EPSILON){if(R<0&&(_=x[y],E=-E,S=x[w],R=-R),v.y<_.y||v.y>S.y)continue;if(v.y===_.y){if(v.x===_.x)return!0}else{const I=R*(v.x-_.x)-E*(v.y-_.y);if(I===0)return!0;if(I<0)continue;b=!b}}else{if(v.y!==_.y)continue;if(S.x<=v.x&&v.x<=_.x||_.x<=v.x&&v.x<=S.x)return!0}}return b}const r=Ni.isClockWise,s=this.subPaths;if(s.length===0)return[];if(e===!0)return t(s);let o,a,l;const c=[];if(s.length===1)return a=s[0],l=new dr,l.curves=a.curves,c.push(l),c;let u=!r(s[0].getPoints());u=n?!u:u;const f=[],h=[];let d=[],p=0,g;h[p]=void 0,d[p]=[];for(let v=0,x=s.length;v<x;v++)a=s[v],g=a.getPoints(),o=r(g),o=n?!o:o,o?(!u&&h[p]&&p++,h[p]={s:new dr,p:g},h[p].s.curves=a.curves,u&&p++,d[p]=[]):d[p].push({h:a,p:g[0]});if(!h[0])return t(s);if(h.length>1){let v=!1;const x=[];for(let M=0,b=h.length;M<b;M++)f[M]=[];for(let M=0,b=h.length;M<b;M++){const w=d[M];for(let y=0;y<w.length;y++){const _=w[y];let S=!0;for(let E=0;E<h.length;E++)i(_.p,h[E].p)&&(M!==E&&x.push({froms:M,tos:E,hole:y}),S?(S=!1,f[E].push(_)):v=!0);S&&f[M].push(_)}}x.length>0&&(v||(d=f))}let m;for(let v=0,x=h.length;v<x;v++){l=h[v].s,c.push(l),m=d[v];for(let M=0,b=m.length;M<b;M++)l.holes.push(m[M].h)}return c}});class F1{constructor(e){Object.defineProperty(this,"isFont",{value:!0}),this.type="Font",this.data=e}generateShapes(e,t=100){const i=[],r=HP(e,t,this.data);for(let s=0,o=r.length;s<o;s++)Array.prototype.push.apply(i,r[s].toShapes());return i}}function HP(n,e,t){const i=Array.from?Array.from(n):String(n).split(""),r=e/t.resolution,s=(t.boundingBox.yMax-t.boundingBox.yMin+t.underlineThickness)*r,o=[];let a=0,l=0;for(let c=0;c<i.length;c++){const u=i[c];if(u===`
`)a=0,l-=s;else{const f=VP(u,r,a,l,t);a+=f.offsetX,o.push(f.path)}}return o}function VP(n,e,t,i,r){const s=r.glyphs[n]||r.glyphs["?"];if(!s){console.error('THREE.Font: character "'+n+'" does not exists in font family '+r.familyName+".");return}const o=new Rm;let a,l,c,u,f,h,d,p;if(s.o){const g=s._cachedOutline||(s._cachedOutline=s.o.split(" "));for(let m=0,v=g.length;m<v;)switch(g[m++]){case"m":a=g[m++]*e+t,l=g[m++]*e+i,o.moveTo(a,l);break;case"l":a=g[m++]*e+t,l=g[m++]*e+i,o.lineTo(a,l);break;case"q":c=g[m++]*e+t,u=g[m++]*e+i,f=g[m++]*e+t,h=g[m++]*e+i,o.quadraticCurveTo(f,h,c,u);break;case"b":c=g[m++]*e+t,u=g[m++]*e+i,f=g[m++]*e+t,h=g[m++]*e+i,d=g[m++]*e+t,p=g[m++]*e+i,o.bezierCurveTo(f,h,d,p,c,u);break}}return{offsetX:s.ha*e,path:o}}function Fp(n){ut.call(this,n)}Fp.prototype=Object.assign(Object.create(ut.prototype),{constructor:Fp,load:function(n,e,t,i){const r=this,s=new Dn(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(r.withCredentials),s.load(n,function(o){let a;try{a=JSON.parse(o)}catch{console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),a=JSON.parse(o.substring(65,o.length-2))}const l=r.parse(a);e&&e(l)},t,i)},parse:function(n){return new F1(n)}});let Ll;const Pm={getContext:function(){return Ll===void 0&&(Ll=new(window.AudioContext||window.webkitAudioContext)),Ll},setContext:function(n){Ll=n}};function Cu(n){ut.call(this,n)}Cu.prototype=Object.assign(Object.create(ut.prototype),{constructor:Cu,load:function(n,e,t,i){const r=this,s=new Dn(r.manager);s.setResponseType("arraybuffer"),s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(n,function(o){try{const a=o.slice(0);Pm.getContext().decodeAudioData(a,function(c){e(c)})}catch(a){i?i(a):console.error(a),r.manager.itemError(n)}},t,i)}});function Np(n,e,t){Rn.call(this,void 0,t);const i=new Ge().set(n),r=new Ge().set(e),s=new F(i.r,i.g,i.b),o=new F(r.r,r.g,r.b),a=Math.sqrt(Math.PI),l=a*Math.sqrt(.75);this.sh.coefficients[0].copy(s).add(o).multiplyScalar(a),this.sh.coefficients[1].copy(s).sub(o).multiplyScalar(l)}Np.prototype=Object.assign(Object.create(Rn.prototype),{constructor:Np,isHemisphereLightProbe:!0,copy:function(n){return Rn.prototype.copy.call(this,n),this},toJSON:function(n){return Rn.prototype.toJSON.call(this,n)}});function Bp(n,e){Rn.call(this,void 0,e);const t=new Ge().set(n);this.sh.coefficients[0].set(t.r,t.g,t.b).multiplyScalar(2*Math.sqrt(Math.PI))}Bp.prototype=Object.assign(Object.create(Rn.prototype),{constructor:Bp,isAmbientLightProbe:!0,copy:function(n){return Rn.prototype.copy.call(this,n),this},toJSON:function(n){return Rn.prototype.toJSON.call(this,n)}});const Bv=new tt,Uv=new tt;function N1(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Pt,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Pt,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}Object.assign(N1.prototype,{update:function(n){const e=this._cache;if(e.focus!==n.focus||e.fov!==n.fov||e.aspect!==n.aspect*this.aspect||e.near!==n.near||e.far!==n.far||e.zoom!==n.zoom||e.eyeSep!==this.eyeSep){e.focus=n.focus,e.fov=n.fov,e.aspect=n.aspect*this.aspect,e.near=n.near,e.far=n.far,e.zoom=n.zoom,e.eyeSep=this.eyeSep;const i=n.projectionMatrix.clone(),r=e.eyeSep/2,s=r*e.near/e.focus,o=e.near*Math.tan(Ke.DEG2RAD*e.fov*.5)/e.zoom;let a,l;Uv.elements[12]=-r,Bv.elements[12]=r,a=-o*e.aspect+s,l=o*e.aspect+s,i.elements[0]=2*e.near/(l-a),i.elements[8]=(l+a)/(l-a),this.cameraL.projectionMatrix.copy(i),a=-o*e.aspect-s,l=o*e.aspect-s,i.elements[0]=2*e.near/(l-a),i.elements[8]=(l+a)/(l-a),this.cameraR.projectionMatrix.copy(i)}this.cameraL.matrixWorld.copy(n.matrixWorld).multiply(Uv),this.cameraR.matrixWorld.copy(n.matrixWorld).multiply(Bv)}});class B1{constructor(e){this.autoStart=e!==void 0?e:!0,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=zv(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=zv();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function zv(){return(typeof performance>"u"?Date:performance).now()}const Or=new F,Gv=new Wt,WP=new F,Fr=new F;class qP extends qe{constructor(){super(),this.type="AudioListener",this.context=Pm.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new B1}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,i=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Or,Gv,WP),Fr.set(0,0,-1).applyQuaternion(Gv),t.positionX){const r=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(Or.x,r),t.positionY.linearRampToValueAtTime(Or.y,r),t.positionZ.linearRampToValueAtTime(Or.z,r),t.forwardX.linearRampToValueAtTime(Fr.x,r),t.forwardY.linearRampToValueAtTime(Fr.y,r),t.forwardZ.linearRampToValueAtTime(Fr.z,r),t.upX.linearRampToValueAtTime(i.x,r),t.upY.linearRampToValueAtTime(i.y,r),t.upZ.linearRampToValueAtTime(i.z,r)}else t.setPosition(Or.x,Or.y,Or.z),t.setOrientation(Fr.x,Fr.y,Fr.z,i.x,i.y,i.z)}}class Im extends qe{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const Nr=new F,kv=new Wt,$P=new F,Br=new F;class jP extends Im{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,i){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=i,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(Nr,kv,$P),Br.set(0,0,1).applyQuaternion(kv);const t=this.panner;if(t.positionX){const i=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(Nr.x,i),t.positionY.linearRampToValueAtTime(Nr.y,i),t.positionZ.linearRampToValueAtTime(Nr.z,i),t.orientationX.linearRampToValueAtTime(Br.x,i),t.orientationY.linearRampToValueAtTime(Br.y,i),t.orientationZ.linearRampToValueAtTime(Br.z,i)}else t.setPosition(Nr.x,Nr.y,Nr.z),t.setOrientation(Br.x,Br.y,Br.z)}}class U1{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let i=0;i<t.length;i++)e+=t[i];return e/t.length}}function Dm(n,e,t){this.binding=n,this.valueSize=t;let i,r,s;switch(e){case"quaternion":i=this._slerp,r=this._slerpAdditive,s=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(t*6),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,s=this._setAdditiveIdentityOther,this.buffer=new Array(t*5);break;default:i=this._lerp,r=this._lerpAdditive,s=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(t*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=s,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}Object.assign(Dm.prototype,{accumulate:function(n,e){const t=this.buffer,i=this.valueSize,r=n*i+i;let s=this.cumulativeWeight;if(s===0){for(let o=0;o!==i;++o)t[r+o]=t[o];s=e}else{s+=e;const o=e/s;this._mixBufferRegion(t,r,0,o,i)}this.cumulativeWeight=s},accumulateAdditive:function(n){const e=this.buffer,t=this.valueSize,i=t*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(e,i,0,n,t),this.cumulativeWeightAdditive+=n},apply:function(n){const e=this.valueSize,t=this.buffer,i=n*e+e,r=this.cumulativeWeight,s=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const a=e*this._origIndex;this._mixBufferRegion(t,i,a,1-r,e)}s>0&&this._mixBufferRegionAdditive(t,i,this._addIndex*e,1,e);for(let a=e,l=e+e;a!==l;++a)if(t[a]!==t[a+e]){o.setValue(t,i);break}},saveOriginalState:function(){const n=this.binding,e=this.buffer,t=this.valueSize,i=t*this._origIndex;n.getValue(e,i);for(let r=t,s=i;r!==s;++r)e[r]=e[i+r%t];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0},restoreOriginalState:function(){const n=this.valueSize*3;this.binding.setValue(this.buffer,n)},_setAdditiveIdentityNumeric:function(){const n=this._addIndex*this.valueSize,e=n+this.valueSize;for(let t=n;t<e;t++)this.buffer[t]=0},_setAdditiveIdentityQuaternion:function(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1},_setAdditiveIdentityOther:function(){const n=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let t=0;t<this.valueSize;t++)this.buffer[e+t]=this.buffer[n+t]},_select:function(n,e,t,i,r){if(i>=.5)for(let s=0;s!==r;++s)n[e+s]=n[t+s]},_slerp:function(n,e,t,i){Wt.slerpFlat(n,e,n,e,n,t,i)},_slerpAdditive:function(n,e,t,i,r){const s=this._workIndex*r;Wt.multiplyQuaternionsFlat(n,s,n,e,n,t),Wt.slerpFlat(n,e,n,e,n,s,i)},_lerp:function(n,e,t,i,r){const s=1-i;for(let o=0;o!==r;++o){const a=e+o;n[a]=n[a]*s+n[t+o]*i}},_lerpAdditive:function(n,e,t,i,r){for(let s=0;s!==r;++s){const o=e+s;n[o]=n[o]+n[t+s]*i}}});const Om="\\[\\]\\.:\\/",XP=new RegExp("["+Om+"]","g"),Fm="[^"+Om+"]",YP="[^"+Om.replace("\\.","")+"]",ZP=/((?:WC+[\/:])*)/.source.replace("WC",Fm),JP=/(WCOD+)?/.source.replace("WCOD",YP),KP=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Fm),QP=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Fm),e5=new RegExp("^"+ZP+JP+KP+QP+"$"),t5=["material","materials","bones"];function z1(n,e,t){const i=t||qt.parseTrackName(e);this._targetGroup=n,this._bindings=n.subscribe_(e,i)}Object.assign(z1.prototype,{getValue:function(n,e){this.bind();const t=this._targetGroup.nCachedObjects_,i=this._bindings[t];i!==void 0&&i.getValue(n,e)},setValue:function(n,e){const t=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=t.length;i!==r;++i)t[i].setValue(n,e)},bind:function(){const n=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=n.length;e!==t;++e)n[e].bind()},unbind:function(){const n=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=n.length;e!==t;++e)n[e].unbind()}});function qt(n,e,t){this.path=e,this.parsedPath=t||qt.parseTrackName(e),this.node=qt.findNode(n,this.parsedPath.nodeName)||n,this.rootNode=n}Object.assign(qt,{Composite:z1,create:function(n,e,t){return n&&n.isAnimationObjectGroup?new qt.Composite(n,e,t):new qt(n,e,t)},sanitizeNodeName:function(n){return n.replace(/\s/g,"_").replace(XP,"")},parseTrackName:function(n){const e=e5.exec(n);if(!e)throw new Error("PropertyBinding: Cannot parse trackName: "+n);const t={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=t.nodeName&&t.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const r=t.nodeName.substring(i+1);t5.indexOf(r)!==-1&&(t.nodeName=t.nodeName.substring(0,i),t.objectName=r)}if(t.propertyName===null||t.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+n);return t},findNode:function(n,e){if(!e||e===""||e==="."||e===-1||e===n.name||e===n.uuid)return n;if(n.skeleton){const t=n.skeleton.getBoneByName(e);if(t!==void 0)return t}if(n.children){const t=function(r){for(let s=0;s<r.length;s++){const o=r[s];if(o.name===e||o.uuid===e)return o;const a=t(o.children);if(a)return a}return null},i=t(n.children);if(i)return i}return null}});Object.assign(qt.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(e,t){e[t]=this.node[this.propertyName]},function(e,t){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)e[t++]=i[r]},function(e,t){e[t]=this.resolvedProperty[this.propertyIndex]},function(e,t){this.resolvedProperty.toArray(e,t)}],SetterByBindingTypeAndVersioning:[[function(e,t){this.targetObject[this.propertyName]=e[t]},function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=e[t++]},function(e,t){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=e[t++];this.targetObject.needsUpdate=!0},function(e,t){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty[this.propertyIndex]=e[t]},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty.fromArray(e,t)},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(e,t){this.bind(),this.getValue(e,t)},setValue:function(e,t){this.bind(),this.setValue(e,t)},bind:function(){let n=this.node;const e=this.parsedPath,t=e.objectName,i=e.propertyName;let r=e.propertyIndex;if(n||(n=qt.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=n),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!n){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(t){let l=e.objectIndex;switch(t){case"materials":if(!n.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!n.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}n=n.material.materials;break;case"bones":if(!n.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}n=n.skeleton.bones;for(let c=0;c<n.length;c++)if(n[c].name===l){l=c;break}break;default:if(n[t]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}n=n[t]}if(l!==void 0){if(n[l]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,n);return}n=n[l]}}const s=n[i];if(s===void 0){const l=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+l+"."+i+" but it wasn't found.",n);return}let o=this.Versioning.None;this.targetObject=n,n.needsUpdate!==void 0?o=this.Versioning.NeedsUpdate:n.matrixWorldNeedsUpdate!==void 0&&(o=this.Versioning.MatrixWorldNeedsUpdate);let a=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!n.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(n.geometry.isBufferGeometry){if(!n.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}n.morphTargetDictionary[r]!==void 0&&(r=n.morphTargetDictionary[r])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}a=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=r}else s.fromArray!==void 0&&s.toArray!==void 0?(a=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(a=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=i;this.getValue=this.GetterByBindingType[a],this.setValue=this.SetterByBindingTypeAndVersioning[a][o]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}});Object.assign(qt.prototype,{_getValue_unbound:qt.prototype.getValue,_setValue_unbound:qt.prototype.setValue});function G1(){this.uuid=Ke.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const n={};this._indicesByUUID=n;for(let t=0,i=arguments.length;t!==i;++t)n[arguments[t].uuid]=t;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}Object.assign(G1.prototype,{isAnimationObjectGroup:!0,add:function(){const n=this._objects,e=this._indicesByUUID,t=this._paths,i=this._parsedPaths,r=this._bindings,s=r.length;let o,a=n.length,l=this.nCachedObjects_;for(let c=0,u=arguments.length;c!==u;++c){const f=arguments[c],h=f.uuid;let d=e[h];if(d===void 0){d=a++,e[h]=d,n.push(f);for(let p=0,g=s;p!==g;++p)r[p].push(new qt(f,t[p],i[p]))}else if(d<l){o=n[d];const p=--l,g=n[p];e[g.uuid]=d,n[d]=g,e[h]=p,n[p]=f;for(let m=0,v=s;m!==v;++m){const x=r[m],M=x[p];let b=x[d];x[d]=M,b===void 0&&(b=new qt(f,t[m],i[m])),x[p]=b}}else n[d]!==o&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l},remove:function(){const n=this._objects,e=this._indicesByUUID,t=this._bindings,i=t.length;let r=this.nCachedObjects_;for(let s=0,o=arguments.length;s!==o;++s){const a=arguments[s],l=a.uuid,c=e[l];if(c!==void 0&&c>=r){const u=r++,f=n[u];e[f.uuid]=c,n[c]=f,e[l]=u,n[u]=a;for(let h=0,d=i;h!==d;++h){const p=t[h],g=p[u],m=p[c];p[c]=g,p[u]=m}}}this.nCachedObjects_=r},uncache:function(){const n=this._objects,e=this._indicesByUUID,t=this._bindings,i=t.length;let r=this.nCachedObjects_,s=n.length;for(let o=0,a=arguments.length;o!==a;++o){const l=arguments[o],c=l.uuid,u=e[c];if(u!==void 0)if(delete e[c],u<r){const f=--r,h=n[f],d=--s,p=n[d];e[h.uuid]=u,n[u]=h,e[p.uuid]=f,n[f]=p,n.pop();for(let g=0,m=i;g!==m;++g){const v=t[g],x=v[f],M=v[d];v[u]=x,v[f]=M,v.pop()}}else{const f=--s,h=n[f];f>0&&(e[h.uuid]=u),n[u]=h,n.pop();for(let d=0,p=i;d!==p;++d){const g=t[d];g[u]=g[f],g.pop()}}}this.nCachedObjects_=r},subscribe_:function(n,e){const t=this._bindingsIndicesByPath;let i=t[n];const r=this._bindings;if(i!==void 0)return r[i];const s=this._paths,o=this._parsedPaths,a=this._objects,l=a.length,c=this.nCachedObjects_,u=new Array(l);i=r.length,t[n]=i,s.push(n),o.push(e),r.push(u);for(let f=c,h=a.length;f!==h;++f){const d=a[f];u[f]=new qt(d,n,e)}return u},unsubscribe_:function(n){const e=this._bindingsIndicesByPath,t=e[n];if(t!==void 0){const i=this._paths,r=this._parsedPaths,s=this._bindings,o=s.length-1,a=s[o],l=n[o];e[l]=t,s[t]=a,s.pop(),r[t]=r[o],r.pop(),i[t]=i[o],i.pop()}}});class n5{constructor(e,t,i=null,r=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=i,this.blendMode=r;const s=t.tracks,o=s.length,a=new Array(o),l={endingStart:Xr,endingEnd:Xr};for(let c=0;c!==o;++c){const u=s[c].createInterpolant(null);a[c]=u,u.settings=l}this._interpolantSettings=l,this._interpolants=a,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=a1,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,i){if(e.fadeOut(t),this.fadeIn(t),i){const r=this._clip.duration,s=e._clip.duration,o=s/r,a=r/s;e.warp(1,o,t),this.warp(a,1,t)}return this}crossFadeTo(e,t,i){return e.crossFadeFrom(this,t,i)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,i){const r=this._mixer,s=r.time,o=this.timeScale;let a=this._timeScaleInterpolant;a===null&&(a=r._lendControlInterpolant(),this._timeScaleInterpolant=a);const l=a.parameterPositions,c=a.sampleValues;return l[0]=s,l[1]=s+i,c[0]=e/o,c[1]=t/o,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,i,r){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const l=(e-s)*i;if(l<0||i===0)return;this._startTime=null,t=i*l}t*=this._updateTimeScale(e);const o=this._updateTime(t),a=this._updateWeight(e);if(a>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case xm:for(let u=0,f=l.length;u!==f;++u)l[u].evaluate(o),c[u].accumulateAdditive(a);break;case Gu:default:for(let u=0,f=l.length;u!==f;++u)l[u].evaluate(o),c[u].accumulate(r,a)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const i=this._weightInterpolant;if(i!==null){const r=i.evaluate(e)[0];t*=r,e>i.parameterPositions[1]&&(this.stopFading(),r===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const i=this._timeScaleInterpolant;if(i!==null){const r=i.evaluate(e)[0];t*=r,e>i.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,i=this.loop;let r=this.time+e,s=this._loopCount;const o=i===c1;if(e===0)return s===-1?r:o&&(s&1)===1?t-r:r;if(i===o1){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(r>=t)r=t;else if(r<0)r=0;else{this.time=r;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),r>=t||r<0){const a=Math.floor(r/t);r-=t*a,s+=Math.abs(a);const l=this.repetitions-s;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=e>0?t:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const c=e<0;this._setEndings(c,!c,o)}else this._setEndings(!1,!1,o);this._loopCount=s,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=r;if(o&&(s&1)===1)return t-r}return r}_setEndings(e,t,i){const r=this._interpolantSettings;i?(r.endingStart=Yr,r.endingEnd=Yr):(e?r.endingStart=this.zeroSlopeAtStart?Yr:Xr:r.endingStart=Ba,t?r.endingEnd=this.zeroSlopeAtEnd?Yr:Xr:r.endingEnd=Ba)}_scheduleFading(e,t,i){const r=this._mixer,s=r.time;let o=this._weightInterpolant;o===null&&(o=r._lendControlInterpolant(),this._weightInterpolant=o);const a=o.parameterPositions,l=o.sampleValues;return a[0]=s,l[0]=t,a[1]=s+e,l[1]=i,this}}function Up(n){this._root=n,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}Up.prototype=Object.assign(Object.create(ki.prototype),{constructor:Up,_bindAction:function(n,e){const t=n._localRoot||this._root,i=n._clip.tracks,r=i.length,s=n._propertyBindings,o=n._interpolants,a=t.uuid,l=this._bindingsByRootAndName;let c=l[a];c===void 0&&(c={},l[a]=c);for(let u=0;u!==r;++u){const f=i[u],h=f.name;let d=c[h];if(d!==void 0)s[u]=d;else{if(d=s[u],d!==void 0){d._cacheIndex===null&&(++d.referenceCount,this._addInactiveBinding(d,a,h));continue}const p=e&&e._propertyBindings[u].binding.parsedPath;d=new Dm(qt.create(t,h,p),f.ValueTypeName,f.getValueSize()),++d.referenceCount,this._addInactiveBinding(d,a,h),s[u]=d}o[u].resultBuffer=d.buffer}},_activateAction:function(n){if(!this._isActiveAction(n)){if(n._cacheIndex===null){const t=(n._localRoot||this._root).uuid,i=n._clip.uuid,r=this._actionsByClip[i];this._bindAction(n,r&&r.knownActions[0]),this._addInactiveAction(n,i,t)}const e=n._propertyBindings;for(let t=0,i=e.length;t!==i;++t){const r=e[t];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(n)}},_deactivateAction:function(n){if(this._isActiveAction(n)){const e=n._propertyBindings;for(let t=0,i=e.length;t!==i;++t){const r=e[t];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(n)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const n=this;this.stats={actions:{get total(){return n._actions.length},get inUse(){return n._nActiveActions}},bindings:{get total(){return n._bindings.length},get inUse(){return n._nActiveBindings}},controlInterpolants:{get total(){return n._controlInterpolants.length},get inUse(){return n._nActiveControlInterpolants}}}},_isActiveAction:function(n){const e=n._cacheIndex;return e!==null&&e<this._nActiveActions},_addInactiveAction:function(n,e,t){const i=this._actions,r=this._actionsByClip;let s=r[e];if(s===void 0)s={knownActions:[n],actionByRoot:{}},n._byClipCacheIndex=0,r[e]=s;else{const o=s.knownActions;n._byClipCacheIndex=o.length,o.push(n)}n._cacheIndex=i.length,i.push(n),s.actionByRoot[t]=n},_removeInactiveAction:function(n){const e=this._actions,t=e[e.length-1],i=n._cacheIndex;t._cacheIndex=i,e[i]=t,e.pop(),n._cacheIndex=null;const r=n._clip.uuid,s=this._actionsByClip,o=s[r],a=o.knownActions,l=a[a.length-1],c=n._byClipCacheIndex;l._byClipCacheIndex=c,a[c]=l,a.pop(),n._byClipCacheIndex=null;const u=o.actionByRoot,f=(n._localRoot||this._root).uuid;delete u[f],a.length===0&&delete s[r],this._removeInactiveBindingsForAction(n)},_removeInactiveBindingsForAction:function(n){const e=n._propertyBindings;for(let t=0,i=e.length;t!==i;++t){const r=e[t];--r.referenceCount===0&&this._removeInactiveBinding(r)}},_lendAction:function(n){const e=this._actions,t=n._cacheIndex,i=this._nActiveActions++,r=e[i];n._cacheIndex=i,e[i]=n,r._cacheIndex=t,e[t]=r},_takeBackAction:function(n){const e=this._actions,t=n._cacheIndex,i=--this._nActiveActions,r=e[i];n._cacheIndex=i,e[i]=n,r._cacheIndex=t,e[t]=r},_addInactiveBinding:function(n,e,t){const i=this._bindingsByRootAndName,r=this._bindings;let s=i[e];s===void 0&&(s={},i[e]=s),s[t]=n,n._cacheIndex=r.length,r.push(n)},_removeInactiveBinding:function(n){const e=this._bindings,t=n.binding,i=t.rootNode.uuid,r=t.path,s=this._bindingsByRootAndName,o=s[i],a=e[e.length-1],l=n._cacheIndex;a._cacheIndex=l,e[l]=a,e.pop(),delete o[r],Object.keys(o).length===0&&delete s[i]},_lendBinding:function(n){const e=this._bindings,t=n._cacheIndex,i=this._nActiveBindings++,r=e[i];n._cacheIndex=i,e[i]=n,r._cacheIndex=t,e[t]=r},_takeBackBinding:function(n){const e=this._bindings,t=n._cacheIndex,i=--this._nActiveBindings,r=e[i];n._cacheIndex=i,e[i]=n,r._cacheIndex=t,e[t]=r},_lendControlInterpolant:function(){const n=this._controlInterpolants,e=this._nActiveControlInterpolants++;let t=n[e];return t===void 0&&(t=new sc(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),t.__cacheIndex=e,n[e]=t),t},_takeBackControlInterpolant:function(n){const e=this._controlInterpolants,t=n.__cacheIndex,i=--this._nActiveControlInterpolants,r=e[i];n.__cacheIndex=i,e[i]=n,r.__cacheIndex=t,e[t]=r},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(n,e,t){const i=e||this._root,r=i.uuid;let s=typeof n=="string"?xn.findByName(i,n):n;const o=s!==null?s.uuid:n,a=this._actionsByClip[o];let l=null;if(t===void 0&&(s!==null?t=s.blendMode:t=Gu),a!==void 0){const u=a.actionByRoot[r];if(u!==void 0&&u.blendMode===t)return u;l=a.knownActions[0],s===null&&(s=l._clip)}if(s===null)return null;const c=new n5(this,s,e,t);return this._bindAction(c,l),this._addInactiveAction(c,o,r),c},existingAction:function(n,e){const t=e||this._root,i=t.uuid,r=typeof n=="string"?xn.findByName(t,n):n,s=r?r.uuid:n,o=this._actionsByClip[s];return o!==void 0&&o.actionByRoot[i]||null},stopAllAction:function(){const n=this._actions,e=this._nActiveActions;for(let t=e-1;t>=0;--t)n[t].stop();return this},update:function(n){n*=this.timeScale;const e=this._actions,t=this._nActiveActions,i=this.time+=n,r=Math.sign(n),s=this._accuIndex^=1;for(let l=0;l!==t;++l)e[l]._update(i,n,r,s);const o=this._bindings,a=this._nActiveBindings;for(let l=0;l!==a;++l)o[l].apply(s);return this},setTime:function(n){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(n)},getRoot:function(){return this._root},uncacheClip:function(n){const e=this._actions,t=n.uuid,i=this._actionsByClip,r=i[t];if(r!==void 0){const s=r.knownActions;for(let o=0,a=s.length;o!==a;++o){const l=s[o];this._deactivateAction(l);const c=l._cacheIndex,u=e[e.length-1];l._cacheIndex=null,l._byClipCacheIndex=null,u._cacheIndex=c,e[c]=u,e.pop(),this._removeInactiveBindingsForAction(l)}delete i[t]}},uncacheRoot:function(n){const e=n.uuid,t=this._actionsByClip;for(const s in t){const o=t[s].actionByRoot,a=o[e];a!==void 0&&(this._deactivateAction(a),this._removeInactiveAction(a))}const i=this._bindingsByRootAndName,r=i[e];if(r!==void 0)for(const s in r){const o=r[s];o.restoreOriginalState(),this._removeInactiveBinding(o)}},uncacheAction:function(n,e){const t=this.existingAction(n,e);t!==null&&(this._deactivateAction(t),this._removeInactiveAction(t))}});class $u{constructor(e){typeof e=="string"&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new $u(this.value.clone===void 0?this.value:this.value.clone())}}function zp(n,e,t){bn.call(this,n,e),this.meshPerAttribute=t||1}zp.prototype=Object.assign(Object.create(bn.prototype),{constructor:zp,isInstancedInterleavedBuffer:!0,copy:function(n){return bn.prototype.copy.call(this,n),this.meshPerAttribute=n.meshPerAttribute,this},clone:function(n){const e=bn.prototype.clone.call(this,n);return e.meshPerAttribute=this.meshPerAttribute,e},toJSON:function(n){const e=bn.prototype.toJSON.call(this,n);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}});function Nm(n,e,t,i,r){this.buffer=n,this.type=e,this.itemSize=t,this.elementSize=i,this.count=r,this.version=0}Object.defineProperty(Nm.prototype,"needsUpdate",{set:function(n){n===!0&&this.version++}});Object.assign(Nm.prototype,{isGLBufferAttribute:!0,setBuffer:function(n){return this.buffer=n,this},setType:function(n,e){return this.type=n,this.elementSize=e,this},setItemSize:function(n){return this.itemSize=n,this},setCount:function(n){return this.count=n,this}});function Bm(n,e,t,i){this.ray=new Ko(n,e),this.near=t||0,this.far=i||1/0,this.camera=null,this.layers=new _m,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function Hv(n,e){return n.distance-e.distance}function Gp(n,e,t,i){if(n.layers.test(e.layers)&&n.raycast(e,t),i===!0){const r=n.children;for(let s=0,o=r.length;s<o;s++)Gp(r[s],e,t,!0)}}Object.assign(Bm.prototype,{set:function(n,e){this.ray.set(n,e)},setFromCamera:function(n,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(n.x,n.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e&&e.isOrthographicCamera?(this.ray.origin.set(n.x,n.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)},intersectObject:function(n,e,t){const i=t||[];return Gp(n,this,i,e),i.sort(Hv),i},intersectObjects:function(n,e,t){const i=t||[];if(Array.isArray(n)===!1)return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),i;for(let r=0,s=n.length;r<s;r++)Gp(n[r],this,i,e);return i.sort(Hv),i}});class i5{constructor(e=1,t=0,i=0){return this.radius=e,this.phi=t,this.theta=i,this}set(e,t,i){return this.radius=e,this.phi=t,this.theta=i,this}clone(){return new this.constructor().copy(this)}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+t*t+i*i),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,i),this.phi=Math.acos(Ke.clamp(t/this.radius,-1,1))),this}}class r5{constructor(e,t,i){return this.radius=e!==void 0?e:1,this.theta=t!==void 0?t:0,this.y=i!==void 0?i:0,this}set(e,t,i){return this.radius=e,this.theta=t,this.y=i,this}clone(){return new this.constructor().copy(this)}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+i*i),this.theta=Math.atan2(e,i),this.y=t,this}}const Vv=new Ee;class k1{constructor(e,t){Object.defineProperty(this,"isBox2",{value:!0}),this.min=e!==void 0?e:new Ee(1/0,1/0),this.max=t!==void 0?t:new Ee(-1/0,-1/0)}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=Vv.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return e===void 0&&(console.warn("THREE.Box2: .getCenter() target is now required"),e=new Ee),this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return e===void 0&&(console.warn("THREE.Box2: .getSize() target is now required"),e=new Ee),this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t===void 0&&(console.warn("THREE.Box2: .getParameter() target is now required"),t=new Ee),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t===void 0&&(console.warn("THREE.Box2: .clampPoint() target is now required"),t=new Ee),t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Vv.copy(e).clamp(this.min,this.max).sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Wv=new F,Cl=new F;class H1{constructor(e,t){this.start=e!==void 0?e:new F,this.end=t!==void 0?t:new F}set(e,t){return this.start.copy(e),this.end.copy(t),this}clone(){return new this.constructor().copy(this)}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e===void 0&&(console.warn("THREE.Line3: .getCenter() target is now required"),e=new F),e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e===void 0&&(console.warn("THREE.Line3: .delta() target is now required"),e=new F),e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return t===void 0&&(console.warn("THREE.Line3: .at() target is now required"),t=new F),this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){Wv.subVectors(e,this.start),Cl.subVectors(this.end,this.start);const i=Cl.dot(Cl);let s=Cl.dot(Wv)/i;return t&&(s=Ke.clamp(s,0,1)),s}closestPointToPoint(e,t,i){const r=this.closestPointToPointParameter(e,t);return i===void 0&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),i=new F),this.delta(i).multiplyScalar(r).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}}function cc(n){qe.call(this),this.material=n,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}cc.prototype=Object.create(qe.prototype);cc.prototype.constructor=cc;cc.prototype.isImmediateRenderObject=!0;const qv=new F;class s5 extends qe{constructor(e,t){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;const i=new Xe,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let o=0,a=1,l=32;o<l;o++,a++){const c=o/l*Math.PI*2,u=a/l*Math.PI*2;r.push(Math.cos(c),Math.sin(c),1,Math.cos(u),Math.sin(u),1)}i.setAttribute("position",new He(r,3));const s=new Mt({fog:!1,toneMapped:!1});this.cone=new tn(i,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),qv.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(qv),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const rr=new F,Rl=new tt,Gd=new tt;class V1 extends tn{constructor(e){const t=W1(e),i=new Xe,r=[],s=[],o=new Ge(0,0,1),a=new Ge(0,1,0);for(let c=0;c<t.length;c++){const u=t[c];u.parent&&u.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),s.push(o.r,o.g,o.b),s.push(a.r,a.g,a.b))}i.setAttribute("position",new He(r,3)),i.setAttribute("color",new He(s,3));const l=new Mt({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(i,l),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,i=this.geometry,r=i.getAttribute("position");Gd.copy(this.root.matrixWorld).invert();for(let s=0,o=0;s<t.length;s++){const a=t[s];a.parent&&a.parent.isBone&&(Rl.multiplyMatrices(Gd,a.matrixWorld),rr.setFromMatrixPosition(Rl),r.setXYZ(o,rr.x,rr.y,rr.z),Rl.multiplyMatrices(Gd,a.parent.matrixWorld),rr.setFromMatrixPosition(Rl),r.setXYZ(o+1,rr.x,rr.y,rr.z),o+=2)}i.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}function W1(n){const e=[];n&&n.isBone&&e.push(n);for(let t=0;t<n.children.length;t++)e.push.apply(e,W1(n.children[t]));return e}class o5 extends xt{constructor(e,t,i){const r=new rc(t,4,2),s=new Mn({wireframe:!0,fog:!1,toneMapped:!1});super(r,s),this.light=e,this.light.updateMatrixWorld(),this.color=i,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const a5=new F,$v=new Ge,jv=new Ge;class c5 extends qe{constructor(e,t,i){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i;const r=new nc(t);r.rotateY(Math.PI*.5),this.material=new Mn({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=r.getAttribute("position"),o=new Float32Array(s.count*3);r.setAttribute("color",new Ze(o,3)),this.add(new xt(r,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");$v.copy(this.light.color),jv.copy(this.light.groundColor);for(let i=0,r=t.count;i<r;i++){const s=i<r/2?$v:jv;t.setXYZ(i,s.r,s.g,s.b)}t.needsUpdate=!0}e.lookAt(a5.setFromMatrixPosition(this.light.matrixWorld).negate())}}class q1 extends tn{constructor(e=10,t=10,i=4473924,r=8947848){i=new Ge(i),r=new Ge(r);const s=t/2,o=e/t,a=e/2,l=[],c=[];for(let h=0,d=0,p=-a;h<=t;h++,p+=o){l.push(-a,0,p,a,0,p),l.push(p,0,-a,p,0,a);const g=h===s?i:r;g.toArray(c,d),d+=3,g.toArray(c,d),d+=3,g.toArray(c,d),d+=3,g.toArray(c,d),d+=3}const u=new Xe;u.setAttribute("position",new He(l,3)),u.setAttribute("color",new He(c,3));const f=new Mt({vertexColors:!0,toneMapped:!1});super(u,f),this.type="GridHelper"}}class l5 extends tn{constructor(e=10,t=16,i=8,r=64,s=4473924,o=8947848){s=new Ge(s),o=new Ge(o);const a=[],l=[];for(let f=0;f<=t;f++){const h=f/t*(Math.PI*2),d=Math.sin(h)*e,p=Math.cos(h)*e;a.push(0,0,0),a.push(d,0,p);const g=f&1?s:o;l.push(g.r,g.g,g.b),l.push(g.r,g.g,g.b)}for(let f=0;f<=i;f++){const h=f&1?s:o,d=e-e/i*f;for(let p=0;p<r;p++){let g=p/r*(Math.PI*2),m=Math.sin(g)*d,v=Math.cos(g)*d;a.push(m,0,v),l.push(h.r,h.g,h.b),g=(p+1)/r*(Math.PI*2),m=Math.sin(g)*d,v=Math.cos(g)*d,a.push(m,0,v),l.push(h.r,h.g,h.b)}}const c=new Xe;c.setAttribute("position",new He(a,3)),c.setAttribute("color",new He(l,3));const u=new Mt({vertexColors:!0,toneMapped:!1});super(c,u),this.type="PolarGridHelper"}}const Xv=new F,Pl=new F,Yv=new F;class u5 extends qe{constructor(e,t,i){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,t===void 0&&(t=1);let r=new Xe;r.setAttribute("position",new He([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new Mt({fog:!1,toneMapped:!1});this.lightPlane=new In(r,s),this.add(this.lightPlane),r=new Xe,r.setAttribute("position",new He([0,0,0,0,0,1],3)),this.targetLine=new In(r,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){Xv.setFromMatrixPosition(this.light.matrixWorld),Pl.setFromMatrixPosition(this.light.target.matrixWorld),Yv.subVectors(Pl,Xv),this.lightPlane.lookAt(Pl),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Pl),this.targetLine.scale.z=Yv.length()}}const Il=new F,St=new ui;class f5 extends tn{constructor(e){const t=new Xe,i=new Mt({color:16777215,vertexColors:!0,toneMapped:!1}),r=[],s=[],o={},a=new Ge(16755200),l=new Ge(16711680),c=new Ge(43775),u=new Ge(16777215),f=new Ge(3355443);h("n1","n2",a),h("n2","n4",a),h("n4","n3",a),h("n3","n1",a),h("f1","f2",a),h("f2","f4",a),h("f4","f3",a),h("f3","f1",a),h("n1","f1",a),h("n2","f2",a),h("n3","f3",a),h("n4","f4",a),h("p","n1",l),h("p","n2",l),h("p","n3",l),h("p","n4",l),h("u1","u2",c),h("u2","u3",c),h("u3","u1",c),h("c","t",u),h("p","c",f),h("cn1","cn2",f),h("cn3","cn4",f),h("cf1","cf2",f),h("cf3","cf4",f);function h(p,g,m){d(p,m),d(g,m)}function d(p,g){r.push(0,0,0),s.push(g.r,g.g,g.b),o[p]===void 0&&(o[p]=[]),o[p].push(r.length/3-1)}t.setAttribute("position",new He(r,3)),t.setAttribute("color",new He(s,3)),super(t,i),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update()}update(){const e=this.geometry,t=this.pointMap,i=1,r=1;St.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Tt("c",t,e,St,0,0,-1),Tt("t",t,e,St,0,0,1),Tt("n1",t,e,St,-i,-r,-1),Tt("n2",t,e,St,i,-r,-1),Tt("n3",t,e,St,-i,r,-1),Tt("n4",t,e,St,i,r,-1),Tt("f1",t,e,St,-i,-r,1),Tt("f2",t,e,St,i,-r,1),Tt("f3",t,e,St,-i,r,1),Tt("f4",t,e,St,i,r,1),Tt("u1",t,e,St,i*.7,r*1.1,-1),Tt("u2",t,e,St,-i*.7,r*1.1,-1),Tt("u3",t,e,St,0,r*2,-1),Tt("cf1",t,e,St,-i,0,1),Tt("cf2",t,e,St,i,0,1),Tt("cf3",t,e,St,0,-r,1),Tt("cf4",t,e,St,0,r,1),Tt("cn1",t,e,St,-i,0,-1),Tt("cn2",t,e,St,i,0,-1),Tt("cn3",t,e,St,0,-r,-1),Tt("cn4",t,e,St,0,r,-1),e.getAttribute("position").needsUpdate=!0}}function Tt(n,e,t,i,r,s,o){Il.set(r,s,o).unproject(i);const a=e[n];if(a!==void 0){const l=t.getAttribute("position");for(let c=0,u=a.length;c<u;c++)l.setXYZ(a[c],Il.x,Il.y,Il.z)}}const Dl=new Hi;class $1 extends tn{constructor(e,t=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(24),s=new Xe;s.setIndex(new Ze(i,1)),s.setAttribute("position",new Ze(r,3)),super(s,new Mt({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&Dl.setFromObject(this.object),Dl.isEmpty())return;const t=Dl.min,i=Dl.max,r=this.geometry.attributes.position,s=r.array;s[0]=i.x,s[1]=i.y,s[2]=i.z,s[3]=t.x,s[4]=i.y,s[5]=i.z,s[6]=t.x,s[7]=t.y,s[8]=i.z,s[9]=i.x,s[10]=t.y,s[11]=i.z,s[12]=i.x,s[13]=i.y,s[14]=t.z,s[15]=t.x,s[16]=i.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=i.x,s[22]=t.y,s[23]=t.z,r.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e){return tn.prototype.copy.call(this,e),this.object=e.object,this}}class h5 extends tn{constructor(e,t=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new Xe;s.setIndex(new Ze(i,1)),s.setAttribute("position",new He(r,3)),super(s,new Mt({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}}class d5 extends In{constructor(e,t=1,i=16776960){const r=i,s=[1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],o=new Xe;o.setAttribute("position",new He(s,3)),o.computeBoundingSphere(),super(o,new Mt({color:r,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const a=[1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],l=new Xe;l.setAttribute("position",new He(a,3)),l.computeBoundingSphere(),this.add(new xt(l,new Mn({color:r,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){let t=-this.plane.constant;Math.abs(t)<1e-8&&(t=1e-8),this.scale.set(.5*this.size,.5*this.size,t),this.children[0].material.side=t<0?Rt:Xo,this.lookAt(this.plane.normal),super.updateMatrixWorld(e)}}const Zv=new F;let Ol,kd;class p5 extends qe{constructor(e,t,i,r,s,o){super(),this.type="ArrowHelper",e===void 0&&(e=new F(0,0,1)),t===void 0&&(t=new F(0,0,0)),i===void 0&&(i=1),r===void 0&&(r=16776960),s===void 0&&(s=.2*i),o===void 0&&(o=.2*s),Ol===void 0&&(Ol=new Xe,Ol.setAttribute("position",new He([0,0,0,0,1,0],3)),kd=new Oo(0,.5,1,5,1),kd.translate(0,-.5,0)),this.position.copy(t),this.line=new In(Ol,new Mt({color:r,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new xt(kd,new Mn({color:r,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(i,s,o)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{Zv.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(Zv,t)}}setLength(e,t,i){t===void 0&&(t=.2*e),i===void 0&&(i=.2*t),this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(i,t,i),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}}class j1 extends tn{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],i=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],r=new Xe;r.setAttribute("position",new He(t,3)),r.setAttribute("color",new He(i,3));const s=new Mt({vertexColors:!0,toneMapped:!1});super(r,s),this.type="AxesHelper"}}const X1=new Float32Array(1),m5=new Int32Array(X1.buffer),g5={toHalfFloat:function(n){X1[0]=n;const e=m5[0];let t=e>>16&32768,i=e>>12&2047;const r=e>>23&255;return r<103?t:r>142?(t|=31744,t|=(r==255?0:1)&&e&8388607,t):r<113?(i|=2048,t|=(i>>114-r)+(i>>113-r&1),t):(t|=r-112<<10|i>>1,t+=i&1,t)}},_o=4,pr=8,ni=Math.pow(2,pr),Y1=[.125,.215,.35,.446,.526,.582],Z1=pr-_o+1+Y1.length,co=20,ai={[Qt]:0,[wc]:1,[Hu]:2,[vm]:3,[bm]:4,[ym]:5,[ku]:6},kr=new Mn({side:Rt,depthWrite:!1,depthTest:!1}),x5=new xt(new fs,kr),Hd=new zo,{_lodPlanes:xa,_sizeLods:Jv,_sigmas:Fl}=y5(),Kv=new Ge;let Vd=null;const Hr=(1+Math.sqrt(5))/2,lo=1/Hr,Qv=[new F(1,1,1),new F(-1,1,1),new F(1,1,-1),new F(-1,1,-1),new F(0,Hr,lo),new F(0,Hr,-lo),new F(lo,0,Hr),new F(-lo,0,Hr),new F(Hr,lo,0),new F(-Hr,lo,0)];function eb(n){const e=Math.max(n.r,n.g,n.b),t=Math.min(Math.max(Math.ceil(Math.log2(e)),-128),127);return n.multiplyScalar(Math.pow(2,-t)),(t+128)/255}class v5{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._blurMaterial=_5(co),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,r=100){Vd=this._renderer.getRenderTarget();const s=this._allocateTargets();return this._sceneToCubeUV(e,i,r,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e){return this._fromTexture(e)}fromCubemap(e){return this._fromTexture(e)}compileCubemapShader(){this._cubemapShader===null&&(this._cubemapShader=ib(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){this._equirectShader===null&&(this._equirectShader=nb(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),this._cubemapShader!==null&&this._cubemapShader.dispose(),this._equirectShader!==null&&this._equirectShader.dispose();for(let e=0;e<xa.length;e++)xa[e].dispose()}_cleanup(e){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(Vd),e.scissorTest=!1,Nl(e,0,0,e.width,e.height)}_fromTexture(e){Vd=this._renderer.getRenderTarget();const t=this._allocateTargets(e);return this._textureToCubeUV(e,t),this._applyPMREM(t),this._cleanup(t),t}_allocateTargets(e){const t={magFilter:Dt,minFilter:Dt,generateMipmaps:!1,type:Jo,format:w_,encoding:b5(e)?e.encoding:Hu,depthBuffer:!1},i=tb(t);return i.depthBuffer=!e,this._pingPongRenderTarget=tb(t),i}_compileMaterial(e){const t=new xt(xa[0],e);this._renderer.compile(t,Hd)}_sceneToCubeUV(e,t,i,r){const a=new Pt(90,1,t,i),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],u=this._renderer,f=u.autoClear,h=u.outputEncoding,d=u.toneMapping;u.getClearColor(Kv),u.toneMapping=es,u.outputEncoding=Qt,u.autoClear=!1;let p=!1;const g=e.background;if(g){if(g.isColor){kr.color.copy(g).convertSRGBToLinear(),e.background=null;const m=eb(kr.color);kr.opacity=m,p=!0}}else{kr.color.copy(Kv).convertSRGBToLinear();const m=eb(kr.color);kr.opacity=m,p=!0}for(let m=0;m<6;m++){const v=m%3;v==0?(a.up.set(0,l[m],0),a.lookAt(c[m],0,0)):v==1?(a.up.set(0,0,l[m]),a.lookAt(0,c[m],0)):(a.up.set(0,l[m],0),a.lookAt(0,0,c[m])),Nl(r,v*ni,m>2?ni:0,ni,ni),u.setRenderTarget(r),p&&u.render(x5,a),u.render(e,a)}u.toneMapping=d,u.outputEncoding=h,u.autoClear=f}_textureToCubeUV(e,t){const i=this._renderer;e.isCubeTexture?this._cubemapShader==null&&(this._cubemapShader=ib()):this._equirectShader==null&&(this._equirectShader=nb());const r=e.isCubeTexture?this._cubemapShader:this._equirectShader,s=new xt(xa[0],r),o=r.uniforms;o.envMap.value=e,e.isCubeTexture||o.texelSize.value.set(1/e.image.width,1/e.image.height),o.inputEncoding.value=ai[e.encoding],o.outputEncoding.value=ai[t.texture.encoding],Nl(t,0,0,3*ni,2*ni),i.setRenderTarget(t),i.render(s,Hd)}_applyPMREM(e){const t=this._renderer,i=t.autoClear;t.autoClear=!1;for(let r=1;r<Z1;r++){const s=Math.sqrt(Fl[r]*Fl[r]-Fl[r-1]*Fl[r-1]),o=Qv[(r-1)%Qv.length];this._blur(e,r-1,r,s,o)}t.autoClear=i}_blur(e,t,i,r,s){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,i,r,"latitudinal",s),this._halfBlur(o,e,i,i,r,"longitudinal",s)}_halfBlur(e,t,i,r,s,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,f=new xt(xa[r],c),h=c.uniforms,d=Jv[i]-1,p=isFinite(s)?Math.PI/(2*d):2*Math.PI/(2*co-1),g=s/p,m=isFinite(s)?1+Math.floor(u*g):co;m>co&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${co}`);const v=[];let x=0;for(let y=0;y<co;++y){const _=y/g,S=Math.exp(-_*_/2);v.push(S),y==0?x+=S:y<m&&(x+=2*S)}for(let y=0;y<v.length;y++)v[y]=v[y]/x;h.envMap.value=e.texture,h.samples.value=m,h.weights.value=v,h.latitudinal.value=o==="latitudinal",a&&(h.poleAxis.value=a),h.dTheta.value=p,h.mipInt.value=pr-i,h.inputEncoding.value=ai[e.texture.encoding],h.outputEncoding.value=ai[e.texture.encoding];const M=Jv[r],b=3*Math.max(0,ni-2*M),w=(r===0?0:2*ni)+2*M*(r>pr-_o?r-pr+_o:0);Nl(t,b,w,3*M,2*M),l.setRenderTarget(t),l.render(f,Hd)}}function b5(n){return n===void 0||n.type!==Jo?!1:n.encoding===Qt||n.encoding===wc||n.encoding===ku}function y5(){const n=[],e=[],t=[];let i=pr;for(let r=0;r<Z1;r++){const s=Math.pow(2,i);e.push(s);let o=1/s;r>pr-_o?o=Y1[r-pr+_o-1]:r==0&&(o=0),t.push(o);const a=1/(s-1),l=-a/2,c=1+a/2,u=[l,l,c,l,c,c,l,l,c,c,l,c],f=6,h=6,d=3,p=2,g=1,m=new Float32Array(d*h*f),v=new Float32Array(p*h*f),x=new Float32Array(g*h*f);for(let b=0;b<f;b++){const w=b%3*2/3-1,y=b>2?0:-1,_=[w,y,0,w+2/3,y,0,w+2/3,y+1,0,w,y,0,w+2/3,y+1,0,w,y+1,0];m.set(_,d*h*b),v.set(u,p*h*b);const S=[b,b,b,b,b,b];x.set(S,g*h*b)}const M=new Xe;M.setAttribute("position",new Ze(m,d)),M.setAttribute("uv",new Ze(v,p)),M.setAttribute("faceIndex",new Ze(x,g)),n.push(M),i>_o&&i--}return{_lodPlanes:n,_sizeLods:e,_sigmas:t}}function tb(n){const e=new fr(3*ni,3*ni,n);return e.texture.mapping=Yo,e.texture.name="PMREM.cubeUv",e.scissorTest=!0,e}function Nl(n,e,t,i,r){n.viewport.set(e,t,i,r),n.scissor.set(e,t,i,r)}function _5(n){const e=new Float32Array(n),t=new F(0,1,0);return new Ui({name:"SphericalGaussianBlur",defines:{n},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:e},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:t},inputEncoding:{value:ai[Qt]},outputEncoding:{value:ai[Qt]}},vertexShader:Um(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			${zm()}

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:Fi,depthTest:!1,depthWrite:!1})}function nb(){const n=new Ee(1,1);return new Ui({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:n},inputEncoding:{value:ai[Qt]},outputEncoding:{value:ai[Qt]}},vertexShader:Um(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform vec2 texelSize;

			${zm()}

			#include <common>

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				vec2 f = fract( uv / texelSize - 0.5 );
				uv -= f * texelSize;
				vec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x += texelSize.x;
				vec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.y += texelSize.y;
				vec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x -= texelSize.x;
				vec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;

				vec3 tm = mix( tl, tr, f.x );
				vec3 bm = mix( bl, br, f.x );
				gl_FragColor.rgb = mix( tm, bm, f.y );

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:Fi,depthTest:!1,depthWrite:!1})}function ib(){return new Ui({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:ai[Qt]},outputEncoding:{value:ai[Qt]}},vertexShader:Um(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			${zm()}

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;
				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:Fi,depthTest:!1,depthWrite:!1})}function Um(){return`

		precision mediump float;
		precision mediump int;

		attribute vec3 position;
		attribute vec2 uv;
		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function zm(){return`

		uniform int inputEncoding;
		uniform int outputEncoding;

		#include <encodings_pars_fragment>

		vec4 inputTexelToLinear( vec4 value ) {

			if ( inputEncoding == 0 ) {

				return value;

			} else if ( inputEncoding == 1 ) {

				return sRGBToLinear( value );

			} else if ( inputEncoding == 2 ) {

				return RGBEToLinear( value );

			} else if ( inputEncoding == 3 ) {

				return RGBMToLinear( value, 7.0 );

			} else if ( inputEncoding == 4 ) {

				return RGBMToLinear( value, 16.0 );

			} else if ( inputEncoding == 5 ) {

				return RGBDToLinear( value, 256.0 );

			} else {

				return GammaToLinear( value, 2.2 );

			}

		}

		vec4 linearToOutputTexel( vec4 value ) {

			if ( outputEncoding == 0 ) {

				return value;

			} else if ( outputEncoding == 1 ) {

				return LinearTosRGB( value );

			} else if ( outputEncoding == 2 ) {

				return LinearToRGBE( value );

			} else if ( outputEncoding == 3 ) {

				return LinearToRGBM( value, 7.0 );

			} else if ( outputEncoding == 4 ) {

				return LinearToRGBM( value, 16.0 );

			} else if ( outputEncoding == 5 ) {

				return LinearToRGBD( value, 256.0 );

			} else {

				return LinearToGamma( value, 2.2 );

			}

		}

		vec4 envMapTexelToLinear( vec4 color ) {

			return inputTexelToLinear( color );

		}
	`}function M5(n,e,t,i,r,s,o){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new Mm(n,e,t,r,s,o)}const w5=0,S5=1,E5=0,T5=1,A5=2;function L5(n){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),n}function C5(n=[]){return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),n.isMultiMaterial=!0,n.materials=n,n.clone=function(){return n.slice()},n}function R5(n,e){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new Io(n,e)}function P5(n){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new $a(n)}function I5(n,e){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new Io(n,e)}function D5(n){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new $n(n)}function O5(n){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new $n(n)}function F5(n){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new $n(n)}function N5(n,e,t){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new F(n,e,t)}function B5(n,e){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),new Ze(n,e).setUsage(cs)}function U5(n,e){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new Ua(n,e)}function z5(n,e){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new za(n,e)}function G5(n,e){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new Ga(n,e)}function k5(n,e){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new ka(n,e)}function H5(n,e){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new ls(n,e)}function V5(n,e){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new Ha(n,e)}function W5(n,e){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new us(n,e)}function q5(n,e){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new He(n,e)}function $5(n,e){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new Wa(n,e)}je.create=function(n,e){return console.log("THREE.Curve.create() has been deprecated"),n.prototype=Object.create(je.prototype),n.prototype.constructor=n,n.prototype.getPoint=e,n};Object.assign(Wn.prototype,{fromPoints:function(n){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(n)}});function J1(n){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),$t.call(this,n),this.type="catmullrom",this.closed=!0}J1.prototype=Object.create($t.prototype);function K1(n){console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),$t.call(this,n),this.type="catmullrom"}K1.prototype=Object.create($t.prototype);function Gm(n){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),$t.call(this,n),this.type="catmullrom"}Gm.prototype=Object.create($t.prototype);Object.assign(Gm.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}});function j5(n){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new j1(n)}function X5(n,e){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new $1(n,e)}function Y5(n,e){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new tn(new Em(n.geometry),new Mt({color:e!==void 0?e:16777215}))}q1.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};V1.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};function Z5(n,e){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new tn(new Tm(n.geometry),new Mt({color:e!==void 0?e:16777215}))}Object.assign(ut.prototype,{extractUrlBase:function(n){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Cm.extractUrlBase(n)}});ut.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};function J5(n){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new Dn(n)}function K5(n){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new vu(n)}Object.assign(k1.prototype,{center:function(n){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(n)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(n){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(n)},size:function(n){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(n)}});Object.assign(Hi.prototype,{center:function(n){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(n)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(n){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(n)},isIntersectionSphere:function(n){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(n)},size:function(n){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(n)}});Object.assign(Tr.prototype,{empty:function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()}});Ec.prototype.setFromMatrix=function(n){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(n)};H1.prototype.center=function(n){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(n)};Object.assign(Ke,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(n){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),Ke.floorPowerOfTwo(n)},nextPowerOfTwo:function(n){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),Ke.ceilPowerOfTwo(n)}});Object.assign(vn.prototype,{flattenToArrayOffset:function(n,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(n,e)},multiplyVector3:function(n){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),n.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBufferAttribute:function(n){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),n.applyMatrix3(this)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},getInverse:function(n){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(n).invert()}});Object.assign(tt.prototype,{extractPosition:function(n){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(n)},flattenToArrayOffset:function(n,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(n,e)},getPosition:function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new F().setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(n){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(n)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(n){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),n.applyMatrix4(this)},multiplyVector4:function(n){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),n.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(n){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),n.transformDirection(this)},crossVector:function(n){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),n.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBufferAttribute:function(n){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),n.applyMatrix4(this)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(n,e,t,i,r,s){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(n,e,i,t,r,s)},getInverse:function(n){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(n).invert()}});ri.prototype.isIntersectionLine=function(n){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(n)};Object.assign(Wt.prototype,{multiplyVector3:function(n){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),n.applyQuaternion(this)},inverse:function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()}});Object.assign(Ko.prototype,{isIntersectionBox:function(n){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(n)},isIntersectionPlane:function(n){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(n)},isIntersectionSphere:function(n){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(n)}});Object.assign(Ht.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},barycoordFromPoint:function(n,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(n,e)},midpoint:function(n){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(n)},normal:function(n){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(n)},plane:function(n){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(n)}});Object.assign(Ht,{barycoordFromPoint:function(n,e,t,i,r){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),Ht.getBarycoord(n,e,t,i,r)},normal:function(n,e,t,i){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),Ht.getNormal(n,e,t,i)}});Object.assign(dr.prototype,{extractAllPoints:function(n){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(n)},extrude:function(n){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new ds(this,n)},makeGeometry:function(n){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new ic(this,n)}});Object.assign(Ee.prototype,{fromAttribute:function(n,e,t){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(n,e,t)},distanceToManhattan:function(n){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(n)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(F.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(n){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(n)},getScaleFromMatrix:function(n){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(n)},getColumnFromMatrix:function(n,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,n)},applyProjection:function(n){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(n)},fromAttribute:function(n,e,t){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(n,e,t)},distanceToManhattan:function(n){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(n)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(ft.prototype,{fromAttribute:function(n,e,t){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(n,e,t)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(qe.prototype,{getChildByName:function(n){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(n)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(n,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,n)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},applyMatrix:function(n){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(n)}});Object.defineProperties(qe.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(n){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=n}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});Object.assign(xt.prototype,{setDrawMode:function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}});Object.defineProperties(xt.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),l1},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}});Object.defineProperties(ja.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}});Object.defineProperty(Za.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}});Xa.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")};Object.defineProperty(je.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(n){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=n}});Pt.prototype.setLens=function(n,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),e!==void 0&&(this.filmGauge=e),this.setFocalLength(n)};Object.defineProperties(vt.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(n){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=n}},shadowCameraLeft:{set:function(n){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=n}},shadowCameraRight:{set:function(n){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=n}},shadowCameraTop:{set:function(n){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=n}},shadowCameraBottom:{set:function(n){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=n}},shadowCameraNear:{set:function(n){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=n}},shadowCameraFar:{set:function(n){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=n}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(n){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=n}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(n){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=n}},shadowMapHeight:{set:function(n){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=n}}});Object.defineProperties(Ze.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===cs},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(cs)}}});Object.assign(Ze.prototype,{setDynamic:function(n){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(n===!0?cs:Sc),this},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},setArray:function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}});Object.assign(Xe.prototype,{addIndex:function(n){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(n)},addAttribute:function(n,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),!(e&&e.isBufferAttribute)&&!(e&&e.isInterleavedBufferAttribute)?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(n,new Ze(arguments[1],arguments[2]))):n==="index"?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(n,e)},addDrawCall:function(n,e,t){t!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(n,e)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},removeAttribute:function(n){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(n)},applyMatrix:function(n){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(n)}});Object.defineProperties(Xe.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}});Object.defineProperties(ac.prototype,{maxInstancedCount:{get:function(){return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount},set:function(n){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount=n}}});Object.defineProperties(Bm.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(n){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=n}}});Object.defineProperties(bn.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.usage===cs},set:function(n){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(n)}}});Object.assign(bn.prototype,{setDynamic:function(n){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(n===!0?cs:Sc),this},setArray:function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}});Object.assign(ds.prototype,{getArrays:function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")}});Object.assign(Sm.prototype,{dispose:function(){console.error("THREE.Scene: .dispose() has been removed.")}});Object.defineProperties($u.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}});Object.defineProperties(Je.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Ge}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(n){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===dm}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(n){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=n}}});Object.defineProperties(Mr.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}});Object.defineProperties(_r.prototype,{transparency:{get:function(){return console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission},set:function(n){console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission=n}}});Object.defineProperties(en.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(n){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=n}}});Object.assign(Tc.prototype,{clearTarget:function(n,e,t,i){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(n),this.clear(e,t,i)},animate:function(n){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(n)},getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(n){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(n)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()}});Object.defineProperties(Tc.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(n){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=n}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(n){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=n}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(n){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=n===!0?wc:Qt}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}});Object.defineProperties(T1.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});function Q5(n,e,t){return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),new wm(n,t)}Object.defineProperties(fr.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(n){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=n}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(n){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=n}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(n){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=n}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(n){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=n}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(n){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=n}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(n){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=n}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(n){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=n}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(n){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=n}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(n){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=n}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(n){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=n}}});Object.defineProperties(Im.prototype,{load:{value:function(n){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return new Cu().load(n,function(i){e.setBuffer(i)}),this}},startTime:{set:function(){console.warn("THREE.Audio: .startTime is now .play( delay ).")}}});U1.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()};hs.prototype.updateCubeMap=function(n,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(n,e)};hs.prototype.clear=function(n,e,t,i){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(n,e,t,i)};const eI={merge:function(n,e,t){console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");let i;e.isMesh&&(e.matrixAutoUpdate&&e.updateMatrix(),i=e.matrix,e=e.geometry),n.merge(e,i,t)},center:function(n){return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),n.center()}};As.crossOrigin=void 0;As.loadTexture=function(n,e,t,i){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const r=new bu;r.setCrossOrigin(this.crossOrigin);const s=r.load(n,t,void 0,i);return e&&(s.mapping=e),s};As.loadTextureCube=function(n,e,t,i){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const r=new xu;r.setCrossOrigin(this.crossOrigin);const s=r.load(n,t,void 0,i);return e&&(s.mapping=e),s};As.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")};As.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};function tI(){console.error("THREE.CanvasRenderer has been removed")}function nI(){console.error("THREE.JSONLoader has been removed.")}const iI={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};function rI(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:fm}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=fm);const sI=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:h_,AddEquation:Wr,AddOperation:c_,AdditiveAnimationBlendMode:xm,AdditiveBlending:op,AlphaFormat:y_,AlwaysDepth:t_,AlwaysStencilFunc:p1,AmbientLight:Su,AmbientLightProbe:Bp,AnimationClip:xn,AnimationLoader:Lp,AnimationMixer:Up,AnimationObjectGroup:G1,AnimationUtils:_t,ArcCurve:Uo,ArrayCamera:Jl,ArrowHelper:p5,Audio:Im,AudioAnalyser:U1,AudioContext:Pm,AudioListener:qP,AudioLoader:Cu,AxesHelper:j1,AxisHelper:j5,BackSide:Rt,BasicDepthPacking:f1,BasicShadowMap:vA,BinaryTextureLoader:K5,Bone:Ya,BooleanKeyframeTrack:du,BoundingBoxHelper:X5,Box2:k1,Box3:Hi,Box3Helper:h5,BoxBufferGeometry:fs,BoxGeometry:fs,BoxHelper:$1,BufferAttribute:Ze,BufferGeometry:Xe,BufferGeometryLoader:Lu,ByteType:p_,Cache:_s,Camera:ui,CameraHelper:f5,CanvasRenderer:tI,CanvasTexture:Ja,CatmullRomCurve3:$t,CineonToneMapping:f_,CircleBufferGeometry:eu,CircleGeometry:eu,ClampToEdgeWrapping:Zt,Clock:B1,ClosedSplineCurve3:J1,Color:Ge,ColorKeyframeTrack:pu,CompressedTexture:Do,CompressedTextureLoader:Cp,ConeBufferGeometry:tu,ConeGeometry:tu,CubeCamera:hs,CubeReflectionMapping:yc,CubeRefractionMapping:_c,CubeTexture:fi,CubeTextureLoader:xu,CubeUVReflectionMapping:Yo,CubeUVRefractionMapping:Mc,CubicBezierCurve:jn,CubicBezierCurve3:di,CubicInterpolant:fu,CullFaceBack:sp,CullFaceFront:Gy,CullFaceFrontBack:xA,CullFaceNone:zy,Curve:je,CurvePath:cr,CustomBlending:Hy,CustomToneMapping:d_,CylinderBufferGeometry:Oo,CylinderGeometry:Oo,Cylindrical:r5,DataTexture:Bi,DataTexture2DArray:Ro,DataTexture3D:Po,DataTextureLoader:vu,DataUtils:g5,DecrementStencilOp:CA,DecrementWrapStencilOp:PA,DefaultLoadingManager:D1,DepthFormat:ts,DepthStencilFormat:Lo,DepthTexture:Ka,DirectionalLight:wu,DirectionalLightHelper:u5,DiscreteInterpolant:hu,DodecahedronBufferGeometry:nu,DodecahedronGeometry:nu,DoubleSide:vc,DstAlphaFactor:Yy,DstColorFactor:Jy,DynamicBufferAttribute:B5,DynamicCopyUsage:qA,DynamicDrawUsage:cs,DynamicReadUsage:HA,EdgesGeometry:Em,EdgesHelper:Y5,EllipseCurve:Sn,EqualDepth:i_,EqualStencilFunc:FA,EquirectangularReflectionMapping:jl,EquirectangularRefractionMapping:Xl,Euler:Qo,EventDispatcher:ki,ExtrudeBufferGeometry:ds,ExtrudeGeometry:ds,Face3:Mm,Face4:M5,FaceColors:T5,FileLoader:Dn,FlatShading:dm,Float16BufferAttribute:Va,Float32Attribute:q5,Float32BufferAttribute:He,Float64Attribute:$5,Float64BufferAttribute:Wa,FloatType:Pi,Fog:Wu,FogExp2:Vu,Font:F1,FontLoader:Fp,FrontSide:Xo,Frustum:Ec,GLBufferAttribute:Nm,GLSL1:jA,GLSL3:_p,GammaEncoding:ku,GeometryUtils:eI,GreaterDepth:s_,GreaterEqualDepth:r_,GreaterEqualStencilFunc:zA,GreaterStencilFunc:BA,GridHelper:q1,Group:ar,HalfFloatType:Fa,HemisphereLight:yu,HemisphereLightHelper:c5,HemisphereLightProbe:Np,IcosahedronBufferGeometry:iu,IcosahedronGeometry:iu,ImageBitmapLoader:Op,ImageLoader:Bo,ImageUtils:As,ImmediateRenderObject:cc,IncrementStencilOp:LA,IncrementWrapStencilOp:RA,InstancedBufferAttribute:Au,InstancedBufferGeometry:ac,InstancedInterleavedBuffer:zp,InstancedMesh:Kl,Int16Attribute:k5,Int16BufferAttribute:ka,Int32Attribute:V5,Int32BufferAttribute:Ha,Int8Attribute:U5,Int8BufferAttribute:Ua,IntType:g_,InterleavedBuffer:bn,InterleavedBufferAttribute:xr,Interpolant:_n,InterpolateDiscrete:Na,InterpolateLinear:Ta,InterpolateSmooth:kl,InvertStencilOp:IA,JSONLoader:nI,KeepStencilOp:Hl,KeyframeTrack:Ut,LOD:ja,LatheBufferGeometry:ru,LatheGeometry:ru,Layers:_m,LensFlare:rI,LessDepth:n_,LessEqualDepth:$l,LessEqualStencilFunc:NA,LessStencilFunc:OA,Light:vt,LightProbe:Rn,Line:In,Line3:H1,LineBasicMaterial:Mt,LineCurve:on,LineCurve3:Xn,LineDashedMaterial:ys,LineLoop:Ql,LinePieces:S5,LineSegments:tn,LineStrip:w5,LinearEncoding:Qt,LinearFilter:Nt,LinearInterpolant:sc,LinearMipMapLinearFilter:wA,LinearMipMapNearestFilter:MA,LinearMipmapLinearFilter:Zo,LinearMipmapNearestFilter:gm,LinearToneMapping:l_,Loader:ut,LoaderUtils:Cm,LoadingManager:Am,LogLuvEncoding:u1,LoopOnce:o1,LoopPingPong:c1,LoopRepeat:a1,LuminanceAlphaFormat:M_,LuminanceFormat:__,MOUSE:mA,Material:Je,MaterialLoader:Tu,Math:Ke,MathUtils:Ke,Matrix3:vn,Matrix4:tt,MaxEquation:up,Mesh:xt,MeshBasicMaterial:Mn,MeshDepthMaterial:mr,MeshDistanceMaterial:gr,MeshFaceMaterial:L5,MeshLambertMaterial:vs,MeshMatcapMaterial:bs,MeshNormalMaterial:xs,MeshPhongMaterial:Mr,MeshPhysicalMaterial:_r,MeshStandardMaterial:hi,MeshToonMaterial:gs,MinEquation:lp,MirroredRepeatWrapping:Da,MixOperation:a_,MultiMaterial:C5,MultiplyBlending:cp,MultiplyOperation:bc,NearestFilter:Dt,NearestMipMapLinearFilter:_A,NearestMipMapNearestFilter:yA,NearestMipmapLinearFilter:Zl,NearestMipmapNearestFilter:Yl,NeverDepth:e_,NeverStencilFunc:DA,NoBlending:Fi,NoColors:E5,NoToneMapping:es,NormalAnimationBlendMode:Gu,NormalBlending:bo,NotEqualDepth:o_,NotEqualStencilFunc:UA,NumberKeyframeTrack:Fo,Object3D:qe,ObjectLoader:GP,ObjectSpaceNormalMap:d1,OctahedronBufferGeometry:nc,OctahedronGeometry:nc,OneFactor:$y,OneMinusDstAlphaFactor:Zy,OneMinusDstColorFactor:Ky,OneMinusSrcAlphaFactor:mm,OneMinusSrcColorFactor:Xy,OrthographicCamera:zo,PCFShadowMap:hm,PCFSoftShadowMap:ky,PMREMGenerator:v5,ParametricBufferGeometry:ps,ParametricGeometry:ps,Particle:P5,ParticleBasicMaterial:O5,ParticleSystem:I5,ParticleSystemMaterial:F5,Path:Wn,PerspectiveCamera:Pt,Plane:ri,PlaneBufferGeometry:qa,PlaneGeometry:qa,PlaneHelper:d5,PointCloud:R5,PointCloudMaterial:D5,PointLight:Mu,PointLightHelper:o5,Points:Io,PointsMaterial:$n,PolarGridHelper:l5,PolyhedronBufferGeometry:br,PolyhedronGeometry:br,PositionalAudio:jP,PropertyBinding:qt,PropertyMixer:Dm,QuadraticBezierCurve:Yn,QuadraticBezierCurve3:pi,Quaternion:Wt,QuaternionKeyframeTrack:oc,QuaternionLinearInterpolant:mu,REVISION:fm,RGBADepthPacking:h1,RGBAFormat:yn,RGBAIntegerFormat:C_,RGBA_ASTC_10x10_Format:H_,RGBA_ASTC_10x5_Format:z_,RGBA_ASTC_10x6_Format:G_,RGBA_ASTC_10x8_Format:k_,RGBA_ASTC_12x10_Format:V_,RGBA_ASTC_12x12_Format:W_,RGBA_ASTC_4x4_Format:P_,RGBA_ASTC_5x4_Format:I_,RGBA_ASTC_5x5_Format:D_,RGBA_ASTC_6x5_Format:O_,RGBA_ASTC_6x6_Format:F_,RGBA_ASTC_8x5_Format:N_,RGBA_ASTC_8x6_Format:B_,RGBA_ASTC_8x8_Format:U_,RGBA_BPTC_Format:q_,RGBA_ETC2_EAC_Format:yp,RGBA_PVRTC_2BPPV1_Format:vp,RGBA_PVRTC_4BPPV1_Format:xp,RGBA_S3TC_DXT1_Format:hp,RGBA_S3TC_DXT3_Format:dp,RGBA_S3TC_DXT5_Format:pp,RGBDEncoding:ym,RGBEEncoding:Hu,RGBEFormat:w_,RGBFormat:ur,RGBIntegerFormat:L_,RGBM16Encoding:bm,RGBM7Encoding:vm,RGB_ETC1_Format:R_,RGB_ETC2_Format:bp,RGB_PVRTC_2BPPV1_Format:gp,RGB_PVRTC_4BPPV1_Format:mp,RGB_S3TC_DXT1_Format:fp,RGFormat:T_,RGIntegerFormat:A_,RawShaderMaterial:Ui,Ray:Ko,Raycaster:Bm,RectAreaLight:Eu,RedFormat:S_,RedIntegerFormat:E_,ReinhardToneMapping:u_,RepeatWrapping:Ia,ReplaceStencilOp:AA,ReverseSubtractEquation:Wy,RingBufferGeometry:su,RingGeometry:su,SRGB8_ALPHA8_ASTC_10x10_Format:i1,SRGB8_ALPHA8_ASTC_10x5_Format:e1,SRGB8_ALPHA8_ASTC_10x6_Format:t1,SRGB8_ALPHA8_ASTC_10x8_Format:n1,SRGB8_ALPHA8_ASTC_12x10_Format:r1,SRGB8_ALPHA8_ASTC_12x12_Format:s1,SRGB8_ALPHA8_ASTC_4x4_Format:$_,SRGB8_ALPHA8_ASTC_5x4_Format:j_,SRGB8_ALPHA8_ASTC_5x5_Format:X_,SRGB8_ALPHA8_ASTC_6x5_Format:Y_,SRGB8_ALPHA8_ASTC_6x6_Format:Z_,SRGB8_ALPHA8_ASTC_8x5_Format:J_,SRGB8_ALPHA8_ASTC_8x6_Format:K_,SRGB8_ALPHA8_ASTC_8x8_Format:Q_,Scene:Sm,SceneUtils:iI,ShaderChunk:nt,ShaderLib:Hn,ShaderMaterial:en,ShadowMaterial:ms,Shape:dr,ShapeBufferGeometry:ic,ShapeGeometry:ic,ShapePath:Rm,ShapeUtils:Ni,ShortType:m_,Skeleton:Za,SkeletonHelper:V1,SkinnedMesh:Xa,SmoothShading:bA,Sphere:Tr,SphereBufferGeometry:rc,SphereGeometry:rc,Spherical:i5,SphericalHarmonics3:O1,Spline:Gm,SplineCurve:Zn,SplineCurve3:K1,SpotLight:_u,SpotLightHelper:s5,Sprite:$a,SpriteMaterial:vr,SrcAlphaFactor:pm,SrcAlphaSaturateFactor:Qy,SrcColorFactor:jy,StaticCopyUsage:WA,StaticDrawUsage:Sc,StaticReadUsage:kA,StereoCamera:N1,StreamCopyUsage:$A,StreamDrawUsage:GA,StreamReadUsage:VA,StringKeyframeTrack:gu,SubtractEquation:Vy,SubtractiveBlending:ap,TOUCH:gA,TangentSpaceNormalMap:Ts,TetrahedronBufferGeometry:ou,TetrahedronGeometry:ou,TextBufferGeometry:au,TextGeometry:au,Texture:ht,TextureLoader:bu,TorusBufferGeometry:cu,TorusGeometry:cu,TorusKnotBufferGeometry:lu,TorusKnotGeometry:lu,Triangle:Ht,TriangleFanDrawMode:EA,TriangleStripDrawMode:SA,TrianglesDrawMode:l1,TubeBufferGeometry:uu,TubeGeometry:uu,UVMapping:zu,Uint16Attribute:H5,Uint16BufferAttribute:ls,Uint32Attribute:W5,Uint32BufferAttribute:us,Uint8Attribute:z5,Uint8BufferAttribute:za,Uint8ClampedAttribute:G5,Uint8ClampedBufferAttribute:Ga,Uniform:$u,UniformsLib:De,UniformsUtils:x1,UnsignedByteType:Jo,UnsignedInt248Type:yo,UnsignedIntType:Ea,UnsignedShort4444Type:x_,UnsignedShort5551Type:v_,UnsignedShort565Type:b_,UnsignedShortType:Oa,VSMShadowMap:mo,Vector2:Ee,Vector3:F,Vector4:ft,VectorKeyframeTrack:No,Vertex:N5,VertexColors:A5,VideoTexture:Ep,WebGL1Renderer:wp,WebGLCubeRenderTarget:wm,WebGLMultisampleRenderTarget:YA,WebGLRenderTarget:fr,WebGLRenderTargetCube:Q5,WebGLRenderer:Tc,WebGLUtils:A1,WireframeGeometry:Tm,WireframeHelper:Z5,WrapAroundEnding:Ba,XHRLoader:J5,ZeroCurvatureEnding:Xr,ZeroFactor:qy,ZeroSlopeEnding:Yr,ZeroStencilOp:TA,sRGBEncoding:wc},Symbol.toStringTag,{value:"Module"})),oI=CT(sI);var rb;function aI(){return rb||(rb=1,(function(n){function e(x){"@babel/helpers - typeof";return typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?e=function(b){return typeof b}:e=function(b){return b&&typeof Symbol=="function"&&b.constructor===Symbol&&b!==Symbol.prototype?"symbol":typeof b},e(x)}Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0,eA(),pA();var t=r(oI);function i(x){if(typeof WeakMap!="function")return null;var M=new WeakMap,b=new WeakMap;return(i=function(y){return y?b:M})(x)}function r(x,M){if(x&&x.__esModule)return x;if(x===null||e(x)!=="object"&&typeof x!="function")return{default:x};var b=i(M);if(b&&b.has(x))return b.get(x);var w={},y=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var _ in x)if(_!=="default"&&Object.prototype.hasOwnProperty.call(x,_)){var S=y?Object.getOwnPropertyDescriptor(x,_):null;S&&(S.get||S.set)?Object.defineProperty(w,_,S):w[_]=x[_]}return w.default=x,b&&b.set(x,w),w}function s(x,M){if(!(x instanceof M))throw new TypeError("Cannot call a class as a function")}function o(x,M){if(typeof M!="function"&&M!==null)throw new TypeError("Super expression must either be null or a function");x.prototype=Object.create(M&&M.prototype,{constructor:{value:x,writable:!0,configurable:!0}}),M&&a(x,M)}function a(x,M){return a=Object.setPrototypeOf||function(w,y){return w.__proto__=y,w},a(x,M)}function l(x){var M=f();return function(){var w=h(x),y;if(M){var _=h(this).constructor;y=Reflect.construct(w,arguments,_)}else y=w.apply(this,arguments);return c(this,y)}}function c(x,M){return M&&(e(M)==="object"||typeof M=="function")?M:u(x)}function u(x){if(x===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return x}function f(){if(typeof Reflect>"u"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch{return!1}}function h(x){return h=Object.setPrototypeOf?Object.getPrototypeOf:function(b){return b.__proto__||Object.getPrototypeOf(b)},h(x)}function d(x,M,b){return M in x?Object.defineProperty(x,M,{value:b,enumerable:!0,configurable:!0,writable:!0}):x[M]=b,x}var p=Object.freeze({INACTIVE:Symbol("INACTIVE"),INDETERMINATE:Symbol("INDETERMINATE"),ROTATING:Symbol("ROTATING"),DOLLYING:Symbol("DOLLYING"),PANNING:Symbol("PANNING")}),g=2,m=(function(x){o(b,x);var M=l(b);function b(w,y){var _;return s(this,b),_=M.call(this),d(u(_),"reset",function(){_.target.copy(_.target0),_.object.position.copy(_.position0),_.update()}),d(u(_),"update",function(){_.object.lookAt(_.target),_.state!==p.ROTATING&&_.fixUp(),_.dispatchEvent(_.changeEvent)}),d(u(_),"onMouseDown",function(S){_.state=p.INDETERMINATE,_.prev=new t.Vector2(S.clientX,S.clientY),S.preventDefault(),_.domElement.focus?_.domElement.focus():window.focus(),document.addEventListener("mousemove",_.onMouseMove,!1),document.addEventListener("mouseup",_.onMouseUp,!1),_.domElement.addEventListener("contextmenu",_.onContextMenu,!1)}),d(u(_),"onMouseWheel",function(S){S.preventDefault(),_.state=p.DOLLYING,_.prev=new t.Vector2(0,0),_.dolly(0,-S.deltaY)}),d(u(_),"onMouseMove",function(S){switch(S.preventDefault(),S.buttons){case 1:_.eventHasPanModifier(S)?_.pan(S.clientX,S.clientY):_.rotate(S.clientX,S.clientY);break;case 2:_.pan(S.clientX,S.clientY);break;case 4:_.dolly(S.clientX,S.clientY);break}}),d(u(_),"onMouseUp",function(){_.state===p.ROTATING&&_.fixUp(),_.clicked=_.state===p.INDETERMINATE,_.state=p.INACTIVE,document.removeEventListener("mousemove",_.onMouseMove,!1),document.removeEventListener("mouseup",_.onMouseUp,!1),_.domElement.removeEventListener("contextmenu",_.onContextMenu,!1)}),d(u(_),"onKeyDown",function(S){var E=!1,R,I;switch(S.keyCode){case _.keys.UP:E=!0;var $=[0,_.keyPanSpeed];R=$[0],I=$[1];break;case _.keys.DOWN:E=!0,R=0,I=-_.keyPanSpeed;break;case _.keys.LEFT:E=!0;var q=[_.keyPanSpeed,0];R=q[0],I=q[1];break;case _.keys.RIGHT:E=!0,R=-_.keyPanSpeed,I=0;break}E&&(S.preventDefault(),_.state=p.PANNING,_.prev=new t.Vector2(0,0),_.pan(R,I))}),d(u(_),"onContextMenu",function(S){S.preventDefault()}),d(u(_),"eventHasPanModifier",function(S){return S.shiftKey&&_.usePanModShift||S.altKey&&_.usePanModAlt||S.ctrlKey&&_.usePanModCtrl||S.metaKey&&_.usePanModMeta}),d(u(_),"rotate",function(S,E){var R=new t.Vector2(S,E);if(_.state===p.INDETERMINATE){var I=R.manhattanDistanceTo(_.prev);if(I>g){_.state=p.ROTATING;var $=new t.Vector3().subVectors(_.object.position,_.target);_.radius=$.length(),$.divideScalar(_.radius);var q=_.object.up,L=new t.Vector3().crossVectors(q,$).normalize();_.basisMatrix=new t.Matrix4().makeBasis(L,q,$);var N=new t.Matrix4().makeTranslation(_.target.x,_.target.y,_.target.z);_.basisMatrix.premultiply(N)}}if(_.state===p.ROTATING){var G=new t.Vector2().subVectors(R,_.prev),X=2*_.rotateSpeed;G.multiplyScalar(X);var K=-G.x*(Math.PI/_.domElement.clientWidth),j=-G.y*(Math.PI/_.domElement.clientHeight)+Math.PI/2,ee=.01;j=Math.max(j,ee),j=Math.min(j,Math.PI-ee);var P=new t.Vector3;P.z=_.radius*Math.sin(j)*Math.cos(K),P.x=_.radius*Math.sin(j)*Math.sin(K),P.y=_.radius*Math.cos(j),P.applyMatrix4(_.basisMatrix),_.object.position.copy(P),_.update()}}),d(u(_),"dolly",function(S,E){var R=new t.Vector2(S,E);if(_.state===p.INDETERMINATE){var I=R.manhattanDistanceTo(_.prev);I>g&&(_.state=p.DOLLYING)}if(_.state===p.DOLLYING){var $=new t.Vector3().subVectors(_.target,_.object.position),q=$.length(),L=2*q,N=Math.min(_.maxDistance-_.minDistance,L),G=_.domElement.clientHeight,X=N/G,K=_.zoomSpeed*X,j=_.prev.y-E,ee=K*j;if(_.minDistance<=q+ee&&q+ee<=_.maxDistance){var P=$.multiplyScalar(ee/q);_.object.position.sub(P),_.update(),_.prev=R}}}),d(u(_),"pan",function(S,E){var R=new t.Vector2(S,E);if(_.state===p.INDETERMINATE){var I=R.manhattanDistanceTo(_.prev);I>g&&(_.state=p.PANNING)}if(_.state===p.PANNING){var $=new t.Vector3().subVectors(_.target,_.object.position),q=$.length();$.divideScalar(q);var L=_.object.up.clone(),N=new t.Vector3().crossVectors(L,$).normalize(),G=Math.tan(_.object.fov/2*(Math.PI/360))*q,X=_.domElement.clientHeight/2,K=G/X,j=new t.Vector2().subVectors(R,_.prev),ee=N.multiplyScalar(j.x*K),P=L.multiplyScalar(j.y*K);_.object.position.add(ee),_.object.position.add(P);var V=$.multiplyScalar(q),Y=new t.Vector3().addVectors(_.object.position,V);_.target=Y,_.update(),_.prev=R}}),d(u(_),"fixUp",function(){var S=new t.Vector3().subVectors(_.target,_.object.position).normalize(),E=new t.Vector3().crossVectors(S,_.object.up).normalize(),R=new t.Vector3().crossVectors(E,S).normalize();_.object.up.copy(R)}),_.object=w,_.domElement=y,_.keyPanSpeed=7,_.keys={LEFT:37,UP:38,RIGHT:39,DOWN:40},_.maxDistance=1/0,_.minDistance=0,_.rotateSpeed=1,_.target=new t.Vector3,_.zoomSpeed=1,_.clicked=!1,_.usePanModAlt=!0,_.usePanModShift=!1,_.usePanModCtrl=!1,_.usePanModMeta=!1,_.state=p.INACTIVE,_.changeEvent={type:"change"},_.domElement.addEventListener("mousedown",_.onMouseDown,!1),_.domElement.addEventListener("wheel",_.onMouseWheel,!1),_.domElement.addEventListener("keydown",_.onKeyDown,!1),_.domElement.tabIndex===-1&&(_.domElement.tabIndex=0),_.target0=_.target.clone(),_.position0=_.object.position.clone(),_.update(),_}return b})(t.EventDispatcher),v=m;n.default=v})(If)),If}var cI=aI();const lI=LT(cI);var Vl={exports:{}},uI=Vl.exports,sb;function fI(){return sb||(sb=1,(function(n,e){(function(t,i){n.exports=i()})(uI,(function(){const t=[],i=k=>k===0||k===1?1:(t[k]>0||(t[k]=i(k-1)*k),t[k]),r=[],s=(k,W)=>{if(W>k)return 0;for(;k>=r.length;){const ae=r.length,de=[];de[0]=1;for(let ve=1,T=ae-1;ve<ae;ve+=1)de[ve]=r[T][ve-1]+r[T][ve];de[ae]=1,r.push(de)}return r[k][W]},o=(k,W)=>Math.floor(Math.random()*(W-k+1))+k,a=(k,W)=>{const ae=k.slice(0);ae[W[0]]=k[W[W.length-1]];for(let de=1;de<W.length;de+=1)ae[W[de]]=k[W[de-1]];return ae},l=(k,W,ae)=>{const de=k[W];for(let ve=W;ve<ae;ve+=1)k[ve]=k[ve+1];k[ae]=de},c=(k,W,ae)=>{const de=k[ae];for(let ve=ae;ve>W;ve-=1)k[ve]=k[ve-1];k[W]=de},u=(k,W)=>{let ae=0;for(let de=0;de<k.length-1;de+=1)ae=W*ae+k[de];return ae},f=(k,W,ae)=>{const de=[];let ve=0;for(let T=W-2;T>=0;T-=1){const H=k%ae;k=Math.floor(k/ae),de[T]=H,ve+=H}return de[W-1]=(ae-ve%ae)%ae,de},h=k=>{let W=0;for(let ae=k.length-1;ae>0;ae-=1)for(let de=ae-1;de>=0;de-=1)k[de]>k[ae]&&(W+=1);return W%2},d=function(k,W){let ae=arguments.length>2&&arguments[2]!==void 0&&arguments[2],de=k.length-1,ve=0,T=1;const H=[];if(ae)for(let z=k.length-1;z>=0;z-=1)W.indexOf(k[z])>=0&&(de=Math.min(de,k[z]),ve+=s(k.length-1-z,T),H.unshift(k[z]),T+=1);else for(let z=0;z<k.length;z+=1)W.indexOf(k[z])>=0&&(de=Math.min(de,k[z]),ve+=s(z,T),H.push(k[z]),T+=1);let J=0;for(let z=H.length-1;z>0;z-=1){let te=0;for(;H[z]!==W[z];)l(H,0,z),te+=1;J=(z+1)*J+te}return i(W.length)*ve+J},p=function(k,W,ae){let de=arguments.length>3&&arguments[3]!==void 0&&arguments[3];const ve=i(W.length);let T=Math.floor(k/ve),H=k%ve;const J=[];for(let te=0;te<ae;te+=1)J.push(-1);for(let te=1;te<W.length;te+=1){let Ae=H%(te+1);for(H=Math.floor(H/(te+1));Ae>0;)c(W,0,te),Ae-=1}let z=W.length-1;if(de)for(let te=0;te<ae;te+=1){const Ae=s(ae-1-te,z+1);T-Ae>=0&&(J[te]=W[W.length-1-z],T-=Ae,z-=1)}else for(let te=ae-1;te>=0;te-=1){const Ae=s(te,z+1);T-Ae>=0&&(J[te]=W[z],T-=Ae,z-=1)}return J},g={"":0,2:1,"'":2},m=k=>/^([FRUBLDfrubldxyzMSE][2']?\s*)+$/.test(k),v={f:["z","B"],r:["x","L"],u:["y","D"],b:["z'","F"],l:["x'","R"],d:["y'","U"],M:["x'","R","L'"],S:["z","F'","B"],E:["y'","U","D'"]},x={x:"DRFULB",y:"RBULFD",z:"FULBDR"},M=function(k){let W=arguments.length>1&&arguments[1]!==void 0&&arguments[1];if(!m(k))throw new Error("Invalid algorithm provided to algorithm parser");const ae=[],[de,ve]=(T=>{T=T.reduce(((z,te)=>{const Ae=te.charAt(0),Pe=g[te.charAt(1)];if(v[Ae]){for(let We=0;We<=Pe;We+=1)z=z.concat(v[Ae]);return z}return z.concat(te)}),[]);let H=[];const J=[];for(let z=T.length-1;z>=0;z-=1){const te=T[z].charAt(0),Ae=g[T[z].charAt(1)];if("xyz".includes(te)){J.unshift(T[z]);for(let Pe=0;Pe<=Ae;Pe+=1)H=H.map((We=>x[te]["FRUBLD".indexOf(We[0])]+We.charAt(1)))}else H.unshift(T[z])}return[H,J]})(k.match(/[FRUBLDfrubldxyzMSE][2']?/g));return de.forEach((T=>{const H="FRUBLD".indexOf(T.charAt(0)),J=g[T.charAt(1)];ae.push(3*H+J)})),W?[ae,ve]:ae},b=k=>{let W="";return k.forEach((ae=>{switch(W+=" ",W+="FRUBLD".charAt(Math.floor(ae/3)),ae%3){case 1:W+="2";break;case 2:W+="'"}})),W.trim()},w=0,y=1,_=2,S=3,E=5,R=7,I=8,$=0,q=1,L=2,N=3,G=4,X=[[1,8,5,9],[0,11,4,8],[1,2,3,0],[3,10,7,11],[2,9,6,10],[5,4,7,6]],K=[[1,0,4,5],[0,3,7,4],[0,1,2,3],[3,2,6,7],[2,1,5,6],[5,4,7,6]],j=(k,W,ae)=>{let de=k;const ve=ae[Math.floor(W/3)],T=W%3;for(let H=0;H<=T;H+=1)de=a(de,ve);return de},ee=(k,W)=>j(k,W,X),P=(k,W)=>j(k,W,K),V=(k,W)=>{const ae=Math.floor(W/3),de=X[ae],ve=W%3,T=ee(k,W);if((ae===0||ae===3)&&ve%2==0)for(let H=0;H<4;H+=1)T[de[H]]=(T[de[H]]+1)%2;return T},Y=(k,W)=>{const ae=Math.floor(W/3),de=K[ae],ve=W%3,T=P(k,W);if(ae!==2&&ae!==5&&ve%2==0)for(let H=0;H<4;H+=1)T[de[H]]=(T[de[H]]+(H+1)%2+1)%3;return T},Q=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17];class B{constructor(W){if(this.name=W.name,this.size=W.size,this.defaultIndex=W.defaultIndex||0,this.solvedIndexes=W.solvedIndexes||[this.defaultIndex],W.doMove&&(this.doMove=(H,J)=>W.doMove(this.table,H,J)),W.table)return void(this.table=W.table);const ae=(de=W.getVector,ve=W.cubieMove,T=W.getIndex,(H,J)=>{let z=de(H);return z=ve(z,J),T(z)});var de,ve,T;this.createMoveTable(W.size,ae,W.moves)}doMove(W,ae){return this.table[W][ae]}createMoveTable(W,ae){let de=arguments.length>2&&arguments[2]!==void 0?arguments[2]:Q;this.table=[];for(let ve=0;ve<W;ve+=1)this.table.push([]);for(let ve=0;ve<W;ve+=1)for(let T=0;T<de.length;T+=1){const H=de[T];if(!this.table[ve][H]){const J=ae(ve,H),z=H-H%3*2+2;this.table[ve][H]=J,this.table[J][z]=ve}}}}const oe=k=>new B({name:k.name,moves:k.moves,defaultIndex:d([0,1,2,3,4,5,6,7],k.affected,k.reversed),size:k.size||i(8)/i(8-k.affected.length),getVector:W=>p(W,k.affected.slice(),8,k.reversed),cubieMove:P,getIndex:W=>d(W,k.affected,k.reversed)}),Se=k=>new B({name:k.name,moves:k.moves,defaultIndex:d([0,1,2,3,4,5,6,7,8,9,10,11],k.affected,k.reversed),size:k.size||i(12)/i(12-k.affected.length),getVector:W=>p(W,k.affected.slice(),12,k.reversed),cubieMove:ee,getIndex:W=>d(W,k.affected,k.reversed)}),we=(k,W,ae)=>{const de=[],ve=ae**(W-1),T=ae**(W-k.length-1);for(let H=0;H<ve&&de.length<T;H+=1){const J=f(H,W,ae);k.every((z=>J[z]===0))&&de.push(H)}return de},ye=k=>new B({name:k.name,size:2048,solvedIndexes:we(k.affected,12,2),getVector:W=>f(W,12,2),cubieMove:V,getIndex:W=>u(W,2)}),_e=k=>new B({name:k.name,size:2187,solvedIndexes:we(k.affected,8,3),getVector:W=>f(W,8,3),cubieMove:Y,getIndex:W=>u(W,3)});class Ie{constructor(W,ae){this.computePruningTable(W,ae)}setPruningValue(W,ae){this.table[W>>3]^=(15^ae)<<((7&W)<<2)}getPruningValue(W){return this.table[W>>3]>>((7&W)<<2)&15}computePruningTable(W,ae){const de=W.reduce(((z,te)=>z*te.size),1);this.table=[];for(let z=0;z<de+7>>3;z+=1)this.table.push(-1);let ve=0,T=0;const H=[1];for(let z=1;z<W.length;z+=1)H.push(W[z-1].size*H[z-1]);const J=(z=>{const te=[],Ae=z.length-1,Pe=(We,Ve)=>{for(let et=0;et<z[Ve].length;et+=1){const $e=We.slice(0);$e.push(z[Ve][et]),Ve===Ae?te.push($e):Pe($e,Ve+1)}};return Pe([],0),te})(W.map((z=>z.solvedIndexes)));for(let z=0;z<J.length;z+=1){let te=0;for(let Ae=0;Ae<J[z].length;Ae+=1)te+=H[Ae]*J[z][Ae];this.setPruningValue(te,0),T+=1}for(;T!==de;){const z=T>de/2,te=z?15:ve,Ae=z?ve:15;ve+=1;for(let Pe=0;Pe<de;Pe+=1)if(this.getPruningValue(Pe)===te)for(let We=0;We<ae.length;We+=1){const Ve=ae[We];let et=Pe,$e=0;for(let Qe=H.length-1;Qe>=0;Qe-=1)$e+=H[Qe]*W[Qe].doMove(Math.floor(et/H[Qe]),Ve),et%=H[Qe];if(this.getPruningValue($e)===Ae){if(T+=1,z){this.setPruningValue(Pe,ve);break}this.setPruningValue($e,ve)}}}}}class he{constructor(W){let ae=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Q;this.createTables=W,this.moves=ae}initialize(){if(this.initialized)return;this.initialized=!0;const{moveTables:W,pruningTables:ae}=this.createTables();this.moveTables=W,this.pruningTables=[],ae.forEach((de=>{const ve=de.map((J=>this.moveTables.map((z=>z.name)).indexOf(J)));ve.sort(((J,z)=>this.moveTables[J].size-this.moveTables[z].size));const T=[];ve.forEach((J=>T.push(this.moveTables[J])));const H=new Ie(T,this.moves);this.pruningTables.push({pruningTable:H,moveTableIndexes:ve})}))}handleSolution(W,ae){return{solution:W,indexes:ae}}search(W,ae,de,ve){let T=0;for(let H=0;H<this.pruningTables.length;H+=1){let J=W[this.pruningTables[H].moveTableIndexes[0]],z=1;for(let Ae=1;Ae<this.pruningTables[H].moveTableIndexes.length;Ae+=1)z*=this.moveTables[this.pruningTables[H].moveTableIndexes[Ae-1]].size,J+=W[this.pruningTables[H].moveTableIndexes[Ae]]*z;const te=this.pruningTables[H].pruningTable.getPruningValue(J);if(te>ae)return!1;te>T&&(T=te)}if(T===0)return this.handleSolution(ve,W);if(ae>0)for(let H=0;H<this.moves.length;H+=1){const J=this.moves[H];if(Math.floor(J/3)!==Math.floor(de/3)&&Math.floor(J/3)!==Math.floor(de/3)-3){const z=[];for(let Ae=0;Ae<W.length;Ae+=1)z.push(this.moveTables[Ae].doMove(W[Ae],J));const te=this.search(z,ae-1,J,ve.concat([J]));if(te)return te}}return!1}solve(W){this.initialize(),this.settings={maxDepth:22,lastMove:null,format:!0,...W};const ae=this.settings.indexes||[];let de;if(this.settings.scramble){const[ve,T]=M(this.settings.scramble,!0);T.length>0&&(de=(H=>{if(!m(H))throw new Error("Invalid algorithm provided to algorithm parser");return H.match(/[FRUBLDfrubldxyzMSE][2']?/g).reverse().map((J=>{const z=J.charAt(0),te=g[J.charAt(1)],Ae=te-te%3*2+2;return Ae===1?`${z}2`:Ae===2?`${z}'`:z})).join(" ")})(T.join(" ")));for(let H=0;H<this.moveTables.length;H+=1)ae.push(this.moveTables[H].defaultIndex);ve.forEach((H=>{for(let J=0;J<ae.length;J+=1)ae[J]=this.moveTables[J].doMove(ae[J],H)}))}for(let ve=0;ve<=this.settings.maxDepth;ve+=1){const T=this.search(ae,ve,this.settings.lastMove,[]);if(T){if(this.settings.format){const H=b(T.solution);return de?b(M(`${de} ${H}`)):H}return T}}return!1}}const pe=new he((()=>({moveTables:[Se({name:"EdgePermutation",affected:[4,5,6,7]}),ye({name:"EdgeOrientation",affected:[4,5,6,7]})],pruningTables:[["EdgePermutation"],["EdgeOrientation"]]}))),Te=k=>pe.solve({scramble:k}),Ne=new he((()=>({moveTables:[ye({name:"EdgeOrientation",affected:[0,1,2,3,4,5,6,7,8,9,10,11]}),Se({name:"EdgePermutation",affected:[5,7]})],pruningTables:[["EdgeOrientation"],["EdgePermutation"]]}))),Ce=k=>Ne.solve({scramble:k}),O=new he((()=>({moveTables:[ye({name:"EdgeOrientation",affected:[6,9,10]}),_e({name:"CornerOrientation",affected:[5,6]}),Se({name:"EdgePermutation",affected:[6,9,10]}),oe({name:"CornerPermutation",affected:[5,6]})],pruningTables:[["EdgeOrientation","CornerPermutation"],["CornerOrientation","CornerPermutation"],["EdgePermutation","CornerPermutation"]]}))),D=k=>O.solve({scramble:k}),me=[1,10,4,13,6,7,8,15,16,17];let be,Z,C,A;const ie=new he((()=>{const k=(W,ae)=>{const de=p(W,[0,1,2],12),ve=p(ae,[3,4,5],12);for(let T=0;T<8;T+=1)if(de[T]!==-1){if(ve[T]!==-1)return-1;ve[T]=de[T]}return d(ve,[0,1,2,3,4,5])};A=[];for(let W=0;W<336;W+=1){A.push([]);for(let ae=0;ae<336;ae+=1)A[W][ae]=k(W,ae)}return{moveTables:[new B({name:"slicePermutation",size:24,table:C.table}),be,Z,Se({name:"URToDF",size:20160,moves:me,affected:[0,1,2,3,4,5]})],pruningTables:[["slicePermutation","parity","URFToDLF"],["slicePermutation","parity","URToDF"]]}}),me),se=new class extends he{constructor(){super(...arguments),this.maxDepth=22,this.solution=null}handleSolution(k,W){const ae=k.slice(-1)[0];if(ae%2==0&&Math.floor(ae/3)===6&&Math.floor(ae/3)===15)return!1;const de=ie.solve({indexes:[W[3],W[4],W[5],A[W[6]][W[7]]],maxDepth:this.maxDepth-k.length,lastMove:ae,format:!1});if(de){if(this.solution=k.concat(de.solution),this.maxDepth<=this.settings.maxDepth)return{solution:this.solution,indexes:W};this.maxDepth=this.solution.length-1}return!1}}((()=>(be=new B({name:"parity",size:2,table:[[1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1],[0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0]]}),Z=oe({name:"URFToDLF",affected:[0,1,2,3,4,5]}),C=Se({name:"slice",affected:[8,9,10,11],reversed:!0}),ie.initialize(),{moveTables:[new B({name:"slicePosition",size:495,table:C.table,doMove:(k,W,ae)=>Math.floor(k[24*W][ae]/24)}),_e({name:"twist",affected:[0,1,2,3,4,5,6,7]}),ye({name:"flip",affected:[0,1,2,3,4,5,6,7,8,9,10,11]}),C,be,Z,Se({name:"URToUL",affected:[0,1,2]}),Se({name:"UBToDF",affected:[3,4,5]})],pruningTables:[["slicePosition","flip"],["slicePosition","twist"]]}))),le=function(k){let W=arguments.length>1&&arguments[1]!==void 0?arguments[1]:22;return Array.isArray(k)?se.solve({indexes:k,maxDepth:W}):se.solve({scramble:k,maxDepth:W})},ge=(k,W,ae,de)=>le([Math.floor(d(W,[8,9,10,11],!0)/24),u(ae,3),u(k,2),d(W,[8,9,10,11],!0),h(de),d(de,[0,1,2,3,4,5]),d(W,[0,1,2]),d(W,[3,4,5])]),Re=new he((()=>({moveTables:[Se({name:"EdgePermutation",affected:[4,5,6,7,9]}),ye({name:"EdgeOrientation",affected:[4,5,6,7,9]}),oe({name:"CornerPermutation",affected:[5]}),_e({name:"CornerOrientation",affected:[5]})],pruningTables:[["EdgePermutation","CornerPermutation"],["EdgeOrientation","CornerOrientation"]]}))),ne=k=>Re.solve({scramble:k}),Me=[0,1,2,3],Le=(k,W,ae)=>{const de=f(o(0,W**(k.length-1)),k.length,W),ve=Array(ae).fill(0);return k.forEach(((T,H)=>{ve[T]=de[H]})),ve},Ue=(k,W)=>{const ae=p(o(0,i(k.length)),k.slice(0),k.length),de=[0,1,2,3,4,5,6,7,8,9,10,11].slice(0,W);return k.forEach(((ve,T)=>{de[ve]=ae[T]})),de},ke=(k,W)=>{W=W||o(0,4);for(let ae=0;ae<W;ae+=1)k=a(k,Me);return k},Ye=function(k,W){let ae,de,ve,T,H=arguments.length>2&&arguments[2]!==void 0?arguments[2]:k,J=arguments.length>3&&arguments[3]!==void 0?arguments[3]:W,z=arguments.length>4&&arguments[4]!==void 0&&arguments[4],te=arguments.length>5&&arguments[5]!==void 0&&arguments[5];do ae=Le(H,2,12),de=Ue(k,12),z&&(de=ke(de)),ve=Le(J,3,8),T=Ue(W,8),te&&(T=ke(T));while(h(de)!==h(T));return ge(ae,de,ve,T)},st=()=>Ye([w,y,_,S],[],[],[$,q,L,N],!1,!0),yt=()=>{let k,W,ae,de;do k=f(o(0,2048),12,2),ae=f(o(0,2187),8,3),W=p(o(0,479001600),[0,1,2,3,4,5,6,7,8,9,10,11],12),de=p(o(0,40320),[0,1,2,3,4,5,6,7],8);while(h(W)!==h(de));return ge(k,W,ae,de)},re=()=>Ye([w,y,_,S,E,R],[$,q,L,N]),ze=()=>Ye([],[0,1,2,3,4,5,6,7]),xe=()=>Ye([0,1,2,3,4,5,6,7,8,9,10,11],[]),Be=[w,y,_,S,E,R],Fe=()=>Ye(Be,[],Be,[],!1,!0),it=()=>Ye([w,y,_,S,I],[$,q,L,N,G]),ot=()=>Ye([w,y,_,S],[$,q,L,N],[],[]),dt=[w,y,_,S],cn=[$,q,L,N],pt=()=>Ye(dt,cn,[],cn),U=[$,q,L,N,G],ue=()=>Ye([w,y,_,S,I],U,[],U);var fe={solveCoordinates:ge,solve:function(k){let W=arguments.length>1&&arguments[1]!==void 0?arguments[1]:"kociemba";const ae={kociemba:le,cross:Te,eoline:Ce,fb:D,xcross:ne};if(ae[W])return ae[W](k);throw new Error("Specified solver does not exist.")},scramble:function(){let k=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"3x3";const W={"3x3":yt,"2gll":st,cmll:re,corners:ze,edges:xe,lse:Fe,lsll:it,pll:ot,zbll:pt,zzls:ue};if(W[k])return W[k]();throw new Error("Specified scrambler does not exist.")},initialize:k=>{const W={cross:pe,eoline:Ne,fb:O,xcross:Re};if(k==="kociemba")se.initialize(),ie.initialize();else{if(!W[k])throw new Error("Specified solver does not exist.");W[k].initialize()}}};return fe}))})(Vl)),Vl.exports}var Go=fI();const hI="#FFFFFF",dI="#B90000",pI="#FFD500",mI="#FF5900",gI="#009B48",xI="#0045AD",Ci=1.04,ob=[6,8,26,24,0,2,20,18],ab=[15,7,17,25,9,1,11,19,3,5,23,21],cb=[4,5,5,8,-1,9,0,1,1,4,-1,6,-1,-1,-1,0,-1,2,7,7,6,11,-1,10,3,3,2],ns=new At,Di=new At,lc=new At,uc=new At,Zr=new At,Ms=new At,ws=new At,vI=new At,kp=new At,Hp=new At;vI.setFromAxisAngle(new ce(0,0,1),-Math.PI);kp.setFromAxisAngle(new ce(0,0,1),-Math.PI/2);Hp.setFromAxisAngle(new ce(0,0,1),Math.PI/2);Zr.setFromAxisAngle(new ce(0,1,0),-Math.PI);Ms.setFromAxisAngle(new ce(0,1,0),-Math.PI/2);ws.setFromAxisAngle(new ce(0,1,0),Math.PI/2);Di.setFromAxisAngle(new ce(1,0,0),-Math.PI);lc.setFromAxisAngle(new ce(1,0,0),-Math.PI/2);uc.setFromAxisAngle(new ce(1,0,0),Math.PI/2);const lb=[ns,Ms,Zr,ws,Di.clone().multiply(ws),Di.clone().multiply(Zr),Di.clone().multiply(Ms),Di],ub=[ns,Ms,Zr,ws,Di,ws.clone().premultiply(Di),Zr.clone().multiply(Di),Ms.clone().premultiply(Di),lc,uc.clone().premultiply(Zr),lc.clone().premultiply(Zr),uc];class li extends Ma{static DEFAULT_COLORS=[dI,mI,hI,pI,gI,xI];static DEFAULT_INTERNAL_COLOR="#300040";colors;internalColor;cubies=new Array(27);permutation=new Array(27);cubieSize;turnTime;constructor(e){if(super(),e.colors!==void 0&&e.colors.length!==6)throw new Error("Unexpected number of colors, expected 6.");const t=e.cubieSize===void 0?1:e.cubieSize,i=e.colors===void 0?li.DEFAULT_COLORS:e.colors,r=e.internalColor===void 0?li.DEFAULT_INTERNAL_COLOR:e.internalColor;this.cubieSize=t,this.turnTime=e.turnTime===void 0?100:e.turnTime;for(let l=0;l<27;l++)this.permutation[l]=l;this.colors=new Array(6);for(let l=0;l<6;l++){const c=i[l];typeof c=="string"?this.colors[l]=new Yc({color:c}):this.colors[l]=c}typeof r=="string"?this.internalColor=new Yc({color:r}):this.internalColor=r;const s=[this.colors[5],this.colors[4]],o=[this.colors[2],this.colors[3]],a=[this.colors[1],this.colors[0]];for(let l=0;l<=2;l++)for(let c=0;c<=2;c++)for(let u=0;u<=2;u++){if(l===1&&c===1&&u===1)continue;const f=new Du(t,t,t),h=[u==2?a[0]:this.internalColor,u==0?a[1]:this.internalColor,c==2?o[0]:this.internalColor,c==0?o[1]:this.internalColor,l==2?s[0]:this.internalColor,l==0?s[1]:this.internalColor],d=new Ii(f,h);d.name=`Cubie_${l}${c}${u}`,d.position.x=this.position.x+t*(u-1)*Ci,d.position.y=this.position.y+t*(c-1)*Ci,d.position.z=this.position.z+t*(l-1)*Ci;const p=9*l+3*c+u;this.cubies[p]=d,this.add(d)}}setState(e){const t=e.corners.length;for(let s=0;s<t;s++)this.permutation[ob[s]]=ob[e.corners[s]];const i=e.edges.length;for(let s=0;s<i;s++)this.permutation[ab[s]]=ab[e.edges[s]];const r=new At;for(let s=0;s<=2;s++)for(let o=0;o<=2;o++)for(let a=0;a<=2;a++){const l=Math.abs(s-1)+Math.abs(o-1)+Math.abs(a-1);if(l===0)continue;const c=9*s+3*o+a,u=this.permutation[c],f=this.cubies[u],h=new ce(a-1,o-1,s-1).normalize(),d=cb[c],p=cb[u];if(l===3){r.copy(lb[p]).invert().premultiply(lb[d]),f.setRotationFromQuaternion(r);const g=e.cornerOrientations[d];r.setFromAxisAngle(h,-((g+1)%3-1)*2*Math.PI/3),f.applyQuaternion(r)}else if(l===2){r.copy(ub[p]).invert().premultiply(ub[d]),f.setRotationFromQuaternion(r);const g=e.edgeOrientations[d];r.setFromAxisAngle(h,g*Math.PI),f.applyQuaternion(r)}f.position.x=this.position.x+this.cubieSize*(a-1)*Ci,f.position.y=this.position.y+this.cubieSize*(o-1)*Ci,f.position.z=this.position.z+this.cubieSize*(s-1)*Ci}}center(){this.setRotationFromQuaternion(ns)}reset(){for(let e=0;e<27;e++)this.permutation[e]=e;for(let e=0;e<=2;e++)for(let t=0;t<=2;t++)for(let i=0;i<=2;i++){if(e===1&&t===1&&i===1)continue;const r=this.cubies[9*e+3*t+i];r.position.x=this.position.x+this.cubieSize*(i-1)*Ci,r.position.y=this.position.y+this.cubieSize*(t-1)*Ci,r.position.z=this.position.z+this.cubieSize*(e-1)*Ci,r.setRotationFromQuaternion(ns)}}turnQueue=[];workOutstanding=!1;animate(){if(!this.workOutstanding){this.workOutstanding=!0;const e=()=>{if(this.turnQueue.length>0){const[t,i,r]=this.turnQueue[0];this.turnQueue=this.turnQueue.slice(1),this.doTurn(t,i,()=>{r(),e()})}else this.workOutstanding=!1};e()}}static MOVE_INFO={F:{stride1:3,stride2:1,offset:0,endQ:Hp,perm:[2,5,8,1,4,7,0,3,6,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"F'":{stride1:3,stride2:1,offset:0,endQ:kp,perm:[6,3,0,7,4,1,8,5,2,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},B:{stride1:3,stride2:1,offset:18,endQ:kp,perm:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,24,21,18,25,22,19,26,23,20]},"B'":{stride1:3,stride2:1,offset:18,endQ:Hp,perm:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,26,19,22,25,18,21,24]},U:{stride1:9,stride2:1,offset:6,endQ:Ms,perm:[0,1,2,3,4,5,8,17,26,9,10,11,12,13,14,7,16,25,18,19,20,21,22,23,6,15,24]},"U'":{stride1:9,stride2:1,offset:6,endQ:ws,perm:[0,1,2,3,4,5,24,15,6,9,10,11,12,13,14,25,16,7,18,19,20,21,22,23,26,17,8]},D:{stride1:9,stride2:1,offset:0,endQ:ws,perm:[18,9,0,3,4,5,6,7,8,19,10,1,12,13,14,15,16,17,20,11,2,21,22,23,24,25,26]},"D'":{stride1:9,stride2:1,offset:0,endQ:Ms,perm:[2,11,20,3,4,5,6,7,8,1,10,19,12,13,14,15,16,17,0,9,18,21,22,23,24,25,26]},R:{stride1:9,stride2:3,offset:0,endQ:uc,perm:[6,1,2,15,4,5,24,7,8,3,10,11,12,13,14,21,16,17,0,19,20,9,22,23,18,25,26]},"R'":{stride1:9,stride2:3,offset:0,endQ:lc,perm:[18,1,2,9,4,5,0,7,8,21,10,11,12,13,14,3,16,17,24,19,20,15,22,23,6,25,26]},L:{stride1:9,stride2:3,offset:2,endQ:lc,perm:[0,1,20,3,4,11,6,7,2,9,10,23,12,13,14,15,16,5,18,19,26,21,22,17,24,25,8]},"L'":{stride1:9,stride2:3,offset:2,endQ:uc,perm:[0,1,8,3,4,17,6,7,26,9,10,5,12,13,14,15,16,23,18,19,2,21,22,11,24,25,20]}};doTurn(e,t,i){const r=[],{stride1:s,stride2:o,offset:a,endQ:l,perm:c}=li.MOVE_INFO[e];for(let m=0;m<=2;m++)for(let v=0;v<=2;v++){const x=this.permutation[s*m+o*v+a];r.push(this.cubies[x])}const u=this.permutation.slice();for(let m=0;m<27;m++)this.permutation[c[m]]=u[m];let f=null;const h=new At,d=new At;let p=new At;const g=m=>{if(f===null)f=m,requestAnimationFrame(g);else{const v=m-f,x=Math.min(v/t,1);d.slerpQuaternions(ns,l,fb(fb(x))),h.copy(p),h.invert().premultiply(d),p.copy(d);for(const M of r)M.position.applyQuaternion(h),M.applyQuaternion(h);x!==1?requestAnimationFrame(g):i()}};requestAnimationFrame(g)}turn(e,t=this.turnTime){return new Promise((i,r)=>{this.turnQueue.push([e,Math.min(this.turnTime,t),i]),this.animate()})}updateOptions(e){if(e.turnTime!==void 0&&(this.turnTime=e.turnTime),e.colors!==void 0){this.colors=new Array(6);for(let t=0;t<6;t++){const i=e.colors[t];typeof i=="string"?this.colors[t]=new Yc({color:i}):this.colors[t]=i}}if(e.internalColor!==void 0&&(typeof e.internalColor=="string"?this.internalColor=new Yc({color:e.internalColor}):this.internalColor=e.internalColor),e.internalColor!==void 0||e.colors!==void 0){const t=[this.colors[5],this.colors[4]],i=[this.colors[2],this.colors[3]],r=[this.colors[1],this.colors[0]];for(let s=0;s<=2;s++)for(let o=0;o<=2;o++)for(let a=0;a<=2;a++){if(s===1&&o===1&&a===1)continue;const l=[a==2?r[0]:this.internalColor,a==0?r[1]:this.internalColor,o==2?i[0]:this.internalColor,o==0?i[1]:this.internalColor,s==2?t[0]:this.internalColor,s==0?t[1]:this.internalColor],c=9*s+3*o+a;this.cubies[c].material=l}}}}function fb(n){return Math.max(0,Math.min(1,3*n*n-2*n*n*n))}var Vp=function(n,e){return Vp=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,i){t.__proto__=i}||function(t,i){for(var r in i)Object.prototype.hasOwnProperty.call(i,r)&&(t[r]=i[r])},Vp(n,e)};function Ac(n,e){if(typeof e!="function"&&e!==null)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");Vp(n,e);function t(){this.constructor=n}n.prototype=e===null?Object.create(e):(t.prototype=e.prototype,new t)}function bI(n,e,t,i){function r(s){return s instanceof t?s:new t(function(o){o(s)})}return new(t||(t=Promise))(function(s,o){function a(u){try{c(i.next(u))}catch(f){o(f)}}function l(u){try{c(i.throw(u))}catch(f){o(f)}}function c(u){u.done?s(u.value):r(u.value).then(a,l)}c((i=i.apply(n,[])).next())})}function Q1(n,e){var t={label:0,sent:function(){if(s[0]&1)throw s[1];return s[1]},trys:[],ops:[]},i,r,s,o;return o={next:a(0),throw:a(1),return:a(2)},typeof Symbol=="function"&&(o[Symbol.iterator]=function(){return this}),o;function a(c){return function(u){return l([c,u])}}function l(c){if(i)throw new TypeError("Generator is already executing.");for(;t;)try{if(i=1,r&&(s=c[0]&2?r.return:c[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,c[1])).done)return s;switch(r=0,s&&(c=[c[0]&2,s.value]),c[0]){case 0:case 1:s=c;break;case 4:return t.label++,{value:c[1],done:!1};case 5:t.label++,r=c[1],c=[0];continue;case 7:c=t.ops.pop(),t.trys.pop();continue;default:if(s=t.trys,!(s=s.length>0&&s[s.length-1])&&(c[0]===6||c[0]===2)){t=0;continue}if(c[0]===3&&(!s||c[1]>s[0]&&c[1]<s[3])){t.label=c[1];break}if(c[0]===6&&t.label<s[1]){t.label=s[1],s=c;break}if(s&&t.label<s[2]){t.label=s[2],t.ops.push(c);break}s[2]&&t.ops.pop(),t.trys.pop();continue}c=e.call(n,t)}catch(u){c=[6,u],r=0}finally{i=s=0}if(c[0]&5)throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}}function ko(n){var e=typeof Symbol=="function"&&Symbol.iterator,t=e&&n[e],i=0;if(t)return t.call(n);if(n&&typeof n.length=="number")return{next:function(){return n&&i>=n.length&&(n=void 0),{value:n&&n[i++],done:!n}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")}function fc(n,e){var t=typeof Symbol=="function"&&n[Symbol.iterator];if(!t)return n;var i=t.call(n),r,s=[],o;try{for(;(e===void 0||e-- >0)&&!(r=i.next()).done;)s.push(r.value)}catch(a){o={error:a}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return s}function Ru(n,e,t){if(arguments.length===2)for(var i=0,r=e.length,s;i<r;i++)(s||!(i in e))&&(s||(s=Array.prototype.slice.call(e,0,i)),s[i]=e[i]);return n.concat(s||Array.prototype.slice.call(e))}function Mo(n){return this instanceof Mo?(this.v=n,this):new Mo(n)}function yI(n,e,t){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i=t.apply(n,e||[]),r,s=[];return r={},o("next"),o("throw"),o("return"),r[Symbol.asyncIterator]=function(){return this},r;function o(h){i[h]&&(r[h]=function(d){return new Promise(function(p,g){s.push([h,d,p,g])>1||a(h,d)})})}function a(h,d){try{l(i[h](d))}catch(p){f(s[0][3],p)}}function l(h){h.value instanceof Mo?Promise.resolve(h.value.v).then(c,u):f(s[0][2],h)}function c(h){a("next",h)}function u(h){a("throw",h)}function f(h,d){h(d),s.shift(),s.length&&a(s[0][0],s[0][1])}}function _I(n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e=n[Symbol.asyncIterator],t;return e?e.call(n):(n=typeof ko=="function"?ko(n):n[Symbol.iterator](),t={},i("next"),i("throw"),i("return"),t[Symbol.asyncIterator]=function(){return this},t);function i(s){t[s]=n[s]&&function(o){return new Promise(function(a,l){o=n[s](o),r(a,l,o.done,o.value)})}}function r(s,o,a,l){Promise.resolve(l).then(function(c){s({value:c,done:a})},o)}}function bt(n){return typeof n=="function"}function eM(n){var e=function(i){Error.call(i),i.stack=new Error().stack},t=n(e);return t.prototype=Object.create(Error.prototype),t.prototype.constructor=t,t}var Wd=eM(function(n){return function(t){n(this),this.message=t?t.length+` errors occurred during unsubscription:
`+t.map(function(i,r){return r+1+") "+i.toString()}).join(`
  `):"",this.name="UnsubscriptionError",this.errors=t}});function Wp(n,e){if(n){var t=n.indexOf(e);0<=t&&n.splice(t,1)}}var ta=(function(){function n(e){this.initialTeardown=e,this.closed=!1,this._parentage=null,this._finalizers=null}return n.prototype.unsubscribe=function(){var e,t,i,r,s;if(!this.closed){this.closed=!0;var o=this._parentage;if(o)if(this._parentage=null,Array.isArray(o))try{for(var a=ko(o),l=a.next();!l.done;l=a.next()){var c=l.value;c.remove(this)}}catch(g){e={error:g}}finally{try{l&&!l.done&&(t=a.return)&&t.call(a)}finally{if(e)throw e.error}}else o.remove(this);var u=this.initialTeardown;if(bt(u))try{u()}catch(g){s=g instanceof Wd?g.errors:[g]}var f=this._finalizers;if(f){this._finalizers=null;try{for(var h=ko(f),d=h.next();!d.done;d=h.next()){var p=d.value;try{hb(p)}catch(g){s=s??[],g instanceof Wd?s=Ru(Ru([],fc(s)),fc(g.errors)):s.push(g)}}}catch(g){i={error:g}}finally{try{d&&!d.done&&(r=h.return)&&r.call(h)}finally{if(i)throw i.error}}}if(s)throw new Wd(s)}},n.prototype.add=function(e){var t;if(e&&e!==this)if(this.closed)hb(e);else{if(e instanceof n){if(e.closed||e._hasParent(this))return;e._addParent(this)}(this._finalizers=(t=this._finalizers)!==null&&t!==void 0?t:[]).push(e)}},n.prototype._hasParent=function(e){var t=this._parentage;return t===e||Array.isArray(t)&&t.includes(e)},n.prototype._addParent=function(e){var t=this._parentage;this._parentage=Array.isArray(t)?(t.push(e),t):t?[t,e]:e},n.prototype._removeParent=function(e){var t=this._parentage;t===e?this._parentage=null:Array.isArray(t)&&Wp(t,e)},n.prototype.remove=function(e){var t=this._finalizers;t&&Wp(t,e),e instanceof n&&e._removeParent(this)},n.EMPTY=(function(){var e=new n;return e.closed=!0,e})(),n})(),tM=ta.EMPTY;function nM(n){return n instanceof ta||n&&"closed"in n&&bt(n.remove)&&bt(n.add)&&bt(n.unsubscribe)}function hb(n){bt(n)?n():n.unsubscribe()}var MI={Promise:void 0},wI={setTimeout:function(n,e){for(var t=[],i=2;i<arguments.length;i++)t[i-2]=arguments[i];return setTimeout.apply(void 0,Ru([n,e],fc(t)))},clearTimeout:function(n){return clearTimeout(n)},delegate:void 0};function iM(n){wI.setTimeout(function(){throw n})}function qp(){}function Wl(n){n()}var km=(function(n){Ac(e,n);function e(t){var i=n.call(this)||this;return i.isStopped=!1,t?(i.destination=t,nM(t)&&t.add(i)):i.destination=TI,i}return e.create=function(t,i,r){return new $p(t,i,r)},e.prototype.next=function(t){this.isStopped||this._next(t)},e.prototype.error=function(t){this.isStopped||(this.isStopped=!0,this._error(t))},e.prototype.complete=function(){this.isStopped||(this.isStopped=!0,this._complete())},e.prototype.unsubscribe=function(){this.closed||(this.isStopped=!0,n.prototype.unsubscribe.call(this),this.destination=null)},e.prototype._next=function(t){this.destination.next(t)},e.prototype._error=function(t){try{this.destination.error(t)}finally{this.unsubscribe()}},e.prototype._complete=function(){try{this.destination.complete()}finally{this.unsubscribe()}},e})(ta),SI=(function(){function n(e){this.partialObserver=e}return n.prototype.next=function(e){var t=this.partialObserver;if(t.next)try{t.next(e)}catch(i){Bl(i)}},n.prototype.error=function(e){var t=this.partialObserver;if(t.error)try{t.error(e)}catch(i){Bl(i)}else Bl(e)},n.prototype.complete=function(){var e=this.partialObserver;if(e.complete)try{e.complete()}catch(t){Bl(t)}},n})(),$p=(function(n){Ac(e,n);function e(t,i,r){var s=n.call(this)||this,o;return bt(t)||!t?o={next:t??void 0,error:i??void 0,complete:r??void 0}:o=t,s.destination=new SI(o),s}return e})(km);function Bl(n){iM(n)}function EI(n){throw n}var TI={closed:!0,next:qp,error:EI,complete:qp},Hm=(function(){return typeof Symbol=="function"&&Symbol.observable||"@@observable"})();function rM(n){return n}function AI(n){return n.length===0?rM:n.length===1?n[0]:function(t){return n.reduce(function(i,r){return r(i)},t)}}var an=(function(){function n(e){e&&(this._subscribe=e)}return n.prototype.lift=function(e){var t=new n;return t.source=this,t.operator=e,t},n.prototype.subscribe=function(e,t,i){var r=this,s=CI(e)?e:new $p(e,t,i);return Wl(function(){var o=r,a=o.operator,l=o.source;s.add(a?a.call(s,l):l?r._subscribe(s):r._trySubscribe(s))}),s},n.prototype._trySubscribe=function(e){try{return this._subscribe(e)}catch(t){e.error(t)}},n.prototype.forEach=function(e,t){var i=this;return t=db(t),new t(function(r,s){var o=new $p({next:function(a){try{e(a)}catch(l){s(l),o.unsubscribe()}},error:s,complete:r});i.subscribe(o)})},n.prototype._subscribe=function(e){var t;return(t=this.source)===null||t===void 0?void 0:t.subscribe(e)},n.prototype[Hm]=function(){return this},n.prototype.pipe=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return AI(e)(this)},n.prototype.toPromise=function(e){var t=this;return e=db(e),new e(function(i,r){var s;t.subscribe(function(o){return s=o},function(o){return r(o)},function(){return i(s)})})},n.create=function(e){return new n(e)},n})();function db(n){var e;return(e=n??MI.Promise)!==null&&e!==void 0?e:Promise}function LI(n){return n&&bt(n.next)&&bt(n.error)&&bt(n.complete)}function CI(n){return n&&n instanceof km||LI(n)&&nM(n)}function RI(n){return bt(n?.lift)}function na(n){return function(e){if(RI(e))return e.lift(function(t){try{return n(t,this)}catch(i){this.error(i)}});throw new TypeError("Unable to lift unknown Observable type")}}function Ho(n,e,t,i,r){return new PI(n,e,t,i,r)}var PI=(function(n){Ac(e,n);function e(t,i,r,s,o,a){var l=n.call(this,t)||this;return l.onFinalize=o,l.shouldUnsubscribe=a,l._next=i?function(c){try{i(c)}catch(u){t.error(u)}}:n.prototype._next,l._error=s?function(c){try{s(c)}catch(u){t.error(u)}finally{this.unsubscribe()}}:n.prototype._error,l._complete=r?function(){try{r()}catch(c){t.error(c)}finally{this.unsubscribe()}}:n.prototype._complete,l}return e.prototype.unsubscribe=function(){var t;if(!this.shouldUnsubscribe||this.shouldUnsubscribe()){var i=this.closed;n.prototype.unsubscribe.call(this),!i&&((t=this.onFinalize)===null||t===void 0||t.call(this))}},e})(km),sM={now:function(){return(sM.delegate||performance).now()},delegate:void 0},II={schedule:function(n){var e=requestAnimationFrame,t=cancelAnimationFrame,i=e(function(r){t=void 0,n(r)});return new ta(function(){return t?.(i)})}};function oM(n){return n?aM():DI}function aM(n){var e=II.schedule;return new an(function(t){var i=new ta,r=sM,s=r.now(),o=function(a){var l=r.now();t.next({timestamp:a,elapsed:l-s}),t.closed||i.add(e(o))};return i.add(e(o)),i})}var DI=aM(),OI=eM(function(n){return function(){n(this),this.name="ObjectUnsubscribedError",this.message="object unsubscribed"}}),nn=(function(n){Ac(e,n);function e(){var t=n.call(this)||this;return t.closed=!1,t.currentObservers=null,t.observers=[],t.isStopped=!1,t.hasError=!1,t.thrownError=null,t}return e.prototype.lift=function(t){var i=new pb(this,this);return i.operator=t,i},e.prototype._throwIfClosed=function(){if(this.closed)throw new OI},e.prototype.next=function(t){var i=this;Wl(function(){var r,s;if(i._throwIfClosed(),!i.isStopped){i.currentObservers||(i.currentObservers=Array.from(i.observers));try{for(var o=ko(i.currentObservers),a=o.next();!a.done;a=o.next()){var l=a.value;l.next(t)}}catch(c){r={error:c}}finally{try{a&&!a.done&&(s=o.return)&&s.call(o)}finally{if(r)throw r.error}}}})},e.prototype.error=function(t){var i=this;Wl(function(){if(i._throwIfClosed(),!i.isStopped){i.hasError=i.isStopped=!0,i.thrownError=t;for(var r=i.observers;r.length;)r.shift().error(t)}})},e.prototype.complete=function(){var t=this;Wl(function(){if(t._throwIfClosed(),!t.isStopped){t.isStopped=!0;for(var i=t.observers;i.length;)i.shift().complete()}})},e.prototype.unsubscribe=function(){this.isStopped=this.closed=!0,this.observers=this.currentObservers=null},Object.defineProperty(e.prototype,"observed",{get:function(){var t;return((t=this.observers)===null||t===void 0?void 0:t.length)>0},enumerable:!1,configurable:!0}),e.prototype._trySubscribe=function(t){return this._throwIfClosed(),n.prototype._trySubscribe.call(this,t)},e.prototype._subscribe=function(t){return this._throwIfClosed(),this._checkFinalizedStatuses(t),this._innerSubscribe(t)},e.prototype._innerSubscribe=function(t){var i=this,r=this,s=r.hasError,o=r.isStopped,a=r.observers;return s||o?tM:(this.currentObservers=null,a.push(t),new ta(function(){i.currentObservers=null,Wp(a,t)}))},e.prototype._checkFinalizedStatuses=function(t){var i=this,r=i.hasError,s=i.thrownError,o=i.isStopped;r?t.error(s):o&&t.complete()},e.prototype.asObservable=function(){var t=new an;return t.source=this,t},e.create=function(t,i){return new pb(t,i)},e})(an),pb=(function(n){Ac(e,n);function e(t,i){var r=n.call(this)||this;return r.destination=t,r.source=i,r}return e.prototype.next=function(t){var i,r;(r=(i=this.destination)===null||i===void 0?void 0:i.next)===null||r===void 0||r.call(i,t)},e.prototype.error=function(t){var i,r;(r=(i=this.destination)===null||i===void 0?void 0:i.error)===null||r===void 0||r.call(i,t)},e.prototype.complete=function(){var t,i;(i=(t=this.destination)===null||t===void 0?void 0:t.complete)===null||i===void 0||i.call(t)},e.prototype._subscribe=function(t){var i,r;return(r=(i=this.source)===null||i===void 0?void 0:i.subscribe(t))!==null&&r!==void 0?r:tM},e})(nn),FI=new an(function(n){return n.complete()});function NI(n){return n&&bt(n.schedule)}function cM(n){return n[n.length-1]}function BI(n){return NI(cM(n))?n.pop():void 0}function UI(n,e){return typeof cM(n)=="number"?n.pop():e}var Vm=(function(n){return n&&typeof n.length=="number"&&typeof n!="function"});function lM(n){return bt(n?.then)}function uM(n){return bt(n[Hm])}function fM(n){return Symbol.asyncIterator&&bt(n?.[Symbol.asyncIterator])}function hM(n){return new TypeError("You provided "+(n!==null&&typeof n=="object"?"an invalid object":"'"+n+"'")+" where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.")}function zI(){return typeof Symbol!="function"||!Symbol.iterator?"@@iterator":Symbol.iterator}var dM=zI();function pM(n){return bt(n?.[dM])}function mM(n){return yI(this,arguments,function(){var t,i,r,s;return Q1(this,function(o){switch(o.label){case 0:t=n.getReader(),o.label=1;case 1:o.trys.push([1,,9,10]),o.label=2;case 2:return[4,Mo(t.read())];case 3:return i=o.sent(),r=i.value,s=i.done,s?[4,Mo(void 0)]:[3,5];case 4:return[2,o.sent()];case 5:return[4,Mo(r)];case 6:return[4,o.sent()];case 7:return o.sent(),[3,2];case 8:return[3,10];case 9:return t.releaseLock(),[7];case 10:return[2]}})})}function gM(n){return bt(n?.getReader)}function Ar(n){if(n instanceof an)return n;if(n!=null){if(uM(n))return GI(n);if(Vm(n))return kI(n);if(lM(n))return HI(n);if(fM(n))return xM(n);if(pM(n))return VI(n);if(gM(n))return WI(n)}throw hM(n)}function GI(n){return new an(function(e){var t=n[Hm]();if(bt(t.subscribe))return t.subscribe(e);throw new TypeError("Provided object does not correctly implement Symbol.observable")})}function kI(n){return new an(function(e){for(var t=0;t<n.length&&!e.closed;t++)e.next(n[t]);e.complete()})}function HI(n){return new an(function(e){n.then(function(t){e.closed||(e.next(t),e.complete())},function(t){return e.error(t)}).then(null,iM)})}function VI(n){return new an(function(e){var t,i;try{for(var r=ko(n),s=r.next();!s.done;s=r.next()){var o=s.value;if(e.next(o),e.closed)return}}catch(a){t={error:a}}finally{try{s&&!s.done&&(i=r.return)&&i.call(r)}finally{if(t)throw t.error}}e.complete()})}function xM(n){return new an(function(e){qI(n,e).catch(function(t){return e.error(t)})})}function WI(n){return xM(mM(n))}function qI(n,e){var t,i,r,s;return bI(this,void 0,void 0,function(){var o,a;return Q1(this,function(l){switch(l.label){case 0:l.trys.push([0,5,6,11]),t=_I(n),l.label=1;case 1:return[4,t.next()];case 2:if(i=l.sent(),!!i.done)return[3,4];if(o=i.value,e.next(o),e.closed)return[2];l.label=3;case 3:return[3,1];case 4:return[3,11];case 5:return a=l.sent(),r={error:a},[3,11];case 6:return l.trys.push([6,,9,10]),i&&!i.done&&(s=t.return)?[4,s.call(t)]:[3,8];case 7:l.sent(),l.label=8;case 8:return[3,10];case 9:if(r)throw r.error;return[7];case 10:return[7];case 11:return e.complete(),[2]}})})}function is(n,e,t,i,r){i===void 0&&(i=0),r===void 0&&(r=!1);var s=e.schedule(function(){t(),r?n.add(this.schedule(null,i)):this.unsubscribe()},i);if(n.add(s),!r)return s}function vM(n,e){return e===void 0&&(e=0),na(function(t,i){t.subscribe(Ho(i,function(r){return is(i,n,function(){return i.next(r)},e)},function(){return is(i,n,function(){return i.complete()},e)},function(r){return is(i,n,function(){return i.error(r)},e)}))})}function bM(n,e){return e===void 0&&(e=0),na(function(t,i){i.add(n.schedule(function(){return t.subscribe(i)},e))})}function $I(n,e){return Ar(n).pipe(bM(e),vM(e))}function jI(n,e){return Ar(n).pipe(bM(e),vM(e))}function XI(n,e){return new an(function(t){var i=0;return e.schedule(function(){i===n.length?t.complete():(t.next(n[i++]),t.closed||this.schedule())})})}function YI(n,e){return new an(function(t){var i;return is(t,e,function(){i=n[dM](),is(t,e,function(){var r,s,o;try{r=i.next(),s=r.value,o=r.done}catch(a){t.error(a);return}o?t.complete():t.next(s)},0,!0)}),function(){return bt(i?.return)&&i.return()}})}function yM(n,e){if(!n)throw new Error("Iterable cannot be null");return new an(function(t){is(t,e,function(){var i=n[Symbol.asyncIterator]();is(t,e,function(){i.next().then(function(r){r.done?t.complete():t.next(r.value)})},0,!0)})})}function ZI(n,e){return yM(mM(n),e)}function JI(n,e){if(n!=null){if(uM(n))return $I(n,e);if(Vm(n))return XI(n,e);if(lM(n))return jI(n,e);if(fM(n))return yM(n,e);if(pM(n))return YI(n,e);if(gM(n))return ZI(n,e)}throw hM(n)}function KI(n,e){return e?JI(n,e):Ar(n)}function Ss(n,e){return na(function(t,i){var r=0;t.subscribe(Ho(i,function(s){i.next(n.call(e,s,r++))}))})}var QI=Array.isArray;function eD(n,e){return QI(e)?n.apply(void 0,Ru([],fc(e))):n(e)}function tD(n){return Ss(function(e){return eD(n,e)})}function nD(n,e,t,i,r,s,o,a){var l=[],c=0,u=0,f=!1,h=function(){f&&!l.length&&!c&&e.complete()},d=function(g){return c<i?p(g):l.push(g)},p=function(g){c++;var m=!1;Ar(t(g,u++)).subscribe(Ho(e,function(v){e.next(v)},function(){m=!0},void 0,function(){if(m)try{c--;for(var v=function(){var x=l.shift();o||p(x)};l.length&&c<i;)v();h()}catch(x){e.error(x)}}))};return n.subscribe(Ho(e,d,function(){f=!0,h()})),function(){}}function Wm(n,e,t){return t===void 0&&(t=1/0),bt(e)?Wm(function(i,r){return Ss(function(s,o){return e(i,s,r,o)})(Ar(n(i,r)))},t):(typeof e=="number"&&(t=e),na(function(i,r){return nD(i,r,n,t)}))}function iD(n){return n===void 0&&(n=1/0),Wm(rM,n)}var rD=["addListener","removeListener"],sD=["addEventListener","removeEventListener"],oD=["on","off"];function An(n,e,t,i){if(bt(t)&&(i=t,t=void 0),i)return An(n,e,t).pipe(tD(i));var r=fc(lD(n)?sD.map(function(a){return function(l){return n[a](e,l,t)}}):aD(n)?rD.map(mb(n,e)):cD(n)?oD.map(mb(n,e)):[],2),s=r[0],o=r[1];if(!s&&Vm(n))return Wm(function(a){return An(a,e,t)})(Ar(n));if(!s)throw new TypeError("Invalid event target");return new an(function(a){var l=function(){for(var c=[],u=0;u<arguments.length;u++)c[u]=arguments[u];return a.next(1<c.length?c:c[0])};return s(l),function(){return o(l)}})}function mb(n,e){return function(t){return function(i){return n[t](e,i)}}}function aD(n){return bt(n.addListener)&&bt(n.removeListener)}function cD(n){return bt(n.on)&&bt(n.off)}function lD(n){return bt(n.addEventListener)&&bt(n.removeEventListener)}function uD(){for(var n=[],e=0;e<arguments.length;e++)n[e]=arguments[e];var t=BI(n),i=UI(n,1/0),r=n;return r.length?r.length===1?Ar(r[0]):iD(i)(KI(r,t)):FI}function _M(n,e){return na(function(t,i){var r=0;t.subscribe(Ho(i,function(s){return n.call(e,s,r++)&&i.next(s)}))})}function fD(n){return na(function(e,t){Ar(n).subscribe(Ho(t,function(){return t.complete()},qp)),!t.closed&&e.subscribe(t)})}class Lc{constructor(e,t,i,r){this.corners=e,this.cornerOrientations=t,this.edges=i,this.edgeOrientations=r}static SOLVED=new Lc([0,1,2,3,4,5,6,7],[0,0,0,0,0,0,0],[0,1,2,3,4,5,6,7,8,9,10,11],[0,0,0,0,0,0,0,0,0,0,0,0])}class Vo{constructor(e,t){this.timestamp=e,this.value=t}}function qm(n){const e=n.length;let t=-n[0].timestamp;for(let i=0;i<e;i++)t+=n[i].timestamp;return t}class hD{constructor(e,t,i,r,s){this.dt=e,this.dqx=t,this.dqy=i,this.dqz=r,this.dqw=s}}function dD(n,e,t,i,r){const s=n.length/20,o=e.length,a=i.length,l=new Array(s);let c=0;for(let u=0;u<s;u++){let f=0,h=!0,d=0;for(let p=0;p<o;p++){const g=n[c+f];h=h&&(t[p]&g>>8)===g>>12&&(e[p]&g&15)===(g>>4&15),d+=t[p]&g>>10,f++}for(let p=0;p<a;p++){const g=n[c+f];h=h&&(r[p]&g>>8)===g>>12&&(i[p]&g&15)===(g>>4&15),d-=r[p]&g>>10,f++}c+=20,l[u]=h&&d===0}return l}const pD=[3855,3871,3887,3903,3919,3935,3951,3967,3855,3871,3887,3903,3919,3935,3951,3967,3983,3999,4015,4031,3903,3855,3871,3887,3919,3935,3951,3967,3903,3855,3871,3887,3919,3935,3951,3967,3983,3999,4015,4031,3887,3903,3855,3871,3919,3935,3951,3967,3887,3903,3855,3871,3919,3935,3951,3967,3983,3999,4015,4031,3871,3887,3903,3855,3919,3935,3951,3967,3871,3887,3903,3855,3919,3935,3951,3967,3983,3999,4015,4031,3855,3871,3887,3903,3935,3951,3967,3919,3855,3871,3887,3903,3935,3951,3967,3919,3983,3999,4015,4031,3855,3871,3887,3903,3951,3967,3919,3935,3855,3871,3887,3903,3951,3967,3919,3935,3983,3999,4015,4031,3855,3871,3887,3903,3967,3919,3935,3951,3855,3871,3887,3903,3967,3919,3935,3951,3983,3999,4015,4031,7967,12127,3887,3903,12047,8015,3951,3967,3855,8095,3887,3903,3919,8079,3951,3967,7967,8031,4015,4031,3935,3919,3887,3903,3871,3855,3951,3967,3855,3935,3887,3903,3919,3871,3951,3967,3999,3983,4015,4031,8015,12047,3887,3903,12127,7967,3951,3967,3855,8079,3887,3903,3919,8095,3951,3967,8031,7967,4015,4031,3855,3871,7999,12159,3919,3935,12079,8047,3855,3871,3887,8127,3919,3935,3951,8111,3983,3999,7999,8063,3855,3871,3967,3951,3919,3935,3903,3887,3855,3871,3887,3967,3919,3935,3951,3903,3983,3999,4031,4015,3855,3871,8047,12079,3919,3935,12159,7999,3855,3871,3887,8111,3919,3935,3951,8127,3983,3999,8063,7999,3855,7983,12143,3903,3919,12063,8031,3967,3855,3871,4015,3903,3919,3935,3999,3967,3983,3887,3951,4031,3855,3951,3935,3903,3919,3887,3871,3967,3855,3871,3951,3903,3919,3935,3887,3967,3983,4015,3999,4031,3855,8031,12063,3903,3919,12143,7983,3967,3855,3871,3999,3903,3919,3935,4015,3967,3983,3951,3887,4031,12111,3871,3887,7951,8063,3935,3951,12095,3983,3871,3887,3903,4031,3935,3951,3967,3919,3999,4015,3855,3967,3871,3887,3919,3903,3935,3951,3855,3919,3871,3887,3903,3855,3935,3951,3967,4031,3999,4015,3983,12095,3871,3887,8063,7951,3935,3951,12111,4031,3871,3887,3903,3983,3935,3951,3967,3855,3999,4015,3919,3840,3840,3840,3840,3919,3935,3951,3967,3840,3840,3840,3840,3919,3935,3951,3967,3983,3999,4015,4031,3855,3871,3887,3903,3840,3840,3840,3840,3855,3871,3887,3903,3840,3840,3840,3840,3983,3999,4015,4031,256,3871,3887,512,512,3935,3951,256,3840,3871,3887,3903,3840,3935,3951,3967,3840,3999,4015,3840,3855,512,256,3903,3919,256,512,3967,3855,3871,3840,3903,3919,3935,3840,3967,3983,3840,3840,4031,3855,3871,1536,256,3919,3935,256,1536,3855,3871,3887,1024,3919,3935,3951,0,3983,3999,0,1024,1536,256,3887,3903,256,1536,3951,3967,3855,1024,3887,3903,3919,0,3951,3967,0,1024,4015,4031,0,0,0,0,3919,3935,3951,3967,0,0,0,0,3919,3935,3951,3967,3983,3999,4015,4031,3855,3871,3887,3903,0,0,0,0,3855,3871,3887,3903,0,0,0,0,3983,3999,4015,4031,0,3871,3887,0,0,3935,3951,0,0,3871,3887,3903,0,3935,3951,3967,0,3999,4015,0,3855,0,0,3903,3919,0,0,3967,3855,3871,0,3903,3919,3935,0,3967,3983,0,0,4031,3855,3871,0,0,3919,3935,0,0,3855,3871,3887,0,3919,3935,3951,0,3983,3999,0,0,0,0,3887,3903,0,0,3951,3967,3855,0,3887,3903,3919,0,3951,3967,0,0,4015,4031,0,0,0,0,3919,3935,3951,3967,0,0,0,0,3919,3935,3951,3967,0,0,0,0,3855,3871,3887,3903,0,0,0,0,3855,3871,3887,3903,0,0,0,0,0,0,0,0,0,3871,3887,0,0,3935,3951,0,0,0,3887,0,0,0,3951,0,0,3999,4015,0,3855,0,0,3903,3919,0,0,3967,3855,0,0,0,3919,0,0,0,3983,0,0,4031,3855,3871,0,0,3919,3935,0,0,0,3871,0,0,0,3935,0,0,3983,3999,0,0,0,0,3887,3903,0,0,3951,3967,0,0,0,3903,0,0,0,3967,0,0,4015,4031,0,0,0,0,0,0,0,0,0,0,0,0,3919,3935,3951,3967,0,0,0,0,0,0,0,0,0,0,0,0,3855,3871,3887,3903,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3887,0,0,0,3951,0,0,3999,4015,0,0,0,0,0,0,0,0,0,3855,0,0,0,3919,0,0,0,3983,0,0,4031,0,0,0,0,0,0,0,0,0,3871,0,0,0,3935,0,0,3983,3999,0,0,0,0,0,0,0,0,0,0,0,0,0,3903,0,0,0,3967,0,0,4015,4031],va=[{label:"Solved",stage:"Solved"},{label:"U",bottom:"Yellow",stage:"PLL"},{label:"U2",bottom:"Yellow",stage:"PLL"},{label:"U'",bottom:"Yellow",stage:"PLL"},{label:"D",bottom:"White",stage:"PLL"},{label:"D2",bottom:"White",stage:"PLL"},{label:"D'",bottom:"White",stage:"PLL"},{label:"F",bottom:"Blue",stage:"PLL"},{label:"F2",bottom:"Blue",stage:"PLL"},{label:"F'",bottom:"Blue",stage:"PLL"},{label:"B",bottom:"Green",stage:"PLL"},{label:"B2",bottom:"Green",stage:"PLL"},{label:"B'",bottom:"Green",stage:"PLL"},{label:"L",bottom:"Red",stage:"PLL"},{label:"L2",bottom:"Red",stage:"PLL"},{label:"L'",bottom:"Red",stage:"PLL"},{label:"R",bottom:"Orange",stage:"PLL"},{label:"R2",bottom:"Orange",stage:"PLL"},{label:"R'",bottom:"Orange",stage:"PLL"},{label:"OLL - Yellow Bottom",bottom:"Yellow",stage:"OLL"},{label:"OLL - White Bottom",bottom:"White",stage:"OLL"},{label:"OLL - Orange Bottom",bottom:"Orange",stage:"OLL"},{label:"OLL - Red Bottom",bottom:"Red",stage:"OLL"},{label:"OLL - Green Bottom",bottom:"Green",stage:"OLL"},{label:"OLL - Blue Bottom",bottom:"Blue",stage:"OLL"},{label:"F2L - Yellow Bottom",bottom:"Yellow",stage:"F2L"},{label:"F2L - White Bottom",bottom:"White",stage:"F2L"},{label:"F2L - Orange Bottom",bottom:"Orange",stage:"F2L"},{label:"F2L - Red Bottom",bottom:"Red",stage:"F2L"},{label:"F2L - Green Bottom",bottom:"Green",stage:"F2L"},{label:"F2L - Blue Bottom",bottom:"Blue",stage:"F2L"},{label:"First Layer - Yellow Bottom",bottom:"Yellow",stage:"First Layer"},{label:"First Layer - White Bottom",bottom:"White",stage:"First Layer"},{label:"First Layer - Orange Bottom",bottom:"Orange",stage:"First Layer"},{label:"First Layer - Red Bottom",bottom:"Red",stage:"First Layer"},{label:"First Layer - Green Bottom",bottom:"Green",stage:"First Layer"},{label:"First Layer - Blue Bottom",bottom:"Blue",stage:"First Layer"},{label:"Yellow Cross",bottom:"Yellow",stage:"Cross"},{label:"White Cross",bottom:"White",stage:"Cross"},{label:"Orange Cross",bottom:"Orange",stage:"Cross"},{label:"Red Cross",bottom:"Red",stage:"Cross"},{label:"Green Cross",bottom:"Green",stage:"Cross"},{label:"Blue Cross",bottom:"Blue",stage:"Cross"}],gb=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],xb=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],vb=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0],bb=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1];class Es{corners=[0,1,2,3,4,5,6,7];cornerOrientations=[0,0,0,0,0,0,0,0];edges=[0,1,2,3,4,5,6,7,8,9,10,11];edgeOrientations=[0,0,0,0,0,0,0,0,0,0,0,0];_patterns=null;constructor(){}static MOVE_INFO={F:{cornerPerm:[1,5,2,3,0,4,6,7],edgePerm:[0,9,2,3,4,8,6,7,1,5,10,11],edgeFlip:[0,1,0,0,0,1,0,0,1,1,0,0],cornerTwists:[1,2,0,0,2,1,0,0]},"F'":{cornerPerm:[4,0,2,3,5,1,6,7],edgePerm:[0,8,2,3,4,9,6,7,5,1,10,11],edgeFlip:[0,1,0,0,0,1,0,0,1,1,0,0],cornerTwists:[1,2,0,0,2,1,0,0]},B:{cornerPerm:[0,1,3,7,4,5,2,6],edgePerm:[0,1,2,11,4,5,6,10,8,9,3,7],edgeFlip:[0,0,0,1,0,0,0,1,0,0,1,1],cornerTwists:[0,0,1,2,0,0,2,1]},"B'":{cornerPerm:[0,1,6,2,4,5,7,3],edgePerm:[0,1,2,10,4,5,6,11,8,9,7,3],edgeFlip:[0,0,0,1,0,0,0,1,0,0,1,1],cornerTwists:[0,0,1,2,0,0,2,1]},R:{cornerPerm:[4,1,2,0,7,5,6,3],edgePerm:[8,1,2,3,11,5,6,7,4,9,10,0],edgeFlip:[0,0,0,0,0,0,0,0,0,0,0,0],cornerTwists:[2,0,0,1,1,0,0,2]},"R'":{cornerPerm:[3,1,2,7,0,5,6,4],edgePerm:[11,1,2,3,8,5,6,7,0,9,10,4],edgeFlip:[0,0,0,0,0,0,0,0,0,0,0,0],cornerTwists:[2,0,0,1,1,0,0,2]},L:{cornerPerm:[0,2,6,3,4,1,5,7],edgePerm:[0,1,10,3,4,5,9,7,8,2,6,11],edgeFlip:[0,0,0,0,0,0,0,0,0,0,0,0],cornerTwists:[0,1,2,0,0,2,1,0]},"L'":{cornerPerm:[0,5,1,3,4,6,2,7],edgePerm:[0,1,9,3,4,5,10,7,8,6,2,11],edgeFlip:[0,0,0,0,0,0,0,0,0,0,0,0],cornerTwists:[0,1,2,0,0,2,1,0]},U:{cornerPerm:[3,0,1,2,4,5,6,7],edgePerm:[3,0,1,2,4,5,6,7,8,9,10,11],edgeFlip:[0,0,0,0,0,0,0,0,0,0,0,0],cornerTwists:[0,0,0,0,0,0,0,0]},"U'":{cornerPerm:[1,2,3,0,4,5,6,7],edgePerm:[1,2,3,0,4,5,6,7,8,9,10,11],edgeFlip:[0,0,0,0,0,0,0,0,0,0,0,0],cornerTwists:[0,0,0,0,0,0,0,0]},D:{cornerPerm:[0,1,2,3,5,6,7,4],edgePerm:[0,1,2,3,5,6,7,4,8,9,10,11],edgeFlip:[0,0,0,0,0,0,0,0,0,0,0,0],cornerTwists:[0,0,0,0,0,0,0,0]},"D'":{cornerPerm:[0,1,2,3,7,4,5,6],edgePerm:[0,1,2,3,7,4,5,6,8,9,10,11],edgeFlip:[0,0,0,0,0,0,0,0,0,0,0,0],cornerTwists:[0,0,0,0,0,0,0,0]}};applyMove(e){this._patterns=null;const{cornerPerm:t,edgePerm:i,edgeFlip:r,cornerTwists:s}=Es.MOVE_INFO[e],o=this.corners.slice();for(let u=0;u<o.length;u++)this.corners[u]=o[t[u]];const a=this.edges.slice();for(let u=0;u<a.length;u++)this.edges[u]=a[i[u]];const l=this.cornerOrientations.slice();for(let u=0;u<l.length;u++)this.cornerOrientations[u]=(l[t[u]]+s[u])%3;const c=this.edgeOrientations.slice();for(let u=0;u<c.length;u++)this.edgeOrientations[u]=(c[i[u]]+r[u])%2}isSolved(){const e=this.corners.length;for(let i=0;i<e;i++)if(this.corners[i]!==i||this.cornerOrientations[i]!==0)return!1;const t=this.edges.length;for(let i=0;i<t;i++)if(this.edges[i]!==i||this.edgeOrientations[i]!==0)return!1;return!0}get patterns(){return this._patterns!==null?this._patterns:(this._patterns=dD(pD,this.corners,this.cornerOrientations,this.edges,this.edgeOrientations),this._patterns)}match(){const e=this.patterns;return va.filter((t,i)=>e[i])}isF2L(e){const t=this.patterns;return e===void 0?t.some((i,r)=>i&&vb[r]===1):t.some((i,r)=>i&&vb[r]===1&&e(va[r]))}isOLL(e){const t=this.patterns;return e===void 0?t.some((i,r)=>i&&xb[r]===1):t.some((i,r)=>i&&xb[r]===1&&e(va[r]))}isPLL(e){const t=this.patterns;return e===void 0?t.some((i,r)=>i&&gb[r]===1):t.some((i,r)=>i&&gb[r]===1&&e(va[r]))}isCross(e){const t=this.patterns;return e===void 0?t.some((i,r)=>i&&bb[r]===1):t.some((i,r)=>i&&bb[r]===1&&e(va[r]))}setState(e){this._patterns=null;const t=this.corners.length;for(let r=0;r<t;r++)this.corners[r]=e.corners[r],this.cornerOrientations[r]=e.cornerOrientations[r];const i=this.edges.length;for(let r=0;r<i;r++)this.edges[r]=e.edges[r],this.edgeOrientations[r]=e.edgeOrientations[r]}getState(){return new Lc(this.corners.slice(),this.cornerOrientations.slice(),this.edges.slice(),this.edgeOrientations.slice())}reset(){this._patterns=null;const e=this.corners.length;for(let i=0;i<e;i++)this.corners[i]=i,this.cornerOrientations[i]=0;const t=this.edges.length;for(let i=0;i<t;i++)this.edges[i]=i,this.edgeOrientations[i]=0}solution(){return Go.solveCoordinates(this.edgeOrientations,this.edges,this.cornerOrientations,this.corners)}toString(){return JSON.stringify(this)}}function MM(n){return n.indexOf("'")===-1?n+"'":n[0]}function jp(n){return n.map(MM).reverse()}function mD(n){const e=[];for(let t=0;t<n.length;t++){const i=n[t];if(i.indexOf("2")!==-1){const r=i.replace("2","");e.push(r),e.push(r)}else e.push(i)}return e}function yb(n){const e=new Es;return jp(n).forEach(t=>e.applyMove(t)),jp(e.solution().split(" "))}function ju(n){const e=[];let t=null;for(let i=0;i<n.length;i++)t===n[i]?(e.push(t[0]+"2"+t.substring(1)),t=null):(t!==null&&e.push(t),t=n[i]);return t!==null&&e.push(t),e}const _b={F:1,F2:2,"F'":3,B:17,B2:18,"B'":19,U:33,U2:34,"U'":35,D:49,D2:50,"D'":51,R:65,R2:66,"R'":67,L:81,L2:82,"L'":83},gD=["F","B","U","D","R","L"],xD=["","","2","'"];function vD(n,e){return(n&224)===(e&224)}function bD(n,e,t){const i=n&240,r=e&240,s=t!==void 0?t&240:240;if(i===r){const o=(e&3)+4-(n&3)&3;if(o===0)return t===void 0?[]:[t];{const a=i|o;return t===void 0?[a]:[a,t]}}else if(vD(n,e)&&i===s){const o=(t&3)+4-(n&3)&3;if(o===0)return[e];{const a=i|o;return[e,a]}}else{const o=n+2&243;return t===void 0?[o,e]:[o,e,t]}}class Wo{sequence=[];constructor(e){this.sequence=e.length===1&&e[0]===""?[]:e.map(t=>_b[t])}applyMove(e){const t=_b[e],i=this.sequence,r=i.shift(),s=i.shift();return r===void 0?i.push(t):i.unshift(...bD(t,r,s)),i.length===0}get done(){return this.sequence.length===0}toString(){return this.sequence.map(e=>gD[e>>4]+xD[e&15]).join(" ")}}class yD{sim=new Es;startState;moves;times=[];actionSubject=new nn;gyroUpdates;playingSub=null;stepIndex=0;elapsedTimeBase=0;constructor(e,t,i){this.moves=e.slice(),this.sim=new Es;for(let s=0;s<t.length;s++)this.sim.applyMove(t[s]);this.startState=this.sim.getState(),this.moves[0]=new Vo(100,e[0].value);let r=-100;for(const s of this.moves)r+=s.timestamp,this.times.push(r);this.gyroUpdates=i===void 0?[]:i.map(({dt:s,dqx:o,dqy:a,dqz:l,dqw:c})=>({dt:s,q:new At(o,a,l,c)}))}get actions(){return this.actionSubject}step(){if(this.stepIndex<this.moves.length){const e=this.moves[this.stepIndex];this.stepIndex++,this.sim.applyMove(e.value),this.actionSubject.next({type:"MOVE",move:e})}else this.actionSubject.next({type:"END"})}stepBack(){if(this.stepIndex>0){const{timestamp:e}=this.moves[this.stepIndex];this.stepIndex--;const{value:t}=this.moves[this.stepIndex],i=MM(t);this.sim.applyMove(i),this.actionSubject.next({type:"MOVE",move:new Vo(e,i)})}}emitState(){this.actionSubject.next({type:"SET_CUBE",cubeState:this.sim.getState()})}play(){if(this.actionSubject.next({type:"SET_CUBE",cubeState:this.sim.getState()}),this.playingSub?.unsubscribe(),this.stepIndex===0){const a=this.moves[0];this.actionSubject.next({type:"MOVE",move:a}),this.sim.applyMove(a.value)}const e=this.elapsedTimeBase,t=this.moves.length-1;let i=0,r=0;const s=this.gyroUpdates,o=s.length;this.playingSub=oM().subscribe(({elapsed:a})=>{const l=e+a;if(this.elapsedTimeBase=l,this.stepIndex>=t){const u=this.times[this.stepIndex];this.actionSubject.next({type:"TIME",elapsedTime:Math.min(u,l)}),l>u&&(this.playingSub?.unsubscribe(),this.playingSub=null,this.actionSubject.next({type:"END"}),this.sim.setState(this.startState),this.elapsedTimeBase=0,this.stepIndex=0);return}for(this.actionSubject.next({type:"TIME",elapsedTime:l});this.stepIndex<t&&l>this.times[this.stepIndex];){this.stepIndex++;const u=this.moves[this.stepIndex];this.actionSubject.next({type:"MOVE",move:u}),this.sim.applyMove(u.value)}let c;for(;r<a&&i<o;){const{dt:u,q:f}=s[i];r+=u,i++,c=f}c!==void 0&&this.actionSubject.next({type:"GYRO",q:c})})}pause(){this.playingSub?.unsubscribe(),this.playingSub=null}goToBeginning(){this.pause(),this.stepIndex=0,this.elapsedTimeBase=0,this.sim.setState(this.startState),this.actionSubject.next({type:"SET_CUBE",cubeState:this.startState})}}function mn(n,e){const t=typeof n=="string"?document.querySelector(n):n;if(t===null)throw new Error(`Selector ${n} didn't find an element.`);return An(t,"click").pipe(Ss(e)).pipe(_M(i=>i!==void 0))}function uo(n,e){const t=typeof n=="string"?document.querySelector(n):n;if(t===null)throw new Error(`Selector ${n} didn't find an element.`);return An(t,"click").pipe(Ss(i=>e(i.target.checked)))}var qd={exports:{}};/*! MIT License. Copyright 2015-2018 Richard Moore <me@ricmoo.com>. See LICENSE.txt. */var Mb;function _D(){return Mb||(Mb=1,(function(n,e){(function(t){function i(P){return parseInt(P)===P}function r(P){if(!i(P.length))return!1;for(var V=0;V<P.length;V++)if(!i(P[V])||P[V]<0||P[V]>255)return!1;return!0}function s(P,V){if(P.buffer&&P.name==="Uint8Array")return V&&(P.slice?P=P.slice():P=Array.prototype.slice.call(P)),P;if(Array.isArray(P)){if(!r(P))throw new Error("Array contains invalid value: "+P);return new Uint8Array(P)}if(i(P.length)&&r(P))return new Uint8Array(P);throw new Error("unsupported array-like object")}function o(P){return new Uint8Array(P)}function a(P,V,Y,Q,B){(Q!=null||B!=null)&&(P.slice?P=P.slice(Q,B):P=Array.prototype.slice.call(P,Q,B)),V.set(P,Y)}var l=(function(){function P(Y){var Q=[],B=0;for(Y=encodeURI(Y);B<Y.length;){var oe=Y.charCodeAt(B++);oe===37?(Q.push(parseInt(Y.substr(B,2),16)),B+=2):Q.push(oe)}return s(Q)}function V(Y){for(var Q=[],B=0;B<Y.length;){var oe=Y[B];oe<128?(Q.push(String.fromCharCode(oe)),B++):oe>191&&oe<224?(Q.push(String.fromCharCode((oe&31)<<6|Y[B+1]&63)),B+=2):(Q.push(String.fromCharCode((oe&15)<<12|(Y[B+1]&63)<<6|Y[B+2]&63)),B+=3)}return Q.join("")}return{toBytes:P,fromBytes:V}})(),c=(function(){function P(Q){for(var B=[],oe=0;oe<Q.length;oe+=2)B.push(parseInt(Q.substr(oe,2),16));return B}var V="0123456789abcdef";function Y(Q){for(var B=[],oe=0;oe<Q.length;oe++){var Se=Q[oe];B.push(V[(Se&240)>>4]+V[Se&15])}return B.join("")}return{toBytes:P,fromBytes:Y}})(),u={16:10,24:12,32:14},f=[1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145],h=[99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22],d=[82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125],p=[3328402341,4168907908,4000806809,4135287693,4294111757,3597364157,3731845041,2445657428,1613770832,33620227,3462883241,1445669757,3892248089,3050821474,1303096294,3967186586,2412431941,528646813,2311702848,4202528135,4026202645,2992200171,2387036105,4226871307,1101901292,3017069671,1604494077,1169141738,597466303,1403299063,3832705686,2613100635,1974974402,3791519004,1033081774,1277568618,1815492186,2118074177,4126668546,2211236943,1748251740,1369810420,3521504564,4193382664,3799085459,2883115123,1647391059,706024767,134480908,2512897874,1176707941,2646852446,806885416,932615841,168101135,798661301,235341577,605164086,461406363,3756188221,3454790438,1311188841,2142417613,3933566367,302582043,495158174,1479289972,874125870,907746093,3698224818,3025820398,1537253627,2756858614,1983593293,3084310113,2108928974,1378429307,3722699582,1580150641,327451799,2790478837,3117535592,0,3253595436,1075847264,3825007647,2041688520,3059440621,3563743934,2378943302,1740553945,1916352843,2487896798,2555137236,2958579944,2244988746,3151024235,3320835882,1336584933,3992714006,2252555205,2588757463,1714631509,293963156,2319795663,3925473552,67240454,4269768577,2689618160,2017213508,631218106,1269344483,2723238387,1571005438,2151694528,93294474,1066570413,563977660,1882732616,4059428100,1673313503,2008463041,2950355573,1109467491,537923632,3858759450,4260623118,3218264685,2177748300,403442708,638784309,3287084079,3193921505,899127202,2286175436,773265209,2479146071,1437050866,4236148354,2050833735,3362022572,3126681063,840505643,3866325909,3227541664,427917720,2655997905,2749160575,1143087718,1412049534,999329963,193497219,2353415882,3354324521,1807268051,672404540,2816401017,3160301282,369822493,2916866934,3688947771,1681011286,1949973070,336202270,2454276571,201721354,1210328172,3093060836,2680341085,3184776046,1135389935,3294782118,965841320,831886756,3554993207,4068047243,3588745010,2345191491,1849112409,3664604599,26054028,2983581028,2622377682,1235855840,3630984372,2891339514,4092916743,3488279077,3395642799,4101667470,1202630377,268961816,1874508501,4034427016,1243948399,1546530418,941366308,1470539505,1941222599,2546386513,3421038627,2715671932,3899946140,1042226977,2521517021,1639824860,227249030,260737669,3765465232,2084453954,1907733956,3429263018,2420656344,100860677,4160157185,470683154,3261161891,1781871967,2924959737,1773779408,394692241,2579611992,974986535,664706745,3655459128,3958962195,731420851,571543859,3530123707,2849626480,126783113,865375399,765172662,1008606754,361203602,3387549984,2278477385,2857719295,1344809080,2782912378,59542671,1503764984,160008576,437062935,1707065306,3622233649,2218934982,3496503480,2185314755,697932208,1512910199,504303377,2075177163,2824099068,1841019862,739644986],g=[2781242211,2230877308,2582542199,2381740923,234877682,3184946027,2984144751,1418839493,1348481072,50462977,2848876391,2102799147,434634494,1656084439,3863849899,2599188086,1167051466,2636087938,1082771913,2281340285,368048890,3954334041,3381544775,201060592,3963727277,1739838676,4250903202,3930435503,3206782108,4149453988,2531553906,1536934080,3262494647,484572669,2923271059,1783375398,1517041206,1098792767,49674231,1334037708,1550332980,4098991525,886171109,150598129,2481090929,1940642008,1398944049,1059722517,201851908,1385547719,1699095331,1587397571,674240536,2704774806,252314885,3039795866,151914247,908333586,2602270848,1038082786,651029483,1766729511,3447698098,2682942837,454166793,2652734339,1951935532,775166490,758520603,3000790638,4004797018,4217086112,4137964114,1299594043,1639438038,3464344499,2068982057,1054729187,1901997871,2534638724,4121318227,1757008337,0,750906861,1614815264,535035132,3363418545,3988151131,3201591914,1183697867,3647454910,1265776953,3734260298,3566750796,3903871064,1250283471,1807470800,717615087,3847203498,384695291,3313910595,3617213773,1432761139,2484176261,3481945413,283769337,100925954,2180939647,4037038160,1148730428,3123027871,3813386408,4087501137,4267549603,3229630528,2315620239,2906624658,3156319645,1215313976,82966005,3747855548,3245848246,1974459098,1665278241,807407632,451280895,251524083,1841287890,1283575245,337120268,891687699,801369324,3787349855,2721421207,3431482436,959321879,1469301956,4065699751,2197585534,1199193405,2898814052,3887750493,724703513,2514908019,2696962144,2551808385,3516813135,2141445340,1715741218,2119445034,2872807568,2198571144,3398190662,700968686,3547052216,1009259540,2041044702,3803995742,487983883,1991105499,1004265696,1449407026,1316239930,504629770,3683797321,168560134,1816667172,3837287516,1570751170,1857934291,4014189740,2797888098,2822345105,2754712981,936633572,2347923833,852879335,1133234376,1500395319,3084545389,2348912013,1689376213,3533459022,3762923945,3034082412,4205598294,133428468,634383082,2949277029,2398386810,3913789102,403703816,3580869306,2297460856,1867130149,1918643758,607656988,4049053350,3346248884,1368901318,600565992,2090982877,2632479860,557719327,3717614411,3697393085,2249034635,2232388234,2430627952,1115438654,3295786421,2865522278,3633334344,84280067,33027830,303828494,2747425121,1600795957,4188952407,3496589753,2434238086,1486471617,658119965,3106381470,953803233,334231800,3005978776,857870609,3151128937,1890179545,2298973838,2805175444,3056442267,574365214,2450884487,550103529,1233637070,4289353045,2018519080,2057691103,2399374476,4166623649,2148108681,387583245,3664101311,836232934,3330556482,3100665960,3280093505,2955516313,2002398509,287182607,3413881008,4238890068,3597515707,975967766],m=[1671808611,2089089148,2006576759,2072901243,4061003762,1807603307,1873927791,3310653893,810573872,16974337,1739181671,729634347,4263110654,3613570519,2883997099,1989864566,3393556426,2191335298,3376449993,2106063485,4195741690,1508618841,1204391495,4027317232,2917941677,3563566036,2734514082,2951366063,2629772188,2767672228,1922491506,3227229120,3082974647,4246528509,2477669779,644500518,911895606,1061256767,4144166391,3427763148,878471220,2784252325,3845444069,4043897329,1905517169,3631459288,827548209,356461077,67897348,3344078279,593839651,3277757891,405286936,2527147926,84871685,2595565466,118033927,305538066,2157648768,3795705826,3945188843,661212711,2999812018,1973414517,152769033,2208177539,745822252,439235610,455947803,1857215598,1525593178,2700827552,1391895634,994932283,3596728278,3016654259,695947817,3812548067,795958831,2224493444,1408607827,3513301457,0,3979133421,543178784,4229948412,2982705585,1542305371,1790891114,3410398667,3201918910,961245753,1256100938,1289001036,1491644504,3477767631,3496721360,4012557807,2867154858,4212583931,1137018435,1305975373,861234739,2241073541,1171229253,4178635257,33948674,2139225727,1357946960,1011120188,2679776671,2833468328,1374921297,2751356323,1086357568,2408187279,2460827538,2646352285,944271416,4110742005,3168756668,3066132406,3665145818,560153121,271589392,4279952895,4077846003,3530407890,3444343245,202643468,322250259,3962553324,1608629855,2543990167,1154254916,389623319,3294073796,2817676711,2122513534,1028094525,1689045092,1575467613,422261273,1939203699,1621147744,2174228865,1339137615,3699352540,577127458,712922154,2427141008,2290289544,1187679302,3995715566,3100863416,339486740,3732514782,1591917662,186455563,3681988059,3762019296,844522546,978220090,169743370,1239126601,101321734,611076132,1558493276,3260915650,3547250131,2901361580,1655096418,2443721105,2510565781,3828863972,2039214713,3878868455,3359869896,928607799,1840765549,2374762893,3580146133,1322425422,2850048425,1823791212,1459268694,4094161908,3928346602,1706019429,2056189050,2934523822,135794696,3134549946,2022240376,628050469,779246638,472135708,2800834470,3032970164,3327236038,3894660072,3715932637,1956440180,522272287,1272813131,3185336765,2340818315,2323976074,1888542832,1044544574,3049550261,1722469478,1222152264,50660867,4127324150,236067854,1638122081,895445557,1475980887,3117443513,2257655686,3243809217,489110045,2662934430,3778599393,4162055160,2561878936,288563729,1773916777,3648039385,2391345038,2493985684,2612407707,505560094,2274497927,3911240169,3460925390,1442818645,678973480,3749357023,2358182796,2717407649,2306869641,219617805,3218761151,3862026214,1120306242,1756942440,1103331905,2578459033,762796589,252780047,2966125488,1425844308,3151392187,372911126],v=[1667474886,2088535288,2004326894,2071694838,4075949567,1802223062,1869591006,3318043793,808472672,16843522,1734846926,724270422,4278065639,3621216949,2880169549,1987484396,3402253711,2189597983,3385409673,2105378810,4210693615,1499065266,1195886990,4042263547,2913856577,3570689971,2728590687,2947541573,2627518243,2762274643,1920112356,3233831835,3082273397,4261223649,2475929149,640051788,909531756,1061110142,4160160501,3435941763,875846760,2779116625,3857003729,4059105529,1903268834,3638064043,825316194,353713962,67374088,3351728789,589522246,3284360861,404236336,2526454071,84217610,2593830191,117901582,303183396,2155911963,3806477791,3958056653,656894286,2998062463,1970642922,151591698,2206440989,741110872,437923380,454765878,1852748508,1515908788,2694904667,1381168804,993742198,3604373943,3014905469,690584402,3823320797,791638366,2223281939,1398011302,3520161977,0,3991743681,538992704,4244381667,2981218425,1532751286,1785380564,3419096717,3200178535,960056178,1246420628,1280103576,1482221744,3486468741,3503319995,4025428677,2863326543,4227536621,1128514950,1296947098,859002214,2240123921,1162203018,4193849577,33687044,2139062782,1347481760,1010582648,2678045221,2829640523,1364325282,2745433693,1077985408,2408548869,2459086143,2644360225,943212656,4126475505,3166494563,3065430391,3671750063,555836226,269496352,4294908645,4092792573,3537006015,3452783745,202118168,320025894,3974901699,1600119230,2543297077,1145359496,387397934,3301201811,2812801621,2122220284,1027426170,1684319432,1566435258,421079858,1936954854,1616945344,2172753945,1330631070,3705438115,572679748,707427924,2425400123,2290647819,1179044492,4008585671,3099120491,336870440,3739122087,1583276732,185277718,3688593069,3772791771,842159716,976899700,168435220,1229577106,101059084,606366792,1549591736,3267517855,3553849021,2897014595,1650632388,2442242105,2509612081,3840161747,2038008818,3890688725,3368567691,926374254,1835907034,2374863873,3587531953,1313788572,2846482505,1819063512,1448540844,4109633523,3941213647,1701162954,2054852340,2930698567,134748176,3132806511,2021165296,623210314,774795868,471606328,2795958615,3031746419,3334885783,3907527627,3722280097,1953799400,522133822,1263263126,3183336545,2341176845,2324333839,1886425312,1044267644,3048588401,1718004428,1212733584,50529542,4143317495,235803164,1633788866,892690282,1465383342,3115962473,2256965911,3250673817,488449850,2661202215,3789633753,4177007595,2560144171,286339874,1768537042,3654906025,2391705863,2492770099,2610673197,505291324,2273808917,3924369609,3469625735,1431699370,673740880,3755965093,2358021891,2711746649,2307489801,218961690,3217021541,3873845719,1111672452,1751693520,1094828930,2576986153,757954394,252645662,2964376443,1414855848,3149649517,370555436],x=[1374988112,2118214995,437757123,975658646,1001089995,530400753,2902087851,1273168787,540080725,2910219766,2295101073,4110568485,1340463100,3307916247,641025152,3043140495,3736164937,632953703,1172967064,1576976609,3274667266,2169303058,2370213795,1809054150,59727847,361929877,3211623147,2505202138,3569255213,1484005843,1239443753,2395588676,1975683434,4102977912,2572697195,666464733,3202437046,4035489047,3374361702,2110667444,1675577880,3843699074,2538681184,1649639237,2976151520,3144396420,4269907996,4178062228,1883793496,2403728665,2497604743,1383856311,2876494627,1917518562,3810496343,1716890410,3001755655,800440835,2261089178,3543599269,807962610,599762354,33778362,3977675356,2328828971,2809771154,4077384432,1315562145,1708848333,101039829,3509871135,3299278474,875451293,2733856160,92987698,2767645557,193195065,1080094634,1584504582,3178106961,1042385657,2531067453,3711829422,1306967366,2438237621,1908694277,67556463,1615861247,429456164,3602770327,2302690252,1742315127,2968011453,126454664,3877198648,2043211483,2709260871,2084704233,4169408201,0,159417987,841739592,504459436,1817866830,4245618683,260388950,1034867998,908933415,168810852,1750902305,2606453969,607530554,202008497,2472011535,3035535058,463180190,2160117071,1641816226,1517767529,470948374,3801332234,3231722213,1008918595,303765277,235474187,4069246893,766945465,337553864,1475418501,2943682380,4003061179,2743034109,4144047775,1551037884,1147550661,1543208500,2336434550,3408119516,3069049960,3102011747,3610369226,1113818384,328671808,2227573024,2236228733,3535486456,2935566865,3341394285,496906059,3702665459,226906860,2009195472,733156972,2842737049,294930682,1206477858,2835123396,2700099354,1451044056,573804783,2269728455,3644379585,2362090238,2564033334,2801107407,2776292904,3669462566,1068351396,742039012,1350078989,1784663195,1417561698,4136440770,2430122216,775550814,2193862645,2673705150,1775276924,1876241833,3475313331,3366754619,270040487,3902563182,3678124923,3441850377,1851332852,3969562369,2203032232,3868552805,2868897406,566021896,4011190502,3135740889,1248802510,3936291284,699432150,832877231,708780849,3332740144,899835584,1951317047,4236429990,3767586992,866637845,4043610186,1106041591,2144161806,395441711,1984812685,1139781709,3433712980,3835036895,2664543715,1282050075,3240894392,1181045119,2640243204,25965917,4203181171,4211818798,3009879386,2463879762,3910161971,1842759443,2597806476,933301370,1509430414,3943906441,3467192302,3076639029,3776767469,2051518780,2631065433,1441952575,404016761,1942435775,1408749034,1610459739,3745345300,2017778566,3400528769,3110650942,941896748,3265478751,371049330,3168937228,675039627,4279080257,967311729,135050206,3635733660,1683407248,2076935265,3576870512,1215061108,3501741890],M=[1347548327,1400783205,3273267108,2520393566,3409685355,4045380933,2880240216,2471224067,1428173050,4138563181,2441661558,636813900,4233094615,3620022987,2149987652,2411029155,1239331162,1730525723,2554718734,3781033664,46346101,310463728,2743944855,3328955385,3875770207,2501218972,3955191162,3667219033,768917123,3545789473,692707433,1150208456,1786102409,2029293177,1805211710,3710368113,3065962831,401639597,1724457132,3028143674,409198410,2196052529,1620529459,1164071807,3769721975,2226875310,486441376,2499348523,1483753576,428819965,2274680428,3075636216,598438867,3799141122,1474502543,711349675,129166120,53458370,2592523643,2782082824,4063242375,2988687269,3120694122,1559041666,730517276,2460449204,4042459122,2706270690,3446004468,3573941694,533804130,2328143614,2637442643,2695033685,839224033,1973745387,957055980,2856345839,106852767,1371368976,4181598602,1033297158,2933734917,1179510461,3046200461,91341917,1862534868,4284502037,605657339,2547432937,3431546947,2003294622,3182487618,2282195339,954669403,3682191598,1201765386,3917234703,3388507166,0,2198438022,1211247597,2887651696,1315723890,4227665663,1443857720,507358933,657861945,1678381017,560487590,3516619604,975451694,2970356327,261314535,3535072918,2652609425,1333838021,2724322336,1767536459,370938394,182621114,3854606378,1128014560,487725847,185469197,2918353863,3106780840,3356761769,2237133081,1286567175,3152976349,4255350624,2683765030,3160175349,3309594171,878443390,1988838185,3704300486,1756818940,1673061617,3403100636,272786309,1075025698,545572369,2105887268,4174560061,296679730,1841768865,1260232239,4091327024,3960309330,3497509347,1814803222,2578018489,4195456072,575138148,3299409036,446754879,3629546796,4011996048,3347532110,3252238545,4270639778,915985419,3483825537,681933534,651868046,2755636671,3828103837,223377554,2607439820,1649704518,3270937875,3901806776,1580087799,4118987695,3198115200,2087309459,2842678573,3016697106,1003007129,2802849917,1860738147,2077965243,164439672,4100872472,32283319,2827177882,1709610350,2125135846,136428751,3874428392,3652904859,3460984630,3572145929,3593056380,2939266226,824852259,818324884,3224740454,930369212,2801566410,2967507152,355706840,1257309336,4148292826,243256656,790073846,2373340630,1296297904,1422699085,3756299780,3818836405,457992840,3099667487,2135319889,77422314,1560382517,1945798516,788204353,1521706781,1385356242,870912086,325965383,2358957921,2050466060,2388260884,2313884476,4006521127,901210569,3990953189,1014646705,1503449823,1062597235,2031621326,3212035895,3931371469,1533017514,350174575,2256028891,2177544179,1052338372,741876788,1606591296,1914052035,213705253,2334669897,1107234197,1899603969,3725069491,2631447780,2422494913,1635502980,1893020342,1950903388,1120974935],b=[2807058932,1699970625,2764249623,1586903591,1808481195,1173430173,1487645946,59984867,4199882800,1844882806,1989249228,1277555970,3623636965,3419915562,1149249077,2744104290,1514790577,459744698,244860394,3235995134,1963115311,4027744588,2544078150,4190530515,1608975247,2627016082,2062270317,1507497298,2200818878,567498868,1764313568,3359936201,2305455554,2037970062,1047239e3,1910319033,1337376481,2904027272,2892417312,984907214,1243112415,830661914,861968209,2135253587,2011214180,2927934315,2686254721,731183368,1750626376,4246310725,1820824798,4172763771,3542330227,48394827,2404901663,2871682645,671593195,3254988725,2073724613,145085239,2280796200,2779915199,1790575107,2187128086,472615631,3029510009,4075877127,3802222185,4107101658,3201631749,1646252340,4270507174,1402811438,1436590835,3778151818,3950355702,3963161475,4020912224,2667994737,273792366,2331590177,104699613,95345982,3175501286,2377486676,1560637892,3564045318,369057872,4213447064,3919042237,1137477952,2658625497,1119727848,2340947849,1530455833,4007360968,172466556,266959938,516552836,0,2256734592,3980931627,1890328081,1917742170,4294704398,945164165,3575528878,958871085,3647212047,2787207260,1423022939,775562294,1739656202,3876557655,2530391278,2443058075,3310321856,547512796,1265195639,437656594,3121275539,719700128,3762502690,387781147,218828297,3350065803,2830708150,2848461854,428169201,122466165,3720081049,1627235199,648017665,4122762354,1002783846,2117360635,695634755,3336358691,4234721005,4049844452,3704280881,2232435299,574624663,287343814,612205898,1039717051,840019705,2708326185,793451934,821288114,1391201670,3822090177,376187827,3113855344,1224348052,1679968233,2361698556,1058709744,752375421,2431590963,1321699145,3519142200,2734591178,188127444,2177869557,3727205754,2384911031,3215212461,2648976442,2450346104,3432737375,1180849278,331544205,3102249176,4150144569,2952102595,2159976285,2474404304,766078933,313773861,2570832044,2108100632,1668212892,3145456443,2013908262,418672217,3070356634,2594734927,1852171925,3867060991,3473416636,3907448597,2614737639,919489135,164948639,2094410160,2997825956,590424639,2486224549,1723872674,3157750862,3399941250,3501252752,3625268135,2555048196,3673637356,1343127501,4130281361,3599595085,2957853679,1297403050,81781910,3051593425,2283490410,532201772,1367295589,3926170974,895287692,1953757831,1093597963,492483431,3528626907,1446242576,1192455638,1636604631,209336225,344873464,1015671571,669961897,3375740769,3857572124,2973530695,3747192018,1933530610,3464042516,935293895,3454686199,2858115069,1863638845,3683022916,4085369519,3292445032,875313188,1080017571,3279033885,621591778,1233856572,2504130317,24197544,3017672716,3835484340,3247465558,2220981195,3060847922,1551124588,1463996600],w=[4104605777,1097159550,396673818,660510266,2875968315,2638606623,4200115116,3808662347,821712160,1986918061,3430322568,38544885,3856137295,718002117,893681702,1654886325,2975484382,3122358053,3926825029,4274053469,796197571,1290801793,1184342925,3556361835,2405426947,2459735317,1836772287,1381620373,3196267988,1948373848,3764988233,3385345166,3263785589,2390325492,1480485785,3111247143,3780097726,2293045232,548169417,3459953789,3746175075,439452389,1362321559,1400849762,1685577905,1806599355,2174754046,137073913,1214797936,1174215055,3731654548,2079897426,1943217067,1258480242,529487843,1437280870,3945269170,3049390895,3313212038,923313619,679998e3,3215307299,57326082,377642221,3474729866,2041877159,133361907,1776460110,3673476453,96392454,878845905,2801699524,777231668,4082475170,2330014213,4142626212,2213296395,1626319424,1906247262,1846563261,562755902,3708173718,1040559837,3871163981,1418573201,3294430577,114585348,1343618912,2566595609,3186202582,1078185097,3651041127,3896688048,2307622919,425408743,3371096953,2081048481,1108339068,2216610296,0,2156299017,736970802,292596766,1517440620,251657213,2235061775,2933202493,758720310,265905162,1554391400,1532285339,908999204,174567692,1474760595,4002861748,2610011675,3234156416,3693126241,2001430874,303699484,2478443234,2687165888,585122620,454499602,151849742,2345119218,3064510765,514443284,4044981591,1963412655,2581445614,2137062819,19308535,1928707164,1715193156,4219352155,1126790795,600235211,3992742070,3841024952,836553431,1669664834,2535604243,3323011204,1243905413,3141400786,4180808110,698445255,2653899549,2989552604,2253581325,3252932727,3004591147,1891211689,2487810577,3915653703,4237083816,4030667424,2100090966,865136418,1229899655,953270745,3399679628,3557504664,4118925222,2061379749,3079546586,2915017791,983426092,2022837584,1607244650,2118541908,2366882550,3635996816,972512814,3283088770,1568718495,3499326569,3576539503,621982671,2895723464,410887952,2623762152,1002142683,645401037,1494807662,2595684844,1335535747,2507040230,4293295786,3167684641,367585007,3885750714,1865862730,2668221674,2960971305,2763173681,1059270954,2777952454,2724642869,1320957812,2194319100,2429595872,2815956275,77089521,3973773121,3444575871,2448830231,1305906550,4021308739,2857194700,2516901860,3518358430,1787304780,740276417,1699839814,1592394909,2352307457,2272556026,188821243,1729977011,3687994002,274084841,3594982253,3613494426,2701949495,4162096729,322734571,2837966542,1640576439,484830689,1202797690,3537852828,4067639125,349075736,3342319475,4157467219,4255800159,1030690015,1155237496,2951971274,1757691577,607398968,2738905026,499347990,3794078908,1011452712,227885567,2818666809,213114376,3034881240,1455525988,3414450555,850817237,1817998408,3092726480],y=[0,235474187,470948374,303765277,941896748,908933415,607530554,708780849,1883793496,2118214995,1817866830,1649639237,1215061108,1181045119,1417561698,1517767529,3767586992,4003061179,4236429990,4069246893,3635733660,3602770327,3299278474,3400528769,2430122216,2664543715,2362090238,2193862645,2835123396,2801107407,3035535058,3135740889,3678124923,3576870512,3341394285,3374361702,3810496343,3977675356,4279080257,4043610186,2876494627,2776292904,3076639029,3110650942,2472011535,2640243204,2403728665,2169303058,1001089995,899835584,666464733,699432150,59727847,226906860,530400753,294930682,1273168787,1172967064,1475418501,1509430414,1942435775,2110667444,1876241833,1641816226,2910219766,2743034109,2976151520,3211623147,2505202138,2606453969,2302690252,2269728455,3711829422,3543599269,3240894392,3475313331,3843699074,3943906441,4178062228,4144047775,1306967366,1139781709,1374988112,1610459739,1975683434,2076935265,1775276924,1742315127,1034867998,866637845,566021896,800440835,92987698,193195065,429456164,395441711,1984812685,2017778566,1784663195,1683407248,1315562145,1080094634,1383856311,1551037884,101039829,135050206,437757123,337553864,1042385657,807962610,573804783,742039012,2531067453,2564033334,2328828971,2227573024,2935566865,2700099354,3001755655,3168937228,3868552805,3902563182,4203181171,4102977912,3736164937,3501741890,3265478751,3433712980,1106041591,1340463100,1576976609,1408749034,2043211483,2009195472,1708848333,1809054150,832877231,1068351396,766945465,599762354,159417987,126454664,361929877,463180190,2709260871,2943682380,3178106961,3009879386,2572697195,2538681184,2236228733,2336434550,3509871135,3745345300,3441850377,3274667266,3910161971,3877198648,4110568485,4211818798,2597806476,2497604743,2261089178,2295101073,2733856160,2902087851,3202437046,2968011453,3936291284,3835036895,4136440770,4169408201,3535486456,3702665459,3467192302,3231722213,2051518780,1951317047,1716890410,1750902305,1113818384,1282050075,1584504582,1350078989,168810852,67556463,371049330,404016761,841739592,1008918595,775550814,540080725,3969562369,3801332234,4035489047,4269907996,3569255213,3669462566,3366754619,3332740144,2631065433,2463879762,2160117071,2395588676,2767645557,2868897406,3102011747,3069049960,202008497,33778362,270040487,504459436,875451293,975658646,675039627,641025152,2084704233,1917518562,1615861247,1851332852,1147550661,1248802510,1484005843,1451044056,933301370,967311729,733156972,632953703,260388950,25965917,328671808,496906059,1206477858,1239443753,1543208500,1441952575,2144161806,1908694277,1675577880,1842759443,3610369226,3644379585,3408119516,3307916247,4011190502,3776767469,4077384432,4245618683,2809771154,2842737049,3144396420,3043140495,2673705150,2438237621,2203032232,2370213795],_=[0,185469197,370938394,487725847,741876788,657861945,975451694,824852259,1483753576,1400783205,1315723890,1164071807,1950903388,2135319889,1649704518,1767536459,2967507152,3152976349,2801566410,2918353863,2631447780,2547432937,2328143614,2177544179,3901806776,3818836405,4270639778,4118987695,3299409036,3483825537,3535072918,3652904859,2077965243,1893020342,1841768865,1724457132,1474502543,1559041666,1107234197,1257309336,598438867,681933534,901210569,1052338372,261314535,77422314,428819965,310463728,3409685355,3224740454,3710368113,3593056380,3875770207,3960309330,4045380933,4195456072,2471224067,2554718734,2237133081,2388260884,3212035895,3028143674,2842678573,2724322336,4138563181,4255350624,3769721975,3955191162,3667219033,3516619604,3431546947,3347532110,2933734917,2782082824,3099667487,3016697106,2196052529,2313884476,2499348523,2683765030,1179510461,1296297904,1347548327,1533017514,1786102409,1635502980,2087309459,2003294622,507358933,355706840,136428751,53458370,839224033,957055980,605657339,790073846,2373340630,2256028891,2607439820,2422494913,2706270690,2856345839,3075636216,3160175349,3573941694,3725069491,3273267108,3356761769,4181598602,4063242375,4011996048,3828103837,1033297158,915985419,730517276,545572369,296679730,446754879,129166120,213705253,1709610350,1860738147,1945798516,2029293177,1239331162,1120974935,1606591296,1422699085,4148292826,4233094615,3781033664,3931371469,3682191598,3497509347,3446004468,3328955385,2939266226,2755636671,3106780840,2988687269,2198438022,2282195339,2501218972,2652609425,1201765386,1286567175,1371368976,1521706781,1805211710,1620529459,2105887268,1988838185,533804130,350174575,164439672,46346101,870912086,954669403,636813900,788204353,2358957921,2274680428,2592523643,2441661558,2695033685,2880240216,3065962831,3182487618,3572145929,3756299780,3270937875,3388507166,4174560061,4091327024,4006521127,3854606378,1014646705,930369212,711349675,560487590,272786309,457992840,106852767,223377554,1678381017,1862534868,1914052035,2031621326,1211247597,1128014560,1580087799,1428173050,32283319,182621114,401639597,486441376,768917123,651868046,1003007129,818324884,1503449823,1385356242,1333838021,1150208456,1973745387,2125135846,1673061617,1756818940,2970356327,3120694122,2802849917,2887651696,2637442643,2520393566,2334669897,2149987652,3917234703,3799141122,4284502037,4100872472,3309594171,3460984630,3545789473,3629546796,2050466060,1899603969,1814803222,1730525723,1443857720,1560382517,1075025698,1260232239,575138148,692707433,878443390,1062597235,243256656,91341917,409198410,325965383,3403100636,3252238545,3704300486,3620022987,3874428392,3990953189,4042459122,4227665663,2460449204,2578018489,2226875310,2411029155,3198115200,3046200461,2827177882,2743944855],S=[0,218828297,437656594,387781147,875313188,958871085,775562294,590424639,1750626376,1699970625,1917742170,2135253587,1551124588,1367295589,1180849278,1265195639,3501252752,3720081049,3399941250,3350065803,3835484340,3919042237,4270507174,4085369519,3102249176,3051593425,2734591178,2952102595,2361698556,2177869557,2530391278,2614737639,3145456443,3060847922,2708326185,2892417312,2404901663,2187128086,2504130317,2555048196,3542330227,3727205754,3375740769,3292445032,3876557655,3926170974,4246310725,4027744588,1808481195,1723872674,1910319033,2094410160,1608975247,1391201670,1173430173,1224348052,59984867,244860394,428169201,344873464,935293895,984907214,766078933,547512796,1844882806,1627235199,2011214180,2062270317,1507497298,1423022939,1137477952,1321699145,95345982,145085239,532201772,313773861,830661914,1015671571,731183368,648017665,3175501286,2957853679,2807058932,2858115069,2305455554,2220981195,2474404304,2658625497,3575528878,3625268135,3473416636,3254988725,3778151818,3963161475,4213447064,4130281361,3599595085,3683022916,3432737375,3247465558,3802222185,4020912224,4172763771,4122762354,3201631749,3017672716,2764249623,2848461854,2331590177,2280796200,2431590963,2648976442,104699613,188127444,472615631,287343814,840019705,1058709744,671593195,621591778,1852171925,1668212892,1953757831,2037970062,1514790577,1463996600,1080017571,1297403050,3673637356,3623636965,3235995134,3454686199,4007360968,3822090177,4107101658,4190530515,2997825956,3215212461,2830708150,2779915199,2256734592,2340947849,2627016082,2443058075,172466556,122466165,273792366,492483431,1047239e3,861968209,612205898,695634755,1646252340,1863638845,2013908262,1963115311,1446242576,1530455833,1277555970,1093597963,1636604631,1820824798,2073724613,1989249228,1436590835,1487645946,1337376481,1119727848,164948639,81781910,331544205,516552836,1039717051,821288114,669961897,719700128,2973530695,3157750862,2871682645,2787207260,2232435299,2283490410,2667994737,2450346104,3647212047,3564045318,3279033885,3464042516,3980931627,3762502690,4150144569,4199882800,3070356634,3121275539,2904027272,2686254721,2200818878,2384911031,2570832044,2486224549,3747192018,3528626907,3310321856,3359936201,3950355702,3867060991,4049844452,4234721005,1739656202,1790575107,2108100632,1890328081,1402811438,1586903591,1233856572,1149249077,266959938,48394827,369057872,418672217,1002783846,919489135,567498868,752375421,209336225,24197544,376187827,459744698,945164165,895287692,574624663,793451934,1679968233,1764313568,2117360635,1933530610,1343127501,1560637892,1243112415,1192455638,3704280881,3519142200,3336358691,3419915562,3907448597,3857572124,4075877127,4294704398,3029510009,3113855344,2927934315,2744104290,2159976285,2377486676,2594734927,2544078150],E=[0,151849742,303699484,454499602,607398968,758720310,908999204,1059270954,1214797936,1097159550,1517440620,1400849762,1817998408,1699839814,2118541908,2001430874,2429595872,2581445614,2194319100,2345119218,3034881240,3186202582,2801699524,2951971274,3635996816,3518358430,3399679628,3283088770,4237083816,4118925222,4002861748,3885750714,1002142683,850817237,698445255,548169417,529487843,377642221,227885567,77089521,1943217067,2061379749,1640576439,1757691577,1474760595,1592394909,1174215055,1290801793,2875968315,2724642869,3111247143,2960971305,2405426947,2253581325,2638606623,2487810577,3808662347,3926825029,4044981591,4162096729,3342319475,3459953789,3576539503,3693126241,1986918061,2137062819,1685577905,1836772287,1381620373,1532285339,1078185097,1229899655,1040559837,923313619,740276417,621982671,439452389,322734571,137073913,19308535,3871163981,4021308739,4104605777,4255800159,3263785589,3414450555,3499326569,3651041127,2933202493,2815956275,3167684641,3049390895,2330014213,2213296395,2566595609,2448830231,1305906550,1155237496,1607244650,1455525988,1776460110,1626319424,2079897426,1928707164,96392454,213114376,396673818,514443284,562755902,679998e3,865136418,983426092,3708173718,3557504664,3474729866,3323011204,4180808110,4030667424,3945269170,3794078908,2507040230,2623762152,2272556026,2390325492,2975484382,3092726480,2738905026,2857194700,3973773121,3856137295,4274053469,4157467219,3371096953,3252932727,3673476453,3556361835,2763173681,2915017791,3064510765,3215307299,2156299017,2307622919,2459735317,2610011675,2081048481,1963412655,1846563261,1729977011,1480485785,1362321559,1243905413,1126790795,878845905,1030690015,645401037,796197571,274084841,425408743,38544885,188821243,3613494426,3731654548,3313212038,3430322568,4082475170,4200115116,3780097726,3896688048,2668221674,2516901860,2366882550,2216610296,3141400786,2989552604,2837966542,2687165888,1202797690,1320957812,1437280870,1554391400,1669664834,1787304780,1906247262,2022837584,265905162,114585348,499347990,349075736,736970802,585122620,972512814,821712160,2595684844,2478443234,2293045232,2174754046,3196267988,3079546586,2895723464,2777952454,3537852828,3687994002,3234156416,3385345166,4142626212,4293295786,3841024952,3992742070,174567692,57326082,410887952,292596766,777231668,660510266,1011452712,893681702,1108339068,1258480242,1343618912,1494807662,1715193156,1865862730,1948373848,2100090966,2701949495,2818666809,3004591147,3122358053,2235061775,2352307457,2535604243,2653899549,3915653703,3764988233,4219352155,4067639125,3444575871,3294430577,3746175075,3594982253,836553431,953270745,600235211,718002117,367585007,484830689,133361907,251657213,2041877159,1891211689,1806599355,1654886325,1568718495,1418573201,1335535747,1184342925];function R(P){for(var V=[],Y=0;Y<P.length;Y+=4)V.push(P[Y]<<24|P[Y+1]<<16|P[Y+2]<<8|P[Y+3]);return V}var I=function(P){if(!(this instanceof I))throw Error("AES must be instanitated with `new`");Object.defineProperty(this,"key",{value:s(P,!0)}),this._prepare()};I.prototype._prepare=function(){var P=u[this.key.length];if(P==null)throw new Error("invalid key size (must be 16, 24 or 32 bytes)");this._Ke=[],this._Kd=[];for(var V=0;V<=P;V++)this._Ke.push([0,0,0,0]),this._Kd.push([0,0,0,0]);for(var Y=(P+1)*4,Q=this.key.length/4,B=R(this.key),oe,V=0;V<Q;V++)oe=V>>2,this._Ke[oe][V%4]=B[V],this._Kd[P-oe][V%4]=B[V];for(var Se=0,we=Q,ye;we<Y;){if(ye=B[Q-1],B[0]^=h[ye>>16&255]<<24^h[ye>>8&255]<<16^h[ye&255]<<8^h[ye>>24&255]^f[Se]<<24,Se+=1,Q!=8)for(var V=1;V<Q;V++)B[V]^=B[V-1];else{for(var V=1;V<Q/2;V++)B[V]^=B[V-1];ye=B[Q/2-1],B[Q/2]^=h[ye&255]^h[ye>>8&255]<<8^h[ye>>16&255]<<16^h[ye>>24&255]<<24;for(var V=Q/2+1;V<Q;V++)B[V]^=B[V-1]}for(var V=0,_e,Ie;V<Q&&we<Y;)_e=we>>2,Ie=we%4,this._Ke[_e][Ie]=B[V],this._Kd[P-_e][Ie]=B[V++],we++}for(var _e=1;_e<P;_e++)for(var Ie=0;Ie<4;Ie++)ye=this._Kd[_e][Ie],this._Kd[_e][Ie]=y[ye>>24&255]^_[ye>>16&255]^S[ye>>8&255]^E[ye&255]},I.prototype.encrypt=function(P){if(P.length!=16)throw new Error("invalid plaintext size (must be 16 bytes)");for(var V=this._Ke.length-1,Y=[0,0,0,0],Q=R(P),B=0;B<4;B++)Q[B]^=this._Ke[0][B];for(var oe=1;oe<V;oe++){for(var B=0;B<4;B++)Y[B]=p[Q[B]>>24&255]^g[Q[(B+1)%4]>>16&255]^m[Q[(B+2)%4]>>8&255]^v[Q[(B+3)%4]&255]^this._Ke[oe][B];Q=Y.slice()}for(var Se=o(16),we,B=0;B<4;B++)we=this._Ke[V][B],Se[4*B]=(h[Q[B]>>24&255]^we>>24)&255,Se[4*B+1]=(h[Q[(B+1)%4]>>16&255]^we>>16)&255,Se[4*B+2]=(h[Q[(B+2)%4]>>8&255]^we>>8)&255,Se[4*B+3]=(h[Q[(B+3)%4]&255]^we)&255;return Se},I.prototype.decrypt=function(P){if(P.length!=16)throw new Error("invalid ciphertext size (must be 16 bytes)");for(var V=this._Kd.length-1,Y=[0,0,0,0],Q=R(P),B=0;B<4;B++)Q[B]^=this._Kd[0][B];for(var oe=1;oe<V;oe++){for(var B=0;B<4;B++)Y[B]=x[Q[B]>>24&255]^M[Q[(B+3)%4]>>16&255]^b[Q[(B+2)%4]>>8&255]^w[Q[(B+1)%4]&255]^this._Kd[oe][B];Q=Y.slice()}for(var Se=o(16),we,B=0;B<4;B++)we=this._Kd[V][B],Se[4*B]=(d[Q[B]>>24&255]^we>>24)&255,Se[4*B+1]=(d[Q[(B+3)%4]>>16&255]^we>>16)&255,Se[4*B+2]=(d[Q[(B+2)%4]>>8&255]^we>>8)&255,Se[4*B+3]=(d[Q[(B+1)%4]&255]^we)&255;return Se};var $=function(P){if(!(this instanceof $))throw Error("AES must be instanitated with `new`");this.description="Electronic Code Block",this.name="ecb",this._aes=new I(P)};$.prototype.encrypt=function(P){if(P=s(P),P.length%16!==0)throw new Error("invalid plaintext size (must be multiple of 16 bytes)");for(var V=o(P.length),Y=o(16),Q=0;Q<P.length;Q+=16)a(P,Y,0,Q,Q+16),Y=this._aes.encrypt(Y),a(Y,V,Q);return V},$.prototype.decrypt=function(P){if(P=s(P),P.length%16!==0)throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");for(var V=o(P.length),Y=o(16),Q=0;Q<P.length;Q+=16)a(P,Y,0,Q,Q+16),Y=this._aes.decrypt(Y),a(Y,V,Q);return V};var q=function(P,V){if(!(this instanceof q))throw Error("AES must be instanitated with `new`");if(this.description="Cipher Block Chaining",this.name="cbc",!V)V=o(16);else if(V.length!=16)throw new Error("invalid initialation vector size (must be 16 bytes)");this._lastCipherblock=s(V,!0),this._aes=new I(P)};q.prototype.encrypt=function(P){if(P=s(P),P.length%16!==0)throw new Error("invalid plaintext size (must be multiple of 16 bytes)");for(var V=o(P.length),Y=o(16),Q=0;Q<P.length;Q+=16){a(P,Y,0,Q,Q+16);for(var B=0;B<16;B++)Y[B]^=this._lastCipherblock[B];this._lastCipherblock=this._aes.encrypt(Y),a(this._lastCipherblock,V,Q)}return V},q.prototype.decrypt=function(P){if(P=s(P),P.length%16!==0)throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");for(var V=o(P.length),Y=o(16),Q=0;Q<P.length;Q+=16){a(P,Y,0,Q,Q+16),Y=this._aes.decrypt(Y);for(var B=0;B<16;B++)V[Q+B]=Y[B]^this._lastCipherblock[B];a(P,this._lastCipherblock,0,Q,Q+16)}return V};var L=function(P,V,Y){if(!(this instanceof L))throw Error("AES must be instanitated with `new`");if(this.description="Cipher Feedback",this.name="cfb",!V)V=o(16);else if(V.length!=16)throw new Error("invalid initialation vector size (must be 16 size)");Y||(Y=1),this.segmentSize=Y,this._shiftRegister=s(V,!0),this._aes=new I(P)};L.prototype.encrypt=function(P){if(P.length%this.segmentSize!=0)throw new Error("invalid plaintext size (must be segmentSize bytes)");for(var V=s(P,!0),Y,Q=0;Q<V.length;Q+=this.segmentSize){Y=this._aes.encrypt(this._shiftRegister);for(var B=0;B<this.segmentSize;B++)V[Q+B]^=Y[B];a(this._shiftRegister,this._shiftRegister,0,this.segmentSize),a(V,this._shiftRegister,16-this.segmentSize,Q,Q+this.segmentSize)}return V},L.prototype.decrypt=function(P){if(P.length%this.segmentSize!=0)throw new Error("invalid ciphertext size (must be segmentSize bytes)");for(var V=s(P,!0),Y,Q=0;Q<V.length;Q+=this.segmentSize){Y=this._aes.encrypt(this._shiftRegister);for(var B=0;B<this.segmentSize;B++)V[Q+B]^=Y[B];a(this._shiftRegister,this._shiftRegister,0,this.segmentSize),a(P,this._shiftRegister,16-this.segmentSize,Q,Q+this.segmentSize)}return V};var N=function(P,V){if(!(this instanceof N))throw Error("AES must be instanitated with `new`");if(this.description="Output Feedback",this.name="ofb",!V)V=o(16);else if(V.length!=16)throw new Error("invalid initialation vector size (must be 16 bytes)");this._lastPrecipher=s(V,!0),this._lastPrecipherIndex=16,this._aes=new I(P)};N.prototype.encrypt=function(P){for(var V=s(P,!0),Y=0;Y<V.length;Y++)this._lastPrecipherIndex===16&&(this._lastPrecipher=this._aes.encrypt(this._lastPrecipher),this._lastPrecipherIndex=0),V[Y]^=this._lastPrecipher[this._lastPrecipherIndex++];return V},N.prototype.decrypt=N.prototype.encrypt;var G=function(P){if(!(this instanceof G))throw Error("Counter must be instanitated with `new`");P!==0&&!P&&(P=1),typeof P=="number"?(this._counter=o(16),this.setValue(P)):this.setBytes(P)};G.prototype.setValue=function(P){if(typeof P!="number"||parseInt(P)!=P)throw new Error("invalid counter value (must be an integer)");if(P>Number.MAX_SAFE_INTEGER)throw new Error("integer value out of safe range");for(var V=15;V>=0;--V)this._counter[V]=P%256,P=parseInt(P/256)},G.prototype.setBytes=function(P){if(P=s(P,!0),P.length!=16)throw new Error("invalid counter bytes size (must be 16 bytes)");this._counter=P},G.prototype.increment=function(){for(var P=15;P>=0;P--)if(this._counter[P]===255)this._counter[P]=0;else{this._counter[P]++;break}};var X=function(P,V){if(!(this instanceof X))throw Error("AES must be instanitated with `new`");this.description="Counter",this.name="ctr",V instanceof G||(V=new G(V)),this._counter=V,this._remainingCounter=null,this._remainingCounterIndex=16,this._aes=new I(P)};X.prototype.encrypt=function(P){for(var V=s(P,!0),Y=0;Y<V.length;Y++)this._remainingCounterIndex===16&&(this._remainingCounter=this._aes.encrypt(this._counter._counter),this._remainingCounterIndex=0,this._counter.increment()),V[Y]^=this._remainingCounter[this._remainingCounterIndex++];return V},X.prototype.decrypt=X.prototype.encrypt;function K(P){P=s(P,!0);var V=16-P.length%16,Y=o(P.length+V);a(P,Y);for(var Q=P.length;Q<Y.length;Q++)Y[Q]=V;return Y}function j(P){if(P=s(P,!0),P.length<16)throw new Error("PKCS#7 invalid length");var V=P[P.length-1];if(V>16)throw new Error("PKCS#7 padding byte out of range");for(var Y=P.length-V,Q=0;Q<V;Q++)if(P[Y+Q]!==V)throw new Error("PKCS#7 invalid padding byte");var B=o(Y);return a(P,B,0,0,Y),B}var ee={AES:I,Counter:G,ModeOfOperation:{ecb:$,cbc:q,cfb:L,ofb:N,ctr:X},utils:{hex:c,utf8:l},padding:{pkcs7:{pad:K,strip:j}},_arrayTest:{coerceArray:s,createArray:o,copyArray:a}};n.exports=ee})()})(qd)),qd.exports}var MD=_D();class wD{key;ivKey;constructor(e){const t=new Uint8Array([1,2,66,40,49,145,22,7,32,5,24,84,66,17,18,83]),i=new Uint8Array([17,3,50,40,33,1,118,39,32,149,120,20,50,18,2,67]);this.key=new Uint8Array(16),this.ivKey=new Uint8Array(16);const r=e.split(":");if(r.length!==6)throw new Error("Expected device MAC to have 6 elements");for(let s=0;s<6;s++){const o=parseInt(r[5-s],16);this.key[s]=(t[s]+o)%255,this.ivKey[s]=(i[s]+o)%255}this.key.set(t.slice(6),6),this.ivKey.set(i.slice(6),6)}get cryptor(){return new MD.ModeOfOperation.cbc(this.key,this.ivKey)}decrypt(e){const i=new Uint8Array(e.buffer).slice(0),r=this.cryptor.decrypt(i.slice(i.length-16));i.set(r,i.length-16);const s=this.cryptor.decrypt(i.slice(0,16));return i.set(s,0),new DataView(i.buffer)}encrypt(e){const i=new Uint8Array(e.buffer).slice(0),r=this.cryptor.encrypt(i.slice(0,16));i.set(r,0);const s=this.cryptor.encrypt(i.slice(i.length-16));return i.set(s,i.length-16),new DataView(i.buffer)}}function SD(n){n=8-n;let e=0;for(let t=0;t<n;t++)e+=Math.pow(2,t);return e}function ti(n,e,t,i,r){let s=0;const o=[];for(;n<r.byteLength;){let a=0,l=0;for(;a<t&&n<r.byteLength;){let c=8-e,u=Math.min(a+c,t),f=u-a,h=c-f;if(l+=(r.getUint8(n)&SD(e))>>h<<t-u,a+=f,e+=f,h==0&&(n++,e=0),a==t){o.push(l),s++;break}}if(i>0&&s>=i)break}return o}const wb=["U","U'","R","R'","F","F'","D","D'","L","L'","B","B'"];function ED(n){return n.getUint8(0)>>4}function Ul(n){return(n.getUint8(0)&15)<<4|n.getUint8(1)>>4}function TD(n,e,t,i){let r=0;const s=n.length;if(s!==11)throw new Error("Expected exactly 11 edges.");const o={};for(let m=0;m<s;m++){const v=e[m],x=n[m];o[x]=!0,r+=v}const a=[0,1,2,3,4,5,6,7,8,9,10,11].filter(m=>!(m in o))[0],l=n.slice();l.push(a);const c=e.slice();c.push((2-r%2)%2);let u=0;const f=t.length;if(f!==7)throw new Error("Expected exactly 7 corners.");const h={};for(let m=0;m<f;m++){const v=i[m],x=t[m];h[x]=!0,u+=v}const d=[0,1,2,3,4,5,6,7].filter(m=>!(m in h))[0],p=t.slice();p.push(d);const g=i.slice();return g.push((3-u%3)%3),new Lc(p,g,l,c)}class or{constructor(e,t){this.messageHandler=t,this.codec=new wD(e)}codec;consumeEvent(e){this.consumeDecryptedEvent(this.codec.decrypt(e))}consumeDecryptedEvent(e){const t=ED(e);switch(t){case 1:{let[i,r,s,o]=ti(0,4,16,4,e),a=ti(8,4,4,3,e),[l,c,u,f]=[e.getUint16(10),e.getUint16(12),e.getUint16(14),e.getUint16(16)],h=ti(18,0,4,3,e);a=a.map(d=>8&d?-(7&d):d),h=h.map(d=>8&d?-(7&d):d),[i,r,s,o]=[i,r,s,o].map(d=>32768&d?-(32767&d):d),[l,c,u,f]=[l,c,u,f].map(d=>32768&d?-(32767&d):d),this.messageHandler.gyroUpdate(i,r,s,o,l,c,u,f,a,h);break}case 2:{const i=Ul(e),r=ti(1,4,5,7,e),s=ti(5,7,16,7,e),o=r.map(l=>wb[l]),a=[];for(let l=0;l<7;l++)a.push(new Vo(s[l],o[l]));this.messageHandler.moveResponse(i,a);break}case 4:{const i=Ul(e),r=ti(1,4,3,7,e),s=ti(4,1,2,7,e),o=ti(5,7,4,11,e),a=ti(11,3,1,11,e),l=TD(o,a,r,s);this.messageHandler.cubeStateResponse(i,l);break}case 5:{const i=e.getUint8(0)&15,r=[e.getUint8(1),e.getUint8(2)],s=[e.getUint8(3),e.getUint8(4)],o=[e.getUint8(5),e.getUint8(6),e.getUint8(7),e.getUint8(8),e.getUint8(9),e.getUint8(10),e.getUint8(11),e.getUint8(12)],a=e.getUint8(13)>>7===1,l=(e.getUint8(13)>>6&1)===1,c=s.join("."),u=r.join("."),f=String.fromCharCode(...o);this.messageHandler.infoResponse(i,c,u,f,a,l);break}case 6:{const i=Ul(e),r=e.getUint8(1)&15,s=[];for(let o=1;o<=r;o++)s.push(e.getUint16(o<<1));this.messageHandler.moveIntervalsResponse(i,s);break}case 7:{const i=Ul(e),r=(e.getUint8(1)&15)<<1|e.getUint8(2)>>7,o=ti(2,1,5,r,e).map(a=>wb[a]);this.messageHandler.movesResponse(i,o);break}case 9:{const i=e.getUint8(0)&15,r=e.getUint8(1);this.messageHandler.powerResponse(i,r);break}case 13:{this.messageHandler.goneToSleep();break}default:{console.log({messageType:t,message:OD(e)});break}}}static CUBE_STATE_REQUEST_MSG=new Uint8Array([4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);cubeStateRequest(){return this.codec.encrypt(new DataView(or.CUBE_STATE_REQUEST_MSG.buffer))}static INFO_REQUEST_MSG=new Uint8Array([5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);infoRequest(){return this.codec.encrypt(new DataView(or.INFO_REQUEST_MSG.buffer))}static MOVES_INTERVAL_REQUEST_MSG=new Uint8Array([6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);movesIntervalRequest(e,t){const i=new DataView(or.MOVES_INTERVAL_REQUEST_MSG.buffer);return i.setUint8(1,e),i.setUint8(2,t),this.codec.encrypt(i)}static MOVES_REQUEST_MSG=new Uint8Array([7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);movesRequest(e,t){const i=new DataView(or.MOVES_REQUEST_MSG.buffer);return i.setUint8(1,e),i.setUint8(2,t),this.codec.encrypt(i)}static POWER_REQUEST_MSG=new Uint8Array([9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);powerRequest(){return this.codec.encrypt(new DataView(or.POWER_REQUEST_MSG.buffer))}static RESET_REQUEST_MSG=new Uint8Array([10,5,57,119,0,0,1,35,69,103,137,171,0,0,0,0,0,0,0,0]);resetRequest(){return this.codec.encrypt(new DataView(or.RESET_REQUEST_MSG.buffer))}}class AD{constructor(e,t,i,r,s,o){this.reboot=e,this.softwareVersion=t,this.hardwareVersion=i,this.deviceName=r,this.gyroEnabled=s,this.gyroCorrect=o}}class LD{constructor(e,t){this.sequenceNumber=e,this.lastTurns=t}}class CD{constructor(e,t,i,r,s,o,a,l,c,u){this.ox=e,this.oy=t,this.oz=i,this.ow=r,this.nx=s,this.ny=o,this.nz=a,this.nw=l,this.odirs=c,this.ndirs=u}}class RD{constructor(e,t){this.start=e,this.timestamps=t}}class PD{constructor(e,t){this.start=e,this.moves=t}}class ID{constructor(e,t){this.sequenceNumber=e,this.cubeState=t}}class DD{constructor(e,t){this.chargeState=e,this.power=t}}function OD(n){const e=n.byteLength;let t="";for(let i=0;i<e;++i)t+=n.getUint8(i).toString(16).padStart(2,"0");return t}const Sb="6e400001-b5a3-f393-e0a9-e50e24dc4179",FD="28be4a4a-cd67-11e9-a32f-2a2ae2dbcce4",ND="28be4cb6-cd67-11e9-a32f-2a2ae2dbcce4";class BD extends Error{constructor(){super("Reconnection required")}}class wM extends Error{constructor(){super("Bluetooth is not supported on this platform.")}}class UD{_isReceivingNotifications;operating=!1;requestQueue=[];_notifications;gatt;writeCharacteristic;readCharacteristic;readCharacteristicSubscription=null;constructor(){this._isReceivingNotifications=!1,this._notifications=new nn}async reconnect(){if(window.navigator.bluetooth===void 0)throw new wM;const t=(await window.navigator.bluetooth.requestDevice({filters:[{namePrefix:"GANi3"}],optionalServices:[Sb]})).gatt;if(t===void 0)throw new Error("GATT server not found.");this.gatt=t;const r=await(await t.connect()).getPrimaryService(Sb);this.writeCharacteristic=await r.getCharacteristic(FD),this.readCharacteristic=await r.getCharacteristic(ND);const s=this.readCharacteristicSubscription;return s!==null&&s.unsubscribe(),this.readCharacteristicSubscription=An(this.readCharacteristic,"characteristicvaluechanged").pipe(_M(o=>o?.target?.value)).pipe(Ss(o=>o.target.value)).subscribe(o=>this._notifications.next(o)),this._isReceivingNotifications&&await this.readCharacteristic.startNotifications(),this}async writeValue(e,t){if(this.gatt.connected)return await this.writeCharacteristic.writeValue(e);if(!t)throw new BD}async sendMessage(e,t=!1){const i=this.requestQueue;if(this.operating)return new Promise((r,s)=>i.push([e,r]));for(this.operating=!0,await this.writeValue(e,t);i.length>0;){const[r,s]=i[0];i.splice(0,1),await this.writeValue(r,t),s()}this.operating=!1}readValue(){return this.readCharacteristic.readValue()}get notifications(){return this._notifications}async startNotifications(){await this.readCharacteristic.startNotifications(),this._isReceivingNotifications=!0}async stopNotifications(){await this.readCharacteristic.stopNotifications(),this._isReceivingNotifications=!1}get isReceivingNotifications(){return this._isReceivingNotifications}}function zD(){return new UD().reconnect()}class GD{infoResponses;moveResponses;gyroUpdates;moveIntervalsResponses;movesResponses;cubeStateResponses;powerResponses;goneToSleepNotifications;constructor(){this.infoResponses=new nn,this.moveResponses=new nn,this.gyroUpdates=new nn,this.moveIntervalsResponses=new nn,this.movesResponses=new nn,this.cubeStateResponses=new nn,this.powerResponses=new nn,this.goneToSleepNotifications=new nn}infoResponse(e,t,i,r,s,o){this.infoResponses.next(new AD(e,t,i,r,s,o))}moveResponse(e,t){this.moveResponses.next(new LD(e,t))}gyroUpdate(e,t,i,r,s,o,a,l,c,u){this.gyroUpdates.next(new CD(e,t,i,r,s,o,a,l,c,u))}moveIntervalsResponse(e,t){this.moveIntervalsResponses.next(new RD(e,t))}movesResponse(e,t){this.movesResponses.next(new PD(e,t))}cubeStateResponse(e,t){this.cubeStateResponses.next(new ID(e,t))}powerResponse(e,t){this.powerResponses.next(new DD(e,t))}goneToSleep(){this.goneToSleepNotifications.next()}}class kD{device;codec;handler;constructor(e){this.handler=new GD,this.codec=new or(e,this.handler),this.device=null}get infoResponses(){return this.handler.infoResponses}get moveResponses(){return this.handler.moveResponses}get gyroUpdates(){return this.handler.gyroUpdates}get moveIntervalsResponses(){return this.handler.moveIntervalsResponses}get movesResponses(){return this.handler.movesResponses}get cubeStateResponses(){return this.handler.cubeStateResponses}get powerResponses(){return this.handler.powerResponses}get goneToSleepNotifications(){return this.handler.goneToSleepNotifications}async connect(){this.device===null&&(this.device=await zD(),this.device.notifications.subscribe(e=>this.codec.consumeEvent(e)))}async startNotifications(){return this.device?.startNotifications()}async stopNotifications(){return this.device?.stopNotifications()}async reset(){await this.device?.sendMessage(this.codec.resetRequest())}async emitCubeStateRequest(){await this.device?.sendMessage(this.codec.cubeStateRequest())}async emitInfoRequest(){await this.device?.sendMessage(this.codec.infoRequest())}async emitPowerRequest(e=!0){await this.device?.sendMessage(this.codec.powerRequest(),e)}async emitMoveIntervalsRequest(e,t=9){await this.device?.sendMessage(this.codec.movesIntervalRequest(e,t))}async emitMovesRequest(e,t=28){await this.device?.sendMessage(this.codec.movesRequest(e,t))}async fullMoveHistory(e=0){const t=new Array(256),i=new Array(256);let r,s;const a=[new Promise((c,u)=>{let f=0,h=0;r=this.movesResponses.subscribe(d=>{const p=d.moves,g=p.length,m=e+d.start;f+=g;for(let v=0;v<g;v++)i[m+v&255]=p[v];f>=256&&h>=256&&c()}),s=this.moveIntervalsResponses.subscribe(d=>{const p=d.timestamps,g=p.length,m=e+d.start;h+=g;for(let v=0;v<g;v++)t[m+v&255]=p[v];f>=256&&h>=256&&c()})})];for(let c=0;c<10;c++){const u=28*c;a.push(this.emitMovesRequest(u,Math.min(28,256-u)))}for(let c=0;c<29;c++){const u=9*c;a.push(this.emitMoveIntervalsRequest(u,Math.min(9,256-u)))}await Promise.all(a),r.unsubscribe(),s.unsubscribe();const l=new Array(256);for(let c=0;c<256;c++)l[c]=new Vo(t[c],i[c]);return l}}const Xp={SETTINGS_PAGE:"settings/",SOLVE_PAGE:"solve/",SCRAMBLE_PAGE:"scramble/",TRAIN_PAGE:"train/",HISTORY_PAGE:"history/",DETAILED_STATS_PAGE:"detailed/",RECONSTRUCTION_PAGE:"reconstruction/",ADMIN_PAGE:"admin/",HELP_PAGE:"help/"};function SM(n,e){const t=e.hash,r=`${(t===void 0?[""]:t.split("/"))[0].replace("#","")}/`;for(const s of Object.keys(Xp))if(Xp[s]===r)return s;return null}class HD{constructor(e,t,i){this.when=e,this.moves=t,this.gyroUpdates=i}}const VD={3:"Lw-",4:"Lw-",8:"Rw",9:"Rw",x:"Lw",",":"Rw-",j:"U",f:"U-",d:"L",e:"L-",h:"F",g:"F-",i:"R",k:"R-",w:"B",o:"B-",s:"D",l:"D-",J:"U",F:"U-",D:"2L",E:"2L-",H:"Fw",G:"Fw-",I:"2R",K:"2R-",W:"Bw",O:"Bw-",S:"Dw",L:"Dw-",a:"Y-",A:"Y-",";":"Y",R:"X",r:"X",U:"X",u:"X",T:"X",t:"X",Y:"X",y:"X",V:"X-",v:"X-",C:"X-",c:"X-",N:"X-",n:"X-",M:"X-",m:"X-",Q:"Z-",q:"Z-",P:"Z",p:"Z"},WD={basePath:"/",page:"TRAIN_PAGE",stage:null,previousMove:null,moveSequence:null,pbTime:1/0,recording:[],settings:{macAddress:"",showCube:!0,invertX:!1,invertY:!1,invertZ:!1,enableGyroscope:!0,recordGyroscope:!1,colors:li.DEFAULT_COLORS,internalColor:li.DEFAULT_INTERNAL_COLOR,keyMapping:VD},sim:new Es,history:[],pageNumber:0,buffer:null},Yp=50;function $m(n){return Math.floor(Math.max(0,n-1)/Yp)+1}function qD(n,e){return n!==null&&e[0]===n[0]&&e.length!==n.length}function mi(n,e){n.stage=null,n.recording.length=0,n.previousMove=null,n.moveSequence=null;const t=e.page,i=e.params;if(t!==n.page){n.page=t,n.pageParams=i;const r=Xp[t]+(i!==void 0?i.num.toString():"");e.popping||window.history.pushState(i,"",`${n.basePath}#${r}`)}switch(t){case"SOLVE_PAGE":return n.moveSequence=new Wo(n.sim.solution().split(" ")),[{type:"START_NOTIFICATIONS"},{type:"UPDATE_PROPS",props:{page:t,buttonAText:"Cancel",scrambleText:n.moveSequence.toString()}}];case"SCRAMBLE_PAGE":return n.moveSequence=new Wo(Go.scramble("3x3").split(" ")),[{type:"START_NOTIFICATIONS"},{type:"UPDATE_PROPS",props:{page:t,buttonAText:"Cancel",scrambleText:n.moveSequence.toString()}}];case"TRAIN_PAGE":return[{type:"START_NOTIFICATIONS"},{type:"UPDATE_PROPS",props:{page:t,buttonAText:"Start",scrambleText:"Perform a move and undo it to start, e.g. U U'."}}];case"RECONSTRUCTION_PAGE":{const r=n.pageParams?.num,s=Math.min(n.history.length,r===void 0?n.history.length:r),o=n.history[s-1],a=o?.moves??[],l=o?.gyroUpdates;return[{type:"STOP_NOTIFICATIONS"},{type:"INIT_REPLAY",moves:a,gyroEntries:l},{type:"UPDATE_PROPS",props:{page:t,buttonAText:"Start",scrambleText:ju(a.map(c=>c.value.toString())).join(" ")}}]}case"HISTORY_PAGE":return[{type:"STOP_NOTIFICATIONS"},{type:"UPDATE_PROPS",props:{page:t,history:n.history,pageNumber:n.pageNumber+1,totalPages:$m(n.history.length),buttonAText:"",scrambleText:""}}];case"DETAILED_STATS_PAGE":{const r=n.pageParams?.num,s=Math.min(n.history.length,r===void 0?n.history.length:r);return[{type:"STOP_NOTIFICATIONS"},{type:"UPDATE_PROPS",props:{page:t,selectedRecording:n.history[s-1],buttonAText:"Reconstruct",scrambleText:""}}]}default:return[{type:"STOP_NOTIFICATIONS"},{type:"UPDATE_PROPS",props:{page:t,buttonAText:"",scrambleText:""}}]}}function $D(n,e){switch(e.type){case"UPDATE_SETTINGS":return e.showCube!==void 0&&(n.settings.showCube=e.showCube),e.invertX!==void 0&&(n.settings.invertX=e.invertX),e.invertY!==void 0&&(n.settings.invertY=e.invertY),e.invertZ!==void 0&&(n.settings.invertZ=e.invertZ),e.enableGyroscope!==void 0&&(n.settings.enableGyroscope=e.enableGyroscope),e.recordGyroscope!==void 0&&(n.settings.recordGyroscope=e.recordGyroscope),localStorage.setItem("settings",JSON.stringify(n.settings)),[{type:"UPDATE_PROPS",props:{showCube:e.showCube,invertX:e.invertX,invertY:e.invertY,invertZ:e.invertZ,enableGyroscope:e.enableGyroscope,recordGyroscope:e.recordGyroscope}}];case"GO_TO_PAGE":return mi(n,e);default:return[]}}function jD(n,e){switch(e.type){case"START":return n.moveSequence=new Wo(n.sim.solution().split(" ")),[{type:"UPDATE_PROPS",props:{buttonAText:"Cancel",scrambleText:n.moveSequence.toString()}}];case"TURN":return n.moveSequence!==null?(n.moveSequence.applyMove(e.move.value),[{type:"UPDATE_PROPS",props:{scrambleText:n.moveSequence.toString()}}]):[];case"CANCEL":return n.moveSequence=null,[{type:"UPDATE_PROPS",props:{buttonAText:"Start",scrambleText:""}}];case"GO_TO_PAGE":return mi(n,e);default:return[]}}function XD(n,e){switch(e.type){case"START":return n.moveSequence=new Wo(Go.scramble("3x3").split(" ")),[{type:"UPDATE_PROPS",props:{buttonAText:"Cancel",scrambleText:n.moveSequence.toString()}}];case"TURN":return n.moveSequence!==null?(n.moveSequence.applyMove(e.move.value),[{type:"UPDATE_PROPS",props:{scrambleText:n.moveSequence.toString()}}]):[];case"CANCEL":return n.moveSequence=null,[{type:"UPDATE_PROPS",props:{buttonAText:"Start",scrambleText:""}}];case"GO_TO_PAGE":return mi(n,e);default:return[]}}function YD(n,e){switch(e.type){case"START":return n.stage="SCRAMBLING",n.moveSequence=new Wo(Go.scramble("3x3").split(" ")),n.recording.length=0,[{type:"UPDATE_PROPS",props:{buttonAText:"Cancel",scrambleText:n.moveSequence.toString()}},{type:"WAKELOCK",enable:!0}];case"CANCEL":return n.stage=null,n.moveSequence=null,n.previousMove=null,n.recording.length=0,n.buffer=null,[{type:"STOP_TIMER"},{type:"WAKELOCK",enable:!1},{type:"UPDATE_PROPS",props:{buttonAText:"Start",scrambleText:"Perform a move and undo it to start, e.g. U U'."}}];case"TURN":if(n.stage===null&&qD(n.previousMove,e.move.value))return n.stage="SCRAMBLING",n.previousMove=null,n.moveSequence=new Wo(Go.scramble("3x3").split(" ")),[{type:"UPDATE_PROPS",props:{buttonAText:"Cancel",scrambleText:n.moveSequence.toString()}},{type:"WAKELOCK",enable:!0}];if(n.stage===null)n.previousMove=e.move.value;else{if(n.stage==="SCRAMBLING"&&n.moveSequence?.done)return n.stage="SOLVING",n.moveSequence=null,n.recording.length=0,n.recording.push(e.move),n.settings.recordGyroscope&&(n.buffer=[]),[{type:"START_TIMER"}];if(n.stage==="SCRAMBLING")return n.moveSequence.applyMove(e.move.value),[{type:"UPDATE_PROPS",props:{scrambleText:n.moveSequence.toString()}}];if(n.stage==="SOLVING"&&n.sim.isSolved()){n.stage=null;const i=n.recording.slice();n.recording.length=0,i.push(e.move);const r=n.buffer;n.buffer=null;const s=r===null||r.length===0?void 0:r;n.history.push(new HD(new Date,i,s));const o=qm(i);let a="";return o<n.pbTime&&(n.pbTime=o,a="New Personal Best"),localStorage.setItem("history",JSON.stringify(n.history)),[{type:"STOP_TIMER"},{type:"WAKELOCK",enable:!1},{type:"UPDATE_PROPS",props:{history:n.history,totalPages:$m(n.history.length),scrambleText:a}}]}else n.stage==="SOLVING"&&n.recording.push(e.move)}return[];case"GO_TO_PAGE":const t=mi(n,e);return t.push({type:"WAKELOCK",enable:!1}),t.push({type:"STOP_TIMER"}),t;default:return[]}}function ZD(n,e){switch(e.type){case"ADJUST_PAGE":const t=$m(n.history.length)-1;return n.pageNumber=Math.max(0,Math.min(t,e.pageDelta+n.pageNumber)),[{type:"UPDATE_PROPS",props:{history:n.history,pageNumber:n.pageNumber+1}}];case"GO_TO_PAGE":return mi(n,e);default:return[]}}function JD(n,e){switch(e.type){case"CANCEL":return mi(n,{page:"RECONSTRUCTION_PAGE",params:n.pageParams});case"GO_TO_PAGE":return mi(n,e);default:return[]}}function KD(n,e){switch(e.type){case"START":return[{type:"UPDATE_PROPS",props:{buttonAText:"Pause"}},{type:"STOP_NOTIFICATIONS"},{type:"START_REPLAY"},{type:"WAKELOCK",enable:!0}];case"CANCEL":return[{type:"UPDATE_PROPS",props:{buttonAText:"Start"}},{type:"PAUSE_REPLAY"},{type:"WAKELOCK",enable:!1}];case"GO_TO_PAGE":const t=mi(n,e);return t.push({type:"PAUSE_REPLAY"}),t.push({type:"WAKELOCK",enable:!1}),t;default:return[]}}function QD(n,e){switch(e.type){case"CLEAR_HISTORY":return confirm("Clear history?")?(n.history.length=0,localStorage.removeItem("history"),n.pbTime=1/0,n.pageNumber=0,[{type:"UPDATE_PROPS",props:{pageNumber:1,totalPages:1}}]):[];case"GO_TO_PAGE":return mi(n,e);default:return[]}}function e6(n,e){switch(e.type){case"GO_TO_PAGE":return mi(n,e);default:return[]}}const t6={SETTINGS_PAGE:$D,SOLVE_PAGE:jD,SCRAMBLE_PAGE:XD,TRAIN_PAGE:YD,HISTORY_PAGE:ZD,DETAILED_STATS_PAGE:JD,RECONSTRUCTION_PAGE:KD,ADMIN_PAGE:QD,HELP_PAGE:e6};function n6(n,e){switch(e.type){case"TURN":n.sim.applyMove(e.move.value);break;case"CENTER":return[{type:"CENTER"}];case"RESET":return[{type:"SET_CUBE_STATE",cubeState:Lc.SOLVED}];case"CUBE_STATE":return n.sim.setState(e.cubeState),[];case"CONNECT":return n.settings.macAddress=e.macAddress,localStorage.setItem("settings",JSON.stringify(n.settings)),[{type:"CONNECT",macAddress:e.macAddress}]}return t6[n.page](n,e)}function Eb(n,e=!0){n.rotateX((e?Math.PI:-Math.PI)/2)}function Tb(n,e=!0){n.rotateY((e?Math.PI:-Math.PI)/2)}function Ab(n,e=!0){n.rotateZ((e?Math.PI:-Math.PI)/2)}const Lb={U:[["U"],null],"U-":[["U'"],null],D:[["D"],null],"D-":[["D'"],null],F:[["F"],null],"F-":[["F'"],null],B:[["B"],null],"B-":[["B'"],null],R:[["R"],null],"R-":[["R'"],null],L:[["L"],null],"L-":[["L'"],null],"2U":[["U'","D"],"y"],"2U-":[["U","D'"],"y'"],"2D":[["U","D'"],"y'"],"2D-":[["U'","D"],"y"],"2F":[["F'","B"],"z"],"2F-":[["F","B'"],"z'"],"2B":[["F","B'"],"z'"],"2B-":[["F'","B"],"z"],"2L":[["R","L'"],"x'"],"2L-":[["R'","L"],"x"],"2R":[["R'","L"],"x"],"2R-":[["R","L'"],"x'"],Uw:[["D"],"y"],"Uw-":[["D'"],"y'"],Dw:[["U"],"y'"],"Dw-":[["U'"],"y"],Fw:[["B"],"z"],"Fw-":[["B'"],"z'"],Bw:[["F"],"z"],"Bw-":[["F'"],"z"],Lw:[["R"],"x'"],"Lw-":[["R'"],"x"],Rw:[["L"],"x"],"Rw-":[["L'"],"x'"],Y:[[],"y"],"Y-":[[],"y'"],X:[[],"x"],"X-":[[],"x'"],Z:[[],"z"],"Z-":[[],"z'"]};function Cb(n,e){const t=n.slice();for(let i=0;i<n.length;i++)n[i]=e[t[i]];return n}const i6={x:0,"x'":1,y:2,"y'":3,z:4,"z'":5},r6=["x","x'","y","y'","z","z'"],s6={F:0,"F'":1,B:2,"B'":3,U:4,"U'":5,D:6,"D'":7,L:8,"L'":9,R:10,"R'":11},o6=["F","F'","B","B'","U","U'","D","D'","L","L'","R","R'"],a6={x:[[0,1,4,5,3,2],[6,7,4,5,0,1,2,3,8,9,10,11]],"x'":[[0,1,5,4,2,3],[4,5,6,7,2,3,0,1,8,9,10,11]],y:[[5,4,2,3,0,1],[10,11,8,9,4,5,6,7,0,1,2,3]],"y'":[[4,5,2,3,1,0],[8,9,10,11,4,5,6,7,2,3,0,1]],z:[[2,3,1,0,4,5],[0,1,2,3,8,9,10,11,6,7,4,5]],"z'":[[2,3,0,1,4,5],[0,1,2,3,10,11,8,9,4,5,6,7]]},Rb=[0,1,2,3,4,5],Pb=[0,1,2,3,4,5,6,7,8,9,10,11];function c6(n,e){if(!(e in Lb))return[];const[t,i]=Lb[e];if(console.log(JSON.stringify({extendedMove:e,moves:t,rotation:i})),i!==null){const r=r6[Rb[i6[i]]],[s,o]=a6[r];switch(Cb(Rb,s),Cb(Pb,o),r){case"x":Eb(n,!0);break;case"x'":Eb(n,!1);break;case"y":Tb(n,!1);break;case"y'":Tb(n,!0);break;case"z":Ab(n,!0);break;case"z'":Ab(n,!1);break}}return t===void 0?[]:t.map(r=>o6[Pb[s6[r]]])}function $d(n){const e=Math.floor(n/6e4),t=Math.floor(n/1e3)%60,i=Math.floor(n/10)%100;return`${e}:${t<10?"0"+t:t}.${i<10?"0"+i:i}`}function EM(n,e){const t=[],i=n.moves.length;let r=-n.moves[0].timestamp;for(let l=0;l<i;l++)r+=n.moves[l].timestamp,t.push(n.moves[l].value);const s=ju(t),o=(typeof n.when=="string"?new Date(n.when):n.when).toISOString(),a=1e3*s.length/r;return`<tr><td>${e}</td><td>${o}</td><td>${r/1e3}</td><td>${s.length}</td><td>${a.toPrecision(3)}</td><td><button data-num="${e}">Details</button></td></tr>`}function Ib(n,e){const t=n.length,i=e*Yp,r=i+Yp;return n.slice(Math.max(0,t-r),t-i).reverse().map((o,a)=>EM(o,t-a-i)).join("")}function TM(n){let e=1/0;return n.forEach(t=>{e=Math.min(qm(t.moves),e)}),e}function Db(n){if(n.length===0)return"";let e,t=1/0;return n.forEach((i,r)=>{const s=qm(i.moves);s<t&&(e=r,t=s)}),EM(n[e],e+1)}function l6(n,e){const t=[],i=[],r=[],s=[],o=[],a=[t,i,r,s,o],l=e.length;let c=0;const u=n.getState();for(;c<l&&!n.isF2L();)n.applyMove(e[c].value),c++;const f=n.match().find(h=>h.stage==="F2L")?.bottom;for(n.setState(u),c=0;c<l&&!n.isCross(h=>h.bottom===f);){const h=e[c];n.applyMove(h.value),t.push(h),c++}for(;c<l&&!n.isF2L();){const h=e[c];n.applyMove(h.value),i.push(h),c++}for(;c<l&&!n.isOLL(h=>h.bottom===f);){const h=e[c];n.applyMove(h.value),r.push(h),c++}for(;c<l&&!n.isPLL(h=>h.bottom===f);){const h=e[c];n.applyMove(h.value),s.push(h),c++}for(;c<l;c++)o.push(e[c]);return a}function ba(n,e,t=!1){const i=ju(e.map(c=>c.value)),r=e.map(c=>c.timestamp),s=r.reduce((c,u)=>c+u,t?-r[0]:0)/1e3,o=s.toString(),a=i.length.toString(),l=i.length===0?"N/A":(i.length/s).toPrecision(3);return`<tr><td>${n}</td><td>${o}</td><td>${a}</td><td>${l}</td></tr>`}function u6(n){const e=new Es;jp(n.map(a=>a.value)).forEach(a=>e.applyMove(a));const[t,i,r,s,o]=l6(e,n);return[ba("Cross",t,!0),ba("F2L",i),ba("OLL",r),ba("PLL",s),ba("AUF",o)].join("")}function Ur(n,e){return mn(n,()=>({type:"GO_TO_PAGE",page:e}))}function f6(n){const e=WD;e.basePath=n,e.history=[];const t=SM(n,window.location);t!==null&&(e.page=t,e.pageParams=window.history.state);const i=localStorage.getItem("settings");i!==null&&(e.settings=JSON.parse(i));const r=localStorage.getItem("history");return r!==null&&(e.history=JSON.parse(r)),e.pbTime=TM(e.history),e}const Ob={Start:"start",Cancel:"cancel",Pause:"pause",Reconstruct:"reconstruct"};function sr(n){const e=n.value;if(/^#[0-9a-fA-F]{3}([0-9a-fA-F]{3})?$/.test(e))return e}function jd(n){if(/^[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}$/.test(n))return n}class h6{constructor(e,t){this.cube=t,this.containerDiv=document.getElementById("container"),this.overlayDiv=document.getElementById("overlay");const i=document.getElementById("importHistory"),r=document.getElementById("enableGyroscope"),s=document.getElementById("recordGyroscope"),o=document.getElementById("showCube"),a=document.getElementById("invertX"),l=document.getElementById("invertY"),c=document.getElementById("invertZ");this.macInput=document.getElementById("mac"),this.btnA=document.getElementById("start"),this.connectBtn=document.getElementById("connect"),this.scrambleTxt=document.getElementById("scramble"),this.timerTxt=document.getElementById("timer"),this.powerBar=document.getElementById("powerBar"),this.historyTable=document.getElementById("historyTable"),this.stageTable=document.getElementById("stageTable"),this.pbTable=document.getElementById("pbTable"),this.dateField=document.getElementById("dateField"),this.timeField=document.getElementById("timeField"),this.countField=document.getElementById("countField"),this.tpsField=document.getElementById("tpsField"),this.scrambleField=document.getElementById("scrambleField"),this.moveField=document.getElementById("moveField"),this.pageNumberTxt=document.getElementById("pageNumber"),this.totalPagesTxt=document.getElementById("totalPages");const u=document.getElementById("redColor"),f=document.getElementById("redSwatch"),h=document.getElementById("orangeColor"),d=document.getElementById("orangeSwatch"),p=document.getElementById("whiteColor"),g=document.getElementById("whiteSwatch"),m=document.getElementById("yellowColor"),v=document.getElementById("yellowSwatch"),x=document.getElementById("greenColor"),M=document.getElementById("greenSwatch"),b=document.getElementById("blueColor"),w=document.getElementById("blueSwatch"),y=document.getElementById("internalColor"),_=document.getElementById("internalSwatch");An(this.macInput,"input").subscribe(()=>{const O=jd(this.macInput.value);this.connectBtn.classList.toggle("disabled",!O)}),An(document.getElementById("settingsBody"),"input").subscribe(O=>{if(O.target?.className=="colorInput"&&sr(O.target)!==void 0){const D=sr(u),me=sr(h),be=sr(p),Z=sr(m),C=sr(x),A=sr(b),ie=sr(y),se=this.state.settings.colors,le=[D!==void 0?D:se[0],me!==void 0?me:se[1],be!==void 0?be:se[2],Z!==void 0?Z:se[3],C!==void 0?C:se[4],A!==void 0?A:se[5]],ge=ie!==void 0?ie:this.state.settings.internalColor;f.style.backgroundColor=le[0],d.style.backgroundColor=le[1],g.style.backgroundColor=le[2],v.style.backgroundColor=le[3],M.style.backgroundColor=le[4],w.style.backgroundColor=le[5],_.style.backgroundColor=ge,this.state.settings.colors=le,this.state.settings.internalColor=ge,localStorage.setItem("settings",JSON.stringify(this.state.settings)),this.cube.updateOptions({colors:le,internalColor:ge})}});const S=uo("#enableGyroscope",O=>({type:"UPDATE_SETTINGS",enableGyroscope:O})),E=uo("#recordGyroscope",O=>({type:"UPDATE_SETTINGS",recordGyroscope:O})),R=uo("#showCube",O=>({type:"UPDATE_SETTINGS",showCube:O})),I=uo("#invertX",O=>({type:"UPDATE_SETTINGS",invertX:O})),$=uo("#invertY",O=>({type:"UPDATE_SETTINGS",invertY:O})),q=uo("#invertZ",O=>({type:"UPDATE_SETTINGS",invertZ:O})),L=mn("#resetSettings",()=>{const O=li.DEFAULT_COLORS,D=li.DEFAULT_INTERNAL_COLOR;return u.value=f.style.backgroundColor=O[0],h.value=d.style.backgroundColor=O[1],p.value=g.style.backgroundColor=O[2],m.value=v.style.backgroundColor=O[3],x.value=M.style.backgroundColor=O[4],b.value=w.style.backgroundColor=O[5],y.value=_.style.backgroundColor=D,o.checked=!0,a.checked=!1,l.checked=!1,c.checked=!1,r.checked=!0,s.checked=!1,this.state.settings.colors=li.DEFAULT_COLORS,this.state.settings.internalColor=D,this.cube.updateOptions({colors:O,internalColor:D}),{type:"UPDATE_SETTINGS",showCube:!0,invertX:!1,invertY:!1,invertZ:!1,enableGyroscope:!0,recordGyroscope:!1}}),N=mn("#historyBody",O=>{const D=O?.target?.dataset.num;if(D!=null)return{type:"GO_TO_PAGE",page:"DETAILED_STATS_PAGE",params:{num:parseInt(D)}}}),G=mn("#connect",()=>{const O=jd(this.macInput.value);return O===void 0?void 0:{type:"CONNECT",macAddress:O}}),X=mn("#clearHistory",()=>({type:"CLEAR_HISTORY"})),K=mn("#exportHistory",()=>null);An(i,"change").subscribe(()=>{const O=i.files;O!==null&&O[0].text().then(D=>{const me=JSON.parse(D);me!=null&&(this.state.history.unshift(...me),this.state.pbTime=TM(this.state.history),localStorage.setItem("history",JSON.stringify(this.state.history)))})});const j=An(window,"popstate").pipe(Ss(O=>{const D=O,me=SM(e,window.location);return me!==null?{type:"GO_TO_PAGE",page:me,params:D.state,popping:!0}:{type:"GO_TO_PAGE",page:"TRAIN_PAGE"}})),ee=Ur("#settingsTab","SETTINGS_PAGE"),P=Ur("#solveTab","SOLVE_PAGE"),V=Ur("#scrambleTab","SCRAMBLE_PAGE"),Y=Ur("#trainTab","TRAIN_PAGE"),Q=Ur("#historyTab","HISTORY_PAGE"),B=Ur("#adminTab","ADMIN_PAGE"),oe=Ur("#helpTab","HELP_PAGE"),Se=mn("#start",()=>({type:this.btnA.textContent==="Start"?"START":"CANCEL"})),we=mn("#center",()=>({type:"CENTER"})),ye=mn("#reset",()=>({type:"RESET"})),_e=mn("#firstPage",()=>({type:"ADJUST_PAGE",pageDelta:-1/0})),Ie=mn("#prevPage",()=>({type:"ADJUST_PAGE",pageDelta:-1})),he=mn("#nextPage",()=>({type:"ADJUST_PAGE",pageDelta:1})),pe=mn("#lastPage",()=>({type:"ADJUST_PAGE",pageDelta:1/0})),Te=document.getElementById("menuBtn"),Ne=document.getElementById("tabBar");An(Te,"click").subscribe(()=>Ne.classList.toggle("open",!0)),An(Ne,"click").subscribe(()=>Ne.classList.toggle("open",!1)),this.turnSubject=new nn,this.stopTimerSubject=new nn,this.cubeStateSubject=new nn,An(window,"keypress").subscribe(O=>{const D=this.state.settings.keyMapping[O.key];c6(this.cube,D).forEach(be=>{this.turnSubject.next({type:"TURN",move:new Vo(100,be)}),this.cube.turn(be,100)})});const Ce=uD(j,S,E,R,I,$,q,L,G,N,X,ee,P,V,Y,Q,B,oe,Se,we,ye,_e,Ie,he,pe,this.turnSubject,this.cubeStateSubject);this.state=f6(e),this.cube.updateOptions({colors:this.state.settings.colors,internalColor:this.state.settings.internalColor}),f.style.backgroundColor=this.state.settings.colors[0],d.style.backgroundColor=this.state.settings.colors[1],g.style.backgroundColor=this.state.settings.colors[2],v.style.backgroundColor=this.state.settings.colors[3],M.style.backgroundColor=this.state.settings.colors[4],w.style.backgroundColor=this.state.settings.colors[5],_.style.backgroundColor=this.state.settings.internalColor,u.value=this.state.settings.colors[0],h.value=this.state.settings.colors[1],p.value=this.state.settings.colors[2],m.value=this.state.settings.colors[3],x.value=this.state.settings.colors[4],b.value=this.state.settings.colors[5],y.value=this.state.settings.internalColor,K.subscribe(()=>{const O=`data:text/json;chatset=utf-8,${encodeURIComponent(JSON.stringify(this.state.history))}`,D=document.createElement("a");D.href=O,D.download=`history-${new Date().toISOString()}.json`,D.click()}),this.macInput.value=this.state.settings.macAddress,this.historyTable.innerHTML=Ib(this.state.history,this.state.pageNumber),this.pbTable.innerHTML=Db(this.state.history),r.checked=this.state.settings.enableGyroscope,s.checked=this.state.settings.recordGyroscope,o.checked=this.state.settings.showCube,a.checked=this.state.settings.invertX,l.checked=this.state.settings.invertY,c.checked=this.state.settings.invertZ,this.containerDiv.classList.toggle("hidden",!this.state.settings.showCube),this.connectBtn.classList.toggle("disabled",!jd(this.macInput.value)),Ce.subscribe(O=>this.intentHandler(O)),this.intentHandler({type:"GO_TO_PAGE",page:this.state.page,params:this.state.pageParams,popping:!0})}containerDiv;overlayDiv;macInput;btnA;connectBtn;scrambleTxt;timerTxt;powerBar;historyTable;stageTable;pbTable;dateField;timeField;countField;tpsField;scrambleField;moveField;pageNumberTxt;totalPagesTxt;state;turnSubject;stopTimerSubject;cubeStateSubject;adapter=null;timerSub=null;wakeLock=null;replayer=null;replayerSub=null;viewOrientation=ns.clone();currentOrientation=ns.clone();async setupAdapter(){const e=this.adapter;if(e===null)throw new Error("adapter is null. This shouldn't happen.");let t=0;e.gyroUpdates.subscribe(({nx:r,ny:s,nz:o,nw:a})=>{const l=window.performance.now(),c=l-t;if(t=l,this.state.settings.enableGyroscope){const u=this.state.settings.invertX?-1:1,f=this.state.settings.invertY?-1:1,h=this.state.settings.invertZ?-1:1,p=new At(h*o,u*r,f*s,a).normalize(),g=this.viewOrientation.clone().multiply(p);this.currentOrientation=p,this.cube.setRotationFromQuaternion(g);const m=this.state.buffer;m!==null&&m.push(new hD(c,g.x,g.y,g.z,g.w))}}),e.emitPowerRequest(),setInterval(()=>{e.emitPowerRequest()},1e4),e.powerResponses.subscribe(({chargeState:r,power:s})=>{r===0?this.powerBar.textContent=s+"%":r===1?this.powerBar.textContent="Charging":this.powerBar.textContent="Charged",this.powerBar.classList.toggle("low",s<=10),this.powerBar.style.width=`${s}%`});let i=-1;e.moveResponses.subscribe(({sequenceNumber:r,lastTurns:s})=>{let o=0;i===-1?o=1:(o=r-i,o<0&&(o+=256),o>s.length&&console.log("WARNING: Some moves were missed."),o=Math.min(s.length,o)),i=r;for(let a=o-1;a>=0;a--){const l=s[a],c=l.value.toString();this.turnSubject.next({type:"TURN",move:new Vo(l.timestamp,c)}),this.cube.turn(c,l.timestamp)}}),this.adapter.goneToSleepNotifications.subscribe(()=>{this.connectBtn.classList.remove("hidden")}),await this.adapter.startNotifications(),this.adapter.emitCubeStateRequest(),this.adapter.cubeStateResponses.subscribe(r=>{this.cube.setState(r.cubeState),this.cubeStateSubject.next({type:"CUBE_STATE",cubeState:r.cubeState})}),this.connectBtn.classList.add("hidden"),this.macInput.classList.add("hidden")}intentHandler(e){n6(this.state,e).forEach(t=>this.dispatcher(t))}dispatcher(e){switch(e.type){case"CONNECT":this.adapter=new kD(e.macAddress),this.adapter.connect().then(()=>this.setupAdapter()).catch(i=>{if(i instanceof wM)window.isSecureContext?window.alert('Currently, Web Bluetooth is only supported in Google Chrome, Edge, and Opera and must be enabled by enabling "Experimental Web Platform features" at about://flags/#enable-experimental-web-platform-features_name.'):window.alert("Web Bluetooth is only supported in a secure context, i.e. localhost or HTTPS with a valid certificate.");else throw i});break;case"UPDATE_PROPS":if(e.props.scrambleText!==void 0&&(this.scrambleTxt.textContent=e.props.scrambleText),e.props.page!==void 0&&(this.overlayDiv.className=e.props.page,this.timerTxt.textContent=$d(0)),e.props.buttonAText!==void 0&&(e.props.buttonAText===""?this.btnA.classList.add("hidden"):(this.btnA.classList.remove("hidden"),this.btnA.textContent=e.props.buttonAText,this.btnA.className=Ob[e.props.buttonAText])),e.props.history!==void 0&&(this.historyTable.innerHTML=Ib(e.props.history,this.state.pageNumber),this.pbTable.innerHTML=Db(e.props.history)),e.props.selectedRecording!==void 0){const i=e.props.selectedRecording.moves,r=e.props.selectedRecording.when,s=(typeof r=="string"?new Date(r):r).toISOString(),o=yb(i.map(u=>u.value)),a=ju(i.map(u=>u.value)),l=i.map(u=>u.timestamp),c=l.reduce((u,f)=>u+f,-l[0])/1e3;this.dateField.textContent=s,this.timeField.textContent=c.toString(),this.countField.textContent=a.length.toString(),this.tpsField.textContent=(a.length/c).toPrecision(3),this.scrambleField.textContent=o.join(" "),this.moveField.textContent=a.join(" "),this.stageTable.innerHTML=u6(i)}e.props.showCube!==void 0&&this.containerDiv.classList.toggle("hidden",!e.props.showCube),e.props.pageNumber!==void 0&&(this.pageNumberTxt.textContent=e.props.pageNumber.toString()),e.props.totalPages!==void 0&&(this.totalPagesTxt.textContent=e.props.totalPages.toString());break;case"START_TIMER":this.timerSub?.unsubscribe(),this.timerSub=oM().pipe(Ss(({elapsed:i})=>i)).pipe(fD(this.stopTimerSubject)).subscribe(i=>{this.timerTxt.textContent=$d(i)});break;case"STOP_TIMER":this.stopTimerSubject.next();break;case"START_NOTIFICATIONS":this.adapter!==null&&(this.adapter.startNotifications(),this.adapter.emitCubeStateRequest());break;case"STOP_NOTIFICATIONS":this.adapter!==null&&this.adapter.stopNotifications();break;case"FETCH_CUBE_STATE":this.adapter!==null&&this.adapter.emitCubeStateRequest();break;case"SET_CUBE_STATE":this.adapter!==null&&this.adapter.reset(),this.cube.reset();break;case"CENTER":this.viewOrientation=this.currentOrientation.clone().invert();break;case"INIT_REPLAY":this.replayer?.pause(),this.replayerSub?.unsubscribe();const t=yb(e.moves.map(i=>i.value));this.replayer=new yD(e.moves,mD(t),e.gyroEntries),this.replayerSub=this.replayer.actions.subscribe(i=>{switch(i.type){case"SET_CUBE":this.cube.setState(i.cubeState),this.cube.center();break;case"MOVE":this.cube.turn(i.move.value,i.move.timestamp);break;case"GYRO":this.state.settings.enableGyroscope&&this.cube.setRotationFromQuaternion(i.q);break;case"TIME":this.timerTxt.textContent=$d(i.elapsedTime);break;case"END":this.btnA.textContent="Start",this.btnA.className=Ob.Start;break}}),this.replayer.emitState();break;case"START_REPLAY":this.replayer?.play();break;case"PAUSE_REPLAY":this.replayer?.pause();break;case"WAKELOCK":e.enable?this.wakeLock!==null?this.wakeLock?.release().then(()=>{navigator.wakeLock.request("screen").then(i=>{this.wakeLock=i})}):navigator.wakeLock.request("screen").then(i=>{this.wakeLock=i}):this.wakeLock?.release().then(()=>{this.wakeLock=null});break;default:console.log(JSON.stringify(e))}}}function d6(n,e){new h6(n,e)}function p6(n,e=100){const t=window.innerWidth,i=window.innerHeight,r=new Cn(75,t/i,.1,1e3);r.position.y=25,r.position.z=-50;const s=new dy({antialias:!0});s.setSize(t,i),n.appendChild(s.domElement);const o=new lI(r,s.domElement);o.enableZoom=!0,o.enablePan=!1,o.minDistance=5,o.maxDistance=1e3,o.rotateSpeed=2,o.usePanModAlt=!1;const a=new ET,l=getComputedStyle(document.querySelector("body")).backgroundColor;a.background=new lt(l);const c=new AT(16777215);a.add(c);const u=new li({cubieSize:5,turnTime:e});a.add(u),window.addEventListener("resize",()=>{const h=window.innerWidth,d=window.innerHeight;r.aspect=h/d,r.updateProjectionMatrix(),s.setSize(h,d)});function f(){requestAnimationFrame(f),s.render(a,r)}return f(),u}function m6(n){d6(n,p6(document.getElementById("container"),100));const e=document.getElementById("splash");window.requestIdleCallback(()=>{Go.initialize("kociemba"),e.style.display="none"})}m6(".");
