(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))i(r);new MutationObserver(r=>{for(const s of r)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&i(o)}).observe(document,{childList:!0,subtree:!0});function t(r){const s={};return r.integrity&&(s.integrity=r.integrity),r.referrerPolicy&&(s.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?s.credentials="include":r.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(r){if(r.ep)return;r.ep=!0;const s=t(r);fetch(r.href,s)}})();/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Z0="143",Lb=0,Xp=1,Cb=2,q3=1,Rb=2,ba=3,Ra=0,Wn=1,Mo=2,Pb=1,lr=0,go=1,Yp=2,Zp=3,Jp=4,Ib=5,fo=100,Db=101,Ob=102,Kp=103,Qp=104,qb=200,zb=201,Fb=202,Nb=203,z3=204,F3=205,Bb=206,Ub=207,Gb=208,kb=209,Hb=210,Vb=0,Wb=1,$b=2,Xh=3,jb=4,Xb=5,Yb=6,Zb=7,J0=0,Jb=1,Kb=2,Oi=0,Qb=1,e9=2,t9=3,n9=4,i9=5,N3=300,So=301,Eo=302,Yh=303,Zh=304,Pd=306,Jh=1e3,Hn=1001,Kh=1002,rn=1003,em=1004,tm=1005,Ln=1006,r9=1007,Id=1008,rs=1009,s9=1010,o9=1011,B3=1012,a9=1013,Wr=1014,$r=1015,Pa=1016,c9=1017,l9=1018,vo=1020,d9=1021,u9=1022,si=1023,f9=1024,h9=1025,Jr=1026,To=1027,p9=1028,m9=1029,x9=1030,g9=1031,v9=1033,Jd=33776,Kd=33777,Qd=33778,eu=33779,nm=35840,im=35841,rm=35842,sm=35843,y9=36196,om=37492,am=37496,cm=37808,lm=37809,dm=37810,um=37811,fm=37812,hm=37813,pm=37814,mm=37815,xm=37816,gm=37817,vm=37818,ym=37819,bm=37820,_m=37821,wm=36492,ss=3e3,Tt=3001,b9=3200,_9=3201,U3=0,w9=1,Ri="srgb",jr="srgb-linear",tu=7680,M9=519,Mm=35044,Sm="300 es",Qh=1035;let Wo=class{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(t)===-1&&i[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const i=this._listeners;return i[e]!==void 0&&i[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const r=this._listeners[e];if(r!==void 0){const s=r.indexOf(t);s!==-1&&r.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const i=this._listeners[e.type];if(i!==void 0){e.target=this;const r=i.slice(0);for(let s=0,o=r.length;s<o;s++)r[s].call(this,e);e.target=null}}};const Bt=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],nu=Math.PI/180,Em=180/Math.PI;function fc(){const n=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(Bt[n&255]+Bt[n>>8&255]+Bt[n>>16&255]+Bt[n>>24&255]+"-"+Bt[e&255]+Bt[e>>8&255]+"-"+Bt[e>>16&15|64]+Bt[e>>24&255]+"-"+Bt[t&63|128]+Bt[t>>8&255]+"-"+Bt[t>>16&255]+Bt[t>>24&255]+Bt[i&255]+Bt[i>>8&255]+Bt[i>>16&255]+Bt[i>>24&255]).toLowerCase()}function xn(n,e,t){return Math.max(e,Math.min(t,n))}function S9(n,e){return(n%e+e)%e}function iu(n,e,t){return(1-t)*n+t*e}function Tm(n){return(n&n-1)===0&&n!==0}function e0(n){return Math.pow(2,Math.floor(Math.log(n)/Math.LN2))}let xt=class G3{constructor(e=0,t=0){G3.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,i=this.y,r=e.elements;return this.x=r[0]*t+r[3]*i+r[6],this.y=r[1]*t+r[4]*i+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const i=Math.cos(t),r=Math.sin(t),s=this.x-e.x,o=this.y-e.y;return this.x=s*i-o*r+e.x,this.y=s*r+o*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}},oi=class k3{constructor(){k3.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(e,t,i,r,s,o,a,l,c){const d=this.elements;return d[0]=e,d[1]=r,d[2]=a,d[3]=t,d[4]=s,d[5]=l,d[6]=i,d[7]=o,d[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,r=t.elements,s=this.elements,o=i[0],a=i[3],l=i[6],c=i[1],d=i[4],u=i[7],f=i[2],h=i[5],p=i[8],x=r[0],m=r[3],v=r[6],g=r[1],w=r[4],y=r[7],M=r[2],b=r[5],_=r[8];return s[0]=o*x+a*g+l*M,s[3]=o*m+a*w+l*b,s[6]=o*v+a*y+l*_,s[1]=c*x+d*g+u*M,s[4]=c*m+d*w+u*b,s[7]=c*v+d*y+u*_,s[2]=f*x+h*g+p*M,s[5]=f*m+h*w+p*b,s[8]=f*v+h*y+p*_,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],d=e[8];return t*o*d-t*a*c-i*s*d+i*a*l+r*s*c-r*o*l}invert(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],d=e[8],u=d*o-a*c,f=a*l-d*s,h=c*s-o*l,p=t*u+i*f+r*h;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const x=1/p;return e[0]=u*x,e[1]=(r*c-d*i)*x,e[2]=(a*i-r*o)*x,e[3]=f*x,e[4]=(d*t-r*l)*x,e[5]=(r*s-a*t)*x,e[6]=h*x,e[7]=(i*l-c*t)*x,e[8]=(o*t-i*s)*x,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,r,s,o,a){const l=Math.cos(s),c=Math.sin(s);return this.set(i*l,i*c,-i*(l*o+c*a)+o+e,-r*c,r*l,-r*(-c*o+l*a)+a+t,0,0,1),this}scale(e,t){const i=this.elements;return i[0]*=e,i[3]*=e,i[6]*=e,i[1]*=t,i[4]*=t,i[7]*=t,this}rotate(e){const t=Math.cos(e),i=Math.sin(e),r=this.elements,s=r[0],o=r[3],a=r[6],l=r[1],c=r[4],d=r[7];return r[0]=t*s+i*l,r[3]=t*o+i*c,r[6]=t*a+i*d,r[1]=-i*s+t*l,r[4]=-i*o+t*c,r[7]=-i*a+t*d,this}translate(e,t){const i=this.elements;return i[0]+=e*i[2],i[3]+=e*i[5],i[6]+=e*i[8],i[1]+=t*i[2],i[4]+=t*i[5],i[7]+=t*i[8],this}equals(e){const t=this.elements,i=e.elements;for(let r=0;r<9;r++)if(t[r]!==i[r])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}};function H3(n){for(let e=n.length-1;e>=0;--e)if(n[e]>65535)return!0;return!1}function Wl(n){return document.createElementNS("http://www.w3.org/1999/xhtml",n)}function Kr(n){return n<.04045?n*.0773993808:Math.pow(n*.9478672986+.0521327014,2.4)}function Bl(n){return n<.0031308?n*12.92:1.055*Math.pow(n,.41666)-.055}const ru={[Ri]:{[jr]:Kr},[jr]:{[Ri]:Bl}},On={legacyMode:!0,get workingColorSpace(){return jr},set workingColorSpace(n){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(n,e,t){if(this.legacyMode||e===t||!e||!t)return n;if(ru[e]&&ru[e][t]!==void 0){const i=ru[e][t];return n.r=i(n.r),n.g=i(n.g),n.b=i(n.b),n}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(n,e){return this.convert(n,this.workingColorSpace,e)},toWorkingColorSpace:function(n,e){return this.convert(n,e,this.workingColorSpace)}},V3={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},It={r:0,g:0,b:0},qn={h:0,s:0,l:0},Cc={h:0,s:0,l:0};function su(n,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?n+(e-n)*6*t:t<1/2?e:t<2/3?n+(e-n)*6*(2/3-t):n}function Rc(n,e){return e.r=n.r,e.g=n.g,e.b=n.b,e}let lt=class{constructor(e,t,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,t===void 0&&i===void 0?this.set(e):this.setRGB(e,t,i)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Ri){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,On.toWorkingColorSpace(this,t),this}setRGB(e,t,i,r=jr){return this.r=e,this.g=t,this.b=i,On.toWorkingColorSpace(this,r),this}setHSL(e,t,i,r=jr){if(e=S9(e,1),t=xn(t,0,1),i=xn(i,0,1),t===0)this.r=this.g=this.b=i;else{const s=i<=.5?i*(1+t):i+t-i*t,o=2*i-s;this.r=su(o,s,e+1/3),this.g=su(o,s,e),this.b=su(o,s,e-1/3)}return On.toWorkingColorSpace(this,r),this}setStyle(e,t=Ri){function i(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let s;const o=r[1],a=r[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(s[1],10))/255,this.g=Math.min(255,parseInt(s[2],10))/255,this.b=Math.min(255,parseInt(s[3],10))/255,On.toWorkingColorSpace(this,t),i(s[4]),this;if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(s[1],10))/100,this.g=Math.min(100,parseInt(s[2],10))/100,this.b=Math.min(100,parseInt(s[3],10))/100,On.toWorkingColorSpace(this,t),i(s[4]),this;break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const l=parseFloat(s[1])/360,c=parseInt(s[2],10)/100,d=parseInt(s[3],10)/100;return i(s[4]),this.setHSL(l,c,d,t)}break}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=r[1],o=s.length;if(o===3)return this.r=parseInt(s.charAt(0)+s.charAt(0),16)/255,this.g=parseInt(s.charAt(1)+s.charAt(1),16)/255,this.b=parseInt(s.charAt(2)+s.charAt(2),16)/255,On.toWorkingColorSpace(this,t),this;if(o===6)return this.r=parseInt(s.charAt(0)+s.charAt(1),16)/255,this.g=parseInt(s.charAt(2)+s.charAt(3),16)/255,this.b=parseInt(s.charAt(4)+s.charAt(5),16)/255,On.toWorkingColorSpace(this,t),this}return e&&e.length>0?this.setColorName(e,t):this}setColorName(e,t=Ri){const i=V3[e.toLowerCase()];return i!==void 0?this.setHex(i,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Kr(e.r),this.g=Kr(e.g),this.b=Kr(e.b),this}copyLinearToSRGB(e){return this.r=Bl(e.r),this.g=Bl(e.g),this.b=Bl(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Ri){return On.fromWorkingColorSpace(Rc(this,It),e),xn(It.r*255,0,255)<<16^xn(It.g*255,0,255)<<8^xn(It.b*255,0,255)<<0}getHexString(e=Ri){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=jr){On.fromWorkingColorSpace(Rc(this,It),t);const i=It.r,r=It.g,s=It.b,o=Math.max(i,r,s),a=Math.min(i,r,s);let l,c;const d=(a+o)/2;if(a===o)l=0,c=0;else{const u=o-a;switch(c=d<=.5?u/(o+a):u/(2-o-a),o){case i:l=(r-s)/u+(r<s?6:0);break;case r:l=(s-i)/u+2;break;case s:l=(i-r)/u+4;break}l/=6}return e.h=l,e.s=c,e.l=d,e}getRGB(e,t=jr){return On.fromWorkingColorSpace(Rc(this,It),t),e.r=It.r,e.g=It.g,e.b=It.b,e}getStyle(e=Ri){return On.fromWorkingColorSpace(Rc(this,It),e),e!==Ri?`color(${e} ${It.r} ${It.g} ${It.b})`:`rgb(${It.r*255|0},${It.g*255|0},${It.b*255|0})`}offsetHSL(e,t,i){return this.getHSL(qn),qn.h+=e,qn.s+=t,qn.l+=i,this.setHSL(qn.h,qn.s,qn.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(qn),e.getHSL(Cc);const i=iu(qn.h,Cc.h,t),r=iu(qn.s,Cc.s,t),s=iu(qn.l,Cc.l,t);return this.setHSL(i,r,s),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),e.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}};lt.NAMES=V3;let Ps,W3=class{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Ps===void 0&&(Ps=Wl("canvas")),Ps.width=e.width,Ps.height=e.height;const i=Ps.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),t=Ps}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Wl("canvas");t.width=e.width,t.height=e.height;const i=t.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const r=i.getImageData(0,0,e.width,e.height),s=r.data;for(let o=0;o<s.length;o++)s[o]=Kr(s[o]/255)*255;return i.putImageData(r,0,0),t}else if(e.data){const t=e.data.slice(0);for(let i=0;i<t.length;i++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[i]=Math.floor(Kr(t[i]/255)*255):t[i]=Kr(t[i]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}};class $3{constructor(e=null){this.isSource=!0,this.uuid=fc(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const i={uuid:this.uuid,url:""},r=this.data;if(r!==null){let s;if(Array.isArray(r)){s=[];for(let o=0,a=r.length;o<a;o++)r[o].isDataTexture?s.push(ou(r[o].image)):s.push(ou(r[o]))}else s=ou(r);i.url=s}return t||(e.images[this.uuid]=i),i}}function ou(n){return typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&n instanceof ImageBitmap?W3.getDataURL(n):n.data?{data:Array.from(n.data),width:n.width,height:n.height,type:n.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let E9=0,Mr=class t0 extends Wo{constructor(e=t0.DEFAULT_IMAGE,t=t0.DEFAULT_MAPPING,i=Hn,r=Hn,s=Ln,o=Id,a=si,l=rs,c=1,d=ss){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:E9++}),this.uuid=fc(),this.name="",this.source=new $3(e),this.mipmaps=[],this.mapping=t,this.wrapS=i,this.wrapT=r,this.magFilter=s,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new xt(0,0),this.repeat=new xt(1,1),this.center=new xt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new oi,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=d,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==N3)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Jh:e.x=e.x-Math.floor(e.x);break;case Hn:e.x=e.x<0?0:1;break;case Kh:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Jh:e.y=e.y-Math.floor(e.y);break;case Hn:e.y=e.y<0?0:1;break;case Kh:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}};Mr.DEFAULT_IMAGE=null;Mr.DEFAULT_MAPPING=N3;let Ht=class j3{constructor(e=0,t=0,i=0,r=1){j3.prototype.isVector4=!0,this.x=e,this.y=t,this.z=i,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,r){return this.x=e,this.y=t,this.z=i,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,i=this.y,r=this.z,s=this.w,o=e.elements;return this.x=o[0]*t+o[4]*i+o[8]*r+o[12]*s,this.y=o[1]*t+o[5]*i+o[9]*r+o[13]*s,this.z=o[2]*t+o[6]*i+o[10]*r+o[14]*s,this.w=o[3]*t+o[7]*i+o[11]*r+o[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,r,s;const l=e.elements,c=l[0],d=l[4],u=l[8],f=l[1],h=l[5],p=l[9],x=l[2],m=l[6],v=l[10];if(Math.abs(d-f)<.01&&Math.abs(u-x)<.01&&Math.abs(p-m)<.01){if(Math.abs(d+f)<.1&&Math.abs(u+x)<.1&&Math.abs(p+m)<.1&&Math.abs(c+h+v-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const w=(c+1)/2,y=(h+1)/2,M=(v+1)/2,b=(d+f)/4,_=(u+x)/4,S=(p+m)/4;return w>y&&w>M?w<.01?(i=0,r=.707106781,s=.707106781):(i=Math.sqrt(w),r=b/i,s=_/i):y>M?y<.01?(i=.707106781,r=0,s=.707106781):(r=Math.sqrt(y),i=b/r,s=S/r):M<.01?(i=.707106781,r=.707106781,s=0):(s=Math.sqrt(M),i=_/s,r=S/s),this.set(i,r,s,t),this}let g=Math.sqrt((m-p)*(m-p)+(u-x)*(u-x)+(f-d)*(f-d));return Math.abs(g)<.001&&(g=1),this.x=(m-p)/g,this.y=(u-x)/g,this.z=(f-d)/g,this.w=Math.acos((c+h+v-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}},os=class extends Wo{constructor(e,t,i={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Ht(0,0,e,t),this.scissorTest=!1,this.viewport=new Ht(0,0,e,t);const r={width:e,height:t,depth:1};this.texture=new Mr(r,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=i.generateMipmaps!==void 0?i.generateMipmaps:!1,this.texture.internalFormat=i.internalFormat!==void 0?i.internalFormat:null,this.texture.minFilter=i.minFilter!==void 0?i.minFilter:Ln,this.depthBuffer=i.depthBuffer!==void 0?i.depthBuffer:!0,this.stencilBuffer=i.stencilBuffer!==void 0?i.stencilBuffer:!1,this.depthTexture=i.depthTexture!==void 0?i.depthTexture:null,this.samples=i.samples!==void 0?i.samples:0}setSize(e,t,i=1){(this.width!==e||this.height!==t||this.depth!==i)&&(this.width=e,this.height=t,this.depth=i,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=i,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new $3(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}};class X3 extends Mr{constructor(e=null,t=1,i=1,r=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:i,depth:r},this.magFilter=rn,this.minFilter=rn,this.wrapR=Hn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class T9 extends Mr{constructor(e=null,t=1,i=1,r=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:i,depth:r},this.magFilter=rn,this.minFilter=rn,this.wrapR=Hn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}let St=class{constructor(e=0,t=0,i=0,r=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=i,this._w=r}static slerpFlat(e,t,i,r,s,o,a){let l=i[r+0],c=i[r+1],d=i[r+2],u=i[r+3];const f=s[o+0],h=s[o+1],p=s[o+2],x=s[o+3];if(a===0){e[t+0]=l,e[t+1]=c,e[t+2]=d,e[t+3]=u;return}if(a===1){e[t+0]=f,e[t+1]=h,e[t+2]=p,e[t+3]=x;return}if(u!==x||l!==f||c!==h||d!==p){let m=1-a;const v=l*f+c*h+d*p+u*x,g=v>=0?1:-1,w=1-v*v;if(w>Number.EPSILON){const M=Math.sqrt(w),b=Math.atan2(M,v*g);m=Math.sin(m*b)/M,a=Math.sin(a*b)/M}const y=a*g;if(l=l*m+f*y,c=c*m+h*y,d=d*m+p*y,u=u*m+x*y,m===1-a){const M=1/Math.sqrt(l*l+c*c+d*d+u*u);l*=M,c*=M,d*=M,u*=M}}e[t]=l,e[t+1]=c,e[t+2]=d,e[t+3]=u}static multiplyQuaternionsFlat(e,t,i,r,s,o){const a=i[r],l=i[r+1],c=i[r+2],d=i[r+3],u=s[o],f=s[o+1],h=s[o+2],p=s[o+3];return e[t]=a*p+d*u+l*h-c*f,e[t+1]=l*p+d*f+c*u-a*h,e[t+2]=c*p+d*h+a*f-l*u,e[t+3]=d*p-a*u-l*f-c*h,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,r){return this._x=e,this._y=t,this._z=i,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const i=e._x,r=e._y,s=e._z,o=e._order,a=Math.cos,l=Math.sin,c=a(i/2),d=a(r/2),u=a(s/2),f=l(i/2),h=l(r/2),p=l(s/2);switch(o){case"XYZ":this._x=f*d*u+c*h*p,this._y=c*h*u-f*d*p,this._z=c*d*p+f*h*u,this._w=c*d*u-f*h*p;break;case"YXZ":this._x=f*d*u+c*h*p,this._y=c*h*u-f*d*p,this._z=c*d*p-f*h*u,this._w=c*d*u+f*h*p;break;case"ZXY":this._x=f*d*u-c*h*p,this._y=c*h*u+f*d*p,this._z=c*d*p+f*h*u,this._w=c*d*u-f*h*p;break;case"ZYX":this._x=f*d*u-c*h*p,this._y=c*h*u+f*d*p,this._z=c*d*p-f*h*u,this._w=c*d*u+f*h*p;break;case"YZX":this._x=f*d*u+c*h*p,this._y=c*h*u+f*d*p,this._z=c*d*p-f*h*u,this._w=c*d*u-f*h*p;break;case"XZY":this._x=f*d*u-c*h*p,this._y=c*h*u-f*d*p,this._z=c*d*p+f*h*u,this._w=c*d*u+f*h*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const i=t/2,r=Math.sin(i);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,i=t[0],r=t[4],s=t[8],o=t[1],a=t[5],l=t[9],c=t[2],d=t[6],u=t[10],f=i+a+u;if(f>0){const h=.5/Math.sqrt(f+1);this._w=.25/h,this._x=(d-l)*h,this._y=(s-c)*h,this._z=(o-r)*h}else if(i>a&&i>u){const h=2*Math.sqrt(1+i-a-u);this._w=(d-l)/h,this._x=.25*h,this._y=(r+o)/h,this._z=(s+c)/h}else if(a>u){const h=2*Math.sqrt(1+a-i-u);this._w=(s-c)/h,this._x=(r+o)/h,this._y=.25*h,this._z=(l+d)/h}else{const h=2*Math.sqrt(1+u-i-a);this._w=(o-r)/h,this._x=(s+c)/h,this._y=(l+d)/h,this._z=.25*h}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(xn(this.dot(e),-1,1)))}rotateTowards(e,t){const i=this.angleTo(e);if(i===0)return this;const r=Math.min(1,t/i);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const i=e._x,r=e._y,s=e._z,o=e._w,a=t._x,l=t._y,c=t._z,d=t._w;return this._x=i*d+o*a+r*c-s*l,this._y=r*d+o*l+s*a-i*c,this._z=s*d+o*c+i*l-r*a,this._w=o*d-i*a-r*l-s*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const i=this._x,r=this._y,s=this._z,o=this._w;let a=o*e._w+i*e._x+r*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=i,this._y=r,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const h=1-t;return this._w=h*o+t*this._w,this._x=h*i+t*this._x,this._y=h*r+t*this._y,this._z=h*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),d=Math.atan2(c,a),u=Math.sin((1-t)*d)/c,f=Math.sin(t*d)/c;return this._w=o*u+this._w*f,this._x=i*u+this._x*f,this._y=r*u+this._y*f,this._z=s*u+this._z*f,this._onChangeCallback(),this}slerpQuaternions(e,t,i){return this.copy(e).slerp(t,i)}random(){const e=Math.random(),t=Math.sqrt(1-e),i=Math.sqrt(e),r=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(r),i*Math.sin(s),i*Math.cos(s),t*Math.sin(r))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}},ce=class Y3{constructor(e=0,t=0,i=0){Y3.prototype.isVector3=!0,this.x=e,this.y=t,this.z=i}set(e,t,i){return i===void 0&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Am.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Am.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[3]*i+s[6]*r,this.y=s[1]*t+s[4]*i+s[7]*r,this.z=s[2]*t+s[5]*i+s[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,i=this.y,r=this.z,s=e.elements,o=1/(s[3]*t+s[7]*i+s[11]*r+s[15]);return this.x=(s[0]*t+s[4]*i+s[8]*r+s[12])*o,this.y=(s[1]*t+s[5]*i+s[9]*r+s[13])*o,this.z=(s[2]*t+s[6]*i+s[10]*r+s[14])*o,this}applyQuaternion(e){const t=this.x,i=this.y,r=this.z,s=e.x,o=e.y,a=e.z,l=e.w,c=l*t+o*r-a*i,d=l*i+a*t-s*r,u=l*r+s*i-o*t,f=-s*t-o*i-a*r;return this.x=c*l+f*-s+d*-a-u*-o,this.y=d*l+f*-o+u*-s-c*-a,this.z=u*l+f*-a+c*-o-d*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[4]*i+s[8]*r,this.y=s[1]*t+s[5]*i+s[9]*r,this.z=s[2]*t+s[6]*i+s[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const i=e.x,r=e.y,s=e.z,o=t.x,a=t.y,l=t.z;return this.x=r*l-s*a,this.y=s*o-i*l,this.z=i*a-r*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return au.copy(this).projectOnVector(e),this.sub(au)}reflect(e){return this.sub(au.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(xn(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y,r=this.z-e.z;return t*t+i*i+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){const r=Math.sin(t)*e;return this.x=r*Math.sin(i),this.y=Math.cos(t)*e,this.z=r*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,i=Math.sqrt(1-e**2);return this.x=i*Math.cos(t),this.y=i*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}};const au=new ce,Am=new St;let hc=class{constructor(e=new ce(1/0,1/0,1/0),t=new ce(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,i=1/0,r=1/0,s=-1/0,o=-1/0,a=-1/0;for(let l=0,c=e.length;l<c;l+=3){const d=e[l],u=e[l+1],f=e[l+2];d<t&&(t=d),u<i&&(i=u),f<r&&(r=f),d>s&&(s=d),u>o&&(o=u),f>a&&(a=f)}return this.min.set(t,i,r),this.max.set(s,o,a),this}setFromBufferAttribute(e){let t=1/0,i=1/0,r=1/0,s=-1/0,o=-1/0,a=-1/0;for(let l=0,c=e.count;l<c;l++){const d=e.getX(l),u=e.getY(l),f=e.getZ(l);d<t&&(t=d),u<i&&(i=u),f<r&&(r=f),d>s&&(s=d),u>o&&(o=u),f>a&&(a=f)}return this.min.set(t,i,r),this.max.set(s,o,a),this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=Lr.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(i!==void 0)if(t&&i.attributes!=null&&i.attributes.position!==void 0){const s=i.attributes.position;for(let o=0,a=s.count;o<a;o++)Lr.fromBufferAttribute(s,o).applyMatrix4(e.matrixWorld),this.expandByPoint(Lr)}else i.boundingBox===null&&i.computeBoundingBox(),cu.copy(i.boundingBox),cu.applyMatrix4(e.matrixWorld),this.union(cu);const r=e.children;for(let s=0,o=r.length;s<o;s++)this.expandByObject(r[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Lr),Lr.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(sa),Pc.subVectors(this.max,sa),Is.subVectors(e.a,sa),Ds.subVectors(e.b,sa),Os.subVectors(e.c,sa),Vi.subVectors(Ds,Is),Wi.subVectors(Os,Ds),Cr.subVectors(Is,Os);let t=[0,-Vi.z,Vi.y,0,-Wi.z,Wi.y,0,-Cr.z,Cr.y,Vi.z,0,-Vi.x,Wi.z,0,-Wi.x,Cr.z,0,-Cr.x,-Vi.y,Vi.x,0,-Wi.y,Wi.x,0,-Cr.y,Cr.x,0];return!lu(t,Is,Ds,Os,Pc)||(t=[1,0,0,0,1,0,0,0,1],!lu(t,Is,Ds,Os,Pc))?!1:(Ic.crossVectors(Vi,Wi),t=[Ic.x,Ic.y,Ic.z],lu(t,Is,Ds,Os,Pc))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Lr.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=this.getSize(Lr).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(yi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),yi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),yi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),yi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),yi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),yi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),yi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),yi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(yi),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}};const yi=[new ce,new ce,new ce,new ce,new ce,new ce,new ce,new ce],Lr=new ce,cu=new hc,Is=new ce,Ds=new ce,Os=new ce,Vi=new ce,Wi=new ce,Cr=new ce,sa=new ce,Pc=new ce,Ic=new ce,Rr=new ce;function lu(n,e,t,i,r){for(let s=0,o=n.length-3;s<=o;s+=3){Rr.fromArray(n,s);const a=r.x*Math.abs(Rr.x)+r.y*Math.abs(Rr.y)+r.z*Math.abs(Rr.z),l=e.dot(Rr),c=t.dot(Rr),d=i.dot(Rr);if(Math.max(-Math.max(l,c,d),Math.min(l,c,d))>a)return!1}return!0}const A9=new hc,Lm=new ce,Dc=new ce,du=new ce;let K0=class{constructor(e=new ce,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const i=this.center;t!==void 0?i.copy(t):A9.setFromPoints(e).getCenter(i);let r=0;for(let s=0,o=e.length;s<o;s++)r=Math.max(r,i.distanceToSquared(e[s]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){du.subVectors(e,this.center);const t=du.lengthSq();if(t>this.radius*this.radius){const i=Math.sqrt(t),r=(i-this.radius)*.5;this.center.add(du.multiplyScalar(r/i)),this.radius+=r}return this}union(e){return this.center.equals(e.center)===!0?Dc.set(0,0,1).multiplyScalar(e.radius):Dc.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(Lm.copy(e.center).add(Dc)),this.expandByPoint(Lm.copy(e.center).sub(Dc)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}};const bi=new ce,uu=new ce,Oc=new ce,$i=new ce,fu=new ce,qc=new ce,hu=new ce;let L9=class{constructor(e=new ce,t=new ce(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,bi)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(i).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=bi.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(bi.copy(this.direction).multiplyScalar(t).add(this.origin),bi.distanceToSquared(e))}distanceSqToSegment(e,t,i,r){uu.copy(e).add(t).multiplyScalar(.5),Oc.copy(t).sub(e).normalize(),$i.copy(this.origin).sub(uu);const s=e.distanceTo(t)*.5,o=-this.direction.dot(Oc),a=$i.dot(this.direction),l=-$i.dot(Oc),c=$i.lengthSq(),d=Math.abs(1-o*o);let u,f,h,p;if(d>0)if(u=o*l-a,f=o*a-l,p=s*d,u>=0)if(f>=-p)if(f<=p){const x=1/d;u*=x,f*=x,h=u*(u+o*f+2*a)+f*(o*u+f+2*l)+c}else f=s,u=Math.max(0,-(o*f+a)),h=-u*u+f*(f+2*l)+c;else f=-s,u=Math.max(0,-(o*f+a)),h=-u*u+f*(f+2*l)+c;else f<=-p?(u=Math.max(0,-(-o*s+a)),f=u>0?-s:Math.min(Math.max(-s,-l),s),h=-u*u+f*(f+2*l)+c):f<=p?(u=0,f=Math.min(Math.max(-s,-l),s),h=f*(f+2*l)+c):(u=Math.max(0,-(o*s+a)),f=u>0?s:Math.min(Math.max(-s,-l),s),h=-u*u+f*(f+2*l)+c);else f=o>0?-s:s,u=Math.max(0,-(o*f+a)),h=-u*u+f*(f+2*l)+c;return i&&i.copy(this.direction).multiplyScalar(u).add(this.origin),r&&r.copy(Oc).multiplyScalar(f).add(uu),h}intersectSphere(e,t){bi.subVectors(e.center,this.origin);const i=bi.dot(this.direction),r=bi.dot(bi)-i*i,s=e.radius*e.radius;if(r>s)return null;const o=Math.sqrt(s-r),a=i-o,l=i+o;return a<0&&l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){const i=this.distanceToPlane(e);return i===null?null:this.at(i,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let i,r,s,o,a,l;const c=1/this.direction.x,d=1/this.direction.y,u=1/this.direction.z,f=this.origin;return c>=0?(i=(e.min.x-f.x)*c,r=(e.max.x-f.x)*c):(i=(e.max.x-f.x)*c,r=(e.min.x-f.x)*c),d>=0?(s=(e.min.y-f.y)*d,o=(e.max.y-f.y)*d):(s=(e.max.y-f.y)*d,o=(e.min.y-f.y)*d),i>o||s>r||((s>i||i!==i)&&(i=s),(o<r||r!==r)&&(r=o),u>=0?(a=(e.min.z-f.z)*u,l=(e.max.z-f.z)*u):(a=(e.max.z-f.z)*u,l=(e.min.z-f.z)*u),i>l||a>r)||((a>i||i!==i)&&(i=a),(l<r||r!==r)&&(r=l),r<0)?null:this.at(i>=0?i:r,t)}intersectsBox(e){return this.intersectBox(e,bi)!==null}intersectTriangle(e,t,i,r,s){fu.subVectors(t,e),qc.subVectors(i,e),hu.crossVectors(fu,qc);let o=this.direction.dot(hu),a;if(o>0){if(r)return null;a=1}else if(o<0)a=-1,o=-o;else return null;$i.subVectors(this.origin,e);const l=a*this.direction.dot(qc.crossVectors($i,qc));if(l<0)return null;const c=a*this.direction.dot(fu.cross($i));if(c<0||l+c>o)return null;const d=-a*$i.dot(hu);return d<0?null:this.at(d/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}},sn=class n0{constructor(){n0.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(e,t,i,r,s,o,a,l,c,d,u,f,h,p,x,m){const v=this.elements;return v[0]=e,v[4]=t,v[8]=i,v[12]=r,v[1]=s,v[5]=o,v[9]=a,v[13]=l,v[2]=c,v[6]=d,v[10]=u,v[14]=f,v[3]=h,v[7]=p,v[11]=x,v[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new n0().fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){const t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,i=e.elements,r=1/qs.setFromMatrixColumn(e,0).length(),s=1/qs.setFromMatrixColumn(e,1).length(),o=1/qs.setFromMatrixColumn(e,2).length();return t[0]=i[0]*r,t[1]=i[1]*r,t[2]=i[2]*r,t[3]=0,t[4]=i[4]*s,t[5]=i[5]*s,t[6]=i[6]*s,t[7]=0,t[8]=i[8]*o,t[9]=i[9]*o,t[10]=i[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,i=e.x,r=e.y,s=e.z,o=Math.cos(i),a=Math.sin(i),l=Math.cos(r),c=Math.sin(r),d=Math.cos(s),u=Math.sin(s);if(e.order==="XYZ"){const f=o*d,h=o*u,p=a*d,x=a*u;t[0]=l*d,t[4]=-l*u,t[8]=c,t[1]=h+p*c,t[5]=f-x*c,t[9]=-a*l,t[2]=x-f*c,t[6]=p+h*c,t[10]=o*l}else if(e.order==="YXZ"){const f=l*d,h=l*u,p=c*d,x=c*u;t[0]=f+x*a,t[4]=p*a-h,t[8]=o*c,t[1]=o*u,t[5]=o*d,t[9]=-a,t[2]=h*a-p,t[6]=x+f*a,t[10]=o*l}else if(e.order==="ZXY"){const f=l*d,h=l*u,p=c*d,x=c*u;t[0]=f-x*a,t[4]=-o*u,t[8]=p+h*a,t[1]=h+p*a,t[5]=o*d,t[9]=x-f*a,t[2]=-o*c,t[6]=a,t[10]=o*l}else if(e.order==="ZYX"){const f=o*d,h=o*u,p=a*d,x=a*u;t[0]=l*d,t[4]=p*c-h,t[8]=f*c+x,t[1]=l*u,t[5]=x*c+f,t[9]=h*c-p,t[2]=-c,t[6]=a*l,t[10]=o*l}else if(e.order==="YZX"){const f=o*l,h=o*c,p=a*l,x=a*c;t[0]=l*d,t[4]=x-f*u,t[8]=p*u+h,t[1]=u,t[5]=o*d,t[9]=-a*d,t[2]=-c*d,t[6]=h*u+p,t[10]=f-x*u}else if(e.order==="XZY"){const f=o*l,h=o*c,p=a*l,x=a*c;t[0]=l*d,t[4]=-u,t[8]=c*d,t[1]=f*u+x,t[5]=o*d,t[9]=h*u-p,t[2]=p*u-h,t[6]=a*d,t[10]=x*u+f}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(C9,e,R9)}lookAt(e,t,i){const r=this.elements;return un.subVectors(e,t),un.lengthSq()===0&&(un.z=1),un.normalize(),ji.crossVectors(i,un),ji.lengthSq()===0&&(Math.abs(i.z)===1?un.x+=1e-4:un.z+=1e-4,un.normalize(),ji.crossVectors(i,un)),ji.normalize(),zc.crossVectors(un,ji),r[0]=ji.x,r[4]=zc.x,r[8]=un.x,r[1]=ji.y,r[5]=zc.y,r[9]=un.y,r[2]=ji.z,r[6]=zc.z,r[10]=un.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,r=t.elements,s=this.elements,o=i[0],a=i[4],l=i[8],c=i[12],d=i[1],u=i[5],f=i[9],h=i[13],p=i[2],x=i[6],m=i[10],v=i[14],g=i[3],w=i[7],y=i[11],M=i[15],b=r[0],_=r[4],S=r[8],E=r[12],R=r[1],I=r[5],$=r[9],W=r[13],L=r[2],z=r[6],U=r[10],X=r[14],K=r[3],j=r[7],ee=r[11],P=r[15];return s[0]=o*b+a*R+l*L+c*K,s[4]=o*_+a*I+l*z+c*j,s[8]=o*S+a*$+l*U+c*ee,s[12]=o*E+a*W+l*X+c*P,s[1]=d*b+u*R+f*L+h*K,s[5]=d*_+u*I+f*z+h*j,s[9]=d*S+u*$+f*U+h*ee,s[13]=d*E+u*W+f*X+h*P,s[2]=p*b+x*R+m*L+v*K,s[6]=p*_+x*I+m*z+v*j,s[10]=p*S+x*$+m*U+v*ee,s[14]=p*E+x*W+m*X+v*P,s[3]=g*b+w*R+y*L+M*K,s[7]=g*_+w*I+y*z+M*j,s[11]=g*S+w*$+y*U+M*ee,s[15]=g*E+w*W+y*X+M*P,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[4],r=e[8],s=e[12],o=e[1],a=e[5],l=e[9],c=e[13],d=e[2],u=e[6],f=e[10],h=e[14],p=e[3],x=e[7],m=e[11],v=e[15];return p*(+s*l*u-r*c*u-s*a*f+i*c*f+r*a*h-i*l*h)+x*(+t*l*h-t*c*f+s*o*f-r*o*h+r*c*d-s*l*d)+m*(+t*c*u-t*a*h-s*o*u+i*o*h+s*a*d-i*c*d)+v*(-r*a*d-t*l*u+t*a*f+r*o*u-i*o*f+i*l*d)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=i),this}invert(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],d=e[8],u=e[9],f=e[10],h=e[11],p=e[12],x=e[13],m=e[14],v=e[15],g=u*m*c-x*f*c+x*l*h-a*m*h-u*l*v+a*f*v,w=p*f*c-d*m*c-p*l*h+o*m*h+d*l*v-o*f*v,y=d*x*c-p*u*c+p*a*h-o*x*h-d*a*v+o*u*v,M=p*u*l-d*x*l-p*a*f+o*x*f+d*a*m-o*u*m,b=t*g+i*w+r*y+s*M;if(b===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const _=1/b;return e[0]=g*_,e[1]=(x*f*s-u*m*s-x*r*h+i*m*h+u*r*v-i*f*v)*_,e[2]=(a*m*s-x*l*s+x*r*c-i*m*c-a*r*v+i*l*v)*_,e[3]=(u*l*s-a*f*s-u*r*c+i*f*c+a*r*h-i*l*h)*_,e[4]=w*_,e[5]=(d*m*s-p*f*s+p*r*h-t*m*h-d*r*v+t*f*v)*_,e[6]=(p*l*s-o*m*s-p*r*c+t*m*c+o*r*v-t*l*v)*_,e[7]=(o*f*s-d*l*s+d*r*c-t*f*c-o*r*h+t*l*h)*_,e[8]=y*_,e[9]=(p*u*s-d*x*s-p*i*h+t*x*h+d*i*v-t*u*v)*_,e[10]=(o*x*s-p*a*s+p*i*c-t*x*c-o*i*v+t*a*v)*_,e[11]=(d*a*s-o*u*s-d*i*c+t*u*c+o*i*h-t*a*h)*_,e[12]=M*_,e[13]=(d*x*r-p*u*r+p*i*f-t*x*f-d*i*m+t*u*m)*_,e[14]=(p*a*r-o*x*r-p*i*l+t*x*l+o*i*m-t*a*m)*_,e[15]=(o*u*r-d*a*r+d*i*l-t*u*l-o*i*f+t*a*f)*_,this}scale(e){const t=this.elements,i=e.x,r=e.y,s=e.z;return t[0]*=i,t[4]*=r,t[8]*=s,t[1]*=i,t[5]*=r,t[9]*=s,t[2]*=i,t[6]*=r,t[10]*=s,t[3]*=i,t[7]*=r,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,r))}makeTranslation(e,t,i){return this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const i=Math.cos(t),r=Math.sin(t),s=1-i,o=e.x,a=e.y,l=e.z,c=s*o,d=s*a;return this.set(c*o+i,c*a-r*l,c*l+r*a,0,c*a+r*l,d*a+i,d*l-r*o,0,c*l-r*a,d*l+r*o,s*l*l+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,r,s,o){return this.set(1,i,s,0,e,1,o,0,t,r,1,0,0,0,0,1),this}compose(e,t,i){const r=this.elements,s=t._x,o=t._y,a=t._z,l=t._w,c=s+s,d=o+o,u=a+a,f=s*c,h=s*d,p=s*u,x=o*d,m=o*u,v=a*u,g=l*c,w=l*d,y=l*u,M=i.x,b=i.y,_=i.z;return r[0]=(1-(x+v))*M,r[1]=(h+y)*M,r[2]=(p-w)*M,r[3]=0,r[4]=(h-y)*b,r[5]=(1-(f+v))*b,r[6]=(m+g)*b,r[7]=0,r[8]=(p+w)*_,r[9]=(m-g)*_,r[10]=(1-(f+x))*_,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,i){const r=this.elements;let s=qs.set(r[0],r[1],r[2]).length();const o=qs.set(r[4],r[5],r[6]).length(),a=qs.set(r[8],r[9],r[10]).length();this.determinant()<0&&(s=-s),e.x=r[12],e.y=r[13],e.z=r[14],zn.copy(this);const c=1/s,d=1/o,u=1/a;return zn.elements[0]*=c,zn.elements[1]*=c,zn.elements[2]*=c,zn.elements[4]*=d,zn.elements[5]*=d,zn.elements[6]*=d,zn.elements[8]*=u,zn.elements[9]*=u,zn.elements[10]*=u,t.setFromRotationMatrix(zn),i.x=s,i.y=o,i.z=a,this}makePerspective(e,t,i,r,s,o){const a=this.elements,l=2*s/(t-e),c=2*s/(i-r),d=(t+e)/(t-e),u=(i+r)/(i-r),f=-(o+s)/(o-s),h=-2*o*s/(o-s);return a[0]=l,a[4]=0,a[8]=d,a[12]=0,a[1]=0,a[5]=c,a[9]=u,a[13]=0,a[2]=0,a[6]=0,a[10]=f,a[14]=h,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(e,t,i,r,s,o){const a=this.elements,l=1/(t-e),c=1/(i-r),d=1/(o-s),u=(t+e)*l,f=(i+r)*c,h=(o+s)*d;return a[0]=2*l,a[4]=0,a[8]=0,a[12]=-u,a[1]=0,a[5]=2*c,a[9]=0,a[13]=-f,a[2]=0,a[6]=0,a[10]=-2*d,a[14]=-h,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(e){const t=this.elements,i=e.elements;for(let r=0;r<16;r++)if(t[r]!==i[r])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}};const qs=new ce,zn=new sn,C9=new ce(0,0,0),R9=new ce(1,1,1),ji=new ce,zc=new ce,un=new ce,Cm=new sn,Rm=new St;let Q0=class Z3{constructor(e=0,t=0,i=0,r=Z3.DefaultOrder){this.isEuler=!0,this._x=e,this._y=t,this._z=i,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,r=this._order){return this._x=e,this._y=t,this._z=i,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){const r=e.elements,s=r[0],o=r[4],a=r[8],l=r[1],c=r[5],d=r[9],u=r[2],f=r[6],h=r[10];switch(t){case"XYZ":this._y=Math.asin(xn(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-d,h),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(f,c),this._z=0);break;case"YXZ":this._x=Math.asin(-xn(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(a,h),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-u,s),this._z=0);break;case"ZXY":this._x=Math.asin(xn(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-u,h),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-xn(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(f,h),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(xn(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-d,c),this._y=Math.atan2(-u,s)):(this._x=0,this._y=Math.atan2(a,h));break;case"XZY":this._z=Math.asin(-xn(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(f,c),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-d,h),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return Cm.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Cm,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Rm.setFromEuler(this),this.setFromQuaternion(Rm,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}};Q0.DefaultOrder="XYZ";Q0.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];let J3=class{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}},P9=0;const Pm=new ce,zs=new St,_i=new sn,Fc=new ce,oa=new ce,I9=new ce,D9=new St,Im=new ce(1,0,0),Dm=new ce(0,1,0),Om=new ce(0,0,1),O9={type:"added"},qm={type:"removed"};let Ui=class i0 extends Wo{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:P9++}),this.uuid=fc(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=i0.DefaultUp.clone();const e=new ce,t=new Q0,i=new St,r=new ce(1,1,1);function s(){i.setFromEuler(t,!1)}function o(){t.setFromQuaternion(i,void 0,!1)}t._onChange(s),i._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new sn},normalMatrix:{value:new oi}}),this.matrix=new sn,this.matrixWorld=new sn,this.matrixAutoUpdate=i0.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new J3,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return zs.setFromAxisAngle(e,t),this.quaternion.multiply(zs),this}rotateOnWorldAxis(e,t){return zs.setFromAxisAngle(e,t),this.quaternion.premultiply(zs),this}rotateX(e){return this.rotateOnAxis(Im,e)}rotateY(e){return this.rotateOnAxis(Dm,e)}rotateZ(e){return this.rotateOnAxis(Om,e)}translateOnAxis(e,t){return Pm.copy(e).applyQuaternion(this.quaternion),this.position.add(Pm.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Im,e)}translateY(e){return this.translateOnAxis(Dm,e)}translateZ(e){return this.translateOnAxis(Om,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(_i.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?Fc.copy(e):Fc.set(e,t,i);const r=this.parent;this.updateWorldMatrix(!0,!1),oa.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?_i.lookAt(oa,Fc,this.up):_i.lookAt(Fc,oa,this.up),this.quaternion.setFromRotationMatrix(_i),r&&(_i.extractRotation(r.matrixWorld),zs.setFromRotationMatrix(_i),this.quaternion.premultiply(zs.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(O9)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(qm)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(qm)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),_i.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),_i.multiply(e.parent.matrixWorld)),e.applyMatrix4(_i),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,r=this.children.length;i<r;i++){const o=this.children[i].getObjectByProperty(e,t);if(o!==void 0)return o}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(oa,e,I9),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(oa,D9,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].updateMatrixWorld(e)}updateWorldMatrix(e,t){const i=this.parent;if(e===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const r=this.children;for(let s=0,o=r.length;s<o;s++)r[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(r.instanceColor=this.instanceColor.toJSON()));function s(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=s(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,d=l.length;c<d;c++){const u=l[c];s(e.shapes,u)}else s(e.shapes,l)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(s(e.materials,this.material[l]));r.material=a}else r.material=s(e.materials,this.material);if(this.children.length>0){r.children=[];for(let a=0;a<this.children.length;a++)r.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];r.animations.push(s(e.animations,l))}}if(t){const a=o(e.geometries),l=o(e.materials),c=o(e.textures),d=o(e.images),u=o(e.shapes),f=o(e.skeletons),h=o(e.animations),p=o(e.nodes);a.length>0&&(i.geometries=a),l.length>0&&(i.materials=l),c.length>0&&(i.textures=c),d.length>0&&(i.images=d),u.length>0&&(i.shapes=u),f.length>0&&(i.skeletons=f),h.length>0&&(i.animations=h),p.length>0&&(i.nodes=p)}return i.object=r,i;function o(a){const l=[];for(const c in a){const d=a[c];delete d.metadata,l.push(d)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let i=0;i<e.children.length;i++){const r=e.children[i];this.add(r.clone())}return this}};Ui.DefaultUp=new ce(0,1,0);Ui.DefaultMatrixAutoUpdate=!0;const Fn=new ce,wi=new ce,pu=new ce,Mi=new ce,Fs=new ce,Ns=new ce,zm=new ce,mu=new ce,xu=new ce,gu=new ce;let vu=class ho{constructor(e=new ce,t=new ce,i=new ce){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,r){r.subVectors(i,t),Fn.subVectors(e,t),r.cross(Fn);const s=r.lengthSq();return s>0?r.multiplyScalar(1/Math.sqrt(s)):r.set(0,0,0)}static getBarycoord(e,t,i,r,s){Fn.subVectors(r,t),wi.subVectors(i,t),pu.subVectors(e,t);const o=Fn.dot(Fn),a=Fn.dot(wi),l=Fn.dot(pu),c=wi.dot(wi),d=wi.dot(pu),u=o*c-a*a;if(u===0)return s.set(-2,-1,-1);const f=1/u,h=(c*l-a*d)*f,p=(o*d-a*l)*f;return s.set(1-h-p,p,h)}static containsPoint(e,t,i,r){return this.getBarycoord(e,t,i,r,Mi),Mi.x>=0&&Mi.y>=0&&Mi.x+Mi.y<=1}static getUV(e,t,i,r,s,o,a,l){return this.getBarycoord(e,t,i,r,Mi),l.set(0,0),l.addScaledVector(s,Mi.x),l.addScaledVector(o,Mi.y),l.addScaledVector(a,Mi.z),l}static isFrontFacing(e,t,i,r){return Fn.subVectors(i,t),wi.subVectors(e,t),Fn.cross(wi).dot(r)<0}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,r){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,i,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Fn.subVectors(this.c,this.b),wi.subVectors(this.a,this.b),Fn.cross(wi).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return ho.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return ho.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,i,r,s){return ho.getUV(e,this.a,this.b,this.c,t,i,r,s)}containsPoint(e){return ho.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return ho.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const i=this.a,r=this.b,s=this.c;let o,a;Fs.subVectors(r,i),Ns.subVectors(s,i),mu.subVectors(e,i);const l=Fs.dot(mu),c=Ns.dot(mu);if(l<=0&&c<=0)return t.copy(i);xu.subVectors(e,r);const d=Fs.dot(xu),u=Ns.dot(xu);if(d>=0&&u<=d)return t.copy(r);const f=l*u-d*c;if(f<=0&&l>=0&&d<=0)return o=l/(l-d),t.copy(i).addScaledVector(Fs,o);gu.subVectors(e,s);const h=Fs.dot(gu),p=Ns.dot(gu);if(p>=0&&h<=p)return t.copy(s);const x=h*c-l*p;if(x<=0&&c>=0&&p<=0)return a=c/(c-p),t.copy(i).addScaledVector(Ns,a);const m=d*p-h*u;if(m<=0&&u-d>=0&&h-p>=0)return zm.subVectors(s,r),a=(u-d)/(u-d+(h-p)),t.copy(r).addScaledVector(zm,a);const v=1/(m+x+f);return o=x*v,a=f*v,t.copy(i).addScaledVector(Fs,o).addScaledVector(Ns,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}},q9=0,pc=class extends Wo{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:q9++}),this.uuid=fc(),this.name="",this.type="Material",this.blending=go,this.side=Ra,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=z3,this.blendDst=F3,this.blendEquation=fo,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Xh,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=M9,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=tu,this.stencilZFail=tu,this.stencilZPass=tu,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const i=e[t];if(i===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if(t==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=i===Pb;continue}const r=this[t];if(r===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}r&&r.isColor?r.set(i):r&&r.isVector3&&i&&i.isVector3?r.copy(i):this[t]=i}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const i={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==go&&(i.blending=this.blending),this.side!==Ra&&(i.side=this.side),this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.colorWrite=this.colorWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(i.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(i.wireframe=this.wireframe),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=this.flatShading),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData);function r(s){const o=[];for(const a in s){const l=s[a];delete l.metadata,o.push(l)}return o}if(t){const s=r(e.textures),o=r(e.images);s.length>0&&(i.textures=s),o.length>0&&(i.images=o)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let i=null;if(t!==null){const r=t.length;i=new Array(r);for(let s=0;s!==r;++s)i[s]=t[s].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}},K3=class extends pc{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new lt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=J0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}};const Ct=new ce,Nc=new xt;let ci=class{constructor(e,t,i){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=i===!0,this.usage=Mm,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let r=0,s=this.itemSize;r<s;r++)this.array[e+r]=t.array[i+r];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){const t=this.array;let i=0;for(let r=0,s=e.length;r<s;r++){let o=e[r];o===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),o=new lt),t[i++]=o.r,t[i++]=o.g,t[i++]=o.b}return this}copyVector2sArray(e){const t=this.array;let i=0;for(let r=0,s=e.length;r<s;r++){let o=e[r];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),o=new xt),t[i++]=o.x,t[i++]=o.y}return this}copyVector3sArray(e){const t=this.array;let i=0;for(let r=0,s=e.length;r<s;r++){let o=e[r];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),o=new ce),t[i++]=o.x,t[i++]=o.y,t[i++]=o.z}return this}copyVector4sArray(e){const t=this.array;let i=0;for(let r=0,s=e.length;r<s;r++){let o=e[r];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",r),o=new Ht),t[i++]=o.x,t[i++]=o.y,t[i++]=o.z,t[i++]=o.w}return this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,i=this.count;t<i;t++)Nc.fromBufferAttribute(this,t),Nc.applyMatrix3(e),this.setXY(t,Nc.x,Nc.y);else if(this.itemSize===3)for(let t=0,i=this.count;t<i;t++)Ct.fromBufferAttribute(this,t),Ct.applyMatrix3(e),this.setXYZ(t,Ct.x,Ct.y,Ct.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)Ct.fromBufferAttribute(this,t),Ct.applyMatrix4(e),this.setXYZ(t,Ct.x,Ct.y,Ct.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)Ct.fromBufferAttribute(this,t),Ct.applyNormalMatrix(e),this.setXYZ(t,Ct.x,Ct.y,Ct.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)Ct.fromBufferAttribute(this,t),Ct.transformDirection(e),this.setXYZ(t,Ct.x,Ct.y,Ct.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=r,this}setXYZW(e,t,i,r,s){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=r,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Mm&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}},Q3=class extends ci{constructor(e,t,i){super(new Uint16Array(e),t,i)}},ev=class extends ci{constructor(e,t,i){super(new Uint32Array(e),t,i)}},Qr=class extends ci{constructor(e,t,i){super(new Float32Array(e),t,i)}},z9=0;const Tn=new sn,yu=new Ui,Bs=new ce,fn=new hc,aa=new hc,Ot=new ce;let mc=class tv extends Wo{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:z9++}),this.uuid=fc(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(H3(e)?ev:Q3)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const s=new oi().getNormalMatrix(e);i.applyNormalMatrix(s),i.needsUpdate=!0}const r=this.attributes.tangent;return r!==void 0&&(r.transformDirection(e),r.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Tn.makeRotationFromQuaternion(e),this.applyMatrix4(Tn),this}rotateX(e){return Tn.makeRotationX(e),this.applyMatrix4(Tn),this}rotateY(e){return Tn.makeRotationY(e),this.applyMatrix4(Tn),this}rotateZ(e){return Tn.makeRotationZ(e),this.applyMatrix4(Tn),this}translate(e,t,i){return Tn.makeTranslation(e,t,i),this.applyMatrix4(Tn),this}scale(e,t,i){return Tn.makeScale(e,t,i),this.applyMatrix4(Tn),this}lookAt(e){return yu.lookAt(e),yu.updateMatrix(),this.applyMatrix4(yu.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Bs).negate(),this.translate(Bs.x,Bs.y,Bs.z),this}setFromPoints(e){const t=[];for(let i=0,r=e.length;i<r;i++){const s=e[i];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new Qr(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new hc);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new ce(-1/0,-1/0,-1/0),new ce(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let i=0,r=t.length;i<r;i++){const s=t[i];fn.setFromBufferAttribute(s),this.morphTargetsRelative?(Ot.addVectors(this.boundingBox.min,fn.min),this.boundingBox.expandByPoint(Ot),Ot.addVectors(this.boundingBox.max,fn.max),this.boundingBox.expandByPoint(Ot)):(this.boundingBox.expandByPoint(fn.min),this.boundingBox.expandByPoint(fn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new K0);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new ce,1/0);return}if(e){const i=this.boundingSphere.center;if(fn.setFromBufferAttribute(e),t)for(let s=0,o=t.length;s<o;s++){const a=t[s];aa.setFromBufferAttribute(a),this.morphTargetsRelative?(Ot.addVectors(fn.min,aa.min),fn.expandByPoint(Ot),Ot.addVectors(fn.max,aa.max),fn.expandByPoint(Ot)):(fn.expandByPoint(aa.min),fn.expandByPoint(aa.max))}fn.getCenter(i);let r=0;for(let s=0,o=e.count;s<o;s++)Ot.fromBufferAttribute(e,s),r=Math.max(r,i.distanceToSquared(Ot));if(t)for(let s=0,o=t.length;s<o;s++){const a=t[s],l=this.morphTargetsRelative;for(let c=0,d=a.count;c<d;c++)Ot.fromBufferAttribute(a,c),l&&(Bs.fromBufferAttribute(e,c),Ot.add(Bs)),r=Math.max(r,i.distanceToSquared(Ot))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=e.array,r=t.position.array,s=t.normal.array,o=t.uv.array,a=r.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new ci(new Float32Array(4*a),4));const l=this.getAttribute("tangent").array,c=[],d=[];for(let R=0;R<a;R++)c[R]=new ce,d[R]=new ce;const u=new ce,f=new ce,h=new ce,p=new xt,x=new xt,m=new xt,v=new ce,g=new ce;function w(R,I,$){u.fromArray(r,R*3),f.fromArray(r,I*3),h.fromArray(r,$*3),p.fromArray(o,R*2),x.fromArray(o,I*2),m.fromArray(o,$*2),f.sub(u),h.sub(u),x.sub(p),m.sub(p);const W=1/(x.x*m.y-m.x*x.y);isFinite(W)&&(v.copy(f).multiplyScalar(m.y).addScaledVector(h,-x.y).multiplyScalar(W),g.copy(h).multiplyScalar(x.x).addScaledVector(f,-m.x).multiplyScalar(W),c[R].add(v),c[I].add(v),c[$].add(v),d[R].add(g),d[I].add(g),d[$].add(g))}let y=this.groups;y.length===0&&(y=[{start:0,count:i.length}]);for(let R=0,I=y.length;R<I;++R){const $=y[R],W=$.start,L=$.count;for(let z=W,U=W+L;z<U;z+=3)w(i[z+0],i[z+1],i[z+2])}const M=new ce,b=new ce,_=new ce,S=new ce;function E(R){_.fromArray(s,R*3),S.copy(_);const I=c[R];M.copy(I),M.sub(_.multiplyScalar(_.dot(I))).normalize(),b.crossVectors(S,I);const W=b.dot(d[R])<0?-1:1;l[R*4]=M.x,l[R*4+1]=M.y,l[R*4+2]=M.z,l[R*4+3]=W}for(let R=0,I=y.length;R<I;++R){const $=y[R],W=$.start,L=$.count;for(let z=W,U=W+L;z<U;z+=3)E(i[z+0]),E(i[z+1]),E(i[z+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new ci(new Float32Array(t.count*3),3),this.setAttribute("normal",i);else for(let f=0,h=i.count;f<h;f++)i.setXYZ(f,0,0,0);const r=new ce,s=new ce,o=new ce,a=new ce,l=new ce,c=new ce,d=new ce,u=new ce;if(e)for(let f=0,h=e.count;f<h;f+=3){const p=e.getX(f+0),x=e.getX(f+1),m=e.getX(f+2);r.fromBufferAttribute(t,p),s.fromBufferAttribute(t,x),o.fromBufferAttribute(t,m),d.subVectors(o,s),u.subVectors(r,s),d.cross(u),a.fromBufferAttribute(i,p),l.fromBufferAttribute(i,x),c.fromBufferAttribute(i,m),a.add(d),l.add(d),c.add(d),i.setXYZ(p,a.x,a.y,a.z),i.setXYZ(x,l.x,l.y,l.z),i.setXYZ(m,c.x,c.y,c.z)}else for(let f=0,h=t.count;f<h;f+=3)r.fromBufferAttribute(t,f+0),s.fromBufferAttribute(t,f+1),o.fromBufferAttribute(t,f+2),d.subVectors(o,s),u.subVectors(r,s),d.cross(u),i.setXYZ(f+0,d.x,d.y,d.z),i.setXYZ(f+1,d.x,d.y,d.z),i.setXYZ(f+2,d.x,d.y,d.z);this.normalizeNormals(),i.needsUpdate=!0}}merge(e,t){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}t===void 0&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const i=this.attributes;for(const r in i){if(e.attributes[r]===void 0)continue;const o=i[r].array,a=e.attributes[r],l=a.array,c=a.itemSize*t,d=Math.min(l.length,o.length-c);for(let u=0,f=c;u<d;u++,f++)o[f]=l[u]}return this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)Ot.fromBufferAttribute(e,t),Ot.normalize(),e.setXYZ(t,Ot.x,Ot.y,Ot.z)}toNonIndexed(){function e(a,l){const c=a.array,d=a.itemSize,u=a.normalized,f=new c.constructor(l.length*d);let h=0,p=0;for(let x=0,m=l.length;x<m;x++){a.isInterleavedBufferAttribute?h=l[x]*a.data.stride+a.offset:h=l[x]*d;for(let v=0;v<d;v++)f[p++]=c[h++]}return new ci(f,d,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new tv,i=this.index.array,r=this.attributes;for(const a in r){const l=r[a],c=e(l,i);t.setAttribute(a,c)}const s=this.morphAttributes;for(const a in s){const l=[],c=s[a];for(let d=0,u=c.length;d<u;d++){const f=c[d],h=e(f,i);l.push(h)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const i=this.attributes;for(const l in i){const c=i[l];e.data.attributes[l]=c.toJSON(e.data)}const r={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],d=[];for(let u=0,f=c.length;u<f;u++){const h=c[u];d.push(h.toJSON(e.data))}d.length>0&&(r[l]=d,s=!0)}s&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone(t));const r=e.attributes;for(const c in r){const d=r[c];this.setAttribute(c,d.clone(t))}const s=e.morphAttributes;for(const c in s){const d=[],u=s[c];for(let f=0,h=u.length;f<h;f++)d.push(u[f].clone(t));this.morphAttributes[c]=d}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let c=0,d=o.length;c<d;c++){const u=o[c];this.addGroup(u.start,u.count,u.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,e.parameters!==void 0&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}};const Fm=new sn,Us=new L9,bu=new K0,Xi=new ce,Yi=new ce,Zi=new ce,_u=new ce,wu=new ce,Mu=new ce,Bc=new ce,Uc=new ce,Gc=new ce,kc=new xt,Hc=new xt,Vc=new xt,Su=new ce,Wc=new ce;let Ii=class extends Ui{constructor(e=new mc,t=new K3){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const r=t[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=r.length;s<o;s++){const a=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}raycast(e,t){const i=this.geometry,r=this.material,s=this.matrixWorld;if(r===void 0||(i.boundingSphere===null&&i.computeBoundingSphere(),bu.copy(i.boundingSphere),bu.applyMatrix4(s),e.ray.intersectsSphere(bu)===!1)||(Fm.copy(s).invert(),Us.copy(e.ray).applyMatrix4(Fm),i.boundingBox!==null&&Us.intersectsBox(i.boundingBox)===!1))return;let o;const a=i.index,l=i.attributes.position,c=i.morphAttributes.position,d=i.morphTargetsRelative,u=i.attributes.uv,f=i.attributes.uv2,h=i.groups,p=i.drawRange;if(a!==null)if(Array.isArray(r))for(let x=0,m=h.length;x<m;x++){const v=h[x],g=r[v.materialIndex],w=Math.max(v.start,p.start),y=Math.min(a.count,Math.min(v.start+v.count,p.start+p.count));for(let M=w,b=y;M<b;M+=3){const _=a.getX(M),S=a.getX(M+1),E=a.getX(M+2);o=$c(this,g,e,Us,l,c,d,u,f,_,S,E),o&&(o.faceIndex=Math.floor(M/3),o.face.materialIndex=v.materialIndex,t.push(o))}}else{const x=Math.max(0,p.start),m=Math.min(a.count,p.start+p.count);for(let v=x,g=m;v<g;v+=3){const w=a.getX(v),y=a.getX(v+1),M=a.getX(v+2);o=$c(this,r,e,Us,l,c,d,u,f,w,y,M),o&&(o.faceIndex=Math.floor(v/3),t.push(o))}}else if(l!==void 0)if(Array.isArray(r))for(let x=0,m=h.length;x<m;x++){const v=h[x],g=r[v.materialIndex],w=Math.max(v.start,p.start),y=Math.min(l.count,Math.min(v.start+v.count,p.start+p.count));for(let M=w,b=y;M<b;M+=3){const _=M,S=M+1,E=M+2;o=$c(this,g,e,Us,l,c,d,u,f,_,S,E),o&&(o.faceIndex=Math.floor(M/3),o.face.materialIndex=v.materialIndex,t.push(o))}}else{const x=Math.max(0,p.start),m=Math.min(l.count,p.start+p.count);for(let v=x,g=m;v<g;v+=3){const w=v,y=v+1,M=v+2;o=$c(this,r,e,Us,l,c,d,u,f,w,y,M),o&&(o.faceIndex=Math.floor(v/3),t.push(o))}}}};function F9(n,e,t,i,r,s,o,a){let l;if(e.side===Wn?l=i.intersectTriangle(o,s,r,!0,a):l=i.intersectTriangle(r,s,o,e.side!==Mo,a),l===null)return null;Wc.copy(a),Wc.applyMatrix4(n.matrixWorld);const c=t.ray.origin.distanceTo(Wc);return c<t.near||c>t.far?null:{distance:c,point:Wc.clone(),object:n}}function $c(n,e,t,i,r,s,o,a,l,c,d,u){Xi.fromBufferAttribute(r,c),Yi.fromBufferAttribute(r,d),Zi.fromBufferAttribute(r,u);const f=n.morphTargetInfluences;if(s&&f){Bc.set(0,0,0),Uc.set(0,0,0),Gc.set(0,0,0);for(let p=0,x=s.length;p<x;p++){const m=f[p],v=s[p];m!==0&&(_u.fromBufferAttribute(v,c),wu.fromBufferAttribute(v,d),Mu.fromBufferAttribute(v,u),o?(Bc.addScaledVector(_u,m),Uc.addScaledVector(wu,m),Gc.addScaledVector(Mu,m)):(Bc.addScaledVector(_u.sub(Xi),m),Uc.addScaledVector(wu.sub(Yi),m),Gc.addScaledVector(Mu.sub(Zi),m)))}Xi.add(Bc),Yi.add(Uc),Zi.add(Gc)}n.isSkinnedMesh&&(n.boneTransform(c,Xi),n.boneTransform(d,Yi),n.boneTransform(u,Zi));const h=F9(n,e,t,i,Xi,Yi,Zi,Su);if(h){a&&(kc.fromBufferAttribute(a,c),Hc.fromBufferAttribute(a,d),Vc.fromBufferAttribute(a,u),h.uv=vu.getUV(Su,Xi,Yi,Zi,kc,Hc,Vc,new xt)),l&&(kc.fromBufferAttribute(l,c),Hc.fromBufferAttribute(l,d),Vc.fromBufferAttribute(l,u),h.uv2=vu.getUV(Su,Xi,Yi,Zi,kc,Hc,Vc,new xt));const p={a:c,b:d,c:u,normal:new ce,materialIndex:0};vu.getNormal(Xi,Yi,Zi,p.normal),h.face=p}return h}let Dd=class nv extends mc{constructor(e=1,t=1,i=1,r=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:r,heightSegments:s,depthSegments:o};const a=this;r=Math.floor(r),s=Math.floor(s),o=Math.floor(o);const l=[],c=[],d=[],u=[];let f=0,h=0;p("z","y","x",-1,-1,i,t,e,o,s,0),p("z","y","x",1,-1,i,t,-e,o,s,1),p("x","z","y",1,1,e,i,t,r,o,2),p("x","z","y",1,-1,e,i,-t,r,o,3),p("x","y","z",1,-1,e,t,i,r,s,4),p("x","y","z",-1,-1,e,t,-i,r,s,5),this.setIndex(l),this.setAttribute("position",new Qr(c,3)),this.setAttribute("normal",new Qr(d,3)),this.setAttribute("uv",new Qr(u,2));function p(x,m,v,g,w,y,M,b,_,S,E){const R=y/_,I=M/S,$=y/2,W=M/2,L=b/2,z=_+1,U=S+1;let X=0,K=0;const j=new ce;for(let ee=0;ee<U;ee++){const P=ee*I-W;for(let H=0;H<z;H++){const Y=H*R-$;j[x]=Y*g,j[m]=P*w,j[v]=L,c.push(j.x,j.y,j.z),j[x]=0,j[m]=0,j[v]=b>0?1:-1,d.push(j.x,j.y,j.z),u.push(H/_),u.push(1-ee/S),X+=1}}for(let ee=0;ee<S;ee++)for(let P=0;P<_;P++){const H=f+P+z*ee,Y=f+P+z*(ee+1),Q=f+(P+1)+z*(ee+1),F=f+(P+1)+z*ee;l.push(H,Y,F),l.push(Y,Q,F),K+=6}a.addGroup(h,K,E),h+=K,f+=X}}static fromJSON(e){return new nv(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}};function Ao(n){const e={};for(const t in n){e[t]={};for(const i in n[t]){const r=n[t][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?e[t][i]=r.clone():Array.isArray(r)?e[t][i]=r.slice():e[t][i]=r}}return e}function Ut(n){const e={};for(let t=0;t<n.length;t++){const i=Ao(n[t]);for(const r in i)e[r]=i[r]}return e}function N9(n){const e=[];for(let t=0;t<n.length;t++)e.push(n[t].clone());return e}const B9={clone:Ao,merge:Ut};var U9=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,G9=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;let as=class extends pc{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=U9,this.fragmentShader=G9,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&(e.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Ao(e.uniforms),this.uniformsGroups=N9(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const r in this.uniforms){const o=this.uniforms[r].value;o&&o.isTexture?t.uniforms[r]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[r]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[r]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[r]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[r]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[r]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[r]={type:"m4",value:o.toArray()}:t.uniforms[r]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const i={};for(const r in this.extensions)this.extensions[r]===!0&&(i[r]=!0);return Object.keys(i).length>0&&(t.extensions=i),t}},iv=class extends Ui{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new sn,this.projectionMatrix=new sn,this.projectionMatrixInverse=new sn}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}},Cn=class extends iv{constructor(e=50,t=1,i=.1,r=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Em*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(nu*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Em*2*Math.atan(Math.tan(nu*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,i,r,s,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=r,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(nu*.5*this.fov)/this.zoom,i=2*t,r=this.aspect*i,s=-.5*r;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;s+=o.offsetX*r/l,t-=o.offsetY*i/c,r*=o.width/l,i*=o.height/c}const a=this.filmOffset;a!==0&&(s+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+r,t,t-i,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}};const Gs=90,ks=1;let k9=class extends Ui{constructor(e,t,i){if(super(),this.type="CubeCamera",i.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=i;const r=new Cn(Gs,ks,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new ce(1,0,0)),this.add(r);const s=new Cn(Gs,ks,e,t);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new ce(-1,0,0)),this.add(s);const o=new Cn(Gs,ks,e,t);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(new ce(0,1,0)),this.add(o);const a=new Cn(Gs,ks,e,t);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new ce(0,-1,0)),this.add(a);const l=new Cn(Gs,ks,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new ce(0,0,1)),this.add(l);const c=new Cn(Gs,ks,e,t);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new ce(0,0,-1)),this.add(c)}update(e,t){this.parent===null&&this.updateMatrixWorld();const i=this.renderTarget,[r,s,o,a,l,c]=this.children,d=e.getRenderTarget(),u=e.toneMapping,f=e.xr.enabled;e.toneMapping=Oi,e.xr.enabled=!1;const h=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0),e.render(t,r),e.setRenderTarget(i,1),e.render(t,s),e.setRenderTarget(i,2),e.render(t,o),e.setRenderTarget(i,3),e.render(t,a),e.setRenderTarget(i,4),e.render(t,l),i.texture.generateMipmaps=h,e.setRenderTarget(i,5),e.render(t,c),e.setRenderTarget(d),e.toneMapping=u,e.xr.enabled=f,i.texture.needsPMREMUpdate=!0}},rv=class extends Mr{constructor(e,t,i,r,s,o,a,l,c,d){e=e!==void 0?e:[],t=t!==void 0?t:So,super(e,t,i,r,s,o,a,l,c,d),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}},H9=class extends os{constructor(e,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const i={width:e,height:e,depth:1},r=[i,i,i,i,i,i];this.texture=new rv(r,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:Ln}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new Dd(5,5,5),s=new as({name:"CubemapFromEquirect",uniforms:Ao(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:Wn,blending:lr});s.uniforms.tEquirect.value=t;const o=new Ii(r,s),a=t.minFilter;return t.minFilter===Id&&(t.minFilter=Ln),new k9(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,i,r){const s=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,i,r);e.setRenderTarget(s)}};const Eu=new ce,V9=new ce,W9=new oi;let Br=class{constructor(e=new ce(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,r){return this.normal.set(e,t,i),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){const r=Eu.subVectors(i,t).cross(V9.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const i=e.delta(Eu),r=this.normal.dot(i);if(r===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/r;return s<0||s>1?null:t.copy(i).multiplyScalar(s).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const i=t||W9.getNormalMatrix(e),r=this.coplanarPoint(Eu).applyMatrix4(e),s=this.normal.applyMatrix3(i).normalize();return this.constant=-r.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}};const Hs=new K0,jc=new ce;let sv=class{constructor(e=new Br,t=new Br,i=new Br,r=new Br,s=new Br,o=new Br){this.planes=[e,t,i,r,s,o]}set(e,t,i,r,s,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(i),a[3].copy(r),a[4].copy(s),a[5].copy(o),this}copy(e){const t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e){const t=this.planes,i=e.elements,r=i[0],s=i[1],o=i[2],a=i[3],l=i[4],c=i[5],d=i[6],u=i[7],f=i[8],h=i[9],p=i[10],x=i[11],m=i[12],v=i[13],g=i[14],w=i[15];return t[0].setComponents(a-r,u-l,x-f,w-m).normalize(),t[1].setComponents(a+r,u+l,x+f,w+m).normalize(),t[2].setComponents(a+s,u+c,x+h,w+v).normalize(),t[3].setComponents(a-s,u-c,x-h,w-v).normalize(),t[4].setComponents(a-o,u-d,x-p,w-g).normalize(),t[5].setComponents(a+o,u+d,x+p,w+g).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),Hs.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(Hs)}intersectsSprite(e){return Hs.center.set(0,0,0),Hs.radius=.7071067811865476,Hs.applyMatrix4(e.matrixWorld),this.intersectsSphere(Hs)}intersectsSphere(e){const t=this.planes,i=e.center,r=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(i)<r)return!1;return!0}intersectsBox(e){const t=this.planes;for(let i=0;i<6;i++){const r=t[i];if(jc.x=r.normal.x>0?e.max.x:e.min.x,jc.y=r.normal.y>0?e.max.y:e.min.y,jc.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(jc)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}};function ov(){let n=null,e=!1,t=null,i=null;function r(s,o){t(s,o),i=n.requestAnimationFrame(r)}return{start:function(){e!==!0&&t!==null&&(i=n.requestAnimationFrame(r),e=!0)},stop:function(){n.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){n=s}}}function $9(n,e){const t=e.isWebGL2,i=new WeakMap;function r(c,d){const u=c.array,f=c.usage,h=n.createBuffer();n.bindBuffer(d,h),n.bufferData(d,u,f),c.onUploadCallback();let p;if(u instanceof Float32Array)p=5126;else if(u instanceof Uint16Array)if(c.isFloat16BufferAttribute)if(t)p=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else p=5123;else if(u instanceof Int16Array)p=5122;else if(u instanceof Uint32Array)p=5125;else if(u instanceof Int32Array)p=5124;else if(u instanceof Int8Array)p=5120;else if(u instanceof Uint8Array)p=5121;else if(u instanceof Uint8ClampedArray)p=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+u);return{buffer:h,type:p,bytesPerElement:u.BYTES_PER_ELEMENT,version:c.version}}function s(c,d,u){const f=d.array,h=d.updateRange;n.bindBuffer(u,c),h.count===-1?n.bufferSubData(u,0,f):(t?n.bufferSubData(u,h.offset*f.BYTES_PER_ELEMENT,f,h.offset,h.count):n.bufferSubData(u,h.offset*f.BYTES_PER_ELEMENT,f.subarray(h.offset,h.offset+h.count)),h.count=-1)}function o(c){return c.isInterleavedBufferAttribute&&(c=c.data),i.get(c)}function a(c){c.isInterleavedBufferAttribute&&(c=c.data);const d=i.get(c);d&&(n.deleteBuffer(d.buffer),i.delete(c))}function l(c,d){if(c.isGLBufferAttribute){const f=i.get(c);(!f||f.version<c.version)&&i.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const u=i.get(c);u===void 0?i.set(c,r(c,d)):u.version<c.version&&(s(u.buffer,c,d),u.version=c.version)}return{get:o,remove:a,update:l}}let j9=class av extends mc{constructor(e=1,t=1,i=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:r};const s=e/2,o=t/2,a=Math.floor(i),l=Math.floor(r),c=a+1,d=l+1,u=e/a,f=t/l,h=[],p=[],x=[],m=[];for(let v=0;v<d;v++){const g=v*f-o;for(let w=0;w<c;w++){const y=w*u-s;p.push(y,-g,0),x.push(0,0,1),m.push(w/a),m.push(1-v/l)}}for(let v=0;v<l;v++)for(let g=0;g<a;g++){const w=g+c*v,y=g+c*(v+1),M=g+1+c*(v+1),b=g+1+c*v;h.push(w,y,b),h.push(y,M,b)}this.setIndex(h),this.setAttribute("position",new Qr(p,3)),this.setAttribute("normal",new Qr(x,3)),this.setAttribute("uv",new Qr(m,2))}static fromJSON(e){return new av(e.width,e.height,e.widthSegments,e.heightSegments)}};var X9=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,Y9=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Z9=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,J9=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,K9=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,Q9=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,e_="vec3 transformed = vec3( position );",t_=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,n_=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
#ifdef USE_IRIDESCENCE
	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,i_=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,r_=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,s_=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,o_=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,a_=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,c_=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,l_=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,d_=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,u_=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,f_=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,h_=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,p_=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,m_=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,x_=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,g_=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,v_=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,y_=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,b_="gl_FragColor = linearToOutputTexel( gl_FragColor );",__=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,w_=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,M_=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,S_=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,E_=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,T_=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,A_=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,L_=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,C_=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,R_=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,P_=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,I_=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,D_=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,O_=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointLightInfo( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotLightInfo( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );
		#endif
	}
	#pragma unroll_loop_end
#endif`,q_=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,z_=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,F_=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,N_=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,B_=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,U_=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,G_=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,k_=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	#ifdef USE_IRIDESCENCE
		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );
	#else
		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,H_=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,V_=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,W_=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,$_=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,j_=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,X_=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,Y_=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,Z_=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,J_=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,K_=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Q_=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,e5=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,t5=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,n5=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,i5=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,r5=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,s5=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,o5=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,a5=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,c5=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,l5=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,d5=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,u5=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,f5=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,h5=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,p5=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,m5=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,x5=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,g5=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,v5=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,y5=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,b5=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,_5=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,w5=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,M5=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,S5=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,E5=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,T5=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,A5=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,L5=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,C5=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,R5=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,P5=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,I5=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,D5=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,O5=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,q5=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,z5=`#ifdef USE_TRANSMISSION
	float transmissionAlpha = 1.0;
	float transmissionFactor = transmission;
	float thicknessFactor = thickness;
	#ifdef USE_TRANSMISSIONMAP
		transmissionFactor *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		thicknessFactor *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,
		attenuationColor, attenuationDistance );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );
	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );
#endif`,F5=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( attenuationDistance == 0.0 ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,N5=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,B5=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,U5=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,G5=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,k5=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,H5=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,V5=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const W5=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,$5=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	gl_FragColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );
	#endif
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,j5=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,X5=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Y5=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,Z5=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,J5=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,K5=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,Q5=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,e4=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,t4=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,n4=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,i4=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,r4=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,s4=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,o4=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,a4=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,c4=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,l4=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,d4=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,u4=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,f4=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,h4=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,p4=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,m4=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,x4=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,g4=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,v4=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,y4=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,b4=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,_4=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,w4=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,rt={alphamap_fragment:X9,alphamap_pars_fragment:Y9,alphatest_fragment:Z9,alphatest_pars_fragment:J9,aomap_fragment:K9,aomap_pars_fragment:Q9,begin_vertex:e_,beginnormal_vertex:t_,bsdfs:n_,iridescence_fragment:i_,bumpmap_pars_fragment:r_,clipping_planes_fragment:s_,clipping_planes_pars_fragment:o_,clipping_planes_pars_vertex:a_,clipping_planes_vertex:c_,color_fragment:l_,color_pars_fragment:d_,color_pars_vertex:u_,color_vertex:f_,common:h_,cube_uv_reflection_fragment:p_,defaultnormal_vertex:m_,displacementmap_pars_vertex:x_,displacementmap_vertex:g_,emissivemap_fragment:v_,emissivemap_pars_fragment:y_,encodings_fragment:b_,encodings_pars_fragment:__,envmap_fragment:w_,envmap_common_pars_fragment:M_,envmap_pars_fragment:S_,envmap_pars_vertex:E_,envmap_physical_pars_fragment:z_,envmap_vertex:T_,fog_vertex:A_,fog_pars_vertex:L_,fog_fragment:C_,fog_pars_fragment:R_,gradientmap_pars_fragment:P_,lightmap_fragment:I_,lightmap_pars_fragment:D_,lights_lambert_vertex:O_,lights_pars_begin:q_,lights_toon_fragment:F_,lights_toon_pars_fragment:N_,lights_phong_fragment:B_,lights_phong_pars_fragment:U_,lights_physical_fragment:G_,lights_physical_pars_fragment:k_,lights_fragment_begin:H_,lights_fragment_maps:V_,lights_fragment_end:W_,logdepthbuf_fragment:$_,logdepthbuf_pars_fragment:j_,logdepthbuf_pars_vertex:X_,logdepthbuf_vertex:Y_,map_fragment:Z_,map_pars_fragment:J_,map_particle_fragment:K_,map_particle_pars_fragment:Q_,metalnessmap_fragment:e5,metalnessmap_pars_fragment:t5,morphcolor_vertex:n5,morphnormal_vertex:i5,morphtarget_pars_vertex:r5,morphtarget_vertex:s5,normal_fragment_begin:o5,normal_fragment_maps:a5,normal_pars_fragment:c5,normal_pars_vertex:l5,normal_vertex:d5,normalmap_pars_fragment:u5,clearcoat_normal_fragment_begin:f5,clearcoat_normal_fragment_maps:h5,clearcoat_pars_fragment:p5,iridescence_pars_fragment:m5,output_fragment:x5,packing:g5,premultiplied_alpha_fragment:v5,project_vertex:y5,dithering_fragment:b5,dithering_pars_fragment:_5,roughnessmap_fragment:w5,roughnessmap_pars_fragment:M5,shadowmap_pars_fragment:S5,shadowmap_pars_vertex:E5,shadowmap_vertex:T5,shadowmask_pars_fragment:A5,skinbase_vertex:L5,skinning_pars_vertex:C5,skinning_vertex:R5,skinnormal_vertex:P5,specularmap_fragment:I5,specularmap_pars_fragment:D5,tonemapping_fragment:O5,tonemapping_pars_fragment:q5,transmission_fragment:z5,transmission_pars_fragment:F5,uv_pars_fragment:N5,uv_pars_vertex:B5,uv_vertex:U5,uv2_pars_fragment:G5,uv2_pars_vertex:k5,uv2_vertex:H5,worldpos_vertex:V5,background_vert:W5,background_frag:$5,cube_vert:j5,cube_frag:X5,depth_vert:Y5,depth_frag:Z5,distanceRGBA_vert:J5,distanceRGBA_frag:K5,equirect_vert:Q5,equirect_frag:e4,linedashed_vert:t4,linedashed_frag:n4,meshbasic_vert:i4,meshbasic_frag:r4,meshlambert_vert:s4,meshlambert_frag:o4,meshmatcap_vert:a4,meshmatcap_frag:c4,meshnormal_vert:l4,meshnormal_frag:d4,meshphong_vert:u4,meshphong_frag:f4,meshphysical_vert:h4,meshphysical_frag:p4,meshtoon_vert:m4,meshtoon_frag:x4,points_vert:g4,points_frag:v4,shadow_vert:y4,shadow_frag:b4,sprite_vert:_4,sprite_frag:w4},Oe={common:{diffuse:{value:new lt(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new oi},uv2Transform:{value:new oi},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new xt(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new lt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new lt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new oi}},sprite:{diffuse:{value:new lt(16777215)},opacity:{value:1},center:{value:new xt(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new oi}}},ii={basic:{uniforms:Ut([Oe.common,Oe.specularmap,Oe.envmap,Oe.aomap,Oe.lightmap,Oe.fog]),vertexShader:rt.meshbasic_vert,fragmentShader:rt.meshbasic_frag},lambert:{uniforms:Ut([Oe.common,Oe.specularmap,Oe.envmap,Oe.aomap,Oe.lightmap,Oe.emissivemap,Oe.fog,Oe.lights,{emissive:{value:new lt(0)}}]),vertexShader:rt.meshlambert_vert,fragmentShader:rt.meshlambert_frag},phong:{uniforms:Ut([Oe.common,Oe.specularmap,Oe.envmap,Oe.aomap,Oe.lightmap,Oe.emissivemap,Oe.bumpmap,Oe.normalmap,Oe.displacementmap,Oe.fog,Oe.lights,{emissive:{value:new lt(0)},specular:{value:new lt(1118481)},shininess:{value:30}}]),vertexShader:rt.meshphong_vert,fragmentShader:rt.meshphong_frag},standard:{uniforms:Ut([Oe.common,Oe.envmap,Oe.aomap,Oe.lightmap,Oe.emissivemap,Oe.bumpmap,Oe.normalmap,Oe.displacementmap,Oe.roughnessmap,Oe.metalnessmap,Oe.fog,Oe.lights,{emissive:{value:new lt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:rt.meshphysical_vert,fragmentShader:rt.meshphysical_frag},toon:{uniforms:Ut([Oe.common,Oe.aomap,Oe.lightmap,Oe.emissivemap,Oe.bumpmap,Oe.normalmap,Oe.displacementmap,Oe.gradientmap,Oe.fog,Oe.lights,{emissive:{value:new lt(0)}}]),vertexShader:rt.meshtoon_vert,fragmentShader:rt.meshtoon_frag},matcap:{uniforms:Ut([Oe.common,Oe.bumpmap,Oe.normalmap,Oe.displacementmap,Oe.fog,{matcap:{value:null}}]),vertexShader:rt.meshmatcap_vert,fragmentShader:rt.meshmatcap_frag},points:{uniforms:Ut([Oe.points,Oe.fog]),vertexShader:rt.points_vert,fragmentShader:rt.points_frag},dashed:{uniforms:Ut([Oe.common,Oe.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:rt.linedashed_vert,fragmentShader:rt.linedashed_frag},depth:{uniforms:Ut([Oe.common,Oe.displacementmap]),vertexShader:rt.depth_vert,fragmentShader:rt.depth_frag},normal:{uniforms:Ut([Oe.common,Oe.bumpmap,Oe.normalmap,Oe.displacementmap,{opacity:{value:1}}]),vertexShader:rt.meshnormal_vert,fragmentShader:rt.meshnormal_frag},sprite:{uniforms:Ut([Oe.sprite,Oe.fog]),vertexShader:rt.sprite_vert,fragmentShader:rt.sprite_frag},background:{uniforms:{uvTransform:{value:new oi},t2D:{value:null}},vertexShader:rt.background_vert,fragmentShader:rt.background_frag},cube:{uniforms:Ut([Oe.envmap,{opacity:{value:1}}]),vertexShader:rt.cube_vert,fragmentShader:rt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:rt.equirect_vert,fragmentShader:rt.equirect_frag},distanceRGBA:{uniforms:Ut([Oe.common,Oe.displacementmap,{referencePosition:{value:new ce},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:rt.distanceRGBA_vert,fragmentShader:rt.distanceRGBA_frag},shadow:{uniforms:Ut([Oe.lights,Oe.fog,{color:{value:new lt(0)},opacity:{value:1}}]),vertexShader:rt.shadow_vert,fragmentShader:rt.shadow_frag}};ii.physical={uniforms:Ut([ii.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new xt(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new lt(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new xt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new lt(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new lt(1,1,1)},specularColorMap:{value:null}}]),vertexShader:rt.meshphysical_vert,fragmentShader:rt.meshphysical_frag};function M4(n,e,t,i,r,s){const o=new lt(0);let a=r===!0?0:1,l,c,d=null,u=0,f=null;function h(x,m){let v=!1,g=m.isScene===!0?m.background:null;g&&g.isTexture&&(g=e.get(g));const w=n.xr,y=w.getSession&&w.getSession();y&&y.environmentBlendMode==="additive"&&(g=null),g===null?p(o,a):g&&g.isColor&&(p(g,1),v=!0),(n.autoClear||v)&&n.clear(n.autoClearColor,n.autoClearDepth,n.autoClearStencil),g&&(g.isCubeTexture||g.mapping===Pd)?(c===void 0&&(c=new Ii(new Dd(1,1,1),new as({name:"BackgroundCubeMaterial",uniforms:Ao(ii.cube.uniforms),vertexShader:ii.cube.vertexShader,fragmentShader:ii.cube.fragmentShader,side:Wn,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(M,b,_){this.matrixWorld.copyPosition(_.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(c)),c.material.uniforms.envMap.value=g,c.material.uniforms.flipEnvMap.value=g.isCubeTexture&&g.isRenderTargetTexture===!1?-1:1,(d!==g||u!==g.version||f!==n.toneMapping)&&(c.material.needsUpdate=!0,d=g,u=g.version,f=n.toneMapping),c.layers.enableAll(),x.unshift(c,c.geometry,c.material,0,0,null)):g&&g.isTexture&&(l===void 0&&(l=new Ii(new j9(2,2),new as({name:"BackgroundMaterial",uniforms:Ao(ii.background.uniforms),vertexShader:ii.background.vertexShader,fragmentShader:ii.background.fragmentShader,side:Ra,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(l)),l.material.uniforms.t2D.value=g,g.matrixAutoUpdate===!0&&g.updateMatrix(),l.material.uniforms.uvTransform.value.copy(g.matrix),(d!==g||u!==g.version||f!==n.toneMapping)&&(l.material.needsUpdate=!0,d=g,u=g.version,f=n.toneMapping),l.layers.enableAll(),x.unshift(l,l.geometry,l.material,0,0,null))}function p(x,m){t.buffers.color.setClear(x.r,x.g,x.b,m,s)}return{getClearColor:function(){return o},setClearColor:function(x,m=1){o.set(x),a=m,p(o,a)},getClearAlpha:function(){return a},setClearAlpha:function(x){a=x,p(o,a)},render:h}}function S4(n,e,t,i){const r=n.getParameter(34921),s=i.isWebGL2?null:e.get("OES_vertex_array_object"),o=i.isWebGL2||s!==null,a={},l=m(null);let c=l,d=!1;function u(L,z,U,X,K){let j=!1;if(o){const ee=x(X,U,z);c!==ee&&(c=ee,h(c.object)),j=v(L,X,U,K),j&&g(L,X,U,K)}else{const ee=z.wireframe===!0;(c.geometry!==X.id||c.program!==U.id||c.wireframe!==ee)&&(c.geometry=X.id,c.program=U.id,c.wireframe=ee,j=!0)}K!==null&&t.update(K,34963),(j||d)&&(d=!1,S(L,z,U,X),K!==null&&n.bindBuffer(34963,t.get(K).buffer))}function f(){return i.isWebGL2?n.createVertexArray():s.createVertexArrayOES()}function h(L){return i.isWebGL2?n.bindVertexArray(L):s.bindVertexArrayOES(L)}function p(L){return i.isWebGL2?n.deleteVertexArray(L):s.deleteVertexArrayOES(L)}function x(L,z,U){const X=U.wireframe===!0;let K=a[L.id];K===void 0&&(K={},a[L.id]=K);let j=K[z.id];j===void 0&&(j={},K[z.id]=j);let ee=j[X];return ee===void 0&&(ee=m(f()),j[X]=ee),ee}function m(L){const z=[],U=[],X=[];for(let K=0;K<r;K++)z[K]=0,U[K]=0,X[K]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:z,enabledAttributes:U,attributeDivisors:X,object:L,attributes:{},index:null}}function v(L,z,U,X){const K=c.attributes,j=z.attributes;let ee=0;const P=U.getAttributes();for(const H in P)if(P[H].location>=0){const Q=K[H];let F=j[H];if(F===void 0&&(H==="instanceMatrix"&&L.instanceMatrix&&(F=L.instanceMatrix),H==="instanceColor"&&L.instanceColor&&(F=L.instanceColor)),Q===void 0||Q.attribute!==F||F&&Q.data!==F.data)return!0;ee++}return c.attributesNum!==ee||c.index!==X}function g(L,z,U,X){const K={},j=z.attributes;let ee=0;const P=U.getAttributes();for(const H in P)if(P[H].location>=0){let Q=j[H];Q===void 0&&(H==="instanceMatrix"&&L.instanceMatrix&&(Q=L.instanceMatrix),H==="instanceColor"&&L.instanceColor&&(Q=L.instanceColor));const F={};F.attribute=Q,Q&&Q.data&&(F.data=Q.data),K[H]=F,ee++}c.attributes=K,c.attributesNum=ee,c.index=X}function w(){const L=c.newAttributes;for(let z=0,U=L.length;z<U;z++)L[z]=0}function y(L){M(L,0)}function M(L,z){const U=c.newAttributes,X=c.enabledAttributes,K=c.attributeDivisors;U[L]=1,X[L]===0&&(n.enableVertexAttribArray(L),X[L]=1),K[L]!==z&&((i.isWebGL2?n:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](L,z),K[L]=z)}function b(){const L=c.newAttributes,z=c.enabledAttributes;for(let U=0,X=z.length;U<X;U++)z[U]!==L[U]&&(n.disableVertexAttribArray(U),z[U]=0)}function _(L,z,U,X,K,j){i.isWebGL2===!0&&(U===5124||U===5125)?n.vertexAttribIPointer(L,z,U,K,j):n.vertexAttribPointer(L,z,U,X,K,j)}function S(L,z,U,X){if(i.isWebGL2===!1&&(L.isInstancedMesh||X.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;w();const K=X.attributes,j=U.getAttributes(),ee=z.defaultAttributeValues;for(const P in j){const H=j[P];if(H.location>=0){let Y=K[P];if(Y===void 0&&(P==="instanceMatrix"&&L.instanceMatrix&&(Y=L.instanceMatrix),P==="instanceColor"&&L.instanceColor&&(Y=L.instanceColor)),Y!==void 0){const Q=Y.normalized,F=Y.itemSize,oe=t.get(Y);if(oe===void 0)continue;const Se=oe.buffer,Me=oe.type,be=oe.bytesPerElement;if(Y.isInterleavedBufferAttribute){const _e=Y.data,Ie=_e.stride,fe=Y.offset;if(_e.isInstancedInterleavedBuffer){for(let pe=0;pe<H.locationSize;pe++)M(H.location+pe,_e.meshPerAttribute);L.isInstancedMesh!==!0&&X._maxInstanceCount===void 0&&(X._maxInstanceCount=_e.meshPerAttribute*_e.count)}else for(let pe=0;pe<H.locationSize;pe++)y(H.location+pe);n.bindBuffer(34962,Se);for(let pe=0;pe<H.locationSize;pe++)_(H.location+pe,F/H.locationSize,Me,Q,Ie*be,(fe+F/H.locationSize*pe)*be)}else{if(Y.isInstancedBufferAttribute){for(let _e=0;_e<H.locationSize;_e++)M(H.location+_e,Y.meshPerAttribute);L.isInstancedMesh!==!0&&X._maxInstanceCount===void 0&&(X._maxInstanceCount=Y.meshPerAttribute*Y.count)}else for(let _e=0;_e<H.locationSize;_e++)y(H.location+_e);n.bindBuffer(34962,Se);for(let _e=0;_e<H.locationSize;_e++)_(H.location+_e,F/H.locationSize,Me,Q,F*be,F/H.locationSize*_e*be)}}else if(ee!==void 0){const Q=ee[P];if(Q!==void 0)switch(Q.length){case 2:n.vertexAttrib2fv(H.location,Q);break;case 3:n.vertexAttrib3fv(H.location,Q);break;case 4:n.vertexAttrib4fv(H.location,Q);break;default:n.vertexAttrib1fv(H.location,Q)}}}}b()}function E(){$();for(const L in a){const z=a[L];for(const U in z){const X=z[U];for(const K in X)p(X[K].object),delete X[K];delete z[U]}delete a[L]}}function R(L){if(a[L.id]===void 0)return;const z=a[L.id];for(const U in z){const X=z[U];for(const K in X)p(X[K].object),delete X[K];delete z[U]}delete a[L.id]}function I(L){for(const z in a){const U=a[z];if(U[L.id]===void 0)continue;const X=U[L.id];for(const K in X)p(X[K].object),delete X[K];delete U[L.id]}}function $(){W(),d=!0,c!==l&&(c=l,h(c.object))}function W(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:u,reset:$,resetDefaultState:W,dispose:E,releaseStatesOfGeometry:R,releaseStatesOfProgram:I,initAttributes:w,enableAttribute:y,disableUnusedAttributes:b}}function E4(n,e,t,i){const r=i.isWebGL2;let s;function o(c){s=c}function a(c,d){n.drawArrays(s,c,d),t.update(d,s,1)}function l(c,d,u){if(u===0)return;let f,h;if(r)f=n,h="drawArraysInstanced";else if(f=e.get("ANGLE_instanced_arrays"),h="drawArraysInstancedANGLE",f===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[h](s,c,d,u),t.update(d,s,u)}this.setMode=o,this.render=a,this.renderInstances=l}function T4(n,e,t){let i;function r(){if(i!==void 0)return i;if(e.has("EXT_texture_filter_anisotropic")===!0){const _=e.get("EXT_texture_filter_anisotropic");i=n.getParameter(_.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function s(_){if(_==="highp"){if(n.getShaderPrecisionFormat(35633,36338).precision>0&&n.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";_="mediump"}return _==="mediump"&&n.getShaderPrecisionFormat(35633,36337).precision>0&&n.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&n instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext<"u"&&n instanceof WebGL2ComputeRenderingContext;let a=t.precision!==void 0?t.precision:"highp";const l=s(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const c=o||e.has("WEBGL_draw_buffers"),d=t.logarithmicDepthBuffer===!0,u=n.getParameter(34930),f=n.getParameter(35660),h=n.getParameter(3379),p=n.getParameter(34076),x=n.getParameter(34921),m=n.getParameter(36347),v=n.getParameter(36348),g=n.getParameter(36349),w=f>0,y=o||e.has("OES_texture_float"),M=w&&y,b=o?n.getParameter(36183):0;return{isWebGL2:o,drawBuffers:c,getMaxAnisotropy:r,getMaxPrecision:s,precision:a,logarithmicDepthBuffer:d,maxTextures:u,maxVertexTextures:f,maxTextureSize:h,maxCubemapSize:p,maxAttributes:x,maxVertexUniforms:m,maxVaryings:v,maxFragmentUniforms:g,vertexTextures:w,floatFragmentTextures:y,floatVertexTextures:M,maxSamples:b}}function A4(n){const e=this;let t=null,i=0,r=!1,s=!1;const o=new Br,a=new oi,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(u,f,h){const p=u.length!==0||f||i!==0||r;return r=f,t=d(u,h,0),i=u.length,p},this.beginShadows=function(){s=!0,d(null)},this.endShadows=function(){s=!1,c()},this.setState=function(u,f,h){const p=u.clippingPlanes,x=u.clipIntersection,m=u.clipShadows,v=n.get(u);if(!r||p===null||p.length===0||s&&!m)s?d(null):c();else{const g=s?0:i,w=g*4;let y=v.clippingState||null;l.value=y,y=d(p,f,w,h);for(let M=0;M!==w;++M)y[M]=t[M];v.clippingState=y,this.numIntersection=x?this.numPlanes:0,this.numPlanes+=g}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function d(u,f,h,p){const x=u!==null?u.length:0;let m=null;if(x!==0){if(m=l.value,p!==!0||m===null){const v=h+x*4,g=f.matrixWorldInverse;a.getNormalMatrix(g),(m===null||m.length<v)&&(m=new Float32Array(v));for(let w=0,y=h;w!==x;++w,y+=4)o.copy(u[w]).applyMatrix4(g,a),o.normal.toArray(m,y),m[y+3]=o.constant}l.value=m,l.needsUpdate=!0}return e.numPlanes=x,e.numIntersection=0,m}}function L4(n){let e=new WeakMap;function t(o,a){return a===Yh?o.mapping=So:a===Zh&&(o.mapping=Eo),o}function i(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const a=o.mapping;if(a===Yh||a===Zh)if(e.has(o)){const l=e.get(o).texture;return t(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new H9(l.height/2);return c.fromEquirectangularTexture(n,o),e.set(o,c),o.addEventListener("dispose",r),t(c.texture,o.mapping)}else return null}}return o}function r(o){const a=o.target;a.removeEventListener("dispose",r);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function s(){e=new WeakMap}return{get:i,dispose:s}}let C4=class extends iv{constructor(e=-1,t=1,i=1,r=-1,s=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=r,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,i,r,s,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=r,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let s=i-e,o=i+e,a=r+t,l=r-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,d=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,o=s+c*this.view.width,a-=d*this.view.offsetY,l=a-d*this.view.height}this.projectionMatrix.makeOrthographic(s,o,a,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}};const po=4,Nm=[.125,.215,.35,.446,.526,.582],Hr=20,Tu=new C4,Bm=new lt;let Au=null;const Ur=(1+Math.sqrt(5))/2,Vs=1/Ur,Um=[new ce(1,1,1),new ce(-1,1,1),new ce(1,1,-1),new ce(-1,1,-1),new ce(0,Ur,Vs),new ce(0,Ur,-Vs),new ce(Vs,0,Ur),new ce(-Vs,0,Ur),new ce(Ur,Vs,0),new ce(-Ur,Vs,0)];let Gm=class{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,r=100){Au=this._renderer.getRenderTarget(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,i,r,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Vm(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Hm(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Au),e.scissorTest=!1,Xc(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===So||e.mapping===Eo?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Au=this._renderer.getRenderTarget();const i=t||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,i={magFilter:Ln,minFilter:Ln,generateMipmaps:!1,type:Pa,format:si,encoding:ss,depthBuffer:!1},r=km(e,t,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=km(e,t,i);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=R4(s)),this._blurMaterial=P4(s,e,t)}return r}_compileMaterial(e){const t=new Ii(this._lodPlanes[0],e);this._renderer.compile(t,Tu)}_sceneToCubeUV(e,t,i,r){const a=new Cn(90,1,t,i),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],d=this._renderer,u=d.autoClear,f=d.toneMapping;d.getClearColor(Bm),d.toneMapping=Oi,d.autoClear=!1;const h=new K3({name:"PMREM.Background",side:Wn,depthWrite:!1,depthTest:!1}),p=new Ii(new Dd,h);let x=!1;const m=e.background;m?m.isColor&&(h.color.copy(m),e.background=null,x=!0):(h.color.copy(Bm),x=!0);for(let v=0;v<6;v++){const g=v%3;g===0?(a.up.set(0,l[v],0),a.lookAt(c[v],0,0)):g===1?(a.up.set(0,0,l[v]),a.lookAt(0,c[v],0)):(a.up.set(0,l[v],0),a.lookAt(0,0,c[v]));const w=this._cubeSize;Xc(r,g*w,v>2?w:0,w,w),d.setRenderTarget(r),x&&d.render(p,a),d.render(e,a)}p.geometry.dispose(),p.material.dispose(),d.toneMapping=f,d.autoClear=u,e.background=m}_textureToCubeUV(e,t){const i=this._renderer,r=e.mapping===So||e.mapping===Eo;r?(this._cubemapMaterial===null&&(this._cubemapMaterial=Vm()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Hm());const s=r?this._cubemapMaterial:this._equirectMaterial,o=new Ii(this._lodPlanes[0],s),a=s.uniforms;a.envMap.value=e;const l=this._cubeSize;Xc(t,0,0,3*l,2*l),i.setRenderTarget(t),i.render(o,Tu)}_applyPMREM(e){const t=this._renderer,i=t.autoClear;t.autoClear=!1;for(let r=1;r<this._lodPlanes.length;r++){const s=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),o=Um[(r-1)%Um.length];this._blur(e,r-1,r,s,o)}t.autoClear=i}_blur(e,t,i,r,s){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,i,r,"latitudinal",s),this._halfBlur(o,e,i,i,r,"longitudinal",s)}_halfBlur(e,t,i,r,s,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const d=3,u=new Ii(this._lodPlanes[r],c),f=c.uniforms,h=this._sizeLods[i]-1,p=isFinite(s)?Math.PI/(2*h):2*Math.PI/(2*Hr-1),x=s/p,m=isFinite(s)?1+Math.floor(d*x):Hr;m>Hr&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${Hr}`);const v=[];let g=0;for(let _=0;_<Hr;++_){const S=_/x,E=Math.exp(-S*S/2);v.push(E),_===0?g+=E:_<m&&(g+=2*E)}for(let _=0;_<v.length;_++)v[_]=v[_]/g;f.envMap.value=e.texture,f.samples.value=m,f.weights.value=v,f.latitudinal.value=o==="latitudinal",a&&(f.poleAxis.value=a);const{_lodMax:w}=this;f.dTheta.value=p,f.mipInt.value=w-i;const y=this._sizeLods[r],M=3*y*(r>w-po?r-w+po:0),b=4*(this._cubeSize-y);Xc(t,M,b,3*y,2*y),l.setRenderTarget(t),l.render(u,Tu)}};function R4(n){const e=[],t=[],i=[];let r=n;const s=n-po+1+Nm.length;for(let o=0;o<s;o++){const a=Math.pow(2,r);t.push(a);let l=1/a;o>n-po?l=Nm[o-n+po-1]:o===0&&(l=0),i.push(l);const c=1/(a-2),d=-c,u=1+c,f=[d,d,u,d,u,u,d,d,u,u,d,u],h=6,p=6,x=3,m=2,v=1,g=new Float32Array(x*p*h),w=new Float32Array(m*p*h),y=new Float32Array(v*p*h);for(let b=0;b<h;b++){const _=b%3*2/3-1,S=b>2?0:-1,E=[_,S,0,_+2/3,S,0,_+2/3,S+1,0,_,S,0,_+2/3,S+1,0,_,S+1,0];g.set(E,x*p*b),w.set(f,m*p*b);const R=[b,b,b,b,b,b];y.set(R,v*p*b)}const M=new mc;M.setAttribute("position",new ci(g,x)),M.setAttribute("uv",new ci(w,m)),M.setAttribute("faceIndex",new ci(y,v)),e.push(M),r>po&&r--}return{lodPlanes:e,sizeLods:t,sigmas:i}}function km(n,e,t){const i=new os(n,e,t);return i.texture.mapping=Pd,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function Xc(n,e,t,i,r){n.viewport.set(e,t,i,r),n.scissor.set(e,t,i,r)}function P4(n,e,t){const i=new Float32Array(Hr),r=new ce(0,1,0);return new as({name:"SphericalGaussianBlur",defines:{n:Hr,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${n}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:ep(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:lr,depthTest:!1,depthWrite:!1})}function Hm(){return new as({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:ep(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:lr,depthTest:!1,depthWrite:!1})}function Vm(){return new as({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:ep(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:lr,depthTest:!1,depthWrite:!1})}function ep(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function I4(n){let e=new WeakMap,t=null;function i(a){if(a&&a.isTexture){const l=a.mapping,c=l===Yh||l===Zh,d=l===So||l===Eo;if(c||d)if(a.isRenderTargetTexture&&a.needsPMREMUpdate===!0){a.needsPMREMUpdate=!1;let u=e.get(a);return t===null&&(t=new Gm(n)),u=c?t.fromEquirectangular(a,u):t.fromCubemap(a,u),e.set(a,u),u.texture}else{if(e.has(a))return e.get(a).texture;{const u=a.image;if(c&&u&&u.height>0||d&&u&&r(u)){t===null&&(t=new Gm(n));const f=c?t.fromEquirectangular(a):t.fromCubemap(a);return e.set(a,f),a.addEventListener("dispose",s),f.texture}else return null}}}return a}function r(a){let l=0;const c=6;for(let d=0;d<c;d++)a[d]!==void 0&&l++;return l===c}function s(a){const l=a.target;l.removeEventListener("dispose",s);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:i,dispose:o}}function D4(n){const e={};function t(i){if(e[i]!==void 0)return e[i];let r;switch(i){case"WEBGL_depth_texture":r=n.getExtension("WEBGL_depth_texture")||n.getExtension("MOZ_WEBGL_depth_texture")||n.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=n.getExtension("WEBGL_compressed_texture_pvrtc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=n.getExtension(i)}return e[i]=r,r}return{has:function(i){return t(i)!==null},init:function(i){i.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(i){const r=t(i);return r===null&&console.warn("THREE.WebGLRenderer: "+i+" extension not supported."),r}}}function O4(n,e,t,i){const r={},s=new WeakMap;function o(u){const f=u.target;f.index!==null&&e.remove(f.index);for(const p in f.attributes)e.remove(f.attributes[p]);f.removeEventListener("dispose",o),delete r[f.id];const h=s.get(f);h&&(e.remove(h),s.delete(f)),i.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,t.memory.geometries--}function a(u,f){return r[f.id]===!0||(f.addEventListener("dispose",o),r[f.id]=!0,t.memory.geometries++),f}function l(u){const f=u.attributes;for(const p in f)e.update(f[p],34962);const h=u.morphAttributes;for(const p in h){const x=h[p];for(let m=0,v=x.length;m<v;m++)e.update(x[m],34962)}}function c(u){const f=[],h=u.index,p=u.attributes.position;let x=0;if(h!==null){const g=h.array;x=h.version;for(let w=0,y=g.length;w<y;w+=3){const M=g[w+0],b=g[w+1],_=g[w+2];f.push(M,b,b,_,_,M)}}else{const g=p.array;x=p.version;for(let w=0,y=g.length/3-1;w<y;w+=3){const M=w+0,b=w+1,_=w+2;f.push(M,b,b,_,_,M)}}const m=new(H3(f)?ev:Q3)(f,1);m.version=x;const v=s.get(u);v&&e.remove(v),s.set(u,m)}function d(u){const f=s.get(u);if(f){const h=u.index;h!==null&&f.version<h.version&&c(u)}else c(u);return s.get(u)}return{get:a,update:l,getWireframeAttribute:d}}function q4(n,e,t,i){const r=i.isWebGL2;let s;function o(f){s=f}let a,l;function c(f){a=f.type,l=f.bytesPerElement}function d(f,h){n.drawElements(s,h,a,f*l),t.update(h,s,1)}function u(f,h,p){if(p===0)return;let x,m;if(r)x=n,m="drawElementsInstanced";else if(x=e.get("ANGLE_instanced_arrays"),m="drawElementsInstancedANGLE",x===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}x[m](s,h,a,f*l,p),t.update(h,s,p)}this.setMode=o,this.setIndex=c,this.render=d,this.renderInstances=u}function z4(n){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function i(s,o,a){switch(t.calls++,o){case 4:t.triangles+=a*(s/3);break;case 1:t.lines+=a*(s/2);break;case 3:t.lines+=a*(s-1);break;case 2:t.lines+=a*s;break;case 0:t.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function r(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:r,update:i}}function F4(n,e){return n[0]-e[0]}function N4(n,e){return Math.abs(e[1])-Math.abs(n[1])}function Lu(n,e){let t=1;const i=e.isInterleavedBufferAttribute?e.data.array:e.array;i instanceof Int8Array?t=127:i instanceof Uint8Array?t=255:i instanceof Uint16Array?t=65535:i instanceof Int16Array?t=32767:i instanceof Int32Array?t=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",i),n.divideScalar(t)}function B4(n,e,t){const i={},r=new Float32Array(8),s=new WeakMap,o=new Ht,a=[];for(let c=0;c<8;c++)a[c]=[c,0];function l(c,d,u,f){const h=c.morphTargetInfluences;if(e.isWebGL2===!0){const x=d.morphAttributes.position||d.morphAttributes.normal||d.morphAttributes.color,m=x!==void 0?x.length:0;let v=s.get(d);if(v===void 0||v.count!==m){let U=function(){L.dispose(),s.delete(d),d.removeEventListener("dispose",U)};var p=U;v!==void 0&&v.texture.dispose();const y=d.morphAttributes.position!==void 0,M=d.morphAttributes.normal!==void 0,b=d.morphAttributes.color!==void 0,_=d.morphAttributes.position||[],S=d.morphAttributes.normal||[],E=d.morphAttributes.color||[];let R=0;y===!0&&(R=1),M===!0&&(R=2),b===!0&&(R=3);let I=d.attributes.position.count*R,$=1;I>e.maxTextureSize&&($=Math.ceil(I/e.maxTextureSize),I=e.maxTextureSize);const W=new Float32Array(I*$*4*m),L=new X3(W,I,$,m);L.type=$r,L.needsUpdate=!0;const z=R*4;for(let X=0;X<m;X++){const K=_[X],j=S[X],ee=E[X],P=I*$*4*X;for(let H=0;H<K.count;H++){const Y=H*z;y===!0&&(o.fromBufferAttribute(K,H),K.normalized===!0&&Lu(o,K),W[P+Y+0]=o.x,W[P+Y+1]=o.y,W[P+Y+2]=o.z,W[P+Y+3]=0),M===!0&&(o.fromBufferAttribute(j,H),j.normalized===!0&&Lu(o,j),W[P+Y+4]=o.x,W[P+Y+5]=o.y,W[P+Y+6]=o.z,W[P+Y+7]=0),b===!0&&(o.fromBufferAttribute(ee,H),ee.normalized===!0&&Lu(o,ee),W[P+Y+8]=o.x,W[P+Y+9]=o.y,W[P+Y+10]=o.z,W[P+Y+11]=ee.itemSize===4?o.w:1)}}v={count:m,texture:L,size:new xt(I,$)},s.set(d,v),d.addEventListener("dispose",U)}let g=0;for(let y=0;y<h.length;y++)g+=h[y];const w=d.morphTargetsRelative?1:1-g;f.getUniforms().setValue(n,"morphTargetBaseInfluence",w),f.getUniforms().setValue(n,"morphTargetInfluences",h),f.getUniforms().setValue(n,"morphTargetsTexture",v.texture,t),f.getUniforms().setValue(n,"morphTargetsTextureSize",v.size)}else{const x=h===void 0?0:h.length;let m=i[d.id];if(m===void 0||m.length!==x){m=[];for(let M=0;M<x;M++)m[M]=[M,0];i[d.id]=m}for(let M=0;M<x;M++){const b=m[M];b[0]=M,b[1]=h[M]}m.sort(N4);for(let M=0;M<8;M++)M<x&&m[M][1]?(a[M][0]=m[M][0],a[M][1]=m[M][1]):(a[M][0]=Number.MAX_SAFE_INTEGER,a[M][1]=0);a.sort(F4);const v=d.morphAttributes.position,g=d.morphAttributes.normal;let w=0;for(let M=0;M<8;M++){const b=a[M],_=b[0],S=b[1];_!==Number.MAX_SAFE_INTEGER&&S?(v&&d.getAttribute("morphTarget"+M)!==v[_]&&d.setAttribute("morphTarget"+M,v[_]),g&&d.getAttribute("morphNormal"+M)!==g[_]&&d.setAttribute("morphNormal"+M,g[_]),r[M]=S,w+=S):(v&&d.hasAttribute("morphTarget"+M)===!0&&d.deleteAttribute("morphTarget"+M),g&&d.hasAttribute("morphNormal"+M)===!0&&d.deleteAttribute("morphNormal"+M),r[M]=0)}const y=d.morphTargetsRelative?1:1-w;f.getUniforms().setValue(n,"morphTargetBaseInfluence",y),f.getUniforms().setValue(n,"morphTargetInfluences",r)}}return{update:l}}function U4(n,e,t,i){let r=new WeakMap;function s(l){const c=i.render.frame,d=l.geometry,u=e.get(l,d);return r.get(u)!==c&&(e.update(u),r.set(u,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),t.update(l.instanceMatrix,34962),l.instanceColor!==null&&t.update(l.instanceColor,34962)),u}function o(){r=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:s,dispose:o}}const cv=new Mr,lv=new X3,dv=new T9,uv=new rv,Wm=[],$m=[],jm=new Float32Array(16),Xm=new Float32Array(9),Ym=new Float32Array(4);function $o(n,e,t){const i=n[0];if(i<=0||i>0)return n;const r=e*t;let s=Wm[r];if(s===void 0&&(s=new Float32Array(r),Wm[r]=s),e!==0){i.toArray(s,0);for(let o=1,a=0;o!==e;++o)a+=t,n[o].toArray(s,a)}return s}function Jt(n,e){if(n.length!==e.length)return!1;for(let t=0,i=n.length;t<i;t++)if(n[t]!==e[t])return!1;return!0}function Kt(n,e){for(let t=0,i=e.length;t<i;t++)n[t]=e[t]}function Od(n,e){let t=$m[e];t===void 0&&(t=new Int32Array(e),$m[e]=t);for(let i=0;i!==e;++i)t[i]=n.allocateTextureUnit();return t}function G4(n,e){const t=this.cache;t[0]!==e&&(n.uniform1f(this.addr,e),t[0]=e)}function k4(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Jt(t,e))return;n.uniform2fv(this.addr,e),Kt(t,e)}}function H4(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(n.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(Jt(t,e))return;n.uniform3fv(this.addr,e),Kt(t,e)}}function V4(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Jt(t,e))return;n.uniform4fv(this.addr,e),Kt(t,e)}}function W4(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(Jt(t,e))return;n.uniformMatrix2fv(this.addr,!1,e),Kt(t,e)}else{if(Jt(t,i))return;Ym.set(i),n.uniformMatrix2fv(this.addr,!1,Ym),Kt(t,i)}}function $4(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(Jt(t,e))return;n.uniformMatrix3fv(this.addr,!1,e),Kt(t,e)}else{if(Jt(t,i))return;Xm.set(i),n.uniformMatrix3fv(this.addr,!1,Xm),Kt(t,i)}}function j4(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(Jt(t,e))return;n.uniformMatrix4fv(this.addr,!1,e),Kt(t,e)}else{if(Jt(t,i))return;jm.set(i),n.uniformMatrix4fv(this.addr,!1,jm),Kt(t,i)}}function X4(n,e){const t=this.cache;t[0]!==e&&(n.uniform1i(this.addr,e),t[0]=e)}function Y4(n,e){const t=this.cache;Jt(t,e)||(n.uniform2iv(this.addr,e),Kt(t,e))}function Z4(n,e){const t=this.cache;Jt(t,e)||(n.uniform3iv(this.addr,e),Kt(t,e))}function J4(n,e){const t=this.cache;Jt(t,e)||(n.uniform4iv(this.addr,e),Kt(t,e))}function K4(n,e){const t=this.cache;t[0]!==e&&(n.uniform1ui(this.addr,e),t[0]=e)}function Q4(n,e){const t=this.cache;Jt(t,e)||(n.uniform2uiv(this.addr,e),Kt(t,e))}function ew(n,e){const t=this.cache;Jt(t,e)||(n.uniform3uiv(this.addr,e),Kt(t,e))}function tw(n,e){const t=this.cache;Jt(t,e)||(n.uniform4uiv(this.addr,e),Kt(t,e))}function nw(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTexture2D(e||cv,r)}function iw(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTexture3D(e||dv,r)}function rw(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTextureCube(e||uv,r)}function sw(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTexture2DArray(e||lv,r)}function ow(n){switch(n){case 5126:return G4;case 35664:return k4;case 35665:return H4;case 35666:return V4;case 35674:return W4;case 35675:return $4;case 35676:return j4;case 5124:case 35670:return X4;case 35667:case 35671:return Y4;case 35668:case 35672:return Z4;case 35669:case 35673:return J4;case 5125:return K4;case 36294:return Q4;case 36295:return ew;case 36296:return tw;case 35678:case 36198:case 36298:case 36306:case 35682:return nw;case 35679:case 36299:case 36307:return iw;case 35680:case 36300:case 36308:case 36293:return rw;case 36289:case 36303:case 36311:case 36292:return sw}}function aw(n,e){n.uniform1fv(this.addr,e)}function cw(n,e){const t=$o(e,this.size,2);n.uniform2fv(this.addr,t)}function lw(n,e){const t=$o(e,this.size,3);n.uniform3fv(this.addr,t)}function dw(n,e){const t=$o(e,this.size,4);n.uniform4fv(this.addr,t)}function uw(n,e){const t=$o(e,this.size,4);n.uniformMatrix2fv(this.addr,!1,t)}function fw(n,e){const t=$o(e,this.size,9);n.uniformMatrix3fv(this.addr,!1,t)}function hw(n,e){const t=$o(e,this.size,16);n.uniformMatrix4fv(this.addr,!1,t)}function pw(n,e){n.uniform1iv(this.addr,e)}function mw(n,e){n.uniform2iv(this.addr,e)}function xw(n,e){n.uniform3iv(this.addr,e)}function gw(n,e){n.uniform4iv(this.addr,e)}function vw(n,e){n.uniform1uiv(this.addr,e)}function yw(n,e){n.uniform2uiv(this.addr,e)}function bw(n,e){n.uniform3uiv(this.addr,e)}function _w(n,e){n.uniform4uiv(this.addr,e)}function ww(n,e,t){const i=e.length,r=Od(t,i);n.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)t.setTexture2D(e[s]||cv,r[s])}function Mw(n,e,t){const i=e.length,r=Od(t,i);n.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)t.setTexture3D(e[s]||dv,r[s])}function Sw(n,e,t){const i=e.length,r=Od(t,i);n.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)t.setTextureCube(e[s]||uv,r[s])}function Ew(n,e,t){const i=e.length,r=Od(t,i);n.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)t.setTexture2DArray(e[s]||lv,r[s])}function Tw(n){switch(n){case 5126:return aw;case 35664:return cw;case 35665:return lw;case 35666:return dw;case 35674:return uw;case 35675:return fw;case 35676:return hw;case 5124:case 35670:return pw;case 35667:case 35671:return mw;case 35668:case 35672:return xw;case 35669:case 35673:return gw;case 5125:return vw;case 36294:return yw;case 36295:return bw;case 36296:return _w;case 35678:case 36198:case 36298:case 36306:case 35682:return ww;case 35679:case 36299:case 36307:return Mw;case 35680:case 36300:case 36308:case 36293:return Sw;case 36289:case 36303:case 36311:case 36292:return Ew}}let Aw=class{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.setValue=ow(t.type)}},Lw=class{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.size=t.size,this.setValue=Tw(t.type)}},Cw=class{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,i){const r=this.seq;for(let s=0,o=r.length;s!==o;++s){const a=r[s];a.setValue(e,t[a.id],i)}}};const Cu=/(\w+)(\])?(\[|\.)?/g;function Zm(n,e){n.seq.push(e),n.map[e.id]=e}function Rw(n,e,t){const i=n.name,r=i.length;for(Cu.lastIndex=0;;){const s=Cu.exec(i),o=Cu.lastIndex;let a=s[1];const l=s[2]==="]",c=s[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===r){Zm(t,c===void 0?new Aw(a,n,e):new Lw(a,n,e));break}else{let u=t.map[a];u===void 0&&(u=new Cw(a),Zm(t,u)),t=u}}}let Ul=class{constructor(e,t){this.seq=[],this.map={};const i=e.getProgramParameter(t,35718);for(let r=0;r<i;++r){const s=e.getActiveUniform(t,r),o=e.getUniformLocation(t,s.name);Rw(s,o,this)}}setValue(e,t,i,r){const s=this.map[t];s!==void 0&&s.setValue(e,i,r)}setOptional(e,t,i){const r=t[i];r!==void 0&&this.setValue(e,i,r)}static upload(e,t,i,r){for(let s=0,o=t.length;s!==o;++s){const a=t[s],l=i[a.id];l.needsUpdate!==!1&&a.setValue(e,l.value,r)}}static seqWithValue(e,t){const i=[];for(let r=0,s=e.length;r!==s;++r){const o=e[r];o.id in t&&i.push(o)}return i}};function Jm(n,e,t){const i=n.createShader(e);return n.shaderSource(i,t),n.compileShader(i),i}let Pw=0;function Iw(n,e){const t=n.split(`
`),i=[],r=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let o=r;o<s;o++){const a=o+1;i.push(`${a===e?">":" "} ${a}: ${t[o]}`)}return i.join(`
`)}function Dw(n){switch(n){case ss:return["Linear","( value )"];case Tt:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",n),["Linear","( value )"]}}function Km(n,e,t){const i=n.getShaderParameter(e,35713),r=n.getShaderInfoLog(e).trim();if(i&&r==="")return"";const s=/ERROR: 0:(\d+)/.exec(r);if(s){const o=parseInt(s[1]);return t.toUpperCase()+`

`+r+`

`+Iw(n.getShaderSource(e),o)}else return r}function Ow(n,e){const t=Dw(e);return"vec4 "+n+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function qw(n,e){let t;switch(e){case Qb:t="Linear";break;case e9:t="Reinhard";break;case t9:t="OptimizedCineon";break;case n9:t="ACESFilmic";break;case i9:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+n+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function zw(n){return[n.extensionDerivatives||n.envMapCubeUVHeight||n.bumpMap||n.tangentSpaceNormalMap||n.clearcoatNormalMap||n.flatShading||n.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(n.extensionFragDepth||n.logarithmicDepthBuffer)&&n.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",n.extensionDrawBuffers&&n.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(n.extensionShaderTextureLOD||n.envMap||n.transmission)&&n.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(_a).join(`
`)}function Fw(n){const e=[];for(const t in n){const i=n[t];i!==!1&&e.push("#define "+t+" "+i)}return e.join(`
`)}function Nw(n,e){const t={},i=n.getProgramParameter(e,35721);for(let r=0;r<i;r++){const s=n.getActiveAttrib(e,r),o=s.name;let a=1;s.type===35674&&(a=2),s.type===35675&&(a=3),s.type===35676&&(a=4),t[o]={type:s.type,location:n.getAttribLocation(e,o),locationSize:a}}return t}function _a(n){return n!==""}function Qm(n,e){return n.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function ex(n,e){return n.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Bw=/^[ \t]*#include +<([\w\d./]+)>/gm;function r0(n){return n.replace(Bw,Uw)}function Uw(n,e){const t=rt[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return r0(t)}const Gw=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,kw=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function tx(n){return n.replace(kw,fv).replace(Gw,Hw)}function Hw(n,e,t,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),fv(n,e,t,i)}function fv(n,e,t,i){let r="";for(let s=parseInt(e);s<parseInt(t);s++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function nx(n){let e="precision "+n.precision+` float;
precision `+n.precision+" int;";return n.precision==="highp"?e+=`
#define HIGH_PRECISION`:n.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:n.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function Vw(n){let e="SHADOWMAP_TYPE_BASIC";return n.shadowMapType===q3?e="SHADOWMAP_TYPE_PCF":n.shadowMapType===Rb?e="SHADOWMAP_TYPE_PCF_SOFT":n.shadowMapType===ba&&(e="SHADOWMAP_TYPE_VSM"),e}function Ww(n){let e="ENVMAP_TYPE_CUBE";if(n.envMap)switch(n.envMapMode){case So:case Eo:e="ENVMAP_TYPE_CUBE";break;case Pd:e="ENVMAP_TYPE_CUBE_UV";break}return e}function $w(n){let e="ENVMAP_MODE_REFLECTION";if(n.envMap)switch(n.envMapMode){case Eo:e="ENVMAP_MODE_REFRACTION";break}return e}function jw(n){let e="ENVMAP_BLENDING_NONE";if(n.envMap)switch(n.combine){case J0:e="ENVMAP_BLENDING_MULTIPLY";break;case Jb:e="ENVMAP_BLENDING_MIX";break;case Kb:e="ENVMAP_BLENDING_ADD";break}return e}function Xw(n){const e=n.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),112)),texelHeight:i,maxMip:t}}function Yw(n,e,t,i){const r=n.getContext(),s=t.defines;let o=t.vertexShader,a=t.fragmentShader;const l=Vw(t),c=Ww(t),d=$w(t),u=jw(t),f=Xw(t),h=t.isWebGL2?"":zw(t),p=Fw(s),x=r.createProgram();let m,v,g=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(m=[p].filter(_a).join(`
`),m.length>0&&(m+=`
`),v=[h,p].filter(_a).join(`
`),v.length>0&&(v+=`
`)):(m=[nx(t),"#define SHADER_NAME "+t.shaderName,p,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+d:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(_a).join(`
`),v=[h,nx(t),"#define SHADER_NAME "+t.shaderName,p,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+d:"",t.envMap?"#define "+u:"",f?"#define CUBEUV_TEXEL_WIDTH "+f.texelWidth:"",f?"#define CUBEUV_TEXEL_HEIGHT "+f.texelHeight:"",f?"#define CUBEUV_MAX_MIP "+f.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Oi?"#define TONE_MAPPING":"",t.toneMapping!==Oi?rt.tonemapping_pars_fragment:"",t.toneMapping!==Oi?qw("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",rt.encodings_pars_fragment,Ow("linearToOutputTexel",t.outputEncoding),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(_a).join(`
`)),o=r0(o),o=Qm(o,t),o=ex(o,t),a=r0(a),a=Qm(a,t),a=ex(a,t),o=tx(o),a=tx(a),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(g=`#version 300 es
`,m=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,v=["#define varying in",t.glslVersion===Sm?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Sm?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+v);const w=g+m+o,y=g+v+a,M=Jm(r,35633,w),b=Jm(r,35632,y);if(r.attachShader(x,M),r.attachShader(x,b),t.index0AttributeName!==void 0?r.bindAttribLocation(x,0,t.index0AttributeName):t.morphTargets===!0&&r.bindAttribLocation(x,0,"position"),r.linkProgram(x),n.debug.checkShaderErrors){const E=r.getProgramInfoLog(x).trim(),R=r.getShaderInfoLog(M).trim(),I=r.getShaderInfoLog(b).trim();let $=!0,W=!0;if(r.getProgramParameter(x,35714)===!1){$=!1;const L=Km(r,M,"vertex"),z=Km(r,b,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(x,35715)+`

Program Info Log: `+E+`
`+L+`
`+z)}else E!==""?console.warn("THREE.WebGLProgram: Program Info Log:",E):(R===""||I==="")&&(W=!1);W&&(this.diagnostics={runnable:$,programLog:E,vertexShader:{log:R,prefix:m},fragmentShader:{log:I,prefix:v}})}r.deleteShader(M),r.deleteShader(b);let _;this.getUniforms=function(){return _===void 0&&(_=new Ul(r,x)),_};let S;return this.getAttributes=function(){return S===void 0&&(S=Nw(r,x)),S},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(x),this.program=void 0},this.name=t.shaderName,this.id=Pw++,this.cacheKey=e,this.usedTimes=1,this.program=x,this.vertexShader=M,this.fragmentShader=b,this}let Zw=0;class Jw{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,i=e.fragmentShader,r=this._getShaderStage(t),s=this._getShaderStage(i),o=this._getShaderCacheForMaterial(e);return o.has(r)===!1&&(o.add(r),r.usedTimes++),o.has(s)===!1&&(o.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const i of t)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;return t.has(e)===!1&&t.set(e,new Set),t.get(e)}_getShaderStage(e){const t=this.shaderCache;if(t.has(e)===!1){const i=new Kw(e);t.set(e,i)}return t.get(e)}}class Kw{constructor(e){this.id=Zw++,this.code=e,this.usedTimes=0}}function Qw(n,e,t,i,r,s,o){const a=new J3,l=new Jw,c=[],d=r.isWebGL2,u=r.logarithmicDepthBuffer,f=r.vertexTextures;let h=r.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function x(S,E,R,I,$){const W=I.fog,L=$.geometry,z=S.isMeshStandardMaterial?I.environment:null,U=(S.isMeshStandardMaterial?t:e).get(S.envMap||z),X=U&&U.mapping===Pd?U.image.height:null,K=p[S.type];S.precision!==null&&(h=r.getMaxPrecision(S.precision),h!==S.precision&&console.warn("THREE.WebGLProgram.getParameters:",S.precision,"not supported, using",h,"instead."));const j=L.morphAttributes.position||L.morphAttributes.normal||L.morphAttributes.color,ee=j!==void 0?j.length:0;let P=0;L.morphAttributes.position!==void 0&&(P=1),L.morphAttributes.normal!==void 0&&(P=2),L.morphAttributes.color!==void 0&&(P=3);let H,Y,Q,F;if(K){const Ie=ii[K];H=Ie.vertexShader,Y=Ie.fragmentShader}else H=S.vertexShader,Y=S.fragmentShader,l.update(S),Q=l.getVertexShaderID(S),F=l.getFragmentShaderID(S);const oe=n.getRenderTarget(),Se=S.alphaTest>0,Me=S.clearcoat>0,be=S.iridescence>0;return{isWebGL2:d,shaderID:K,shaderName:S.type,vertexShader:H,fragmentShader:Y,defines:S.defines,customVertexShaderID:Q,customFragmentShaderID:F,isRawShaderMaterial:S.isRawShaderMaterial===!0,glslVersion:S.glslVersion,precision:h,instancing:$.isInstancedMesh===!0,instancingColor:$.isInstancedMesh===!0&&$.instanceColor!==null,supportsVertexTextures:f,outputEncoding:oe===null?n.outputEncoding:oe.isXRRenderTarget===!0?oe.texture.encoding:ss,map:!!S.map,matcap:!!S.matcap,envMap:!!U,envMapMode:U&&U.mapping,envMapCubeUVHeight:X,lightMap:!!S.lightMap,aoMap:!!S.aoMap,emissiveMap:!!S.emissiveMap,bumpMap:!!S.bumpMap,normalMap:!!S.normalMap,objectSpaceNormalMap:S.normalMapType===w9,tangentSpaceNormalMap:S.normalMapType===U3,decodeVideoTexture:!!S.map&&S.map.isVideoTexture===!0&&S.map.encoding===Tt,clearcoat:Me,clearcoatMap:Me&&!!S.clearcoatMap,clearcoatRoughnessMap:Me&&!!S.clearcoatRoughnessMap,clearcoatNormalMap:Me&&!!S.clearcoatNormalMap,iridescence:be,iridescenceMap:be&&!!S.iridescenceMap,iridescenceThicknessMap:be&&!!S.iridescenceThicknessMap,displacementMap:!!S.displacementMap,roughnessMap:!!S.roughnessMap,metalnessMap:!!S.metalnessMap,specularMap:!!S.specularMap,specularIntensityMap:!!S.specularIntensityMap,specularColorMap:!!S.specularColorMap,opaque:S.transparent===!1&&S.blending===go,alphaMap:!!S.alphaMap,alphaTest:Se,gradientMap:!!S.gradientMap,sheen:S.sheen>0,sheenColorMap:!!S.sheenColorMap,sheenRoughnessMap:!!S.sheenRoughnessMap,transmission:S.transmission>0,transmissionMap:!!S.transmissionMap,thicknessMap:!!S.thicknessMap,combine:S.combine,vertexTangents:!!S.normalMap&&!!L.attributes.tangent,vertexColors:S.vertexColors,vertexAlphas:S.vertexColors===!0&&!!L.attributes.color&&L.attributes.color.itemSize===4,vertexUvs:!!S.map||!!S.bumpMap||!!S.normalMap||!!S.specularMap||!!S.alphaMap||!!S.emissiveMap||!!S.roughnessMap||!!S.metalnessMap||!!S.clearcoatMap||!!S.clearcoatRoughnessMap||!!S.clearcoatNormalMap||!!S.iridescenceMap||!!S.iridescenceThicknessMap||!!S.displacementMap||!!S.transmissionMap||!!S.thicknessMap||!!S.specularIntensityMap||!!S.specularColorMap||!!S.sheenColorMap||!!S.sheenRoughnessMap,uvsVertexOnly:!(S.map||S.bumpMap||S.normalMap||S.specularMap||S.alphaMap||S.emissiveMap||S.roughnessMap||S.metalnessMap||S.clearcoatNormalMap||S.iridescenceMap||S.iridescenceThicknessMap||S.transmission>0||S.transmissionMap||S.thicknessMap||S.specularIntensityMap||S.specularColorMap||S.sheen>0||S.sheenColorMap||S.sheenRoughnessMap)&&!!S.displacementMap,fog:!!W,useFog:S.fog===!0,fogExp2:W&&W.isFogExp2,flatShading:!!S.flatShading,sizeAttenuation:S.sizeAttenuation,logarithmicDepthBuffer:u,skinning:$.isSkinnedMesh===!0,morphTargets:L.morphAttributes.position!==void 0,morphNormals:L.morphAttributes.normal!==void 0,morphColors:L.morphAttributes.color!==void 0,morphTargetsCount:ee,morphTextureStride:P,numDirLights:E.directional.length,numPointLights:E.point.length,numSpotLights:E.spot.length,numRectAreaLights:E.rectArea.length,numHemiLights:E.hemi.length,numDirLightShadows:E.directionalShadowMap.length,numPointLightShadows:E.pointShadowMap.length,numSpotLightShadows:E.spotShadowMap.length,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:S.dithering,shadowMapEnabled:n.shadowMap.enabled&&R.length>0,shadowMapType:n.shadowMap.type,toneMapping:S.toneMapped?n.toneMapping:Oi,physicallyCorrectLights:n.physicallyCorrectLights,premultipliedAlpha:S.premultipliedAlpha,doubleSided:S.side===Mo,flipSided:S.side===Wn,useDepthPacking:!!S.depthPacking,depthPacking:S.depthPacking||0,index0AttributeName:S.index0AttributeName,extensionDerivatives:S.extensions&&S.extensions.derivatives,extensionFragDepth:S.extensions&&S.extensions.fragDepth,extensionDrawBuffers:S.extensions&&S.extensions.drawBuffers,extensionShaderTextureLOD:S.extensions&&S.extensions.shaderTextureLOD,rendererExtensionFragDepth:d||i.has("EXT_frag_depth"),rendererExtensionDrawBuffers:d||i.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:d||i.has("EXT_shader_texture_lod"),customProgramCacheKey:S.customProgramCacheKey()}}function m(S){const E=[];if(S.shaderID?E.push(S.shaderID):(E.push(S.customVertexShaderID),E.push(S.customFragmentShaderID)),S.defines!==void 0)for(const R in S.defines)E.push(R),E.push(S.defines[R]);return S.isRawShaderMaterial===!1&&(v(E,S),g(E,S),E.push(n.outputEncoding)),E.push(S.customProgramCacheKey),E.join()}function v(S,E){S.push(E.precision),S.push(E.outputEncoding),S.push(E.envMapMode),S.push(E.envMapCubeUVHeight),S.push(E.combine),S.push(E.vertexUvs),S.push(E.fogExp2),S.push(E.sizeAttenuation),S.push(E.morphTargetsCount),S.push(E.morphAttributeCount),S.push(E.numDirLights),S.push(E.numPointLights),S.push(E.numSpotLights),S.push(E.numHemiLights),S.push(E.numRectAreaLights),S.push(E.numDirLightShadows),S.push(E.numPointLightShadows),S.push(E.numSpotLightShadows),S.push(E.shadowMapType),S.push(E.toneMapping),S.push(E.numClippingPlanes),S.push(E.numClipIntersection),S.push(E.depthPacking)}function g(S,E){a.disableAll(),E.isWebGL2&&a.enable(0),E.supportsVertexTextures&&a.enable(1),E.instancing&&a.enable(2),E.instancingColor&&a.enable(3),E.map&&a.enable(4),E.matcap&&a.enable(5),E.envMap&&a.enable(6),E.lightMap&&a.enable(7),E.aoMap&&a.enable(8),E.emissiveMap&&a.enable(9),E.bumpMap&&a.enable(10),E.normalMap&&a.enable(11),E.objectSpaceNormalMap&&a.enable(12),E.tangentSpaceNormalMap&&a.enable(13),E.clearcoat&&a.enable(14),E.clearcoatMap&&a.enable(15),E.clearcoatRoughnessMap&&a.enable(16),E.clearcoatNormalMap&&a.enable(17),E.iridescence&&a.enable(18),E.iridescenceMap&&a.enable(19),E.iridescenceThicknessMap&&a.enable(20),E.displacementMap&&a.enable(21),E.specularMap&&a.enable(22),E.roughnessMap&&a.enable(23),E.metalnessMap&&a.enable(24),E.gradientMap&&a.enable(25),E.alphaMap&&a.enable(26),E.alphaTest&&a.enable(27),E.vertexColors&&a.enable(28),E.vertexAlphas&&a.enable(29),E.vertexUvs&&a.enable(30),E.vertexTangents&&a.enable(31),E.uvsVertexOnly&&a.enable(32),E.fog&&a.enable(33),S.push(a.mask),a.disableAll(),E.useFog&&a.enable(0),E.flatShading&&a.enable(1),E.logarithmicDepthBuffer&&a.enable(2),E.skinning&&a.enable(3),E.morphTargets&&a.enable(4),E.morphNormals&&a.enable(5),E.morphColors&&a.enable(6),E.premultipliedAlpha&&a.enable(7),E.shadowMapEnabled&&a.enable(8),E.physicallyCorrectLights&&a.enable(9),E.doubleSided&&a.enable(10),E.flipSided&&a.enable(11),E.useDepthPacking&&a.enable(12),E.dithering&&a.enable(13),E.specularIntensityMap&&a.enable(14),E.specularColorMap&&a.enable(15),E.transmission&&a.enable(16),E.transmissionMap&&a.enable(17),E.thicknessMap&&a.enable(18),E.sheen&&a.enable(19),E.sheenColorMap&&a.enable(20),E.sheenRoughnessMap&&a.enable(21),E.decodeVideoTexture&&a.enable(22),E.opaque&&a.enable(23),S.push(a.mask)}function w(S){const E=p[S.type];let R;if(E){const I=ii[E];R=B9.clone(I.uniforms)}else R=S.uniforms;return R}function y(S,E){let R;for(let I=0,$=c.length;I<$;I++){const W=c[I];if(W.cacheKey===E){R=W,++R.usedTimes;break}}return R===void 0&&(R=new Yw(n,E,S,s),c.push(R)),R}function M(S){if(--S.usedTimes===0){const E=c.indexOf(S);c[E]=c[c.length-1],c.pop(),S.destroy()}}function b(S){l.remove(S)}function _(){l.dispose()}return{getParameters:x,getProgramCacheKey:m,getUniforms:w,acquireProgram:y,releaseProgram:M,releaseShaderCache:b,programs:c,dispose:_}}function e8(){let n=new WeakMap;function e(s){let o=n.get(s);return o===void 0&&(o={},n.set(s,o)),o}function t(s){n.delete(s)}function i(s,o,a){n.get(s)[o]=a}function r(){n=new WeakMap}return{get:e,remove:t,update:i,dispose:r}}function t8(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.material.id!==e.material.id?n.material.id-e.material.id:n.z!==e.z?n.z-e.z:n.id-e.id}function ix(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.z!==e.z?e.z-n.z:n.id-e.id}function rx(){const n=[];let e=0;const t=[],i=[],r=[];function s(){e=0,t.length=0,i.length=0,r.length=0}function o(u,f,h,p,x,m){let v=n[e];return v===void 0?(v={id:u.id,object:u,geometry:f,material:h,groupOrder:p,renderOrder:u.renderOrder,z:x,group:m},n[e]=v):(v.id=u.id,v.object=u,v.geometry=f,v.material=h,v.groupOrder=p,v.renderOrder=u.renderOrder,v.z=x,v.group=m),e++,v}function a(u,f,h,p,x,m){const v=o(u,f,h,p,x,m);h.transmission>0?i.push(v):h.transparent===!0?r.push(v):t.push(v)}function l(u,f,h,p,x,m){const v=o(u,f,h,p,x,m);h.transmission>0?i.unshift(v):h.transparent===!0?r.unshift(v):t.unshift(v)}function c(u,f){t.length>1&&t.sort(u||t8),i.length>1&&i.sort(f||ix),r.length>1&&r.sort(f||ix)}function d(){for(let u=e,f=n.length;u<f;u++){const h=n[u];if(h.id===null)break;h.id=null,h.object=null,h.geometry=null,h.material=null,h.group=null}}return{opaque:t,transmissive:i,transparent:r,init:s,push:a,unshift:l,finish:d,sort:c}}function n8(){let n=new WeakMap;function e(i,r){let s;return n.has(i)===!1?(s=new rx,n.set(i,[s])):r>=n.get(i).length?(s=new rx,n.get(i).push(s)):s=n.get(i)[r],s}function t(){n=new WeakMap}return{get:e,dispose:t}}function i8(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new ce,color:new lt};break;case"SpotLight":t={position:new ce,direction:new ce,color:new lt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new ce,color:new lt,distance:0,decay:0};break;case"HemisphereLight":t={direction:new ce,skyColor:new lt,groundColor:new lt};break;case"RectAreaLight":t={color:new lt,position:new ce,halfWidth:new ce,halfHeight:new ce};break}return n[e.id]=t,t}}}function r8(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new xt};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new xt};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new xt,shadowCameraNear:1,shadowCameraFar:1e3};break}return n[e.id]=t,t}}}let s8=0;function o8(n,e){return(e.castShadow?1:0)-(n.castShadow?1:0)}function a8(n,e){const t=new i8,i=r8(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let d=0;d<9;d++)r.probe.push(new ce);const s=new ce,o=new sn,a=new sn;function l(d,u){let f=0,h=0,p=0;for(let E=0;E<9;E++)r.probe[E].set(0,0,0);let x=0,m=0,v=0,g=0,w=0,y=0,M=0,b=0;d.sort(o8);const _=u!==!0?Math.PI:1;for(let E=0,R=d.length;E<R;E++){const I=d[E],$=I.color,W=I.intensity,L=I.distance,z=I.shadow&&I.shadow.map?I.shadow.map.texture:null;if(I.isAmbientLight)f+=$.r*W*_,h+=$.g*W*_,p+=$.b*W*_;else if(I.isLightProbe)for(let U=0;U<9;U++)r.probe[U].addScaledVector(I.sh.coefficients[U],W);else if(I.isDirectionalLight){const U=t.get(I);if(U.color.copy(I.color).multiplyScalar(I.intensity*_),I.castShadow){const X=I.shadow,K=i.get(I);K.shadowBias=X.bias,K.shadowNormalBias=X.normalBias,K.shadowRadius=X.radius,K.shadowMapSize=X.mapSize,r.directionalShadow[x]=K,r.directionalShadowMap[x]=z,r.directionalShadowMatrix[x]=I.shadow.matrix,y++}r.directional[x]=U,x++}else if(I.isSpotLight){const U=t.get(I);if(U.position.setFromMatrixPosition(I.matrixWorld),U.color.copy($).multiplyScalar(W*_),U.distance=L,U.coneCos=Math.cos(I.angle),U.penumbraCos=Math.cos(I.angle*(1-I.penumbra)),U.decay=I.decay,I.castShadow){const X=I.shadow,K=i.get(I);K.shadowBias=X.bias,K.shadowNormalBias=X.normalBias,K.shadowRadius=X.radius,K.shadowMapSize=X.mapSize,r.spotShadow[v]=K,r.spotShadowMap[v]=z,r.spotShadowMatrix[v]=I.shadow.matrix,b++}r.spot[v]=U,v++}else if(I.isRectAreaLight){const U=t.get(I);U.color.copy($).multiplyScalar(W),U.halfWidth.set(I.width*.5,0,0),U.halfHeight.set(0,I.height*.5,0),r.rectArea[g]=U,g++}else if(I.isPointLight){const U=t.get(I);if(U.color.copy(I.color).multiplyScalar(I.intensity*_),U.distance=I.distance,U.decay=I.decay,I.castShadow){const X=I.shadow,K=i.get(I);K.shadowBias=X.bias,K.shadowNormalBias=X.normalBias,K.shadowRadius=X.radius,K.shadowMapSize=X.mapSize,K.shadowCameraNear=X.camera.near,K.shadowCameraFar=X.camera.far,r.pointShadow[m]=K,r.pointShadowMap[m]=z,r.pointShadowMatrix[m]=I.shadow.matrix,M++}r.point[m]=U,m++}else if(I.isHemisphereLight){const U=t.get(I);U.skyColor.copy(I.color).multiplyScalar(W*_),U.groundColor.copy(I.groundColor).multiplyScalar(W*_),r.hemi[w]=U,w++}}g>0&&(e.isWebGL2||n.has("OES_texture_float_linear")===!0?(r.rectAreaLTC1=Oe.LTC_FLOAT_1,r.rectAreaLTC2=Oe.LTC_FLOAT_2):n.has("OES_texture_half_float_linear")===!0?(r.rectAreaLTC1=Oe.LTC_HALF_1,r.rectAreaLTC2=Oe.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=f,r.ambient[1]=h,r.ambient[2]=p;const S=r.hash;(S.directionalLength!==x||S.pointLength!==m||S.spotLength!==v||S.rectAreaLength!==g||S.hemiLength!==w||S.numDirectionalShadows!==y||S.numPointShadows!==M||S.numSpotShadows!==b)&&(r.directional.length=x,r.spot.length=v,r.rectArea.length=g,r.point.length=m,r.hemi.length=w,r.directionalShadow.length=y,r.directionalShadowMap.length=y,r.pointShadow.length=M,r.pointShadowMap.length=M,r.spotShadow.length=b,r.spotShadowMap.length=b,r.directionalShadowMatrix.length=y,r.pointShadowMatrix.length=M,r.spotShadowMatrix.length=b,S.directionalLength=x,S.pointLength=m,S.spotLength=v,S.rectAreaLength=g,S.hemiLength=w,S.numDirectionalShadows=y,S.numPointShadows=M,S.numSpotShadows=b,r.version=s8++)}function c(d,u){let f=0,h=0,p=0,x=0,m=0;const v=u.matrixWorldInverse;for(let g=0,w=d.length;g<w;g++){const y=d[g];if(y.isDirectionalLight){const M=r.directional[f];M.direction.setFromMatrixPosition(y.matrixWorld),s.setFromMatrixPosition(y.target.matrixWorld),M.direction.sub(s),M.direction.transformDirection(v),f++}else if(y.isSpotLight){const M=r.spot[p];M.position.setFromMatrixPosition(y.matrixWorld),M.position.applyMatrix4(v),M.direction.setFromMatrixPosition(y.matrixWorld),s.setFromMatrixPosition(y.target.matrixWorld),M.direction.sub(s),M.direction.transformDirection(v),p++}else if(y.isRectAreaLight){const M=r.rectArea[x];M.position.setFromMatrixPosition(y.matrixWorld),M.position.applyMatrix4(v),a.identity(),o.copy(y.matrixWorld),o.premultiply(v),a.extractRotation(o),M.halfWidth.set(y.width*.5,0,0),M.halfHeight.set(0,y.height*.5,0),M.halfWidth.applyMatrix4(a),M.halfHeight.applyMatrix4(a),x++}else if(y.isPointLight){const M=r.point[h];M.position.setFromMatrixPosition(y.matrixWorld),M.position.applyMatrix4(v),h++}else if(y.isHemisphereLight){const M=r.hemi[m];M.direction.setFromMatrixPosition(y.matrixWorld),M.direction.transformDirection(v),m++}}}return{setup:l,setupView:c,state:r}}function sx(n,e){const t=new a8(n,e),i=[],r=[];function s(){i.length=0,r.length=0}function o(u){i.push(u)}function a(u){r.push(u)}function l(u){t.setup(i,u)}function c(u){t.setupView(i,u)}return{init:s,state:{lightsArray:i,shadowsArray:r,lights:t},setupLights:l,setupLightsView:c,pushLight:o,pushShadow:a}}function c8(n,e){let t=new WeakMap;function i(s,o=0){let a;return t.has(s)===!1?(a=new sx(n,e),t.set(s,[a])):o>=t.get(s).length?(a=new sx(n,e),t.get(s).push(a)):a=t.get(s)[o],a}function r(){t=new WeakMap}return{get:i,dispose:r}}let l8=class extends pc{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=b9,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}},d8=class extends pc{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new ce,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}};const u8=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,f8=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function h8(n,e,t){let i=new sv;const r=new xt,s=new xt,o=new Ht,a=new l8({depthPacking:_9}),l=new d8,c={},d=t.maxTextureSize,u={0:Wn,1:Ra,2:Mo},f=new as({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new xt},radius:{value:4}},vertexShader:u8,fragmentShader:f8}),h=f.clone();h.defines.HORIZONTAL_PASS=1;const p=new mc;p.setAttribute("position",new ci(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const x=new Ii(p,f),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=q3,this.render=function(y,M,b){if(m.enabled===!1||m.autoUpdate===!1&&m.needsUpdate===!1||y.length===0)return;const _=n.getRenderTarget(),S=n.getActiveCubeFace(),E=n.getActiveMipmapLevel(),R=n.state;R.setBlending(lr),R.buffers.color.setClear(1,1,1,1),R.buffers.depth.setTest(!0),R.setScissorTest(!1);for(let I=0,$=y.length;I<$;I++){const W=y[I],L=W.shadow;if(L===void 0){console.warn("THREE.WebGLShadowMap:",W,"has no shadow.");continue}if(L.autoUpdate===!1&&L.needsUpdate===!1)continue;r.copy(L.mapSize);const z=L.getFrameExtents();if(r.multiply(z),s.copy(L.mapSize),(r.x>d||r.y>d)&&(r.x>d&&(s.x=Math.floor(d/z.x),r.x=s.x*z.x,L.mapSize.x=s.x),r.y>d&&(s.y=Math.floor(d/z.y),r.y=s.y*z.y,L.mapSize.y=s.y)),L.map===null){const X=this.type!==ba?{minFilter:rn,magFilter:rn}:{};L.map=new os(r.x,r.y,X),L.map.texture.name=W.name+".shadowMap",L.camera.updateProjectionMatrix()}n.setRenderTarget(L.map),n.clear();const U=L.getViewportCount();for(let X=0;X<U;X++){const K=L.getViewport(X);o.set(s.x*K.x,s.y*K.y,s.x*K.z,s.y*K.w),R.viewport(o),L.updateMatrices(W,X),i=L.getFrustum(),w(M,b,L.camera,W,this.type)}L.isPointLightShadow!==!0&&this.type===ba&&v(L,b),L.needsUpdate=!1}m.needsUpdate=!1,n.setRenderTarget(_,S,E)};function v(y,M){const b=e.update(x);f.defines.VSM_SAMPLES!==y.blurSamples&&(f.defines.VSM_SAMPLES=y.blurSamples,h.defines.VSM_SAMPLES=y.blurSamples,f.needsUpdate=!0,h.needsUpdate=!0),y.mapPass===null&&(y.mapPass=new os(r.x,r.y)),f.uniforms.shadow_pass.value=y.map.texture,f.uniforms.resolution.value=y.mapSize,f.uniforms.radius.value=y.radius,n.setRenderTarget(y.mapPass),n.clear(),n.renderBufferDirect(M,null,b,f,x,null),h.uniforms.shadow_pass.value=y.mapPass.texture,h.uniforms.resolution.value=y.mapSize,h.uniforms.radius.value=y.radius,n.setRenderTarget(y.map),n.clear(),n.renderBufferDirect(M,null,b,h,x,null)}function g(y,M,b,_,S,E){let R=null;const I=b.isPointLight===!0?y.customDistanceMaterial:y.customDepthMaterial;if(I!==void 0?R=I:R=b.isPointLight===!0?l:a,n.localClippingEnabled&&M.clipShadows===!0&&Array.isArray(M.clippingPlanes)&&M.clippingPlanes.length!==0||M.displacementMap&&M.displacementScale!==0||M.alphaMap&&M.alphaTest>0){const $=R.uuid,W=M.uuid;let L=c[$];L===void 0&&(L={},c[$]=L);let z=L[W];z===void 0&&(z=R.clone(),L[W]=z),R=z}return R.visible=M.visible,R.wireframe=M.wireframe,E===ba?R.side=M.shadowSide!==null?M.shadowSide:M.side:R.side=M.shadowSide!==null?M.shadowSide:u[M.side],R.alphaMap=M.alphaMap,R.alphaTest=M.alphaTest,R.clipShadows=M.clipShadows,R.clippingPlanes=M.clippingPlanes,R.clipIntersection=M.clipIntersection,R.displacementMap=M.displacementMap,R.displacementScale=M.displacementScale,R.displacementBias=M.displacementBias,R.wireframeLinewidth=M.wireframeLinewidth,R.linewidth=M.linewidth,b.isPointLight===!0&&R.isMeshDistanceMaterial===!0&&(R.referencePosition.setFromMatrixPosition(b.matrixWorld),R.nearDistance=_,R.farDistance=S),R}function w(y,M,b,_,S){if(y.visible===!1)return;if(y.layers.test(M.layers)&&(y.isMesh||y.isLine||y.isPoints)&&(y.castShadow||y.receiveShadow&&S===ba)&&(!y.frustumCulled||i.intersectsObject(y))){y.modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,y.matrixWorld);const I=e.update(y),$=y.material;if(Array.isArray($)){const W=I.groups;for(let L=0,z=W.length;L<z;L++){const U=W[L],X=$[U.materialIndex];if(X&&X.visible){const K=g(y,X,_,b.near,b.far,S);n.renderBufferDirect(b,null,I,K,y,U)}}}else if($.visible){const W=g(y,$,_,b.near,b.far,S);n.renderBufferDirect(b,null,I,W,y,null)}}const R=y.children;for(let I=0,$=R.length;I<$;I++)w(R[I],M,b,_,S)}}function p8(n,e,t){const i=t.isWebGL2;function r(){let re=!1;const Be=new Ht;let ge=null;const Fe=new Ht(0,0,0,0);return{setMask:function(qe){ge!==qe&&!re&&(n.colorMask(qe,qe,qe,qe),ge=qe)},setLocked:function(qe){re=qe},setClear:function(qe,it,ot,ht,cn){cn===!0&&(qe*=ht,it*=ht,ot*=ht),Be.set(qe,it,ot,ht),Fe.equals(Be)===!1&&(n.clearColor(qe,it,ot,ht),Fe.copy(Be))},reset:function(){re=!1,ge=null,Fe.set(-1,0,0,0)}}}function s(){let re=!1,Be=null,ge=null,Fe=null;return{setTest:function(qe){qe?Se(2929):Me(2929)},setMask:function(qe){Be!==qe&&!re&&(n.depthMask(qe),Be=qe)},setFunc:function(qe){if(ge!==qe){if(qe)switch(qe){case Vb:n.depthFunc(512);break;case Wb:n.depthFunc(519);break;case $b:n.depthFunc(513);break;case Xh:n.depthFunc(515);break;case jb:n.depthFunc(514);break;case Xb:n.depthFunc(518);break;case Yb:n.depthFunc(516);break;case Zb:n.depthFunc(517);break;default:n.depthFunc(515)}else n.depthFunc(515);ge=qe}},setLocked:function(qe){re=qe},setClear:function(qe){Fe!==qe&&(n.clearDepth(qe),Fe=qe)},reset:function(){re=!1,Be=null,ge=null,Fe=null}}}function o(){let re=!1,Be=null,ge=null,Fe=null,qe=null,it=null,ot=null,ht=null,cn=null;return{setTest:function(pt){re||(pt?Se(2960):Me(2960))},setMask:function(pt){Be!==pt&&!re&&(n.stencilMask(pt),Be=pt)},setFunc:function(pt,N,de){(ge!==pt||Fe!==N||qe!==de)&&(n.stencilFunc(pt,N,de),ge=pt,Fe=N,qe=de)},setOp:function(pt,N,de){(it!==pt||ot!==N||ht!==de)&&(n.stencilOp(pt,N,de),it=pt,ot=N,ht=de)},setLocked:function(pt){re=pt},setClear:function(pt){cn!==pt&&(n.clearStencil(pt),cn=pt)},reset:function(){re=!1,Be=null,ge=null,Fe=null,qe=null,it=null,ot=null,ht=null,cn=null}}}const a=new r,l=new s,c=new o,d=new WeakMap,u=new WeakMap;let f={},h={},p=new WeakMap,x=[],m=null,v=!1,g=null,w=null,y=null,M=null,b=null,_=null,S=null,E=!1,R=null,I=null,$=null,W=null,L=null;const z=n.getParameter(35661);let U=!1,X=0;const K=n.getParameter(7938);K.indexOf("WebGL")!==-1?(X=parseFloat(/^WebGL (\d)/.exec(K)[1]),U=X>=1):K.indexOf("OpenGL ES")!==-1&&(X=parseFloat(/^OpenGL ES (\d)/.exec(K)[1]),U=X>=2);let j=null,ee={};const P=n.getParameter(3088),H=n.getParameter(2978),Y=new Ht().fromArray(P),Q=new Ht().fromArray(H);function F(re,Be,ge){const Fe=new Uint8Array(4),qe=n.createTexture();n.bindTexture(re,qe),n.texParameteri(re,10241,9728),n.texParameteri(re,10240,9728);for(let it=0;it<ge;it++)n.texImage2D(Be+it,0,6408,1,1,0,6408,5121,Fe);return qe}const oe={};oe[3553]=F(3553,3553,1),oe[34067]=F(34067,34069,6),a.setClear(0,0,0,1),l.setClear(1),c.setClear(0),Se(2929),l.setFunc(Xh),Ce(!1),O(Xp),Se(2884),Te(lr);function Se(re){f[re]!==!0&&(n.enable(re),f[re]=!0)}function Me(re){f[re]!==!1&&(n.disable(re),f[re]=!1)}function be(re,Be){return h[re]!==Be?(n.bindFramebuffer(re,Be),h[re]=Be,i&&(re===36009&&(h[36160]=Be),re===36160&&(h[36009]=Be)),!0):!1}function _e(re,Be){let ge=x,Fe=!1;if(re)if(ge=p.get(Be),ge===void 0&&(ge=[],p.set(Be,ge)),re.isWebGLMultipleRenderTargets){const qe=re.texture;if(ge.length!==qe.length||ge[0]!==36064){for(let it=0,ot=qe.length;it<ot;it++)ge[it]=36064+it;ge.length=qe.length,Fe=!0}}else ge[0]!==36064&&(ge[0]=36064,Fe=!0);else ge[0]!==1029&&(ge[0]=1029,Fe=!0);Fe&&(t.isWebGL2?n.drawBuffers(ge):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(ge))}function Ie(re){return m!==re?(n.useProgram(re),m=re,!0):!1}const fe={[fo]:32774,[Db]:32778,[Ob]:32779};if(i)fe[Kp]=32775,fe[Qp]=32776;else{const re=e.get("EXT_blend_minmax");re!==null&&(fe[Kp]=re.MIN_EXT,fe[Qp]=re.MAX_EXT)}const pe={[qb]:0,[zb]:1,[Fb]:768,[z3]:770,[Hb]:776,[Gb]:774,[Bb]:772,[Nb]:769,[F3]:771,[kb]:775,[Ub]:773};function Te(re,Be,ge,Fe,qe,it,ot,ht){if(re===lr){v===!0&&(Me(3042),v=!1);return}if(v===!1&&(Se(3042),v=!0),re!==Ib){if(re!==g||ht!==E){if((w!==fo||b!==fo)&&(n.blendEquation(32774),w=fo,b=fo),ht)switch(re){case go:n.blendFuncSeparate(1,771,1,771);break;case Yp:n.blendFunc(1,1);break;case Zp:n.blendFuncSeparate(0,769,0,1);break;case Jp:n.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",re);break}else switch(re){case go:n.blendFuncSeparate(770,771,1,771);break;case Yp:n.blendFunc(770,1);break;case Zp:n.blendFuncSeparate(0,769,0,1);break;case Jp:n.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",re);break}y=null,M=null,_=null,S=null,g=re,E=ht}return}qe=qe||Be,it=it||ge,ot=ot||Fe,(Be!==w||qe!==b)&&(n.blendEquationSeparate(fe[Be],fe[qe]),w=Be,b=qe),(ge!==y||Fe!==M||it!==_||ot!==S)&&(n.blendFuncSeparate(pe[ge],pe[Fe],pe[it],pe[ot]),y=ge,M=Fe,_=it,S=ot),g=re,E=null}function ze(re,Be){re.side===Mo?Me(2884):Se(2884);let ge=re.side===Wn;Be&&(ge=!ge),Ce(ge),re.blending===go&&re.transparent===!1?Te(lr):Te(re.blending,re.blendEquation,re.blendSrc,re.blendDst,re.blendEquationAlpha,re.blendSrcAlpha,re.blendDstAlpha,re.premultipliedAlpha),l.setFunc(re.depthFunc),l.setTest(re.depthTest),l.setMask(re.depthWrite),a.setMask(re.colorWrite);const Fe=re.stencilWrite;c.setTest(Fe),Fe&&(c.setMask(re.stencilWriteMask),c.setFunc(re.stencilFunc,re.stencilRef,re.stencilFuncMask),c.setOp(re.stencilFail,re.stencilZFail,re.stencilZPass)),me(re.polygonOffset,re.polygonOffsetFactor,re.polygonOffsetUnits),re.alphaToCoverage===!0?Se(32926):Me(32926)}function Ce(re){R!==re&&(re?n.frontFace(2304):n.frontFace(2305),R=re)}function O(re){re!==Lb?(Se(2884),re!==I&&(re===Xp?n.cullFace(1029):re===Cb?n.cullFace(1028):n.cullFace(1032))):Me(2884),I=re}function D(re){re!==$&&(U&&n.lineWidth(re),$=re)}function me(re,Be,ge){re?(Se(32823),(W!==Be||L!==ge)&&(n.polygonOffset(Be,ge),W=Be,L=ge)):Me(32823)}function ye(re){re?Se(3089):Me(3089)}function Z(re){re===void 0&&(re=33984+z-1),j!==re&&(n.activeTexture(re),j=re)}function C(re,Be){j===null&&Z();let ge=ee[j];ge===void 0&&(ge={type:void 0,texture:void 0},ee[j]=ge),(ge.type!==re||ge.texture!==Be)&&(n.bindTexture(re,Be||oe[re]),ge.type=re,ge.texture=Be)}function A(){const re=ee[j];re!==void 0&&re.type!==void 0&&(n.bindTexture(re.type,null),re.type=void 0,re.texture=void 0)}function ie(){try{n.compressedTexImage2D.apply(n,arguments)}catch(re){console.error("THREE.WebGLState:",re)}}function se(){try{n.texSubImage2D.apply(n,arguments)}catch(re){console.error("THREE.WebGLState:",re)}}function le(){try{n.texSubImage3D.apply(n,arguments)}catch(re){console.error("THREE.WebGLState:",re)}}function xe(){try{n.compressedTexSubImage2D.apply(n,arguments)}catch(re){console.error("THREE.WebGLState:",re)}}function Re(){try{n.texStorage2D.apply(n,arguments)}catch(re){console.error("THREE.WebGLState:",re)}}function ne(){try{n.texStorage3D.apply(n,arguments)}catch(re){console.error("THREE.WebGLState:",re)}}function we(){try{n.texImage2D.apply(n,arguments)}catch(re){console.error("THREE.WebGLState:",re)}}function Le(){try{n.texImage3D.apply(n,arguments)}catch(re){console.error("THREE.WebGLState:",re)}}function Ne(re){Y.equals(re)===!1&&(n.scissor(re.x,re.y,re.z,re.w),Y.copy(re))}function Ge(re){Q.equals(re)===!1&&(n.viewport(re.x,re.y,re.z,re.w),Q.copy(re))}function Ye(re,Be){let ge=u.get(Be);ge===void 0&&(ge=new WeakMap,u.set(Be,ge));let Fe=ge.get(re);Fe===void 0&&(Fe=n.getUniformBlockIndex(Be,re.name),ge.set(re,Fe))}function st(re,Be){const Fe=u.get(Be).get(re);d.get(re)!==Fe&&(n.uniformBlockBinding(Be,Fe,re.__bindingPointIndex),d.set(re,Fe))}function bt(){n.disable(3042),n.disable(2884),n.disable(2929),n.disable(32823),n.disable(3089),n.disable(2960),n.disable(32926),n.blendEquation(32774),n.blendFunc(1,0),n.blendFuncSeparate(1,0,1,0),n.colorMask(!0,!0,!0,!0),n.clearColor(0,0,0,0),n.depthMask(!0),n.depthFunc(513),n.clearDepth(1),n.stencilMask(4294967295),n.stencilFunc(519,0,4294967295),n.stencilOp(7680,7680,7680),n.clearStencil(0),n.cullFace(1029),n.frontFace(2305),n.polygonOffset(0,0),n.activeTexture(33984),n.bindFramebuffer(36160,null),i===!0&&(n.bindFramebuffer(36009,null),n.bindFramebuffer(36008,null)),n.useProgram(null),n.lineWidth(1),n.scissor(0,0,n.canvas.width,n.canvas.height),n.viewport(0,0,n.canvas.width,n.canvas.height),f={},j=null,ee={},h={},p=new WeakMap,x=[],m=null,v=!1,g=null,w=null,y=null,M=null,b=null,_=null,S=null,E=!1,R=null,I=null,$=null,W=null,L=null,Y.set(0,0,n.canvas.width,n.canvas.height),Q.set(0,0,n.canvas.width,n.canvas.height),a.reset(),l.reset(),c.reset()}return{buffers:{color:a,depth:l,stencil:c},enable:Se,disable:Me,bindFramebuffer:be,drawBuffers:_e,useProgram:Ie,setBlending:Te,setMaterial:ze,setFlipSided:Ce,setCullFace:O,setLineWidth:D,setPolygonOffset:me,setScissorTest:ye,activeTexture:Z,bindTexture:C,unbindTexture:A,compressedTexImage2D:ie,texImage2D:we,texImage3D:Le,updateUBOMapping:Ye,uniformBlockBinding:st,texStorage2D:Re,texStorage3D:ne,texSubImage2D:se,texSubImage3D:le,compressedTexSubImage2D:xe,scissor:Ne,viewport:Ge,reset:bt}}function m8(n,e,t,i,r,s,o){const a=r.isWebGL2,l=r.maxTextures,c=r.maxCubemapSize,d=r.maxTextureSize,u=r.maxSamples,f=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,h=/OculusBrowser/g.test(navigator.userAgent),p=new WeakMap;let x;const m=new WeakMap;let v=!1;try{v=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function g(C,A){return v?new OffscreenCanvas(C,A):Wl("canvas")}function w(C,A,ie,se){let le=1;if((C.width>se||C.height>se)&&(le=se/Math.max(C.width,C.height)),le<1||A===!0)if(typeof HTMLImageElement<"u"&&C instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&C instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&C instanceof ImageBitmap){const xe=A?e0:Math.floor,Re=xe(le*C.width),ne=xe(le*C.height);x===void 0&&(x=g(Re,ne));const we=ie?g(Re,ne):x;return we.width=Re,we.height=ne,we.getContext("2d").drawImage(C,0,0,Re,ne),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+C.width+"x"+C.height+") to ("+Re+"x"+ne+")."),we}else return"data"in C&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+C.width+"x"+C.height+")."),C;return C}function y(C){return Tm(C.width)&&Tm(C.height)}function M(C){return a?!1:C.wrapS!==Hn||C.wrapT!==Hn||C.minFilter!==rn&&C.minFilter!==Ln}function b(C,A){return C.generateMipmaps&&A&&C.minFilter!==rn&&C.minFilter!==Ln}function _(C){n.generateMipmap(C)}function S(C,A,ie,se,le=!1){if(a===!1)return A;if(C!==null){if(n[C]!==void 0)return n[C];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+C+"'")}let xe=A;return A===6403&&(ie===5126&&(xe=33326),ie===5131&&(xe=33325),ie===5121&&(xe=33321)),A===33319&&(ie===5126&&(xe=33328),ie===5131&&(xe=33327),ie===5121&&(xe=33323)),A===6408&&(ie===5126&&(xe=34836),ie===5131&&(xe=34842),ie===5121&&(xe=se===Tt&&le===!1?35907:32856),ie===32819&&(xe=32854),ie===32820&&(xe=32855)),(xe===33325||xe===33326||xe===33327||xe===33328||xe===34842||xe===34836)&&e.get("EXT_color_buffer_float"),xe}function E(C,A,ie){return b(C,ie)===!0||C.isFramebufferTexture&&C.minFilter!==rn&&C.minFilter!==Ln?Math.log2(Math.max(A.width,A.height))+1:C.mipmaps!==void 0&&C.mipmaps.length>0?C.mipmaps.length:C.isCompressedTexture&&Array.isArray(C.image)?A.mipmaps.length:1}function R(C){return C===rn||C===em||C===tm?9728:9729}function I(C){const A=C.target;A.removeEventListener("dispose",I),W(A),A.isVideoTexture&&p.delete(A)}function $(C){const A=C.target;A.removeEventListener("dispose",$),z(A)}function W(C){const A=i.get(C);if(A.__webglInit===void 0)return;const ie=C.source,se=m.get(ie);if(se){const le=se[A.__cacheKey];le.usedTimes--,le.usedTimes===0&&L(C),Object.keys(se).length===0&&m.delete(ie)}i.remove(C)}function L(C){const A=i.get(C);n.deleteTexture(A.__webglTexture);const ie=C.source,se=m.get(ie);delete se[A.__cacheKey],o.memory.textures--}function z(C){const A=C.texture,ie=i.get(C),se=i.get(A);if(se.__webglTexture!==void 0&&(n.deleteTexture(se.__webglTexture),o.memory.textures--),C.depthTexture&&C.depthTexture.dispose(),C.isWebGLCubeRenderTarget)for(let le=0;le<6;le++)n.deleteFramebuffer(ie.__webglFramebuffer[le]),ie.__webglDepthbuffer&&n.deleteRenderbuffer(ie.__webglDepthbuffer[le]);else{if(n.deleteFramebuffer(ie.__webglFramebuffer),ie.__webglDepthbuffer&&n.deleteRenderbuffer(ie.__webglDepthbuffer),ie.__webglMultisampledFramebuffer&&n.deleteFramebuffer(ie.__webglMultisampledFramebuffer),ie.__webglColorRenderbuffer)for(let le=0;le<ie.__webglColorRenderbuffer.length;le++)ie.__webglColorRenderbuffer[le]&&n.deleteRenderbuffer(ie.__webglColorRenderbuffer[le]);ie.__webglDepthRenderbuffer&&n.deleteRenderbuffer(ie.__webglDepthRenderbuffer)}if(C.isWebGLMultipleRenderTargets)for(let le=0,xe=A.length;le<xe;le++){const Re=i.get(A[le]);Re.__webglTexture&&(n.deleteTexture(Re.__webglTexture),o.memory.textures--),i.remove(A[le])}i.remove(A),i.remove(C)}let U=0;function X(){U=0}function K(){const C=U;return C>=l&&console.warn("THREE.WebGLTextures: Trying to use "+C+" texture units while this GPU supports only "+l),U+=1,C}function j(C){const A=[];return A.push(C.wrapS),A.push(C.wrapT),A.push(C.magFilter),A.push(C.minFilter),A.push(C.anisotropy),A.push(C.internalFormat),A.push(C.format),A.push(C.type),A.push(C.generateMipmaps),A.push(C.premultiplyAlpha),A.push(C.flipY),A.push(C.unpackAlignment),A.push(C.encoding),A.join()}function ee(C,A){const ie=i.get(C);if(C.isVideoTexture&&ye(C),C.isRenderTargetTexture===!1&&C.version>0&&ie.__version!==C.version){const se=C.image;if(se===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(se.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Me(ie,C,A);return}}t.activeTexture(33984+A),t.bindTexture(3553,ie.__webglTexture)}function P(C,A){const ie=i.get(C);if(C.version>0&&ie.__version!==C.version){Me(ie,C,A);return}t.activeTexture(33984+A),t.bindTexture(35866,ie.__webglTexture)}function H(C,A){const ie=i.get(C);if(C.version>0&&ie.__version!==C.version){Me(ie,C,A);return}t.activeTexture(33984+A),t.bindTexture(32879,ie.__webglTexture)}function Y(C,A){const ie=i.get(C);if(C.version>0&&ie.__version!==C.version){be(ie,C,A);return}t.activeTexture(33984+A),t.bindTexture(34067,ie.__webglTexture)}const Q={[Jh]:10497,[Hn]:33071,[Kh]:33648},F={[rn]:9728,[em]:9984,[tm]:9986,[Ln]:9729,[r9]:9985,[Id]:9987};function oe(C,A,ie){if(ie?(n.texParameteri(C,10242,Q[A.wrapS]),n.texParameteri(C,10243,Q[A.wrapT]),(C===32879||C===35866)&&n.texParameteri(C,32882,Q[A.wrapR]),n.texParameteri(C,10240,F[A.magFilter]),n.texParameteri(C,10241,F[A.minFilter])):(n.texParameteri(C,10242,33071),n.texParameteri(C,10243,33071),(C===32879||C===35866)&&n.texParameteri(C,32882,33071),(A.wrapS!==Hn||A.wrapT!==Hn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),n.texParameteri(C,10240,R(A.magFilter)),n.texParameteri(C,10241,R(A.minFilter)),A.minFilter!==rn&&A.minFilter!==Ln&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const se=e.get("EXT_texture_filter_anisotropic");if(A.type===$r&&e.has("OES_texture_float_linear")===!1||a===!1&&A.type===Pa&&e.has("OES_texture_half_float_linear")===!1)return;(A.anisotropy>1||i.get(A).__currentAnisotropy)&&(n.texParameterf(C,se.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(A.anisotropy,r.getMaxAnisotropy())),i.get(A).__currentAnisotropy=A.anisotropy)}}function Se(C,A){let ie=!1;C.__webglInit===void 0&&(C.__webglInit=!0,A.addEventListener("dispose",I));const se=A.source;let le=m.get(se);le===void 0&&(le={},m.set(se,le));const xe=j(A);if(xe!==C.__cacheKey){le[xe]===void 0&&(le[xe]={texture:n.createTexture(),usedTimes:0},o.memory.textures++,ie=!0),le[xe].usedTimes++;const Re=le[C.__cacheKey];Re!==void 0&&(le[C.__cacheKey].usedTimes--,Re.usedTimes===0&&L(A)),C.__cacheKey=xe,C.__webglTexture=le[xe].texture}return ie}function Me(C,A,ie){let se=3553;A.isDataArrayTexture&&(se=35866),A.isData3DTexture&&(se=32879);const le=Se(C,A),xe=A.source;if(t.activeTexture(33984+ie),t.bindTexture(se,C.__webglTexture),xe.version!==xe.__currentVersion||le===!0){n.pixelStorei(37440,A.flipY),n.pixelStorei(37441,A.premultiplyAlpha),n.pixelStorei(3317,A.unpackAlignment),n.pixelStorei(37443,0);const Re=M(A)&&y(A.image)===!1;let ne=w(A.image,Re,!1,d);ne=Z(A,ne);const we=y(ne)||a,Le=s.convert(A.format,A.encoding);let Ne=s.convert(A.type),Ge=S(A.internalFormat,Le,Ne,A.encoding,A.isVideoTexture);oe(se,A,we);let Ye;const st=A.mipmaps,bt=a&&A.isVideoTexture!==!0,re=xe.__currentVersion===void 0||le===!0,Be=E(A,ne,we);if(A.isDepthTexture)Ge=6402,a?A.type===$r?Ge=36012:A.type===Wr?Ge=33190:A.type===vo?Ge=35056:Ge=33189:A.type===$r&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),A.format===Jr&&Ge===6402&&A.type!==B3&&A.type!==Wr&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),A.type=Wr,Ne=s.convert(A.type)),A.format===To&&Ge===6402&&(Ge=34041,A.type!==vo&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),A.type=vo,Ne=s.convert(A.type))),re&&(bt?t.texStorage2D(3553,1,Ge,ne.width,ne.height):t.texImage2D(3553,0,Ge,ne.width,ne.height,0,Le,Ne,null));else if(A.isDataTexture)if(st.length>0&&we){bt&&re&&t.texStorage2D(3553,Be,Ge,st[0].width,st[0].height);for(let ge=0,Fe=st.length;ge<Fe;ge++)Ye=st[ge],bt?t.texSubImage2D(3553,ge,0,0,Ye.width,Ye.height,Le,Ne,Ye.data):t.texImage2D(3553,ge,Ge,Ye.width,Ye.height,0,Le,Ne,Ye.data);A.generateMipmaps=!1}else bt?(re&&t.texStorage2D(3553,Be,Ge,ne.width,ne.height),t.texSubImage2D(3553,0,0,0,ne.width,ne.height,Le,Ne,ne.data)):t.texImage2D(3553,0,Ge,ne.width,ne.height,0,Le,Ne,ne.data);else if(A.isCompressedTexture){bt&&re&&t.texStorage2D(3553,Be,Ge,st[0].width,st[0].height);for(let ge=0,Fe=st.length;ge<Fe;ge++)Ye=st[ge],A.format!==si?Le!==null?bt?t.compressedTexSubImage2D(3553,ge,0,0,Ye.width,Ye.height,Le,Ye.data):t.compressedTexImage2D(3553,ge,Ge,Ye.width,Ye.height,0,Ye.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):bt?t.texSubImage2D(3553,ge,0,0,Ye.width,Ye.height,Le,Ne,Ye.data):t.texImage2D(3553,ge,Ge,Ye.width,Ye.height,0,Le,Ne,Ye.data)}else if(A.isDataArrayTexture)bt?(re&&t.texStorage3D(35866,Be,Ge,ne.width,ne.height,ne.depth),t.texSubImage3D(35866,0,0,0,0,ne.width,ne.height,ne.depth,Le,Ne,ne.data)):t.texImage3D(35866,0,Ge,ne.width,ne.height,ne.depth,0,Le,Ne,ne.data);else if(A.isData3DTexture)bt?(re&&t.texStorage3D(32879,Be,Ge,ne.width,ne.height,ne.depth),t.texSubImage3D(32879,0,0,0,0,ne.width,ne.height,ne.depth,Le,Ne,ne.data)):t.texImage3D(32879,0,Ge,ne.width,ne.height,ne.depth,0,Le,Ne,ne.data);else if(A.isFramebufferTexture){if(re)if(bt)t.texStorage2D(3553,Be,Ge,ne.width,ne.height);else{let ge=ne.width,Fe=ne.height;for(let qe=0;qe<Be;qe++)t.texImage2D(3553,qe,Ge,ge,Fe,0,Le,Ne,null),ge>>=1,Fe>>=1}}else if(st.length>0&&we){bt&&re&&t.texStorage2D(3553,Be,Ge,st[0].width,st[0].height);for(let ge=0,Fe=st.length;ge<Fe;ge++)Ye=st[ge],bt?t.texSubImage2D(3553,ge,0,0,Le,Ne,Ye):t.texImage2D(3553,ge,Ge,Le,Ne,Ye);A.generateMipmaps=!1}else bt?(re&&t.texStorage2D(3553,Be,Ge,ne.width,ne.height),t.texSubImage2D(3553,0,0,0,Le,Ne,ne)):t.texImage2D(3553,0,Ge,Le,Ne,ne);b(A,we)&&_(se),xe.__currentVersion=xe.version,A.onUpdate&&A.onUpdate(A)}C.__version=A.version}function be(C,A,ie){if(A.image.length!==6)return;const se=Se(C,A),le=A.source;if(t.activeTexture(33984+ie),t.bindTexture(34067,C.__webglTexture),le.version!==le.__currentVersion||se===!0){n.pixelStorei(37440,A.flipY),n.pixelStorei(37441,A.premultiplyAlpha),n.pixelStorei(3317,A.unpackAlignment),n.pixelStorei(37443,0);const xe=A.isCompressedTexture||A.image[0].isCompressedTexture,Re=A.image[0]&&A.image[0].isDataTexture,ne=[];for(let ge=0;ge<6;ge++)!xe&&!Re?ne[ge]=w(A.image[ge],!1,!0,c):ne[ge]=Re?A.image[ge].image:A.image[ge],ne[ge]=Z(A,ne[ge]);const we=ne[0],Le=y(we)||a,Ne=s.convert(A.format,A.encoding),Ge=s.convert(A.type),Ye=S(A.internalFormat,Ne,Ge,A.encoding),st=a&&A.isVideoTexture!==!0,bt=le.__currentVersion===void 0||se===!0;let re=E(A,we,Le);oe(34067,A,Le);let Be;if(xe){st&&bt&&t.texStorage2D(34067,re,Ye,we.width,we.height);for(let ge=0;ge<6;ge++){Be=ne[ge].mipmaps;for(let Fe=0;Fe<Be.length;Fe++){const qe=Be[Fe];A.format!==si?Ne!==null?st?t.compressedTexSubImage2D(34069+ge,Fe,0,0,qe.width,qe.height,Ne,qe.data):t.compressedTexImage2D(34069+ge,Fe,Ye,qe.width,qe.height,0,qe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):st?t.texSubImage2D(34069+ge,Fe,0,0,qe.width,qe.height,Ne,Ge,qe.data):t.texImage2D(34069+ge,Fe,Ye,qe.width,qe.height,0,Ne,Ge,qe.data)}}}else{Be=A.mipmaps,st&&bt&&(Be.length>0&&re++,t.texStorage2D(34067,re,Ye,ne[0].width,ne[0].height));for(let ge=0;ge<6;ge++)if(Re){st?t.texSubImage2D(34069+ge,0,0,0,ne[ge].width,ne[ge].height,Ne,Ge,ne[ge].data):t.texImage2D(34069+ge,0,Ye,ne[ge].width,ne[ge].height,0,Ne,Ge,ne[ge].data);for(let Fe=0;Fe<Be.length;Fe++){const it=Be[Fe].image[ge].image;st?t.texSubImage2D(34069+ge,Fe+1,0,0,it.width,it.height,Ne,Ge,it.data):t.texImage2D(34069+ge,Fe+1,Ye,it.width,it.height,0,Ne,Ge,it.data)}}else{st?t.texSubImage2D(34069+ge,0,0,0,Ne,Ge,ne[ge]):t.texImage2D(34069+ge,0,Ye,Ne,Ge,ne[ge]);for(let Fe=0;Fe<Be.length;Fe++){const qe=Be[Fe];st?t.texSubImage2D(34069+ge,Fe+1,0,0,Ne,Ge,qe.image[ge]):t.texImage2D(34069+ge,Fe+1,Ye,Ne,Ge,qe.image[ge])}}}b(A,Le)&&_(34067),le.__currentVersion=le.version,A.onUpdate&&A.onUpdate(A)}C.__version=A.version}function _e(C,A,ie,se,le){const xe=s.convert(ie.format,ie.encoding),Re=s.convert(ie.type),ne=S(ie.internalFormat,xe,Re,ie.encoding);i.get(A).__hasExternalTextures||(le===32879||le===35866?t.texImage3D(le,0,ne,A.width,A.height,A.depth,0,xe,Re,null):t.texImage2D(le,0,ne,A.width,A.height,0,xe,Re,null)),t.bindFramebuffer(36160,C),me(A)?f.framebufferTexture2DMultisampleEXT(36160,se,le,i.get(ie).__webglTexture,0,D(A)):n.framebufferTexture2D(36160,se,le,i.get(ie).__webglTexture,0),t.bindFramebuffer(36160,null)}function Ie(C,A,ie){if(n.bindRenderbuffer(36161,C),A.depthBuffer&&!A.stencilBuffer){let se=33189;if(ie||me(A)){const le=A.depthTexture;le&&le.isDepthTexture&&(le.type===$r?se=36012:le.type===Wr&&(se=33190));const xe=D(A);me(A)?f.renderbufferStorageMultisampleEXT(36161,xe,se,A.width,A.height):n.renderbufferStorageMultisample(36161,xe,se,A.width,A.height)}else n.renderbufferStorage(36161,se,A.width,A.height);n.framebufferRenderbuffer(36160,36096,36161,C)}else if(A.depthBuffer&&A.stencilBuffer){const se=D(A);ie&&me(A)===!1?n.renderbufferStorageMultisample(36161,se,35056,A.width,A.height):me(A)?f.renderbufferStorageMultisampleEXT(36161,se,35056,A.width,A.height):n.renderbufferStorage(36161,34041,A.width,A.height),n.framebufferRenderbuffer(36160,33306,36161,C)}else{const se=A.isWebGLMultipleRenderTargets===!0?A.texture:[A.texture];for(let le=0;le<se.length;le++){const xe=se[le],Re=s.convert(xe.format,xe.encoding),ne=s.convert(xe.type),we=S(xe.internalFormat,Re,ne,xe.encoding),Le=D(A);ie&&me(A)===!1?n.renderbufferStorageMultisample(36161,Le,we,A.width,A.height):me(A)?f.renderbufferStorageMultisampleEXT(36161,Le,we,A.width,A.height):n.renderbufferStorage(36161,we,A.width,A.height)}}n.bindRenderbuffer(36161,null)}function fe(C,A){if(A&&A.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,C),!(A.depthTexture&&A.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(A.depthTexture).__webglTexture||A.depthTexture.image.width!==A.width||A.depthTexture.image.height!==A.height)&&(A.depthTexture.image.width=A.width,A.depthTexture.image.height=A.height,A.depthTexture.needsUpdate=!0),ee(A.depthTexture,0);const se=i.get(A.depthTexture).__webglTexture,le=D(A);if(A.depthTexture.format===Jr)me(A)?f.framebufferTexture2DMultisampleEXT(36160,36096,3553,se,0,le):n.framebufferTexture2D(36160,36096,3553,se,0);else if(A.depthTexture.format===To)me(A)?f.framebufferTexture2DMultisampleEXT(36160,33306,3553,se,0,le):n.framebufferTexture2D(36160,33306,3553,se,0);else throw new Error("Unknown depthTexture format")}function pe(C){const A=i.get(C),ie=C.isWebGLCubeRenderTarget===!0;if(C.depthTexture&&!A.__autoAllocateDepthBuffer){if(ie)throw new Error("target.depthTexture not supported in Cube render targets");fe(A.__webglFramebuffer,C)}else if(ie){A.__webglDepthbuffer=[];for(let se=0;se<6;se++)t.bindFramebuffer(36160,A.__webglFramebuffer[se]),A.__webglDepthbuffer[se]=n.createRenderbuffer(),Ie(A.__webglDepthbuffer[se],C,!1)}else t.bindFramebuffer(36160,A.__webglFramebuffer),A.__webglDepthbuffer=n.createRenderbuffer(),Ie(A.__webglDepthbuffer,C,!1);t.bindFramebuffer(36160,null)}function Te(C,A,ie){const se=i.get(C);A!==void 0&&_e(se.__webglFramebuffer,C,C.texture,36064,3553),ie!==void 0&&pe(C)}function ze(C){const A=C.texture,ie=i.get(C),se=i.get(A);C.addEventListener("dispose",$),C.isWebGLMultipleRenderTargets!==!0&&(se.__webglTexture===void 0&&(se.__webglTexture=n.createTexture()),se.__version=A.version,o.memory.textures++);const le=C.isWebGLCubeRenderTarget===!0,xe=C.isWebGLMultipleRenderTargets===!0,Re=y(C)||a;if(le){ie.__webglFramebuffer=[];for(let ne=0;ne<6;ne++)ie.__webglFramebuffer[ne]=n.createFramebuffer()}else{if(ie.__webglFramebuffer=n.createFramebuffer(),xe)if(r.drawBuffers){const ne=C.texture;for(let we=0,Le=ne.length;we<Le;we++){const Ne=i.get(ne[we]);Ne.__webglTexture===void 0&&(Ne.__webglTexture=n.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(a&&C.samples>0&&me(C)===!1){const ne=xe?A:[A];ie.__webglMultisampledFramebuffer=n.createFramebuffer(),ie.__webglColorRenderbuffer=[],t.bindFramebuffer(36160,ie.__webglMultisampledFramebuffer);for(let we=0;we<ne.length;we++){const Le=ne[we];ie.__webglColorRenderbuffer[we]=n.createRenderbuffer(),n.bindRenderbuffer(36161,ie.__webglColorRenderbuffer[we]);const Ne=s.convert(Le.format,Le.encoding),Ge=s.convert(Le.type),Ye=S(Le.internalFormat,Ne,Ge,Le.encoding),st=D(C);n.renderbufferStorageMultisample(36161,st,Ye,C.width,C.height),n.framebufferRenderbuffer(36160,36064+we,36161,ie.__webglColorRenderbuffer[we])}n.bindRenderbuffer(36161,null),C.depthBuffer&&(ie.__webglDepthRenderbuffer=n.createRenderbuffer(),Ie(ie.__webglDepthRenderbuffer,C,!0)),t.bindFramebuffer(36160,null)}}if(le){t.bindTexture(34067,se.__webglTexture),oe(34067,A,Re);for(let ne=0;ne<6;ne++)_e(ie.__webglFramebuffer[ne],C,A,36064,34069+ne);b(A,Re)&&_(34067),t.unbindTexture()}else if(xe){const ne=C.texture;for(let we=0,Le=ne.length;we<Le;we++){const Ne=ne[we],Ge=i.get(Ne);t.bindTexture(3553,Ge.__webglTexture),oe(3553,Ne,Re),_e(ie.__webglFramebuffer,C,Ne,36064+we,3553),b(Ne,Re)&&_(3553)}t.unbindTexture()}else{let ne=3553;(C.isWebGL3DRenderTarget||C.isWebGLArrayRenderTarget)&&(a?ne=C.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(ne,se.__webglTexture),oe(ne,A,Re),_e(ie.__webglFramebuffer,C,A,36064,ne),b(A,Re)&&_(ne),t.unbindTexture()}C.depthBuffer&&pe(C)}function Ce(C){const A=y(C)||a,ie=C.isWebGLMultipleRenderTargets===!0?C.texture:[C.texture];for(let se=0,le=ie.length;se<le;se++){const xe=ie[se];if(b(xe,A)){const Re=C.isWebGLCubeRenderTarget?34067:3553,ne=i.get(xe).__webglTexture;t.bindTexture(Re,ne),_(Re),t.unbindTexture()}}}function O(C){if(a&&C.samples>0&&me(C)===!1){const A=C.isWebGLMultipleRenderTargets?C.texture:[C.texture],ie=C.width,se=C.height;let le=16384;const xe=[],Re=C.stencilBuffer?33306:36096,ne=i.get(C),we=C.isWebGLMultipleRenderTargets===!0;if(we)for(let Le=0;Le<A.length;Le++)t.bindFramebuffer(36160,ne.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(36160,36064+Le,36161,null),t.bindFramebuffer(36160,ne.__webglFramebuffer),n.framebufferTexture2D(36009,36064+Le,3553,null,0);t.bindFramebuffer(36008,ne.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,ne.__webglFramebuffer);for(let Le=0;Le<A.length;Le++){xe.push(36064+Le),C.depthBuffer&&xe.push(Re);const Ne=ne.__ignoreDepthValues!==void 0?ne.__ignoreDepthValues:!1;if(Ne===!1&&(C.depthBuffer&&(le|=256),C.stencilBuffer&&(le|=1024)),we&&n.framebufferRenderbuffer(36008,36064,36161,ne.__webglColorRenderbuffer[Le]),Ne===!0&&(n.invalidateFramebuffer(36008,[Re]),n.invalidateFramebuffer(36009,[Re])),we){const Ge=i.get(A[Le]).__webglTexture;n.framebufferTexture2D(36009,36064,3553,Ge,0)}n.blitFramebuffer(0,0,ie,se,0,0,ie,se,le,9728),h&&n.invalidateFramebuffer(36008,xe)}if(t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,null),we)for(let Le=0;Le<A.length;Le++){t.bindFramebuffer(36160,ne.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(36160,36064+Le,36161,ne.__webglColorRenderbuffer[Le]);const Ne=i.get(A[Le]).__webglTexture;t.bindFramebuffer(36160,ne.__webglFramebuffer),n.framebufferTexture2D(36009,36064+Le,3553,Ne,0)}t.bindFramebuffer(36009,ne.__webglMultisampledFramebuffer)}}function D(C){return Math.min(u,C.samples)}function me(C){const A=i.get(C);return a&&C.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&A.__useRenderToTexture!==!1}function ye(C){const A=o.render.frame;p.get(C)!==A&&(p.set(C,A),C.update())}function Z(C,A){const ie=C.encoding,se=C.format,le=C.type;return C.isCompressedTexture===!0||C.isVideoTexture===!0||C.format===Qh||ie!==ss&&(ie===Tt?a===!1?e.has("EXT_sRGB")===!0&&se===si?(C.format=Qh,C.minFilter=Ln,C.generateMipmaps=!1):A=W3.sRGBToLinear(A):(se!==si||le!==rs)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",ie)),A}this.allocateTextureUnit=K,this.resetTextureUnits=X,this.setTexture2D=ee,this.setTexture2DArray=P,this.setTexture3D=H,this.setTextureCube=Y,this.rebindTextures=Te,this.setupRenderTarget=ze,this.updateRenderTargetMipmap=Ce,this.updateMultisampleRenderTarget=O,this.setupDepthRenderbuffer=pe,this.setupFrameBufferTexture=_e,this.useMultisampledRTT=me}function x8(n,e,t){const i=t.isWebGL2;function r(s,o=null){let a;if(s===rs)return 5121;if(s===c9)return 32819;if(s===l9)return 32820;if(s===s9)return 5120;if(s===o9)return 5122;if(s===B3)return 5123;if(s===a9)return 5124;if(s===Wr)return 5125;if(s===$r)return 5126;if(s===Pa)return i?5131:(a=e.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(s===d9)return 6406;if(s===si)return 6408;if(s===f9)return 6409;if(s===h9)return 6410;if(s===Jr)return 6402;if(s===To)return 34041;if(s===p9)return 6403;if(s===u9)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(s===Qh)return a=e.get("EXT_sRGB"),a!==null?a.SRGB_ALPHA_EXT:null;if(s===m9)return 36244;if(s===x9)return 33319;if(s===g9)return 33320;if(s===v9)return 36249;if(s===Jd||s===Kd||s===Qd||s===eu)if(o===Tt)if(a=e.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(s===Jd)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===Kd)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===Qd)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===eu)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=e.get("WEBGL_compressed_texture_s3tc"),a!==null){if(s===Jd)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===Kd)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===Qd)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===eu)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===nm||s===im||s===rm||s===sm)if(a=e.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(s===nm)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===im)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===rm)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===sm)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===y9)return a=e.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===om||s===am)if(a=e.get("WEBGL_compressed_texture_etc"),a!==null){if(s===om)return o===Tt?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(s===am)return o===Tt?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===cm||s===lm||s===dm||s===um||s===fm||s===hm||s===pm||s===mm||s===xm||s===gm||s===vm||s===ym||s===bm||s===_m)if(a=e.get("WEBGL_compressed_texture_astc"),a!==null){if(s===cm)return o===Tt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===lm)return o===Tt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===dm)return o===Tt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===um)return o===Tt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===fm)return o===Tt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===hm)return o===Tt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===pm)return o===Tt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===mm)return o===Tt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===xm)return o===Tt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===gm)return o===Tt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===vm)return o===Tt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===ym)return o===Tt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===bm)return o===Tt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===_m)return o===Tt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===wm)if(a=e.get("EXT_texture_compression_bptc"),a!==null){if(s===wm)return o===Tt?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;return s===vo?i?34042:(a=e.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null):n[s]!==void 0?n[s]:null}return{convert:r}}let g8=class extends Cn{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}},wa=class extends Ui{constructor(){super(),this.isGroup=!0,this.type="Group"}};const v8={type:"move"};let Ru=class{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new wa,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new wa,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new ce,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new ce),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new wa,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new ce,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new ce),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,i){let r=null,s=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(c&&e.hand){o=!0;for(const x of e.hand.values()){const m=t.getJointPose(x,i);if(c.joints[x.jointName]===void 0){const g=new wa;g.matrixAutoUpdate=!1,g.visible=!1,c.joints[x.jointName]=g,c.add(g)}const v=c.joints[x.jointName];m!==null&&(v.matrix.fromArray(m.transform.matrix),v.matrix.decompose(v.position,v.rotation,v.scale),v.jointRadius=m.radius),v.visible=m!==null}const d=c.joints["index-finger-tip"],u=c.joints["thumb-tip"],f=d.position.distanceTo(u.position),h=.02,p=.005;c.inputState.pinching&&f>h+p?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&f<=h-p&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,i),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(r=t.getPose(e.targetRaySpace,i),r===null&&s!==null&&(r=s),r!==null&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),r.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(r.linearVelocity)):a.hasLinearVelocity=!1,r.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(r.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(v8)))}return a!==null&&(a.visible=r!==null),l!==null&&(l.visible=s!==null),c!==null&&(c.visible=o!==null),this}},y8=class extends Mr{constructor(e,t,i,r,s,o,a,l,c,d){if(d=d!==void 0?d:Jr,d!==Jr&&d!==To)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");i===void 0&&d===Jr&&(i=Wr),i===void 0&&d===To&&(i=vo),super(null,r,s,o,a,l,d,i,c),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=a!==void 0?a:rn,this.minFilter=l!==void 0?l:rn,this.flipY=!1,this.generateMipmaps=!1}},b8=class extends Wo{constructor(e,t){super();const i=this;let r=null,s=1,o=null,a="local-floor",l=null,c=null,d=null,u=null,f=null,h=null;const p=t.getContextAttributes();let x=null,m=null;const v=[],g=[],w=new Cn;w.layers.enable(1),w.viewport=new Ht;const y=new Cn;y.layers.enable(2),y.viewport=new Ht;const M=[w,y],b=new g8;b.layers.enable(1),b.layers.enable(2);let _=null,S=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(j){let ee=v[j];return ee===void 0&&(ee=new Ru,v[j]=ee),ee.getTargetRaySpace()},this.getControllerGrip=function(j){let ee=v[j];return ee===void 0&&(ee=new Ru,v[j]=ee),ee.getGripSpace()},this.getHand=function(j){let ee=v[j];return ee===void 0&&(ee=new Ru,v[j]=ee),ee.getHandSpace()};function E(j){const ee=g.indexOf(j.inputSource);if(ee===-1)return;const P=v[ee];P!==void 0&&P.dispatchEvent({type:j.type,data:j.inputSource})}function R(){r.removeEventListener("select",E),r.removeEventListener("selectstart",E),r.removeEventListener("selectend",E),r.removeEventListener("squeeze",E),r.removeEventListener("squeezestart",E),r.removeEventListener("squeezeend",E),r.removeEventListener("end",R),r.removeEventListener("inputsourceschange",I);for(let j=0;j<v.length;j++){const ee=g[j];ee!==null&&(g[j]=null,v[j].disconnect(ee))}_=null,S=null,e.setRenderTarget(x),f=null,u=null,d=null,r=null,m=null,K.stop(),i.isPresenting=!1,i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(j){s=j,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(j){a=j,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||o},this.setReferenceSpace=function(j){l=j},this.getBaseLayer=function(){return u!==null?u:f},this.getBinding=function(){return d},this.getFrame=function(){return h},this.getSession=function(){return r},this.setSession=async function(j){if(r=j,r!==null){if(x=e.getRenderTarget(),r.addEventListener("select",E),r.addEventListener("selectstart",E),r.addEventListener("selectend",E),r.addEventListener("squeeze",E),r.addEventListener("squeezestart",E),r.addEventListener("squeezeend",E),r.addEventListener("end",R),r.addEventListener("inputsourceschange",I),p.xrCompatible!==!0&&await t.makeXRCompatible(),r.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const ee={antialias:r.renderState.layers===void 0?p.antialias:!0,alpha:p.alpha,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:s};f=new XRWebGLLayer(r,t,ee),r.updateRenderState({baseLayer:f}),m=new os(f.framebufferWidth,f.framebufferHeight,{format:si,type:rs,encoding:e.outputEncoding})}else{let ee=null,P=null,H=null;p.depth&&(H=p.stencil?35056:33190,ee=p.stencil?To:Jr,P=p.stencil?vo:Wr);const Y={colorFormat:32856,depthFormat:H,scaleFactor:s};d=new XRWebGLBinding(r,t),u=d.createProjectionLayer(Y),r.updateRenderState({layers:[u]}),m=new os(u.textureWidth,u.textureHeight,{format:si,type:rs,depthTexture:new y8(u.textureWidth,u.textureHeight,P,void 0,void 0,void 0,void 0,void 0,void 0,ee),stencilBuffer:p.stencil,encoding:e.outputEncoding,samples:p.antialias?4:0});const Q=e.properties.get(m);Q.__ignoreDepthValues=u.ignoreDepthValues}m.isXRRenderTarget=!0,this.setFoveation(1),l=null,o=await r.requestReferenceSpace(a),K.setContext(r),K.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}};function I(j){for(let ee=0;ee<j.removed.length;ee++){const P=j.removed[ee],H=g.indexOf(P);H>=0&&(g[H]=null,v[H].dispatchEvent({type:"disconnected",data:P}))}for(let ee=0;ee<j.added.length;ee++){const P=j.added[ee];let H=g.indexOf(P);if(H===-1){for(let Q=0;Q<v.length;Q++)if(Q>=g.length){g.push(P),H=Q;break}else if(g[Q]===null){g[Q]=P,H=Q;break}if(H===-1)break}const Y=v[H];Y&&Y.dispatchEvent({type:"connected",data:P})}}const $=new ce,W=new ce;function L(j,ee,P){$.setFromMatrixPosition(ee.matrixWorld),W.setFromMatrixPosition(P.matrixWorld);const H=$.distanceTo(W),Y=ee.projectionMatrix.elements,Q=P.projectionMatrix.elements,F=Y[14]/(Y[10]-1),oe=Y[14]/(Y[10]+1),Se=(Y[9]+1)/Y[5],Me=(Y[9]-1)/Y[5],be=(Y[8]-1)/Y[0],_e=(Q[8]+1)/Q[0],Ie=F*be,fe=F*_e,pe=H/(-be+_e),Te=pe*-be;ee.matrixWorld.decompose(j.position,j.quaternion,j.scale),j.translateX(Te),j.translateZ(pe),j.matrixWorld.compose(j.position,j.quaternion,j.scale),j.matrixWorldInverse.copy(j.matrixWorld).invert();const ze=F+pe,Ce=oe+pe,O=Ie-Te,D=fe+(H-Te),me=Se*oe/Ce*ze,ye=Me*oe/Ce*ze;j.projectionMatrix.makePerspective(O,D,me,ye,ze,Ce)}function z(j,ee){ee===null?j.matrixWorld.copy(j.matrix):j.matrixWorld.multiplyMatrices(ee.matrixWorld,j.matrix),j.matrixWorldInverse.copy(j.matrixWorld).invert()}this.updateCamera=function(j){if(r===null)return;b.near=y.near=w.near=j.near,b.far=y.far=w.far=j.far,(_!==b.near||S!==b.far)&&(r.updateRenderState({depthNear:b.near,depthFar:b.far}),_=b.near,S=b.far);const ee=j.parent,P=b.cameras;z(b,ee);for(let Y=0;Y<P.length;Y++)z(P[Y],ee);b.matrixWorld.decompose(b.position,b.quaternion,b.scale),j.position.copy(b.position),j.quaternion.copy(b.quaternion),j.scale.copy(b.scale),j.matrix.copy(b.matrix),j.matrixWorld.copy(b.matrixWorld);const H=j.children;for(let Y=0,Q=H.length;Y<Q;Y++)H[Y].updateMatrixWorld(!0);P.length===2?L(b,w,y):b.projectionMatrix.copy(w.projectionMatrix)},this.getCamera=function(){return b},this.getFoveation=function(){if(u!==null)return u.fixedFoveation;if(f!==null)return f.fixedFoveation},this.setFoveation=function(j){u!==null&&(u.fixedFoveation=j),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=j)};let U=null;function X(j,ee){if(c=ee.getViewerPose(l||o),h=ee,c!==null){const P=c.views;f!==null&&(e.setRenderTargetFramebuffer(m,f.framebuffer),e.setRenderTarget(m));let H=!1;P.length!==b.cameras.length&&(b.cameras.length=0,H=!0);for(let Y=0;Y<P.length;Y++){const Q=P[Y];let F=null;if(f!==null)F=f.getViewport(Q);else{const Se=d.getViewSubImage(u,Q);F=Se.viewport,Y===0&&(e.setRenderTargetTextures(m,Se.colorTexture,u.ignoreDepthValues?void 0:Se.depthStencilTexture),e.setRenderTarget(m))}let oe=M[Y];oe===void 0&&(oe=new Cn,oe.layers.enable(Y),oe.viewport=new Ht,M[Y]=oe),oe.matrix.fromArray(Q.transform.matrix),oe.projectionMatrix.fromArray(Q.projectionMatrix),oe.viewport.set(F.x,F.y,F.width,F.height),Y===0&&b.matrix.copy(oe.matrix),H===!0&&b.cameras.push(oe)}}for(let P=0;P<v.length;P++){const H=g[P],Y=v[P];H!==null&&Y!==void 0&&Y.update(H,ee,l||o)}U&&U(j,ee),h=null}const K=new ov;K.setAnimationLoop(X),this.setAnimationLoop=function(j){U=j},this.dispose=function(){}}};function _8(n,e){function t(x,m){x.fogColor.value.copy(m.color),m.isFog?(x.fogNear.value=m.near,x.fogFar.value=m.far):m.isFogExp2&&(x.fogDensity.value=m.density)}function i(x,m,v,g,w){m.isMeshBasicMaterial||m.isMeshLambertMaterial?r(x,m):m.isMeshToonMaterial?(r(x,m),d(x,m)):m.isMeshPhongMaterial?(r(x,m),c(x,m)):m.isMeshStandardMaterial?(r(x,m),u(x,m),m.isMeshPhysicalMaterial&&f(x,m,w)):m.isMeshMatcapMaterial?(r(x,m),h(x,m)):m.isMeshDepthMaterial?r(x,m):m.isMeshDistanceMaterial?(r(x,m),p(x,m)):m.isMeshNormalMaterial?r(x,m):m.isLineBasicMaterial?(s(x,m),m.isLineDashedMaterial&&o(x,m)):m.isPointsMaterial?a(x,m,v,g):m.isSpriteMaterial?l(x,m):m.isShadowMaterial?(x.color.value.copy(m.color),x.opacity.value=m.opacity):m.isShaderMaterial&&(m.uniformsNeedUpdate=!1)}function r(x,m){x.opacity.value=m.opacity,m.color&&x.diffuse.value.copy(m.color),m.emissive&&x.emissive.value.copy(m.emissive).multiplyScalar(m.emissiveIntensity),m.map&&(x.map.value=m.map),m.alphaMap&&(x.alphaMap.value=m.alphaMap),m.bumpMap&&(x.bumpMap.value=m.bumpMap,x.bumpScale.value=m.bumpScale,m.side===Wn&&(x.bumpScale.value*=-1)),m.displacementMap&&(x.displacementMap.value=m.displacementMap,x.displacementScale.value=m.displacementScale,x.displacementBias.value=m.displacementBias),m.emissiveMap&&(x.emissiveMap.value=m.emissiveMap),m.normalMap&&(x.normalMap.value=m.normalMap,x.normalScale.value.copy(m.normalScale),m.side===Wn&&x.normalScale.value.negate()),m.specularMap&&(x.specularMap.value=m.specularMap),m.alphaTest>0&&(x.alphaTest.value=m.alphaTest);const v=e.get(m).envMap;if(v&&(x.envMap.value=v,x.flipEnvMap.value=v.isCubeTexture&&v.isRenderTargetTexture===!1?-1:1,x.reflectivity.value=m.reflectivity,x.ior.value=m.ior,x.refractionRatio.value=m.refractionRatio),m.lightMap){x.lightMap.value=m.lightMap;const y=n.physicallyCorrectLights!==!0?Math.PI:1;x.lightMapIntensity.value=m.lightMapIntensity*y}m.aoMap&&(x.aoMap.value=m.aoMap,x.aoMapIntensity.value=m.aoMapIntensity);let g;m.map?g=m.map:m.specularMap?g=m.specularMap:m.displacementMap?g=m.displacementMap:m.normalMap?g=m.normalMap:m.bumpMap?g=m.bumpMap:m.roughnessMap?g=m.roughnessMap:m.metalnessMap?g=m.metalnessMap:m.alphaMap?g=m.alphaMap:m.emissiveMap?g=m.emissiveMap:m.clearcoatMap?g=m.clearcoatMap:m.clearcoatNormalMap?g=m.clearcoatNormalMap:m.clearcoatRoughnessMap?g=m.clearcoatRoughnessMap:m.iridescenceMap?g=m.iridescenceMap:m.iridescenceThicknessMap?g=m.iridescenceThicknessMap:m.specularIntensityMap?g=m.specularIntensityMap:m.specularColorMap?g=m.specularColorMap:m.transmissionMap?g=m.transmissionMap:m.thicknessMap?g=m.thicknessMap:m.sheenColorMap?g=m.sheenColorMap:m.sheenRoughnessMap&&(g=m.sheenRoughnessMap),g!==void 0&&(g.isWebGLRenderTarget&&(g=g.texture),g.matrixAutoUpdate===!0&&g.updateMatrix(),x.uvTransform.value.copy(g.matrix));let w;m.aoMap?w=m.aoMap:m.lightMap&&(w=m.lightMap),w!==void 0&&(w.isWebGLRenderTarget&&(w=w.texture),w.matrixAutoUpdate===!0&&w.updateMatrix(),x.uv2Transform.value.copy(w.matrix))}function s(x,m){x.diffuse.value.copy(m.color),x.opacity.value=m.opacity}function o(x,m){x.dashSize.value=m.dashSize,x.totalSize.value=m.dashSize+m.gapSize,x.scale.value=m.scale}function a(x,m,v,g){x.diffuse.value.copy(m.color),x.opacity.value=m.opacity,x.size.value=m.size*v,x.scale.value=g*.5,m.map&&(x.map.value=m.map),m.alphaMap&&(x.alphaMap.value=m.alphaMap),m.alphaTest>0&&(x.alphaTest.value=m.alphaTest);let w;m.map?w=m.map:m.alphaMap&&(w=m.alphaMap),w!==void 0&&(w.matrixAutoUpdate===!0&&w.updateMatrix(),x.uvTransform.value.copy(w.matrix))}function l(x,m){x.diffuse.value.copy(m.color),x.opacity.value=m.opacity,x.rotation.value=m.rotation,m.map&&(x.map.value=m.map),m.alphaMap&&(x.alphaMap.value=m.alphaMap),m.alphaTest>0&&(x.alphaTest.value=m.alphaTest);let v;m.map?v=m.map:m.alphaMap&&(v=m.alphaMap),v!==void 0&&(v.matrixAutoUpdate===!0&&v.updateMatrix(),x.uvTransform.value.copy(v.matrix))}function c(x,m){x.specular.value.copy(m.specular),x.shininess.value=Math.max(m.shininess,1e-4)}function d(x,m){m.gradientMap&&(x.gradientMap.value=m.gradientMap)}function u(x,m){x.roughness.value=m.roughness,x.metalness.value=m.metalness,m.roughnessMap&&(x.roughnessMap.value=m.roughnessMap),m.metalnessMap&&(x.metalnessMap.value=m.metalnessMap),e.get(m).envMap&&(x.envMapIntensity.value=m.envMapIntensity)}function f(x,m,v){x.ior.value=m.ior,m.sheen>0&&(x.sheenColor.value.copy(m.sheenColor).multiplyScalar(m.sheen),x.sheenRoughness.value=m.sheenRoughness,m.sheenColorMap&&(x.sheenColorMap.value=m.sheenColorMap),m.sheenRoughnessMap&&(x.sheenRoughnessMap.value=m.sheenRoughnessMap)),m.clearcoat>0&&(x.clearcoat.value=m.clearcoat,x.clearcoatRoughness.value=m.clearcoatRoughness,m.clearcoatMap&&(x.clearcoatMap.value=m.clearcoatMap),m.clearcoatRoughnessMap&&(x.clearcoatRoughnessMap.value=m.clearcoatRoughnessMap),m.clearcoatNormalMap&&(x.clearcoatNormalScale.value.copy(m.clearcoatNormalScale),x.clearcoatNormalMap.value=m.clearcoatNormalMap,m.side===Wn&&x.clearcoatNormalScale.value.negate())),m.iridescence>0&&(x.iridescence.value=m.iridescence,x.iridescenceIOR.value=m.iridescenceIOR,x.iridescenceThicknessMinimum.value=m.iridescenceThicknessRange[0],x.iridescenceThicknessMaximum.value=m.iridescenceThicknessRange[1],m.iridescenceMap&&(x.iridescenceMap.value=m.iridescenceMap),m.iridescenceThicknessMap&&(x.iridescenceThicknessMap.value=m.iridescenceThicknessMap)),m.transmission>0&&(x.transmission.value=m.transmission,x.transmissionSamplerMap.value=v.texture,x.transmissionSamplerSize.value.set(v.width,v.height),m.transmissionMap&&(x.transmissionMap.value=m.transmissionMap),x.thickness.value=m.thickness,m.thicknessMap&&(x.thicknessMap.value=m.thicknessMap),x.attenuationDistance.value=m.attenuationDistance,x.attenuationColor.value.copy(m.attenuationColor)),x.specularIntensity.value=m.specularIntensity,x.specularColor.value.copy(m.specularColor),m.specularIntensityMap&&(x.specularIntensityMap.value=m.specularIntensityMap),m.specularColorMap&&(x.specularColorMap.value=m.specularColorMap)}function h(x,m){m.matcap&&(x.matcap.value=m.matcap)}function p(x,m){x.referencePosition.value.copy(m.referencePosition),x.nearDistance.value=m.nearDistance,x.farDistance.value=m.farDistance}return{refreshFogUniforms:t,refreshMaterialUniforms:i}}function w8(n,e,t,i){let r={},s={},o=[];const a=t.isWebGL2?n.getParameter(35375):0;function l(g,w){const y=w.program;i.uniformBlockBinding(g,y)}function c(g,w){let y=r[g.id];y===void 0&&(p(g),y=d(g),r[g.id]=y,g.addEventListener("dispose",m));const M=w.program;i.updateUBOMapping(g,M);const b=e.render.frame;s[g.id]!==b&&(f(g),s[g.id]=b)}function d(g){const w=u();g.__bindingPointIndex=w;const y=n.createBuffer(),M=g.__size,b=g.usage;return n.bindBuffer(35345,y),n.bufferData(35345,M,b),n.bindBuffer(35345,null),n.bindBufferBase(35345,w,y),y}function u(){for(let g=0;g<a;g++)if(o.indexOf(g)===-1)return o.push(g),g;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function f(g){const w=r[g.id],y=g.uniforms,M=g.__cache;n.bindBuffer(35345,w);for(let b=0,_=y.length;b<_;b++){const S=y[b];if(h(S,b,M)===!0){const E=S.value,R=S.__offset;typeof E=="number"?(S.__data[0]=E,n.bufferSubData(35345,R,S.__data)):(S.value.isMatrix3?(S.__data[0]=S.value.elements[0],S.__data[1]=S.value.elements[1],S.__data[2]=S.value.elements[2],S.__data[3]=S.value.elements[0],S.__data[4]=S.value.elements[3],S.__data[5]=S.value.elements[4],S.__data[6]=S.value.elements[5],S.__data[7]=S.value.elements[0],S.__data[8]=S.value.elements[6],S.__data[9]=S.value.elements[7],S.__data[10]=S.value.elements[8],S.__data[11]=S.value.elements[0]):E.toArray(S.__data),n.bufferSubData(35345,R,S.__data))}}n.bindBuffer(35345,null)}function h(g,w,y){const M=g.value;if(y[w]===void 0)return typeof M=="number"?y[w]=M:y[w]=M.clone(),!0;if(typeof M=="number"){if(y[w]!==M)return y[w]=M,!0}else{const b=y[w];if(b.equals(M)===!1)return b.copy(M),!0}return!1}function p(g){const w=g.uniforms;let y=0;const M=16;let b=0;for(let _=0,S=w.length;_<S;_++){const E=w[_],R=x(E);if(E.__data=new Float32Array(R.storage/Float32Array.BYTES_PER_ELEMENT),E.__offset=y,_>0){b=y%M;const I=M-b;b!==0&&I-R.boundary<0&&(y+=M-b,E.__offset=y)}y+=R.storage}return b=y%M,b>0&&(y+=M-b),g.__size=y,g.__cache={},this}function x(g){const w=g.value,y={boundary:0,storage:0};return typeof w=="number"?(y.boundary=4,y.storage=4):w.isVector2?(y.boundary=8,y.storage=8):w.isVector3||w.isColor?(y.boundary=16,y.storage=12):w.isVector4?(y.boundary=16,y.storage=16):w.isMatrix3?(y.boundary=48,y.storage=48):w.isMatrix4?(y.boundary=64,y.storage=64):w.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",w),y}function m(g){const w=g.target;w.removeEventListener("dispose",m);const y=o.indexOf(w.__bindingPointIndex);o.splice(y,1),n.deleteBuffer(r[w.id]),delete r[w.id],delete s[w.id]}function v(){for(const g in r)n.deleteBuffer(r[g]);o=[],r={},s={}}return{bind:l,update:c,dispose:v}}function M8(){const n=Wl("canvas");return n.style.display="block",n}function hv(n={}){this.isWebGLRenderer=!0;const e=n.canvas!==void 0?n.canvas:M8(),t=n.context!==void 0?n.context:null,i=n.depth!==void 0?n.depth:!0,r=n.stencil!==void 0?n.stencil:!0,s=n.antialias!==void 0?n.antialias:!1,o=n.premultipliedAlpha!==void 0?n.premultipliedAlpha:!0,a=n.preserveDrawingBuffer!==void 0?n.preserveDrawingBuffer:!1,l=n.powerPreference!==void 0?n.powerPreference:"default",c=n.failIfMajorPerformanceCaveat!==void 0?n.failIfMajorPerformanceCaveat:!1;let d;t!==null?d=t.getContextAttributes().alpha:d=n.alpha!==void 0?n.alpha:!1;let u=null,f=null;const h=[],p=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=ss,this.physicallyCorrectLights=!1,this.toneMapping=Oi,this.toneMappingExposure=1,Object.defineProperties(this,{gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});const x=this;let m=!1,v=0,g=0,w=null,y=-1,M=null;const b=new Ht,_=new Ht;let S=null,E=e.width,R=e.height,I=1,$=null,W=null;const L=new Ht(0,0,E,R),z=new Ht(0,0,E,R);let U=!1;const X=new sv;let K=!1,j=!1,ee=null;const P=new sn,H=new xt,Y=new ce,Q={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function F(){return w===null?I:1}let oe=t;function Se(T,k){for(let J=0;J<T.length;J++){const B=T[J],te=e.getContext(B,k);if(te!==null)return te}return null}try{const T={alpha:!0,depth:i,stencil:r,antialias:s,premultipliedAlpha:o,preserveDrawingBuffer:a,powerPreference:l,failIfMajorPerformanceCaveat:c};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Z0}`),e.addEventListener("webglcontextlost",Ye,!1),e.addEventListener("webglcontextrestored",st,!1),e.addEventListener("webglcontextcreationerror",bt,!1),oe===null){const k=["webgl2","webgl","experimental-webgl"];if(x.isWebGL1Renderer===!0&&k.shift(),oe=Se(k,T),oe===null)throw Se(k)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}oe.getShaderPrecisionFormat===void 0&&(oe.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(T){throw console.error("THREE.WebGLRenderer: "+T.message),T}let Me,be,_e,Ie,fe,pe,Te,ze,Ce,O,D,me,ye,Z,C,A,ie,se,le,xe,Re,ne,we,Le;function Ne(){Me=new D4(oe),be=new T4(oe,Me,n),Me.init(be),ne=new x8(oe,Me,be),_e=new p8(oe,Me,be),Ie=new z4,fe=new e8,pe=new m8(oe,Me,_e,fe,be,ne,Ie),Te=new L4(x),ze=new I4(x),Ce=new $9(oe,be),we=new S4(oe,Me,Ce,be),O=new O4(oe,Ce,Ie,we),D=new U4(oe,O,Ce,Ie),le=new B4(oe,be,pe),A=new A4(fe),me=new Qw(x,Te,ze,Me,be,we,A),ye=new _8(x,fe),Z=new n8,C=new c8(Me,be),se=new M4(x,Te,_e,D,d,o),ie=new h8(x,D,be),Le=new w8(oe,Ie,be,_e),xe=new E4(oe,Me,Ie,be),Re=new q4(oe,Me,Ie,be),Ie.programs=me.programs,x.capabilities=be,x.extensions=Me,x.properties=fe,x.renderLists=Z,x.shadowMap=ie,x.state=_e,x.info=Ie}Ne();const Ge=new b8(x,oe);this.xr=Ge,this.getContext=function(){return oe},this.getContextAttributes=function(){return oe.getContextAttributes()},this.forceContextLoss=function(){const T=Me.get("WEBGL_lose_context");T&&T.loseContext()},this.forceContextRestore=function(){const T=Me.get("WEBGL_lose_context");T&&T.restoreContext()},this.getPixelRatio=function(){return I},this.setPixelRatio=function(T){T!==void 0&&(I=T,this.setSize(E,R,!1))},this.getSize=function(T){return T.set(E,R)},this.setSize=function(T,k,J){if(Ge.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}E=T,R=k,e.width=Math.floor(T*I),e.height=Math.floor(k*I),J!==!1&&(e.style.width=T+"px",e.style.height=k+"px"),this.setViewport(0,0,T,k)},this.getDrawingBufferSize=function(T){return T.set(E*I,R*I).floor()},this.setDrawingBufferSize=function(T,k,J){E=T,R=k,I=J,e.width=Math.floor(T*J),e.height=Math.floor(k*J),this.setViewport(0,0,T,k)},this.getCurrentViewport=function(T){return T.copy(b)},this.getViewport=function(T){return T.copy(L)},this.setViewport=function(T,k,J,B){T.isVector4?L.set(T.x,T.y,T.z,T.w):L.set(T,k,J,B),_e.viewport(b.copy(L).multiplyScalar(I).floor())},this.getScissor=function(T){return T.copy(z)},this.setScissor=function(T,k,J,B){T.isVector4?z.set(T.x,T.y,T.z,T.w):z.set(T,k,J,B),_e.scissor(_.copy(z).multiplyScalar(I).floor())},this.getScissorTest=function(){return U},this.setScissorTest=function(T){_e.setScissorTest(U=T)},this.setOpaqueSort=function(T){$=T},this.setTransparentSort=function(T){W=T},this.getClearColor=function(T){return T.copy(se.getClearColor())},this.setClearColor=function(){se.setClearColor.apply(se,arguments)},this.getClearAlpha=function(){return se.getClearAlpha()},this.setClearAlpha=function(){se.setClearAlpha.apply(se,arguments)},this.clear=function(T=!0,k=!0,J=!0){let B=0;T&&(B|=16384),k&&(B|=256),J&&(B|=1024),oe.clear(B)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Ye,!1),e.removeEventListener("webglcontextrestored",st,!1),e.removeEventListener("webglcontextcreationerror",bt,!1),Z.dispose(),C.dispose(),fe.dispose(),Te.dispose(),ze.dispose(),D.dispose(),we.dispose(),Le.dispose(),me.dispose(),Ge.dispose(),Ge.removeEventListener("sessionstart",it),Ge.removeEventListener("sessionend",ot),ee&&(ee.dispose(),ee=null),ht.stop()};function Ye(T){T.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),m=!0}function st(){console.log("THREE.WebGLRenderer: Context Restored."),m=!1;const T=Ie.autoReset,k=ie.enabled,J=ie.autoUpdate,B=ie.needsUpdate,te=ie.type;Ne(),Ie.autoReset=T,ie.enabled=k,ie.autoUpdate=J,ie.needsUpdate=B,ie.type=te}function bt(T){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",T.statusMessage)}function re(T){const k=T.target;k.removeEventListener("dispose",re),Be(k)}function Be(T){ge(T),fe.remove(T)}function ge(T){const k=fe.get(T).programs;k!==void 0&&(k.forEach(function(J){me.releaseProgram(J)}),T.isShaderMaterial&&me.releaseShaderCache(T))}this.renderBufferDirect=function(T,k,J,B,te,Ae){k===null&&(k=Q);const Pe=te.isMesh&&te.matrixWorld.determinant()<0,Ve=ae(T,k,J,B,te);_e.setMaterial(B,Pe);let He=J.index;const et=J.attributes.position;if(He===null){if(et===void 0||et.count===0)return}else if(He.count===0)return;let $e=1;B.wireframe===!0&&(He=O.getWireframeAttribute(J),$e=2),we.setup(te,B,Ve,J,He);let Qe,ct=xe;He!==null&&(Qe=Ce.get(He),ct=Re,ct.setIndex(Qe));const ln=He!==null?He.count:et.count,Ls=J.drawRange.start*$e,Cs=J.drawRange.count*$e,Qn=Ae!==null?Ae.start*$e:0,at=Ae!==null?Ae.count*$e:1/0,Rs=Math.max(Ls,Qn),Lt=Math.min(ln,Ls+Cs,Qn+at)-1,En=Math.max(0,Lt-Rs+1);if(En!==0){if(te.isMesh)B.wireframe===!0?(_e.setLineWidth(B.wireframeLinewidth*F()),ct.setMode(1)):ct.setMode(4);else if(te.isLine){let Hi=B.linewidth;Hi===void 0&&(Hi=1),_e.setLineWidth(Hi*F()),te.isLineSegments?ct.setMode(1):te.isLineLoop?ct.setMode(2):ct.setMode(3)}else te.isPoints?ct.setMode(0):te.isSprite&&ct.setMode(4);if(te.isInstancedMesh)ct.renderInstances(Rs,En,te.count);else if(J.isInstancedBufferGeometry){const Hi=Math.min(J.instanceCount,J._maxInstanceCount);ct.renderInstances(Rs,En,Hi)}else ct.render(Rs,En)}},this.compile=function(T,k){f=C.get(T),f.init(),p.push(f),T.traverseVisible(function(J){J.isLight&&J.layers.test(k.layers)&&(f.pushLight(J),J.castShadow&&f.pushShadow(J))}),f.setupLights(x.physicallyCorrectLights),T.traverse(function(J){const B=J.material;if(B)if(Array.isArray(B))for(let te=0;te<B.length;te++){const Ae=B[te];G(Ae,T,J)}else G(B,T,J)}),p.pop(),f=null};let Fe=null;function qe(T){Fe&&Fe(T)}function it(){ht.stop()}function ot(){ht.start()}const ht=new ov;ht.setAnimationLoop(qe),typeof self<"u"&&ht.setContext(self),this.setAnimationLoop=function(T){Fe=T,Ge.setAnimationLoop(T),T===null?ht.stop():ht.start()},Ge.addEventListener("sessionstart",it),Ge.addEventListener("sessionend",ot),this.render=function(T,k){if(k!==void 0&&k.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(m===!0)return;T.autoUpdate===!0&&T.updateMatrixWorld(),k.parent===null&&k.updateMatrixWorld(),Ge.enabled===!0&&Ge.isPresenting===!0&&(Ge.cameraAutoUpdate===!0&&Ge.updateCamera(k),k=Ge.getCamera()),T.isScene===!0&&T.onBeforeRender(x,T,k,w),f=C.get(T,p.length),f.init(),p.push(f),P.multiplyMatrices(k.projectionMatrix,k.matrixWorldInverse),X.setFromProjectionMatrix(P),j=this.localClippingEnabled,K=A.init(this.clippingPlanes,j,k),u=Z.get(T,h.length),u.init(),h.push(u),cn(T,k,0,x.sortObjects),u.finish(),x.sortObjects===!0&&u.sort($,W),K===!0&&A.beginShadows();const J=f.state.shadowsArray;if(ie.render(J,T,k),K===!0&&A.endShadows(),this.info.autoReset===!0&&this.info.reset(),se.render(u,T),f.setupLights(x.physicallyCorrectLights),k.isArrayCamera){const B=k.cameras;for(let te=0,Ae=B.length;te<Ae;te++){const Pe=B[te];pt(u,T,Pe,Pe.viewport)}}else pt(u,T,k);w!==null&&(pe.updateMultisampleRenderTarget(w),pe.updateRenderTargetMipmap(w)),T.isScene===!0&&T.onAfterRender(x,T,k),we.resetDefaultState(),y=-1,M=null,p.pop(),p.length>0?f=p[p.length-1]:f=null,h.pop(),h.length>0?u=h[h.length-1]:u=null};function cn(T,k,J,B){if(T.visible===!1)return;if(T.layers.test(k.layers)){if(T.isGroup)J=T.renderOrder;else if(T.isLOD)T.autoUpdate===!0&&T.update(k);else if(T.isLight)f.pushLight(T),T.castShadow&&f.pushShadow(T);else if(T.isSprite){if(!T.frustumCulled||X.intersectsSprite(T)){B&&Y.setFromMatrixPosition(T.matrixWorld).applyMatrix4(P);const Pe=D.update(T),Ve=T.material;Ve.visible&&u.push(T,Pe,Ve,J,Y.z,null)}}else if((T.isMesh||T.isLine||T.isPoints)&&(T.isSkinnedMesh&&T.skeleton.frame!==Ie.render.frame&&(T.skeleton.update(),T.skeleton.frame=Ie.render.frame),!T.frustumCulled||X.intersectsObject(T))){B&&Y.setFromMatrixPosition(T.matrixWorld).applyMatrix4(P);const Pe=D.update(T),Ve=T.material;if(Array.isArray(Ve)){const He=Pe.groups;for(let et=0,$e=He.length;et<$e;et++){const Qe=He[et],ct=Ve[Qe.materialIndex];ct&&ct.visible&&u.push(T,Pe,ct,J,Y.z,Qe)}}else Ve.visible&&u.push(T,Pe,Ve,J,Y.z,null)}}const Ae=T.children;for(let Pe=0,Ve=Ae.length;Pe<Ve;Pe++)cn(Ae[Pe],k,J,B)}function pt(T,k,J,B){const te=T.opaque,Ae=T.transmissive,Pe=T.transparent;f.setupLightsView(J),Ae.length>0&&N(te,k,J),B&&_e.viewport(b.copy(B)),te.length>0&&de(te,k,J),Ae.length>0&&de(Ae,k,J),Pe.length>0&&de(Pe,k,J),_e.buffers.depth.setTest(!0),_e.buffers.depth.setMask(!0),_e.buffers.color.setMask(!0),_e.setPolygonOffset(!1)}function N(T,k,J){const B=be.isWebGL2;ee===null&&(ee=new os(1,1,{generateMipmaps:!0,type:Me.has("EXT_color_buffer_half_float")?Pa:rs,minFilter:Id,samples:B&&s===!0?4:0})),x.getDrawingBufferSize(H),B?ee.setSize(H.x,H.y):ee.setSize(e0(H.x),e0(H.y));const te=x.getRenderTarget();x.setRenderTarget(ee),x.clear();const Ae=x.toneMapping;x.toneMapping=Oi,de(T,k,J),x.toneMapping=Ae,pe.updateMultisampleRenderTarget(ee),pe.updateRenderTargetMipmap(ee),x.setRenderTarget(te)}function de(T,k,J){const B=k.isScene===!0?k.overrideMaterial:null;for(let te=0,Ae=T.length;te<Ae;te++){const Pe=T[te],Ve=Pe.object,He=Pe.geometry,et=B===null?Pe.material:B,$e=Pe.group;Ve.layers.test(J.layers)&&ue(Ve,k,J,He,et,$e)}}function ue(T,k,J,B,te,Ae){T.onBeforeRender(x,k,J,B,te,Ae),T.modelViewMatrix.multiplyMatrices(J.matrixWorldInverse,T.matrixWorld),T.normalMatrix.getNormalMatrix(T.modelViewMatrix),te.onBeforeRender(x,k,J,B,T,Ae),te.transparent===!0&&te.side===Mo?(te.side=Wn,te.needsUpdate=!0,x.renderBufferDirect(J,k,B,te,T,Ae),te.side=Ra,te.needsUpdate=!0,x.renderBufferDirect(J,k,B,te,T,Ae),te.side=Mo):x.renderBufferDirect(J,k,B,te,T,Ae),T.onAfterRender(x,k,J,B,te,Ae)}function G(T,k,J){k.isScene!==!0&&(k=Q);const B=fe.get(T),te=f.state.lights,Ae=f.state.shadowsArray,Pe=te.state.version,Ve=me.getParameters(T,te.state,Ae,k,J),He=me.getProgramCacheKey(Ve);let et=B.programs;B.environment=T.isMeshStandardMaterial?k.environment:null,B.fog=k.fog,B.envMap=(T.isMeshStandardMaterial?ze:Te).get(T.envMap||B.environment),et===void 0&&(T.addEventListener("dispose",re),et=new Map,B.programs=et);let $e=et.get(He);if($e!==void 0){if(B.currentProgram===$e&&B.lightsStateVersion===Pe)return V(T,Ve),$e}else Ve.uniforms=me.getUniforms(T),T.onBuild(J,Ve,x),T.onBeforeCompile(Ve,x),$e=me.acquireProgram(Ve,He),et.set(He,$e),B.uniforms=Ve.uniforms;const Qe=B.uniforms;(!T.isShaderMaterial&&!T.isRawShaderMaterial||T.clipping===!0)&&(Qe.clippingPlanes=A.uniform),V(T,Ve),B.needsLights=ve(T),B.lightsStateVersion=Pe,B.needsLights&&(Qe.ambientLightColor.value=te.state.ambient,Qe.lightProbe.value=te.state.probe,Qe.directionalLights.value=te.state.directional,Qe.directionalLightShadows.value=te.state.directionalShadow,Qe.spotLights.value=te.state.spot,Qe.spotLightShadows.value=te.state.spotShadow,Qe.rectAreaLights.value=te.state.rectArea,Qe.ltc_1.value=te.state.rectAreaLTC1,Qe.ltc_2.value=te.state.rectAreaLTC2,Qe.pointLights.value=te.state.point,Qe.pointLightShadows.value=te.state.pointShadow,Qe.hemisphereLights.value=te.state.hemi,Qe.directionalShadowMap.value=te.state.directionalShadowMap,Qe.directionalShadowMatrix.value=te.state.directionalShadowMatrix,Qe.spotShadowMap.value=te.state.spotShadowMap,Qe.spotShadowMatrix.value=te.state.spotShadowMatrix,Qe.pointShadowMap.value=te.state.pointShadowMap,Qe.pointShadowMatrix.value=te.state.pointShadowMatrix);const ct=$e.getUniforms(),ln=Ul.seqWithValue(ct.seq,Qe);return B.currentProgram=$e,B.uniformsList=ln,$e}function V(T,k){const J=fe.get(T);J.outputEncoding=k.outputEncoding,J.instancing=k.instancing,J.skinning=k.skinning,J.morphTargets=k.morphTargets,J.morphNormals=k.morphNormals,J.morphColors=k.morphColors,J.morphTargetsCount=k.morphTargetsCount,J.numClippingPlanes=k.numClippingPlanes,J.numIntersection=k.numClipIntersection,J.vertexAlphas=k.vertexAlphas,J.vertexTangents=k.vertexTangents,J.toneMapping=k.toneMapping}function ae(T,k,J,B,te){k.isScene!==!0&&(k=Q),pe.resetTextureUnits();const Ae=k.fog,Pe=B.isMeshStandardMaterial?k.environment:null,Ve=w===null?x.outputEncoding:w.isXRRenderTarget===!0?w.texture.encoding:ss,He=(B.isMeshStandardMaterial?ze:Te).get(B.envMap||Pe),et=B.vertexColors===!0&&!!J.attributes.color&&J.attributes.color.itemSize===4,$e=!!B.normalMap&&!!J.attributes.tangent,Qe=!!J.morphAttributes.position,ct=!!J.morphAttributes.normal,ln=!!J.morphAttributes.color,Ls=B.toneMapped?x.toneMapping:Oi,Cs=J.morphAttributes.position||J.morphAttributes.normal||J.morphAttributes.color,Qn=Cs!==void 0?Cs.length:0,at=fe.get(B),Rs=f.state.lights;if(K===!0&&(j===!0||T!==M)){const dn=T===M&&B.id===y;A.setState(B,T,dn)}let Lt=!1;B.version===at.__version?(at.needsLights&&at.lightsStateVersion!==Rs.state.version||at.outputEncoding!==Ve||te.isInstancedMesh&&at.instancing===!1||!te.isInstancedMesh&&at.instancing===!0||te.isSkinnedMesh&&at.skinning===!1||!te.isSkinnedMesh&&at.skinning===!0||at.envMap!==He||B.fog===!0&&at.fog!==Ae||at.numClippingPlanes!==void 0&&(at.numClippingPlanes!==A.numPlanes||at.numIntersection!==A.numIntersection)||at.vertexAlphas!==et||at.vertexTangents!==$e||at.morphTargets!==Qe||at.morphNormals!==ct||at.morphColors!==ln||at.toneMapping!==Ls||be.isWebGL2===!0&&at.morphTargetsCount!==Qn)&&(Lt=!0):(Lt=!0,at.__version=B.version);let En=at.currentProgram;Lt===!0&&(En=G(B,k,te));let Hi=!1,ia=!1,Xd=!1;const Xt=En.getUniforms(),ra=at.uniforms;if(_e.useProgram(En.program)&&(Hi=!0,ia=!0,Xd=!0),B.id!==y&&(y=B.id,ia=!0),Hi||M!==T){if(Xt.setValue(oe,"projectionMatrix",T.projectionMatrix),be.logarithmicDepthBuffer&&Xt.setValue(oe,"logDepthBufFC",2/(Math.log(T.far+1)/Math.LN2)),M!==T&&(M=T,ia=!0,Xd=!0),B.isShaderMaterial||B.isMeshPhongMaterial||B.isMeshToonMaterial||B.isMeshStandardMaterial||B.envMap){const dn=Xt.map.cameraPosition;dn!==void 0&&dn.setValue(oe,Y.setFromMatrixPosition(T.matrixWorld))}(B.isMeshPhongMaterial||B.isMeshToonMaterial||B.isMeshLambertMaterial||B.isMeshBasicMaterial||B.isMeshStandardMaterial||B.isShaderMaterial)&&Xt.setValue(oe,"isOrthographic",T.isOrthographicCamera===!0),(B.isMeshPhongMaterial||B.isMeshToonMaterial||B.isMeshLambertMaterial||B.isMeshBasicMaterial||B.isMeshStandardMaterial||B.isShaderMaterial||B.isShadowMaterial||te.isSkinnedMesh)&&Xt.setValue(oe,"viewMatrix",T.matrixWorldInverse)}if(te.isSkinnedMesh){Xt.setOptional(oe,te,"bindMatrix"),Xt.setOptional(oe,te,"bindMatrixInverse");const dn=te.skeleton;dn&&(be.floatVertexTextures?(dn.boneTexture===null&&dn.computeBoneTexture(),Xt.setValue(oe,"boneTexture",dn.boneTexture,pe),Xt.setValue(oe,"boneTextureSize",dn.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const Yd=J.morphAttributes;if((Yd.position!==void 0||Yd.normal!==void 0||Yd.color!==void 0&&be.isWebGL2===!0)&&le.update(te,J,B,En),(ia||at.receiveShadow!==te.receiveShadow)&&(at.receiveShadow=te.receiveShadow,Xt.setValue(oe,"receiveShadow",te.receiveShadow)),ia&&(Xt.setValue(oe,"toneMappingExposure",x.toneMappingExposure),at.needsLights&&he(ra,Xd),Ae&&B.fog===!0&&ye.refreshFogUniforms(ra,Ae),ye.refreshMaterialUniforms(ra,B,I,R,ee),Ul.upload(oe,at.uniformsList,ra,pe)),B.isShaderMaterial&&B.uniformsNeedUpdate===!0&&(Ul.upload(oe,at.uniformsList,ra,pe),B.uniformsNeedUpdate=!1),B.isSpriteMaterial&&Xt.setValue(oe,"center",te.center),Xt.setValue(oe,"modelViewMatrix",te.modelViewMatrix),Xt.setValue(oe,"normalMatrix",te.normalMatrix),Xt.setValue(oe,"modelMatrix",te.matrixWorld),B.isShaderMaterial||B.isRawShaderMaterial){const dn=B.uniformsGroups;for(let Zd=0,Ab=dn.length;Zd<Ab;Zd++)if(be.isWebGL2){const jp=dn[Zd];Le.update(jp,En),Le.bind(jp,En)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return En}function he(T,k){T.ambientLightColor.needsUpdate=k,T.lightProbe.needsUpdate=k,T.directionalLights.needsUpdate=k,T.directionalLightShadows.needsUpdate=k,T.pointLights.needsUpdate=k,T.pointLightShadows.needsUpdate=k,T.spotLights.needsUpdate=k,T.spotLightShadows.needsUpdate=k,T.rectAreaLights.needsUpdate=k,T.hemisphereLights.needsUpdate=k}function ve(T){return T.isMeshLambertMaterial||T.isMeshToonMaterial||T.isMeshPhongMaterial||T.isMeshStandardMaterial||T.isShadowMaterial||T.isShaderMaterial&&T.lights===!0}this.getActiveCubeFace=function(){return v},this.getActiveMipmapLevel=function(){return g},this.getRenderTarget=function(){return w},this.setRenderTargetTextures=function(T,k,J){fe.get(T.texture).__webglTexture=k,fe.get(T.depthTexture).__webglTexture=J;const B=fe.get(T);B.__hasExternalTextures=!0,B.__hasExternalTextures&&(B.__autoAllocateDepthBuffer=J===void 0,B.__autoAllocateDepthBuffer||Me.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),B.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(T,k){const J=fe.get(T);J.__webglFramebuffer=k,J.__useDefaultFramebuffer=k===void 0},this.setRenderTarget=function(T,k=0,J=0){w=T,v=k,g=J;let B=!0;if(T){const He=fe.get(T);He.__useDefaultFramebuffer!==void 0?(_e.bindFramebuffer(36160,null),B=!1):He.__webglFramebuffer===void 0?pe.setupRenderTarget(T):He.__hasExternalTextures&&pe.rebindTextures(T,fe.get(T.texture).__webglTexture,fe.get(T.depthTexture).__webglTexture)}let te=null,Ae=!1,Pe=!1;if(T){const He=T.texture;(He.isData3DTexture||He.isDataArrayTexture)&&(Pe=!0);const et=fe.get(T).__webglFramebuffer;T.isWebGLCubeRenderTarget?(te=et[k],Ae=!0):be.isWebGL2&&T.samples>0&&pe.useMultisampledRTT(T)===!1?te=fe.get(T).__webglMultisampledFramebuffer:te=et,b.copy(T.viewport),_.copy(T.scissor),S=T.scissorTest}else b.copy(L).multiplyScalar(I).floor(),_.copy(z).multiplyScalar(I).floor(),S=U;if(_e.bindFramebuffer(36160,te)&&be.drawBuffers&&B&&_e.drawBuffers(T,te),_e.viewport(b),_e.scissor(_),_e.setScissorTest(S),Ae){const He=fe.get(T.texture);oe.framebufferTexture2D(36160,36064,34069+k,He.__webglTexture,J)}else if(Pe){const He=fe.get(T.texture),et=k||0;oe.framebufferTextureLayer(36160,36064,He.__webglTexture,J||0,et)}y=-1},this.readRenderTargetPixels=function(T,k,J,B,te,Ae,Pe){if(!(T&&T.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Ve=fe.get(T).__webglFramebuffer;if(T.isWebGLCubeRenderTarget&&Pe!==void 0&&(Ve=Ve[Pe]),Ve){_e.bindFramebuffer(36160,Ve);try{const He=T.texture,et=He.format,$e=He.type;if(et!==si&&ne.convert(et)!==oe.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const Qe=$e===Pa&&(Me.has("EXT_color_buffer_half_float")||be.isWebGL2&&Me.has("EXT_color_buffer_float"));if($e!==rs&&ne.convert($e)!==oe.getParameter(35738)&&!($e===$r&&(be.isWebGL2||Me.has("OES_texture_float")||Me.has("WEBGL_color_buffer_float")))&&!Qe){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}k>=0&&k<=T.width-B&&J>=0&&J<=T.height-te&&oe.readPixels(k,J,B,te,ne.convert(et),ne.convert($e),Ae)}finally{const He=w!==null?fe.get(w).__webglFramebuffer:null;_e.bindFramebuffer(36160,He)}}},this.copyFramebufferToTexture=function(T,k,J=0){const B=Math.pow(2,-J),te=Math.floor(k.image.width*B),Ae=Math.floor(k.image.height*B);pe.setTexture2D(k,0),oe.copyTexSubImage2D(3553,J,0,0,T.x,T.y,te,Ae),_e.unbindTexture()},this.copyTextureToTexture=function(T,k,J,B=0){const te=k.image.width,Ae=k.image.height,Pe=ne.convert(J.format),Ve=ne.convert(J.type);pe.setTexture2D(J,0),oe.pixelStorei(37440,J.flipY),oe.pixelStorei(37441,J.premultiplyAlpha),oe.pixelStorei(3317,J.unpackAlignment),k.isDataTexture?oe.texSubImage2D(3553,B,T.x,T.y,te,Ae,Pe,Ve,k.image.data):k.isCompressedTexture?oe.compressedTexSubImage2D(3553,B,T.x,T.y,k.mipmaps[0].width,k.mipmaps[0].height,Pe,k.mipmaps[0].data):oe.texSubImage2D(3553,B,T.x,T.y,Pe,Ve,k.image),B===0&&J.generateMipmaps&&oe.generateMipmap(3553),_e.unbindTexture()},this.copyTextureToTexture3D=function(T,k,J,B,te=0){if(x.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Ae=T.max.x-T.min.x+1,Pe=T.max.y-T.min.y+1,Ve=T.max.z-T.min.z+1,He=ne.convert(B.format),et=ne.convert(B.type);let $e;if(B.isData3DTexture)pe.setTexture3D(B,0),$e=32879;else if(B.isDataArrayTexture)pe.setTexture2DArray(B,0),$e=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}oe.pixelStorei(37440,B.flipY),oe.pixelStorei(37441,B.premultiplyAlpha),oe.pixelStorei(3317,B.unpackAlignment);const Qe=oe.getParameter(3314),ct=oe.getParameter(32878),ln=oe.getParameter(3316),Ls=oe.getParameter(3315),Cs=oe.getParameter(32877),Qn=J.isCompressedTexture?J.mipmaps[0]:J.image;oe.pixelStorei(3314,Qn.width),oe.pixelStorei(32878,Qn.height),oe.pixelStorei(3316,T.min.x),oe.pixelStorei(3315,T.min.y),oe.pixelStorei(32877,T.min.z),J.isDataTexture||J.isData3DTexture?oe.texSubImage3D($e,te,k.x,k.y,k.z,Ae,Pe,Ve,He,et,Qn.data):J.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),oe.compressedTexSubImage3D($e,te,k.x,k.y,k.z,Ae,Pe,Ve,He,Qn.data)):oe.texSubImage3D($e,te,k.x,k.y,k.z,Ae,Pe,Ve,He,et,Qn),oe.pixelStorei(3314,Qe),oe.pixelStorei(32878,ct),oe.pixelStorei(3316,ln),oe.pixelStorei(3315,Ls),oe.pixelStorei(32877,Cs),te===0&&B.generateMipmaps&&oe.generateMipmap($e),_e.unbindTexture()},this.initTexture=function(T){T.isCubeTexture?pe.setTextureCube(T,0):T.isData3DTexture?pe.setTexture3D(T,0):T.isDataArrayTexture?pe.setTexture2DArray(T,0):pe.setTexture2D(T,0),_e.unbindTexture()},this.resetState=function(){v=0,g=0,w=null,_e.reset(),we.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}let S8=class extends hv{};S8.prototype.isWebGL1Renderer=!0;let E8=class extends Ui{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),t}},Yc=class extends pc{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new lt(16777215),this.specular=new lt(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new lt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=U3,this.normalScale=new xt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=J0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}},T8=class extends Ui{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new lt(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}},A8=class extends T8{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}};typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Z0}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Z0);var ox=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function L8(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}function C8(n){if(Object.prototype.hasOwnProperty.call(n,"__esModule"))return n;var e=n.default;if(typeof e=="function"){var t=function i(){var r=!1;try{r=this instanceof i}catch{}return r?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(n).forEach(function(i){var r=Object.getOwnPropertyDescriptor(n,i);Object.defineProperty(t,i,r.get?r:{enumerable:!0,get:function(){return n[i]}})}),t}var Pu={},ax={},Iu,cx;function Jn(){if(cx)return Iu;cx=1;var n=function(e){return e&&e.Math==Math&&e};return Iu=n(typeof globalThis=="object"&&globalThis)||n(typeof window=="object"&&window)||n(typeof self=="object"&&self)||n(typeof ox=="object"&&ox)||(function(){return this})()||Function("return this")(),Iu}var Du={},Ou,lx;function xi(){return lx||(lx=1,Ou=function(n){try{return!!n()}catch{return!0}}),Ou}var qu,dx;function gi(){if(dx)return qu;dx=1;var n=xi();return qu=!n(function(){return Object.defineProperty({},1,{get:function(){return 7}})[1]!=7}),qu}var zu,ux;function pv(){if(ux)return zu;ux=1;var n=xi();return zu=!n(function(){var e=(function(){}).bind();return typeof e!="function"||e.hasOwnProperty("prototype")}),zu}var Fu,fx;function qd(){if(fx)return Fu;fx=1;var n=pv(),e=Function.prototype.call;return Fu=n?e.bind(e):function(){return e.apply(e,arguments)},Fu}var Nu={},hx;function R8(){if(hx)return Nu;hx=1;var n={}.propertyIsEnumerable,e=Object.getOwnPropertyDescriptor,t=e&&!n.call({1:2},1);return Nu.f=t?function(r){var s=e(this,r);return!!s&&s.enumerable}:n,Nu}var Bu,px;function tp(){return px||(px=1,Bu=function(n,e){return{enumerable:!(n&1),configurable:!(n&2),writable:!(n&4),value:e}}),Bu}var Uu,mx;function Kn(){if(mx)return Uu;mx=1;var n=pv(),e=Function,t=e.prototype,i=t.bind,r=t.call,s=n&&i.bind(r,r);return Uu=function(o){return o instanceof e?n?s(o):function(){return r.apply(o,arguments)}:void 0},Uu}var Gu,xx;function mv(){if(xx)return Gu;xx=1;var n=Kn(),e=n({}.toString),t=n("".slice);return Gu=function(i){return t(e(i),8,-1)},Gu}var ku,gx;function P8(){if(gx)return ku;gx=1;var n=Kn(),e=xi(),t=mv(),i=Object,r=n("".split);return ku=e(function(){return!i("z").propertyIsEnumerable(0)})?function(s){return t(s)=="String"?r(s,""):i(s)}:i,ku}var Hu,vx;function xv(){return vx||(vx=1,Hu=function(n){return n==null}),Hu}var Vu,yx;function gv(){if(yx)return Vu;yx=1;var n=xv(),e=TypeError;return Vu=function(t){if(n(t))throw e("Can't call method on "+t);return t},Vu}var Wu,bx;function xc(){if(bx)return Wu;bx=1;var n=P8(),e=gv();return Wu=function(t){return n(e(t))},Wu}var $u,_x;function vv(){if(_x)return $u;_x=1;var n=typeof document=="object"&&document.all,e=typeof n>"u"&&n!==void 0;return $u={all:n,IS_HTMLDDA:e},$u}var ju,wx;function jt(){if(wx)return ju;wx=1;var n=vv(),e=n.all;return ju=n.IS_HTMLDDA?function(t){return typeof t=="function"||t===e}:function(t){return typeof t=="function"},ju}var Xu,Mx;function jo(){if(Mx)return Xu;Mx=1;var n=jt(),e=vv(),t=e.all;return Xu=e.IS_HTMLDDA?function(i){return typeof i=="object"?i!==null:n(i)||i===t}:function(i){return typeof i=="object"?i!==null:n(i)},Xu}var Yu,Sx;function zd(){if(Sx)return Yu;Sx=1;var n=Jn(),e=jt(),t=function(i){return e(i)?i:void 0};return Yu=function(i,r){return arguments.length<2?t(n[i]):n[i]&&n[i][r]},Yu}var Zu,Ex;function yv(){if(Ex)return Zu;Ex=1;var n=Kn();return Zu=n({}.isPrototypeOf),Zu}var Ju,Tx;function I8(){if(Tx)return Ju;Tx=1;var n=zd();return Ju=n("navigator","userAgent")||"",Ju}var Ku,Ax;function D8(){if(Ax)return Ku;Ax=1;var n=Jn(),e=I8(),t=n.process,i=n.Deno,r=t&&t.versions||i&&i.version,s=r&&r.v8,o,a;return s&&(o=s.split("."),a=o[0]>0&&o[0]<4?1:+(o[0]+o[1])),!a&&e&&(o=e.match(/Edge\/(\d+)/),(!o||o[1]>=74)&&(o=e.match(/Chrome\/(\d+)/),o&&(a=+o[1]))),Ku=a,Ku}var Qu,Lx;function bv(){if(Lx)return Qu;Lx=1;var n=D8(),e=xi();return Qu=!!Object.getOwnPropertySymbols&&!e(function(){var t=Symbol();return!String(t)||!(Object(t)instanceof Symbol)||!Symbol.sham&&n&&n<41}),Qu}var ef,Cx;function _v(){if(Cx)return ef;Cx=1;var n=bv();return ef=n&&!Symbol.sham&&typeof Symbol.iterator=="symbol",ef}var tf,Rx;function wv(){if(Rx)return tf;Rx=1;var n=zd(),e=jt(),t=yv(),i=_v(),r=Object;return tf=i?function(s){return typeof s=="symbol"}:function(s){var o=n("Symbol");return e(o)&&t(o.prototype,r(s))},tf}var nf,Px;function O8(){if(Px)return nf;Px=1;var n=String;return nf=function(e){try{return n(e)}catch{return"Object"}},nf}var rf,Ix;function q8(){if(Ix)return rf;Ix=1;var n=jt(),e=O8(),t=TypeError;return rf=function(i){if(n(i))return i;throw t(e(i)+" is not a function")},rf}var sf,Dx;function z8(){if(Dx)return sf;Dx=1;var n=q8(),e=xv();return sf=function(t,i){var r=t[i];return e(r)?void 0:n(r)},sf}var of,Ox;function F8(){if(Ox)return of;Ox=1;var n=qd(),e=jt(),t=jo(),i=TypeError;return of=function(r,s){var o,a;if(s==="string"&&e(o=r.toString)&&!t(a=n(o,r))||e(o=r.valueOf)&&!t(a=n(o,r))||s!=="string"&&e(o=r.toString)&&!t(a=n(o,r)))return a;throw i("Can't convert object to primitive value")},of}var af={exports:{}},cf,qx;function Fd(){return qx||(qx=1,cf=!1),cf}var lf,zx;function np(){if(zx)return lf;zx=1;var n=Jn(),e=Object.defineProperty;return lf=function(t,i){try{e(n,t,{value:i,configurable:!0,writable:!0})}catch{n[t]=i}return i},lf}var df,Fx;function ip(){if(Fx)return df;Fx=1;var n=Jn(),e=np(),t="__core-js_shared__",i=n[t]||e(t,{});return df=i,df}var Nx;function Mv(){if(Nx)return af.exports;Nx=1;var n=Fd(),e=ip();return(af.exports=function(t,i){return e[t]||(e[t]=i!==void 0?i:{})})("versions",[]).push({version:"3.25.4",mode:n?"pure":"global",copyright:"© 2014-2022 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.25.4/LICENSE",source:"https://github.com/zloirock/core-js"}),af.exports}var uf,Bx;function Sv(){if(Bx)return uf;Bx=1;var n=gv(),e=Object;return uf=function(t){return e(n(t))},uf}var ff,Ux;function vi(){if(Ux)return ff;Ux=1;var n=Kn(),e=Sv(),t=n({}.hasOwnProperty);return ff=Object.hasOwn||function(r,s){return t(e(r),s)},ff}var hf,Gx;function Ev(){if(Gx)return hf;Gx=1;var n=Kn(),e=0,t=Math.random(),i=n(1 .toString);return hf=function(r){return"Symbol("+(r===void 0?"":r)+")_"+i(++e+t,36)},hf}var pf,kx;function Sr(){if(kx)return pf;kx=1;var n=Jn(),e=Mv(),t=vi(),i=Ev(),r=bv(),s=_v(),o=e("wks"),a=n.Symbol,l=a&&a.for,c=s?a:a&&a.withoutSetter||i;return pf=function(d){if(!t(o,d)||!(r||typeof o[d]=="string")){var u="Symbol."+d;r&&t(a,d)?o[d]=a[d]:s&&l?o[d]=l(u):o[d]=c(u)}return o[d]},pf}var mf,Hx;function N8(){if(Hx)return mf;Hx=1;var n=qd(),e=jo(),t=wv(),i=z8(),r=F8(),s=Sr(),o=TypeError,a=s("toPrimitive");return mf=function(l,c){if(!e(l)||t(l))return l;var d=i(l,a),u;if(d){if(c===void 0&&(c="default"),u=n(d,l,c),!e(u)||t(u))return u;throw o("Can't convert object to primitive value")}return c===void 0&&(c="number"),r(l,c)},mf}var xf,Vx;function Tv(){if(Vx)return xf;Vx=1;var n=N8(),e=wv();return xf=function(t){var i=n(t,"string");return e(i)?i:i+""},xf}var gf,Wx;function rp(){if(Wx)return gf;Wx=1;var n=Jn(),e=jo(),t=n.document,i=e(t)&&e(t.createElement);return gf=function(r){return i?t.createElement(r):{}},gf}var vf,$x;function Av(){if($x)return vf;$x=1;var n=gi(),e=xi(),t=rp();return vf=!n&&!e(function(){return Object.defineProperty(t("div"),"a",{get:function(){return 7}}).a!=7}),vf}var jx;function Lv(){if(jx)return Du;jx=1;var n=gi(),e=qd(),t=R8(),i=tp(),r=xc(),s=Tv(),o=vi(),a=Av(),l=Object.getOwnPropertyDescriptor;return Du.f=n?l:function(d,u){if(d=r(d),u=s(u),a)try{return l(d,u)}catch{}if(o(d,u))return i(!e(t.f,d,u),d[u])},Du}var yf={},bf,Xx;function Cv(){if(Xx)return bf;Xx=1;var n=gi(),e=xi();return bf=n&&e(function(){return Object.defineProperty(function(){},"prototype",{value:42,writable:!1}).prototype!=42}),bf}var _f,Yx;function gc(){if(Yx)return _f;Yx=1;var n=jo(),e=String,t=TypeError;return _f=function(i){if(n(i))return i;throw t(e(i)+" is not an object")},_f}var Zx;function Er(){if(Zx)return yf;Zx=1;var n=gi(),e=Av(),t=Cv(),i=gc(),r=Tv(),s=TypeError,o=Object.defineProperty,a=Object.getOwnPropertyDescriptor,l="enumerable",c="configurable",d="writable";return yf.f=n?t?function(f,h,p){if(i(f),h=r(h),i(p),typeof f=="function"&&h==="prototype"&&"value"in p&&d in p&&!p[d]){var x=a(f,h);x&&x[d]&&(f[h]=p.value,p={configurable:c in p?p[c]:x[c],enumerable:l in p?p[l]:x[l],writable:!1})}return o(f,h,p)}:o:function(f,h,p){if(i(f),h=r(h),i(p),e)try{return o(f,h,p)}catch{}if("get"in p||"set"in p)throw s("Accessors not supported");return"value"in p&&(f[h]=p.value),f},yf}var wf,Jx;function Nd(){if(Jx)return wf;Jx=1;var n=gi(),e=Er(),t=tp();return wf=n?function(i,r,s){return e.f(i,r,t(1,s))}:function(i,r,s){return i[r]=s,i},wf}var Mf={exports:{}},Sf,Kx;function Rv(){if(Kx)return Sf;Kx=1;var n=gi(),e=vi(),t=Function.prototype,i=n&&Object.getOwnPropertyDescriptor,r=e(t,"name"),s=r&&(function(){}).name==="something",o=r&&(!n||n&&i(t,"name").configurable);return Sf={EXISTS:r,PROPER:s,CONFIGURABLE:o},Sf}var Ef,Qx;function B8(){if(Qx)return Ef;Qx=1;var n=Kn(),e=jt(),t=ip(),i=n(Function.toString);return e(t.inspectSource)||(t.inspectSource=function(r){return i(r)}),Ef=t.inspectSource,Ef}var Tf,eg;function U8(){if(eg)return Tf;eg=1;var n=Jn(),e=jt(),t=n.WeakMap;return Tf=e(t)&&/native code/.test(String(t)),Tf}var Af,tg;function sp(){if(tg)return Af;tg=1;var n=Mv(),e=Ev(),t=n("keys");return Af=function(i){return t[i]||(t[i]=e(i))},Af}var Lf,ng;function op(){return ng||(ng=1,Lf={}),Lf}var Cf,ig;function Pv(){if(ig)return Cf;ig=1;var n=U8(),e=Jn(),t=Kn(),i=jo(),r=Nd(),s=vi(),o=ip(),a=sp(),l=op(),c="Object already initialized",d=e.TypeError,u=e.WeakMap,f,h,p,x=function(b){return p(b)?h(b):f(b,{})},m=function(b){return function(_){var S;if(!i(_)||(S=h(_)).type!==b)throw d("Incompatible receiver, "+b+" required");return S}};if(n||o.state){var v=o.state||(o.state=new u),g=t(v.get),w=t(v.has),y=t(v.set);f=function(b,_){if(w(v,b))throw d(c);return _.facade=b,y(v,b,_),_},h=function(b){return g(v,b)||{}},p=function(b){return w(v,b)}}else{var M=a("state");l[M]=!0,f=function(b,_){if(s(b,M))throw d(c);return _.facade=b,r(b,M,_),_},h=function(b){return s(b,M)?b[M]:{}},p=function(b){return s(b,M)}}return Cf={set:f,get:h,has:p,enforce:x,getterFor:m},Cf}var rg;function G8(){if(rg)return Mf.exports;rg=1;var n=xi(),e=jt(),t=vi(),i=gi(),r=Rv().CONFIGURABLE,s=B8(),o=Pv(),a=o.enforce,l=o.get,c=Object.defineProperty,d=i&&!n(function(){return c(function(){},"length",{value:8}).length!==8}),u=String(String).split("String"),f=Mf.exports=function(h,p,x){String(p).slice(0,7)==="Symbol("&&(p="["+String(p).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),x&&x.getter&&(p="get "+p),x&&x.setter&&(p="set "+p),(!t(h,"name")||r&&h.name!==p)&&(i?c(h,"name",{value:p,configurable:!0}):h.name=p),d&&x&&t(x,"arity")&&h.length!==x.arity&&c(h,"length",{value:x.arity});try{x&&t(x,"constructor")&&x.constructor?i&&c(h,"prototype",{writable:!1}):h.prototype&&(h.prototype=void 0)}catch{}var m=a(h);return t(m,"source")||(m.source=u.join(typeof p=="string"?p:"")),h};return Function.prototype.toString=f(function(){return e(this)&&l(this).source||s(this)},"toString"),Mf.exports}var Rf,sg;function ap(){if(sg)return Rf;sg=1;var n=jt(),e=Er(),t=G8(),i=np();return Rf=function(r,s,o,a){a||(a={});var l=a.enumerable,c=a.name!==void 0?a.name:s;if(n(o)&&t(o,c,a),a.global)l?r[s]=o:i(s,o);else{try{a.unsafe?r[s]&&(l=!0):delete r[s]}catch{}l?r[s]=o:e.f(r,s,{value:o,enumerable:!1,configurable:!a.nonConfigurable,writable:!a.nonWritable})}return r},Rf}var Pf={},If,og;function k8(){if(og)return If;og=1;var n=Math.ceil,e=Math.floor;return If=Math.trunc||function(i){var r=+i;return(r>0?e:n)(r)},If}var Df,ag;function Iv(){if(ag)return Df;ag=1;var n=k8();return Df=function(e){var t=+e;return t!==t||t===0?0:n(t)},Df}var Of,cg;function H8(){if(cg)return Of;cg=1;var n=Iv(),e=Math.max,t=Math.min;return Of=function(i,r){var s=n(i);return s<0?e(s+r,0):t(s,r)},Of}var qf,lg;function V8(){if(lg)return qf;lg=1;var n=Iv(),e=Math.min;return qf=function(t){return t>0?e(n(t),9007199254740991):0},qf}var zf,dg;function W8(){if(dg)return zf;dg=1;var n=V8();return zf=function(e){return n(e.length)},zf}var Ff,ug;function $8(){if(ug)return Ff;ug=1;var n=xc(),e=H8(),t=W8(),i=function(r){return function(s,o,a){var l=n(s),c=t(l),d=e(a,c),u;if(r&&o!=o){for(;c>d;)if(u=l[d++],u!=u)return!0}else for(;c>d;d++)if((r||d in l)&&l[d]===o)return r||d||0;return!r&&-1}};return Ff={includes:i(!0),indexOf:i(!1)},Ff}var Nf,fg;function Dv(){if(fg)return Nf;fg=1;var n=Kn(),e=vi(),t=xc(),i=$8().indexOf,r=op(),s=n([].push);return Nf=function(o,a){var l=t(o),c=0,d=[],u;for(u in l)!e(r,u)&&e(l,u)&&s(d,u);for(;a.length>c;)e(l,u=a[c++])&&(~i(d,u)||s(d,u));return d},Nf}var Bf,hg;function cp(){return hg||(hg=1,Bf=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]),Bf}var pg;function j8(){if(pg)return Pf;pg=1;var n=Dv(),e=cp(),t=e.concat("length","prototype");return Pf.f=Object.getOwnPropertyNames||function(r){return n(r,t)},Pf}var Uf={},mg;function X8(){return mg||(mg=1,Uf.f=Object.getOwnPropertySymbols),Uf}var Gf,xg;function Y8(){if(xg)return Gf;xg=1;var n=zd(),e=Kn(),t=j8(),i=X8(),r=gc(),s=e([].concat);return Gf=n("Reflect","ownKeys")||function(a){var l=t.f(r(a)),c=i.f;return c?s(l,c(a)):l},Gf}var kf,gg;function Ov(){if(gg)return kf;gg=1;var n=vi(),e=Y8(),t=Lv(),i=Er();return kf=function(r,s,o){for(var a=e(s),l=i.f,c=t.f,d=0;d<a.length;d++){var u=a[d];!n(r,u)&&!(o&&n(o,u))&&l(r,u,c(s,u))}},kf}var Hf,vg;function Z8(){if(vg)return Hf;vg=1;var n=xi(),e=jt(),t=/#|\.prototype\./,i=function(l,c){var d=s[r(l)];return d==a?!0:d==o?!1:e(c)?n(c):!!c},r=i.normalize=function(l){return String(l).replace(t,".").toLowerCase()},s=i.data={},o=i.NATIVE="N",a=i.POLYFILL="P";return Hf=i,Hf}var Vf,yg;function qv(){if(yg)return Vf;yg=1;var n=Jn(),e=Lv().f,t=Nd(),i=ap(),r=np(),s=Ov(),o=Z8();return Vf=function(a,l){var c=a.target,d=a.global,u=a.stat,f,h,p,x,m,v;if(d?h=n:u?h=n[c]||r(c,{}):h=(n[c]||{}).prototype,h)for(p in l){if(m=l[p],a.dontCallGetSet?(v=e(h,p),x=v&&v.value):x=h[p],f=o(d?p:c+(u?".":"#")+p,a.forced),!f&&x!==void 0){if(typeof m==typeof x)continue;s(m,x)}(a.sham||x&&x.sham)&&t(m,"sham",!0),i(h,p,m,a)}},Vf}var Wf,bg;function J8(){if(bg)return Wf;bg=1;var n=Sr(),e=n("toStringTag"),t={};return t[e]="z",Wf=String(t)==="[object z]",Wf}var $f,_g;function K8(){if(_g)return $f;_g=1;var n=J8(),e=jt(),t=mv(),i=Sr(),r=i("toStringTag"),s=Object,o=t((function(){return arguments})())=="Arguments",a=function(l,c){try{return l[c]}catch{}};return $f=n?t:function(l){var c,d,u;return l===void 0?"Undefined":l===null?"Null":typeof(d=a(c=s(l),r))=="string"?d:o?t(c):(u=t(c))=="Object"&&e(c.callee)?"Arguments":u},$f}var jf,wg;function Q8(){if(wg)return jf;wg=1;var n=K8(),e=String;return jf=function(t){if(n(t)==="Symbol")throw TypeError("Cannot convert a Symbol value to a string");return e(t)},jf}var Mg;function e6(){if(Mg)return ax;Mg=1;var n=qv(),e=gi(),t=Jn(),i=Kn(),r=vi(),s=jt(),o=yv(),a=Q8(),l=Er().f,c=Ov(),d=t.Symbol,u=d&&d.prototype;if(e&&s(d)&&(!("description"in u)||d().description!==void 0)){var f={},h=function(){var M=arguments.length<1||arguments[0]===void 0?void 0:a(arguments[0]),b=o(u,this)?new d(M):M===void 0?d():d(M);return M===""&&(f[b]=!0),b};c(h,d),h.prototype=u,u.constructor=h;var p=String(d("test"))=="Symbol(test)",x=i(u.valueOf),m=i(u.toString),v=/^Symbol\((.*)\)[^)]+$/,g=i("".replace),w=i("".slice);l(u,"description",{configurable:!0,get:function(){var M=x(this);if(r(f,M))return"";var b=m(M),_=p?w(b,7,-1):g(b,v,"$1");return _===""?void 0:_}}),n({global:!0,constructor:!0,forced:!0},{Symbol:h})}return ax}var Sg={},Xf,Eg;function t6(){return Eg||(Eg=1,Xf={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}),Xf}var Yf,Tg;function n6(){if(Tg)return Yf;Tg=1;var n=rp(),e=n("span").classList,t=e&&e.constructor&&e.constructor.prototype;return Yf=t===Object.prototype?void 0:t,Yf}var Zf={},Jf,Ag;function i6(){if(Ag)return Jf;Ag=1;var n=Dv(),e=cp();return Jf=Object.keys||function(i){return n(i,e)},Jf}var Lg;function r6(){if(Lg)return Zf;Lg=1;var n=gi(),e=Cv(),t=Er(),i=gc(),r=xc(),s=i6();return Zf.f=n&&!e?Object.defineProperties:function(a,l){i(a);for(var c=r(l),d=s(l),u=d.length,f=0,h;u>f;)t.f(a,h=d[f++],c[h]);return a},Zf}var Kf,Cg;function s6(){if(Cg)return Kf;Cg=1;var n=zd();return Kf=n("document","documentElement"),Kf}var Qf,Rg;function lp(){if(Rg)return Qf;Rg=1;var n=gc(),e=r6(),t=cp(),i=op(),r=s6(),s=rp(),o=sp(),a=">",l="<",c="prototype",d="script",u=o("IE_PROTO"),f=function(){},h=function(g){return l+d+a+g+l+"/"+d+a},p=function(g){g.write(h("")),g.close();var w=g.parentWindow.Object;return g=null,w},x=function(){var g=s("iframe"),w="java"+d+":",y;return g.style.display="none",r.appendChild(g),g.src=String(w),y=g.contentWindow.document,y.open(),y.write(h("document.F=Object")),y.close(),y.F},m,v=function(){try{m=new ActiveXObject("htmlfile")}catch{}v=typeof document<"u"?document.domain&&m?p(m):x():p(m);for(var g=t.length;g--;)delete v[c][t[g]];return v()};return i[u]=!0,Qf=Object.create||function(w,y){var M;return w!==null?(f[c]=n(w),M=new f,f[c]=null,M[u]=w):M=v(),y===void 0?M:e.f(M,y)},Qf}var eh,Pg;function o6(){if(Pg)return eh;Pg=1;var n=Sr(),e=lp(),t=Er().f,i=n("unscopables"),r=Array.prototype;return r[i]==null&&t(r,i,{configurable:!0,value:e(null)}),eh=function(s){r[i][s]=!0},eh}var th,Ig;function dp(){return Ig||(Ig=1,th={}),th}var nh,Dg;function a6(){if(Dg)return nh;Dg=1;var n=xi();return nh=!n(function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}),nh}var ih,Og;function zv(){if(Og)return ih;Og=1;var n=vi(),e=jt(),t=Sv(),i=sp(),r=a6(),s=i("IE_PROTO"),o=Object,a=o.prototype;return ih=r?o.getPrototypeOf:function(l){var c=t(l);if(n(c,s))return c[s];var d=c.constructor;return e(d)&&c instanceof d?d.prototype:c instanceof o?a:null},ih}var rh,qg;function Fv(){if(qg)return rh;qg=1;var n=xi(),e=jt(),t=jo(),i=lp(),r=zv(),s=ap(),o=Sr(),a=Fd(),l=o("iterator"),c=!1,d,u,f;[].keys&&(f=[].keys(),"next"in f?(u=r(r(f)),u!==Object.prototype&&(d=u)):c=!0);var h=!t(d)||n(function(){var p={};return d[l].call(p)!==p});return h?d={}:a&&(d=i(d)),e(d[l])||s(d,l,function(){return this}),rh={IteratorPrototype:d,BUGGY_SAFARI_ITERATORS:c},rh}var sh,zg;function Nv(){if(zg)return sh;zg=1;var n=Er().f,e=vi(),t=Sr(),i=t("toStringTag");return sh=function(r,s,o){r&&!o&&(r=r.prototype),r&&!e(r,i)&&n(r,i,{configurable:!0,value:s})},sh}var oh,Fg;function c6(){if(Fg)return oh;Fg=1;var n=Fv().IteratorPrototype,e=lp(),t=tp(),i=Nv(),r=dp(),s=function(){return this};return oh=function(o,a,l,c){var d=a+" Iterator";return o.prototype=e(n,{next:t(+!c,l)}),i(o,d,!1,!0),r[d]=s,o},oh}var ah,Ng;function l6(){if(Ng)return ah;Ng=1;var n=jt(),e=String,t=TypeError;return ah=function(i){if(typeof i=="object"||n(i))return i;throw t("Can't set "+e(i)+" as a prototype")},ah}var ch,Bg;function d6(){if(Bg)return ch;Bg=1;var n=Kn(),e=gc(),t=l6();return ch=Object.setPrototypeOf||("__proto__"in{}?(function(){var i=!1,r={},s;try{s=n(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set),s(r,[]),i=r instanceof Array}catch{}return function(a,l){return e(a),t(l),i?s(a,l):a.__proto__=l,a}})():void 0),ch}var lh,Ug;function u6(){if(Ug)return lh;Ug=1;var n=qv(),e=qd(),t=Fd(),i=Rv(),r=jt(),s=c6(),o=zv(),a=d6(),l=Nv(),c=Nd(),d=ap(),u=Sr(),f=dp(),h=Fv(),p=i.PROPER,x=i.CONFIGURABLE,m=h.IteratorPrototype,v=h.BUGGY_SAFARI_ITERATORS,g=u("iterator"),w="keys",y="values",M="entries",b=function(){return this};return lh=function(_,S,E,R,I,$,W){s(E,S,R);var L=function(Q){if(Q===I&&j)return j;if(!v&&Q in X)return X[Q];switch(Q){case w:return function(){return new E(this,Q)};case y:return function(){return new E(this,Q)};case M:return function(){return new E(this,Q)}}return function(){return new E(this)}},z=S+" Iterator",U=!1,X=_.prototype,K=X[g]||X["@@iterator"]||I&&X[I],j=!v&&K||L(I),ee=S=="Array"&&X.entries||K,P,H,Y;if(ee&&(P=o(ee.call(new _)),P!==Object.prototype&&P.next&&(!t&&o(P)!==m&&(a?a(P,m):r(P[g])||d(P,g,b)),l(P,z,!0,!0),t&&(f[z]=b))),p&&I==y&&K&&K.name!==y&&(!t&&x?c(X,"name",y):(U=!0,j=function(){return e(K,this)})),I)if(H={values:L(y),keys:$?j:L(w),entries:L(M)},W)for(Y in H)(v||U||!(Y in X))&&d(X,Y,H[Y]);else n({target:S,proto:!0,forced:v||U},H);return(!t||W)&&X[g]!==j&&d(X,g,j,{name:I}),f[S]=j,H},lh}var dh,Gg;function f6(){return Gg||(Gg=1,dh=function(n,e){return{value:n,done:e}}),dh}var uh,kg;function h6(){if(kg)return uh;kg=1;var n=xc(),e=o6(),t=dp(),i=Pv(),r=Er().f,s=u6(),o=f6(),a=Fd(),l=gi(),c="Array Iterator",d=i.set,u=i.getterFor(c);uh=s(Array,"Array",function(h,p){d(this,{type:c,target:n(h),index:0,kind:p})},function(){var h=u(this),p=h.target,x=h.kind,m=h.index++;return!p||m>=p.length?(h.target=void 0,o(void 0,!0)):x=="keys"?o(m,!1):x=="values"?o(p[m],!1):o([m,p[m]],!1)},"values");var f=t.Arguments=t.Array;if(e("keys"),e("values"),e("entries"),!a&&l&&f.name!=="values")try{r(f,"name",{value:"values"})}catch{}return uh}var Hg;function p6(){if(Hg)return Sg;Hg=1;var n=Jn(),e=t6(),t=n6(),i=h6(),r=Nd(),s=Sr(),o=s("iterator"),a=s("toStringTag"),l=i.values,c=function(u,f){if(u){if(u[o]!==l)try{r(u,o,l)}catch{u[o]=l}if(u[a]||r(u,a,f),e[f]){for(var h in i)if(u[h]!==i[h])try{r(u,h,i[h])}catch{u[h]=i[h]}}}};for(var d in e)c(n[d]&&n[d].prototype,d);return c(t,"DOMTokenList"),Sg}const up="125",m6={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},x6={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Bv=0,s0=1,Uv=2,g6=3,v6=0,fp=1,Gv=2,mo=3,Xo=0,Rt=1,vc=2,hp=1,y6=2,qi=0,yo=1,o0=2,a0=3,c0=4,kv=5,Vr=100,Hv=101,Vv=102,l0=103,d0=104,Wv=200,$v=201,jv=202,Xv=203,pp=204,mp=205,Yv=206,Zv=207,Jv=208,Kv=209,Qv=210,e2=0,t2=1,n2=2,$l=3,i2=4,r2=5,s2=6,o2=7,yc=0,a2=1,c2=2,es=0,l2=1,d2=2,u2=3,f2=4,h2=5,Bd=300,bc=301,_c=302,jl=303,Xl=304,Yo=306,wc=307,Ia=1e3,Zt=1001,Da=1002,Dt=1003,Yl=1004,b6=1004,Zl=1005,_6=1005,zt=1006,xp=1007,w6=1007,Zo=1008,M6=1008,Jo=1009,p2=1010,m2=1011,Oa=1012,x2=1013,Ea=1014,Pi=1015,qa=1016,g2=1017,v2=1018,y2=1019,bo=1020,b2=1021,dr=1022,bn=1023,_2=1024,w2=1025,M2=bn,ts=1026,Lo=1027,S2=1028,E2=1029,T2=1030,A2=1031,L2=1032,C2=1033,u0=33776,f0=33777,h0=33778,p0=33779,m0=35840,x0=35841,g0=35842,v0=35843,R2=36196,y0=37492,b0=37496,P2=37808,I2=37809,D2=37810,O2=37811,q2=37812,z2=37813,F2=37814,N2=37815,B2=37816,U2=37817,G2=37818,k2=37819,H2=37820,V2=37821,W2=36492,$2=37840,j2=37841,X2=37842,Y2=37843,Z2=37844,J2=37845,K2=37846,Q2=37847,ey=37848,ty=37849,ny=37850,iy=37851,ry=37852,sy=37853,oy=2200,ay=2201,cy=2202,za=2300,Ta=2301,Gl=2302,Xr=2400,Yr=2401,Fa=2402,Ud=2500,gp=2501,ly=0,S6=1,E6=2,Qt=3e3,Mc=3001,Gd=3007,kd=3002,dy=3003,vp=3004,yp=3005,bp=3006,uy=3200,fy=3201,Ts=0,hy=1,T6=0,kl=7680,A6=7681,L6=7682,C6=7683,R6=34055,P6=34056,I6=5386,D6=512,O6=513,q6=514,z6=515,F6=516,N6=517,B6=518,py=519,Sc=35044,cs=35048,U6=35040,G6=35045,k6=35049,H6=35041,V6=35046,W6=35050,$6=35042,j6="100",_0="300 es";function Gi(){}Object.assign(Gi.prototype,{addEventListener:function(n,e){this._listeners===void 0&&(this._listeners={});const t=this._listeners;t[n]===void 0&&(t[n]=[]),t[n].indexOf(e)===-1&&t[n].push(e)},hasEventListener:function(n,e){if(this._listeners===void 0)return!1;const t=this._listeners;return t[n]!==void 0&&t[n].indexOf(e)!==-1},removeEventListener:function(n,e){if(this._listeners===void 0)return;const i=this._listeners[n];if(i!==void 0){const r=i.indexOf(e);r!==-1&&i.splice(r,1)}},dispatchEvent:function(n){if(this._listeners===void 0)return;const t=this._listeners[n.type];if(t!==void 0){n.target=this;const i=t.slice(0);for(let r=0,s=i.length;r<s;r++)i[r].call(this,n)}}});const Ft=[];for(let n=0;n<256;n++)Ft[n]=(n<16?"0":"")+n.toString(16);let Zc=1234567;const Ke={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){const n=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(Ft[n&255]+Ft[n>>8&255]+Ft[n>>16&255]+Ft[n>>24&255]+"-"+Ft[e&255]+Ft[e>>8&255]+"-"+Ft[e>>16&15|64]+Ft[e>>24&255]+"-"+Ft[t&63|128]+Ft[t>>8&255]+"-"+Ft[t>>16&255]+Ft[t>>24&255]+Ft[i&255]+Ft[i>>8&255]+Ft[i>>16&255]+Ft[i>>24&255]).toUpperCase()},clamp:function(n,e,t){return Math.max(e,Math.min(t,n))},euclideanModulo:function(n,e){return(n%e+e)%e},mapLinear:function(n,e,t,i,r){return i+(n-e)*(r-i)/(t-e)},lerp:function(n,e,t){return(1-t)*n+t*e},damp:function(n,e,t,i){return Ke.lerp(n,e,1-Math.exp(-t*i))},pingpong:function(n,e=1){return e-Math.abs(Ke.euclideanModulo(n,e*2)-e)},smoothstep:function(n,e,t){return n<=e?0:n>=t?1:(n=(n-e)/(t-e),n*n*(3-2*n))},smootherstep:function(n,e,t){return n<=e?0:n>=t?1:(n=(n-e)/(t-e),n*n*n*(n*(n*6-15)+10))},randInt:function(n,e){return n+Math.floor(Math.random()*(e-n+1))},randFloat:function(n,e){return n+Math.random()*(e-n)},randFloatSpread:function(n){return n*(.5-Math.random())},seededRandom:function(n){return n!==void 0&&(Zc=n%2147483647),Zc=Zc*16807%2147483647,(Zc-1)/2147483646},degToRad:function(n){return n*Ke.DEG2RAD},radToDeg:function(n){return n*Ke.RAD2DEG},isPowerOfTwo:function(n){return(n&n-1)===0&&n!==0},ceilPowerOfTwo:function(n){return Math.pow(2,Math.ceil(Math.log(n)/Math.LN2))},floorPowerOfTwo:function(n){return Math.pow(2,Math.floor(Math.log(n)/Math.LN2))},setQuaternionFromProperEuler:function(n,e,t,i,r){const s=Math.cos,o=Math.sin,a=s(t/2),l=o(t/2),c=s((e+i)/2),d=o((e+i)/2),u=s((e-i)/2),f=o((e-i)/2),h=s((i-e)/2),p=o((i-e)/2);switch(r){case"XYX":n.set(a*d,l*u,l*f,a*c);break;case"YZY":n.set(l*f,a*d,l*u,a*c);break;case"ZXZ":n.set(l*u,l*f,a*d,a*c);break;case"XZX":n.set(a*d,l*p,l*h,a*c);break;case"YXY":n.set(l*h,a*d,l*p,a*c);break;case"ZYZ":n.set(l*p,l*h,a*d,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}};class Ee{constructor(e=0,t=0){Object.defineProperty(this,"isVector2",{value:!0}),this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,i=this.y,r=e.elements;return this.x=r[0]*t+r[3]*i+r[6],this.y=r[1]*t+r[4]*i+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,i){return i!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const i=Math.cos(t),r=Math.sin(t),s=this.x-e.x,o=this.y-e.y;return this.x=s*i-o*r+e.x,this.y=s*r+o*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}class vn{constructor(){Object.defineProperty(this,"isMatrix3",{value:!0}),this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,i,r,s,o,a,l,c){const d=this.elements;return d[0]=e,d[1]=r,d[2]=a,d[3]=t,d[4]=s,d[5]=l,d[6]=i,d[7]=o,d[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}clone(){return new this.constructor().fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,r=t.elements,s=this.elements,o=i[0],a=i[3],l=i[6],c=i[1],d=i[4],u=i[7],f=i[2],h=i[5],p=i[8],x=r[0],m=r[3],v=r[6],g=r[1],w=r[4],y=r[7],M=r[2],b=r[5],_=r[8];return s[0]=o*x+a*g+l*M,s[3]=o*m+a*w+l*b,s[6]=o*v+a*y+l*_,s[1]=c*x+d*g+u*M,s[4]=c*m+d*w+u*b,s[7]=c*v+d*y+u*_,s[2]=f*x+h*g+p*M,s[5]=f*m+h*w+p*b,s[8]=f*v+h*y+p*_,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],d=e[8];return t*o*d-t*a*c-i*s*d+i*a*l+r*s*c-r*o*l}invert(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],d=e[8],u=d*o-a*c,f=a*l-d*s,h=c*s-o*l,p=t*u+i*f+r*h;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const x=1/p;return e[0]=u*x,e[1]=(r*c-d*i)*x,e[2]=(a*i-r*o)*x,e[3]=f*x,e[4]=(d*t-r*l)*x,e[5]=(r*s-a*t)*x,e[6]=h*x,e[7]=(i*l-c*t)*x,e[8]=(o*t-i*s)*x,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).copy(this).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,r,s,o,a){const l=Math.cos(s),c=Math.sin(s);return this.set(i*l,i*c,-i*(l*o+c*a)+o+e,-r*c,r*l,-r*(-c*o+l*a)+a+t,0,0,1),this}scale(e,t){const i=this.elements;return i[0]*=e,i[3]*=e,i[6]*=e,i[1]*=t,i[4]*=t,i[7]*=t,this}rotate(e){const t=Math.cos(e),i=Math.sin(e),r=this.elements,s=r[0],o=r[3],a=r[6],l=r[1],c=r[4],d=r[7];return r[0]=t*s+i*l,r[3]=t*o+i*c,r[6]=t*a+i*d,r[1]=-i*s+t*l,r[4]=-i*o+t*c,r[7]=-i*a+t*d,this}translate(e,t){const i=this.elements;return i[0]+=e*i[2],i[3]+=e*i[5],i[6]+=e*i[8],i[1]+=t*i[2],i[4]+=t*i[5],i[7]+=t*i[8],this}equals(e){const t=this.elements,i=e.elements;for(let r=0;r<9;r++)if(t[r]!==i[r])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}}let Ws;const As={getDataURL:function(n){if(/^data:/i.test(n.src)||typeof HTMLCanvasElement>"u")return n.src;let e;if(n instanceof HTMLCanvasElement)e=n;else{Ws===void 0&&(Ws=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),Ws.width=n.width,Ws.height=n.height;const t=Ws.getContext("2d");n instanceof ImageData?t.putImageData(n,0,0):t.drawImage(n,0,0,n.width,n.height),e=Ws}return e.width>2048||e.height>2048?e.toDataURL("image/jpeg",.6):e.toDataURL("image/png")}};let X6=0;function ft(n=ft.DEFAULT_IMAGE,e=ft.DEFAULT_MAPPING,t=Zt,i=Zt,r=zt,s=Zo,o=bn,a=Jo,l=1,c=Qt){Object.defineProperty(this,"id",{value:X6++}),this.uuid=Ke.generateUUID(),this.name="",this.image=n,this.mipmaps=[],this.mapping=e,this.wrapS=t,this.wrapT=i,this.magFilter=r,this.minFilter=s,this.anisotropy=l,this.format=o,this.internalFormat=null,this.type=a,this.offset=new Ee(0,0),this.repeat=new Ee(1,1),this.center=new Ee(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new vn,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=c,this.version=0,this.onUpdate=null}ft.DEFAULT_IMAGE=void 0;ft.DEFAULT_MAPPING=Bd;ft.prototype=Object.assign(Object.create(Gi.prototype),{constructor:ft,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return new this.constructor().copy(this)},copy:function(n){return this.name=n.name,this.image=n.image,this.mipmaps=n.mipmaps.slice(0),this.mapping=n.mapping,this.wrapS=n.wrapS,this.wrapT=n.wrapT,this.magFilter=n.magFilter,this.minFilter=n.minFilter,this.anisotropy=n.anisotropy,this.format=n.format,this.internalFormat=n.internalFormat,this.type=n.type,this.offset.copy(n.offset),this.repeat.copy(n.repeat),this.center.copy(n.center),this.rotation=n.rotation,this.matrixAutoUpdate=n.matrixAutoUpdate,this.matrix.copy(n.matrix),this.generateMipmaps=n.generateMipmaps,this.premultiplyAlpha=n.premultiplyAlpha,this.flipY=n.flipY,this.unpackAlignment=n.unpackAlignment,this.encoding=n.encoding,this},toJSON:function(n){const e=n===void 0||typeof n=="string";if(!e&&n.textures[this.uuid]!==void 0)return n.textures[this.uuid];const t={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(this.image!==void 0){const i=this.image;if(i.uuid===void 0&&(i.uuid=Ke.generateUUID()),!e&&n.images[i.uuid]===void 0){let r;if(Array.isArray(i)){r=[];for(let s=0,o=i.length;s<o;s++)i[s].isDataTexture?r.push(fh(i[s].image)):r.push(fh(i[s]))}else r=fh(i);n.images[i.uuid]={uuid:i.uuid,url:r}}t.image=i.uuid}return e||(n.textures[this.uuid]=t),t},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(n){if(this.mapping!==Bd)return n;if(n.applyMatrix3(this.matrix),n.x<0||n.x>1)switch(this.wrapS){case Ia:n.x=n.x-Math.floor(n.x);break;case Zt:n.x=n.x<0?0:1;break;case Da:Math.abs(Math.floor(n.x)%2)===1?n.x=Math.ceil(n.x)-n.x:n.x=n.x-Math.floor(n.x);break}if(n.y<0||n.y>1)switch(this.wrapT){case Ia:n.y=n.y-Math.floor(n.y);break;case Zt:n.y=n.y<0?0:1;break;case Da:Math.abs(Math.floor(n.y)%2)===1?n.y=Math.ceil(n.y)-n.y:n.y=n.y-Math.floor(n.y);break}return this.flipY&&(n.y=1-n.y),n}});Object.defineProperty(ft.prototype,"needsUpdate",{set:function(n){n===!0&&this.version++}});function fh(n){return typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&n instanceof ImageBitmap?As.getDataURL(n):n.data?{data:Array.prototype.slice.call(n.data),width:n.width,height:n.height,type:n.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}class ut{constructor(e=0,t=0,i=0,r=1){Object.defineProperty(this,"isVector4",{value:!0}),this.x=e,this.y=t,this.z=i,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,r){return this.x=e,this.y=t,this.z=i,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,i=this.y,r=this.z,s=this.w,o=e.elements;return this.x=o[0]*t+o[4]*i+o[8]*r+o[12]*s,this.y=o[1]*t+o[5]*i+o[9]*r+o[13]*s,this.z=o[2]*t+o[6]*i+o[10]*r+o[14]*s,this.w=o[3]*t+o[7]*i+o[11]*r+o[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,r,s;const l=e.elements,c=l[0],d=l[4],u=l[8],f=l[1],h=l[5],p=l[9],x=l[2],m=l[6],v=l[10];if(Math.abs(d-f)<.01&&Math.abs(u-x)<.01&&Math.abs(p-m)<.01){if(Math.abs(d+f)<.1&&Math.abs(u+x)<.1&&Math.abs(p+m)<.1&&Math.abs(c+h+v-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const w=(c+1)/2,y=(h+1)/2,M=(v+1)/2,b=(d+f)/4,_=(u+x)/4,S=(p+m)/4;return w>y&&w>M?w<.01?(i=0,r=.707106781,s=.707106781):(i=Math.sqrt(w),r=b/i,s=_/i):y>M?y<.01?(i=.707106781,r=0,s=.707106781):(r=Math.sqrt(y),i=b/r,s=S/r):M<.01?(i=.707106781,r=.707106781,s=0):(s=Math.sqrt(M),i=_/s,r=S/s),this.set(i,r,s,t),this}let g=Math.sqrt((m-p)*(m-p)+(u-x)*(u-x)+(f-d)*(f-d));return Math.abs(g)<.001&&(g=1),this.x=(m-p)/g,this.y=(u-x)/g,this.z=(f-d)/g,this.w=Math.acos((c+h+v-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,i){return i!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}class ur extends Gi{constructor(e,t,i){super(),Object.defineProperty(this,"isWebGLRenderTarget",{value:!0}),this.width=e,this.height=t,this.scissor=new ut(0,0,e,t),this.scissorTest=!1,this.viewport=new ut(0,0,e,t),i=i||{},this.texture=new ft(void 0,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.texture.image={},this.texture.image.width=e,this.texture.image.height=t,this.texture.generateMipmaps=i.generateMipmaps!==void 0?i.generateMipmaps:!1,this.texture.minFilter=i.minFilter!==void 0?i.minFilter:zt,this.depthBuffer=i.depthBuffer!==void 0?i.depthBuffer:!0,this.stencilBuffer=i.stencilBuffer!==void 0?i.stencilBuffer:!1,this.depthTexture=i.depthTexture!==void 0?i.depthTexture:null}setSize(e,t){(this.width!==e||this.height!==t)&&(this.width=e,this.height=t,this.texture.image.width=e,this.texture.image.height=t,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Y6 extends ur{constructor(e,t,i){super(e,t,i),Object.defineProperty(this,"isWebGLMultisampleRenderTarget",{value:!0}),this.samples=4}copy(e){return super.copy.call(this,e),this.samples=e.samples,this}}class Vt{constructor(e=0,t=0,i=0,r=1){Object.defineProperty(this,"isQuaternion",{value:!0}),this._x=e,this._y=t,this._z=i,this._w=r}static slerp(e,t,i,r){return i.copy(e).slerp(t,r)}static slerpFlat(e,t,i,r,s,o,a){let l=i[r+0],c=i[r+1],d=i[r+2],u=i[r+3];const f=s[o+0],h=s[o+1],p=s[o+2],x=s[o+3];if(u!==x||l!==f||c!==h||d!==p){let m=1-a;const v=l*f+c*h+d*p+u*x,g=v>=0?1:-1,w=1-v*v;if(w>Number.EPSILON){const M=Math.sqrt(w),b=Math.atan2(M,v*g);m=Math.sin(m*b)/M,a=Math.sin(a*b)/M}const y=a*g;if(l=l*m+f*y,c=c*m+h*y,d=d*m+p*y,u=u*m+x*y,m===1-a){const M=1/Math.sqrt(l*l+c*c+d*d+u*u);l*=M,c*=M,d*=M,u*=M}}e[t]=l,e[t+1]=c,e[t+2]=d,e[t+3]=u}static multiplyQuaternionsFlat(e,t,i,r,s,o){const a=i[r],l=i[r+1],c=i[r+2],d=i[r+3],u=s[o],f=s[o+1],h=s[o+2],p=s[o+3];return e[t]=a*p+d*u+l*h-c*f,e[t+1]=l*p+d*f+c*u-a*h,e[t+2]=c*p+d*h+a*f-l*u,e[t+3]=d*p-a*u-l*f-c*h,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,r){return this._x=e,this._y=t,this._z=i,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const i=e._x,r=e._y,s=e._z,o=e._order,a=Math.cos,l=Math.sin,c=a(i/2),d=a(r/2),u=a(s/2),f=l(i/2),h=l(r/2),p=l(s/2);switch(o){case"XYZ":this._x=f*d*u+c*h*p,this._y=c*h*u-f*d*p,this._z=c*d*p+f*h*u,this._w=c*d*u-f*h*p;break;case"YXZ":this._x=f*d*u+c*h*p,this._y=c*h*u-f*d*p,this._z=c*d*p-f*h*u,this._w=c*d*u+f*h*p;break;case"ZXY":this._x=f*d*u-c*h*p,this._y=c*h*u+f*d*p,this._z=c*d*p+f*h*u,this._w=c*d*u-f*h*p;break;case"ZYX":this._x=f*d*u-c*h*p,this._y=c*h*u+f*d*p,this._z=c*d*p-f*h*u,this._w=c*d*u+f*h*p;break;case"YZX":this._x=f*d*u+c*h*p,this._y=c*h*u+f*d*p,this._z=c*d*p-f*h*u,this._w=c*d*u-f*h*p;break;case"XZY":this._x=f*d*u-c*h*p,this._y=c*h*u-f*d*p,this._z=c*d*p+f*h*u,this._w=c*d*u+f*h*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const i=t/2,r=Math.sin(i);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,i=t[0],r=t[4],s=t[8],o=t[1],a=t[5],l=t[9],c=t[2],d=t[6],u=t[10],f=i+a+u;if(f>0){const h=.5/Math.sqrt(f+1);this._w=.25/h,this._x=(d-l)*h,this._y=(s-c)*h,this._z=(o-r)*h}else if(i>a&&i>u){const h=2*Math.sqrt(1+i-a-u);this._w=(d-l)/h,this._x=.25*h,this._y=(r+o)/h,this._z=(s+c)/h}else if(a>u){const h=2*Math.sqrt(1+a-i-u);this._w=(s-c)/h,this._x=(r+o)/h,this._y=.25*h,this._z=(l+d)/h}else{const h=2*Math.sqrt(1+u-i-a);this._w=(o-r)/h,this._x=(s+c)/h,this._y=(l+d)/h,this._z=.25*h}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let r=e.dot(t)+1;return r<1e-6?(r=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=r):(this._x=0,this._y=-e.z,this._z=e.y,this._w=r)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=r),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Ke.clamp(this.dot(e),-1,1)))}rotateTowards(e,t){const i=this.angleTo(e);if(i===0)return this;const r=Math.min(1,t/i);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return t!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const i=e._x,r=e._y,s=e._z,o=e._w,a=t._x,l=t._y,c=t._z,d=t._w;return this._x=i*d+o*a+r*c-s*l,this._y=r*d+o*l+s*a-i*c,this._z=s*d+o*c+i*l-r*a,this._w=o*d-i*a-r*l-s*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const i=this._x,r=this._y,s=this._z,o=this._w;let a=o*e._w+i*e._x+r*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=i,this._y=r,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const h=1-t;return this._w=h*o+t*this._w,this._x=h*i+t*this._x,this._y=h*r+t*this._y,this._z=h*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),d=Math.atan2(c,a),u=Math.sin((1-t)*d)/c,f=Math.sin(t*d)/c;return this._w=o*u+this._w*f,this._x=i*u+this._x*f,this._y=r*u+this._y*f,this._z=s*u+this._z*f,this._onChangeCallback(),this}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}class q{constructor(e=0,t=0,i=0){Object.defineProperty(this,"isVector3",{value:!0}),this.x=e,this.y=t,this.z=i}set(e,t,i){return i===void 0&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(Vg.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Vg.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[3]*i+s[6]*r,this.y=s[1]*t+s[4]*i+s[7]*r,this.z=s[2]*t+s[5]*i+s[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,i=this.y,r=this.z,s=e.elements,o=1/(s[3]*t+s[7]*i+s[11]*r+s[15]);return this.x=(s[0]*t+s[4]*i+s[8]*r+s[12])*o,this.y=(s[1]*t+s[5]*i+s[9]*r+s[13])*o,this.z=(s[2]*t+s[6]*i+s[10]*r+s[14])*o,this}applyQuaternion(e){const t=this.x,i=this.y,r=this.z,s=e.x,o=e.y,a=e.z,l=e.w,c=l*t+o*r-a*i,d=l*i+a*t-s*r,u=l*r+s*i-o*t,f=-s*t-o*i-a*r;return this.x=c*l+f*-s+d*-a-u*-o,this.y=d*l+f*-o+u*-s-c*-a,this.z=u*l+f*-a+c*-o-d*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[4]*i+s[8]*r,this.y=s[1]*t+s[5]*i+s[9]*r,this.z=s[2]*t+s[6]*i+s[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e,t){return t!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){const i=e.x,r=e.y,s=e.z,o=t.x,a=t.y,l=t.z;return this.x=r*l-s*a,this.y=s*o-i*l,this.z=i*a-r*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return hh.copy(this).projectOnVector(e),this.sub(hh)}reflect(e){return this.sub(hh.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(Ke.clamp(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y,r=this.z-e.z;return t*t+i*i+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){const r=Math.sin(t)*e;return this.x=r*Math.sin(i),this.y=Math.cos(t)*e,this.z=r*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,i){return i!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}const hh=new q,Vg=new Vt;class ki{constructor(e,t){Object.defineProperty(this,"isBox3",{value:!0}),this.min=e!==void 0?e:new q(1/0,1/0,1/0),this.max=t!==void 0?t:new q(-1/0,-1/0,-1/0)}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,i=1/0,r=1/0,s=-1/0,o=-1/0,a=-1/0;for(let l=0,c=e.length;l<c;l+=3){const d=e[l],u=e[l+1],f=e[l+2];d<t&&(t=d),u<i&&(i=u),f<r&&(r=f),d>s&&(s=d),u>o&&(o=u),f>a&&(a=f)}return this.min.set(t,i,r),this.max.set(s,o,a),this}setFromBufferAttribute(e){let t=1/0,i=1/0,r=1/0,s=-1/0,o=-1/0,a=-1/0;for(let l=0,c=e.count;l<c;l++){const d=e.getX(l),u=e.getY(l),f=e.getZ(l);d<t&&(t=d),u<i&&(i=u),f<r&&(r=f),d>s&&(s=d),u>o&&(o=u),f>a&&(a=f)}return this.min.set(t,i,r),this.max.set(s,o,a),this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=ca.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e){return this.makeEmpty(),this.expandByObject(e)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return e===void 0&&(console.warn("THREE.Box3: .getCenter() target is now required"),e=new q),this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return e===void 0&&(console.warn("THREE.Box3: .getSize() target is now required"),e=new q),this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e){e.updateWorldMatrix(!1,!1);const t=e.geometry;t!==void 0&&(t.boundingBox===null&&t.computeBoundingBox(),mh.copy(t.boundingBox),mh.applyMatrix4(e.matrixWorld),this.union(mh));const i=e.children;for(let r=0,s=i.length;r<s;r++)this.expandByObject(i[r]);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t===void 0&&(console.warn("THREE.Box3: .getParameter() target is now required"),t=new q),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,ca),ca.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(la),Jc.subVectors(this.max,la),$s.subVectors(e.a,la),js.subVectors(e.b,la),Xs.subVectors(e.c,la),Ji.subVectors(js,$s),Ki.subVectors(Xs,js),Pr.subVectors($s,Xs);let t=[0,-Ji.z,Ji.y,0,-Ki.z,Ki.y,0,-Pr.z,Pr.y,Ji.z,0,-Ji.x,Ki.z,0,-Ki.x,Pr.z,0,-Pr.x,-Ji.y,Ji.x,0,-Ki.y,Ki.x,0,-Pr.y,Pr.x,0];return!ph(t,$s,js,Xs,Jc)||(t=[1,0,0,0,1,0,0,0,1],!ph(t,$s,js,Xs,Jc))?!1:(Kc.crossVectors(Ji,Ki),t=[Kc.x,Kc.y,Kc.z],ph(t,$s,js,Xs,Jc))}clampPoint(e,t){return t===void 0&&(console.warn("THREE.Box3: .clampPoint() target is now required"),t=new q),t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return ca.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return e===void 0&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(e.center),e.radius=this.getSize(ca).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Si[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Si[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Si[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Si[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Si[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Si[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Si[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Si[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Si),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}function ph(n,e,t,i,r){for(let s=0,o=n.length-3;s<=o;s+=3){Ir.fromArray(n,s);const a=r.x*Math.abs(Ir.x)+r.y*Math.abs(Ir.y)+r.z*Math.abs(Ir.z),l=e.dot(Ir),c=t.dot(Ir),d=i.dot(Ir);if(Math.max(-Math.max(l,c,d),Math.min(l,c,d))>a)return!1}return!0}const Si=[new q,new q,new q,new q,new q,new q,new q,new q],ca=new q,mh=new ki,$s=new q,js=new q,Xs=new q,Ji=new q,Ki=new q,Pr=new q,la=new q,Jc=new q,Kc=new q,Ir=new q,Z6=new ki;class Tr{constructor(e,t){this.center=e!==void 0?e:new q,this.radius=t!==void 0?t:-1}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const i=this.center;t!==void 0?i.copy(t):Z6.setFromPoints(e).getCenter(i);let r=0;for(let s=0,o=e.length;s<o;s++)r=Math.max(r,i.distanceToSquared(e[s]));return this.radius=Math.sqrt(r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const i=this.center.distanceToSquared(e);return t===void 0&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),t=new q),t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return e===void 0&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),e=new ki),this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}}const Ei=new q,xh=new q,Qc=new q,Qi=new q,gh=new q,el=new q,vh=new q;class Ko{constructor(e,t){this.origin=e!==void 0?e:new q,this.direction=t!==void 0?t:new q(0,0,-1)}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}clone(){return new this.constructor().copy(this)}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t===void 0&&(console.warn("THREE.Ray: .at() target is now required"),t=new q),t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Ei)),this}closestPointToPoint(e,t){t===void 0&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),t=new q),t.subVectors(e,this.origin);const i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(i).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Ei.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Ei.copy(this.direction).multiplyScalar(t).add(this.origin),Ei.distanceToSquared(e))}distanceSqToSegment(e,t,i,r){xh.copy(e).add(t).multiplyScalar(.5),Qc.copy(t).sub(e).normalize(),Qi.copy(this.origin).sub(xh);const s=e.distanceTo(t)*.5,o=-this.direction.dot(Qc),a=Qi.dot(this.direction),l=-Qi.dot(Qc),c=Qi.lengthSq(),d=Math.abs(1-o*o);let u,f,h,p;if(d>0)if(u=o*l-a,f=o*a-l,p=s*d,u>=0)if(f>=-p)if(f<=p){const x=1/d;u*=x,f*=x,h=u*(u+o*f+2*a)+f*(o*u+f+2*l)+c}else f=s,u=Math.max(0,-(o*f+a)),h=-u*u+f*(f+2*l)+c;else f=-s,u=Math.max(0,-(o*f+a)),h=-u*u+f*(f+2*l)+c;else f<=-p?(u=Math.max(0,-(-o*s+a)),f=u>0?-s:Math.min(Math.max(-s,-l),s),h=-u*u+f*(f+2*l)+c):f<=p?(u=0,f=Math.min(Math.max(-s,-l),s),h=f*(f+2*l)+c):(u=Math.max(0,-(o*s+a)),f=u>0?s:Math.min(Math.max(-s,-l),s),h=-u*u+f*(f+2*l)+c);else f=o>0?-s:s,u=Math.max(0,-(o*f+a)),h=-u*u+f*(f+2*l)+c;return i&&i.copy(this.direction).multiplyScalar(u).add(this.origin),r&&r.copy(Qc).multiplyScalar(f).add(xh),h}intersectSphere(e,t){Ei.subVectors(e.center,this.origin);const i=Ei.dot(this.direction),r=Ei.dot(Ei)-i*i,s=e.radius*e.radius;if(r>s)return null;const o=Math.sqrt(s-r),a=i-o,l=i+o;return a<0&&l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){const i=this.distanceToPlane(e);return i===null?null:this.at(i,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let i,r,s,o,a,l;const c=1/this.direction.x,d=1/this.direction.y,u=1/this.direction.z,f=this.origin;return c>=0?(i=(e.min.x-f.x)*c,r=(e.max.x-f.x)*c):(i=(e.max.x-f.x)*c,r=(e.min.x-f.x)*c),d>=0?(s=(e.min.y-f.y)*d,o=(e.max.y-f.y)*d):(s=(e.max.y-f.y)*d,o=(e.min.y-f.y)*d),i>o||s>r||((s>i||i!==i)&&(i=s),(o<r||r!==r)&&(r=o),u>=0?(a=(e.min.z-f.z)*u,l=(e.max.z-f.z)*u):(a=(e.max.z-f.z)*u,l=(e.min.z-f.z)*u),i>l||a>r)||((a>i||i!==i)&&(i=a),(l<r||r!==r)&&(r=l),r<0)?null:this.at(i>=0?i:r,t)}intersectsBox(e){return this.intersectBox(e,Ei)!==null}intersectTriangle(e,t,i,r,s){gh.subVectors(t,e),el.subVectors(i,e),vh.crossVectors(gh,el);let o=this.direction.dot(vh),a;if(o>0){if(r)return null;a=1}else if(o<0)a=-1,o=-o;else return null;Qi.subVectors(this.origin,e);const l=a*this.direction.dot(el.crossVectors(Qi,el));if(l<0)return null;const c=a*this.direction.dot(gh.cross(Qi));if(c<0||l+c>o)return null;const d=-a*Qi.dot(vh);return d<0?null:this.at(d/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}}class tt{constructor(){Object.defineProperty(this,"isMatrix4",{value:!0}),this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,i,r,s,o,a,l,c,d,u,f,h,p,x,m){const v=this.elements;return v[0]=e,v[4]=t,v[8]=i,v[12]=r,v[1]=s,v[5]=o,v[9]=a,v[13]=l,v[2]=c,v[6]=d,v[10]=u,v[14]=f,v[3]=h,v[7]=p,v[11]=x,v[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new tt().fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){const t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,i=e.elements,r=1/Ys.setFromMatrixColumn(e,0).length(),s=1/Ys.setFromMatrixColumn(e,1).length(),o=1/Ys.setFromMatrixColumn(e,2).length();return t[0]=i[0]*r,t[1]=i[1]*r,t[2]=i[2]*r,t[3]=0,t[4]=i[4]*s,t[5]=i[5]*s,t[6]=i[6]*s,t[7]=0,t[8]=i[8]*o,t[9]=i[9]*o,t[10]=i[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,i=e.x,r=e.y,s=e.z,o=Math.cos(i),a=Math.sin(i),l=Math.cos(r),c=Math.sin(r),d=Math.cos(s),u=Math.sin(s);if(e.order==="XYZ"){const f=o*d,h=o*u,p=a*d,x=a*u;t[0]=l*d,t[4]=-l*u,t[8]=c,t[1]=h+p*c,t[5]=f-x*c,t[9]=-a*l,t[2]=x-f*c,t[6]=p+h*c,t[10]=o*l}else if(e.order==="YXZ"){const f=l*d,h=l*u,p=c*d,x=c*u;t[0]=f+x*a,t[4]=p*a-h,t[8]=o*c,t[1]=o*u,t[5]=o*d,t[9]=-a,t[2]=h*a-p,t[6]=x+f*a,t[10]=o*l}else if(e.order==="ZXY"){const f=l*d,h=l*u,p=c*d,x=c*u;t[0]=f-x*a,t[4]=-o*u,t[8]=p+h*a,t[1]=h+p*a,t[5]=o*d,t[9]=x-f*a,t[2]=-o*c,t[6]=a,t[10]=o*l}else if(e.order==="ZYX"){const f=o*d,h=o*u,p=a*d,x=a*u;t[0]=l*d,t[4]=p*c-h,t[8]=f*c+x,t[1]=l*u,t[5]=x*c+f,t[9]=h*c-p,t[2]=-c,t[6]=a*l,t[10]=o*l}else if(e.order==="YZX"){const f=o*l,h=o*c,p=a*l,x=a*c;t[0]=l*d,t[4]=x-f*u,t[8]=p*u+h,t[1]=u,t[5]=o*d,t[9]=-a*d,t[2]=-c*d,t[6]=h*u+p,t[10]=f-x*u}else if(e.order==="XZY"){const f=o*l,h=o*c,p=a*l,x=a*c;t[0]=l*d,t[4]=-u,t[8]=c*d,t[1]=f*u+x,t[5]=o*d,t[9]=h*u-p,t[2]=p*u-h,t[6]=a*d,t[10]=x*u+f}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(J6,e,K6)}lookAt(e,t,i){const r=this.elements;return hn.subVectors(e,t),hn.lengthSq()===0&&(hn.z=1),hn.normalize(),er.crossVectors(i,hn),er.lengthSq()===0&&(Math.abs(i.z)===1?hn.x+=1e-4:hn.z+=1e-4,hn.normalize(),er.crossVectors(i,hn)),er.normalize(),tl.crossVectors(hn,er),r[0]=er.x,r[4]=tl.x,r[8]=hn.x,r[1]=er.y,r[5]=tl.y,r[9]=hn.y,r[2]=er.z,r[6]=tl.z,r[10]=hn.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,r=t.elements,s=this.elements,o=i[0],a=i[4],l=i[8],c=i[12],d=i[1],u=i[5],f=i[9],h=i[13],p=i[2],x=i[6],m=i[10],v=i[14],g=i[3],w=i[7],y=i[11],M=i[15],b=r[0],_=r[4],S=r[8],E=r[12],R=r[1],I=r[5],$=r[9],W=r[13],L=r[2],z=r[6],U=r[10],X=r[14],K=r[3],j=r[7],ee=r[11],P=r[15];return s[0]=o*b+a*R+l*L+c*K,s[4]=o*_+a*I+l*z+c*j,s[8]=o*S+a*$+l*U+c*ee,s[12]=o*E+a*W+l*X+c*P,s[1]=d*b+u*R+f*L+h*K,s[5]=d*_+u*I+f*z+h*j,s[9]=d*S+u*$+f*U+h*ee,s[13]=d*E+u*W+f*X+h*P,s[2]=p*b+x*R+m*L+v*K,s[6]=p*_+x*I+m*z+v*j,s[10]=p*S+x*$+m*U+v*ee,s[14]=p*E+x*W+m*X+v*P,s[3]=g*b+w*R+y*L+M*K,s[7]=g*_+w*I+y*z+M*j,s[11]=g*S+w*$+y*U+M*ee,s[15]=g*E+w*W+y*X+M*P,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[4],r=e[8],s=e[12],o=e[1],a=e[5],l=e[9],c=e[13],d=e[2],u=e[6],f=e[10],h=e[14],p=e[3],x=e[7],m=e[11],v=e[15];return p*(+s*l*u-r*c*u-s*a*f+i*c*f+r*a*h-i*l*h)+x*(+t*l*h-t*c*f+s*o*f-r*o*h+r*c*d-s*l*d)+m*(+t*c*u-t*a*h-s*o*u+i*o*h+s*a*d-i*c*d)+v*(-r*a*d-t*l*u+t*a*f+r*o*u-i*o*f+i*l*d)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=i),this}invert(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],d=e[8],u=e[9],f=e[10],h=e[11],p=e[12],x=e[13],m=e[14],v=e[15],g=u*m*c-x*f*c+x*l*h-a*m*h-u*l*v+a*f*v,w=p*f*c-d*m*c-p*l*h+o*m*h+d*l*v-o*f*v,y=d*x*c-p*u*c+p*a*h-o*x*h-d*a*v+o*u*v,M=p*u*l-d*x*l-p*a*f+o*x*f+d*a*m-o*u*m,b=t*g+i*w+r*y+s*M;if(b===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const _=1/b;return e[0]=g*_,e[1]=(x*f*s-u*m*s-x*r*h+i*m*h+u*r*v-i*f*v)*_,e[2]=(a*m*s-x*l*s+x*r*c-i*m*c-a*r*v+i*l*v)*_,e[3]=(u*l*s-a*f*s-u*r*c+i*f*c+a*r*h-i*l*h)*_,e[4]=w*_,e[5]=(d*m*s-p*f*s+p*r*h-t*m*h-d*r*v+t*f*v)*_,e[6]=(p*l*s-o*m*s-p*r*c+t*m*c+o*r*v-t*l*v)*_,e[7]=(o*f*s-d*l*s+d*r*c-t*f*c-o*r*h+t*l*h)*_,e[8]=y*_,e[9]=(p*u*s-d*x*s-p*i*h+t*x*h+d*i*v-t*u*v)*_,e[10]=(o*x*s-p*a*s+p*i*c-t*x*c-o*i*v+t*a*v)*_,e[11]=(d*a*s-o*u*s-d*i*c+t*u*c+o*i*h-t*a*h)*_,e[12]=M*_,e[13]=(d*x*r-p*u*r+p*i*f-t*x*f-d*i*m+t*u*m)*_,e[14]=(p*a*r-o*x*r-p*i*l+t*x*l+o*i*m-t*a*m)*_,e[15]=(o*u*r-d*a*r+d*i*l-t*u*l-o*i*f+t*a*f)*_,this}scale(e){const t=this.elements,i=e.x,r=e.y,s=e.z;return t[0]*=i,t[4]*=r,t[8]*=s,t[1]*=i,t[5]*=r,t[9]*=s,t[2]*=i,t[6]*=r,t[10]*=s,t[3]*=i,t[7]*=r,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,r))}makeTranslation(e,t,i){return this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const i=Math.cos(t),r=Math.sin(t),s=1-i,o=e.x,a=e.y,l=e.z,c=s*o,d=s*a;return this.set(c*o+i,c*a-r*l,c*l+r*a,0,c*a+r*l,d*a+i,d*l-r*o,0,c*l-r*a,d*l+r*o,s*l*l+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i){return this.set(1,t,i,0,e,1,i,0,e,t,1,0,0,0,0,1),this}compose(e,t,i){const r=this.elements,s=t._x,o=t._y,a=t._z,l=t._w,c=s+s,d=o+o,u=a+a,f=s*c,h=s*d,p=s*u,x=o*d,m=o*u,v=a*u,g=l*c,w=l*d,y=l*u,M=i.x,b=i.y,_=i.z;return r[0]=(1-(x+v))*M,r[1]=(h+y)*M,r[2]=(p-w)*M,r[3]=0,r[4]=(h-y)*b,r[5]=(1-(f+v))*b,r[6]=(m+g)*b,r[7]=0,r[8]=(p+w)*_,r[9]=(m-g)*_,r[10]=(1-(f+x))*_,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,i){const r=this.elements;let s=Ys.set(r[0],r[1],r[2]).length();const o=Ys.set(r[4],r[5],r[6]).length(),a=Ys.set(r[8],r[9],r[10]).length();this.determinant()<0&&(s=-s),e.x=r[12],e.y=r[13],e.z=r[14],Nn.copy(this);const c=1/s,d=1/o,u=1/a;return Nn.elements[0]*=c,Nn.elements[1]*=c,Nn.elements[2]*=c,Nn.elements[4]*=d,Nn.elements[5]*=d,Nn.elements[6]*=d,Nn.elements[8]*=u,Nn.elements[9]*=u,Nn.elements[10]*=u,t.setFromRotationMatrix(Nn),i.x=s,i.y=o,i.z=a,this}makePerspective(e,t,i,r,s,o){o===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const a=this.elements,l=2*s/(t-e),c=2*s/(i-r),d=(t+e)/(t-e),u=(i+r)/(i-r),f=-(o+s)/(o-s),h=-2*o*s/(o-s);return a[0]=l,a[4]=0,a[8]=d,a[12]=0,a[1]=0,a[5]=c,a[9]=u,a[13]=0,a[2]=0,a[6]=0,a[10]=f,a[14]=h,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(e,t,i,r,s,o){const a=this.elements,l=1/(t-e),c=1/(i-r),d=1/(o-s),u=(t+e)*l,f=(i+r)*c,h=(o+s)*d;return a[0]=2*l,a[4]=0,a[8]=0,a[12]=-u,a[1]=0,a[5]=2*c,a[9]=0,a[13]=-f,a[2]=0,a[6]=0,a[10]=-2*d,a[14]=-h,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(e){const t=this.elements,i=e.elements;for(let r=0;r<16;r++)if(t[r]!==i[r])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}const Ys=new q,Nn=new tt,J6=new q(0,0,0),K6=new q(1,1,1),er=new q,tl=new q,hn=new q;class Qo{constructor(e=0,t=0,i=0,r=Qo.DefaultOrder){Object.defineProperty(this,"isEuler",{value:!0}),this._x=e,this._y=t,this._z=i,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,r){return this._x=e,this._y=t,this._z=i,this._order=r||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t,i){const r=Ke.clamp,s=e.elements,o=s[0],a=s[4],l=s[8],c=s[1],d=s[5],u=s[9],f=s[2],h=s[6],p=s[10];switch(t=t||this._order,t){case"XYZ":this._y=Math.asin(r(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,p),this._z=Math.atan2(-a,o)):(this._x=Math.atan2(h,d),this._z=0);break;case"YXZ":this._x=Math.asin(-r(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(l,p),this._z=Math.atan2(c,d)):(this._y=Math.atan2(-f,o),this._z=0);break;case"ZXY":this._x=Math.asin(r(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(-f,p),this._z=Math.atan2(-a,d)):(this._y=0,this._z=Math.atan2(c,o));break;case"ZYX":this._y=Math.asin(-r(f,-1,1)),Math.abs(f)<.9999999?(this._x=Math.atan2(h,p),this._z=Math.atan2(c,o)):(this._x=0,this._z=Math.atan2(-a,d));break;case"YZX":this._z=Math.asin(r(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-u,d),this._y=Math.atan2(-f,o)):(this._x=0,this._y=Math.atan2(l,p));break;case"XZY":this._z=Math.asin(-r(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(h,d),this._y=Math.atan2(l,o)):(this._x=Math.atan2(-u,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,i!==!1&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return Wg.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Wg,t,i)}setFromVector3(e,t){return this.set(e.x,e.y,e.z,t||this._order)}reorder(e){return $g.setFromEuler(this),this.setFromQuaternion($g,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}toVector3(e){return e?e.set(this._x,this._y,this._z):new q(this._x,this._y,this._z)}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}Qo.DefaultOrder="XYZ";Qo.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];const Wg=new tt,$g=new Vt;class _p{constructor(){this.mask=1}set(e){this.mask=1<<e|0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}}let Q6=0;const jg=new q,Zs=new Vt,Ti=new tt,nl=new q,da=new q,eM=new q,tM=new Vt,Xg=new q(1,0,0),Yg=new q(0,1,0),Zg=new q(0,0,1),nM={type:"added"},Jg={type:"removed"};function We(){Object.defineProperty(this,"id",{value:Q6++}),this.uuid=Ke.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=We.DefaultUp.clone();const n=new q,e=new Qo,t=new Vt,i=new q(1,1,1);function r(){t.setFromEuler(e,!1)}function s(){e.setFromQuaternion(t,void 0,!1)}e._onChange(r),t._onChange(s),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:n},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:t},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new tt},normalMatrix:{value:new vn}}),this.matrix=new tt,this.matrixWorld=new tt,this.matrixAutoUpdate=We.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new _p,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}We.DefaultUp=new q(0,1,0);We.DefaultMatrixAutoUpdate=!0;We.prototype=Object.assign(Object.create(Gi.prototype),{constructor:We,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(n){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(n),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(n){return this.quaternion.premultiply(n),this},setRotationFromAxisAngle:function(n,e){this.quaternion.setFromAxisAngle(n,e)},setRotationFromEuler:function(n){this.quaternion.setFromEuler(n,!0)},setRotationFromMatrix:function(n){this.quaternion.setFromRotationMatrix(n)},setRotationFromQuaternion:function(n){this.quaternion.copy(n)},rotateOnAxis:function(n,e){return Zs.setFromAxisAngle(n,e),this.quaternion.multiply(Zs),this},rotateOnWorldAxis:function(n,e){return Zs.setFromAxisAngle(n,e),this.quaternion.premultiply(Zs),this},rotateX:function(n){return this.rotateOnAxis(Xg,n)},rotateY:function(n){return this.rotateOnAxis(Yg,n)},rotateZ:function(n){return this.rotateOnAxis(Zg,n)},translateOnAxis:function(n,e){return jg.copy(n).applyQuaternion(this.quaternion),this.position.add(jg.multiplyScalar(e)),this},translateX:function(n){return this.translateOnAxis(Xg,n)},translateY:function(n){return this.translateOnAxis(Yg,n)},translateZ:function(n){return this.translateOnAxis(Zg,n)},localToWorld:function(n){return n.applyMatrix4(this.matrixWorld)},worldToLocal:function(n){return n.applyMatrix4(Ti.copy(this.matrixWorld).invert())},lookAt:function(n,e,t){n.isVector3?nl.copy(n):nl.set(n,e,t);const i=this.parent;this.updateWorldMatrix(!0,!1),da.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ti.lookAt(da,nl,this.up):Ti.lookAt(nl,da,this.up),this.quaternion.setFromRotationMatrix(Ti),i&&(Ti.extractRotation(i.matrixWorld),Zs.setFromRotationMatrix(Ti),this.quaternion.premultiply(Zs.invert()))},add:function(n){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return n===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",n),this):(n&&n.isObject3D?(n.parent!==null&&n.parent.remove(n),n.parent=this,this.children.push(n),n.dispatchEvent(nM)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",n),this)},remove:function(n){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(n);return e!==-1&&(n.parent=null,this.children.splice(e,1),n.dispatchEvent(Jg)),this},clear:function(){for(let n=0;n<this.children.length;n++){const e=this.children[n];e.parent=null,e.dispatchEvent(Jg)}return this.children.length=0,this},attach:function(n){return this.updateWorldMatrix(!0,!1),Ti.copy(this.matrixWorld).invert(),n.parent!==null&&(n.parent.updateWorldMatrix(!0,!1),Ti.multiply(n.parent.matrixWorld)),n.applyMatrix4(Ti),n.updateWorldMatrix(!1,!1),this.add(n),this},getObjectById:function(n){return this.getObjectByProperty("id",n)},getObjectByName:function(n){return this.getObjectByProperty("name",n)},getObjectByProperty:function(n,e){if(this[n]===e)return this;for(let t=0,i=this.children.length;t<i;t++){const s=this.children[t].getObjectByProperty(n,e);if(s!==void 0)return s}},getWorldPosition:function(n){return n===void 0&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),n=new q),this.updateWorldMatrix(!0,!1),n.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(n){return n===void 0&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),n=new Vt),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(da,n,eM),n},getWorldScale:function(n){return n===void 0&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),n=new q),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(da,tM,n),n},getWorldDirection:function(n){n===void 0&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),n=new q),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return n.set(e[8],e[9],e[10]).normalize()},raycast:function(){},traverse:function(n){n(this);const e=this.children;for(let t=0,i=e.length;t<i;t++)e[t].traverse(n)},traverseVisible:function(n){if(this.visible===!1)return;n(this);const e=this.children;for(let t=0,i=e.length;t<i;t++)e[t].traverseVisible(n)},traverseAncestors:function(n){const e=this.parent;e!==null&&(n(e),e.traverseAncestors(n))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(n){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||n)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,n=!0);const e=this.children;for(let t=0,i=e.length;t<i;t++)e[t].updateMatrixWorld(n)},updateWorldMatrix:function(n,e){const t=this.parent;if(n===!0&&t!==null&&t.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),e===!0){const i=this.children;for(let r=0,s=i.length;r<s;r++)i[r].updateWorldMatrix(!1,!0)}},toJSON:function(n){const e=n===void 0||typeof n=="string",t={};e&&(n={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},t.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON());function r(o,a){return o[a.uuid]===void 0&&(o[a.uuid]=a.toJSON(n)),a.uuid}if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(n.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const a=o.shapes;if(Array.isArray(a))for(let l=0,c=a.length;l<c;l++){const d=a[l];r(n.shapes,d)}else r(n.shapes,a)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(n.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let a=0,l=this.material.length;a<l;a++)o.push(r(n.materials,this.material[a]));i.material=o}else i.material=r(n.materials,this.material);if(this.children.length>0){i.children=[];for(let o=0;o<this.children.length;o++)i.children.push(this.children[o].toJSON(n).object)}if(this.animations.length>0){i.animations=[];for(let o=0;o<this.animations.length;o++){const a=this.animations[o];i.animations.push(r(n.animations,a))}}if(e){const o=s(n.geometries),a=s(n.materials),l=s(n.textures),c=s(n.images),d=s(n.shapes),u=s(n.skeletons),f=s(n.animations);o.length>0&&(t.geometries=o),a.length>0&&(t.materials=a),l.length>0&&(t.textures=l),c.length>0&&(t.images=c),d.length>0&&(t.shapes=d),u.length>0&&(t.skeletons=u),f.length>0&&(t.animations=f)}return t.object=i,t;function s(o){const a=[];for(const l in o){const c=o[l];delete c.metadata,a.push(c)}return a}},clone:function(n){return new this.constructor().copy(this,n)},copy:function(n,e=!0){if(this.name=n.name,this.up.copy(n.up),this.position.copy(n.position),this.rotation.order=n.rotation.order,this.quaternion.copy(n.quaternion),this.scale.copy(n.scale),this.matrix.copy(n.matrix),this.matrixWorld.copy(n.matrixWorld),this.matrixAutoUpdate=n.matrixAutoUpdate,this.matrixWorldNeedsUpdate=n.matrixWorldNeedsUpdate,this.layers.mask=n.layers.mask,this.visible=n.visible,this.castShadow=n.castShadow,this.receiveShadow=n.receiveShadow,this.frustumCulled=n.frustumCulled,this.renderOrder=n.renderOrder,this.userData=JSON.parse(JSON.stringify(n.userData)),e===!0)for(let t=0;t<n.children.length;t++){const i=n.children[t];this.add(i.clone())}return this}});const yh=new q,iM=new q,rM=new vn;class ri{constructor(e,t){Object.defineProperty(this,"isPlane",{value:!0}),this.normal=e!==void 0?e:new q(1,0,0),this.constant=t!==void 0?t:0}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,r){return this.normal.set(e,t,i),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){const r=yh.subVectors(i,t).cross(iM.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}clone(){return new this.constructor().copy(this)}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t===void 0&&(console.warn("THREE.Plane: .projectPoint() target is now required"),t=new q),t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){t===void 0&&(console.warn("THREE.Plane: .intersectLine() target is now required"),t=new q);const i=e.delta(yh),r=this.normal.dot(i);if(r===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):void 0;const s=-(e.start.dot(this.normal)+this.constant)/r;if(!(s<0||s>1))return t.copy(i).multiplyScalar(s).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e===void 0&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),e=new q),e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const i=t||rM.getNormalMatrix(e),r=this.coplanarPoint(yh).applyMatrix4(e),s=this.normal.applyMatrix3(i).normalize();return this.constant=-r.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}}const Bn=new q,Ai=new q,bh=new q,Li=new q,Js=new q,Ks=new q,Kg=new q,_h=new q,wh=new q,Mh=new q;class kt{constructor(e,t,i){this.a=e!==void 0?e:new q,this.b=t!==void 0?t:new q,this.c=i!==void 0?i:new q}static getNormal(e,t,i,r){r===void 0&&(console.warn("THREE.Triangle: .getNormal() target is now required"),r=new q),r.subVectors(i,t),Bn.subVectors(e,t),r.cross(Bn);const s=r.lengthSq();return s>0?r.multiplyScalar(1/Math.sqrt(s)):r.set(0,0,0)}static getBarycoord(e,t,i,r,s){Bn.subVectors(r,t),Ai.subVectors(i,t),bh.subVectors(e,t);const o=Bn.dot(Bn),a=Bn.dot(Ai),l=Bn.dot(bh),c=Ai.dot(Ai),d=Ai.dot(bh),u=o*c-a*a;if(s===void 0&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),s=new q),u===0)return s.set(-2,-1,-1);const f=1/u,h=(c*l-a*d)*f,p=(o*d-a*l)*f;return s.set(1-h-p,p,h)}static containsPoint(e,t,i,r){return this.getBarycoord(e,t,i,r,Li),Li.x>=0&&Li.y>=0&&Li.x+Li.y<=1}static getUV(e,t,i,r,s,o,a,l){return this.getBarycoord(e,t,i,r,Li),l.set(0,0),l.addScaledVector(s,Li.x),l.addScaledVector(o,Li.y),l.addScaledVector(a,Li.z),l}static isFrontFacing(e,t,i,r){return Bn.subVectors(i,t),Ai.subVectors(e,t),Bn.cross(Ai).dot(r)<0}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,r){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[r]),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Bn.subVectors(this.c,this.b),Ai.subVectors(this.a,this.b),Bn.cross(Ai).length()*.5}getMidpoint(e){return e===void 0&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),e=new q),e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return kt.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e===void 0&&(console.warn("THREE.Triangle: .getPlane() target is now required"),e=new ri),e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return kt.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,i,r,s){return kt.getUV(e,this.a,this.b,this.c,t,i,r,s)}containsPoint(e){return kt.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return kt.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){t===void 0&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),t=new q);const i=this.a,r=this.b,s=this.c;let o,a;Js.subVectors(r,i),Ks.subVectors(s,i),_h.subVectors(e,i);const l=Js.dot(_h),c=Ks.dot(_h);if(l<=0&&c<=0)return t.copy(i);wh.subVectors(e,r);const d=Js.dot(wh),u=Ks.dot(wh);if(d>=0&&u<=d)return t.copy(r);const f=l*u-d*c;if(f<=0&&l>=0&&d<=0)return o=l/(l-d),t.copy(i).addScaledVector(Js,o);Mh.subVectors(e,s);const h=Js.dot(Mh),p=Ks.dot(Mh);if(p>=0&&h<=p)return t.copy(s);const x=h*c-l*p;if(x<=0&&c>=0&&p<=0)return a=c/(c-p),t.copy(i).addScaledVector(Ks,a);const m=d*p-h*u;if(m<=0&&u-d>=0&&h-p>=0)return Kg.subVectors(s,r),a=(u-d)/(u-d+(h-p)),t.copy(r).addScaledVector(Kg,a);const v=1/(m+x+f);return o=x*v,a=f*v,t.copy(i).addScaledVector(Js,o).addScaledVector(Ks,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const my={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Un={h:0,s:0,l:0},il={h:0,s:0,l:0};function Sh(n,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?n+(e-n)*6*t:t<1/2?e:t<2/3?n+(e-n)*6*(2/3-t):n}function Eh(n){return n<.04045?n*.0773993808:Math.pow(n*.9478672986+.0521327014,2.4)}function Th(n){return n<.0031308?n*12.92:1.055*Math.pow(n,.41666)-.055}class Ue{constructor(e,t,i){return Object.defineProperty(this,"isColor",{value:!0}),t===void 0&&i===void 0?this.set(e):this.setRGB(e,t,i)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,this}setRGB(e,t,i){return this.r=e,this.g=t,this.b=i,this}setHSL(e,t,i){if(e=Ke.euclideanModulo(e,1),t=Ke.clamp(t,0,1),i=Ke.clamp(i,0,1),t===0)this.r=this.g=this.b=i;else{const r=i<=.5?i*(1+t):i+t-i*t,s=2*i-r;this.r=Sh(s,r,e+1/3),this.g=Sh(s,r,e),this.b=Sh(s,r,e-1/3)}return this}setStyle(e){function t(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let r;const s=i[1],o=i[2];switch(s){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,t(r[4]),this;if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,t(r[4]),this;break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)){const a=parseFloat(r[1])/360,l=parseInt(r[2],10)/100,c=parseInt(r[3],10)/100;return t(r[4]),this.setHSL(a,l,c)}break}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=i[1],s=r.length;if(s===3)return this.r=parseInt(r.charAt(0)+r.charAt(0),16)/255,this.g=parseInt(r.charAt(1)+r.charAt(1),16)/255,this.b=parseInt(r.charAt(2)+r.charAt(2),16)/255,this;if(s===6)return this.r=parseInt(r.charAt(0)+r.charAt(1),16)/255,this.g=parseInt(r.charAt(2)+r.charAt(3),16)/255,this.b=parseInt(r.charAt(4)+r.charAt(5),16)/255,this}return e&&e.length>0?this.setColorName(e):this}setColorName(e){const t=my[e];return t!==void 0?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copyGammaToLinear(e,t=2){return this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this}copyLinearToGamma(e,t=2){const i=t>0?1/t:1;return this.r=Math.pow(e.r,i),this.g=Math.pow(e.g,i),this.b=Math.pow(e.b,i),this}convertGammaToLinear(e){return this.copyGammaToLinear(this,e),this}convertLinearToGamma(e){return this.copyLinearToGamma(this,e),this}copySRGBToLinear(e){return this.r=Eh(e.r),this.g=Eh(e.g),this.b=Eh(e.b),this}copyLinearToSRGB(e){return this.r=Th(e.r),this.g=Th(e.g),this.b=Th(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return this.r*255<<16^this.g*255<<8^this.b*255<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(e){e===void 0&&(console.warn("THREE.Color: .getHSL() target is now required"),e={h:0,s:0,l:0});const t=this.r,i=this.g,r=this.b,s=Math.max(t,i,r),o=Math.min(t,i,r);let a,l;const c=(o+s)/2;if(o===s)a=0,l=0;else{const d=s-o;switch(l=c<=.5?d/(s+o):d/(2-s-o),s){case t:a=(i-r)/d+(i<r?6:0);break;case i:a=(r-t)/d+2;break;case r:a=(t-i)/d+4;break}a/=6}return e.h=a,e.s=l,e.l=c,e}getStyle(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"}offsetHSL(e,t,i){return this.getHSL(Un),Un.h+=e,Un.s+=t,Un.l+=i,this.setHSL(Un.h,Un.s,Un.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(Un),e.getHSL(il);const i=Ke.lerp(Un.h,il.h,t),r=Ke.lerp(Un.s,il.s,t),s=Ke.lerp(Un.l,il.l,t);return this.setHSL(i,r,s),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),e.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}Ue.NAMES=my;Ue.prototype.r=1;Ue.prototype.g=1;Ue.prototype.b=1;class wp{constructor(e,t,i,r,s,o=0){this.a=e,this.b=t,this.c=i,this.normal=r&&r.isVector3?r:new q,this.vertexNormals=Array.isArray(r)?r:[],this.color=s&&s.isColor?s:new Ue,this.vertexColors=Array.isArray(s)?s:[],this.materialIndex=o}clone(){return new this.constructor().copy(this)}copy(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(let t=0,i=e.vertexNormals.length;t<i;t++)this.vertexNormals[t]=e.vertexNormals[t].clone();for(let t=0,i=e.vertexColors.length;t<i;t++)this.vertexColors[t]=e.vertexColors[t].clone();return this}}let sM=0;function Je(){Object.defineProperty(this,"id",{value:sM++}),this.uuid=Ke.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=yo,this.side=Xo,this.flatShading=!1,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=pp,this.blendDst=mp,this.blendEquation=Vr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=$l,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=py,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=kl,this.stencilZFail=kl,this.stencilZPass=kl,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}Je.prototype=Object.assign(Object.create(Gi.prototype),{constructor:Je,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(n){if(n!==void 0)for(const e in n){const t=n[e];if(t===void 0){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if(e==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=t===hp;continue}const i=this[e];if(i===void 0){console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.");continue}i&&i.isColor?i.set(t):i&&i.isVector3&&t&&t.isVector3?i.copy(t):this[e]=t}},toJSON:function(n){const e=n===void 0||typeof n=="string";e&&(n={textures:{},images:{}});const t={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),this.color&&this.color.isColor&&(t.color=this.color.getHex()),this.roughness!==void 0&&(t.roughness=this.roughness),this.metalness!==void 0&&(t.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(t.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(t.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(t.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(t.specular=this.specular.getHex()),this.shininess!==void 0&&(t.shininess=this.shininess),this.clearcoat!==void 0&&(t.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(t.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(t.clearcoatMap=this.clearcoatMap.toJSON(n).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(t.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(n).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(t.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(n).uuid,t.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(t.map=this.map.toJSON(n).uuid),this.matcap&&this.matcap.isTexture&&(t.matcap=this.matcap.toJSON(n).uuid),this.alphaMap&&this.alphaMap.isTexture&&(t.alphaMap=this.alphaMap.toJSON(n).uuid),this.lightMap&&this.lightMap.isTexture&&(t.lightMap=this.lightMap.toJSON(n).uuid),this.aoMap&&this.aoMap.isTexture&&(t.aoMap=this.aoMap.toJSON(n).uuid,t.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(t.bumpMap=this.bumpMap.toJSON(n).uuid,t.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(t.normalMap=this.normalMap.toJSON(n).uuid,t.normalMapType=this.normalMapType,t.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(t.displacementMap=this.displacementMap.toJSON(n).uuid,t.displacementScale=this.displacementScale,t.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(t.roughnessMap=this.roughnessMap.toJSON(n).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(t.metalnessMap=this.metalnessMap.toJSON(n).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(t.emissiveMap=this.emissiveMap.toJSON(n).uuid),this.specularMap&&this.specularMap.isTexture&&(t.specularMap=this.specularMap.toJSON(n).uuid),this.envMap&&this.envMap.isTexture&&(t.envMap=this.envMap.toJSON(n).uuid,t.reflectivity=this.reflectivity,t.refractionRatio=this.refractionRatio,this.combine!==void 0&&(t.combine=this.combine),this.envMapIntensity!==void 0&&(t.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(t.gradientMap=this.gradientMap.toJSON(n).uuid),this.size!==void 0&&(t.size=this.size),this.sizeAttenuation!==void 0&&(t.sizeAttenuation=this.sizeAttenuation),this.blending!==yo&&(t.blending=this.blending),this.flatShading===!0&&(t.flatShading=this.flatShading),this.side!==Xo&&(t.side=this.side),this.vertexColors&&(t.vertexColors=!0),this.opacity<1&&(t.opacity=this.opacity),this.transparent===!0&&(t.transparent=this.transparent),t.depthFunc=this.depthFunc,t.depthTest=this.depthTest,t.depthWrite=this.depthWrite,t.stencilWrite=this.stencilWrite,t.stencilWriteMask=this.stencilWriteMask,t.stencilFunc=this.stencilFunc,t.stencilRef=this.stencilRef,t.stencilFuncMask=this.stencilFuncMask,t.stencilFail=this.stencilFail,t.stencilZFail=this.stencilZFail,t.stencilZPass=this.stencilZPass,this.rotation&&this.rotation!==0&&(t.rotation=this.rotation),this.polygonOffset===!0&&(t.polygonOffset=!0),this.polygonOffsetFactor!==0&&(t.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(t.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&this.linewidth!==1&&(t.linewidth=this.linewidth),this.dashSize!==void 0&&(t.dashSize=this.dashSize),this.gapSize!==void 0&&(t.gapSize=this.gapSize),this.scale!==void 0&&(t.scale=this.scale),this.dithering===!0&&(t.dithering=!0),this.alphaTest>0&&(t.alphaTest=this.alphaTest),this.premultipliedAlpha===!0&&(t.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(t.wireframe=this.wireframe),this.wireframeLinewidth>1&&(t.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(t.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(t.wireframeLinejoin=this.wireframeLinejoin),this.morphTargets===!0&&(t.morphTargets=!0),this.morphNormals===!0&&(t.morphNormals=!0),this.skinning===!0&&(t.skinning=!0),this.visible===!1&&(t.visible=!1),this.toneMapped===!1&&(t.toneMapped=!1),JSON.stringify(this.userData)!=="{}"&&(t.userData=this.userData);function i(r){const s=[];for(const o in r){const a=r[o];delete a.metadata,s.push(a)}return s}if(e){const r=i(n.textures),s=i(n.images);r.length>0&&(t.textures=r),s.length>0&&(t.images=s)}return t},clone:function(){return new this.constructor().copy(this)},copy:function(n){this.name=n.name,this.fog=n.fog,this.blending=n.blending,this.side=n.side,this.flatShading=n.flatShading,this.vertexColors=n.vertexColors,this.opacity=n.opacity,this.transparent=n.transparent,this.blendSrc=n.blendSrc,this.blendDst=n.blendDst,this.blendEquation=n.blendEquation,this.blendSrcAlpha=n.blendSrcAlpha,this.blendDstAlpha=n.blendDstAlpha,this.blendEquationAlpha=n.blendEquationAlpha,this.depthFunc=n.depthFunc,this.depthTest=n.depthTest,this.depthWrite=n.depthWrite,this.stencilWriteMask=n.stencilWriteMask,this.stencilFunc=n.stencilFunc,this.stencilRef=n.stencilRef,this.stencilFuncMask=n.stencilFuncMask,this.stencilFail=n.stencilFail,this.stencilZFail=n.stencilZFail,this.stencilZPass=n.stencilZPass,this.stencilWrite=n.stencilWrite;const e=n.clippingPlanes;let t=null;if(e!==null){const i=e.length;t=new Array(i);for(let r=0;r!==i;++r)t[r]=e[r].clone()}return this.clippingPlanes=t,this.clipIntersection=n.clipIntersection,this.clipShadows=n.clipShadows,this.shadowSide=n.shadowSide,this.colorWrite=n.colorWrite,this.precision=n.precision,this.polygonOffset=n.polygonOffset,this.polygonOffsetFactor=n.polygonOffsetFactor,this.polygonOffsetUnits=n.polygonOffsetUnits,this.dithering=n.dithering,this.alphaTest=n.alphaTest,this.premultipliedAlpha=n.premultipliedAlpha,this.visible=n.visible,this.toneMapped=n.toneMapped,this.userData=JSON.parse(JSON.stringify(n.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}});Object.defineProperty(Je.prototype,"needsUpdate",{set:function(n){n===!0&&this.version++}});function wn(n){Je.call(this),this.type="MeshBasicMaterial",this.color=new Ue(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=yc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(n)}wn.prototype=Object.create(Je.prototype);wn.prototype.constructor=wn;wn.prototype.isMeshBasicMaterial=!0;wn.prototype.copy=function(n){return Je.prototype.copy.call(this,n),this.color.copy(n.color),this.map=n.map,this.lightMap=n.lightMap,this.lightMapIntensity=n.lightMapIntensity,this.aoMap=n.aoMap,this.aoMapIntensity=n.aoMapIntensity,this.specularMap=n.specularMap,this.alphaMap=n.alphaMap,this.envMap=n.envMap,this.combine=n.combine,this.reflectivity=n.reflectivity,this.refractionRatio=n.refractionRatio,this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this.wireframeLinecap=n.wireframeLinecap,this.wireframeLinejoin=n.wireframeLinejoin,this.skinning=n.skinning,this.morphTargets=n.morphTargets,this};const mt=new q,rl=new Ee;function Ze(n,e,t){if(Array.isArray(n))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=n,this.itemSize=e,this.count=n!==void 0?n.length/e:0,this.normalized=t===!0,this.usage=Sc,this.updateRange={offset:0,count:-1},this.version=0}Object.defineProperty(Ze.prototype,"needsUpdate",{set:function(n){n===!0&&this.version++}});Object.assign(Ze.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(n){return this.usage=n,this},copy:function(n){return this.name=n.name,this.array=new n.array.constructor(n.array),this.itemSize=n.itemSize,this.count=n.count,this.normalized=n.normalized,this.usage=n.usage,this},copyAt:function(n,e,t){n*=this.itemSize,t*=e.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[n+i]=e.array[t+i];return this},copyArray:function(n){return this.array.set(n),this},copyColorsArray:function(n){const e=this.array;let t=0;for(let i=0,r=n.length;i<r;i++){let s=n[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),s=new Ue),e[t++]=s.r,e[t++]=s.g,e[t++]=s.b}return this},copyVector2sArray:function(n){const e=this.array;let t=0;for(let i=0,r=n.length;i<r;i++){let s=n[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),s=new Ee),e[t++]=s.x,e[t++]=s.y}return this},copyVector3sArray:function(n){const e=this.array;let t=0;for(let i=0,r=n.length;i<r;i++){let s=n[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),s=new q),e[t++]=s.x,e[t++]=s.y,e[t++]=s.z}return this},copyVector4sArray:function(n){const e=this.array;let t=0;for(let i=0,r=n.length;i<r;i++){let s=n[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),s=new ut),e[t++]=s.x,e[t++]=s.y,e[t++]=s.z,e[t++]=s.w}return this},applyMatrix3:function(n){if(this.itemSize===2)for(let e=0,t=this.count;e<t;e++)rl.fromBufferAttribute(this,e),rl.applyMatrix3(n),this.setXY(e,rl.x,rl.y);else if(this.itemSize===3)for(let e=0,t=this.count;e<t;e++)mt.fromBufferAttribute(this,e),mt.applyMatrix3(n),this.setXYZ(e,mt.x,mt.y,mt.z);return this},applyMatrix4:function(n){for(let e=0,t=this.count;e<t;e++)mt.x=this.getX(e),mt.y=this.getY(e),mt.z=this.getZ(e),mt.applyMatrix4(n),this.setXYZ(e,mt.x,mt.y,mt.z);return this},applyNormalMatrix:function(n){for(let e=0,t=this.count;e<t;e++)mt.x=this.getX(e),mt.y=this.getY(e),mt.z=this.getZ(e),mt.applyNormalMatrix(n),this.setXYZ(e,mt.x,mt.y,mt.z);return this},transformDirection:function(n){for(let e=0,t=this.count;e<t;e++)mt.x=this.getX(e),mt.y=this.getY(e),mt.z=this.getZ(e),mt.transformDirection(n),this.setXYZ(e,mt.x,mt.y,mt.z);return this},set:function(n,e=0){return this.array.set(n,e),this},getX:function(n){return this.array[n*this.itemSize]},setX:function(n,e){return this.array[n*this.itemSize]=e,this},getY:function(n){return this.array[n*this.itemSize+1]},setY:function(n,e){return this.array[n*this.itemSize+1]=e,this},getZ:function(n){return this.array[n*this.itemSize+2]},setZ:function(n,e){return this.array[n*this.itemSize+2]=e,this},getW:function(n){return this.array[n*this.itemSize+3]},setW:function(n,e){return this.array[n*this.itemSize+3]=e,this},setXY:function(n,e,t){return n*=this.itemSize,this.array[n+0]=e,this.array[n+1]=t,this},setXYZ:function(n,e,t,i){return n*=this.itemSize,this.array[n+0]=e,this.array[n+1]=t,this.array[n+2]=i,this},setXYZW:function(n,e,t,i,r){return n*=this.itemSize,this.array[n+0]=e,this.array[n+1]=t,this.array[n+2]=i,this.array[n+3]=r,this},onUpload:function(n){return this.onUploadCallback=n,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}});function Na(n,e,t){Ze.call(this,new Int8Array(n),e,t)}Na.prototype=Object.create(Ze.prototype);Na.prototype.constructor=Na;function Ba(n,e,t){Ze.call(this,new Uint8Array(n),e,t)}Ba.prototype=Object.create(Ze.prototype);Ba.prototype.constructor=Ba;function Ua(n,e,t){Ze.call(this,new Uint8ClampedArray(n),e,t)}Ua.prototype=Object.create(Ze.prototype);Ua.prototype.constructor=Ua;function Ga(n,e,t){Ze.call(this,new Int16Array(n),e,t)}Ga.prototype=Object.create(Ze.prototype);Ga.prototype.constructor=Ga;function ls(n,e,t){Ze.call(this,new Uint16Array(n),e,t)}ls.prototype=Object.create(Ze.prototype);ls.prototype.constructor=ls;function ka(n,e,t){Ze.call(this,new Int32Array(n),e,t)}ka.prototype=Object.create(Ze.prototype);ka.prototype.constructor=ka;function ds(n,e,t){Ze.call(this,new Uint32Array(n),e,t)}ds.prototype=Object.create(Ze.prototype);ds.prototype.constructor=ds;function Ha(n,e,t){Ze.call(this,new Uint16Array(n),e,t)}Ha.prototype=Object.create(Ze.prototype);Ha.prototype.constructor=Ha;Ha.prototype.isFloat16BufferAttribute=!0;function ke(n,e,t){Ze.call(this,new Float32Array(n),e,t)}ke.prototype=Object.create(Ze.prototype);ke.prototype.constructor=ke;function Va(n,e,t){Ze.call(this,new Float64Array(n),e,t)}Va.prototype=Object.create(Ze.prototype);Va.prototype.constructor=Va;function xy(n){if(n.length===0)return-1/0;let e=n[0];for(let t=1,i=n.length;t<i;++t)n[t]>e&&(e=n[t]);return e}const oM={Int8Array,Uint8Array,Uint8ClampedArray:typeof Uint8ClampedArray<"u"?Uint8ClampedArray:Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Ma(n,e){return new oM[n](e)}let aM=0;const ei=new tt,Ah=new We,Qs=new q,pn=new ki,ua=new ki,qt=new q;function Xe(){Object.defineProperty(this,"id",{value:aM++}),this.uuid=Ke.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}Xe.prototype=Object.assign(Object.create(Gi.prototype),{constructor:Xe,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(n){return Array.isArray(n)?this.index=new(xy(n)>65535?ds:ls)(n,1):this.index=n,this},getAttribute:function(n){return this.attributes[n]},setAttribute:function(n,e){return this.attributes[n]=e,this},deleteAttribute:function(n){return delete this.attributes[n],this},hasAttribute:function(n){return this.attributes[n]!==void 0},addGroup:function(n,e,t=0){this.groups.push({start:n,count:e,materialIndex:t})},clearGroups:function(){this.groups=[]},setDrawRange:function(n,e){this.drawRange.start=n,this.drawRange.count=e},applyMatrix4:function(n){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(n),e.needsUpdate=!0);const t=this.attributes.normal;if(t!==void 0){const r=new vn().getNormalMatrix(n);t.applyNormalMatrix(r),t.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(n),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this},rotateX:function(n){return ei.makeRotationX(n),this.applyMatrix4(ei),this},rotateY:function(n){return ei.makeRotationY(n),this.applyMatrix4(ei),this},rotateZ:function(n){return ei.makeRotationZ(n),this.applyMatrix4(ei),this},translate:function(n,e,t){return ei.makeTranslation(n,e,t),this.applyMatrix4(ei),this},scale:function(n,e,t){return ei.makeScale(n,e,t),this.applyMatrix4(ei),this},lookAt:function(n){return Ah.lookAt(n),Ah.updateMatrix(),this.applyMatrix4(Ah.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Qs).negate(),this.translate(Qs.x,Qs.y,Qs.z),this},setFromPoints:function(n){const e=[];for(let t=0,i=n.length;t<i;t++){const r=n[t];e.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new ke(e,3)),this},computeBoundingBox:function(){this.boundingBox===null&&(this.boundingBox=new ki);const n=this.attributes.position,e=this.morphAttributes.position;if(n&&n.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new q(-1/0,-1/0,-1/0),new q(1/0,1/0,1/0));return}if(n!==void 0){if(this.boundingBox.setFromBufferAttribute(n),e)for(let t=0,i=e.length;t<i;t++){const r=e[t];pn.setFromBufferAttribute(r),this.morphTargetsRelative?(qt.addVectors(this.boundingBox.min,pn.min),this.boundingBox.expandByPoint(qt),qt.addVectors(this.boundingBox.max,pn.max),this.boundingBox.expandByPoint(qt)):(this.boundingBox.expandByPoint(pn.min),this.boundingBox.expandByPoint(pn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){this.boundingSphere===null&&(this.boundingSphere=new Tr);const n=this.attributes.position,e=this.morphAttributes.position;if(n&&n.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new q,1/0);return}if(n){const t=this.boundingSphere.center;if(pn.setFromBufferAttribute(n),e)for(let r=0,s=e.length;r<s;r++){const o=e[r];ua.setFromBufferAttribute(o),this.morphTargetsRelative?(qt.addVectors(pn.min,ua.min),pn.expandByPoint(qt),qt.addVectors(pn.max,ua.max),pn.expandByPoint(qt)):(pn.expandByPoint(ua.min),pn.expandByPoint(ua.max))}pn.getCenter(t);let i=0;for(let r=0,s=n.count;r<s;r++)qt.fromBufferAttribute(n,r),i=Math.max(i,t.distanceToSquared(qt));if(e)for(let r=0,s=e.length;r<s;r++){const o=e[r],a=this.morphTargetsRelative;for(let l=0,c=o.count;l<c;l++)qt.fromBufferAttribute(o,l),a&&(Qs.fromBufferAttribute(n,l),qt.add(Qs)),i=Math.max(i,t.distanceToSquared(qt))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeTangents:function(){const n=this.index,e=this.attributes;if(n===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const t=n.array,i=e.position.array,r=e.normal.array,s=e.uv.array,o=i.length/3;e.tangent===void 0&&this.setAttribute("tangent",new Ze(new Float32Array(4*o),4));const a=e.tangent.array,l=[],c=[];for(let E=0;E<o;E++)l[E]=new q,c[E]=new q;const d=new q,u=new q,f=new q,h=new Ee,p=new Ee,x=new Ee,m=new q,v=new q;function g(E,R,I){d.fromArray(i,E*3),u.fromArray(i,R*3),f.fromArray(i,I*3),h.fromArray(s,E*2),p.fromArray(s,R*2),x.fromArray(s,I*2),u.sub(d),f.sub(d),p.sub(h),x.sub(h);const $=1/(p.x*x.y-x.x*p.y);isFinite($)&&(m.copy(u).multiplyScalar(x.y).addScaledVector(f,-p.y).multiplyScalar($),v.copy(f).multiplyScalar(p.x).addScaledVector(u,-x.x).multiplyScalar($),l[E].add(m),l[R].add(m),l[I].add(m),c[E].add(v),c[R].add(v),c[I].add(v))}let w=this.groups;w.length===0&&(w=[{start:0,count:t.length}]);for(let E=0,R=w.length;E<R;++E){const I=w[E],$=I.start,W=I.count;for(let L=$,z=$+W;L<z;L+=3)g(t[L+0],t[L+1],t[L+2])}const y=new q,M=new q,b=new q,_=new q;function S(E){b.fromArray(r,E*3),_.copy(b);const R=l[E];y.copy(R),y.sub(b.multiplyScalar(b.dot(R))).normalize(),M.crossVectors(_,R);const $=M.dot(c[E])<0?-1:1;a[E*4]=y.x,a[E*4+1]=y.y,a[E*4+2]=y.z,a[E*4+3]=$}for(let E=0,R=w.length;E<R;++E){const I=w[E],$=I.start,W=I.count;for(let L=$,z=$+W;L<z;L+=3)S(t[L+0]),S(t[L+1]),S(t[L+2])}},computeVertexNormals:function(){const n=this.index,e=this.getAttribute("position");if(e!==void 0){let t=this.getAttribute("normal");if(t===void 0)t=new Ze(new Float32Array(e.count*3),3),this.setAttribute("normal",t);else for(let u=0,f=t.count;u<f;u++)t.setXYZ(u,0,0,0);const i=new q,r=new q,s=new q,o=new q,a=new q,l=new q,c=new q,d=new q;if(n)for(let u=0,f=n.count;u<f;u+=3){const h=n.getX(u+0),p=n.getX(u+1),x=n.getX(u+2);i.fromBufferAttribute(e,h),r.fromBufferAttribute(e,p),s.fromBufferAttribute(e,x),c.subVectors(s,r),d.subVectors(i,r),c.cross(d),o.fromBufferAttribute(t,h),a.fromBufferAttribute(t,p),l.fromBufferAttribute(t,x),o.add(c),a.add(c),l.add(c),t.setXYZ(h,o.x,o.y,o.z),t.setXYZ(p,a.x,a.y,a.z),t.setXYZ(x,l.x,l.y,l.z)}else for(let u=0,f=e.count;u<f;u+=3)i.fromBufferAttribute(e,u+0),r.fromBufferAttribute(e,u+1),s.fromBufferAttribute(e,u+2),c.subVectors(s,r),d.subVectors(i,r),c.cross(d),t.setXYZ(u+0,c.x,c.y,c.z),t.setXYZ(u+1,c.x,c.y,c.z),t.setXYZ(u+2,c.x,c.y,c.z);this.normalizeNormals(),t.needsUpdate=!0}},merge:function(n,e){if(!(n&&n.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",n);return}e===void 0&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const t=this.attributes;for(const i in t){if(n.attributes[i]===void 0)continue;const s=t[i].array,o=n.attributes[i],a=o.array,l=o.itemSize*e,c=Math.min(a.length,s.length-l);for(let d=0,u=l;d<c;d++,u++)s[u]=a[d]}return this},normalizeNormals:function(){const n=this.attributes.normal;for(let e=0,t=n.count;e<t;e++)qt.fromBufferAttribute(n,e),qt.normalize(),n.setXYZ(e,qt.x,qt.y,qt.z)},toNonIndexed:function(){function n(o,a){const l=o.array,c=o.itemSize,d=o.normalized,u=new l.constructor(a.length*c);let f=0,h=0;for(let p=0,x=a.length;p<x;p++){f=a[p]*c;for(let m=0;m<c;m++)u[h++]=l[f++]}return new Ze(u,c,d)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new Xe,t=this.index.array,i=this.attributes;for(const o in i){const a=i[o],l=n(a,t);e.setAttribute(o,l)}const r=this.morphAttributes;for(const o in r){const a=[],l=r[o];for(let c=0,d=l.length;c<d;c++){const u=l[c],f=n(u,t);a.push(f)}e.morphAttributes[o]=a}e.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let o=0,a=s.length;o<a;o++){const l=s[o];e.addGroup(l.start,l.count,l.materialIndex)}return e},toJSON:function(){const n={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),Object.keys(this.userData).length>0&&(n.userData=this.userData),this.parameters!==void 0){const a=this.parameters;for(const l in a)a[l]!==void 0&&(n[l]=a[l]);return n}n.data={attributes:{}};const e=this.index;e!==null&&(n.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const t=this.attributes;for(const a in t){const l=t[a],c=l.toJSON(n.data);l.name!==""&&(c.name=l.name),n.data.attributes[a]=c}const i={};let r=!1;for(const a in this.morphAttributes){const l=this.morphAttributes[a],c=[];for(let d=0,u=l.length;d<u;d++){const f=l[d],h=f.toJSON(n.data);f.name!==""&&(h.name=f.name),c.push(h)}c.length>0&&(i[a]=c,r=!0)}r&&(n.data.morphAttributes=i,n.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;s.length>0&&(n.data.groups=JSON.parse(JSON.stringify(s)));const o=this.boundingSphere;return o!==null&&(n.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),n},clone:function(){return new Xe().copy(this)},copy:function(n){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=n.name;const t=n.index;t!==null&&this.setIndex(t.clone(e));const i=n.attributes;for(const l in i){const c=i[l];this.setAttribute(l,c.clone(e))}const r=n.morphAttributes;for(const l in r){const c=[],d=r[l];for(let u=0,f=d.length;u<f;u++)c.push(d[u].clone(e));this.morphAttributes[l]=c}this.morphTargetsRelative=n.morphTargetsRelative;const s=n.groups;for(let l=0,c=s.length;l<c;l++){const d=s[l];this.addGroup(d.start,d.count,d.materialIndex)}const o=n.boundingBox;o!==null&&(this.boundingBox=o.clone());const a=n.boundingSphere;return a!==null&&(this.boundingSphere=a.clone()),this.drawRange.start=n.drawRange.start,this.drawRange.count=n.drawRange.count,this.userData=n.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});const Qg=new tt,eo=new Ko,Lh=new Tr,tr=new q,nr=new q,ir=new q,Ch=new q,Rh=new q,Ph=new q,sl=new q,ol=new q,al=new q,cl=new Ee,ll=new Ee,dl=new Ee,Ih=new q,ul=new q;function gt(n=new Xe,e=new wn){We.call(this),this.type="Mesh",this.geometry=n,this.material=e,this.updateMorphTargets()}gt.prototype=Object.assign(Object.create(We.prototype),{constructor:gt,isMesh:!0,copy:function(n){return We.prototype.copy.call(this,n),n.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=n.morphTargetInfluences.slice()),n.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},n.morphTargetDictionary)),this.material=n.material,this.geometry=n.geometry,this},updateMorphTargets:function(){const n=this.geometry;if(n.isBufferGeometry){const e=n.morphAttributes,t=Object.keys(e);if(t.length>0){const i=e[t[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=i.length;r<s;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}else{const e=n.morphTargets;e!==void 0&&e.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(n,e){const t=this.geometry,i=this.material,r=this.matrixWorld;if(i===void 0||(t.boundingSphere===null&&t.computeBoundingSphere(),Lh.copy(t.boundingSphere),Lh.applyMatrix4(r),n.ray.intersectsSphere(Lh)===!1)||(Qg.copy(r).invert(),eo.copy(n.ray).applyMatrix4(Qg),t.boundingBox!==null&&eo.intersectsBox(t.boundingBox)===!1))return;let s;if(t.isBufferGeometry){const o=t.index,a=t.attributes.position,l=t.morphAttributes.position,c=t.morphTargetsRelative,d=t.attributes.uv,u=t.attributes.uv2,f=t.groups,h=t.drawRange;if(o!==null)if(Array.isArray(i))for(let p=0,x=f.length;p<x;p++){const m=f[p],v=i[m.materialIndex],g=Math.max(m.start,h.start),w=Math.min(m.start+m.count,h.start+h.count);for(let y=g,M=w;y<M;y+=3){const b=o.getX(y),_=o.getX(y+1),S=o.getX(y+2);s=fl(this,v,n,eo,a,l,c,d,u,b,_,S),s&&(s.faceIndex=Math.floor(y/3),s.face.materialIndex=m.materialIndex,e.push(s))}}else{const p=Math.max(0,h.start),x=Math.min(o.count,h.start+h.count);for(let m=p,v=x;m<v;m+=3){const g=o.getX(m),w=o.getX(m+1),y=o.getX(m+2);s=fl(this,i,n,eo,a,l,c,d,u,g,w,y),s&&(s.faceIndex=Math.floor(m/3),e.push(s))}}else if(a!==void 0)if(Array.isArray(i))for(let p=0,x=f.length;p<x;p++){const m=f[p],v=i[m.materialIndex],g=Math.max(m.start,h.start),w=Math.min(m.start+m.count,h.start+h.count);for(let y=g,M=w;y<M;y+=3){const b=y,_=y+1,S=y+2;s=fl(this,v,n,eo,a,l,c,d,u,b,_,S),s&&(s.faceIndex=Math.floor(y/3),s.face.materialIndex=m.materialIndex,e.push(s))}}else{const p=Math.max(0,h.start),x=Math.min(a.count,h.start+h.count);for(let m=p,v=x;m<v;m+=3){const g=m,w=m+1,y=m+2;s=fl(this,i,n,eo,a,l,c,d,u,g,w,y),s&&(s.faceIndex=Math.floor(m/3),e.push(s))}}}else t.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}});function cM(n,e,t,i,r,s,o,a){let l;if(e.side===Rt?l=i.intersectTriangle(o,s,r,!0,a):l=i.intersectTriangle(r,s,o,e.side!==vc,a),l===null)return null;ul.copy(a),ul.applyMatrix4(n.matrixWorld);const c=t.ray.origin.distanceTo(ul);return c<t.near||c>t.far?null:{distance:c,point:ul.clone(),object:n}}function fl(n,e,t,i,r,s,o,a,l,c,d,u){tr.fromBufferAttribute(r,c),nr.fromBufferAttribute(r,d),ir.fromBufferAttribute(r,u);const f=n.morphTargetInfluences;if(e.morphTargets&&s&&f){sl.set(0,0,0),ol.set(0,0,0),al.set(0,0,0);for(let p=0,x=s.length;p<x;p++){const m=f[p],v=s[p];m!==0&&(Ch.fromBufferAttribute(v,c),Rh.fromBufferAttribute(v,d),Ph.fromBufferAttribute(v,u),o?(sl.addScaledVector(Ch,m),ol.addScaledVector(Rh,m),al.addScaledVector(Ph,m)):(sl.addScaledVector(Ch.sub(tr),m),ol.addScaledVector(Rh.sub(nr),m),al.addScaledVector(Ph.sub(ir),m)))}tr.add(sl),nr.add(ol),ir.add(al)}n.isSkinnedMesh&&(n.boneTransform(c,tr),n.boneTransform(d,nr),n.boneTransform(u,ir));const h=cM(n,e,t,i,tr,nr,ir,Ih);if(h){a&&(cl.fromBufferAttribute(a,c),ll.fromBufferAttribute(a,d),dl.fromBufferAttribute(a,u),h.uv=kt.getUV(Ih,tr,nr,ir,cl,ll,dl,new Ee)),l&&(cl.fromBufferAttribute(l,c),ll.fromBufferAttribute(l,d),dl.fromBufferAttribute(l,u),h.uv2=kt.getUV(Ih,tr,nr,ir,cl,ll,dl,new Ee));const p=new wp(c,d,u);kt.getNormal(tr,nr,ir,p.normal),h.face=p}return h}class us extends Xe{constructor(e=1,t=1,i=1,r=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:r,heightSegments:s,depthSegments:o};const a=this;r=Math.floor(r),s=Math.floor(s),o=Math.floor(o);const l=[],c=[],d=[],u=[];let f=0,h=0;p("z","y","x",-1,-1,i,t,e,o,s,0),p("z","y","x",1,-1,i,t,-e,o,s,1),p("x","z","y",1,1,e,i,t,r,o,2),p("x","z","y",1,-1,e,i,-t,r,o,3),p("x","y","z",1,-1,e,t,i,r,s,4),p("x","y","z",-1,-1,e,t,-i,r,s,5),this.setIndex(l),this.setAttribute("position",new ke(c,3)),this.setAttribute("normal",new ke(d,3)),this.setAttribute("uv",new ke(u,2));function p(x,m,v,g,w,y,M,b,_,S,E){const R=y/_,I=M/S,$=y/2,W=M/2,L=b/2,z=_+1,U=S+1;let X=0,K=0;const j=new q;for(let ee=0;ee<U;ee++){const P=ee*I-W;for(let H=0;H<z;H++){const Y=H*R-$;j[x]=Y*g,j[m]=P*w,j[v]=L,c.push(j.x,j.y,j.z),j[x]=0,j[m]=0,j[v]=b>0?1:-1,d.push(j.x,j.y,j.z),u.push(H/_),u.push(1-ee/S),X+=1}}for(let ee=0;ee<S;ee++)for(let P=0;P<_;P++){const H=f+P+z*ee,Y=f+P+z*(ee+1),Q=f+(P+1)+z*(ee+1),F=f+(P+1)+z*ee;l.push(H,Y,F),l.push(Y,Q,F),K+=6}a.addGroup(h,K,E),h+=K,f+=X}}}function Co(n){const e={};for(const t in n){e[t]={};for(const i in n[t]){const r=n[t][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture)?e[t][i]=r.clone():Array.isArray(r)?e[t][i]=r.slice():e[t][i]=r}}return e}function Gt(n){const e={};for(let t=0;t<n.length;t++){const i=Co(n[t]);for(const r in i)e[r]=i[r]}return e}const gy={clone:Co,merge:Gt};var lM=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,dM=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;function en(n){Je.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=lM,this.fragmentShader=dM,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,n!==void 0&&(n.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(n))}en.prototype=Object.create(Je.prototype);en.prototype.constructor=en;en.prototype.isShaderMaterial=!0;en.prototype.copy=function(n){return Je.prototype.copy.call(this,n),this.fragmentShader=n.fragmentShader,this.vertexShader=n.vertexShader,this.uniforms=Co(n.uniforms),this.defines=Object.assign({},n.defines),this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this.lights=n.lights,this.clipping=n.clipping,this.skinning=n.skinning,this.morphTargets=n.morphTargets,this.morphNormals=n.morphNormals,this.extensions=Object.assign({},n.extensions),this.glslVersion=n.glslVersion,this};en.prototype.toJSON=function(n){const e=Je.prototype.toJSON.call(this,n);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const s=this.uniforms[i].value;s&&s.isTexture?e.uniforms[i]={type:"t",value:s.toJSON(n).uuid}:s&&s.isColor?e.uniforms[i]={type:"c",value:s.getHex()}:s&&s.isVector2?e.uniforms[i]={type:"v2",value:s.toArray()}:s&&s.isVector3?e.uniforms[i]={type:"v3",value:s.toArray()}:s&&s.isVector4?e.uniforms[i]={type:"v4",value:s.toArray()}:s&&s.isMatrix3?e.uniforms[i]={type:"m3",value:s.toArray()}:s&&s.isMatrix4?e.uniforms[i]={type:"m4",value:s.toArray()}:e.uniforms[i]={value:s}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const t={};for(const i in this.extensions)this.extensions[i]===!0&&(t[i]=!0);return Object.keys(t).length>0&&(e.extensions=t),e};function di(){We.call(this),this.type="Camera",this.matrixWorldInverse=new tt,this.projectionMatrix=new tt,this.projectionMatrixInverse=new tt}di.prototype=Object.assign(Object.create(We.prototype),{constructor:di,isCamera:!0,copy:function(n,e){return We.prototype.copy.call(this,n,e),this.matrixWorldInverse.copy(n.matrixWorldInverse),this.projectionMatrix.copy(n.projectionMatrix),this.projectionMatrixInverse.copy(n.projectionMatrixInverse),this},getWorldDirection:function(n){n===void 0&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),n=new q),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return n.set(-e[8],-e[9],-e[10]).normalize()},updateMatrixWorld:function(n){We.prototype.updateMatrixWorld.call(this,n),this.matrixWorldInverse.copy(this.matrixWorld).invert()},updateWorldMatrix:function(n,e){We.prototype.updateWorldMatrix.call(this,n,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()},clone:function(){return new this.constructor().copy(this)}});function Pt(n=50,e=1,t=.1,i=2e3){di.call(this),this.type="PerspectiveCamera",this.fov=n,this.zoom=1,this.near=t,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}Pt.prototype=Object.assign(Object.create(di.prototype),{constructor:Pt,isPerspectiveCamera:!0,copy:function(n,e){return di.prototype.copy.call(this,n,e),this.fov=n.fov,this.zoom=n.zoom,this.near=n.near,this.far=n.far,this.focus=n.focus,this.aspect=n.aspect,this.view=n.view===null?null:Object.assign({},n.view),this.filmGauge=n.filmGauge,this.filmOffset=n.filmOffset,this},setFocalLength:function(n){const e=.5*this.getFilmHeight()/n;this.fov=Ke.RAD2DEG*2*Math.atan(e),this.updateProjectionMatrix()},getFocalLength:function(){const n=Math.tan(Ke.DEG2RAD*.5*this.fov);return .5*this.getFilmHeight()/n},getEffectiveFOV:function(){return Ke.RAD2DEG*2*Math.atan(Math.tan(Ke.DEG2RAD*.5*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(n,e,t,i,r,s){this.aspect=n/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=n,this.view.fullHeight=e,this.view.offsetX=t,this.view.offsetY=i,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()},clearViewOffset:function(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const n=this.near;let e=n*Math.tan(Ke.DEG2RAD*.5*this.fov)/this.zoom,t=2*e,i=this.aspect*t,r=-.5*i;const s=this.view;if(this.view!==null&&this.view.enabled){const a=s.fullWidth,l=s.fullHeight;r+=s.offsetX*i/a,e-=s.offsetY*t/l,i*=s.width/a,t*=s.height/l}const o=this.filmOffset;o!==0&&(r+=n*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,e,e-t,n,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(n){const e=We.prototype.toJSON.call(this,n);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}});const to=90,no=1;function fs(n,e,t){if(We.call(this),this.type="CubeCamera",t.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=t;const i=new Pt(to,no,n,e);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new q(1,0,0)),this.add(i);const r=new Pt(to,no,n,e);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new q(-1,0,0)),this.add(r);const s=new Pt(to,no,n,e);s.layers=this.layers,s.up.set(0,0,1),s.lookAt(new q(0,1,0)),this.add(s);const o=new Pt(to,no,n,e);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(new q(0,-1,0)),this.add(o);const a=new Pt(to,no,n,e);a.layers=this.layers,a.up.set(0,-1,0),a.lookAt(new q(0,0,1)),this.add(a);const l=new Pt(to,no,n,e);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new q(0,0,-1)),this.add(l),this.update=function(c,d){this.parent===null&&this.updateMatrixWorld();const u=c.xr.enabled,f=c.getRenderTarget();c.xr.enabled=!1;const h=t.texture.generateMipmaps;t.texture.generateMipmaps=!1,c.setRenderTarget(t,0),c.render(d,i),c.setRenderTarget(t,1),c.render(d,r),c.setRenderTarget(t,2),c.render(d,s),c.setRenderTarget(t,3),c.render(d,o),c.setRenderTarget(t,4),c.render(d,a),t.texture.generateMipmaps=h,c.setRenderTarget(t,5),c.render(d,l),c.setRenderTarget(f),c.xr.enabled=u}}fs.prototype=Object.create(We.prototype);fs.prototype.constructor=fs;function ui(n,e,t,i,r,s,o,a,l,c){n=n!==void 0?n:[],e=e!==void 0?e:bc,o=o!==void 0?o:dr,ft.call(this,n,e,t,i,r,s,o,a,l,c),this.flipY=!1,this._needsFlipEnvMap=!0}ui.prototype=Object.create(ft.prototype);ui.prototype.constructor=ui;ui.prototype.isCubeTexture=!0;Object.defineProperty(ui.prototype,"images",{get:function(){return this.image},set:function(n){this.image=n}});class Mp extends ur{constructor(e,t,i){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=i),super(e,e,t),Object.defineProperty(this,"isWebGLCubeRenderTarget",{value:!0}),t=t||{},this.texture=new ui(void 0,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.format=bn,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new us(5,5,5),s=new en({name:"CubemapFromEquirect",uniforms:Co(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:Rt,blending:qi});s.uniforms.tEquirect.value=t;const o=new gt(r,s),a=t.minFilter;return t.minFilter===Zo&&(t.minFilter=zt),new fs(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,i,r){const s=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,i,r);e.setRenderTarget(s)}}function Fi(n,e,t,i,r,s,o,a,l,c,d,u){ft.call(this,null,s,o,a,l,c,i,r,d,u),this.image={data:n||null,width:e||1,height:t||1},this.magFilter=l!==void 0?l:Dt,this.minFilter=c!==void 0?c:Dt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}Fi.prototype=Object.create(ft.prototype);Fi.prototype.constructor=Fi;Fi.prototype.isDataTexture=!0;const io=new Tr,hl=new q;class Ec{constructor(e,t,i,r,s,o){this.planes=[e!==void 0?e:new ri,t!==void 0?t:new ri,i!==void 0?i:new ri,r!==void 0?r:new ri,s!==void 0?s:new ri,o!==void 0?o:new ri]}set(e,t,i,r,s,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(i),a[3].copy(r),a[4].copy(s),a[5].copy(o),this}clone(){return new this.constructor().copy(this)}copy(e){const t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e){const t=this.planes,i=e.elements,r=i[0],s=i[1],o=i[2],a=i[3],l=i[4],c=i[5],d=i[6],u=i[7],f=i[8],h=i[9],p=i[10],x=i[11],m=i[12],v=i[13],g=i[14],w=i[15];return t[0].setComponents(a-r,u-l,x-f,w-m).normalize(),t[1].setComponents(a+r,u+l,x+f,w+m).normalize(),t[2].setComponents(a+s,u+c,x+h,w+v).normalize(),t[3].setComponents(a-s,u-c,x-h,w-v).normalize(),t[4].setComponents(a-o,u-d,x-p,w-g).normalize(),t[5].setComponents(a+o,u+d,x+p,w+g).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),io.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(io)}intersectsSprite(e){return io.center.set(0,0,0),io.radius=.7071067811865476,io.applyMatrix4(e.matrixWorld),this.intersectsSphere(io)}intersectsSphere(e){const t=this.planes,i=e.center,r=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(i)<r)return!1;return!0}intersectsBox(e){const t=this.planes;for(let i=0;i<6;i++){const r=t[i];if(hl.x=r.normal.x>0?e.max.x:e.min.x,hl.y=r.normal.y>0?e.max.y:e.min.y,hl.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(hl)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}}function vy(){let n=null,e=!1,t=null,i=null;function r(s,o){t(s,o),i=n.requestAnimationFrame(r)}return{start:function(){e!==!0&&t!==null&&(i=n.requestAnimationFrame(r),e=!0)},stop:function(){n.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){n=s}}}function uM(n,e){const t=e.isWebGL2,i=new WeakMap;function r(c,d){const u=c.array,f=c.usage,h=n.createBuffer();n.bindBuffer(d,h),n.bufferData(d,u,f),c.onUploadCallback();let p=5126;return u instanceof Float32Array?p=5126:u instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):u instanceof Uint16Array?c.isFloat16BufferAttribute?t?p=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):p=5123:u instanceof Int16Array?p=5122:u instanceof Uint32Array?p=5125:u instanceof Int32Array?p=5124:u instanceof Int8Array?p=5120:u instanceof Uint8Array&&(p=5121),{buffer:h,type:p,bytesPerElement:u.BYTES_PER_ELEMENT,version:c.version}}function s(c,d,u){const f=d.array,h=d.updateRange;n.bindBuffer(u,c),h.count===-1?n.bufferSubData(u,0,f):(t?n.bufferSubData(u,h.offset*f.BYTES_PER_ELEMENT,f,h.offset,h.count):n.bufferSubData(u,h.offset*f.BYTES_PER_ELEMENT,f.subarray(h.offset,h.offset+h.count)),h.count=-1)}function o(c){return c.isInterleavedBufferAttribute&&(c=c.data),i.get(c)}function a(c){c.isInterleavedBufferAttribute&&(c=c.data);const d=i.get(c);d&&(n.deleteBuffer(d.buffer),i.delete(c))}function l(c,d){if(c.isGLBufferAttribute){const f=i.get(c);(!f||f.version<c.version)&&i.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const u=i.get(c);u===void 0?i.set(c,r(c,d)):u.version<c.version&&(s(u.buffer,c,d),u.version=c.version)}return{get:o,remove:a,update:l}}class Wa extends Xe{constructor(e=1,t=1,i=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:r};const s=e/2,o=t/2,a=Math.floor(i),l=Math.floor(r),c=a+1,d=l+1,u=e/a,f=t/l,h=[],p=[],x=[],m=[];for(let v=0;v<d;v++){const g=v*f-o;for(let w=0;w<c;w++){const y=w*u-s;p.push(y,-g,0),x.push(0,0,1),m.push(w/a),m.push(1-v/l)}}for(let v=0;v<l;v++)for(let g=0;g<a;g++){const w=g+c*v,y=g+c*(v+1),M=g+1+c*(v+1),b=g+1+c*v;h.push(w,y,b),h.push(y,M,b)}this.setIndex(h),this.setAttribute("position",new ke(p,3)),this.setAttribute("normal",new ke(x,3)),this.setAttribute("uv",new ke(m,2))}}var fM=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,hM=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,pM=`#ifdef ALPHATEST
	if ( diffuseColor.a < ALPHATEST ) discard;
#endif`,mM=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );
	#endif
#endif`,xM=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,gM="vec3 transformed = vec3( position );",vM=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,yM=`vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	return vec2( -1.04, 1.04 ) * a004 + r.zw;
}
float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
#if defined ( PHYSICALLY_CORRECT_LIGHTS )
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
#else
	if( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
		return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );
	}
	return 1.0;
#endif
}
vec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {
	float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );
	return ( 1.0 - specularColor ) * fresnel + specularColor;
}
vec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {
	float fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );
	vec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;
	return Fr * fresnel + F0;
}
float G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	return 1.0 / ( gl * gv );
}
float G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( incidentLight.direction + viewDir );
	float dotNL = saturate( dot( normal, incidentLight.direction ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( G * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
vec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );
	return specularColor * brdf.x + brdf.y;
}
void BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
	vec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );
	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );
	vec3 FssEss = F * brdf.x + brdf.y;
	float Ess = brdf.x + brdf.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );
	float dotNH = saturate( dot( geometry.normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
float GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {
	return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );
}
float BlinnExponentToGGXRoughness( const in float blinnExponent ) {
	return sqrt( 2.0 / ( blinnExponent + 2.0 ) );
}
#if defined( USE_SHEEN )
float D_Charlie(float roughness, float NoH) {
	float invAlpha = 1.0 / roughness;
	float cos2h = NoH * NoH;
	float sin2h = max(1.0 - cos2h, 0.0078125);	return (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);
}
float V_Neubelt(float NoV, float NoL) {
	return saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));
}
vec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {
	vec3 N = geometry.normal;
	vec3 V = geometry.viewDir;
	vec3 H = normalize( V + L );
	float dotNH = saturate( dot( N, H ) );
	return specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );
}
#endif`,bM=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 );
		fDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,_M=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,wM=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,MM=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,SM=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,EM=`#ifdef USE_COLOR
	diffuseColor.rgb *= vColor;
#endif`,TM=`#ifdef USE_COLOR
	varying vec3 vColor;
#endif`,AM=`#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,LM=`#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor.xyz *= color.xyz;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,CM=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement(a) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract(sin(sn) * c);
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
vec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	float distance = dot( planeNormal, point - pointOnPlane );
	return - distance * planeNormal + point;
}
float sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return sign( dot( point - pointOnPlane, planeNormal ) );
}
vec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,RM=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_maxMipLevel 8.0
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_maxTileSize 256.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		float texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );
		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );
		vec2 f = fract( uv );
		uv += 0.5 - f;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		if ( mipInt < cubeUV_maxMipLevel ) {
			uv.y += 2.0 * cubeUV_maxTileSize;
		}
		uv.y += filterInt * 2.0 * cubeUV_minTileSize;
		uv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );
		uv *= texelSize;
		vec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.x += texelSize;
		vec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.y += texelSize;
		vec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.x -= texelSize;
		vec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		vec3 tm = mix( tl, tr, f.x );
		vec3 bm = mix( bl, br, f.x );
		return mix( tm, bm, f.y );
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,PM=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,IM=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,DM=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,OM=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,qM=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,zM="gl_FragColor = linearToOutputTexel( gl_FragColor );",FM=`
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 GammaToLinear( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );
}
vec4 LinearToGamma( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );
}
vec4 sRGBToLinear( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 RGBEToLinear( in vec4 value ) {
	return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );
}
vec4 LinearToRGBE( in vec4 value ) {
	float maxComponent = max( max( value.r, value.g ), value.b );
	float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );
	return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );
}
vec4 RGBMToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * value.a * maxRange, 1.0 );
}
vec4 LinearToRGBM( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float M = clamp( maxRGB / maxRange, 0.0, 1.0 );
	M = ceil( M * 255.0 ) / 255.0;
	return vec4( value.rgb / ( M * maxRange ), M );
}
vec4 RGBDToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );
}
vec4 LinearToRGBD( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float D = max( maxRange / maxRGB, 1.0 );
	D = clamp( floor( D ) / 255.0, 0.0, 1.0 );
	return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );
}
const mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );
vec4 LinearToLogLuv( in vec4 value ) {
	vec3 Xp_Y_XYZp = cLogLuvM * value.rgb;
	Xp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );
	vec4 vResult;
	vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;
	float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;
	vResult.w = fract( Le );
	vResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;
	return vResult;
}
const mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );
vec4 LogLuvToLinear( in vec4 value ) {
	float Le = value.z * 255.0 + value.w;
	vec3 Xp_Y_XYZp;
	Xp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );
	Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;
	Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;
	vec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;
	return vec4( max( vRGB, 0.0 ), 1.0 );
}`,NM=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifndef ENVMAP_TYPE_CUBE_UV
		envColor = envMapTexelToLinear( envColor );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,BM=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform int maxMipLevel;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,UM=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,GM=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,kM=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,HM=`#ifdef USE_FOG
	fogDepth = - mvPosition.z;
#endif`,VM=`#ifdef USE_FOG
	varying float fogDepth;
#endif`,WM=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, fogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,$M=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float fogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,jM=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return texture2D( gradientMap, coord ).rgb;
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,XM=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel= texture2D( lightMap, vUv2 );
	reflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
#endif`,YM=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,ZM=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );
		#endif
	}
	#pragma unroll_loop_end
#endif`,JM=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {
	vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	return irradiance;
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		directLight.color = directionalLight.color;
		directLight.direction = directionalLight.direction;
		directLight.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		vec3 lVector = pointLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		directLight.color = pointLight.color;
		directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );
		directLight.visible = ( directLight.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		vec3 lVector = spotLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		float angleCos = dot( directLight.direction, spotLight.direction );
		if ( angleCos > spotLight.coneCos ) {
			float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );
			directLight.color = spotLight.color;
			directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );
			directLight.visible = true;
		} else {
			directLight.color = vec3( 0.0 );
			directLight.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {
		float dotNL = dot( geometry.normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			irradiance *= PI;
		#endif
		return irradiance;
	}
#endif`,KM=`#if defined( USE_ENVMAP )
	#ifdef ENVMAP_MODE_REFRACTION
		uniform float refractionRatio;
	#endif
	vec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {
		vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );
			#else
				vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
		#else
			vec4 envMapColor = vec4( 0.0 );
		#endif
		return PI * envMapColor.rgb * envMapIntensity;
	}
	float getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {
		float maxMIPLevelScalar = float( maxMIPLevel );
		float sigma = PI * roughness * roughness / ( 1.0 + roughness );
		float desiredMIPLevel = maxMIPLevelScalar + log2( sigma );
		return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );
	}
	vec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( -viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
		#else
			vec3 reflectVec = refract( -viewDir, normal, refractionRatio );
		#endif
		reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
		float specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );
			#else
				vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
		#endif
		return envMapColor.rgb * envMapIntensity;
	}
#endif`,QM=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,e7=`varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,t7=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,n7=`varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,i7=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;
material.specularRoughness = min( material.specularRoughness, 1.0 );
#ifdef REFLECTIVITY
	material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );
#endif
#ifdef CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheen;
#endif`,r7=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float specularRoughness;
	vec3 specularColor;
#ifdef CLEARCOAT
	float clearcoat;
	float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	vec3 sheenColor;
#endif
};
#define MAXIMUM_SPECULAR_COEFFICIENT 0.16
#define DEFAULT_SPECULAR_COEFFICIENT 0.04
float clearcoatDHRApprox( const in float roughness, const in float dotNL ) {
	return DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.specularRoughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	#ifdef CLEARCOAT
		float ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = ccDotNL * directLight.color;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			ccIrradiance *= PI;
		#endif
		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );
		reflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );
	#else
		float clearcoatDHR = 0.0;
	#endif
	#ifdef USE_SHEEN
		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(
			material.specularRoughness,
			directLight.direction,
			geometry,
			material.sheenColor
		);
	#else
		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);
	#endif
	reflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef CLEARCOAT
		float ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		reflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );
		float ccDotNL = ccDotNV;
		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );
	#else
		float clearcoatDHR = 0.0;
	#endif
	float clearcoatInv = 1.0 - clearcoatDHR;
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	BRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,s7=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointDirectLightIrradiance( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotDirectLightIrradiance( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,o7=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			lightMapIrradiance *= PI;
		#endif
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );
	#ifdef CLEARCOAT
		clearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );
	#endif
#endif`,a7=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,c7=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,l7=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,d7=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,u7=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,f7=`#ifdef USE_MAP
	vec4 texelColor = texture2D( map, vUv );
	texelColor = mapTexelToLinear( texelColor );
	diffuseColor *= texelColor;
#endif`,h7=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,p7=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	vec4 mapTexel = texture2D( map, uv );
	diffuseColor *= mapTexelToLinear( mapTexel );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,m7=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,x7=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,g7=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,v7=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
	objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
	objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
	objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
#endif`,y7=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifndef USE_MORPHNORMALS
		uniform float morphTargetInfluences[ 8 ];
	#else
		uniform float morphTargetInfluences[ 4 ];
	#endif
#endif`,b7=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	transformed += morphTarget0 * morphTargetInfluences[ 0 ];
	transformed += morphTarget1 * morphTargetInfluences[ 1 ];
	transformed += morphTarget2 * morphTargetInfluences[ 2 ];
	transformed += morphTarget3 * morphTargetInfluences[ 3 ];
	#ifndef USE_MORPHNORMALS
		transformed += morphTarget4 * morphTargetInfluences[ 4 ];
		transformed += morphTarget5 * morphTargetInfluences[ 5 ];
		transformed += morphTarget6 * morphTargetInfluences[ 6 ];
		transformed += morphTarget7 * morphTargetInfluences[ 7 ];
	#endif
#endif`,_7=`#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
			bitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,w7=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( -vViewPosition, normal, mapN );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );
#endif`,M7=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		float scale = sign( st1.t * st0.s - st0.t * st1.s );
		vec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );
		vec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );
		vec3 N = normalize( surf_norm );
		mat3 tsn = mat3( S, T, N );
		mapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		return normalize( tsn * mapN );
	}
#endif`,S7=`#ifdef CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,E7=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );
	#endif
#endif`,T7=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,A7=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return (( near + viewZ ) * far ) / (( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,L7=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,C7=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,R7=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,P7=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,I7=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,D7=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,O7=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,q7=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,z7=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,F7=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,N7=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,B7=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform highp sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif`,U7=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,G7=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,k7=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,H7=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,V7=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,W7=`#ifndef saturate
#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,$7=`#ifdef USE_TRANSMISSIONMAP
	totalTransmission *= texture2D( transmissionMap, vUv ).r;
#endif`,j7=`#ifdef USE_TRANSMISSIONMAP
	uniform sampler2D transmissionMap;
#endif`,X7=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,Y7=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,Z7=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,J7=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,K7=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,Q7=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,eS=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`,tS=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,nS=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,iS=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,rS=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,sS=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,oS=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,aS=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,cS=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,lS=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	vec4 texColor = texture2D( tEquirect, sampleUV );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,dS=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,uS=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,fS=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,hS=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
	
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,pS=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <skinbase_vertex>
	#ifdef USE_ENVMAP
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,mS=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,xS=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,gS=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <fog_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
		matcapColor = matcapTexelToLinear( matcapColor );
	#else
		vec4 matcapColor = vec4( 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,vS=`#define MATCAP
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#ifndef FLAT_SHADED
		vNormal = normalize( transformedNormal );
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,yS=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,bS=`#define TOON
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,_S=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,wS=`#define PHONG
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,MS=`#define STANDARD
#ifdef PHYSICAL
	#define REFLECTIVITY
	#define CLEARCOAT
	#define TRANSMISSION
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef TRANSMISSION
	uniform float transmission;
#endif
#ifdef REFLECTIVITY
	uniform float reflectivity;
#endif
#ifdef CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheen;
#endif
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <transmissionmap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <lights_physical_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#ifdef TRANSMISSION
		float totalTransmission = transmission;
	#endif
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <transmissionmap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#ifdef TRANSMISSION
		diffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );
	#endif
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,SS=`#define STANDARD
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,ES=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <packing>
#include <uv_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
}`,TS=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,AS=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,LS=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,CS=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,RS=`#include <common>
#include <fog_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <begin_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,PS=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,IS=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`;const nt={alphamap_fragment:fM,alphamap_pars_fragment:hM,alphatest_fragment:pM,aomap_fragment:mM,aomap_pars_fragment:xM,begin_vertex:gM,beginnormal_vertex:vM,bsdfs:yM,bumpmap_pars_fragment:bM,clipping_planes_fragment:_M,clipping_planes_pars_fragment:wM,clipping_planes_pars_vertex:MM,clipping_planes_vertex:SM,color_fragment:EM,color_pars_fragment:TM,color_pars_vertex:AM,color_vertex:LM,common:CM,cube_uv_reflection_fragment:RM,defaultnormal_vertex:PM,displacementmap_pars_vertex:IM,displacementmap_vertex:DM,emissivemap_fragment:OM,emissivemap_pars_fragment:qM,encodings_fragment:zM,encodings_pars_fragment:FM,envmap_fragment:NM,envmap_common_pars_fragment:BM,envmap_pars_fragment:UM,envmap_pars_vertex:GM,envmap_physical_pars_fragment:KM,envmap_vertex:kM,fog_vertex:HM,fog_pars_vertex:VM,fog_fragment:WM,fog_pars_fragment:$M,gradientmap_pars_fragment:jM,lightmap_fragment:XM,lightmap_pars_fragment:YM,lights_lambert_vertex:ZM,lights_pars_begin:JM,lights_toon_fragment:QM,lights_toon_pars_fragment:e7,lights_phong_fragment:t7,lights_phong_pars_fragment:n7,lights_physical_fragment:i7,lights_physical_pars_fragment:r7,lights_fragment_begin:s7,lights_fragment_maps:o7,lights_fragment_end:a7,logdepthbuf_fragment:c7,logdepthbuf_pars_fragment:l7,logdepthbuf_pars_vertex:d7,logdepthbuf_vertex:u7,map_fragment:f7,map_pars_fragment:h7,map_particle_fragment:p7,map_particle_pars_fragment:m7,metalnessmap_fragment:x7,metalnessmap_pars_fragment:g7,morphnormal_vertex:v7,morphtarget_pars_vertex:y7,morphtarget_vertex:b7,normal_fragment_begin:_7,normal_fragment_maps:w7,normalmap_pars_fragment:M7,clearcoat_normal_fragment_begin:S7,clearcoat_normal_fragment_maps:E7,clearcoat_pars_fragment:T7,packing:A7,premultiplied_alpha_fragment:L7,project_vertex:C7,dithering_fragment:R7,dithering_pars_fragment:P7,roughnessmap_fragment:I7,roughnessmap_pars_fragment:D7,shadowmap_pars_fragment:O7,shadowmap_pars_vertex:q7,shadowmap_vertex:z7,shadowmask_pars_fragment:F7,skinbase_vertex:N7,skinning_pars_vertex:B7,skinning_vertex:U7,skinnormal_vertex:G7,specularmap_fragment:k7,specularmap_pars_fragment:H7,tonemapping_fragment:V7,tonemapping_pars_fragment:W7,transmissionmap_fragment:$7,transmissionmap_pars_fragment:j7,uv_pars_fragment:X7,uv_pars_vertex:Y7,uv_vertex:Z7,uv2_pars_fragment:J7,uv2_pars_vertex:K7,uv2_vertex:Q7,worldpos_vertex:eS,background_frag:tS,background_vert:nS,cube_frag:iS,cube_vert:rS,depth_frag:sS,depth_vert:oS,distanceRGBA_frag:aS,distanceRGBA_vert:cS,equirect_frag:lS,equirect_vert:dS,linedashed_frag:uS,linedashed_vert:fS,meshbasic_frag:hS,meshbasic_vert:pS,meshlambert_frag:mS,meshlambert_vert:xS,meshmatcap_frag:gS,meshmatcap_vert:vS,meshtoon_frag:yS,meshtoon_vert:bS,meshphong_frag:_S,meshphong_vert:wS,meshphysical_frag:MS,meshphysical_vert:SS,normal_frag:ES,normal_vert:TS,points_frag:AS,points_vert:LS,shadow_frag:CS,shadow_vert:RS,sprite_frag:PS,sprite_vert:IS},De={common:{diffuse:{value:new Ue(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new vn},uv2Transform:{value:new vn},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Ee(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ue(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ue(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new vn}},sprite:{diffuse:{value:new Ue(15658734)},opacity:{value:1},center:{value:new Ee(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new vn}}},kn={basic:{uniforms:Gt([De.common,De.specularmap,De.envmap,De.aomap,De.lightmap,De.fog]),vertexShader:nt.meshbasic_vert,fragmentShader:nt.meshbasic_frag},lambert:{uniforms:Gt([De.common,De.specularmap,De.envmap,De.aomap,De.lightmap,De.emissivemap,De.fog,De.lights,{emissive:{value:new Ue(0)}}]),vertexShader:nt.meshlambert_vert,fragmentShader:nt.meshlambert_frag},phong:{uniforms:Gt([De.common,De.specularmap,De.envmap,De.aomap,De.lightmap,De.emissivemap,De.bumpmap,De.normalmap,De.displacementmap,De.fog,De.lights,{emissive:{value:new Ue(0)},specular:{value:new Ue(1118481)},shininess:{value:30}}]),vertexShader:nt.meshphong_vert,fragmentShader:nt.meshphong_frag},standard:{uniforms:Gt([De.common,De.envmap,De.aomap,De.lightmap,De.emissivemap,De.bumpmap,De.normalmap,De.displacementmap,De.roughnessmap,De.metalnessmap,De.fog,De.lights,{emissive:{value:new Ue(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:nt.meshphysical_vert,fragmentShader:nt.meshphysical_frag},toon:{uniforms:Gt([De.common,De.aomap,De.lightmap,De.emissivemap,De.bumpmap,De.normalmap,De.displacementmap,De.gradientmap,De.fog,De.lights,{emissive:{value:new Ue(0)}}]),vertexShader:nt.meshtoon_vert,fragmentShader:nt.meshtoon_frag},matcap:{uniforms:Gt([De.common,De.bumpmap,De.normalmap,De.displacementmap,De.fog,{matcap:{value:null}}]),vertexShader:nt.meshmatcap_vert,fragmentShader:nt.meshmatcap_frag},points:{uniforms:Gt([De.points,De.fog]),vertexShader:nt.points_vert,fragmentShader:nt.points_frag},dashed:{uniforms:Gt([De.common,De.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:nt.linedashed_vert,fragmentShader:nt.linedashed_frag},depth:{uniforms:Gt([De.common,De.displacementmap]),vertexShader:nt.depth_vert,fragmentShader:nt.depth_frag},normal:{uniforms:Gt([De.common,De.bumpmap,De.normalmap,De.displacementmap,{opacity:{value:1}}]),vertexShader:nt.normal_vert,fragmentShader:nt.normal_frag},sprite:{uniforms:Gt([De.sprite,De.fog]),vertexShader:nt.sprite_vert,fragmentShader:nt.sprite_frag},background:{uniforms:{uvTransform:{value:new vn},t2D:{value:null}},vertexShader:nt.background_vert,fragmentShader:nt.background_frag},cube:{uniforms:Gt([De.envmap,{opacity:{value:1}}]),vertexShader:nt.cube_vert,fragmentShader:nt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:nt.equirect_vert,fragmentShader:nt.equirect_frag},distanceRGBA:{uniforms:Gt([De.common,De.displacementmap,{referencePosition:{value:new q},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:nt.distanceRGBA_vert,fragmentShader:nt.distanceRGBA_frag},shadow:{uniforms:Gt([De.lights,De.fog,{color:{value:new Ue(0)},opacity:{value:1}}]),vertexShader:nt.shadow_vert,fragmentShader:nt.shadow_frag}};kn.physical={uniforms:Gt([kn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Ee(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new Ue(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:nt.meshphysical_vert,fragmentShader:nt.meshphysical_frag};function DS(n,e,t,i,r){const s=new Ue(0);let o=0,a,l,c=null,d=0,u=null;function f(p,x,m,v){let g=x.isScene===!0?x.background:null;g&&g.isTexture&&(g=e.get(g));const w=n.xr,y=w.getSession&&w.getSession();y&&y.environmentBlendMode==="additive"&&(g=null),g===null?h(s,o):g&&g.isColor&&(h(g,1),v=!0),(n.autoClear||v)&&n.clear(n.autoClearColor,n.autoClearDepth,n.autoClearStencil),g&&(g.isCubeTexture||g.isWebGLCubeRenderTarget||g.mapping===Yo)?(l===void 0&&(l=new gt(new us(1,1,1),new en({name:"BackgroundCubeMaterial",uniforms:Co(kn.cube.uniforms),vertexShader:kn.cube.vertexShader,fragmentShader:kn.cube.fragmentShader,side:Rt,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),l.geometry.deleteAttribute("uv"),l.onBeforeRender=function(M,b,_){this.matrixWorld.copyPosition(_.matrixWorld)},Object.defineProperty(l.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(l)),g.isWebGLCubeRenderTarget&&(g=g.texture),l.material.uniforms.envMap.value=g,l.material.uniforms.flipEnvMap.value=g.isCubeTexture&&g._needsFlipEnvMap?-1:1,(c!==g||d!==g.version||u!==n.toneMapping)&&(l.material.needsUpdate=!0,c=g,d=g.version,u=n.toneMapping),p.unshift(l,l.geometry,l.material,0,0,null)):g&&g.isTexture&&(a===void 0&&(a=new gt(new Wa(2,2),new en({name:"BackgroundMaterial",uniforms:Co(kn.background.uniforms),vertexShader:kn.background.vertexShader,fragmentShader:kn.background.fragmentShader,side:Xo,depthTest:!1,depthWrite:!1,fog:!1})),a.geometry.deleteAttribute("normal"),Object.defineProperty(a.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(a)),a.material.uniforms.t2D.value=g,g.matrixAutoUpdate===!0&&g.updateMatrix(),a.material.uniforms.uvTransform.value.copy(g.matrix),(c!==g||d!==g.version||u!==n.toneMapping)&&(a.material.needsUpdate=!0,c=g,d=g.version,u=n.toneMapping),p.unshift(a,a.geometry,a.material,0,0,null))}function h(p,x){t.buffers.color.setClear(p.r,p.g,p.b,x,r)}return{getClearColor:function(){return s},setClearColor:function(p,x=1){s.set(p),o=x,h(s,o)},getClearAlpha:function(){return o},setClearAlpha:function(p){o=p,h(s,o)},render:f}}function OS(n,e,t,i){const r=n.getParameter(34921),s=i.isWebGL2?null:e.get("OES_vertex_array_object"),o=i.isWebGL2||s!==null,a={},l=x(null);let c=l;function d(W,L,z,U,X){let K=!1;if(o){const j=p(U,z,L);c!==j&&(c=j,f(c.object)),K=m(U,X),K&&v(U,X)}else{const j=L.wireframe===!0;(c.geometry!==U.id||c.program!==z.id||c.wireframe!==j)&&(c.geometry=U.id,c.program=z.id,c.wireframe=j,K=!0)}W.isInstancedMesh===!0&&(K=!0),X!==null&&t.update(X,34963),K&&(_(W,L,z,U),X!==null&&n.bindBuffer(34963,t.get(X).buffer))}function u(){return i.isWebGL2?n.createVertexArray():s.createVertexArrayOES()}function f(W){return i.isWebGL2?n.bindVertexArray(W):s.bindVertexArrayOES(W)}function h(W){return i.isWebGL2?n.deleteVertexArray(W):s.deleteVertexArrayOES(W)}function p(W,L,z){const U=z.wireframe===!0;let X=a[W.id];X===void 0&&(X={},a[W.id]=X);let K=X[L.id];K===void 0&&(K={},X[L.id]=K);let j=K[U];return j===void 0&&(j=x(u()),K[U]=j),j}function x(W){const L=[],z=[],U=[];for(let X=0;X<r;X++)L[X]=0,z[X]=0,U[X]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:L,enabledAttributes:z,attributeDivisors:U,object:W,attributes:{},index:null}}function m(W,L){const z=c.attributes,U=W.attributes;let X=0;for(const K in U){const j=z[K],ee=U[K];if(j===void 0||j.attribute!==ee||j.data!==ee.data)return!0;X++}return c.attributesNum!==X||c.index!==L}function v(W,L){const z={},U=W.attributes;let X=0;for(const K in U){const j=U[K],ee={};ee.attribute=j,j.data&&(ee.data=j.data),z[K]=ee,X++}c.attributes=z,c.attributesNum=X,c.index=L}function g(){const W=c.newAttributes;for(let L=0,z=W.length;L<z;L++)W[L]=0}function w(W){y(W,0)}function y(W,L){const z=c.newAttributes,U=c.enabledAttributes,X=c.attributeDivisors;z[W]=1,U[W]===0&&(n.enableVertexAttribArray(W),U[W]=1),X[W]!==L&&((i.isWebGL2?n:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](W,L),X[W]=L)}function M(){const W=c.newAttributes,L=c.enabledAttributes;for(let z=0,U=L.length;z<U;z++)L[z]!==W[z]&&(n.disableVertexAttribArray(z),L[z]=0)}function b(W,L,z,U,X,K){i.isWebGL2===!0&&(z===5124||z===5125)?n.vertexAttribIPointer(W,L,z,X,K):n.vertexAttribPointer(W,L,z,U,X,K)}function _(W,L,z,U){if(i.isWebGL2===!1&&(W.isInstancedMesh||U.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;g();const X=U.attributes,K=z.getAttributes(),j=L.defaultAttributeValues;for(const ee in K){const P=K[ee];if(P>=0){const H=X[ee];if(H!==void 0){const Y=H.normalized,Q=H.itemSize,F=t.get(H);if(F===void 0)continue;const oe=F.buffer,Se=F.type,Me=F.bytesPerElement;if(H.isInterleavedBufferAttribute){const be=H.data,_e=be.stride,Ie=H.offset;be&&be.isInstancedInterleavedBuffer?(y(P,be.meshPerAttribute),U._maxInstanceCount===void 0&&(U._maxInstanceCount=be.meshPerAttribute*be.count)):w(P),n.bindBuffer(34962,oe),b(P,Q,Se,Y,_e*Me,Ie*Me)}else H.isInstancedBufferAttribute?(y(P,H.meshPerAttribute),U._maxInstanceCount===void 0&&(U._maxInstanceCount=H.meshPerAttribute*H.count)):w(P),n.bindBuffer(34962,oe),b(P,Q,Se,Y,0,0)}else if(ee==="instanceMatrix"){const Y=t.get(W.instanceMatrix);if(Y===void 0)continue;const Q=Y.buffer,F=Y.type;y(P+0,1),y(P+1,1),y(P+2,1),y(P+3,1),n.bindBuffer(34962,Q),n.vertexAttribPointer(P+0,4,F,!1,64,0),n.vertexAttribPointer(P+1,4,F,!1,64,16),n.vertexAttribPointer(P+2,4,F,!1,64,32),n.vertexAttribPointer(P+3,4,F,!1,64,48)}else if(ee==="instanceColor"){const Y=t.get(W.instanceColor);if(Y===void 0)continue;const Q=Y.buffer,F=Y.type;y(P,1),n.bindBuffer(34962,Q),n.vertexAttribPointer(P,3,F,!1,12,0)}else if(j!==void 0){const Y=j[ee];if(Y!==void 0)switch(Y.length){case 2:n.vertexAttrib2fv(P,Y);break;case 3:n.vertexAttrib3fv(P,Y);break;case 4:n.vertexAttrib4fv(P,Y);break;default:n.vertexAttrib1fv(P,Y)}}}}M()}function S(){I();for(const W in a){const L=a[W];for(const z in L){const U=L[z];for(const X in U)h(U[X].object),delete U[X];delete L[z]}delete a[W]}}function E(W){if(a[W.id]===void 0)return;const L=a[W.id];for(const z in L){const U=L[z];for(const X in U)h(U[X].object),delete U[X];delete L[z]}delete a[W.id]}function R(W){for(const L in a){const z=a[L];if(z[W.id]===void 0)continue;const U=z[W.id];for(const X in U)h(U[X].object),delete U[X];delete z[W.id]}}function I(){$(),c!==l&&(c=l,f(c.object))}function $(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:d,reset:I,resetDefaultState:$,dispose:S,releaseStatesOfGeometry:E,releaseStatesOfProgram:R,initAttributes:g,enableAttribute:w,disableUnusedAttributes:M}}function qS(n,e,t,i){const r=i.isWebGL2;let s;function o(c){s=c}function a(c,d){n.drawArrays(s,c,d),t.update(d,s,1)}function l(c,d,u){if(u===0)return;let f,h;if(r)f=n,h="drawArraysInstanced";else if(f=e.get("ANGLE_instanced_arrays"),h="drawArraysInstancedANGLE",f===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[h](s,c,d,u),t.update(d,s,u)}this.setMode=o,this.render=a,this.renderInstances=l}function zS(n,e,t){let i;function r(){if(i!==void 0)return i;const b=e.get("EXT_texture_filter_anisotropic");return b!==null?i=n.getParameter(b.MAX_TEXTURE_MAX_ANISOTROPY_EXT):i=0,i}function s(b){if(b==="highp"){if(n.getShaderPrecisionFormat(35633,36338).precision>0&&n.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";b="mediump"}return b==="mediump"&&n.getShaderPrecisionFormat(35633,36337).precision>0&&n.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&n instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext<"u"&&n instanceof WebGL2ComputeRenderingContext;let a=t.precision!==void 0?t.precision:"highp";const l=s(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const c=t.logarithmicDepthBuffer===!0,d=n.getParameter(34930),u=n.getParameter(35660),f=n.getParameter(3379),h=n.getParameter(34076),p=n.getParameter(34921),x=n.getParameter(36347),m=n.getParameter(36348),v=n.getParameter(36349),g=u>0,w=o||!!e.get("OES_texture_float"),y=g&&w,M=o?n.getParameter(36183):0;return{isWebGL2:o,getMaxAnisotropy:r,getMaxPrecision:s,precision:a,logarithmicDepthBuffer:c,maxTextures:d,maxVertexTextures:u,maxTextureSize:f,maxCubemapSize:h,maxAttributes:p,maxVertexUniforms:x,maxVaryings:m,maxFragmentUniforms:v,vertexTextures:g,floatFragmentTextures:w,floatVertexTextures:y,maxSamples:M}}function FS(n){const e=this;let t=null,i=0,r=!1,s=!1;const o=new ri,a=new vn,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(u,f,h){const p=u.length!==0||f||i!==0||r;return r=f,t=d(u,h,0),i=u.length,p},this.beginShadows=function(){s=!0,d(null)},this.endShadows=function(){s=!1,c()},this.setState=function(u,f,h){const p=u.clippingPlanes,x=u.clipIntersection,m=u.clipShadows,v=n.get(u);if(!r||p===null||p.length===0||s&&!m)s?d(null):c();else{const g=s?0:i,w=g*4;let y=v.clippingState||null;l.value=y,y=d(p,f,w,h);for(let M=0;M!==w;++M)y[M]=t[M];v.clippingState=y,this.numIntersection=x?this.numPlanes:0,this.numPlanes+=g}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function d(u,f,h,p){const x=u!==null?u.length:0;let m=null;if(x!==0){if(m=l.value,p!==!0||m===null){const v=h+x*4,g=f.matrixWorldInverse;a.getNormalMatrix(g),(m===null||m.length<v)&&(m=new Float32Array(v));for(let w=0,y=h;w!==x;++w,y+=4)o.copy(u[w]).applyMatrix4(g,a),o.normal.toArray(m,y),m[y+3]=o.constant}l.value=m,l.needsUpdate=!0}return e.numPlanes=x,e.numIntersection=0,m}}function NS(n){let e=new WeakMap;function t(o,a){return a===jl?o.mapping=bc:a===Xl&&(o.mapping=_c),o}function i(o){if(o&&o.isTexture){const a=o.mapping;if(a===jl||a===Xl)if(e.has(o)){const l=e.get(o).texture;return t(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=n.getRenderList(),d=n.getRenderTarget(),u=new Mp(l.height/2);return u.fromEquirectangularTexture(n,o),e.set(o,u),n.setRenderTarget(d),n.setRenderList(c),o.addEventListener("dispose",r),t(u.texture,o.mapping)}else return null}}return o}function r(o){const a=o.target;a.removeEventListener("dispose",r);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function s(){e=new WeakMap}return{get:i,dispose:s}}function BS(n){const e={};function t(i){if(e[i]!==void 0)return e[i];let r;switch(i){case"WEBGL_depth_texture":r=n.getExtension("WEBGL_depth_texture")||n.getExtension("MOZ_WEBGL_depth_texture")||n.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=n.getExtension("WEBGL_compressed_texture_pvrtc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=n.getExtension(i)}return e[i]=r,r}return{has:function(i){return t(i)!==null},init:function(i){i.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float")},get:function(i){const r=t(i);return r===null&&console.warn("THREE.WebGLRenderer: "+i+" extension not supported."),r}}}function US(n,e,t,i){const r={},s=new WeakMap;function o(u){const f=u.target;f.index!==null&&e.remove(f.index);for(const p in f.attributes)e.remove(f.attributes[p]);f.removeEventListener("dispose",o),delete r[f.id];const h=s.get(f);h&&(e.remove(h),s.delete(f)),i.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,t.memory.geometries--}function a(u,f){return r[f.id]===!0||(f.addEventListener("dispose",o),r[f.id]=!0,t.memory.geometries++),f}function l(u){const f=u.attributes;for(const p in f)e.update(f[p],34962);const h=u.morphAttributes;for(const p in h){const x=h[p];for(let m=0,v=x.length;m<v;m++)e.update(x[m],34962)}}function c(u){const f=[],h=u.index,p=u.attributes.position;let x=0;if(h!==null){const g=h.array;x=h.version;for(let w=0,y=g.length;w<y;w+=3){const M=g[w+0],b=g[w+1],_=g[w+2];f.push(M,b,b,_,_,M)}}else{const g=p.array;x=p.version;for(let w=0,y=g.length/3-1;w<y;w+=3){const M=w+0,b=w+1,_=w+2;f.push(M,b,b,_,_,M)}}const m=new(xy(f)>65535?ds:ls)(f,1);m.version=x;const v=s.get(u);v&&e.remove(v),s.set(u,m)}function d(u){const f=s.get(u);if(f){const h=u.index;h!==null&&f.version<h.version&&c(u)}else c(u);return s.get(u)}return{get:a,update:l,getWireframeAttribute:d}}function GS(n,e,t,i){const r=i.isWebGL2;let s;function o(f){s=f}let a,l;function c(f){a=f.type,l=f.bytesPerElement}function d(f,h){n.drawElements(s,h,a,f*l),t.update(h,s,1)}function u(f,h,p){if(p===0)return;let x,m;if(r)x=n,m="drawElementsInstanced";else if(x=e.get("ANGLE_instanced_arrays"),m="drawElementsInstancedANGLE",x===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}x[m](s,h,a,f*l,p),t.update(h,s,p)}this.setMode=o,this.setIndex=c,this.render=d,this.renderInstances=u}function kS(n){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function i(s,o,a){switch(t.calls++,o){case 4:t.triangles+=a*(s/3);break;case 1:t.lines+=a*(s/2);break;case 3:t.lines+=a*(s-1);break;case 2:t.lines+=a*s;break;case 0:t.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function r(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:r,update:i}}function HS(n,e){return n[0]-e[0]}function VS(n,e){return Math.abs(e[1])-Math.abs(n[1])}function WS(n){const e={},t=new Float32Array(8),i=[];for(let s=0;s<8;s++)i[s]=[s,0];function r(s,o,a,l){const c=s.morphTargetInfluences,d=c===void 0?0:c.length;let u=e[o.id];if(u===void 0){u=[];for(let m=0;m<d;m++)u[m]=[m,0];e[o.id]=u}for(let m=0;m<d;m++){const v=u[m];v[0]=m,v[1]=c[m]}u.sort(VS);for(let m=0;m<8;m++)m<d&&u[m][1]?(i[m][0]=u[m][0],i[m][1]=u[m][1]):(i[m][0]=Number.MAX_SAFE_INTEGER,i[m][1]=0);i.sort(HS);const f=a.morphTargets&&o.morphAttributes.position,h=a.morphNormals&&o.morphAttributes.normal;let p=0;for(let m=0;m<8;m++){const v=i[m],g=v[0],w=v[1];g!==Number.MAX_SAFE_INTEGER&&w?(f&&o.getAttribute("morphTarget"+m)!==f[g]&&o.setAttribute("morphTarget"+m,f[g]),h&&o.getAttribute("morphNormal"+m)!==h[g]&&o.setAttribute("morphNormal"+m,h[g]),t[m]=w,p+=w):(f&&o.hasAttribute("morphTarget"+m)===!0&&o.deleteAttribute("morphTarget"+m),h&&o.hasAttribute("morphNormal"+m)===!0&&o.deleteAttribute("morphNormal"+m),t[m]=0)}const x=o.morphTargetsRelative?1:1-p;l.getUniforms().setValue(n,"morphTargetBaseInfluence",x),l.getUniforms().setValue(n,"morphTargetInfluences",t)}return{update:r}}function $S(n,e,t,i){let r=new WeakMap;function s(l){const c=i.render.frame,d=l.geometry,u=e.get(l,d);return r.get(u)!==c&&(e.update(u),r.set(u,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),t.update(l.instanceMatrix,34962),l.instanceColor!==null&&t.update(l.instanceColor,34962)),u}function o(){r=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:s,dispose:o}}function Ro(n=null,e=1,t=1,i=1){ft.call(this,null),this.image={data:n,width:e,height:t,depth:i},this.magFilter=Dt,this.minFilter=Dt,this.wrapR=Zt,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}Ro.prototype=Object.create(ft.prototype);Ro.prototype.constructor=Ro;Ro.prototype.isDataTexture2DArray=!0;function Po(n=null,e=1,t=1,i=1){ft.call(this,null),this.image={data:n,width:e,height:t,depth:i},this.magFilter=Dt,this.minFilter=Dt,this.wrapR=Zt,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}Po.prototype=Object.create(ft.prototype);Po.prototype.constructor=Po;Po.prototype.isDataTexture3D=!0;const yy=new ft,jS=new Ro,XS=new Po,by=new ui,e1=[],t1=[],n1=new Float32Array(16),i1=new Float32Array(9),r1=new Float32Array(4);function ea(n,e,t){const i=n[0];if(i<=0||i>0)return n;const r=e*t;let s=e1[r];if(s===void 0&&(s=new Float32Array(r),e1[r]=s),e!==0){i.toArray(s,0);for(let o=1,a=0;o!==e;++o)a+=t,n[o].toArray(s,a)}return s}function Pn(n,e){if(n.length!==e.length)return!1;for(let t=0,i=n.length;t<i;t++)if(n[t]!==e[t])return!1;return!0}function Mn(n,e){for(let t=0,i=e.length;t<i;t++)n[t]=e[t]}function _y(n,e){let t=t1[e];t===void 0&&(t=new Int32Array(e),t1[e]=t);for(let i=0;i!==e;++i)t[i]=n.allocateTextureUnit();return t}function YS(n,e){const t=this.cache;t[0]!==e&&(n.uniform1f(this.addr,e),t[0]=e)}function ZS(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Pn(t,e))return;n.uniform2fv(this.addr,e),Mn(t,e)}}function JS(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(n.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(Pn(t,e))return;n.uniform3fv(this.addr,e),Mn(t,e)}}function KS(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Pn(t,e))return;n.uniform4fv(this.addr,e),Mn(t,e)}}function QS(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(Pn(t,e))return;n.uniformMatrix2fv(this.addr,!1,e),Mn(t,e)}else{if(Pn(t,i))return;r1.set(i),n.uniformMatrix2fv(this.addr,!1,r1),Mn(t,i)}}function eE(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(Pn(t,e))return;n.uniformMatrix3fv(this.addr,!1,e),Mn(t,e)}else{if(Pn(t,i))return;i1.set(i),n.uniformMatrix3fv(this.addr,!1,i1),Mn(t,i)}}function tE(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(Pn(t,e))return;n.uniformMatrix4fv(this.addr,!1,e),Mn(t,e)}else{if(Pn(t,i))return;n1.set(i),n.uniformMatrix4fv(this.addr,!1,n1),Mn(t,i)}}function nE(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.safeSetTexture2D(e||yy,r)}function iE(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTexture2DArray(e||jS,r)}function rE(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTexture3D(e||XS,r)}function sE(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.safeSetTextureCube(e||by,r)}function oE(n,e){const t=this.cache;t[0]!==e&&(n.uniform1i(this.addr,e),t[0]=e)}function aE(n,e){const t=this.cache;Pn(t,e)||(n.uniform2iv(this.addr,e),Mn(t,e))}function cE(n,e){const t=this.cache;Pn(t,e)||(n.uniform3iv(this.addr,e),Mn(t,e))}function lE(n,e){const t=this.cache;Pn(t,e)||(n.uniform4iv(this.addr,e),Mn(t,e))}function dE(n,e){const t=this.cache;t[0]!==e&&(n.uniform1ui(this.addr,e),t[0]=e)}function uE(n){switch(n){case 5126:return YS;case 35664:return ZS;case 35665:return JS;case 35666:return KS;case 35674:return QS;case 35675:return eE;case 35676:return tE;case 5124:case 35670:return oE;case 35667:case 35671:return aE;case 35668:case 35672:return cE;case 35669:case 35673:return lE;case 5125:return dE;case 35678:case 36198:case 36298:case 36306:case 35682:return nE;case 35679:case 36299:case 36307:return rE;case 35680:case 36300:case 36308:case 36293:return sE;case 36289:case 36303:case 36311:case 36292:return iE}}function fE(n,e){n.uniform1fv(this.addr,e)}function hE(n,e){n.uniform1iv(this.addr,e)}function pE(n,e){n.uniform2iv(this.addr,e)}function mE(n,e){n.uniform3iv(this.addr,e)}function xE(n,e){n.uniform4iv(this.addr,e)}function gE(n,e){const t=ea(e,this.size,2);n.uniform2fv(this.addr,t)}function vE(n,e){const t=ea(e,this.size,3);n.uniform3fv(this.addr,t)}function yE(n,e){const t=ea(e,this.size,4);n.uniform4fv(this.addr,t)}function bE(n,e){const t=ea(e,this.size,4);n.uniformMatrix2fv(this.addr,!1,t)}function _E(n,e){const t=ea(e,this.size,9);n.uniformMatrix3fv(this.addr,!1,t)}function wE(n,e){const t=ea(e,this.size,16);n.uniformMatrix4fv(this.addr,!1,t)}function ME(n,e,t){const i=e.length,r=_y(t,i);n.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)t.safeSetTexture2D(e[s]||yy,r[s])}function SE(n,e,t){const i=e.length,r=_y(t,i);n.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)t.safeSetTextureCube(e[s]||by,r[s])}function EE(n){switch(n){case 5126:return fE;case 35664:return gE;case 35665:return vE;case 35666:return yE;case 35674:return bE;case 35675:return _E;case 35676:return wE;case 5124:case 35670:return hE;case 35667:case 35671:return pE;case 35668:case 35672:return mE;case 35669:case 35673:return xE;case 35678:case 36198:case 36298:case 36306:case 35682:return ME;case 35680:case 36300:case 36308:case 36293:return SE}}function TE(n,e,t){this.id=n,this.addr=t,this.cache=[],this.setValue=uE(e.type)}function wy(n,e,t){this.id=n,this.addr=t,this.cache=[],this.size=e.size,this.setValue=EE(e.type)}wy.prototype.updateCache=function(n){const e=this.cache;n instanceof Float32Array&&e.length!==n.length&&(this.cache=new Float32Array(n.length)),Mn(e,n)};function My(n){this.id=n,this.seq=[],this.map={}}My.prototype.setValue=function(n,e,t){const i=this.seq;for(let r=0,s=i.length;r!==s;++r){const o=i[r];o.setValue(n,e[o.id],t)}};const Dh=/(\w+)(\])?(\[|\.)?/g;function s1(n,e){n.seq.push(e),n.map[e.id]=e}function AE(n,e,t){const i=n.name,r=i.length;for(Dh.lastIndex=0;;){const s=Dh.exec(i),o=Dh.lastIndex;let a=s[1];const l=s[2]==="]",c=s[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===r){s1(t,c===void 0?new TE(a,n,e):new wy(a,n,e));break}else{let u=t.map[a];u===void 0&&(u=new My(a),s1(t,u)),t=u}}}function fr(n,e){this.seq=[],this.map={};const t=n.getProgramParameter(e,35718);for(let i=0;i<t;++i){const r=n.getActiveUniform(e,i),s=n.getUniformLocation(e,r.name);AE(r,s,this)}}fr.prototype.setValue=function(n,e,t,i){const r=this.map[e];r!==void 0&&r.setValue(n,t,i)};fr.prototype.setOptional=function(n,e,t){const i=e[t];i!==void 0&&this.setValue(n,t,i)};fr.upload=function(n,e,t,i){for(let r=0,s=e.length;r!==s;++r){const o=e[r],a=t[o.id];a.needsUpdate!==!1&&o.setValue(n,a.value,i)}};fr.seqWithValue=function(n,e){const t=[];for(let i=0,r=n.length;i!==r;++i){const s=n[i];s.id in e&&t.push(s)}return t};function o1(n,e,t){const i=n.createShader(e);return n.shaderSource(i,t),n.compileShader(i),i}let LE=0;function CE(n){const e=n.split(`
`);for(let t=0;t<e.length;t++)e[t]=t+1+": "+e[t];return e.join(`
`)}function Sy(n){switch(n){case Qt:return["Linear","( value )"];case Mc:return["sRGB","( value )"];case kd:return["RGBE","( value )"];case vp:return["RGBM","( value, 7.0 )"];case yp:return["RGBM","( value, 16.0 )"];case bp:return["RGBD","( value, 256.0 )"];case Gd:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case dy:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",n),["Linear","( value )"]}}function a1(n,e,t){const i=n.getShaderParameter(e,35713),r=n.getShaderInfoLog(e).trim();if(i&&r==="")return"";const s=n.getShaderSource(e);return"THREE.WebGLShader: gl.getShaderInfoLog() "+t+`
`+r+CE(s)}function fa(n,e){const t=Sy(e);return"vec4 "+n+"( vec4 value ) { return "+t[0]+"ToLinear"+t[1]+"; }"}function RE(n,e){const t=Sy(e);return"vec4 "+n+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function PE(n,e){let t;switch(e){case l2:t="Linear";break;case d2:t="Reinhard";break;case u2:t="OptimizedCineon";break;case f2:t="ACESFilmic";break;case h2:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+n+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function IE(n){return[n.extensionDerivatives||n.envMapCubeUV||n.bumpMap||n.tangentSpaceNormalMap||n.clearcoatNormalMap||n.flatShading||n.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(n.extensionFragDepth||n.logarithmicDepthBuffer)&&n.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",n.extensionDrawBuffers&&n.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Sa).join(`
`)}function DE(n){const e=[];for(const t in n){const i=n[t];i!==!1&&e.push("#define "+t+" "+i)}return e.join(`
`)}function OE(n,e){const t={},i=n.getProgramParameter(e,35721);for(let r=0;r<i;r++){const o=n.getActiveAttrib(e,r).name;t[o]=n.getAttribLocation(e,o)}return t}function Sa(n){return n!==""}function c1(n,e){return n.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function l1(n,e){return n.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const qE=/^[ \t]*#include +<([\w\d./]+)>/gm;function w0(n){return n.replace(qE,zE)}function zE(n,e){const t=nt[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return w0(t)}const FE=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,NE=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function d1(n){return n.replace(NE,Ey).replace(FE,BE)}function BE(n,e,t,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Ey(n,e,t,i)}function Ey(n,e,t,i){let r="";for(let s=parseInt(e);s<parseInt(t);s++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function u1(n){let e="precision "+n.precision+` float;
precision `+n.precision+" int;";return n.precision==="highp"?e+=`
#define HIGH_PRECISION`:n.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:n.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function UE(n){let e="SHADOWMAP_TYPE_BASIC";return n.shadowMapType===fp?e="SHADOWMAP_TYPE_PCF":n.shadowMapType===Gv?e="SHADOWMAP_TYPE_PCF_SOFT":n.shadowMapType===mo&&(e="SHADOWMAP_TYPE_VSM"),e}function GE(n){let e="ENVMAP_TYPE_CUBE";if(n.envMap)switch(n.envMapMode){case bc:case _c:e="ENVMAP_TYPE_CUBE";break;case Yo:case wc:e="ENVMAP_TYPE_CUBE_UV";break}return e}function kE(n){let e="ENVMAP_MODE_REFLECTION";if(n.envMap)switch(n.envMapMode){case _c:case wc:e="ENVMAP_MODE_REFRACTION";break}return e}function HE(n){let e="ENVMAP_BLENDING_NONE";if(n.envMap)switch(n.combine){case yc:e="ENVMAP_BLENDING_MULTIPLY";break;case a2:e="ENVMAP_BLENDING_MIX";break;case c2:e="ENVMAP_BLENDING_ADD";break}return e}function VE(n,e,t,i){const r=n.getContext(),s=t.defines;let o=t.vertexShader,a=t.fragmentShader;const l=UE(t),c=GE(t),d=kE(t),u=HE(t),f=n.gammaFactor>0?n.gammaFactor:1,h=t.isWebGL2?"":IE(t),p=DE(s),x=r.createProgram();let m,v,g=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(m=[p].filter(Sa).join(`
`),m.length>0&&(m+=`
`),v=[h,p].filter(Sa).join(`
`),v.length>0&&(v+=`
`)):(m=[u1(t),"#define SHADER_NAME "+t.shaderName,p,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+f,"#define MAX_BONES "+t.maxBones,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+d:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.useVertexTexture?"#define BONE_TEXTURE":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#ifdef USE_COLOR","	attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Sa).join(`
`),v=[h,u1(t),"#define SHADER_NAME "+t.shaderName,p,t.alphaTest?"#define ALPHATEST "+t.alphaTest+(t.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+f,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+d:"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.sheen?"#define USE_SHEEN":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(t.extensionShaderTextureLOD||t.envMap)&&t.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==es?"#define TONE_MAPPING":"",t.toneMapping!==es?nt.tonemapping_pars_fragment:"",t.toneMapping!==es?PE("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",nt.encodings_pars_fragment,t.map?fa("mapTexelToLinear",t.mapEncoding):"",t.matcap?fa("matcapTexelToLinear",t.matcapEncoding):"",t.envMap?fa("envMapTexelToLinear",t.envMapEncoding):"",t.emissiveMap?fa("emissiveMapTexelToLinear",t.emissiveMapEncoding):"",t.lightMap?fa("lightMapTexelToLinear",t.lightMapEncoding):"",RE("linearToOutputTexel",t.outputEncoding),t.depthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Sa).join(`
`)),o=w0(o),o=c1(o,t),o=l1(o,t),a=w0(a),a=c1(a,t),a=l1(a,t),o=d1(o),a=d1(a),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(g=`#version 300 es
`,m=["#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,v=["#define varying in",t.glslVersion===_0?"":"out highp vec4 pc_fragColor;",t.glslVersion===_0?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+v);const w=g+m+o,y=g+v+a,M=o1(r,35633,w),b=o1(r,35632,y);if(r.attachShader(x,M),r.attachShader(x,b),t.index0AttributeName!==void 0?r.bindAttribLocation(x,0,t.index0AttributeName):t.morphTargets===!0&&r.bindAttribLocation(x,0,"position"),r.linkProgram(x),n.debug.checkShaderErrors){const E=r.getProgramInfoLog(x).trim(),R=r.getShaderInfoLog(M).trim(),I=r.getShaderInfoLog(b).trim();let $=!0,W=!0;if(r.getProgramParameter(x,35714)===!1){$=!1;const L=a1(r,M,"vertex"),z=a1(r,b,"fragment");console.error("THREE.WebGLProgram: shader error: ",r.getError(),"35715",r.getProgramParameter(x,35715),"gl.getProgramInfoLog",E,L,z)}else E!==""?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",E):(R===""||I==="")&&(W=!1);W&&(this.diagnostics={runnable:$,programLog:E,vertexShader:{log:R,prefix:m},fragmentShader:{log:I,prefix:v}})}r.deleteShader(M),r.deleteShader(b);let _;this.getUniforms=function(){return _===void 0&&(_=new fr(r,x)),_};let S;return this.getAttributes=function(){return S===void 0&&(S=OE(r,x)),S},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(x),this.program=void 0},this.name=t.shaderName,this.id=LE++,this.cacheKey=e,this.usedTimes=1,this.program=x,this.vertexShader=M,this.fragmentShader=b,this}function WE(n,e,t,i,r,s){const o=[],a=i.isWebGL2,l=i.logarithmicDepthBuffer,c=i.floatVertexTextures,d=i.maxVertexUniforms,u=i.vertexTextures;let f=i.precision;const h={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},p=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function x(b){const S=b.skeleton.bones;if(c)return 1024;{const R=Math.floor((d-20)/4),I=Math.min(R,S.length);return I<S.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+S.length+" bones. This GPU supports "+I+"."),0):I}}function m(b){let _;return b&&b.isTexture?_=b.encoding:b&&b.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),_=b.texture.encoding):_=Qt,_}function v(b,_,S,E,R){const I=E.fog,$=b.isMeshStandardMaterial?E.environment:null,W=e.get(b.envMap||$),L=h[b.type],z=R.isSkinnedMesh?x(R):0;b.precision!==null&&(f=i.getMaxPrecision(b.precision),f!==b.precision&&console.warn("THREE.WebGLProgram.getParameters:",b.precision,"not supported, using",f,"instead."));let U,X;if(L){const ee=kn[L];U=ee.vertexShader,X=ee.fragmentShader}else U=b.vertexShader,X=b.fragmentShader;const K=n.getRenderTarget();return{isWebGL2:a,shaderID:L,shaderName:b.type,vertexShader:U,fragmentShader:X,defines:b.defines,isRawShaderMaterial:b.isRawShaderMaterial===!0,glslVersion:b.glslVersion,precision:f,instancing:R.isInstancedMesh===!0,instancingColor:R.isInstancedMesh===!0&&R.instanceColor!==null,supportsVertexTextures:u,outputEncoding:K!==null?m(K.texture):n.outputEncoding,map:!!b.map,mapEncoding:m(b.map),matcap:!!b.matcap,matcapEncoding:m(b.matcap),envMap:!!W,envMapMode:W&&W.mapping,envMapEncoding:m(W),envMapCubeUV:!!W&&(W.mapping===Yo||W.mapping===wc),lightMap:!!b.lightMap,lightMapEncoding:m(b.lightMap),aoMap:!!b.aoMap,emissiveMap:!!b.emissiveMap,emissiveMapEncoding:m(b.emissiveMap),bumpMap:!!b.bumpMap,normalMap:!!b.normalMap,objectSpaceNormalMap:b.normalMapType===hy,tangentSpaceNormalMap:b.normalMapType===Ts,clearcoatMap:!!b.clearcoatMap,clearcoatRoughnessMap:!!b.clearcoatRoughnessMap,clearcoatNormalMap:!!b.clearcoatNormalMap,displacementMap:!!b.displacementMap,roughnessMap:!!b.roughnessMap,metalnessMap:!!b.metalnessMap,specularMap:!!b.specularMap,alphaMap:!!b.alphaMap,gradientMap:!!b.gradientMap,sheen:!!b.sheen,transmissionMap:!!b.transmissionMap,combine:b.combine,vertexTangents:b.normalMap&&b.vertexTangents,vertexColors:b.vertexColors,vertexUvs:!!b.map||!!b.bumpMap||!!b.normalMap||!!b.specularMap||!!b.alphaMap||!!b.emissiveMap||!!b.roughnessMap||!!b.metalnessMap||!!b.clearcoatMap||!!b.clearcoatRoughnessMap||!!b.clearcoatNormalMap||!!b.displacementMap||!!b.transmissionMap,uvsVertexOnly:!(b.map||b.bumpMap||b.normalMap||b.specularMap||b.alphaMap||b.emissiveMap||b.roughnessMap||b.metalnessMap||b.clearcoatNormalMap||b.transmissionMap)&&!!b.displacementMap,fog:!!I,useFog:b.fog,fogExp2:I&&I.isFogExp2,flatShading:b.flatShading,sizeAttenuation:b.sizeAttenuation,logarithmicDepthBuffer:l,skinning:b.skinning&&z>0,maxBones:z,useVertexTexture:c,morphTargets:b.morphTargets,morphNormals:b.morphNormals,maxMorphTargets:n.maxMorphTargets,maxMorphNormals:n.maxMorphNormals,numDirLights:_.directional.length,numPointLights:_.point.length,numSpotLights:_.spot.length,numRectAreaLights:_.rectArea.length,numHemiLights:_.hemi.length,numDirLightShadows:_.directionalShadowMap.length,numPointLightShadows:_.pointShadowMap.length,numSpotLightShadows:_.spotShadowMap.length,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,dithering:b.dithering,shadowMapEnabled:n.shadowMap.enabled&&S.length>0,shadowMapType:n.shadowMap.type,toneMapping:b.toneMapped?n.toneMapping:es,physicallyCorrectLights:n.physicallyCorrectLights,premultipliedAlpha:b.premultipliedAlpha,alphaTest:b.alphaTest,doubleSided:b.side===vc,flipSided:b.side===Rt,depthPacking:b.depthPacking!==void 0?b.depthPacking:!1,index0AttributeName:b.index0AttributeName,extensionDerivatives:b.extensions&&b.extensions.derivatives,extensionFragDepth:b.extensions&&b.extensions.fragDepth,extensionDrawBuffers:b.extensions&&b.extensions.drawBuffers,extensionShaderTextureLOD:b.extensions&&b.extensions.shaderTextureLOD,rendererExtensionFragDepth:a||t.has("EXT_frag_depth"),rendererExtensionDrawBuffers:a||t.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:a||t.has("EXT_shader_texture_lod"),customProgramCacheKey:b.customProgramCacheKey()}}function g(b){const _=[];if(b.shaderID?_.push(b.shaderID):(_.push(b.fragmentShader),_.push(b.vertexShader)),b.defines!==void 0)for(const S in b.defines)_.push(S),_.push(b.defines[S]);if(b.isRawShaderMaterial===!1){for(let S=0;S<p.length;S++)_.push(b[p[S]]);_.push(n.outputEncoding),_.push(n.gammaFactor)}return _.push(b.customProgramCacheKey),_.join()}function w(b){const _=h[b.type];let S;if(_){const E=kn[_];S=gy.clone(E.uniforms)}else S=b.uniforms;return S}function y(b,_){let S;for(let E=0,R=o.length;E<R;E++){const I=o[E];if(I.cacheKey===_){S=I,++S.usedTimes;break}}return S===void 0&&(S=new VE(n,_,b,r),o.push(S)),S}function M(b){if(--b.usedTimes===0){const _=o.indexOf(b);o[_]=o[o.length-1],o.pop(),b.destroy()}}return{getParameters:v,getProgramCacheKey:g,getUniforms:w,acquireProgram:y,releaseProgram:M,programs:o}}function $E(){let n=new WeakMap;function e(s){let o=n.get(s);return o===void 0&&(o={},n.set(s,o)),o}function t(s){n.delete(s)}function i(s,o,a){n.get(s)[o]=a}function r(){n=new WeakMap}return{get:e,remove:t,update:i,dispose:r}}function jE(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.program!==e.program?n.program.id-e.program.id:n.material.id!==e.material.id?n.material.id-e.material.id:n.z!==e.z?n.z-e.z:n.id-e.id}function XE(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.z!==e.z?e.z-n.z:n.id-e.id}function f1(n){const e=[];let t=0;const i=[],r=[],s={id:-1};function o(){t=0,i.length=0,r.length=0}function a(f,h,p,x,m,v){let g=e[t];const w=n.get(p);return g===void 0?(g={id:f.id,object:f,geometry:h,material:p,program:w.program||s,groupOrder:x,renderOrder:f.renderOrder,z:m,group:v},e[t]=g):(g.id=f.id,g.object=f,g.geometry=h,g.material=p,g.program=w.program||s,g.groupOrder=x,g.renderOrder=f.renderOrder,g.z=m,g.group=v),t++,g}function l(f,h,p,x,m,v){const g=a(f,h,p,x,m,v);(p.transparent===!0?r:i).push(g)}function c(f,h,p,x,m,v){const g=a(f,h,p,x,m,v);(p.transparent===!0?r:i).unshift(g)}function d(f,h){i.length>1&&i.sort(f||jE),r.length>1&&r.sort(h||XE)}function u(){for(let f=t,h=e.length;f<h;f++){const p=e[f];if(p.id===null)break;p.id=null,p.object=null,p.geometry=null,p.material=null,p.program=null,p.group=null}}return{opaque:i,transparent:r,init:o,push:l,unshift:c,finish:u,sort:d}}function YE(n){let e=new WeakMap;function t(r,s){const o=e.get(r);let a;return o===void 0?(a=new f1(n),e.set(r,new WeakMap),e.get(r).set(s,a)):(a=o.get(s),a===void 0&&(a=new f1(n),o.set(s,a))),a}function i(){e=new WeakMap}return{get:t,dispose:i}}function ZE(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new q,color:new Ue};break;case"SpotLight":t={position:new q,direction:new q,color:new Ue,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new q,color:new Ue,distance:0,decay:0};break;case"HemisphereLight":t={direction:new q,skyColor:new Ue,groundColor:new Ue};break;case"RectAreaLight":t={color:new Ue,position:new q,halfWidth:new q,halfHeight:new q};break}return n[e.id]=t,t}}}function JE(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Ee};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Ee};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Ee,shadowCameraNear:1,shadowCameraFar:1e3};break}return n[e.id]=t,t}}}let KE=0;function QE(n,e){return(e.castShadow?1:0)-(n.castShadow?1:0)}function eT(n,e){const t=new ZE,i=JE(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let d=0;d<9;d++)r.probe.push(new q);const s=new q,o=new tt,a=new tt;function l(d){let u=0,f=0,h=0;for(let _=0;_<9;_++)r.probe[_].set(0,0,0);let p=0,x=0,m=0,v=0,g=0,w=0,y=0,M=0;d.sort(QE);for(let _=0,S=d.length;_<S;_++){const E=d[_],R=E.color,I=E.intensity,$=E.distance,W=E.shadow&&E.shadow.map?E.shadow.map.texture:null;if(E.isAmbientLight)u+=R.r*I,f+=R.g*I,h+=R.b*I;else if(E.isLightProbe)for(let L=0;L<9;L++)r.probe[L].addScaledVector(E.sh.coefficients[L],I);else if(E.isDirectionalLight){const L=t.get(E);if(L.color.copy(E.color).multiplyScalar(E.intensity),E.castShadow){const z=E.shadow,U=i.get(E);U.shadowBias=z.bias,U.shadowNormalBias=z.normalBias,U.shadowRadius=z.radius,U.shadowMapSize=z.mapSize,r.directionalShadow[p]=U,r.directionalShadowMap[p]=W,r.directionalShadowMatrix[p]=E.shadow.matrix,w++}r.directional[p]=L,p++}else if(E.isSpotLight){const L=t.get(E);if(L.position.setFromMatrixPosition(E.matrixWorld),L.color.copy(R).multiplyScalar(I),L.distance=$,L.coneCos=Math.cos(E.angle),L.penumbraCos=Math.cos(E.angle*(1-E.penumbra)),L.decay=E.decay,E.castShadow){const z=E.shadow,U=i.get(E);U.shadowBias=z.bias,U.shadowNormalBias=z.normalBias,U.shadowRadius=z.radius,U.shadowMapSize=z.mapSize,r.spotShadow[m]=U,r.spotShadowMap[m]=W,r.spotShadowMatrix[m]=E.shadow.matrix,M++}r.spot[m]=L,m++}else if(E.isRectAreaLight){const L=t.get(E);L.color.copy(R).multiplyScalar(I),L.halfWidth.set(E.width*.5,0,0),L.halfHeight.set(0,E.height*.5,0),r.rectArea[v]=L,v++}else if(E.isPointLight){const L=t.get(E);if(L.color.copy(E.color).multiplyScalar(E.intensity),L.distance=E.distance,L.decay=E.decay,E.castShadow){const z=E.shadow,U=i.get(E);U.shadowBias=z.bias,U.shadowNormalBias=z.normalBias,U.shadowRadius=z.radius,U.shadowMapSize=z.mapSize,U.shadowCameraNear=z.camera.near,U.shadowCameraFar=z.camera.far,r.pointShadow[x]=U,r.pointShadowMap[x]=W,r.pointShadowMatrix[x]=E.shadow.matrix,y++}r.point[x]=L,x++}else if(E.isHemisphereLight){const L=t.get(E);L.skyColor.copy(E.color).multiplyScalar(I),L.groundColor.copy(E.groundColor).multiplyScalar(I),r.hemi[g]=L,g++}}v>0&&(e.isWebGL2||n.has("OES_texture_float_linear")===!0?(r.rectAreaLTC1=De.LTC_FLOAT_1,r.rectAreaLTC2=De.LTC_FLOAT_2):n.has("OES_texture_half_float_linear")===!0?(r.rectAreaLTC1=De.LTC_HALF_1,r.rectAreaLTC2=De.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=u,r.ambient[1]=f,r.ambient[2]=h;const b=r.hash;(b.directionalLength!==p||b.pointLength!==x||b.spotLength!==m||b.rectAreaLength!==v||b.hemiLength!==g||b.numDirectionalShadows!==w||b.numPointShadows!==y||b.numSpotShadows!==M)&&(r.directional.length=p,r.spot.length=m,r.rectArea.length=v,r.point.length=x,r.hemi.length=g,r.directionalShadow.length=w,r.directionalShadowMap.length=w,r.pointShadow.length=y,r.pointShadowMap.length=y,r.spotShadow.length=M,r.spotShadowMap.length=M,r.directionalShadowMatrix.length=w,r.pointShadowMatrix.length=y,r.spotShadowMatrix.length=M,b.directionalLength=p,b.pointLength=x,b.spotLength=m,b.rectAreaLength=v,b.hemiLength=g,b.numDirectionalShadows=w,b.numPointShadows=y,b.numSpotShadows=M,r.version=KE++)}function c(d,u){let f=0,h=0,p=0,x=0,m=0;const v=u.matrixWorldInverse;for(let g=0,w=d.length;g<w;g++){const y=d[g];if(y.isDirectionalLight){const M=r.directional[f];M.direction.setFromMatrixPosition(y.matrixWorld),s.setFromMatrixPosition(y.target.matrixWorld),M.direction.sub(s),M.direction.transformDirection(v),f++}else if(y.isSpotLight){const M=r.spot[p];M.position.setFromMatrixPosition(y.matrixWorld),M.position.applyMatrix4(v),M.direction.setFromMatrixPosition(y.matrixWorld),s.setFromMatrixPosition(y.target.matrixWorld),M.direction.sub(s),M.direction.transformDirection(v),p++}else if(y.isRectAreaLight){const M=r.rectArea[x];M.position.setFromMatrixPosition(y.matrixWorld),M.position.applyMatrix4(v),a.identity(),o.copy(y.matrixWorld),o.premultiply(v),a.extractRotation(o),M.halfWidth.set(y.width*.5,0,0),M.halfHeight.set(0,y.height*.5,0),M.halfWidth.applyMatrix4(a),M.halfHeight.applyMatrix4(a),x++}else if(y.isPointLight){const M=r.point[h];M.position.setFromMatrixPosition(y.matrixWorld),M.position.applyMatrix4(v),h++}else if(y.isHemisphereLight){const M=r.hemi[m];M.direction.setFromMatrixPosition(y.matrixWorld),M.direction.transformDirection(v),M.direction.normalize(),m++}}}return{setup:l,setupView:c,state:r}}function h1(n,e){const t=new eT(n,e),i=[],r=[];function s(){i.length=0,r.length=0}function o(u){i.push(u)}function a(u){r.push(u)}function l(){t.setup(i)}function c(u){t.setupView(i,u)}return{init:s,state:{lightsArray:i,shadowsArray:r,lights:t},setupLights:l,setupLightsView:c,pushLight:o,pushShadow:a}}function tT(n,e){let t=new WeakMap;function i(s,o=0){let a;return t.has(s)===!1?(a=new h1(n,e),t.set(s,[]),t.get(s).push(a)):o>=t.get(s).length?(a=new h1(n,e),t.get(s).push(a)):a=t.get(s)[o],a}function r(){t=new WeakMap}return{get:i,dispose:r}}function mr(n){Je.call(this),this.type="MeshDepthMaterial",this.depthPacking=uy,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(n)}mr.prototype=Object.create(Je.prototype);mr.prototype.constructor=mr;mr.prototype.isMeshDepthMaterial=!0;mr.prototype.copy=function(n){return Je.prototype.copy.call(this,n),this.depthPacking=n.depthPacking,this.skinning=n.skinning,this.morphTargets=n.morphTargets,this.map=n.map,this.alphaMap=n.alphaMap,this.displacementMap=n.displacementMap,this.displacementScale=n.displacementScale,this.displacementBias=n.displacementBias,this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this};function xr(n){Je.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new q,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(n)}xr.prototype=Object.create(Je.prototype);xr.prototype.constructor=xr;xr.prototype.isMeshDistanceMaterial=!0;xr.prototype.copy=function(n){return Je.prototype.copy.call(this,n),this.referencePosition.copy(n.referencePosition),this.nearDistance=n.nearDistance,this.farDistance=n.farDistance,this.skinning=n.skinning,this.morphTargets=n.morphTargets,this.map=n.map,this.alphaMap=n.alphaMap,this.displacementMap=n.displacementMap,this.displacementScale=n.displacementScale,this.displacementBias=n.displacementBias,this};var nT=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	float mean = 0.0;
	float squared_mean = 0.0;
	float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );
	for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean * HALF_SAMPLE_RATE;
	squared_mean = squared_mean * HALF_SAMPLE_RATE;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`,iT=`void main() {
	gl_Position = vec4( position, 1.0 );
}`;function Ty(n,e,t){let i=new Ec;const r=new Ee,s=new Ee,o=new ut,a=[],l=[],c={},d={0:Rt,1:Xo,2:vc},u=new en({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new Ee},radius:{value:4}},vertexShader:iT,fragmentShader:nT}),f=u.clone();f.defines.HORIZONTAL_PASS=1;const h=new Xe;h.setAttribute("position",new Ze(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const p=new gt(h,u),x=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=fp,this.render=function(M,b,_){if(x.enabled===!1||x.autoUpdate===!1&&x.needsUpdate===!1||M.length===0)return;const S=n.getRenderTarget(),E=n.getActiveCubeFace(),R=n.getActiveMipmapLevel(),I=n.state;I.setBlending(qi),I.buffers.color.setClear(1,1,1,1),I.buffers.depth.setTest(!0),I.setScissorTest(!1);for(let $=0,W=M.length;$<W;$++){const L=M[$],z=L.shadow;if(z===void 0){console.warn("THREE.WebGLShadowMap:",L,"has no shadow.");continue}if(z.autoUpdate===!1&&z.needsUpdate===!1)continue;r.copy(z.mapSize);const U=z.getFrameExtents();if(r.multiply(U),s.copy(z.mapSize),(r.x>t||r.y>t)&&(r.x>t&&(s.x=Math.floor(t/U.x),r.x=s.x*U.x,z.mapSize.x=s.x),r.y>t&&(s.y=Math.floor(t/U.y),r.y=s.y*U.y,z.mapSize.y=s.y)),z.map===null&&!z.isPointLightShadow&&this.type===mo){const K={minFilter:zt,magFilter:zt,format:bn};z.map=new ur(r.x,r.y,K),z.map.texture.name=L.name+".shadowMap",z.mapPass=new ur(r.x,r.y,K),z.camera.updateProjectionMatrix()}if(z.map===null){const K={minFilter:Dt,magFilter:Dt,format:bn};z.map=new ur(r.x,r.y,K),z.map.texture.name=L.name+".shadowMap",z.camera.updateProjectionMatrix()}n.setRenderTarget(z.map),n.clear();const X=z.getViewportCount();for(let K=0;K<X;K++){const j=z.getViewport(K);o.set(s.x*j.x,s.y*j.y,s.x*j.z,s.y*j.w),I.viewport(o),z.updateMatrices(L,K),i=z.getFrustum(),y(b,_,z.camera,L,this.type)}!z.isPointLightShadow&&this.type===mo&&m(z,_),z.needsUpdate=!1}x.needsUpdate=!1,n.setRenderTarget(S,E,R)};function m(M,b){const _=e.update(p);u.uniforms.shadow_pass.value=M.map.texture,u.uniforms.resolution.value=M.mapSize,u.uniforms.radius.value=M.radius,n.setRenderTarget(M.mapPass),n.clear(),n.renderBufferDirect(b,null,_,u,p,null),f.uniforms.shadow_pass.value=M.mapPass.texture,f.uniforms.resolution.value=M.mapSize,f.uniforms.radius.value=M.radius,n.setRenderTarget(M.map),n.clear(),n.renderBufferDirect(b,null,_,f,p,null)}function v(M,b,_){const S=M<<0|b<<1|_<<2;let E=a[S];return E===void 0&&(E=new mr({depthPacking:fy,morphTargets:M,skinning:b}),a[S]=E),E}function g(M,b,_){const S=M<<0|b<<1|_<<2;let E=l[S];return E===void 0&&(E=new xr({morphTargets:M,skinning:b}),l[S]=E),E}function w(M,b,_,S,E,R,I){let $=null,W=v,L=M.customDepthMaterial;if(S.isPointLight===!0&&(W=g,L=M.customDistanceMaterial),L===void 0){let z=!1;_.morphTargets===!0&&(z=b.morphAttributes&&b.morphAttributes.position&&b.morphAttributes.position.length>0);let U=!1;M.isSkinnedMesh===!0&&(_.skinning===!0?U=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",M));const X=M.isInstancedMesh===!0;$=W(z,U,X)}else $=L;if(n.localClippingEnabled&&_.clipShadows===!0&&_.clippingPlanes.length!==0){const z=$.uuid,U=_.uuid;let X=c[z];X===void 0&&(X={},c[z]=X);let K=X[U];K===void 0&&(K=$.clone(),X[U]=K),$=K}return $.visible=_.visible,$.wireframe=_.wireframe,I===mo?$.side=_.shadowSide!==null?_.shadowSide:_.side:$.side=_.shadowSide!==null?_.shadowSide:d[_.side],$.clipShadows=_.clipShadows,$.clippingPlanes=_.clippingPlanes,$.clipIntersection=_.clipIntersection,$.wireframeLinewidth=_.wireframeLinewidth,$.linewidth=_.linewidth,S.isPointLight===!0&&$.isMeshDistanceMaterial===!0&&($.referencePosition.setFromMatrixPosition(S.matrixWorld),$.nearDistance=E,$.farDistance=R),$}function y(M,b,_,S,E){if(M.visible===!1)return;if(M.layers.test(b.layers)&&(M.isMesh||M.isLine||M.isPoints)&&(M.castShadow||M.receiveShadow&&E===mo)&&(!M.frustumCulled||i.intersectsObject(M))){M.modelViewMatrix.multiplyMatrices(_.matrixWorldInverse,M.matrixWorld);const $=e.update(M),W=M.material;if(Array.isArray(W)){const L=$.groups;for(let z=0,U=L.length;z<U;z++){const X=L[z],K=W[X.materialIndex];if(K&&K.visible){const j=w(M,$,K,S,_.near,_.far,E);n.renderBufferDirect(_,null,$,j,M,X)}}}else if(W.visible){const L=w(M,$,W,S,_.near,_.far,E);n.renderBufferDirect(_,null,$,L,M,null)}}const I=M.children;for(let $=0,W=I.length;$<W;$++)y(I[$],b,_,S,E)}}function rT(n,e,t){const i=t.isWebGL2;function r(){let Z=!1;const C=new ut;let A=null;const ie=new ut(0,0,0,0);return{setMask:function(se){A!==se&&!Z&&(n.colorMask(se,se,se,se),A=se)},setLocked:function(se){Z=se},setClear:function(se,le,xe,Re,ne){ne===!0&&(se*=Re,le*=Re,xe*=Re),C.set(se,le,xe,Re),ie.equals(C)===!1&&(n.clearColor(se,le,xe,Re),ie.copy(C))},reset:function(){Z=!1,A=null,ie.set(-1,0,0,0)}}}function s(){let Z=!1,C=null,A=null,ie=null;return{setTest:function(se){se?ee(2929):P(2929)},setMask:function(se){C!==se&&!Z&&(n.depthMask(se),C=se)},setFunc:function(se){if(A!==se){if(se)switch(se){case e2:n.depthFunc(512);break;case t2:n.depthFunc(519);break;case n2:n.depthFunc(513);break;case $l:n.depthFunc(515);break;case i2:n.depthFunc(514);break;case r2:n.depthFunc(518);break;case s2:n.depthFunc(516);break;case o2:n.depthFunc(517);break;default:n.depthFunc(515)}else n.depthFunc(515);A=se}},setLocked:function(se){Z=se},setClear:function(se){ie!==se&&(n.clearDepth(se),ie=se)},reset:function(){Z=!1,C=null,A=null,ie=null}}}function o(){let Z=!1,C=null,A=null,ie=null,se=null,le=null,xe=null,Re=null,ne=null;return{setTest:function(we){Z||(we?ee(2960):P(2960))},setMask:function(we){C!==we&&!Z&&(n.stencilMask(we),C=we)},setFunc:function(we,Le,Ne){(A!==we||ie!==Le||se!==Ne)&&(n.stencilFunc(we,Le,Ne),A=we,ie=Le,se=Ne)},setOp:function(we,Le,Ne){(le!==we||xe!==Le||Re!==Ne)&&(n.stencilOp(we,Le,Ne),le=we,xe=Le,Re=Ne)},setLocked:function(we){Z=we},setClear:function(we){ne!==we&&(n.clearStencil(we),ne=we)},reset:function(){Z=!1,C=null,A=null,ie=null,se=null,le=null,xe=null,Re=null,ne=null}}}const a=new r,l=new s,c=new o;let d={},u=null,f=null,h=null,p=null,x=null,m=null,v=null,g=null,w=null,y=!1,M=null,b=null,_=null,S=null,E=null;const R=n.getParameter(35661);let I=!1,$=0;const W=n.getParameter(7938);W.indexOf("WebGL")!==-1?($=parseFloat(/^WebGL (\d)/.exec(W)[1]),I=$>=1):W.indexOf("OpenGL ES")!==-1&&($=parseFloat(/^OpenGL ES (\d)/.exec(W)[1]),I=$>=2);let L=null,z={};const U=new ut,X=new ut;function K(Z,C,A){const ie=new Uint8Array(4),se=n.createTexture();n.bindTexture(Z,se),n.texParameteri(Z,10241,9728),n.texParameteri(Z,10240,9728);for(let le=0;le<A;le++)n.texImage2D(C+le,0,6408,1,1,0,6408,5121,ie);return se}const j={};j[3553]=K(3553,3553,1),j[34067]=K(34067,34069,6),a.setClear(0,0,0,1),l.setClear(1),c.setClear(0),ee(2929),l.setFunc($l),Se(!1),Me(s0),ee(2884),F(qi);function ee(Z){d[Z]!==!0&&(n.enable(Z),d[Z]=!0)}function P(Z){d[Z]!==!1&&(n.disable(Z),d[Z]=!1)}function H(Z){return u!==Z?(n.useProgram(Z),u=Z,!0):!1}const Y={[Vr]:32774,[Hv]:32778,[Vv]:32779};if(i)Y[l0]=32775,Y[d0]=32776;else{const Z=e.get("EXT_blend_minmax");Z!==null&&(Y[l0]=Z.MIN_EXT,Y[d0]=Z.MAX_EXT)}const Q={[Wv]:0,[$v]:1,[jv]:768,[pp]:770,[Qv]:776,[Jv]:774,[Yv]:772,[Xv]:769,[mp]:771,[Kv]:775,[Zv]:773};function F(Z,C,A,ie,se,le,xe,Re){if(Z===qi){f&&(P(3042),f=!1);return}if(f||(ee(3042),f=!0),Z!==kv){if(Z!==h||Re!==y){if((p!==Vr||v!==Vr)&&(n.blendEquation(32774),p=Vr,v=Vr),Re)switch(Z){case yo:n.blendFuncSeparate(1,771,1,771);break;case o0:n.blendFunc(1,1);break;case a0:n.blendFuncSeparate(0,0,769,771);break;case c0:n.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",Z);break}else switch(Z){case yo:n.blendFuncSeparate(770,771,1,771);break;case o0:n.blendFunc(770,1);break;case a0:n.blendFunc(0,769);break;case c0:n.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",Z);break}x=null,m=null,g=null,w=null,h=Z,y=Re}return}se=se||C,le=le||A,xe=xe||ie,(C!==p||se!==v)&&(n.blendEquationSeparate(Y[C],Y[se]),p=C,v=se),(A!==x||ie!==m||le!==g||xe!==w)&&(n.blendFuncSeparate(Q[A],Q[ie],Q[le],Q[xe]),x=A,m=ie,g=le,w=xe),h=Z,y=null}function oe(Z,C){Z.side===vc?P(2884):ee(2884);let A=Z.side===Rt;C&&(A=!A),Se(A),Z.blending===yo&&Z.transparent===!1?F(qi):F(Z.blending,Z.blendEquation,Z.blendSrc,Z.blendDst,Z.blendEquationAlpha,Z.blendSrcAlpha,Z.blendDstAlpha,Z.premultipliedAlpha),l.setFunc(Z.depthFunc),l.setTest(Z.depthTest),l.setMask(Z.depthWrite),a.setMask(Z.colorWrite);const ie=Z.stencilWrite;c.setTest(ie),ie&&(c.setMask(Z.stencilWriteMask),c.setFunc(Z.stencilFunc,Z.stencilRef,Z.stencilFuncMask),c.setOp(Z.stencilFail,Z.stencilZFail,Z.stencilZPass)),_e(Z.polygonOffset,Z.polygonOffsetFactor,Z.polygonOffsetUnits)}function Se(Z){M!==Z&&(Z?n.frontFace(2304):n.frontFace(2305),M=Z)}function Me(Z){Z!==Bv?(ee(2884),Z!==b&&(Z===s0?n.cullFace(1029):Z===Uv?n.cullFace(1028):n.cullFace(1032))):P(2884),b=Z}function be(Z){Z!==_&&(I&&n.lineWidth(Z),_=Z)}function _e(Z,C,A){Z?(ee(32823),(S!==C||E!==A)&&(n.polygonOffset(C,A),S=C,E=A)):P(32823)}function Ie(Z){Z?ee(3089):P(3089)}function fe(Z){Z===void 0&&(Z=33984+R-1),L!==Z&&(n.activeTexture(Z),L=Z)}function pe(Z,C){L===null&&fe();let A=z[L];A===void 0&&(A={type:void 0,texture:void 0},z[L]=A),(A.type!==Z||A.texture!==C)&&(n.bindTexture(Z,C||j[Z]),A.type=Z,A.texture=C)}function Te(){const Z=z[L];Z!==void 0&&Z.type!==void 0&&(n.bindTexture(Z.type,null),Z.type=void 0,Z.texture=void 0)}function ze(){try{n.compressedTexImage2D.apply(n,arguments)}catch(Z){console.error("THREE.WebGLState:",Z)}}function Ce(){try{n.texImage2D.apply(n,arguments)}catch(Z){console.error("THREE.WebGLState:",Z)}}function O(){try{n.texImage3D.apply(n,arguments)}catch(Z){console.error("THREE.WebGLState:",Z)}}function D(Z){U.equals(Z)===!1&&(n.scissor(Z.x,Z.y,Z.z,Z.w),U.copy(Z))}function me(Z){X.equals(Z)===!1&&(n.viewport(Z.x,Z.y,Z.z,Z.w),X.copy(Z))}function ye(){d={},L=null,z={},u=null,f=null,h=null,p=null,x=null,m=null,v=null,g=null,w=null,y=!1,M=null,b=null,_=null,S=null,E=null,a.reset(),l.reset(),c.reset()}return{buffers:{color:a,depth:l,stencil:c},enable:ee,disable:P,useProgram:H,setBlending:F,setMaterial:oe,setFlipSided:Se,setCullFace:Me,setLineWidth:be,setPolygonOffset:_e,setScissorTest:Ie,activeTexture:fe,bindTexture:pe,unbindTexture:Te,compressedTexImage2D:ze,texImage2D:Ce,texImage3D:O,scissor:D,viewport:me,reset:ye}}function sT(n,e,t,i,r,s,o){const a=r.isWebGL2,l=r.maxTextures,c=r.maxCubemapSize,d=r.maxTextureSize,u=r.maxSamples,f=new WeakMap;let h,p=!1;try{p=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function x(O,D){return p?new OffscreenCanvas(O,D):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function m(O,D,me,ye){let Z=1;if((O.width>ye||O.height>ye)&&(Z=ye/Math.max(O.width,O.height)),Z<1||D===!0)if(typeof HTMLImageElement<"u"&&O instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&O instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&O instanceof ImageBitmap){const C=D?Ke.floorPowerOfTwo:Math.floor,A=C(Z*O.width),ie=C(Z*O.height);h===void 0&&(h=x(A,ie));const se=me?x(A,ie):h;return se.width=A,se.height=ie,se.getContext("2d").drawImage(O,0,0,A,ie),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+O.width+"x"+O.height+") to ("+A+"x"+ie+")."),se}else return"data"in O&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+O.width+"x"+O.height+")."),O;return O}function v(O){return Ke.isPowerOfTwo(O.width)&&Ke.isPowerOfTwo(O.height)}function g(O){return a?!1:O.wrapS!==Zt||O.wrapT!==Zt||O.minFilter!==Dt&&O.minFilter!==zt}function w(O,D){return O.generateMipmaps&&D&&O.minFilter!==Dt&&O.minFilter!==zt}function y(O,D,me,ye){n.generateMipmap(O);const Z=i.get(D);Z.__maxMipLevel=Math.log(Math.max(me,ye))*Math.LOG2E}function M(O,D,me){if(a===!1)return D;if(O!==null){if(n[O]!==void 0)return n[O];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+O+"'")}let ye=D;return D===6403&&(me===5126&&(ye=33326),me===5131&&(ye=33325),me===5121&&(ye=33321)),D===6407&&(me===5126&&(ye=34837),me===5131&&(ye=34843),me===5121&&(ye=32849)),D===6408&&(me===5126&&(ye=34836),me===5131&&(ye=34842),me===5121&&(ye=32856)),(ye===33325||ye===33326||ye===34842||ye===34836)&&e.get("EXT_color_buffer_float"),ye}function b(O){return O===Dt||O===Yl||O===Zl?9728:9729}function _(O){const D=O.target;D.removeEventListener("dispose",_),E(D),D.isVideoTexture&&f.delete(D),o.memory.textures--}function S(O){const D=O.target;D.removeEventListener("dispose",S),R(D),o.memory.textures--}function E(O){const D=i.get(O);D.__webglInit!==void 0&&(n.deleteTexture(D.__webglTexture),i.remove(O))}function R(O){const D=i.get(O),me=i.get(O.texture);if(O){if(me.__webglTexture!==void 0&&n.deleteTexture(me.__webglTexture),O.depthTexture&&O.depthTexture.dispose(),O.isWebGLCubeRenderTarget)for(let ye=0;ye<6;ye++)n.deleteFramebuffer(D.__webglFramebuffer[ye]),D.__webglDepthbuffer&&n.deleteRenderbuffer(D.__webglDepthbuffer[ye]);else n.deleteFramebuffer(D.__webglFramebuffer),D.__webglDepthbuffer&&n.deleteRenderbuffer(D.__webglDepthbuffer),D.__webglMultisampledFramebuffer&&n.deleteFramebuffer(D.__webglMultisampledFramebuffer),D.__webglColorRenderbuffer&&n.deleteRenderbuffer(D.__webglColorRenderbuffer),D.__webglDepthRenderbuffer&&n.deleteRenderbuffer(D.__webglDepthRenderbuffer);i.remove(O.texture),i.remove(O)}}let I=0;function $(){I=0}function W(){const O=I;return O>=l&&console.warn("THREE.WebGLTextures: Trying to use "+O+" texture units while this GPU supports only "+l),I+=1,O}function L(O,D){const me=i.get(O);if(O.isVideoTexture&&fe(O),O.version>0&&me.__version!==O.version){const ye=O.image;if(ye===void 0)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else if(ye.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{H(me,O,D);return}}t.activeTexture(33984+D),t.bindTexture(3553,me.__webglTexture)}function z(O,D){const me=i.get(O);if(O.version>0&&me.__version!==O.version){H(me,O,D);return}t.activeTexture(33984+D),t.bindTexture(35866,me.__webglTexture)}function U(O,D){const me=i.get(O);if(O.version>0&&me.__version!==O.version){H(me,O,D);return}t.activeTexture(33984+D),t.bindTexture(32879,me.__webglTexture)}function X(O,D){const me=i.get(O);if(O.version>0&&me.__version!==O.version){Y(me,O,D);return}t.activeTexture(33984+D),t.bindTexture(34067,me.__webglTexture)}const K={[Ia]:10497,[Zt]:33071,[Da]:33648},j={[Dt]:9728,[Yl]:9984,[Zl]:9986,[zt]:9729,[xp]:9985,[Zo]:9987};function ee(O,D,me){me?(n.texParameteri(O,10242,K[D.wrapS]),n.texParameteri(O,10243,K[D.wrapT]),(O===32879||O===35866)&&n.texParameteri(O,32882,K[D.wrapR]),n.texParameteri(O,10240,j[D.magFilter]),n.texParameteri(O,10241,j[D.minFilter])):(n.texParameteri(O,10242,33071),n.texParameteri(O,10243,33071),(O===32879||O===35866)&&n.texParameteri(O,32882,33071),(D.wrapS!==Zt||D.wrapT!==Zt)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),n.texParameteri(O,10240,b(D.magFilter)),n.texParameteri(O,10241,b(D.minFilter)),D.minFilter!==Dt&&D.minFilter!==zt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));const ye=e.get("EXT_texture_filter_anisotropic");if(ye){if(D.type===Pi&&e.get("OES_texture_float_linear")===null||D.type===qa&&(a||e.get("OES_texture_half_float_linear"))===null)return;(D.anisotropy>1||i.get(D).__currentAnisotropy)&&(n.texParameterf(O,ye.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(D.anisotropy,r.getMaxAnisotropy())),i.get(D).__currentAnisotropy=D.anisotropy)}}function P(O,D){O.__webglInit===void 0&&(O.__webglInit=!0,D.addEventListener("dispose",_),O.__webglTexture=n.createTexture(),o.memory.textures++)}function H(O,D,me){let ye=3553;D.isDataTexture2DArray&&(ye=35866),D.isDataTexture3D&&(ye=32879),P(O,D),t.activeTexture(33984+me),t.bindTexture(ye,O.__webglTexture),n.pixelStorei(37440,D.flipY),n.pixelStorei(37441,D.premultiplyAlpha),n.pixelStorei(3317,D.unpackAlignment);const Z=g(D)&&v(D.image)===!1,C=m(D.image,Z,!1,d),A=v(C)||a,ie=s.convert(D.format);let se=s.convert(D.type),le=M(D.internalFormat,ie,se);ee(ye,D,A);let xe;const Re=D.mipmaps;if(D.isDepthTexture)le=6402,a?D.type===Pi?le=36012:D.type===Ea?le=33190:D.type===bo?le=35056:le=33189:D.type===Pi&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),D.format===ts&&le===6402&&D.type!==Oa&&D.type!==Ea&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),D.type=Oa,se=s.convert(D.type)),D.format===Lo&&le===6402&&(le=34041,D.type!==bo&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),D.type=bo,se=s.convert(D.type))),t.texImage2D(3553,0,le,C.width,C.height,0,ie,se,null);else if(D.isDataTexture)if(Re.length>0&&A){for(let ne=0,we=Re.length;ne<we;ne++)xe=Re[ne],t.texImage2D(3553,ne,le,xe.width,xe.height,0,ie,se,xe.data);D.generateMipmaps=!1,O.__maxMipLevel=Re.length-1}else t.texImage2D(3553,0,le,C.width,C.height,0,ie,se,C.data),O.__maxMipLevel=0;else if(D.isCompressedTexture){for(let ne=0,we=Re.length;ne<we;ne++)xe=Re[ne],D.format!==bn&&D.format!==dr?ie!==null?t.compressedTexImage2D(3553,ne,le,xe.width,xe.height,0,xe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):t.texImage2D(3553,ne,le,xe.width,xe.height,0,ie,se,xe.data);O.__maxMipLevel=Re.length-1}else if(D.isDataTexture2DArray)t.texImage3D(35866,0,le,C.width,C.height,C.depth,0,ie,se,C.data),O.__maxMipLevel=0;else if(D.isDataTexture3D)t.texImage3D(32879,0,le,C.width,C.height,C.depth,0,ie,se,C.data),O.__maxMipLevel=0;else if(Re.length>0&&A){for(let ne=0,we=Re.length;ne<we;ne++)xe=Re[ne],t.texImage2D(3553,ne,le,ie,se,xe);D.generateMipmaps=!1,O.__maxMipLevel=Re.length-1}else t.texImage2D(3553,0,le,ie,se,C),O.__maxMipLevel=0;w(D,A)&&y(ye,D,C.width,C.height),O.__version=D.version,D.onUpdate&&D.onUpdate(D)}function Y(O,D,me){if(D.image.length!==6)return;P(O,D),t.activeTexture(33984+me),t.bindTexture(34067,O.__webglTexture),n.pixelStorei(37440,D.flipY),n.pixelStorei(37441,D.premultiplyAlpha),n.pixelStorei(3317,D.unpackAlignment);const ye=D&&(D.isCompressedTexture||D.image[0].isCompressedTexture),Z=D.image[0]&&D.image[0].isDataTexture,C=[];for(let ne=0;ne<6;ne++)!ye&&!Z?C[ne]=m(D.image[ne],!1,!0,c):C[ne]=Z?D.image[ne].image:D.image[ne];const A=C[0],ie=v(A)||a,se=s.convert(D.format),le=s.convert(D.type),xe=M(D.internalFormat,se,le);ee(34067,D,ie);let Re;if(ye){for(let ne=0;ne<6;ne++){Re=C[ne].mipmaps;for(let we=0;we<Re.length;we++){const Le=Re[we];D.format!==bn&&D.format!==dr?se!==null?t.compressedTexImage2D(34069+ne,we,xe,Le.width,Le.height,0,Le.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):t.texImage2D(34069+ne,we,xe,Le.width,Le.height,0,se,le,Le.data)}}O.__maxMipLevel=Re.length-1}else{Re=D.mipmaps;for(let ne=0;ne<6;ne++)if(Z){t.texImage2D(34069+ne,0,xe,C[ne].width,C[ne].height,0,se,le,C[ne].data);for(let we=0;we<Re.length;we++){const Ne=Re[we].image[ne].image;t.texImage2D(34069+ne,we+1,xe,Ne.width,Ne.height,0,se,le,Ne.data)}}else{t.texImage2D(34069+ne,0,xe,se,le,C[ne]);for(let we=0;we<Re.length;we++){const Le=Re[we];t.texImage2D(34069+ne,we+1,xe,se,le,Le.image[ne])}}O.__maxMipLevel=Re.length}w(D,ie)&&y(34067,D,A.width,A.height),O.__version=D.version,D.onUpdate&&D.onUpdate(D)}function Q(O,D,me,ye){const Z=s.convert(D.texture.format),C=s.convert(D.texture.type),A=M(D.texture.internalFormat,Z,C);t.texImage2D(ye,0,A,D.width,D.height,0,Z,C,null),n.bindFramebuffer(36160,O),n.framebufferTexture2D(36160,me,ye,i.get(D.texture).__webglTexture,0),n.bindFramebuffer(36160,null)}function F(O,D,me){if(n.bindRenderbuffer(36161,O),D.depthBuffer&&!D.stencilBuffer){let ye=33189;if(me){const Z=D.depthTexture;Z&&Z.isDepthTexture&&(Z.type===Pi?ye=36012:Z.type===Ea&&(ye=33190));const C=Ie(D);n.renderbufferStorageMultisample(36161,C,ye,D.width,D.height)}else n.renderbufferStorage(36161,ye,D.width,D.height);n.framebufferRenderbuffer(36160,36096,36161,O)}else if(D.depthBuffer&&D.stencilBuffer){if(me){const ye=Ie(D);n.renderbufferStorageMultisample(36161,ye,35056,D.width,D.height)}else n.renderbufferStorage(36161,34041,D.width,D.height);n.framebufferRenderbuffer(36160,33306,36161,O)}else{const ye=s.convert(D.texture.format),Z=s.convert(D.texture.type),C=M(D.texture.internalFormat,ye,Z);if(me){const A=Ie(D);n.renderbufferStorageMultisample(36161,A,C,D.width,D.height)}else n.renderbufferStorage(36161,C,D.width,D.height)}n.bindRenderbuffer(36161,null)}function oe(O,D){if(D&&D.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(36160,O),!(D.depthTexture&&D.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(D.depthTexture).__webglTexture||D.depthTexture.image.width!==D.width||D.depthTexture.image.height!==D.height)&&(D.depthTexture.image.width=D.width,D.depthTexture.image.height=D.height,D.depthTexture.needsUpdate=!0),L(D.depthTexture,0);const ye=i.get(D.depthTexture).__webglTexture;if(D.depthTexture.format===ts)n.framebufferTexture2D(36160,36096,3553,ye,0);else if(D.depthTexture.format===Lo)n.framebufferTexture2D(36160,33306,3553,ye,0);else throw new Error("Unknown depthTexture format")}function Se(O){const D=i.get(O),me=O.isWebGLCubeRenderTarget===!0;if(O.depthTexture){if(me)throw new Error("target.depthTexture not supported in Cube render targets");oe(D.__webglFramebuffer,O)}else if(me){D.__webglDepthbuffer=[];for(let ye=0;ye<6;ye++)n.bindFramebuffer(36160,D.__webglFramebuffer[ye]),D.__webglDepthbuffer[ye]=n.createRenderbuffer(),F(D.__webglDepthbuffer[ye],O,!1)}else n.bindFramebuffer(36160,D.__webglFramebuffer),D.__webglDepthbuffer=n.createRenderbuffer(),F(D.__webglDepthbuffer,O,!1);n.bindFramebuffer(36160,null)}function Me(O){const D=i.get(O),me=i.get(O.texture);O.addEventListener("dispose",S),me.__webglTexture=n.createTexture(),o.memory.textures++;const ye=O.isWebGLCubeRenderTarget===!0,Z=O.isWebGLMultisampleRenderTarget===!0,C=v(O)||a;if(a&&O.texture.format===dr&&(O.texture.type===Pi||O.texture.type===qa)&&(O.texture.format=bn,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),ye){D.__webglFramebuffer=[];for(let A=0;A<6;A++)D.__webglFramebuffer[A]=n.createFramebuffer()}else if(D.__webglFramebuffer=n.createFramebuffer(),Z)if(a){D.__webglMultisampledFramebuffer=n.createFramebuffer(),D.__webglColorRenderbuffer=n.createRenderbuffer(),n.bindRenderbuffer(36161,D.__webglColorRenderbuffer);const A=s.convert(O.texture.format),ie=s.convert(O.texture.type),se=M(O.texture.internalFormat,A,ie),le=Ie(O);n.renderbufferStorageMultisample(36161,le,se,O.width,O.height),n.bindFramebuffer(36160,D.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(36160,36064,36161,D.__webglColorRenderbuffer),n.bindRenderbuffer(36161,null),O.depthBuffer&&(D.__webglDepthRenderbuffer=n.createRenderbuffer(),F(D.__webglDepthRenderbuffer,O,!0)),n.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(ye){t.bindTexture(34067,me.__webglTexture),ee(34067,O.texture,C);for(let A=0;A<6;A++)Q(D.__webglFramebuffer[A],O,36064,34069+A);w(O.texture,C)&&y(34067,O.texture,O.width,O.height),t.bindTexture(34067,null)}else t.bindTexture(3553,me.__webglTexture),ee(3553,O.texture,C),Q(D.__webglFramebuffer,O,36064,3553),w(O.texture,C)&&y(3553,O.texture,O.width,O.height),t.bindTexture(3553,null);O.depthBuffer&&Se(O)}function be(O){const D=O.texture,me=v(O)||a;if(w(D,me)){const ye=O.isWebGLCubeRenderTarget?34067:3553,Z=i.get(D).__webglTexture;t.bindTexture(ye,Z),y(ye,D,O.width,O.height),t.bindTexture(ye,null)}}function _e(O){if(O.isWebGLMultisampleRenderTarget)if(a){const D=i.get(O);n.bindFramebuffer(36008,D.__webglMultisampledFramebuffer),n.bindFramebuffer(36009,D.__webglFramebuffer);const me=O.width,ye=O.height;let Z=16384;O.depthBuffer&&(Z|=256),O.stencilBuffer&&(Z|=1024),n.blitFramebuffer(0,0,me,ye,0,0,me,ye,Z,9728),n.bindFramebuffer(36160,D.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}function Ie(O){return a&&O.isWebGLMultisampleRenderTarget?Math.min(u,O.samples):0}function fe(O){const D=o.render.frame;f.get(O)!==D&&(f.set(O,D),O.update())}let pe=!1,Te=!1;function ze(O,D){O&&O.isWebGLRenderTarget&&(pe===!1&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),pe=!0),O=O.texture),L(O,D)}function Ce(O,D){O&&O.isWebGLCubeRenderTarget&&(Te===!1&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),Te=!0),O=O.texture),X(O,D)}this.allocateTextureUnit=W,this.resetTextureUnits=$,this.setTexture2D=L,this.setTexture2DArray=z,this.setTexture3D=U,this.setTextureCube=X,this.setupRenderTarget=Me,this.updateRenderTargetMipmap=be,this.updateMultisampleRenderTarget=_e,this.safeSetTexture2D=ze,this.safeSetTextureCube=Ce}function Ay(n,e,t){const i=t.isWebGL2;function r(s){let o;if(s===Jo)return 5121;if(s===g2)return 32819;if(s===v2)return 32820;if(s===y2)return 33635;if(s===p2)return 5120;if(s===m2)return 5122;if(s===Oa)return 5123;if(s===x2)return 5124;if(s===Ea)return 5125;if(s===Pi)return 5126;if(s===qa)return i?5131:(o=e.get("OES_texture_half_float"),o!==null?o.HALF_FLOAT_OES:null);if(s===b2)return 6406;if(s===dr)return 6407;if(s===bn)return 6408;if(s===_2)return 6409;if(s===w2)return 6410;if(s===ts)return 6402;if(s===Lo)return 34041;if(s===S2)return 6403;if(s===E2)return 36244;if(s===T2)return 33319;if(s===A2)return 33320;if(s===L2)return 36248;if(s===C2)return 36249;if(s===u0||s===f0||s===h0||s===p0)if(o=e.get("WEBGL_compressed_texture_s3tc"),o!==null){if(s===u0)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===f0)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===h0)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===p0)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===m0||s===x0||s===g0||s===v0)if(o=e.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(s===m0)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===x0)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===g0)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===v0)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===R2)return o=e.get("WEBGL_compressed_texture_etc1"),o!==null?o.COMPRESSED_RGB_ETC1_WEBGL:null;if((s===y0||s===b0)&&(o=e.get("WEBGL_compressed_texture_etc"),o!==null)){if(s===y0)return o.COMPRESSED_RGB8_ETC2;if(s===b0)return o.COMPRESSED_RGBA8_ETC2_EAC}if(s===P2||s===I2||s===D2||s===O2||s===q2||s===z2||s===F2||s===N2||s===B2||s===U2||s===G2||s===k2||s===H2||s===V2||s===$2||s===j2||s===X2||s===Y2||s===Z2||s===J2||s===K2||s===Q2||s===ey||s===ty||s===ny||s===iy||s===ry||s===sy)return o=e.get("WEBGL_compressed_texture_astc"),o!==null?s:null;if(s===W2)return o=e.get("EXT_texture_compression_bptc"),o!==null?s:null;if(s===bo)return i?34042:(o=e.get("WEBGL_depth_texture"),o!==null?o.UNSIGNED_INT_24_8_WEBGL:null)}return{convert:r}}function Jl(n=[]){Pt.call(this),this.cameras=n}Jl.prototype=Object.assign(Object.create(Pt.prototype),{constructor:Jl,isArrayCamera:!0});function ar(){We.call(this),this.type="Group"}ar.prototype=Object.assign(Object.create(We.prototype),{constructor:ar,isGroup:!0});function Aa(){this._targetRay=null,this._grip=null,this._hand=null}Object.assign(Aa.prototype,{constructor:Aa,getHandSpace:function(){return this._hand===null&&(this._hand=new ar,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand},getTargetRaySpace:function(){return this._targetRay===null&&(this._targetRay=new ar,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1),this._targetRay},getGripSpace:function(){return this._grip===null&&(this._grip=new ar,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1),this._grip},dispatchEvent:function(n){return this._targetRay!==null&&this._targetRay.dispatchEvent(n),this._grip!==null&&this._grip.dispatchEvent(n),this._hand!==null&&this._hand.dispatchEvent(n),this},disconnect:function(n){return this.dispatchEvent({type:"disconnected",data:n}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this},update:function(n,e,t){let i=null,r=null,s=null;const o=this._targetRay,a=this._grip,l=this._hand;if(n&&e.session.visibilityState!=="visible-blurred")if(l&&n.hand){s=!0;for(const p of n.hand.values()){const x=e.getJointPose(p,t);if(l.joints[p.jointName]===void 0){const v=new ar;v.matrixAutoUpdate=!1,v.visible=!1,l.joints[p.jointName]=v,l.add(v)}const m=l.joints[p.jointName];x!==null&&(m.matrix.fromArray(x.transform.matrix),m.matrix.decompose(m.position,m.rotation,m.scale),m.jointRadius=x.radius),m.visible=x!==null}const c=l.joints["index-finger-tip"],d=l.joints["thumb-tip"],u=c.position.distanceTo(d.position),f=.02,h=.005;l.inputState.pinching&&u>f+h?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:n.handedness,target:this})):!l.inputState.pinching&&u<=f-h&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:n.handedness,target:this}))}else o!==null&&(i=e.getPose(n.targetRaySpace,t),i!==null&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale))),a!==null&&n.gripSpace&&(r=e.getPose(n.gripSpace,t),r!==null&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale)));return o!==null&&(o.visible=i!==null),a!==null&&(a.visible=r!==null),l!==null&&(l.visible=s!==null),this}});function Ly(n,e){const t=this;let i=null,r=1,s=null,o="local-floor",a=null;const l=[],c=new Map,d=new Pt;d.layers.enable(1),d.viewport=new ut;const u=new Pt;u.layers.enable(2),u.viewport=new ut;const f=[d,u],h=new Jl;h.layers.enable(1),h.layers.enable(2);let p=null,x=null;this.enabled=!1,this.isPresenting=!1,this.getController=function(R){let I=l[R];return I===void 0&&(I=new Aa,l[R]=I),I.getTargetRaySpace()},this.getControllerGrip=function(R){let I=l[R];return I===void 0&&(I=new Aa,l[R]=I),I.getGripSpace()},this.getHand=function(R){let I=l[R];return I===void 0&&(I=new Aa,l[R]=I),I.getHandSpace()};function m(R){const I=c.get(R.inputSource);I&&I.dispatchEvent({type:R.type,data:R.inputSource})}function v(){c.forEach(function(R,I){R.disconnect(I)}),c.clear(),p=null,x=null,n.setFramebuffer(null),n.setRenderTarget(n.getRenderTarget()),E.stop(),t.isPresenting=!1,t.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(R){r=R,t.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(R){o=R,t.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return s},this.getSession=function(){return i},this.setSession=async function(R){if(i=R,i!==null){i.addEventListener("select",m),i.addEventListener("selectstart",m),i.addEventListener("selectend",m),i.addEventListener("squeeze",m),i.addEventListener("squeezestart",m),i.addEventListener("squeezeend",m),i.addEventListener("end",v),i.addEventListener("inputsourceschange",g);const I=e.getContextAttributes();I.xrCompatible!==!0&&await e.makeXRCompatible();const $={antialias:I.antialias,alpha:I.alpha,depth:I.depth,stencil:I.stencil,framebufferScaleFactor:r},W=new XRWebGLLayer(i,e,$);i.updateRenderState({baseLayer:W}),s=await i.requestReferenceSpace(o),E.setContext(i),E.start(),t.isPresenting=!0,t.dispatchEvent({type:"sessionstart"})}};function g(R){const I=i.inputSources;for(let $=0;$<l.length;$++)c.set(I[$],l[$]);for(let $=0;$<R.removed.length;$++){const W=R.removed[$],L=c.get(W);L&&(L.dispatchEvent({type:"disconnected",data:W}),c.delete(W))}for(let $=0;$<R.added.length;$++){const W=R.added[$],L=c.get(W);L&&L.dispatchEvent({type:"connected",data:W})}}const w=new q,y=new q;function M(R,I,$){w.setFromMatrixPosition(I.matrixWorld),y.setFromMatrixPosition($.matrixWorld);const W=w.distanceTo(y),L=I.projectionMatrix.elements,z=$.projectionMatrix.elements,U=L[14]/(L[10]-1),X=L[14]/(L[10]+1),K=(L[9]+1)/L[5],j=(L[9]-1)/L[5],ee=(L[8]-1)/L[0],P=(z[8]+1)/z[0],H=U*ee,Y=U*P,Q=W/(-ee+P),F=Q*-ee;I.matrixWorld.decompose(R.position,R.quaternion,R.scale),R.translateX(F),R.translateZ(Q),R.matrixWorld.compose(R.position,R.quaternion,R.scale),R.matrixWorldInverse.copy(R.matrixWorld).invert();const oe=U+Q,Se=X+Q,Me=H-F,be=Y+(W-F),_e=K*X/Se*oe,Ie=j*X/Se*oe;R.projectionMatrix.makePerspective(Me,be,_e,Ie,oe,Se)}function b(R,I){I===null?R.matrixWorld.copy(R.matrix):R.matrixWorld.multiplyMatrices(I.matrixWorld,R.matrix),R.matrixWorldInverse.copy(R.matrixWorld).invert()}this.getCamera=function(R){h.near=u.near=d.near=R.near,h.far=u.far=d.far=R.far,(p!==h.near||x!==h.far)&&(i.updateRenderState({depthNear:h.near,depthFar:h.far}),p=h.near,x=h.far);const I=R.parent,$=h.cameras;b(h,I);for(let L=0;L<$.length;L++)b($[L],I);R.matrixWorld.copy(h.matrixWorld),R.matrix.copy(h.matrix),R.matrix.decompose(R.position,R.quaternion,R.scale);const W=R.children;for(let L=0,z=W.length;L<z;L++)W[L].updateMatrixWorld(!0);return $.length===2?M(h,d,u):h.projectionMatrix.copy(d.projectionMatrix),h};let _=null;function S(R,I){if(a=I.getViewerPose(s),a!==null){const W=a.views,L=i.renderState.baseLayer;n.setFramebuffer(L.framebuffer);let z=!1;W.length!==h.cameras.length&&(h.cameras.length=0,z=!0);for(let U=0;U<W.length;U++){const X=W[U],K=L.getViewport(X),j=f[U];j.matrix.fromArray(X.transform.matrix),j.projectionMatrix.fromArray(X.projectionMatrix),j.viewport.set(K.x,K.y,K.width,K.height),U===0&&h.matrix.copy(j.matrix),z===!0&&h.cameras.push(j)}}const $=i.inputSources;for(let W=0;W<l.length;W++){const L=l[W],z=$[W];L.update(z,I,s)}_&&_(R,I)}const E=new vy;E.setAnimationLoop(S),this.setAnimationLoop=function(R){_=R},this.dispose=function(){}}Object.assign(Ly.prototype,Gi.prototype);function oT(n){function e(v,g){v.fogColor.value.copy(g.color),g.isFog?(v.fogNear.value=g.near,v.fogFar.value=g.far):g.isFogExp2&&(v.fogDensity.value=g.density)}function t(v,g,w,y){g.isMeshBasicMaterial?i(v,g):g.isMeshLambertMaterial?(i(v,g),l(v,g)):g.isMeshToonMaterial?(i(v,g),d(v,g)):g.isMeshPhongMaterial?(i(v,g),c(v,g)):g.isMeshStandardMaterial?(i(v,g),g.isMeshPhysicalMaterial?f(v,g):u(v,g)):g.isMeshMatcapMaterial?(i(v,g),h(v,g)):g.isMeshDepthMaterial?(i(v,g),p(v,g)):g.isMeshDistanceMaterial?(i(v,g),x(v,g)):g.isMeshNormalMaterial?(i(v,g),m(v,g)):g.isLineBasicMaterial?(r(v,g),g.isLineDashedMaterial&&s(v,g)):g.isPointsMaterial?o(v,g,w,y):g.isSpriteMaterial?a(v,g):g.isShadowMaterial?(v.color.value.copy(g.color),v.opacity.value=g.opacity):g.isShaderMaterial&&(g.uniformsNeedUpdate=!1)}function i(v,g){v.opacity.value=g.opacity,g.color&&v.diffuse.value.copy(g.color),g.emissive&&v.emissive.value.copy(g.emissive).multiplyScalar(g.emissiveIntensity),g.map&&(v.map.value=g.map),g.alphaMap&&(v.alphaMap.value=g.alphaMap),g.specularMap&&(v.specularMap.value=g.specularMap);const w=n.get(g).envMap;if(w){v.envMap.value=w,v.flipEnvMap.value=w.isCubeTexture&&w._needsFlipEnvMap?-1:1,v.reflectivity.value=g.reflectivity,v.refractionRatio.value=g.refractionRatio;const b=n.get(w).__maxMipLevel;b!==void 0&&(v.maxMipLevel.value=b)}g.lightMap&&(v.lightMap.value=g.lightMap,v.lightMapIntensity.value=g.lightMapIntensity),g.aoMap&&(v.aoMap.value=g.aoMap,v.aoMapIntensity.value=g.aoMapIntensity);let y;g.map?y=g.map:g.specularMap?y=g.specularMap:g.displacementMap?y=g.displacementMap:g.normalMap?y=g.normalMap:g.bumpMap?y=g.bumpMap:g.roughnessMap?y=g.roughnessMap:g.metalnessMap?y=g.metalnessMap:g.alphaMap?y=g.alphaMap:g.emissiveMap?y=g.emissiveMap:g.clearcoatMap?y=g.clearcoatMap:g.clearcoatNormalMap?y=g.clearcoatNormalMap:g.clearcoatRoughnessMap&&(y=g.clearcoatRoughnessMap),y!==void 0&&(y.isWebGLRenderTarget&&(y=y.texture),y.matrixAutoUpdate===!0&&y.updateMatrix(),v.uvTransform.value.copy(y.matrix));let M;g.aoMap?M=g.aoMap:g.lightMap&&(M=g.lightMap),M!==void 0&&(M.isWebGLRenderTarget&&(M=M.texture),M.matrixAutoUpdate===!0&&M.updateMatrix(),v.uv2Transform.value.copy(M.matrix))}function r(v,g){v.diffuse.value.copy(g.color),v.opacity.value=g.opacity}function s(v,g){v.dashSize.value=g.dashSize,v.totalSize.value=g.dashSize+g.gapSize,v.scale.value=g.scale}function o(v,g,w,y){v.diffuse.value.copy(g.color),v.opacity.value=g.opacity,v.size.value=g.size*w,v.scale.value=y*.5,g.map&&(v.map.value=g.map),g.alphaMap&&(v.alphaMap.value=g.alphaMap);let M;g.map?M=g.map:g.alphaMap&&(M=g.alphaMap),M!==void 0&&(M.matrixAutoUpdate===!0&&M.updateMatrix(),v.uvTransform.value.copy(M.matrix))}function a(v,g){v.diffuse.value.copy(g.color),v.opacity.value=g.opacity,v.rotation.value=g.rotation,g.map&&(v.map.value=g.map),g.alphaMap&&(v.alphaMap.value=g.alphaMap);let w;g.map?w=g.map:g.alphaMap&&(w=g.alphaMap),w!==void 0&&(w.matrixAutoUpdate===!0&&w.updateMatrix(),v.uvTransform.value.copy(w.matrix))}function l(v,g){g.emissiveMap&&(v.emissiveMap.value=g.emissiveMap)}function c(v,g){v.specular.value.copy(g.specular),v.shininess.value=Math.max(g.shininess,1e-4),g.emissiveMap&&(v.emissiveMap.value=g.emissiveMap),g.bumpMap&&(v.bumpMap.value=g.bumpMap,v.bumpScale.value=g.bumpScale,g.side===Rt&&(v.bumpScale.value*=-1)),g.normalMap&&(v.normalMap.value=g.normalMap,v.normalScale.value.copy(g.normalScale),g.side===Rt&&v.normalScale.value.negate()),g.displacementMap&&(v.displacementMap.value=g.displacementMap,v.displacementScale.value=g.displacementScale,v.displacementBias.value=g.displacementBias)}function d(v,g){g.gradientMap&&(v.gradientMap.value=g.gradientMap),g.emissiveMap&&(v.emissiveMap.value=g.emissiveMap),g.bumpMap&&(v.bumpMap.value=g.bumpMap,v.bumpScale.value=g.bumpScale,g.side===Rt&&(v.bumpScale.value*=-1)),g.normalMap&&(v.normalMap.value=g.normalMap,v.normalScale.value.copy(g.normalScale),g.side===Rt&&v.normalScale.value.negate()),g.displacementMap&&(v.displacementMap.value=g.displacementMap,v.displacementScale.value=g.displacementScale,v.displacementBias.value=g.displacementBias)}function u(v,g){v.roughness.value=g.roughness,v.metalness.value=g.metalness,g.roughnessMap&&(v.roughnessMap.value=g.roughnessMap),g.metalnessMap&&(v.metalnessMap.value=g.metalnessMap),g.emissiveMap&&(v.emissiveMap.value=g.emissiveMap),g.bumpMap&&(v.bumpMap.value=g.bumpMap,v.bumpScale.value=g.bumpScale,g.side===Rt&&(v.bumpScale.value*=-1)),g.normalMap&&(v.normalMap.value=g.normalMap,v.normalScale.value.copy(g.normalScale),g.side===Rt&&v.normalScale.value.negate()),g.displacementMap&&(v.displacementMap.value=g.displacementMap,v.displacementScale.value=g.displacementScale,v.displacementBias.value=g.displacementBias),n.get(g).envMap&&(v.envMapIntensity.value=g.envMapIntensity)}function f(v,g){u(v,g),v.reflectivity.value=g.reflectivity,v.clearcoat.value=g.clearcoat,v.clearcoatRoughness.value=g.clearcoatRoughness,g.sheen&&v.sheen.value.copy(g.sheen),g.clearcoatMap&&(v.clearcoatMap.value=g.clearcoatMap),g.clearcoatRoughnessMap&&(v.clearcoatRoughnessMap.value=g.clearcoatRoughnessMap),g.clearcoatNormalMap&&(v.clearcoatNormalScale.value.copy(g.clearcoatNormalScale),v.clearcoatNormalMap.value=g.clearcoatNormalMap,g.side===Rt&&v.clearcoatNormalScale.value.negate()),v.transmission.value=g.transmission,g.transmissionMap&&(v.transmissionMap.value=g.transmissionMap)}function h(v,g){g.matcap&&(v.matcap.value=g.matcap),g.bumpMap&&(v.bumpMap.value=g.bumpMap,v.bumpScale.value=g.bumpScale,g.side===Rt&&(v.bumpScale.value*=-1)),g.normalMap&&(v.normalMap.value=g.normalMap,v.normalScale.value.copy(g.normalScale),g.side===Rt&&v.normalScale.value.negate()),g.displacementMap&&(v.displacementMap.value=g.displacementMap,v.displacementScale.value=g.displacementScale,v.displacementBias.value=g.displacementBias)}function p(v,g){g.displacementMap&&(v.displacementMap.value=g.displacementMap,v.displacementScale.value=g.displacementScale,v.displacementBias.value=g.displacementBias)}function x(v,g){g.displacementMap&&(v.displacementMap.value=g.displacementMap,v.displacementScale.value=g.displacementScale,v.displacementBias.value=g.displacementBias),v.referencePosition.value.copy(g.referencePosition),v.nearDistance.value=g.nearDistance,v.farDistance.value=g.farDistance}function m(v,g){g.bumpMap&&(v.bumpMap.value=g.bumpMap,v.bumpScale.value=g.bumpScale,g.side===Rt&&(v.bumpScale.value*=-1)),g.normalMap&&(v.normalMap.value=g.normalMap,v.normalScale.value.copy(g.normalScale),g.side===Rt&&v.normalScale.value.negate()),g.displacementMap&&(v.displacementMap.value=g.displacementMap,v.displacementScale.value=g.displacementScale,v.displacementBias.value=g.displacementBias)}return{refreshFogUniforms:e,refreshMaterialUniforms:t}}function aT(){const n=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return n.style.display="block",n}function Tc(n){n=n||{};const e=n.canvas!==void 0?n.canvas:aT(),t=n.context!==void 0?n.context:null,i=n.alpha!==void 0?n.alpha:!1,r=n.depth!==void 0?n.depth:!0,s=n.stencil!==void 0?n.stencil:!0,o=n.antialias!==void 0?n.antialias:!1,a=n.premultipliedAlpha!==void 0?n.premultipliedAlpha:!0,l=n.preserveDrawingBuffer!==void 0?n.preserveDrawingBuffer:!1,c=n.powerPreference!==void 0?n.powerPreference:"default",d=n.failIfMajorPerformanceCaveat!==void 0?n.failIfMajorPerformanceCaveat:!1;let u=null,f=null;const h=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=Qt,this.physicallyCorrectLights=!1,this.toneMapping=es,this.toneMappingExposure=1,this.maxMorphTargets=8,this.maxMorphNormals=4;const p=this;let x=!1,m=null,v=0,g=0,w=null,y=null,M=-1,b=null;const _=new ut,S=new ut;let E=null,R=e.width,I=e.height,$=1,W=null,L=null;const z=new ut(0,0,R,I),U=new ut(0,0,R,I);let X=!1;const K=new Ec;let j=!1,ee=!1;const P=new tt,H=new q,Y={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Q(){return w===null?$:1}let F=t;function oe(N,de){for(let ue=0;ue<N.length;ue++){const G=N[ue],V=e.getContext(G,de);if(V!==null)return V}return null}try{const N={alpha:i,depth:r,stencil:s,antialias:o,premultipliedAlpha:a,preserveDrawingBuffer:l,powerPreference:c,failIfMajorPerformanceCaveat:d};if(e.addEventListener("webglcontextlost",Le,!1),e.addEventListener("webglcontextrestored",Ne,!1),F===null){const de=["webgl2","webgl","experimental-webgl"];if(p.isWebGL1Renderer===!0&&de.shift(),F=oe(de,N),F===null)throw oe(de)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}F.getShaderPrecisionFormat===void 0&&(F.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(N){throw console.error("THREE.WebGLRenderer: "+N.message),N}let Se,Me,be,_e,Ie,fe,pe,Te,ze,Ce,O,D,me,ye,Z,C,A,ie,se,le,xe;function Re(){Se=new BS(F),Me=new zS(F,Se,n),Se.init(Me),le=new Ay(F,Se,Me),be=new rT(F,Se,Me),be.scissor(S.copy(U).multiplyScalar($).floor()),be.viewport(_.copy(z).multiplyScalar($).floor()),_e=new kS,Ie=new $E,fe=new sT(F,Se,be,Ie,Me,le,_e),pe=new NS(p),Te=new uM(F,Me),xe=new OS(F,Se,Te,Me),ze=new US(F,Te,_e,xe),Ce=new $S(F,ze,Te,_e),A=new WS(F),Z=new FS(Ie),O=new WE(p,pe,Se,Me,xe,Z),D=new oT(Ie),me=new YE(Ie),ye=new tT(Se,Me),C=new DS(p,pe,be,Ce,a),ie=new qS(F,Se,_e,Me),se=new GS(F,Se,_e,Me),_e.programs=O.programs,p.capabilities=Me,p.extensions=Se,p.properties=Ie,p.renderLists=me,p.state=be,p.info=_e}Re();const ne=new Ly(p,F);this.xr=ne;const we=new Ty(p,Ce,Me.maxTextureSize);this.shadowMap=we,this.getContext=function(){return F},this.getContextAttributes=function(){return F.getContextAttributes()},this.forceContextLoss=function(){const N=Se.get("WEBGL_lose_context");N&&N.loseContext()},this.forceContextRestore=function(){const N=Se.get("WEBGL_lose_context");N&&N.restoreContext()},this.getPixelRatio=function(){return $},this.setPixelRatio=function(N){N!==void 0&&($=N,this.setSize(R,I,!1))},this.getSize=function(N){return N===void 0&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),N=new Ee),N.set(R,I)},this.setSize=function(N,de,ue){if(ne.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}R=N,I=de,e.width=Math.floor(N*$),e.height=Math.floor(de*$),ue!==!1&&(e.style.width=N+"px",e.style.height=de+"px"),this.setViewport(0,0,N,de)},this.getDrawingBufferSize=function(N){return N===void 0&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),N=new Ee),N.set(R*$,I*$).floor()},this.setDrawingBufferSize=function(N,de,ue){R=N,I=de,$=ue,e.width=Math.floor(N*ue),e.height=Math.floor(de*ue),this.setViewport(0,0,N,de)},this.getCurrentViewport=function(N){return N===void 0&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),N=new ut),N.copy(_)},this.getViewport=function(N){return N.copy(z)},this.setViewport=function(N,de,ue,G){N.isVector4?z.set(N.x,N.y,N.z,N.w):z.set(N,de,ue,G),be.viewport(_.copy(z).multiplyScalar($).floor())},this.getScissor=function(N){return N.copy(U)},this.setScissor=function(N,de,ue,G){N.isVector4?U.set(N.x,N.y,N.z,N.w):U.set(N,de,ue,G),be.scissor(S.copy(U).multiplyScalar($).floor())},this.getScissorTest=function(){return X},this.setScissorTest=function(N){be.setScissorTest(X=N)},this.setOpaqueSort=function(N){W=N},this.setTransparentSort=function(N){L=N},this.getClearColor=function(N){return N===void 0&&(console.warn("WebGLRenderer: .getClearColor() now requires a Color as an argument"),N=new Ue),N.copy(C.getClearColor())},this.setClearColor=function(){C.setClearColor.apply(C,arguments)},this.getClearAlpha=function(){return C.getClearAlpha()},this.setClearAlpha=function(){C.setClearAlpha.apply(C,arguments)},this.clear=function(N,de,ue){let G=0;(N===void 0||N)&&(G|=16384),(de===void 0||de)&&(G|=256),(ue===void 0||ue)&&(G|=1024),F.clear(G)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Le,!1),e.removeEventListener("webglcontextrestored",Ne,!1),me.dispose(),ye.dispose(),Ie.dispose(),pe.dispose(),Ce.dispose(),xe.dispose(),ne.dispose(),ge.stop()};function Le(N){N.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),x=!0}function Ne(){console.log("THREE.WebGLRenderer: Context Restored."),x=!1,Re()}function Ge(N){const de=N.target;de.removeEventListener("dispose",Ge),Ye(de)}function Ye(N){st(N),Ie.remove(N)}function st(N){const de=Ie.get(N).program;de!==void 0&&O.releaseProgram(de)}function bt(N,de){N.render(function(ue){p.renderBufferImmediate(ue,de)})}this.renderBufferImmediate=function(N,de){xe.initAttributes();const ue=Ie.get(N);N.hasPositions&&!ue.position&&(ue.position=F.createBuffer()),N.hasNormals&&!ue.normal&&(ue.normal=F.createBuffer()),N.hasUvs&&!ue.uv&&(ue.uv=F.createBuffer()),N.hasColors&&!ue.color&&(ue.color=F.createBuffer());const G=de.getAttributes();N.hasPositions&&(F.bindBuffer(34962,ue.position),F.bufferData(34962,N.positionArray,35048),xe.enableAttribute(G.position),F.vertexAttribPointer(G.position,3,5126,!1,0,0)),N.hasNormals&&(F.bindBuffer(34962,ue.normal),F.bufferData(34962,N.normalArray,35048),xe.enableAttribute(G.normal),F.vertexAttribPointer(G.normal,3,5126,!1,0,0)),N.hasUvs&&(F.bindBuffer(34962,ue.uv),F.bufferData(34962,N.uvArray,35048),xe.enableAttribute(G.uv),F.vertexAttribPointer(G.uv,2,5126,!1,0,0)),N.hasColors&&(F.bindBuffer(34962,ue.color),F.bufferData(34962,N.colorArray,35048),xe.enableAttribute(G.color),F.vertexAttribPointer(G.color,3,5126,!1,0,0)),xe.disableUnusedAttributes(),F.drawArrays(4,0,N.count),N.count=0},this.renderBufferDirect=function(N,de,ue,G,V,ae){de===null&&(de=Y);const he=V.isMesh&&V.matrixWorld.determinant()<0,ve=ht(N,de,G,V);be.setMaterial(G,he);let T=ue.index;const k=ue.attributes.position;if(T===null){if(k===void 0||k.count===0)return}else if(T.count===0)return;let J=1;G.wireframe===!0&&(T=ze.getWireframeAttribute(ue),J=2),(G.morphTargets||G.morphNormals)&&A.update(V,ue,G,ve),xe.setup(V,G,ve,ue,T);let B,te=ie;T!==null&&(B=Te.get(T),te=se,te.setIndex(B));const Ae=T!==null?T.count:k.count,Pe=ue.drawRange.start*J,Ve=ue.drawRange.count*J,He=ae!==null?ae.start*J:0,et=ae!==null?ae.count*J:1/0,$e=Math.max(Pe,He),Qe=Math.min(Ae,Pe+Ve,He+et)-1,ct=Math.max(0,Qe-$e+1);if(ct!==0){if(V.isMesh)G.wireframe===!0?(be.setLineWidth(G.wireframeLinewidth*Q()),te.setMode(1)):te.setMode(4);else if(V.isLine){let ln=G.linewidth;ln===void 0&&(ln=1),be.setLineWidth(ln*Q()),V.isLineSegments?te.setMode(1):V.isLineLoop?te.setMode(2):te.setMode(3)}else V.isPoints?te.setMode(0):V.isSprite&&te.setMode(4);if(V.isInstancedMesh)te.renderInstances($e,ct,V.count);else if(ue.isInstancedBufferGeometry){const ln=Math.min(ue.instanceCount,ue._maxInstanceCount);te.renderInstances($e,ct,ln)}else te.render($e,ct)}},this.compile=function(N,de){f=ye.get(N),f.init(),N.traverseVisible(function(G){G.isLight&&G.layers.test(de.layers)&&(f.pushLight(G),G.castShadow&&f.pushShadow(G))}),f.setupLights();const ue=new WeakMap;N.traverse(function(G){const V=G.material;if(V)if(Array.isArray(V))for(let ae=0;ae<V.length;ae++){const he=V[ae];ue.has(he)===!1&&(ot(he,N,G),ue.set(he))}else ue.has(V)===!1&&(ot(V,N,G),ue.set(V))})};let re=null;function Be(N){ne.isPresenting||re&&re(N)}const ge=new vy;ge.setAnimationLoop(Be),typeof window<"u"&&ge.setContext(window),this.setAnimationLoop=function(N){re=N,ne.setAnimationLoop(N),N===null?ge.stop():ge.start()},this.render=function(N,de){let ue,G;if(arguments[2]!==void 0&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),ue=arguments[2]),arguments[3]!==void 0&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),G=arguments[3]),de!==void 0&&de.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(x===!0)return;xe.resetDefaultState(),M=-1,b=null,N.autoUpdate===!0&&N.updateMatrixWorld(),de.parent===null&&de.updateMatrixWorld(),ne.enabled===!0&&ne.isPresenting===!0&&(de=ne.getCamera(de)),N.isScene===!0&&N.onBeforeRender(p,N,de,ue||w),f=ye.get(N,h.length),f.init(),h.push(f),P.multiplyMatrices(de.projectionMatrix,de.matrixWorldInverse),K.setFromProjectionMatrix(P),ee=this.localClippingEnabled,j=Z.init(this.clippingPlanes,ee,de),u=me.get(N,de),u.init(),Fe(N,de,0,p.sortObjects),u.finish(),p.sortObjects===!0&&u.sort(W,L),j===!0&&Z.beginShadows();const V=f.state.shadowsArray;we.render(V,N,de),f.setupLights(),f.setupLightsView(de),j===!0&&Z.endShadows(),this.info.autoReset===!0&&this.info.reset(),ue!==void 0&&this.setRenderTarget(ue),C.render(u,N,de,G);const ae=u.opaque,he=u.transparent;ae.length>0&&qe(ae,N,de),he.length>0&&qe(he,N,de),N.isScene===!0&&N.onAfterRender(p,N,de),w!==null&&(fe.updateRenderTargetMipmap(w),fe.updateMultisampleRenderTarget(w)),be.buffers.depth.setTest(!0),be.buffers.depth.setMask(!0),be.buffers.color.setMask(!0),be.setPolygonOffset(!1),h.pop(),h.length>0?f=h[h.length-1]:f=null,u=null};function Fe(N,de,ue,G){if(N.visible===!1)return;if(N.layers.test(de.layers)){if(N.isGroup)ue=N.renderOrder;else if(N.isLOD)N.autoUpdate===!0&&N.update(de);else if(N.isLight)f.pushLight(N),N.castShadow&&f.pushShadow(N);else if(N.isSprite){if(!N.frustumCulled||K.intersectsSprite(N)){G&&H.setFromMatrixPosition(N.matrixWorld).applyMatrix4(P);const he=Ce.update(N),ve=N.material;ve.visible&&u.push(N,he,ve,ue,H.z,null)}}else if(N.isImmediateRenderObject)G&&H.setFromMatrixPosition(N.matrixWorld).applyMatrix4(P),u.push(N,null,N.material,ue,H.z,null);else if((N.isMesh||N.isLine||N.isPoints)&&(N.isSkinnedMesh&&N.skeleton.frame!==_e.render.frame&&(N.skeleton.update(),N.skeleton.frame=_e.render.frame),!N.frustumCulled||K.intersectsObject(N))){G&&H.setFromMatrixPosition(N.matrixWorld).applyMatrix4(P);const he=Ce.update(N),ve=N.material;if(Array.isArray(ve)){const T=he.groups;for(let k=0,J=T.length;k<J;k++){const B=T[k],te=ve[B.materialIndex];te&&te.visible&&u.push(N,he,te,ue,H.z,B)}}else ve.visible&&u.push(N,he,ve,ue,H.z,null)}}const ae=N.children;for(let he=0,ve=ae.length;he<ve;he++)Fe(ae[he],de,ue,G)}function qe(N,de,ue){const G=de.isScene===!0?de.overrideMaterial:null;for(let V=0,ae=N.length;V<ae;V++){const he=N[V],ve=he.object,T=he.geometry,k=G===null?he.material:G,J=he.group;if(ue.isArrayCamera){const B=ue.cameras;for(let te=0,Ae=B.length;te<Ae;te++){const Pe=B[te];ve.layers.test(Pe.layers)&&(be.viewport(_.copy(Pe.viewport)),f.setupLightsView(Pe),it(ve,de,Pe,T,k,J))}}else it(ve,de,ue,T,k,J)}}function it(N,de,ue,G,V,ae){if(N.onBeforeRender(p,de,ue,G,V,ae),N.modelViewMatrix.multiplyMatrices(ue.matrixWorldInverse,N.matrixWorld),N.normalMatrix.getNormalMatrix(N.modelViewMatrix),N.isImmediateRenderObject){const he=ht(ue,de,V,N);be.setMaterial(V),xe.reset(),bt(N,he)}else p.renderBufferDirect(ue,de,G,V,N,ae);N.onAfterRender(p,de,ue,G,V,ae)}function ot(N,de,ue){de.isScene!==!0&&(de=Y);const G=Ie.get(N),V=f.state.lights,ae=f.state.shadowsArray,he=V.state.version,ve=O.getParameters(N,V.state,ae,de,ue),T=O.getProgramCacheKey(ve);let k=G.program,J=!0;if(G.environment=N.isMeshStandardMaterial?de.environment:null,G.fog=de.fog,G.envMap=pe.get(N.envMap||G.environment),k===void 0)N.addEventListener("dispose",Ge);else if(k.cacheKey!==T)st(N);else if(G.lightsStateVersion!==he)J=!1;else{if(ve.shaderID!==void 0)return;J=!1}J&&(ve.uniforms=O.getUniforms(N),N.onBeforeCompile(ve,p),k=O.acquireProgram(ve,T),G.program=k,G.uniforms=ve.uniforms,G.outputEncoding=ve.outputEncoding);const B=G.uniforms;(!N.isShaderMaterial&&!N.isRawShaderMaterial||N.clipping===!0)&&(G.numClippingPlanes=Z.numPlanes,G.numIntersection=Z.numIntersection,B.clippingPlanes=Z.uniform),G.needsLights=pt(N),G.lightsStateVersion=he,G.needsLights&&(B.ambientLightColor.value=V.state.ambient,B.lightProbe.value=V.state.probe,B.directionalLights.value=V.state.directional,B.directionalLightShadows.value=V.state.directionalShadow,B.spotLights.value=V.state.spot,B.spotLightShadows.value=V.state.spotShadow,B.rectAreaLights.value=V.state.rectArea,B.ltc_1.value=V.state.rectAreaLTC1,B.ltc_2.value=V.state.rectAreaLTC2,B.pointLights.value=V.state.point,B.pointLightShadows.value=V.state.pointShadow,B.hemisphereLights.value=V.state.hemi,B.directionalShadowMap.value=V.state.directionalShadowMap,B.directionalShadowMatrix.value=V.state.directionalShadowMatrix,B.spotShadowMap.value=V.state.spotShadowMap,B.spotShadowMatrix.value=V.state.spotShadowMatrix,B.pointShadowMap.value=V.state.pointShadowMap,B.pointShadowMatrix.value=V.state.pointShadowMatrix);const te=G.program.getUniforms(),Ae=fr.seqWithValue(te.seq,B);G.uniformsList=Ae}function ht(N,de,ue,G){de.isScene!==!0&&(de=Y),fe.resetTextureUnits();const V=de.fog,ae=ue.isMeshStandardMaterial?de.environment:null,he=w===null?p.outputEncoding:w.texture.encoding,ve=pe.get(ue.envMap||ae),T=Ie.get(ue),k=f.state.lights;if(j===!0&&(ee===!0||N!==b)){const He=N===b&&ue.id===M;Z.setState(ue,N,He)}ue.version===T.__version?(ue.fog&&T.fog!==V||T.environment!==ae||T.needsLights&&T.lightsStateVersion!==k.state.version||T.numClippingPlanes!==void 0&&(T.numClippingPlanes!==Z.numPlanes||T.numIntersection!==Z.numIntersection)||T.outputEncoding!==he||T.envMap!==ve)&&ot(ue,de,G):(ot(ue,de,G),T.__version=ue.version);let J=!1,B=!1,te=!1;const Ae=T.program,Pe=Ae.getUniforms(),Ve=T.uniforms;if(be.useProgram(Ae.program)&&(J=!0,B=!0,te=!0),ue.id!==M&&(M=ue.id,B=!0),J||b!==N){if(Pe.setValue(F,"projectionMatrix",N.projectionMatrix),Me.logarithmicDepthBuffer&&Pe.setValue(F,"logDepthBufFC",2/(Math.log(N.far+1)/Math.LN2)),b!==N&&(b=N,B=!0,te=!0),ue.isShaderMaterial||ue.isMeshPhongMaterial||ue.isMeshToonMaterial||ue.isMeshStandardMaterial||ue.envMap){const He=Pe.map.cameraPosition;He!==void 0&&He.setValue(F,H.setFromMatrixPosition(N.matrixWorld))}(ue.isMeshPhongMaterial||ue.isMeshToonMaterial||ue.isMeshLambertMaterial||ue.isMeshBasicMaterial||ue.isMeshStandardMaterial||ue.isShaderMaterial)&&Pe.setValue(F,"isOrthographic",N.isOrthographicCamera===!0),(ue.isMeshPhongMaterial||ue.isMeshToonMaterial||ue.isMeshLambertMaterial||ue.isMeshBasicMaterial||ue.isMeshStandardMaterial||ue.isShaderMaterial||ue.isShadowMaterial||ue.skinning)&&Pe.setValue(F,"viewMatrix",N.matrixWorldInverse)}if(ue.skinning){Pe.setOptional(F,G,"bindMatrix"),Pe.setOptional(F,G,"bindMatrixInverse");const He=G.skeleton;if(He){const et=He.bones;if(Me.floatVertexTextures){if(He.boneTexture===null){let $e=Math.sqrt(et.length*4);$e=Ke.ceilPowerOfTwo($e),$e=Math.max($e,4);const Qe=new Float32Array($e*$e*4);Qe.set(He.boneMatrices);const ct=new Fi(Qe,$e,$e,bn,Pi);He.boneMatrices=Qe,He.boneTexture=ct,He.boneTextureSize=$e}Pe.setValue(F,"boneTexture",He.boneTexture,fe),Pe.setValue(F,"boneTextureSize",He.boneTextureSize)}else Pe.setOptional(F,He,"boneMatrices")}}return(B||T.receiveShadow!==G.receiveShadow)&&(T.receiveShadow=G.receiveShadow,Pe.setValue(F,"receiveShadow",G.receiveShadow)),B&&(Pe.setValue(F,"toneMappingExposure",p.toneMappingExposure),T.needsLights&&cn(Ve,te),V&&ue.fog&&D.refreshFogUniforms(Ve,V),D.refreshMaterialUniforms(Ve,ue,$,I),fr.upload(F,T.uniformsList,Ve,fe)),ue.isShaderMaterial&&ue.uniformsNeedUpdate===!0&&(fr.upload(F,T.uniformsList,Ve,fe),ue.uniformsNeedUpdate=!1),ue.isSpriteMaterial&&Pe.setValue(F,"center",G.center),Pe.setValue(F,"modelViewMatrix",G.modelViewMatrix),Pe.setValue(F,"normalMatrix",G.normalMatrix),Pe.setValue(F,"modelMatrix",G.matrixWorld),Ae}function cn(N,de){N.ambientLightColor.needsUpdate=de,N.lightProbe.needsUpdate=de,N.directionalLights.needsUpdate=de,N.directionalLightShadows.needsUpdate=de,N.pointLights.needsUpdate=de,N.pointLightShadows.needsUpdate=de,N.spotLights.needsUpdate=de,N.spotLightShadows.needsUpdate=de,N.rectAreaLights.needsUpdate=de,N.hemisphereLights.needsUpdate=de}function pt(N){return N.isMeshLambertMaterial||N.isMeshToonMaterial||N.isMeshPhongMaterial||N.isMeshStandardMaterial||N.isShadowMaterial||N.isShaderMaterial&&N.lights===!0}this.setFramebuffer=function(N){m!==N&&w===null&&F.bindFramebuffer(36160,N),m=N},this.getActiveCubeFace=function(){return v},this.getActiveMipmapLevel=function(){return g},this.getRenderList=function(){return u},this.setRenderList=function(N){u=N},this.getRenderTarget=function(){return w},this.setRenderTarget=function(N,de=0,ue=0){w=N,v=de,g=ue,N&&Ie.get(N).__webglFramebuffer===void 0&&fe.setupRenderTarget(N);let G=m,V=!1;if(N){const ae=Ie.get(N).__webglFramebuffer;N.isWebGLCubeRenderTarget?(G=ae[de],V=!0):N.isWebGLMultisampleRenderTarget?G=Ie.get(N).__webglMultisampledFramebuffer:G=ae,_.copy(N.viewport),S.copy(N.scissor),E=N.scissorTest}else _.copy(z).multiplyScalar($).floor(),S.copy(U).multiplyScalar($).floor(),E=X;if(y!==G&&(F.bindFramebuffer(36160,G),y=G),be.viewport(_),be.scissor(S),be.setScissorTest(E),V){const ae=Ie.get(N.texture);F.framebufferTexture2D(36160,36064,34069+de,ae.__webglTexture,ue)}},this.readRenderTargetPixels=function(N,de,ue,G,V,ae,he){if(!(N&&N.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let ve=Ie.get(N).__webglFramebuffer;if(N.isWebGLCubeRenderTarget&&he!==void 0&&(ve=ve[he]),ve){let T=!1;ve!==y&&(F.bindFramebuffer(36160,ve),T=!0);try{const k=N.texture,J=k.format,B=k.type;if(J!==bn&&le.convert(J)!==F.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const te=B===qa&&(Se.has("EXT_color_buffer_half_float")||Me.isWebGL2&&Se.has("EXT_color_buffer_float"));if(B!==Jo&&le.convert(B)!==F.getParameter(35738)&&!(B===Pi&&(Me.isWebGL2||Se.has("OES_texture_float")||Se.has("WEBGL_color_buffer_float")))&&!te){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}F.checkFramebufferStatus(36160)===36053?de>=0&&de<=N.width-G&&ue>=0&&ue<=N.height-V&&F.readPixels(de,ue,G,V,le.convert(J),le.convert(B),ae):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{T&&F.bindFramebuffer(36160,y)}}},this.copyFramebufferToTexture=function(N,de,ue=0){const G=Math.pow(2,-ue),V=Math.floor(de.image.width*G),ae=Math.floor(de.image.height*G),he=le.convert(de.format);fe.setTexture2D(de,0),F.copyTexImage2D(3553,ue,he,N.x,N.y,V,ae,0),be.unbindTexture()},this.copyTextureToTexture=function(N,de,ue,G=0){const V=de.image.width,ae=de.image.height,he=le.convert(ue.format),ve=le.convert(ue.type);fe.setTexture2D(ue,0),F.pixelStorei(37440,ue.flipY),F.pixelStorei(37441,ue.premultiplyAlpha),F.pixelStorei(3317,ue.unpackAlignment),de.isDataTexture?F.texSubImage2D(3553,G,N.x,N.y,V,ae,he,ve,de.image.data):de.isCompressedTexture?F.compressedTexSubImage2D(3553,G,N.x,N.y,de.mipmaps[0].width,de.mipmaps[0].height,he,de.mipmaps[0].data):F.texSubImage2D(3553,G,N.x,N.y,he,ve,de.image),G===0&&ue.generateMipmaps&&F.generateMipmap(3553),be.unbindTexture()},this.initTexture=function(N){fe.setTexture2D(N,0),be.unbindTexture()},this.resetState=function(){be.reset(),xe.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function M0(n){Tc.call(this,n)}M0.prototype=Object.assign(Object.create(Tc.prototype),{constructor:M0,isWebGL1Renderer:!0});class Hd{constructor(e,t){Object.defineProperty(this,"isFogExp2",{value:!0}),this.name="",this.color=new Ue(e),this.density=t!==void 0?t:25e-5}clone(){return new Hd(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class Vd{constructor(e,t,i){Object.defineProperty(this,"isFog",{value:!0}),this.name="",this.color=new Ue(e),this.near=t!==void 0?t:1,this.far=i!==void 0?i:1e3}clone(){return new Vd(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class Sp extends We{constructor(){super(),Object.defineProperty(this,"isScene",{value:!0}),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.background!==null&&(t.object.background=this.background.toJSON(e)),this.environment!==null&&(t.object.environment=this.environment.toJSON(e)),this.fog!==null&&(t.object.fog=this.fog.toJSON()),t}}function yn(n,e){this.array=n,this.stride=e,this.count=n!==void 0?n.length/e:0,this.usage=Sc,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Ke.generateUUID()}Object.defineProperty(yn.prototype,"needsUpdate",{set:function(n){n===!0&&this.version++}});Object.assign(yn.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(n){return this.usage=n,this},copy:function(n){return this.array=new n.array.constructor(n.array),this.count=n.count,this.stride=n.stride,this.usage=n.usage,this},copyAt:function(n,e,t){n*=this.stride,t*=e.stride;for(let i=0,r=this.stride;i<r;i++)this.array[n+i]=e.array[t+i];return this},set:function(n,e=0){return this.array.set(n,e),this},clone:function(n){n.arrayBuffers===void 0&&(n.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Ke.generateUUID()),n.arrayBuffers[this.array.buffer._uuid]===void 0&&(n.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(n.arrayBuffers[this.array.buffer._uuid]),t=new yn(e,this.stride);return t.setUsage(this.usage),t},onUpload:function(n){return this.onUploadCallback=n,this},toJSON:function(n){return n.arrayBuffers===void 0&&(n.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Ke.generateUUID()),n.arrayBuffers[this.array.buffer._uuid]===void 0&&(n.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});const Dr=new q;function gr(n,e,t,i){this.name="",this.data=n,this.itemSize=e,this.offset=t,this.normalized=i===!0}Object.defineProperties(gr.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}},needsUpdate:{set:function(n){this.data.needsUpdate=n}}});Object.assign(gr.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(n){for(let e=0,t=this.data.count;e<t;e++)Dr.x=this.getX(e),Dr.y=this.getY(e),Dr.z=this.getZ(e),Dr.applyMatrix4(n),this.setXYZ(e,Dr.x,Dr.y,Dr.z);return this},setX:function(n,e){return this.data.array[n*this.data.stride+this.offset]=e,this},setY:function(n,e){return this.data.array[n*this.data.stride+this.offset+1]=e,this},setZ:function(n,e){return this.data.array[n*this.data.stride+this.offset+2]=e,this},setW:function(n,e){return this.data.array[n*this.data.stride+this.offset+3]=e,this},getX:function(n){return this.data.array[n*this.data.stride+this.offset]},getY:function(n){return this.data.array[n*this.data.stride+this.offset+1]},getZ:function(n){return this.data.array[n*this.data.stride+this.offset+2]},getW:function(n){return this.data.array[n*this.data.stride+this.offset+3]},setXY:function(n,e,t){return n=n*this.data.stride+this.offset,this.data.array[n+0]=e,this.data.array[n+1]=t,this},setXYZ:function(n,e,t,i){return n=n*this.data.stride+this.offset,this.data.array[n+0]=e,this.data.array[n+1]=t,this.data.array[n+2]=i,this},setXYZW:function(n,e,t,i,r){return n=n*this.data.stride+this.offset,this.data.array[n+0]=e,this.data.array[n+1]=t,this.data.array[n+2]=i,this.data.array[n+3]=r,this},clone:function(n){if(n===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const i=t*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)e.push(this.data.array[i+r])}return new Ze(new this.array.constructor(e),this.itemSize,this.normalized)}else return n.interleavedBuffers===void 0&&(n.interleavedBuffers={}),n.interleavedBuffers[this.data.uuid]===void 0&&(n.interleavedBuffers[this.data.uuid]=this.data.clone(n)),new gr(n.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)},toJSON:function(n){if(n===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const i=t*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)e.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}else return n.interleavedBuffers===void 0&&(n.interleavedBuffers={}),n.interleavedBuffers[this.data.uuid]===void 0&&(n.interleavedBuffers[this.data.uuid]=this.data.toJSON(n)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}});function vr(n){Je.call(this),this.type="SpriteMaterial",this.color=new Ue(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(n)}vr.prototype=Object.create(Je.prototype);vr.prototype.constructor=vr;vr.prototype.isSpriteMaterial=!0;vr.prototype.copy=function(n){return Je.prototype.copy.call(this,n),this.color.copy(n.color),this.map=n.map,this.alphaMap=n.alphaMap,this.rotation=n.rotation,this.sizeAttenuation=n.sizeAttenuation,this};let ro;const ha=new q,so=new q,oo=new q,ao=new Ee,pa=new Ee,Cy=new tt,pl=new q,ma=new q,ml=new q,p1=new Ee,Oh=new Ee,m1=new Ee;function $a(n){if(We.call(this),this.type="Sprite",ro===void 0){ro=new Xe;const e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),t=new yn(e,5);ro.setIndex([0,1,2,0,2,3]),ro.setAttribute("position",new gr(t,3,0,!1)),ro.setAttribute("uv",new gr(t,2,3,!1))}this.geometry=ro,this.material=n!==void 0?n:new vr,this.center=new Ee(.5,.5)}$a.prototype=Object.assign(Object.create(We.prototype),{constructor:$a,isSprite:!0,raycast:function(n,e){n.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),so.setFromMatrixScale(this.matrixWorld),Cy.copy(n.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(n.camera.matrixWorldInverse,this.matrixWorld),oo.setFromMatrixPosition(this.modelViewMatrix),n.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&so.multiplyScalar(-oo.z);const t=this.material.rotation;let i,r;t!==0&&(r=Math.cos(t),i=Math.sin(t));const s=this.center;xl(pl.set(-.5,-.5,0),oo,s,so,i,r),xl(ma.set(.5,-.5,0),oo,s,so,i,r),xl(ml.set(.5,.5,0),oo,s,so,i,r),p1.set(0,0),Oh.set(1,0),m1.set(1,1);let o=n.ray.intersectTriangle(pl,ma,ml,!1,ha);if(o===null&&(xl(ma.set(-.5,.5,0),oo,s,so,i,r),Oh.set(0,1),o=n.ray.intersectTriangle(pl,ml,ma,!1,ha),o===null))return;const a=n.ray.origin.distanceTo(ha);a<n.near||a>n.far||e.push({distance:a,point:ha.clone(),uv:kt.getUV(ha,pl,ma,ml,p1,Oh,m1,new Ee),face:null,object:this})},copy:function(n){return We.prototype.copy.call(this,n),n.center!==void 0&&this.center.copy(n.center),this.material=n.material,this}});function xl(n,e,t,i,r,s){ao.subVectors(n,t).addScalar(.5).multiply(i),r!==void 0?(pa.x=s*ao.x-r*ao.y,pa.y=r*ao.x+s*ao.y):pa.copy(ao),n.copy(e),n.x+=pa.x,n.y+=pa.y,n.applyMatrix4(Cy)}const gl=new q,x1=new q;function ja(){We.call(this),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}ja.prototype=Object.assign(Object.create(We.prototype),{constructor:ja,isLOD:!0,copy:function(n){We.prototype.copy.call(this,n,!1);const e=n.levels;for(let t=0,i=e.length;t<i;t++){const r=e[t];this.addLevel(r.object.clone(),r.distance)}return this.autoUpdate=n.autoUpdate,this},addLevel:function(n,e=0){e=Math.abs(e);const t=this.levels;let i;for(i=0;i<t.length&&!(e<t[i].distance);i++);return t.splice(i,0,{distance:e,object:n}),this.add(n),this},getCurrentLevel:function(){return this._currentLevel},getObjectForDistance:function(n){const e=this.levels;if(e.length>0){let t,i;for(t=1,i=e.length;t<i&&!(n<e[t].distance);t++);return e[t-1].object}return null},raycast:function(n,e){if(this.levels.length>0){gl.setFromMatrixPosition(this.matrixWorld);const i=n.ray.origin.distanceTo(gl);this.getObjectForDistance(i).raycast(n,e)}},update:function(n){const e=this.levels;if(e.length>1){gl.setFromMatrixPosition(n.matrixWorld),x1.setFromMatrixPosition(this.matrixWorld);const t=gl.distanceTo(x1)/n.zoom;e[0].object.visible=!0;let i,r;for(i=1,r=e.length;i<r&&t>=e[i].distance;i++)e[i-1].object.visible=!1,e[i].object.visible=!0;for(this._currentLevel=i-1;i<r;i++)e[i].object.visible=!1}},toJSON:function(n){const e=We.prototype.toJSON.call(this,n);this.autoUpdate===!1&&(e.object.autoUpdate=!1),e.object.levels=[];const t=this.levels;for(let i=0,r=t.length;i<r;i++){const s=t[i];e.object.levels.push({object:s.object.uuid,distance:s.distance})}return e}});const g1=new q,v1=new ut,y1=new ut,cT=new q,b1=new tt;function Xa(n,e){n&&n.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),gt.call(this,n,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new tt,this.bindMatrixInverse=new tt}Xa.prototype=Object.assign(Object.create(gt.prototype),{constructor:Xa,isSkinnedMesh:!0,copy:function(n){return gt.prototype.copy.call(this,n),this.bindMode=n.bindMode,this.bindMatrix.copy(n.bindMatrix),this.bindMatrixInverse.copy(n.bindMatrixInverse),this.skeleton=n.skeleton,this},bind:function(n,e){this.skeleton=n,e===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){const n=new ut,e=this.geometry.attributes.skinWeight;for(let t=0,i=e.count;t<i;t++){n.x=e.getX(t),n.y=e.getY(t),n.z=e.getZ(t),n.w=e.getW(t);const r=1/n.manhattanLength();r!==1/0?n.multiplyScalar(r):n.set(1,0,0,0),e.setXYZW(t,n.x,n.y,n.z,n.w)}},updateMatrixWorld:function(n){gt.prototype.updateMatrixWorld.call(this,n),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},boneTransform:function(n,e){const t=this.skeleton,i=this.geometry;v1.fromBufferAttribute(i.attributes.skinIndex,n),y1.fromBufferAttribute(i.attributes.skinWeight,n),g1.fromBufferAttribute(i.attributes.position,n).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let r=0;r<4;r++){const s=y1.getComponent(r);if(s!==0){const o=v1.getComponent(r);b1.multiplyMatrices(t.bones[o].matrixWorld,t.boneInverses[o]),e.addScaledVector(cT.copy(g1).applyMatrix4(b1),s)}}return e.applyMatrix4(this.bindMatrixInverse)}});function Ya(){We.call(this),this.type="Bone"}Ya.prototype=Object.assign(Object.create(We.prototype),{constructor:Ya,isBone:!0});const _1=new tt,lT=new tt;function Za(n=[],e=[]){this.uuid=Ke.generateUUID(),this.bones=n.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}Object.assign(Za.prototype,{init:function(){const n=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(n.length*16),e.length===0)this.calculateInverses();else if(n.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let t=0,i=this.bones.length;t<i;t++)this.boneInverses.push(new tt)}},calculateInverses:function(){this.boneInverses.length=0;for(let n=0,e=this.bones.length;n<e;n++){const t=new tt;this.bones[n]&&t.copy(this.bones[n].matrixWorld).invert(),this.boneInverses.push(t)}},pose:function(){for(let n=0,e=this.bones.length;n<e;n++){const t=this.bones[n];t&&t.matrixWorld.copy(this.boneInverses[n]).invert()}for(let n=0,e=this.bones.length;n<e;n++){const t=this.bones[n];t&&(t.parent&&t.parent.isBone?(t.matrix.copy(t.parent.matrixWorld).invert(),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))}},update:function(){const n=this.bones,e=this.boneInverses,t=this.boneMatrices,i=this.boneTexture;for(let r=0,s=n.length;r<s;r++){const o=n[r]?n[r].matrixWorld:lT;_1.multiplyMatrices(o,e[r]),_1.toArray(t,r*16)}i!==null&&(i.needsUpdate=!0)},clone:function(){return new Za(this.bones,this.boneInverses)},getBoneByName:function(n){for(let e=0,t=this.bones.length;e<t;e++){const i=this.bones[e];if(i.name===n)return i}},dispose:function(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)},fromJSON:function(n,e){this.uuid=n.uuid;for(let t=0,i=n.bones.length;t<i;t++){const r=n.bones[t];let s=e[r];s===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),s=new Ya),this.bones.push(s),this.boneInverses.push(new tt().fromArray(n.boneInverses[t]))}return this.init(),this},toJSON:function(){const n={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};n.uuid=this.uuid;const e=this.bones,t=this.boneInverses;for(let i=0,r=e.length;i<r;i++){const s=e[i];n.bones.push(s.uuid);const o=t[i];n.boneInverses.push(o.toArray())}return n}});const w1=new tt,M1=new tt,vl=[],xa=new gt;function Kl(n,e,t){gt.call(this,n,e),this.instanceMatrix=new Ze(new Float32Array(t*16),16),this.instanceColor=null,this.count=t,this.frustumCulled=!1}Kl.prototype=Object.assign(Object.create(gt.prototype),{constructor:Kl,isInstancedMesh:!0,copy:function(n){return gt.prototype.copy.call(this,n),this.instanceMatrix.copy(n.instanceMatrix),n.instanceColor!==null&&(this.instanceColor=n.instanceColor.clone()),this.count=n.count,this},getColorAt:function(n,e){e.fromArray(this.instanceColor.array,n*3)},getMatrixAt:function(n,e){e.fromArray(this.instanceMatrix.array,n*16)},raycast:function(n,e){const t=this.matrixWorld,i=this.count;if(xa.geometry=this.geometry,xa.material=this.material,xa.material!==void 0)for(let r=0;r<i;r++){this.getMatrixAt(r,w1),M1.multiplyMatrices(t,w1),xa.matrixWorld=M1,xa.raycast(n,vl);for(let s=0,o=vl.length;s<o;s++){const a=vl[s];a.instanceId=r,a.object=this,e.push(a)}vl.length=0}},setColorAt:function(n,e){this.instanceColor===null&&(this.instanceColor=new Ze(new Float32Array(this.count*3),3)),e.toArray(this.instanceColor.array,n*3)},setMatrixAt:function(n,e){e.toArray(this.instanceMatrix.array,n*16)},updateMorphTargets:function(){},dispose:function(){this.dispatchEvent({type:"dispose"})}});function wt(n){Je.call(this),this.type="LineBasicMaterial",this.color=new Ue(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(n)}wt.prototype=Object.create(Je.prototype);wt.prototype.constructor=wt;wt.prototype.isLineBasicMaterial=!0;wt.prototype.copy=function(n){return Je.prototype.copy.call(this,n),this.color.copy(n.color),this.linewidth=n.linewidth,this.linecap=n.linecap,this.linejoin=n.linejoin,this.morphTargets=n.morphTargets,this};const S1=new q,E1=new q,T1=new tt,qh=new Ko,yl=new Tr;function In(n=new Xe,e=new wt){We.call(this),this.type="Line",this.geometry=n,this.material=e,this.updateMorphTargets()}In.prototype=Object.assign(Object.create(We.prototype),{constructor:In,isLine:!0,copy:function(n){return We.prototype.copy.call(this,n),this.material=n.material,this.geometry=n.geometry,this},computeLineDistances:function(){const n=this.geometry;if(n.isBufferGeometry)if(n.index===null){const e=n.attributes.position,t=[0];for(let i=1,r=e.count;i<r;i++)S1.fromBufferAttribute(e,i-1),E1.fromBufferAttribute(e,i),t[i]=t[i-1],t[i]+=S1.distanceTo(E1);n.setAttribute("lineDistance",new ke(t,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else n.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this},raycast:function(n,e){const t=this.geometry,i=this.matrixWorld,r=n.params.Line.threshold;if(t.boundingSphere===null&&t.computeBoundingSphere(),yl.copy(t.boundingSphere),yl.applyMatrix4(i),yl.radius+=r,n.ray.intersectsSphere(yl)===!1)return;T1.copy(i).invert(),qh.copy(n.ray).applyMatrix4(T1);const s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s,a=new q,l=new q,c=new q,d=new q,u=this.isLineSegments?2:1;if(t.isBufferGeometry){const f=t.index,p=t.attributes.position;if(f!==null){const x=f.array;for(let m=0,v=x.length-1;m<v;m+=u){const g=x[m],w=x[m+1];if(a.fromBufferAttribute(p,g),l.fromBufferAttribute(p,w),qh.distanceSqToSegment(a,l,d,c)>o)continue;d.applyMatrix4(this.matrixWorld);const M=n.ray.origin.distanceTo(d);M<n.near||M>n.far||e.push({distance:M,point:c.clone().applyMatrix4(this.matrixWorld),index:m,face:null,faceIndex:null,object:this})}}else for(let x=0,m=p.count-1;x<m;x+=u){if(a.fromBufferAttribute(p,x),l.fromBufferAttribute(p,x+1),qh.distanceSqToSegment(a,l,d,c)>o)continue;d.applyMatrix4(this.matrixWorld);const g=n.ray.origin.distanceTo(d);g<n.near||g>n.far||e.push({distance:g,point:c.clone().applyMatrix4(this.matrixWorld),index:x,face:null,faceIndex:null,object:this})}}else t.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")},updateMorphTargets:function(){const n=this.geometry;if(n.isBufferGeometry){const e=n.morphAttributes,t=Object.keys(e);if(t.length>0){const i=e[t[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=i.length;r<s;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}else{const e=n.morphTargets;e!==void 0&&e.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});const A1=new q,L1=new q;function tn(n,e){In.call(this,n,e),this.type="LineSegments"}tn.prototype=Object.assign(Object.create(In.prototype),{constructor:tn,isLineSegments:!0,computeLineDistances:function(){const n=this.geometry;if(n.isBufferGeometry)if(n.index===null){const e=n.attributes.position,t=[];for(let i=0,r=e.count;i<r;i+=2)A1.fromBufferAttribute(e,i),L1.fromBufferAttribute(e,i+1),t[i]=i===0?0:t[i-1],t[i+1]=t[i]+A1.distanceTo(L1);n.setAttribute("lineDistance",new ke(t,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else n.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}});function Ql(n,e){In.call(this,n,e),this.type="LineLoop"}Ql.prototype=Object.assign(Object.create(In.prototype),{constructor:Ql,isLineLoop:!0});function $n(n){Je.call(this),this.type="PointsMaterial",this.color=new Ue(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(n)}$n.prototype=Object.create(Je.prototype);$n.prototype.constructor=$n;$n.prototype.isPointsMaterial=!0;$n.prototype.copy=function(n){return Je.prototype.copy.call(this,n),this.color.copy(n.color),this.map=n.map,this.alphaMap=n.alphaMap,this.size=n.size,this.sizeAttenuation=n.sizeAttenuation,this.morphTargets=n.morphTargets,this};const C1=new tt,S0=new Ko,bl=new Tr,_l=new q;function Io(n=new Xe,e=new $n){We.call(this),this.type="Points",this.geometry=n,this.material=e,this.updateMorphTargets()}Io.prototype=Object.assign(Object.create(We.prototype),{constructor:Io,isPoints:!0,copy:function(n){return We.prototype.copy.call(this,n),this.material=n.material,this.geometry=n.geometry,this},raycast:function(n,e){const t=this.geometry,i=this.matrixWorld,r=n.params.Points.threshold;if(t.boundingSphere===null&&t.computeBoundingSphere(),bl.copy(t.boundingSphere),bl.applyMatrix4(i),bl.radius+=r,n.ray.intersectsSphere(bl)===!1)return;C1.copy(i).invert(),S0.copy(n.ray).applyMatrix4(C1);const s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s;if(t.isBufferGeometry){const a=t.index,c=t.attributes.position;if(a!==null){const d=a.array;for(let u=0,f=d.length;u<f;u++){const h=d[u];_l.fromBufferAttribute(c,h),R1(_l,h,o,i,n,e,this)}}else for(let d=0,u=c.count;d<u;d++)_l.fromBufferAttribute(c,d),R1(_l,d,o,i,n,e,this)}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")},updateMorphTargets:function(){const n=this.geometry;if(n.isBufferGeometry){const e=n.morphAttributes,t=Object.keys(e);if(t.length>0){const i=e[t[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=i.length;r<s;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}else{const e=n.morphTargets;e!==void 0&&e.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});function R1(n,e,t,i,r,s,o){const a=S0.distanceSqToPoint(n);if(a<t){const l=new q;S0.closestPointToPoint(n,l),l.applyMatrix4(i);const c=r.ray.origin.distanceTo(l);if(c<r.near||c>r.far)return;s.push({distance:c,distanceToRay:Math.sqrt(a),point:l,index:e,face:null,object:o})}}function E0(n,e,t,i,r,s,o,a,l){ft.call(this,n,e,t,i,r,s,o,a,l),this.format=o!==void 0?o:dr,this.minFilter=s!==void 0?s:zt,this.magFilter=r!==void 0?r:zt,this.generateMipmaps=!1;const c=this;function d(){c.needsUpdate=!0,n.requestVideoFrameCallback(d)}"requestVideoFrameCallback"in n&&n.requestVideoFrameCallback(d)}E0.prototype=Object.assign(Object.create(ft.prototype),{constructor:E0,clone:function(){return new this.constructor(this.image).copy(this)},isVideoTexture:!0,update:function(){const n=this.image;"requestVideoFrameCallback"in n===!1&&n.readyState>=n.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}});function Do(n,e,t,i,r,s,o,a,l,c,d,u){ft.call(this,null,s,o,a,l,c,i,r,d,u),this.image={width:e,height:t},this.mipmaps=n,this.flipY=!1,this.generateMipmaps=!1}Do.prototype=Object.create(ft.prototype);Do.prototype.constructor=Do;Do.prototype.isCompressedTexture=!0;function Ja(n,e,t,i,r,s,o,a,l){ft.call(this,n,e,t,i,r,s,o,a,l),this.needsUpdate=!0}Ja.prototype=Object.create(ft.prototype);Ja.prototype.constructor=Ja;Ja.prototype.isCanvasTexture=!0;function Ka(n,e,t,i,r,s,o,a,l,c){if(c=c!==void 0?c:ts,c!==ts&&c!==Lo)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");t===void 0&&c===ts&&(t=Oa),t===void 0&&c===Lo&&(t=bo),ft.call(this,null,i,r,s,o,a,c,t,l),this.image={width:n,height:e},this.magFilter=o!==void 0?o:Dt,this.minFilter=a!==void 0?a:Dt,this.flipY=!1,this.generateMipmaps=!1}Ka.prototype=Object.create(ft.prototype);Ka.prototype.constructor=Ka;Ka.prototype.isDepthTexture=!0;class ed extends Xe{constructor(e=1,t=8,i=0,r=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:i,thetaLength:r},t=Math.max(3,t);const s=[],o=[],a=[],l=[],c=new q,d=new Ee;o.push(0,0,0),a.push(0,0,1),l.push(.5,.5);for(let u=0,f=3;u<=t;u++,f+=3){const h=i+u/t*r;c.x=e*Math.cos(h),c.y=e*Math.sin(h),o.push(c.x,c.y,c.z),a.push(0,0,1),d.x=(o[f]/e+1)/2,d.y=(o[f+1]/e+1)/2,l.push(d.x,d.y)}for(let u=1;u<=t;u++)s.push(u,u+1,0);this.setIndex(s),this.setAttribute("position",new ke(o,3)),this.setAttribute("normal",new ke(a,3)),this.setAttribute("uv",new ke(l,2))}}class Oo extends Xe{constructor(e=1,t=1,i=1,r=8,s=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:i,radialSegments:r,heightSegments:s,openEnded:o,thetaStart:a,thetaLength:l};const c=this;r=Math.floor(r),s=Math.floor(s);const d=[],u=[],f=[],h=[];let p=0;const x=[],m=i/2;let v=0;g(),o===!1&&(e>0&&w(!0),t>0&&w(!1)),this.setIndex(d),this.setAttribute("position",new ke(u,3)),this.setAttribute("normal",new ke(f,3)),this.setAttribute("uv",new ke(h,2));function g(){const y=new q,M=new q;let b=0;const _=(t-e)/i;for(let S=0;S<=s;S++){const E=[],R=S/s,I=R*(t-e)+e;for(let $=0;$<=r;$++){const W=$/r,L=W*l+a,z=Math.sin(L),U=Math.cos(L);M.x=I*z,M.y=-R*i+m,M.z=I*U,u.push(M.x,M.y,M.z),y.set(z,_,U).normalize(),f.push(y.x,y.y,y.z),h.push(W,1-R),E.push(p++)}x.push(E)}for(let S=0;S<r;S++)for(let E=0;E<s;E++){const R=x[E][S],I=x[E+1][S],$=x[E+1][S+1],W=x[E][S+1];d.push(R,I,W),d.push(I,$,W),b+=6}c.addGroup(v,b,0),v+=b}function w(y){const M=p,b=new Ee,_=new q;let S=0;const E=y===!0?e:t,R=y===!0?1:-1;for(let $=1;$<=r;$++)u.push(0,m*R,0),f.push(0,R,0),h.push(.5,.5),p++;const I=p;for(let $=0;$<=r;$++){const L=$/r*l+a,z=Math.cos(L),U=Math.sin(L);_.x=E*U,_.y=m*R,_.z=E*z,u.push(_.x,_.y,_.z),f.push(0,R,0),b.x=z*.5+.5,b.y=U*.5*R+.5,h.push(b.x,b.y),p++}for(let $=0;$<r;$++){const W=M+$,L=I+$;y===!0?d.push(L,L+1,W):d.push(L+1,L,W),S+=3}c.addGroup(v,S,y===!0?1:2),v+=S}}}class td extends Oo{constructor(e=1,t=1,i=8,r=1,s=!1,o=0,a=Math.PI*2){super(0,e,t,i,r,s,o,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:i,heightSegments:r,openEnded:s,thetaStart:o,thetaLength:a}}}class yr extends Xe{constructor(e,t,i=1,r=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:i,detail:r};const s=[],o=[];a(r),c(i),d(),this.setAttribute("position",new ke(s,3)),this.setAttribute("normal",new ke(s.slice(),3)),this.setAttribute("uv",new ke(o,2)),r===0?this.computeVertexNormals():this.normalizeNormals();function a(g){const w=new q,y=new q,M=new q;for(let b=0;b<t.length;b+=3)h(t[b+0],w),h(t[b+1],y),h(t[b+2],M),l(w,y,M,g)}function l(g,w,y,M){const b=M+1,_=[];for(let S=0;S<=b;S++){_[S]=[];const E=g.clone().lerp(y,S/b),R=w.clone().lerp(y,S/b),I=b-S;for(let $=0;$<=I;$++)$===0&&S===b?_[S][$]=E:_[S][$]=E.clone().lerp(R,$/I)}for(let S=0;S<b;S++)for(let E=0;E<2*(b-S)-1;E++){const R=Math.floor(E/2);E%2===0?(f(_[S][R+1]),f(_[S+1][R]),f(_[S][R])):(f(_[S][R+1]),f(_[S+1][R+1]),f(_[S+1][R]))}}function c(g){const w=new q;for(let y=0;y<s.length;y+=3)w.x=s[y+0],w.y=s[y+1],w.z=s[y+2],w.normalize().multiplyScalar(g),s[y+0]=w.x,s[y+1]=w.y,s[y+2]=w.z}function d(){const g=new q;for(let w=0;w<s.length;w+=3){g.x=s[w+0],g.y=s[w+1],g.z=s[w+2];const y=m(g)/2/Math.PI+.5,M=v(g)/Math.PI+.5;o.push(y,1-M)}p(),u()}function u(){for(let g=0;g<o.length;g+=6){const w=o[g+0],y=o[g+2],M=o[g+4],b=Math.max(w,y,M),_=Math.min(w,y,M);b>.9&&_<.1&&(w<.2&&(o[g+0]+=1),y<.2&&(o[g+2]+=1),M<.2&&(o[g+4]+=1))}}function f(g){s.push(g.x,g.y,g.z)}function h(g,w){const y=g*3;w.x=e[y+0],w.y=e[y+1],w.z=e[y+2]}function p(){const g=new q,w=new q,y=new q,M=new q,b=new Ee,_=new Ee,S=new Ee;for(let E=0,R=0;E<s.length;E+=9,R+=6){g.set(s[E+0],s[E+1],s[E+2]),w.set(s[E+3],s[E+4],s[E+5]),y.set(s[E+6],s[E+7],s[E+8]),b.set(o[R+0],o[R+1]),_.set(o[R+2],o[R+3]),S.set(o[R+4],o[R+5]),M.copy(g).add(w).add(y).divideScalar(3);const I=m(M);x(b,R+0,g,I),x(_,R+2,w,I),x(S,R+4,y,I)}}function x(g,w,y,M){M<0&&g.x===1&&(o[w]=g.x-1),y.x===0&&y.z===0&&(o[w]=M/2/Math.PI+.5)}function m(g){return Math.atan2(g.z,-g.x)}function v(g){return Math.atan2(-g.y,Math.sqrt(g.x*g.x+g.z*g.z))}}}class nd extends yr{constructor(e=1,t=0){const i=(1+Math.sqrt(5))/2,r=1/i,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-i,0,-r,i,0,r,-i,0,r,i,-r,-i,0,-r,i,0,r,-i,0,r,i,0,-i,0,-r,i,0,-r,-i,0,r,i,0,r],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,o,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}}const wl=new q,Ml=new q,zh=new q,Sl=new kt;class Ep extends Xe{constructor(e,t){if(super(),this.type="EdgesGeometry",this.parameters={thresholdAngle:t},t=t!==void 0?t:1,e.isGeometry===!0){console.error("THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return}const r=Math.pow(10,4),s=Math.cos(Ke.DEG2RAD*t),o=e.getIndex(),a=e.getAttribute("position"),l=o?o.count:a.count,c=[0,0,0],d=["a","b","c"],u=new Array(3),f={},h=[];for(let p=0;p<l;p+=3){o?(c[0]=o.getX(p),c[1]=o.getX(p+1),c[2]=o.getX(p+2)):(c[0]=p,c[1]=p+1,c[2]=p+2);const{a:x,b:m,c:v}=Sl;if(x.fromBufferAttribute(a,c[0]),m.fromBufferAttribute(a,c[1]),v.fromBufferAttribute(a,c[2]),Sl.getNormal(zh),u[0]=`${Math.round(x.x*r)},${Math.round(x.y*r)},${Math.round(x.z*r)}`,u[1]=`${Math.round(m.x*r)},${Math.round(m.y*r)},${Math.round(m.z*r)}`,u[2]=`${Math.round(v.x*r)},${Math.round(v.y*r)},${Math.round(v.z*r)}`,!(u[0]===u[1]||u[1]===u[2]||u[2]===u[0]))for(let g=0;g<3;g++){const w=(g+1)%3,y=u[g],M=u[w],b=Sl[d[g]],_=Sl[d[w]],S=`${y}_${M}`,E=`${M}_${y}`;E in f&&f[E]?(zh.dot(f[E].normal)<=s&&(h.push(b.x,b.y,b.z),h.push(_.x,_.y,_.z)),f[E]=null):S in f||(f[S]={index0:c[g],index1:c[w],normal:zh.clone()})}}for(const p in f)if(f[p]){const{index0:x,index1:m}=f[p];wl.fromBufferAttribute(a,x),Ml.fromBufferAttribute(a,m),h.push(wl.x,wl.y,wl.z),h.push(Ml.x,Ml.y,Ml.z)}this.setAttribute("position",new ke(h,3))}}const dT={triangulate:function(n,e,t){t=t||2;const i=e&&e.length,r=i?e[0]*t:n.length;let s=Ry(n,0,r,t,!0);const o=[];if(!s||s.next===s.prev)return o;let a,l,c,d,u,f,h;if(i&&(s=mT(n,e,s,t)),n.length>80*t){a=c=n[0],l=d=n[1];for(let p=t;p<r;p+=t)u=n[p],f=n[p+1],u<a&&(a=u),f<l&&(l=f),u>c&&(c=u),f>d&&(d=f);h=Math.max(c-a,d-l),h=h!==0?1/h:0}return Qa(s,o,t,a,l,h),o}};function Ry(n,e,t,i,r){let s,o;if(r===TT(n,e,t,i)>0)for(s=e;s<t;s+=i)o=P1(s,n[s],n[s+1],o);else for(s=t-i;s>=e;s-=i)o=P1(s,n[s],n[s+1],o);return o&&Wd(o,o.next)&&(tc(o),o=o.next),o}function br(n,e){if(!n)return n;e||(e=n);let t=n,i;do if(i=!1,!t.steiner&&(Wd(t,t.next)||Mt(t.prev,t,t.next)===0)){if(tc(t),t=e=t.prev,t===t.next)break;i=!0}else t=t.next;while(i||t!==e);return e}function Qa(n,e,t,i,r,s,o){if(!n)return;!o&&s&&bT(n,i,r,s);let a=n,l,c;for(;n.prev!==n.next;){if(l=n.prev,c=n.next,s?fT(n,i,r,s):uT(n)){e.push(l.i/t),e.push(n.i/t),e.push(c.i/t),tc(n),n=c.next,a=c.next;continue}if(n=c,n===a){o?o===1?(n=hT(br(n),e,t),Qa(n,e,t,i,r,s,2)):o===2&&pT(n,e,t,i,r,s):Qa(br(n),e,t,i,r,s,1);break}}}function uT(n){const e=n.prev,t=n,i=n.next;if(Mt(e,t,i)>=0)return!1;let r=n.next.next;for(;r!==n.prev;){if(xo(e.x,e.y,t.x,t.y,i.x,i.y,r.x,r.y)&&Mt(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function fT(n,e,t,i){const r=n.prev,s=n,o=n.next;if(Mt(r,s,o)>=0)return!1;const a=r.x<s.x?r.x<o.x?r.x:o.x:s.x<o.x?s.x:o.x,l=r.y<s.y?r.y<o.y?r.y:o.y:s.y<o.y?s.y:o.y,c=r.x>s.x?r.x>o.x?r.x:o.x:s.x>o.x?s.x:o.x,d=r.y>s.y?r.y>o.y?r.y:o.y:s.y>o.y?s.y:o.y,u=T0(a,l,e,t,i),f=T0(c,d,e,t,i);let h=n.prevZ,p=n.nextZ;for(;h&&h.z>=u&&p&&p.z<=f;){if(h!==n.prev&&h!==n.next&&xo(r.x,r.y,s.x,s.y,o.x,o.y,h.x,h.y)&&Mt(h.prev,h,h.next)>=0||(h=h.prevZ,p!==n.prev&&p!==n.next&&xo(r.x,r.y,s.x,s.y,o.x,o.y,p.x,p.y)&&Mt(p.prev,p,p.next)>=0))return!1;p=p.nextZ}for(;h&&h.z>=u;){if(h!==n.prev&&h!==n.next&&xo(r.x,r.y,s.x,s.y,o.x,o.y,h.x,h.y)&&Mt(h.prev,h,h.next)>=0)return!1;h=h.prevZ}for(;p&&p.z<=f;){if(p!==n.prev&&p!==n.next&&xo(r.x,r.y,s.x,s.y,o.x,o.y,p.x,p.y)&&Mt(p.prev,p,p.next)>=0)return!1;p=p.nextZ}return!0}function hT(n,e,t){let i=n;do{const r=i.prev,s=i.next.next;!Wd(r,s)&&Py(r,i,i.next,s)&&ec(r,s)&&ec(s,r)&&(e.push(r.i/t),e.push(i.i/t),e.push(s.i/t),tc(i),tc(i.next),i=n=s),i=i.next}while(i!==n);return br(i)}function pT(n,e,t,i,r,s){let o=n;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&MT(o,a)){let l=Iy(o,a);o=br(o,o.next),l=br(l,l.next),Qa(o,e,t,i,r,s),Qa(l,e,t,i,r,s);return}a=a.next}o=o.next}while(o!==n)}function mT(n,e,t,i){const r=[];let s,o,a,l,c;for(s=0,o=e.length;s<o;s++)a=e[s]*i,l=s<o-1?e[s+1]*i:n.length,c=Ry(n,a,l,i,!1),c===c.next&&(c.steiner=!0),r.push(wT(c));for(r.sort(xT),s=0;s<r.length;s++)gT(r[s],t),t=br(t,t.next);return t}function xT(n,e){return n.x-e.x}function gT(n,e){if(e=vT(n,e),e){const t=Iy(e,n);br(e,e.next),br(t,t.next)}}function vT(n,e){let t=e;const i=n.x,r=n.y;let s=-1/0,o;do{if(r<=t.y&&r>=t.next.y&&t.next.y!==t.y){const f=t.x+(r-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(f<=i&&f>s){if(s=f,f===i){if(r===t.y)return t;if(r===t.next.y)return t.next}o=t.x<t.next.x?t:t.next}}t=t.next}while(t!==e);if(!o)return null;if(i===s)return o;const a=o,l=o.x,c=o.y;let d=1/0,u;t=o;do i>=t.x&&t.x>=l&&i!==t.x&&xo(r<c?i:s,r,l,c,r<c?s:i,r,t.x,t.y)&&(u=Math.abs(r-t.y)/(i-t.x),ec(t,n)&&(u<d||u===d&&(t.x>o.x||t.x===o.x&&yT(o,t)))&&(o=t,d=u)),t=t.next;while(t!==a);return o}function yT(n,e){return Mt(n.prev,n,e.prev)<0&&Mt(e.next,n,n.next)<0}function bT(n,e,t,i){let r=n;do r.z===null&&(r.z=T0(r.x,r.y,e,t,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==n);r.prevZ.nextZ=null,r.prevZ=null,_T(r)}function _T(n){let e,t,i,r,s,o,a,l,c=1;do{for(t=n,n=null,s=null,o=0;t;){for(o++,i=t,a=0,e=0;e<c&&(a++,i=i.nextZ,!!i);e++);for(l=c;a>0||l>0&&i;)a!==0&&(l===0||!i||t.z<=i.z)?(r=t,t=t.nextZ,a--):(r=i,i=i.nextZ,l--),s?s.nextZ=r:n=r,r.prevZ=s,s=r;t=i}s.nextZ=null,c*=2}while(o>1);return n}function T0(n,e,t,i,r){return n=32767*(n-t)*r,e=32767*(e-i)*r,n=(n|n<<8)&16711935,n=(n|n<<4)&252645135,n=(n|n<<2)&858993459,n=(n|n<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,n|e<<1}function wT(n){let e=n,t=n;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==n);return t}function xo(n,e,t,i,r,s,o,a){return(r-o)*(e-a)-(n-o)*(s-a)>=0&&(n-o)*(i-a)-(t-o)*(e-a)>=0&&(t-o)*(s-a)-(r-o)*(i-a)>=0}function MT(n,e){return n.next.i!==e.i&&n.prev.i!==e.i&&!ST(n,e)&&(ec(n,e)&&ec(e,n)&&ET(n,e)&&(Mt(n.prev,n,e.prev)||Mt(n,e.prev,e))||Wd(n,e)&&Mt(n.prev,n,n.next)>0&&Mt(e.prev,e,e.next)>0)}function Mt(n,e,t){return(e.y-n.y)*(t.x-e.x)-(e.x-n.x)*(t.y-e.y)}function Wd(n,e){return n.x===e.x&&n.y===e.y}function Py(n,e,t,i){const r=Tl(Mt(n,e,t)),s=Tl(Mt(n,e,i)),o=Tl(Mt(t,i,n)),a=Tl(Mt(t,i,e));return!!(r!==s&&o!==a||r===0&&El(n,t,e)||s===0&&El(n,i,e)||o===0&&El(t,n,i)||a===0&&El(t,e,i))}function El(n,e,t){return e.x<=Math.max(n.x,t.x)&&e.x>=Math.min(n.x,t.x)&&e.y<=Math.max(n.y,t.y)&&e.y>=Math.min(n.y,t.y)}function Tl(n){return n>0?1:n<0?-1:0}function ST(n,e){let t=n;do{if(t.i!==n.i&&t.next.i!==n.i&&t.i!==e.i&&t.next.i!==e.i&&Py(t,t.next,n,e))return!0;t=t.next}while(t!==n);return!1}function ec(n,e){return Mt(n.prev,n,n.next)<0?Mt(n,e,n.next)>=0&&Mt(n,n.prev,e)>=0:Mt(n,e,n.prev)<0||Mt(n,n.next,e)<0}function ET(n,e){let t=n,i=!1;const r=(n.x+e.x)/2,s=(n.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&r<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(i=!i),t=t.next;while(t!==n);return i}function Iy(n,e){const t=new A0(n.i,n.x,n.y),i=new A0(e.i,e.x,e.y),r=n.next,s=e.prev;return n.next=e,e.prev=n,t.next=r,r.prev=t,i.next=t,t.prev=i,s.next=i,i.prev=s,i}function P1(n,e,t,i){const r=new A0(n,e,t);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function tc(n){n.next.prev=n.prev,n.prev.next=n.next,n.prevZ&&(n.prevZ.nextZ=n.nextZ),n.nextZ&&(n.nextZ.prevZ=n.prevZ)}function A0(n,e,t){this.i=n,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function TT(n,e,t,i){let r=0;for(let s=e,o=t-i;s<t;s+=i)r+=(n[o]-n[s])*(n[s+1]+n[o+1]),o=s;return r}const zi={area:function(n){const e=n.length;let t=0;for(let i=e-1,r=0;r<e;i=r++)t+=n[i].x*n[r].y-n[r].x*n[i].y;return t*.5},isClockWise:function(n){return zi.area(n)<0},triangulateShape:function(n,e){const t=[],i=[],r=[];I1(n),D1(t,n);let s=n.length;e.forEach(I1);for(let a=0;a<e.length;a++)i.push(s),s+=e[a].length,D1(t,e[a]);const o=dT.triangulate(t,i);for(let a=0;a<o.length;a+=3)r.push(o.slice(a,a+3));return r}};function I1(n){const e=n.length;e>2&&n[e-1].equals(n[0])&&n.pop()}function D1(n,e){for(let t=0;t<e.length;t++)n.push(e[t].x),n.push(e[t].y)}class hs extends Xe{constructor(e,t){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const i=this,r=[],s=[];for(let a=0,l=e.length;a<l;a++){const c=e[a];o(c)}this.setAttribute("position",new ke(r,3)),this.setAttribute("uv",new ke(s,2)),this.computeVertexNormals();function o(a){const l=[],c=t.curveSegments!==void 0?t.curveSegments:12,d=t.steps!==void 0?t.steps:1;let u=t.depth!==void 0?t.depth:100,f=t.bevelEnabled!==void 0?t.bevelEnabled:!0,h=t.bevelThickness!==void 0?t.bevelThickness:6,p=t.bevelSize!==void 0?t.bevelSize:h-2,x=t.bevelOffset!==void 0?t.bevelOffset:0,m=t.bevelSegments!==void 0?t.bevelSegments:3;const v=t.extrudePath,g=t.UVGenerator!==void 0?t.UVGenerator:AT;t.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),u=t.amount);let w,y=!1,M,b,_,S;v&&(w=v.getSpacedPoints(d),y=!0,f=!1,M=v.computeFrenetFrames(d,!1),b=new q,_=new q,S=new q),f||(m=0,h=0,p=0,x=0);const E=a.extractPoints(c);let R=E.shape;const I=E.holes;if(!zi.isClockWise(R)){R=R.reverse();for(let fe=0,pe=I.length;fe<pe;fe++){const Te=I[fe];zi.isClockWise(Te)&&(I[fe]=Te.reverse())}}const W=zi.triangulateShape(R,I),L=R;for(let fe=0,pe=I.length;fe<pe;fe++){const Te=I[fe];R=R.concat(Te)}function z(fe,pe,Te){return pe||console.error("THREE.ExtrudeGeometry: vec does not exist"),pe.clone().multiplyScalar(Te).add(fe)}const U=R.length,X=W.length;function K(fe,pe,Te){let ze,Ce,O;const D=fe.x-pe.x,me=fe.y-pe.y,ye=Te.x-fe.x,Z=Te.y-fe.y,C=D*D+me*me,A=D*Z-me*ye;if(Math.abs(A)>Number.EPSILON){const ie=Math.sqrt(C),se=Math.sqrt(ye*ye+Z*Z),le=pe.x-me/ie,xe=pe.y+D/ie,Re=Te.x-Z/se,ne=Te.y+ye/se,we=((Re-le)*Z-(ne-xe)*ye)/(D*Z-me*ye);ze=le+D*we-fe.x,Ce=xe+me*we-fe.y;const Le=ze*ze+Ce*Ce;if(Le<=2)return new Ee(ze,Ce);O=Math.sqrt(Le/2)}else{let ie=!1;D>Number.EPSILON?ye>Number.EPSILON&&(ie=!0):D<-Number.EPSILON?ye<-Number.EPSILON&&(ie=!0):Math.sign(me)===Math.sign(Z)&&(ie=!0),ie?(ze=-me,Ce=D,O=Math.sqrt(C)):(ze=D,Ce=me,O=Math.sqrt(C/2))}return new Ee(ze/O,Ce/O)}const j=[];for(let fe=0,pe=L.length,Te=pe-1,ze=fe+1;fe<pe;fe++,Te++,ze++)Te===pe&&(Te=0),ze===pe&&(ze=0),j[fe]=K(L[fe],L[Te],L[ze]);const ee=[];let P,H=j.concat();for(let fe=0,pe=I.length;fe<pe;fe++){const Te=I[fe];P=[];for(let ze=0,Ce=Te.length,O=Ce-1,D=ze+1;ze<Ce;ze++,O++,D++)O===Ce&&(O=0),D===Ce&&(D=0),P[ze]=K(Te[ze],Te[O],Te[D]);ee.push(P),H=H.concat(P)}for(let fe=0;fe<m;fe++){const pe=fe/m,Te=h*Math.cos(pe*Math.PI/2),ze=p*Math.sin(pe*Math.PI/2)+x;for(let Ce=0,O=L.length;Ce<O;Ce++){const D=z(L[Ce],j[Ce],ze);Se(D.x,D.y,-Te)}for(let Ce=0,O=I.length;Ce<O;Ce++){const D=I[Ce];P=ee[Ce];for(let me=0,ye=D.length;me<ye;me++){const Z=z(D[me],P[me],ze);Se(Z.x,Z.y,-Te)}}}const Y=p+x;for(let fe=0;fe<U;fe++){const pe=f?z(R[fe],H[fe],Y):R[fe];y?(_.copy(M.normals[0]).multiplyScalar(pe.x),b.copy(M.binormals[0]).multiplyScalar(pe.y),S.copy(w[0]).add(_).add(b),Se(S.x,S.y,S.z)):Se(pe.x,pe.y,0)}for(let fe=1;fe<=d;fe++)for(let pe=0;pe<U;pe++){const Te=f?z(R[pe],H[pe],Y):R[pe];y?(_.copy(M.normals[fe]).multiplyScalar(Te.x),b.copy(M.binormals[fe]).multiplyScalar(Te.y),S.copy(w[fe]).add(_).add(b),Se(S.x,S.y,S.z)):Se(Te.x,Te.y,u/d*fe)}for(let fe=m-1;fe>=0;fe--){const pe=fe/m,Te=h*Math.cos(pe*Math.PI/2),ze=p*Math.sin(pe*Math.PI/2)+x;for(let Ce=0,O=L.length;Ce<O;Ce++){const D=z(L[Ce],j[Ce],ze);Se(D.x,D.y,u+Te)}for(let Ce=0,O=I.length;Ce<O;Ce++){const D=I[Ce];P=ee[Ce];for(let me=0,ye=D.length;me<ye;me++){const Z=z(D[me],P[me],ze);y?Se(Z.x,Z.y+w[d-1].y,w[d-1].x+Te):Se(Z.x,Z.y,u+Te)}}}Q(),F();function Q(){const fe=r.length/3;if(f){let pe=0,Te=U*pe;for(let ze=0;ze<X;ze++){const Ce=W[ze];Me(Ce[2]+Te,Ce[1]+Te,Ce[0]+Te)}pe=d+m*2,Te=U*pe;for(let ze=0;ze<X;ze++){const Ce=W[ze];Me(Ce[0]+Te,Ce[1]+Te,Ce[2]+Te)}}else{for(let pe=0;pe<X;pe++){const Te=W[pe];Me(Te[2],Te[1],Te[0])}for(let pe=0;pe<X;pe++){const Te=W[pe];Me(Te[0]+U*d,Te[1]+U*d,Te[2]+U*d)}}i.addGroup(fe,r.length/3-fe,0)}function F(){const fe=r.length/3;let pe=0;oe(L,pe),pe+=L.length;for(let Te=0,ze=I.length;Te<ze;Te++){const Ce=I[Te];oe(Ce,pe),pe+=Ce.length}i.addGroup(fe,r.length/3-fe,1)}function oe(fe,pe){let Te=fe.length;for(;--Te>=0;){const ze=Te;let Ce=Te-1;Ce<0&&(Ce=fe.length-1);for(let O=0,D=d+m*2;O<D;O++){const me=U*O,ye=U*(O+1),Z=pe+ze+me,C=pe+Ce+me,A=pe+Ce+ye,ie=pe+ze+ye;be(Z,C,A,ie)}}}function Se(fe,pe,Te){l.push(fe),l.push(pe),l.push(Te)}function Me(fe,pe,Te){_e(fe),_e(pe),_e(Te);const ze=r.length/3,Ce=g.generateTopUV(i,r,ze-3,ze-2,ze-1);Ie(Ce[0]),Ie(Ce[1]),Ie(Ce[2])}function be(fe,pe,Te,ze){_e(fe),_e(pe),_e(ze),_e(pe),_e(Te),_e(ze);const Ce=r.length/3,O=g.generateSideWallUV(i,r,Ce-6,Ce-3,Ce-2,Ce-1);Ie(O[0]),Ie(O[1]),Ie(O[3]),Ie(O[1]),Ie(O[2]),Ie(O[3])}function _e(fe){r.push(l[fe*3+0]),r.push(l[fe*3+1]),r.push(l[fe*3+2])}function Ie(fe){s.push(fe.x),s.push(fe.y)}}}toJSON(){const e=Xe.prototype.toJSON.call(this),t=this.parameters.shapes,i=this.parameters.options;return LT(t,i,e)}}const AT={generateTopUV:function(n,e,t,i,r){const s=e[t*3],o=e[t*3+1],a=e[i*3],l=e[i*3+1],c=e[r*3],d=e[r*3+1];return[new Ee(s,o),new Ee(a,l),new Ee(c,d)]},generateSideWallUV:function(n,e,t,i,r,s){const o=e[t*3],a=e[t*3+1],l=e[t*3+2],c=e[i*3],d=e[i*3+1],u=e[i*3+2],f=e[r*3],h=e[r*3+1],p=e[r*3+2],x=e[s*3],m=e[s*3+1],v=e[s*3+2];return Math.abs(a-d)<.01?[new Ee(o,1-l),new Ee(c,1-u),new Ee(f,1-p),new Ee(x,1-v)]:[new Ee(a,1-l),new Ee(d,1-u),new Ee(h,1-p),new Ee(m,1-v)]}};function LT(n,e,t){if(t.shapes=[],Array.isArray(n))for(let i=0,r=n.length;i<r;i++){const s=n[i];t.shapes.push(s.uuid)}else t.shapes.push(n.uuid);return e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class id extends yr{constructor(e=1,t=0){const i=(1+Math.sqrt(5))/2,r=[-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(r,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}}class rd extends Xe{constructor(e,t=12,i=0,r=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:i,phiLength:r},t=Math.floor(t),r=Ke.clamp(r,0,Math.PI*2);const s=[],o=[],a=[],l=1/t,c=new q,d=new Ee;for(let u=0;u<=t;u++){const f=i+u*l*r,h=Math.sin(f),p=Math.cos(f);for(let x=0;x<=e.length-1;x++)c.x=e[x].x*h,c.y=e[x].y,c.z=e[x].x*p,o.push(c.x,c.y,c.z),d.x=u/t,d.y=x/(e.length-1),a.push(d.x,d.y)}for(let u=0;u<t;u++)for(let f=0;f<e.length-1;f++){const h=f+u*e.length,p=h,x=h+e.length,m=h+e.length+1,v=h+1;s.push(p,x,v),s.push(x,m,v)}if(this.setIndex(s),this.setAttribute("position",new ke(o,3)),this.setAttribute("uv",new ke(a,2)),this.computeVertexNormals(),r===Math.PI*2){const u=this.attributes.normal.array,f=new q,h=new q,p=new q,x=t*e.length*3;for(let m=0,v=0;m<e.length;m++,v+=3)f.x=u[v+0],f.y=u[v+1],f.z=u[v+2],h.x=u[x+v+0],h.y=u[x+v+1],h.z=u[x+v+2],p.addVectors(f,h).normalize(),u[v+0]=u[x+v+0]=p.x,u[v+1]=u[x+v+1]=p.y,u[v+2]=u[x+v+2]=p.z}}}class nc extends yr{constructor(e=1,t=0){const i=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],r=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(i,r,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}}function ps(n,e,t){Xe.call(this),this.type="ParametricGeometry",this.parameters={func:n,slices:e,stacks:t};const i=[],r=[],s=[],o=[],a=1e-5,l=new q,c=new q,d=new q,u=new q,f=new q;n.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const h=e+1;for(let p=0;p<=t;p++){const x=p/t;for(let m=0;m<=e;m++){const v=m/e;n(v,x,c),r.push(c.x,c.y,c.z),v-a>=0?(n(v-a,x,d),u.subVectors(c,d)):(n(v+a,x,d),u.subVectors(d,c)),x-a>=0?(n(v,x-a,d),f.subVectors(c,d)):(n(v,x+a,d),f.subVectors(d,c)),l.crossVectors(u,f).normalize(),s.push(l.x,l.y,l.z),o.push(v,x)}}for(let p=0;p<t;p++)for(let x=0;x<e;x++){const m=p*h+x,v=p*h+x+1,g=(p+1)*h+x+1,w=(p+1)*h+x;i.push(m,v,w),i.push(v,g,w)}this.setIndex(i),this.setAttribute("position",new ke(r,3)),this.setAttribute("normal",new ke(s,3)),this.setAttribute("uv",new ke(o,2))}ps.prototype=Object.create(Xe.prototype);ps.prototype.constructor=ps;class sd extends Xe{constructor(e=.5,t=1,i=8,r=1,s=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:i,phiSegments:r,thetaStart:s,thetaLength:o},i=Math.max(3,i),r=Math.max(1,r);const a=[],l=[],c=[],d=[];let u=e;const f=(t-e)/r,h=new q,p=new Ee;for(let x=0;x<=r;x++){for(let m=0;m<=i;m++){const v=s+m/i*o;h.x=u*Math.cos(v),h.y=u*Math.sin(v),l.push(h.x,h.y,h.z),c.push(0,0,1),p.x=(h.x/t+1)/2,p.y=(h.y/t+1)/2,d.push(p.x,p.y)}u+=f}for(let x=0;x<r;x++){const m=x*(i+1);for(let v=0;v<i;v++){const g=v+m,w=g,y=g+i+1,M=g+i+2,b=g+1;a.push(w,y,b),a.push(y,M,b)}}this.setIndex(a),this.setAttribute("position",new ke(l,3)),this.setAttribute("normal",new ke(c,3)),this.setAttribute("uv",new ke(d,2))}}class ic extends Xe{constructor(e,t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const i=[],r=[],s=[],o=[];let a=0,l=0;if(Array.isArray(e)===!1)c(e);else for(let d=0;d<e.length;d++)c(e[d]),this.addGroup(a,l,d),a+=l,l=0;this.setIndex(i),this.setAttribute("position",new ke(r,3)),this.setAttribute("normal",new ke(s,3)),this.setAttribute("uv",new ke(o,2));function c(d){const u=r.length/3,f=d.extractPoints(t);let h=f.shape;const p=f.holes;zi.isClockWise(h)===!1&&(h=h.reverse());for(let m=0,v=p.length;m<v;m++){const g=p[m];zi.isClockWise(g)===!0&&(p[m]=g.reverse())}const x=zi.triangulateShape(h,p);for(let m=0,v=p.length;m<v;m++){const g=p[m];h=h.concat(g)}for(let m=0,v=h.length;m<v;m++){const g=h[m];r.push(g.x,g.y,0),s.push(0,0,1),o.push(g.x,g.y)}for(let m=0,v=x.length;m<v;m++){const g=x[m],w=g[0]+u,y=g[1]+u,M=g[2]+u;i.push(w,y,M),l+=3}}}toJSON(){const e=Xe.prototype.toJSON.call(this),t=this.parameters.shapes;return CT(t,e)}}function CT(n,e){if(e.shapes=[],Array.isArray(n))for(let t=0,i=n.length;t<i;t++){const r=n[t];e.shapes.push(r.uuid)}else e.shapes.push(n.uuid);return e}class rc extends Xe{constructor(e=1,t=8,i=6,r=0,s=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:i,phiStart:r,phiLength:s,thetaStart:o,thetaLength:a},t=Math.max(3,Math.floor(t)),i=Math.max(2,Math.floor(i));const l=Math.min(o+a,Math.PI);let c=0;const d=[],u=new q,f=new q,h=[],p=[],x=[],m=[];for(let v=0;v<=i;v++){const g=[],w=v/i;let y=0;v==0&&o==0?y=.5/t:v==i&&l==Math.PI&&(y=-.5/t);for(let M=0;M<=t;M++){const b=M/t;u.x=-e*Math.cos(r+b*s)*Math.sin(o+w*a),u.y=e*Math.cos(o+w*a),u.z=e*Math.sin(r+b*s)*Math.sin(o+w*a),p.push(u.x,u.y,u.z),f.copy(u).normalize(),x.push(f.x,f.y,f.z),m.push(b+y,1-w),g.push(c++)}d.push(g)}for(let v=0;v<i;v++)for(let g=0;g<t;g++){const w=d[v][g+1],y=d[v][g],M=d[v+1][g],b=d[v+1][g+1];(v!==0||o>0)&&h.push(w,y,b),(v!==i-1||l<Math.PI)&&h.push(y,M,b)}this.setIndex(h),this.setAttribute("position",new ke(p,3)),this.setAttribute("normal",new ke(x,3)),this.setAttribute("uv",new ke(m,2))}}class od extends yr{constructor(e=1,t=0){const i=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],r=[2,1,0,0,3,2,1,3,0,2,3,1];super(i,r,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}}class ad extends hs{constructor(e,t={}){const i=t.font;if(!(i&&i.isFont))return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new Xe;const r=i.generateShapes(e,t.size);t.depth=t.height!==void 0?t.height:50,t.bevelThickness===void 0&&(t.bevelThickness=10),t.bevelSize===void 0&&(t.bevelSize=8),t.bevelEnabled===void 0&&(t.bevelEnabled=!1),super(r,t),this.type="TextGeometry"}}class cd extends Xe{constructor(e=1,t=.4,i=8,r=6,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:i,tubularSegments:r,arc:s},i=Math.floor(i),r=Math.floor(r);const o=[],a=[],l=[],c=[],d=new q,u=new q,f=new q;for(let h=0;h<=i;h++)for(let p=0;p<=r;p++){const x=p/r*s,m=h/i*Math.PI*2;u.x=(e+t*Math.cos(m))*Math.cos(x),u.y=(e+t*Math.cos(m))*Math.sin(x),u.z=t*Math.sin(m),a.push(u.x,u.y,u.z),d.x=e*Math.cos(x),d.y=e*Math.sin(x),f.subVectors(u,d).normalize(),l.push(f.x,f.y,f.z),c.push(p/r),c.push(h/i)}for(let h=1;h<=i;h++)for(let p=1;p<=r;p++){const x=(r+1)*h+p-1,m=(r+1)*(h-1)+p-1,v=(r+1)*(h-1)+p,g=(r+1)*h+p;o.push(x,m,g),o.push(m,v,g)}this.setIndex(o),this.setAttribute("position",new ke(a,3)),this.setAttribute("normal",new ke(l,3)),this.setAttribute("uv",new ke(c,2))}}class ld extends Xe{constructor(e=1,t=.4,i=64,r=8,s=2,o=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:i,radialSegments:r,p:s,q:o},i=Math.floor(i),r=Math.floor(r);const a=[],l=[],c=[],d=[],u=new q,f=new q,h=new q,p=new q,x=new q,m=new q,v=new q;for(let w=0;w<=i;++w){const y=w/i*s*Math.PI*2;g(y,s,o,e,h),g(y+.01,s,o,e,p),m.subVectors(p,h),v.addVectors(p,h),x.crossVectors(m,v),v.crossVectors(x,m),x.normalize(),v.normalize();for(let M=0;M<=r;++M){const b=M/r*Math.PI*2,_=-t*Math.cos(b),S=t*Math.sin(b);u.x=h.x+(_*v.x+S*x.x),u.y=h.y+(_*v.y+S*x.y),u.z=h.z+(_*v.z+S*x.z),l.push(u.x,u.y,u.z),f.subVectors(u,h).normalize(),c.push(f.x,f.y,f.z),d.push(w/i),d.push(M/r)}}for(let w=1;w<=i;w++)for(let y=1;y<=r;y++){const M=(r+1)*(w-1)+(y-1),b=(r+1)*w+(y-1),_=(r+1)*w+y,S=(r+1)*(w-1)+y;a.push(M,b,S),a.push(b,_,S)}this.setIndex(a),this.setAttribute("position",new ke(l,3)),this.setAttribute("normal",new ke(c,3)),this.setAttribute("uv",new ke(d,2));function g(w,y,M,b,_){const S=Math.cos(w),E=Math.sin(w),R=M/y*w,I=Math.cos(R);_.x=b*(2+I)*.5*S,_.y=b*(2+I)*E*.5,_.z=b*Math.sin(R)*.5}}}class dd extends Xe{constructor(e,t=64,i=1,r=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:i,radialSegments:r,closed:s};const o=e.computeFrenetFrames(t,s);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const a=new q,l=new q,c=new Ee;let d=new q;const u=[],f=[],h=[],p=[];x(),this.setIndex(p),this.setAttribute("position",new ke(u,3)),this.setAttribute("normal",new ke(f,3)),this.setAttribute("uv",new ke(h,2));function x(){for(let w=0;w<t;w++)m(w);m(s===!1?t:0),g(),v()}function m(w){d=e.getPointAt(w/t,d);const y=o.normals[w],M=o.binormals[w];for(let b=0;b<=r;b++){const _=b/r*Math.PI*2,S=Math.sin(_),E=-Math.cos(_);l.x=E*y.x+S*M.x,l.y=E*y.y+S*M.y,l.z=E*y.z+S*M.z,l.normalize(),f.push(l.x,l.y,l.z),a.x=d.x+i*l.x,a.y=d.y+i*l.y,a.z=d.z+i*l.z,u.push(a.x,a.y,a.z)}}function v(){for(let w=1;w<=t;w++)for(let y=1;y<=r;y++){const M=(r+1)*(w-1)+(y-1),b=(r+1)*w+(y-1),_=(r+1)*w+y,S=(r+1)*(w-1)+y;p.push(M,b,S),p.push(b,_,S)}}function g(){for(let w=0;w<=t;w++)for(let y=0;y<=r;y++)c.x=w/t,c.y=y/r,h.push(c.x,c.y)}}toJSON(){const e=Xe.prototype.toJSON.call(this);return e.path=this.parameters.path.toJSON(),e}}class Tp extends Xe{constructor(e){if(super(),this.type="WireframeGeometry",e.isGeometry===!0){console.error("THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return}const t=[],i=[0,0],r={},s=new q;if(e.index!==null){const o=e.attributes.position,a=e.index;let l=e.groups;l.length===0&&(l=[{start:0,count:a.count,materialIndex:0}]);for(let c=0,d=l.length;c<d;++c){const u=l[c],f=u.start,h=u.count;for(let p=f,x=f+h;p<x;p+=3)for(let m=0;m<3;m++){const v=a.getX(p+m),g=a.getX(p+(m+1)%3);i[0]=Math.min(v,g),i[1]=Math.max(v,g);const w=i[0]+","+i[1];r[w]===void 0&&(r[w]={index1:i[0],index2:i[1]})}}for(const c in r){const d=r[c];s.fromBufferAttribute(o,d.index1),t.push(s.x,s.y,s.z),s.fromBufferAttribute(o,d.index2),t.push(s.x,s.y,s.z)}}else{const o=e.attributes.position;for(let a=0,l=o.count/3;a<l;a++)for(let c=0;c<3;c++){const d=3*a+c;s.fromBufferAttribute(o,d),t.push(s.x,s.y,s.z);const u=3*a+(c+1)%3;s.fromBufferAttribute(o,u),t.push(s.x,s.y,s.z)}}this.setAttribute("position",new ke(t,3))}}var Yt=Object.freeze({__proto__:null,BoxGeometry:us,BoxBufferGeometry:us,CircleGeometry:ed,CircleBufferGeometry:ed,ConeGeometry:td,ConeBufferGeometry:td,CylinderGeometry:Oo,CylinderBufferGeometry:Oo,DodecahedronGeometry:nd,DodecahedronBufferGeometry:nd,EdgesGeometry:Ep,ExtrudeGeometry:hs,ExtrudeBufferGeometry:hs,IcosahedronGeometry:id,IcosahedronBufferGeometry:id,LatheGeometry:rd,LatheBufferGeometry:rd,OctahedronGeometry:nc,OctahedronBufferGeometry:nc,ParametricGeometry:ps,ParametricBufferGeometry:ps,PlaneGeometry:Wa,PlaneBufferGeometry:Wa,PolyhedronGeometry:yr,PolyhedronBufferGeometry:yr,RingGeometry:sd,RingBufferGeometry:sd,ShapeGeometry:ic,ShapeBufferGeometry:ic,SphereGeometry:rc,SphereBufferGeometry:rc,TetrahedronGeometry:od,TetrahedronBufferGeometry:od,TextGeometry:ad,TextBufferGeometry:ad,TorusGeometry:cd,TorusBufferGeometry:cd,TorusKnotGeometry:ld,TorusKnotBufferGeometry:ld,TubeGeometry:dd,TubeBufferGeometry:dd,WireframeGeometry:Tp});function ms(n){Je.call(this),this.type="ShadowMaterial",this.color=new Ue(0),this.transparent=!0,this.setValues(n)}ms.prototype=Object.create(Je.prototype);ms.prototype.constructor=ms;ms.prototype.isShadowMaterial=!0;ms.prototype.copy=function(n){return Je.prototype.copy.call(this,n),this.color.copy(n.color),this};function Ni(n){en.call(this,n),this.type="RawShaderMaterial"}Ni.prototype=Object.create(en.prototype);Ni.prototype.constructor=Ni;Ni.prototype.isRawShaderMaterial=!0;function fi(n){Je.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Ue(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ue(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ts,this.normalScale=new Ee(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.vertexTangents=!1,this.setValues(n)}fi.prototype=Object.create(Je.prototype);fi.prototype.constructor=fi;fi.prototype.isMeshStandardMaterial=!0;fi.prototype.copy=function(n){return Je.prototype.copy.call(this,n),this.defines={STANDARD:""},this.color.copy(n.color),this.roughness=n.roughness,this.metalness=n.metalness,this.map=n.map,this.lightMap=n.lightMap,this.lightMapIntensity=n.lightMapIntensity,this.aoMap=n.aoMap,this.aoMapIntensity=n.aoMapIntensity,this.emissive.copy(n.emissive),this.emissiveMap=n.emissiveMap,this.emissiveIntensity=n.emissiveIntensity,this.bumpMap=n.bumpMap,this.bumpScale=n.bumpScale,this.normalMap=n.normalMap,this.normalMapType=n.normalMapType,this.normalScale.copy(n.normalScale),this.displacementMap=n.displacementMap,this.displacementScale=n.displacementScale,this.displacementBias=n.displacementBias,this.roughnessMap=n.roughnessMap,this.metalnessMap=n.metalnessMap,this.alphaMap=n.alphaMap,this.envMap=n.envMap,this.envMapIntensity=n.envMapIntensity,this.refractionRatio=n.refractionRatio,this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this.wireframeLinecap=n.wireframeLinecap,this.wireframeLinejoin=n.wireframeLinejoin,this.skinning=n.skinning,this.morphTargets=n.morphTargets,this.morphNormals=n.morphNormals,this.vertexTangents=n.vertexTangents,this};function _r(n){fi.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Ee(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(e){this.reflectivity=Ke.clamp(2.5*(e-1)/(e+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(n)}_r.prototype=Object.create(fi.prototype);_r.prototype.constructor=_r;_r.prototype.isMeshPhysicalMaterial=!0;_r.prototype.copy=function(n){return fi.prototype.copy.call(this,n),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=n.clearcoat,this.clearcoatMap=n.clearcoatMap,this.clearcoatRoughness=n.clearcoatRoughness,this.clearcoatRoughnessMap=n.clearcoatRoughnessMap,this.clearcoatNormalMap=n.clearcoatNormalMap,this.clearcoatNormalScale.copy(n.clearcoatNormalScale),this.reflectivity=n.reflectivity,n.sheen?this.sheen=(this.sheen||new Ue).copy(n.sheen):this.sheen=null,this.transmission=n.transmission,this.transmissionMap=n.transmissionMap,this};function wr(n){Je.call(this),this.type="MeshPhongMaterial",this.color=new Ue(16777215),this.specular=new Ue(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ue(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ts,this.normalScale=new Ee(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=yc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(n)}wr.prototype=Object.create(Je.prototype);wr.prototype.constructor=wr;wr.prototype.isMeshPhongMaterial=!0;wr.prototype.copy=function(n){return Je.prototype.copy.call(this,n),this.color.copy(n.color),this.specular.copy(n.specular),this.shininess=n.shininess,this.map=n.map,this.lightMap=n.lightMap,this.lightMapIntensity=n.lightMapIntensity,this.aoMap=n.aoMap,this.aoMapIntensity=n.aoMapIntensity,this.emissive.copy(n.emissive),this.emissiveMap=n.emissiveMap,this.emissiveIntensity=n.emissiveIntensity,this.bumpMap=n.bumpMap,this.bumpScale=n.bumpScale,this.normalMap=n.normalMap,this.normalMapType=n.normalMapType,this.normalScale.copy(n.normalScale),this.displacementMap=n.displacementMap,this.displacementScale=n.displacementScale,this.displacementBias=n.displacementBias,this.specularMap=n.specularMap,this.alphaMap=n.alphaMap,this.envMap=n.envMap,this.combine=n.combine,this.reflectivity=n.reflectivity,this.refractionRatio=n.refractionRatio,this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this.wireframeLinecap=n.wireframeLinecap,this.wireframeLinejoin=n.wireframeLinejoin,this.skinning=n.skinning,this.morphTargets=n.morphTargets,this.morphNormals=n.morphNormals,this};function xs(n){Je.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Ue(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ue(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ts,this.normalScale=new Ee(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(n)}xs.prototype=Object.create(Je.prototype);xs.prototype.constructor=xs;xs.prototype.isMeshToonMaterial=!0;xs.prototype.copy=function(n){return Je.prototype.copy.call(this,n),this.color.copy(n.color),this.map=n.map,this.gradientMap=n.gradientMap,this.lightMap=n.lightMap,this.lightMapIntensity=n.lightMapIntensity,this.aoMap=n.aoMap,this.aoMapIntensity=n.aoMapIntensity,this.emissive.copy(n.emissive),this.emissiveMap=n.emissiveMap,this.emissiveIntensity=n.emissiveIntensity,this.bumpMap=n.bumpMap,this.bumpScale=n.bumpScale,this.normalMap=n.normalMap,this.normalMapType=n.normalMapType,this.normalScale.copy(n.normalScale),this.displacementMap=n.displacementMap,this.displacementScale=n.displacementScale,this.displacementBias=n.displacementBias,this.alphaMap=n.alphaMap,this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this.wireframeLinecap=n.wireframeLinecap,this.wireframeLinejoin=n.wireframeLinejoin,this.skinning=n.skinning,this.morphTargets=n.morphTargets,this.morphNormals=n.morphNormals,this};function gs(n){Je.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ts,this.normalScale=new Ee(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(n)}gs.prototype=Object.create(Je.prototype);gs.prototype.constructor=gs;gs.prototype.isMeshNormalMaterial=!0;gs.prototype.copy=function(n){return Je.prototype.copy.call(this,n),this.bumpMap=n.bumpMap,this.bumpScale=n.bumpScale,this.normalMap=n.normalMap,this.normalMapType=n.normalMapType,this.normalScale.copy(n.normalScale),this.displacementMap=n.displacementMap,this.displacementScale=n.displacementScale,this.displacementBias=n.displacementBias,this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this.skinning=n.skinning,this.morphTargets=n.morphTargets,this.morphNormals=n.morphNormals,this};function vs(n){Je.call(this),this.type="MeshLambertMaterial",this.color=new Ue(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ue(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=yc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(n)}vs.prototype=Object.create(Je.prototype);vs.prototype.constructor=vs;vs.prototype.isMeshLambertMaterial=!0;vs.prototype.copy=function(n){return Je.prototype.copy.call(this,n),this.color.copy(n.color),this.map=n.map,this.lightMap=n.lightMap,this.lightMapIntensity=n.lightMapIntensity,this.aoMap=n.aoMap,this.aoMapIntensity=n.aoMapIntensity,this.emissive.copy(n.emissive),this.emissiveMap=n.emissiveMap,this.emissiveIntensity=n.emissiveIntensity,this.specularMap=n.specularMap,this.alphaMap=n.alphaMap,this.envMap=n.envMap,this.combine=n.combine,this.reflectivity=n.reflectivity,this.refractionRatio=n.refractionRatio,this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this.wireframeLinecap=n.wireframeLinecap,this.wireframeLinejoin=n.wireframeLinejoin,this.skinning=n.skinning,this.morphTargets=n.morphTargets,this.morphNormals=n.morphNormals,this};function ys(n){Je.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Ue(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ts,this.normalScale=new Ee(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(n)}ys.prototype=Object.create(Je.prototype);ys.prototype.constructor=ys;ys.prototype.isMeshMatcapMaterial=!0;ys.prototype.copy=function(n){return Je.prototype.copy.call(this,n),this.defines={MATCAP:""},this.color.copy(n.color),this.matcap=n.matcap,this.map=n.map,this.bumpMap=n.bumpMap,this.bumpScale=n.bumpScale,this.normalMap=n.normalMap,this.normalMapType=n.normalMapType,this.normalScale.copy(n.normalScale),this.displacementMap=n.displacementMap,this.displacementScale=n.displacementScale,this.displacementBias=n.displacementBias,this.alphaMap=n.alphaMap,this.skinning=n.skinning,this.morphTargets=n.morphTargets,this.morphNormals=n.morphNormals,this};function bs(n){wt.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(n)}bs.prototype=Object.create(wt.prototype);bs.prototype.constructor=bs;bs.prototype.isLineDashedMaterial=!0;bs.prototype.copy=function(n){return wt.prototype.copy.call(this,n),this.scale=n.scale,this.dashSize=n.dashSize,this.gapSize=n.gapSize,this};var RT=Object.freeze({__proto__:null,ShadowMaterial:ms,SpriteMaterial:vr,RawShaderMaterial:Ni,ShaderMaterial:en,PointsMaterial:$n,MeshPhysicalMaterial:_r,MeshStandardMaterial:fi,MeshPhongMaterial:wr,MeshToonMaterial:xs,MeshNormalMaterial:gs,MeshLambertMaterial:vs,MeshDepthMaterial:mr,MeshDistanceMaterial:xr,MeshBasicMaterial:wn,MeshMatcapMaterial:ys,LineDashedMaterial:bs,LineBasicMaterial:wt,Material:Je});const _t={arraySlice:function(n,e,t){return _t.isTypedArray(n)?new n.constructor(n.subarray(e,t!==void 0?t:n.length)):n.slice(e,t)},convertArray:function(n,e,t){return!n||!t&&n.constructor===e?n:typeof e.BYTES_PER_ELEMENT=="number"?new e(n):Array.prototype.slice.call(n)},isTypedArray:function(n){return ArrayBuffer.isView(n)&&!(n instanceof DataView)},getKeyframeOrder:function(n){function e(r,s){return n[r]-n[s]}const t=n.length,i=new Array(t);for(let r=0;r!==t;++r)i[r]=r;return i.sort(e),i},sortedArray:function(n,e,t){const i=n.length,r=new n.constructor(i);for(let s=0,o=0;o!==i;++s){const a=t[s]*e;for(let l=0;l!==e;++l)r[o++]=n[a+l]}return r},flattenJSON:function(n,e,t,i){let r=1,s=n[0];for(;s!==void 0&&s[i]===void 0;)s=n[r++];if(s===void 0)return;let o=s[i];if(o!==void 0)if(Array.isArray(o))do o=s[i],o!==void 0&&(e.push(s.time),t.push.apply(t,o)),s=n[r++];while(s!==void 0);else if(o.toArray!==void 0)do o=s[i],o!==void 0&&(e.push(s.time),o.toArray(t,t.length)),s=n[r++];while(s!==void 0);else do o=s[i],o!==void 0&&(e.push(s.time),t.push(o)),s=n[r++];while(s!==void 0)},subclip:function(n,e,t,i,r=30){const s=n.clone();s.name=e;const o=[];for(let l=0;l<s.tracks.length;++l){const c=s.tracks[l],d=c.getValueSize(),u=[],f=[];for(let h=0;h<c.times.length;++h){const p=c.times[h]*r;if(!(p<t||p>=i)){u.push(c.times[h]);for(let x=0;x<d;++x)f.push(c.values[h*d+x])}}u.length!==0&&(c.times=_t.convertArray(u,c.times.constructor),c.values=_t.convertArray(f,c.values.constructor),o.push(c))}s.tracks=o;let a=1/0;for(let l=0;l<s.tracks.length;++l)a>s.tracks[l].times[0]&&(a=s.tracks[l].times[0]);for(let l=0;l<s.tracks.length;++l)s.tracks[l].shift(-1*a);return s.resetDuration(),s},makeClipAdditive:function(n,e=0,t=n,i=30){i<=0&&(i=30);const r=t.tracks.length,s=e/i;for(let o=0;o<r;++o){const a=t.tracks[o],l=a.ValueTypeName;if(l==="bool"||l==="string")continue;const c=n.tracks.find(function(v){return v.name===a.name&&v.ValueTypeName===l});if(c===void 0)continue;let d=0;const u=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=u/3);let f=0;const h=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=h/3);const p=a.times.length-1;let x;if(s<=a.times[0]){const v=d,g=u-d;x=_t.arraySlice(a.values,v,g)}else if(s>=a.times[p]){const v=p*u+d,g=v+u-d;x=_t.arraySlice(a.values,v,g)}else{const v=a.createInterpolant(),g=d,w=u-d;v.evaluate(s),x=_t.arraySlice(v.resultBuffer,g,w)}l==="quaternion"&&new Vt().fromArray(x).normalize().conjugate().toArray(x);const m=c.times.length;for(let v=0;v<m;++v){const g=v*h+f;if(l==="quaternion")Vt.multiplyQuaternionsFlat(c.values,g,x,0,c.values,g);else{const w=h-f*2;for(let y=0;y<w;++y)c.values[g+y]-=x[y]}}}return n.blendMode=gp,n}};function _n(n,e,t,i){this.parameterPositions=n,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new e.constructor(t),this.sampleValues=e,this.valueSize=t}Object.assign(_n.prototype,{evaluate:function(n){const e=this.parameterPositions;let t=this._cachedIndex,i=e[t],r=e[t-1];e:{t:{let s;n:{i:if(!(n<i)){for(let o=t+2;;){if(i===void 0){if(n<r)break i;return t=e.length,this._cachedIndex=t,this.afterEnd_(t-1,n,r)}if(t===o)break;if(r=i,i=e[++t],n<i)break t}s=e.length;break n}if(!(n>=r)){const o=e[1];n<o&&(t=2,r=o);for(let a=t-2;;){if(r===void 0)return this._cachedIndex=0,this.beforeStart_(0,n,i);if(t===a)break;if(i=r,r=e[--t-1],n>=r)break t}s=t,t=0;break n}break e}for(;t<s;){const o=t+s>>>1;n<e[o]?s=o:t=o+1}if(i=e[t],r=e[t-1],r===void 0)return this._cachedIndex=0,this.beforeStart_(0,n,i);if(i===void 0)return t=e.length,this._cachedIndex=t,this.afterEnd_(t-1,r,n)}this._cachedIndex=t,this.intervalChanged_(t,r,i)}return this.interpolate_(t,r,n,i)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(n){const e=this.resultBuffer,t=this.sampleValues,i=this.valueSize,r=n*i;for(let s=0;s!==i;++s)e[s]=t[r+s];return e},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}});Object.assign(_n.prototype,{beforeStart_:_n.prototype.copySampleValue_,afterEnd_:_n.prototype.copySampleValue_});function ud(n,e,t,i){_n.call(this,n,e,t,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}ud.prototype=Object.assign(Object.create(_n.prototype),{constructor:ud,DefaultSettings_:{endingStart:Xr,endingEnd:Xr},intervalChanged_:function(n,e,t){const i=this.parameterPositions;let r=n-2,s=n+1,o=i[r],a=i[s];if(o===void 0)switch(this.getSettings_().endingStart){case Yr:r=n,o=2*e-t;break;case Fa:r=i.length-2,o=e+i[r]-i[r+1];break;default:r=n,o=t}if(a===void 0)switch(this.getSettings_().endingEnd){case Yr:s=n,a=2*t-e;break;case Fa:s=1,a=t+i[1]-i[0];break;default:s=n-1,a=e}const l=(t-e)*.5,c=this.valueSize;this._weightPrev=l/(e-o),this._weightNext=l/(a-t),this._offsetPrev=r*c,this._offsetNext=s*c},interpolate_:function(n,e,t,i){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=n*o,l=a-o,c=this._offsetPrev,d=this._offsetNext,u=this._weightPrev,f=this._weightNext,h=(t-e)/(i-e),p=h*h,x=p*h,m=-u*x+2*u*p-u*h,v=(1+u)*x+(-1.5-2*u)*p+(-.5+u)*h+1,g=(-1-f)*x+(1.5+f)*p+.5*h,w=f*x-f*p;for(let y=0;y!==o;++y)r[y]=m*s[c+y]+v*s[l+y]+g*s[a+y]+w*s[d+y];return r}});function sc(n,e,t,i){_n.call(this,n,e,t,i)}sc.prototype=Object.assign(Object.create(_n.prototype),{constructor:sc,interpolate_:function(n,e,t,i){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=n*o,l=a-o,c=(t-e)/(i-e),d=1-c;for(let u=0;u!==o;++u)r[u]=s[l+u]*d+s[a+u]*c;return r}});function fd(n,e,t,i){_n.call(this,n,e,t,i)}fd.prototype=Object.assign(Object.create(_n.prototype),{constructor:fd,interpolate_:function(n){return this.copySampleValue_(n-1)}});function Nt(n,e,t,i){if(n===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(e===void 0||e.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+n);this.name=n,this.times=_t.convertArray(e,this.TimeBufferType),this.values=_t.convertArray(t,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}Object.assign(Nt,{toJSON:function(n){const e=n.constructor;let t;if(e.toJSON!==void 0)t=e.toJSON(n);else{t={name:n.name,times:_t.convertArray(n.times,Array),values:_t.convertArray(n.values,Array)};const i=n.getInterpolation();i!==n.DefaultInterpolation&&(t.interpolation=i)}return t.type=n.ValueTypeName,t}});Object.assign(Nt.prototype,{constructor:Nt,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:Ta,InterpolantFactoryMethodDiscrete:function(n){return new fd(this.times,this.values,this.getValueSize(),n)},InterpolantFactoryMethodLinear:function(n){return new sc(this.times,this.values,this.getValueSize(),n)},InterpolantFactoryMethodSmooth:function(n){return new ud(this.times,this.values,this.getValueSize(),n)},setInterpolation:function(n){let e;switch(n){case za:e=this.InterpolantFactoryMethodDiscrete;break;case Ta:e=this.InterpolantFactoryMethodLinear;break;case Gl:e=this.InterpolantFactoryMethodSmooth;break}if(e===void 0){const t="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(n!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(t);return console.warn("THREE.KeyframeTrack:",t),this}return this.createInterpolant=e,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return za;case this.InterpolantFactoryMethodLinear:return Ta;case this.InterpolantFactoryMethodSmooth:return Gl}},getValueSize:function(){return this.values.length/this.times.length},shift:function(n){if(n!==0){const e=this.times;for(let t=0,i=e.length;t!==i;++t)e[t]+=n}return this},scale:function(n){if(n!==1){const e=this.times;for(let t=0,i=e.length;t!==i;++t)e[t]*=n}return this},trim:function(n,e){const t=this.times,i=t.length;let r=0,s=i-1;for(;r!==i&&t[r]<n;)++r;for(;s!==-1&&t[s]>e;)--s;if(++s,r!==0||s!==i){r>=s&&(s=Math.max(s,1),r=s-1);const o=this.getValueSize();this.times=_t.arraySlice(t,r,s),this.values=_t.arraySlice(this.values,r*o,s*o)}return this},validate:function(){let n=!0;const e=this.getValueSize();e-Math.floor(e)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),n=!1);const t=this.times,i=this.values,r=t.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),n=!1);let s=null;for(let o=0;o!==r;o++){const a=t[o];if(typeof a=="number"&&isNaN(a)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,a),n=!1;break}if(s!==null&&s>a){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,a,s),n=!1;break}s=a}if(i!==void 0&&_t.isTypedArray(i))for(let o=0,a=i.length;o!==a;++o){const l=i[o];if(isNaN(l)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,l),n=!1;break}}return n},optimize:function(){const n=_t.arraySlice(this.times),e=_t.arraySlice(this.values),t=this.getValueSize(),i=this.getInterpolation()===Gl,r=n.length-1;let s=1;for(let o=1;o<r;++o){let a=!1;const l=n[o],c=n[o+1];if(l!==c&&(o!==1||l!==n[0]))if(i)a=!0;else{const d=o*t,u=d-t,f=d+t;for(let h=0;h!==t;++h){const p=e[d+h];if(p!==e[u+h]||p!==e[f+h]){a=!0;break}}}if(a){if(o!==s){n[s]=n[o];const d=o*t,u=s*t;for(let f=0;f!==t;++f)e[u+f]=e[d+f]}++s}}if(r>0){n[s]=n[r];for(let o=r*t,a=s*t,l=0;l!==t;++l)e[a+l]=e[o+l];++s}return s!==n.length?(this.times=_t.arraySlice(n,0,s),this.values=_t.arraySlice(e,0,s*t)):(this.times=n,this.values=e),this},clone:function(){const n=_t.arraySlice(this.times,0),e=_t.arraySlice(this.values,0),t=this.constructor,i=new t(this.name,n,e);return i.createInterpolant=this.createInterpolant,i}});function hd(n,e,t){Nt.call(this,n,e,t)}hd.prototype=Object.assign(Object.create(Nt.prototype),{constructor:hd,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:za,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function pd(n,e,t,i){Nt.call(this,n,e,t,i)}pd.prototype=Object.assign(Object.create(Nt.prototype),{constructor:pd,ValueTypeName:"color"});function qo(n,e,t,i){Nt.call(this,n,e,t,i)}qo.prototype=Object.assign(Object.create(Nt.prototype),{constructor:qo,ValueTypeName:"number"});function md(n,e,t,i){_n.call(this,n,e,t,i)}md.prototype=Object.assign(Object.create(_n.prototype),{constructor:md,interpolate_:function(n,e,t,i){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=(t-e)/(i-e);let l=n*o;for(let c=l+o;l!==c;l+=4)Vt.slerpFlat(r,0,s,l-o,s,l,a);return r}});function oc(n,e,t,i){Nt.call(this,n,e,t,i)}oc.prototype=Object.assign(Object.create(Nt.prototype),{constructor:oc,ValueTypeName:"quaternion",DefaultInterpolation:Ta,InterpolantFactoryMethodLinear:function(n){return new md(this.times,this.values,this.getValueSize(),n)},InterpolantFactoryMethodSmooth:void 0});function xd(n,e,t,i){Nt.call(this,n,e,t,i)}xd.prototype=Object.assign(Object.create(Nt.prototype),{constructor:xd,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:za,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function zo(n,e,t,i){Nt.call(this,n,e,t,i)}zo.prototype=Object.assign(Object.create(Nt.prototype),{constructor:zo,ValueTypeName:"vector"});function gn(n,e=-1,t,i=Ud){this.name=n,this.tracks=t,this.duration=e,this.blendMode=i,this.uuid=Ke.generateUUID(),this.duration<0&&this.resetDuration()}function PT(n){switch(n.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return qo;case"vector":case"vector2":case"vector3":case"vector4":return zo;case"color":return pd;case"quaternion":return oc;case"bool":case"boolean":return hd;case"string":return xd}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+n)}function IT(n){if(n.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=PT(n.type);if(n.times===void 0){const t=[],i=[];_t.flattenJSON(n.keys,t,i,"value"),n.times=t,n.values=i}return e.parse!==void 0?e.parse(n):new e(n.name,n.times,n.values,n.interpolation)}Object.assign(gn,{parse:function(n){const e=[],t=n.tracks,i=1/(n.fps||1);for(let s=0,o=t.length;s!==o;++s)e.push(IT(t[s]).scale(i));const r=new gn(n.name,n.duration,e,n.blendMode);return r.uuid=n.uuid,r},toJSON:function(n){const e=[],t=n.tracks,i={name:n.name,duration:n.duration,tracks:e,uuid:n.uuid,blendMode:n.blendMode};for(let r=0,s=t.length;r!==s;++r)e.push(Nt.toJSON(t[r]));return i},CreateFromMorphTargetSequence:function(n,e,t,i){const r=e.length,s=[];for(let o=0;o<r;o++){let a=[],l=[];a.push((o+r-1)%r,o,(o+1)%r),l.push(0,1,0);const c=_t.getKeyframeOrder(a);a=_t.sortedArray(a,1,c),l=_t.sortedArray(l,1,c),!i&&a[0]===0&&(a.push(r),l.push(l[0])),s.push(new qo(".morphTargetInfluences["+e[o].name+"]",a,l).scale(1/t))}return new gn(n,-1,s)},findByName:function(n,e){let t=n;if(!Array.isArray(n)){const i=n;t=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<t.length;i++)if(t[i].name===e)return t[i];return null},CreateClipsFromMorphTargetSequences:function(n,e,t){const i={},r=/^([\w-]*?)([\d]+)$/;for(let o=0,a=n.length;o<a;o++){const l=n[o],c=l.name.match(r);if(c&&c.length>1){const d=c[1];let u=i[d];u||(i[d]=u=[]),u.push(l)}}const s=[];for(const o in i)s.push(gn.CreateFromMorphTargetSequence(o,i[o],e,t));return s},parseAnimation:function(n,e){if(!n)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const t=function(d,u,f,h,p){if(f.length!==0){const x=[],m=[];_t.flattenJSON(f,x,m,h),x.length!==0&&p.push(new d(u,x,m))}},i=[],r=n.name||"default",s=n.fps||30,o=n.blendMode;let a=n.length||-1;const l=n.hierarchy||[];for(let d=0;d<l.length;d++){const u=l[d].keys;if(!(!u||u.length===0))if(u[0].morphTargets){const f={};let h;for(h=0;h<u.length;h++)if(u[h].morphTargets)for(let p=0;p<u[h].morphTargets.length;p++)f[u[h].morphTargets[p]]=-1;for(const p in f){const x=[],m=[];for(let v=0;v!==u[h].morphTargets.length;++v){const g=u[h];x.push(g.time),m.push(g.morphTarget===p?1:0)}i.push(new qo(".morphTargetInfluence["+p+"]",x,m))}a=f.length*s}else{const f=".bones["+e[d].name+"]";t(zo,f+".position",u,"pos",i),t(oc,f+".quaternion",u,"rot",i),t(zo,f+".scale",u,"scl",i)}}return i.length===0?null:new gn(r,a,i,o)}});Object.assign(gn.prototype,{resetDuration:function(){const n=this.tracks;let e=0;for(let t=0,i=n.length;t!==i;++t){const r=this.tracks[t];e=Math.max(e,r.times[r.times.length-1])}return this.duration=e,this},trim:function(){for(let n=0;n<this.tracks.length;n++)this.tracks[n].trim(0,this.duration);return this},validate:function(){let n=!0;for(let e=0;e<this.tracks.length;e++)n=n&&this.tracks[e].validate();return n},optimize:function(){for(let n=0;n<this.tracks.length;n++)this.tracks[n].optimize();return this},clone:function(){const n=[];for(let e=0;e<this.tracks.length;e++)n.push(this.tracks[e].clone());return new gn(this.name,this.duration,n,this.blendMode)},toJSON:function(){return gn.toJSON(this)}});const _s={enabled:!1,files:{},add:function(n,e){this.enabled!==!1&&(this.files[n]=e)},get:function(n){if(this.enabled!==!1)return this.files[n]},remove:function(n){delete this.files[n]},clear:function(){this.files={}}};function Ap(n,e,t){const i=this;let r=!1,s=0,o=0,a;const l=[];this.onStart=void 0,this.onLoad=n,this.onProgress=e,this.onError=t,this.itemStart=function(c){o++,r===!1&&i.onStart!==void 0&&i.onStart(c,s,o),r=!0},this.itemEnd=function(c){s++,i.onProgress!==void 0&&i.onProgress(c,s,o),s===o&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(c){i.onError!==void 0&&i.onError(c)},this.resolveURL=function(c){return a?a(c):c},this.setURLModifier=function(c){return a=c,this},this.addHandler=function(c,d){return l.push(c,d),this},this.removeHandler=function(c){const d=l.indexOf(c);return d!==-1&&l.splice(d,2),this},this.getHandler=function(c){for(let d=0,u=l.length;d<u;d+=2){const f=l[d],h=l[d+1];if(f.global&&(f.lastIndex=0),f.test(c))return h}return null}}const Dy=new Ap;function dt(n){this.manager=n!==void 0?n:Dy,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}Object.assign(dt.prototype,{load:function(){},loadAsync:function(n,e){const t=this;return new Promise(function(i,r){t.load(n,i,e,r)})},parse:function(){},setCrossOrigin:function(n){return this.crossOrigin=n,this},setWithCredentials:function(n){return this.withCredentials=n,this},setPath:function(n){return this.path=n,this},setResourcePath:function(n){return this.resourcePath=n,this},setRequestHeader:function(n){return this.requestHeader=n,this}});const Gn={};function Dn(n){dt.call(this,n)}Dn.prototype=Object.assign(Object.create(dt.prototype),{constructor:Dn,load:function(n,e,t,i){n===void 0&&(n=""),this.path!==void 0&&(n=this.path+n),n=this.manager.resolveURL(n);const r=this,s=_s.get(n);if(s!==void 0)return r.manager.itemStart(n),setTimeout(function(){e&&e(s),r.manager.itemEnd(n)},0),s;if(Gn[n]!==void 0){Gn[n].push({onLoad:e,onProgress:t,onError:i});return}const o=/^data:(.*?)(;base64)?,(.*)$/,a=n.match(o);let l;if(a){const c=a[1],d=!!a[2];let u=a[3];u=decodeURIComponent(u),d&&(u=atob(u));try{let f;const h=(this.responseType||"").toLowerCase();switch(h){case"arraybuffer":case"blob":const p=new Uint8Array(u.length);for(let m=0;m<u.length;m++)p[m]=u.charCodeAt(m);h==="blob"?f=new Blob([p.buffer],{type:c}):f=p.buffer;break;case"document":f=new DOMParser().parseFromString(u,c);break;case"json":f=JSON.parse(u);break;default:f=u;break}setTimeout(function(){e&&e(f),r.manager.itemEnd(n)},0)}catch(f){setTimeout(function(){i&&i(f),r.manager.itemError(n),r.manager.itemEnd(n)},0)}}else{Gn[n]=[],Gn[n].push({onLoad:e,onProgress:t,onError:i}),l=new XMLHttpRequest,l.open("GET",n,!0),l.addEventListener("load",function(c){const d=this.response,u=Gn[n];if(delete Gn[n],this.status===200||this.status===0){this.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),_s.add(n,d);for(let f=0,h=u.length;f<h;f++){const p=u[f];p.onLoad&&p.onLoad(d)}r.manager.itemEnd(n)}else{for(let f=0,h=u.length;f<h;f++){const p=u[f];p.onError&&p.onError(c)}r.manager.itemError(n),r.manager.itemEnd(n)}},!1),l.addEventListener("progress",function(c){const d=Gn[n];for(let u=0,f=d.length;u<f;u++){const h=d[u];h.onProgress&&h.onProgress(c)}},!1),l.addEventListener("error",function(c){const d=Gn[n];delete Gn[n];for(let u=0,f=d.length;u<f;u++){const h=d[u];h.onError&&h.onError(c)}r.manager.itemError(n),r.manager.itemEnd(n)},!1),l.addEventListener("abort",function(c){const d=Gn[n];delete Gn[n];for(let u=0,f=d.length;u<f;u++){const h=d[u];h.onError&&h.onError(c)}r.manager.itemError(n),r.manager.itemEnd(n)},!1),this.responseType!==void 0&&(l.responseType=this.responseType),this.withCredentials!==void 0&&(l.withCredentials=this.withCredentials),l.overrideMimeType&&l.overrideMimeType(this.mimeType!==void 0?this.mimeType:"text/plain");for(const c in this.requestHeader)l.setRequestHeader(c,this.requestHeader[c]);l.send(null)}return r.manager.itemStart(n),l},setResponseType:function(n){return this.responseType=n,this},setMimeType:function(n){return this.mimeType=n,this}});function L0(n){dt.call(this,n)}L0.prototype=Object.assign(Object.create(dt.prototype),{constructor:L0,load:function(n,e,t,i){const r=this,s=new Dn(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(n,function(o){try{e(r.parse(JSON.parse(o)))}catch(a){i?i(a):console.error(a),r.manager.itemError(n)}},t,i)},parse:function(n){const e=[];for(let t=0;t<n.length;t++){const i=gn.parse(n[t]);e.push(i)}return e}});function C0(n){dt.call(this,n)}C0.prototype=Object.assign(Object.create(dt.prototype),{constructor:C0,load:function(n,e,t,i){const r=this,s=[],o=new Do,a=new Dn(this.manager);a.setPath(this.path),a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setWithCredentials(r.withCredentials);let l=0;function c(d){a.load(n[d],function(u){const f=r.parse(u,!0);s[d]={width:f.width,height:f.height,format:f.format,mipmaps:f.mipmaps},l+=1,l===6&&(f.mipmapCount===1&&(o.minFilter=zt),o.image=s,o.format=f.format,o.needsUpdate=!0,e&&e(o))},t,i)}if(Array.isArray(n))for(let d=0,u=n.length;d<u;++d)c(d);else a.load(n,function(d){const u=r.parse(d,!0);if(u.isCubemap){const f=u.mipmaps.length/u.mipmapCount;for(let h=0;h<f;h++){s[h]={mipmaps:[]};for(let p=0;p<u.mipmapCount;p++)s[h].mipmaps.push(u.mipmaps[h*u.mipmapCount+p]),s[h].format=u.format,s[h].width=u.width,s[h].height=u.height}o.image=s}else o.image.width=u.width,o.image.height=u.height,o.mipmaps=u.mipmaps;u.mipmapCount===1&&(o.minFilter=zt),o.format=u.format,o.needsUpdate=!0,e&&e(o)},t,i);return o}});function Fo(n){dt.call(this,n)}Fo.prototype=Object.assign(Object.create(dt.prototype),{constructor:Fo,load:function(n,e,t,i){this.path!==void 0&&(n=this.path+n),n=this.manager.resolveURL(n);const r=this,s=_s.get(n);if(s!==void 0)return r.manager.itemStart(n),setTimeout(function(){e&&e(s),r.manager.itemEnd(n)},0),s;const o=document.createElementNS("http://www.w3.org/1999/xhtml","img");function a(){o.removeEventListener("load",a,!1),o.removeEventListener("error",l,!1),_s.add(n,this),e&&e(this),r.manager.itemEnd(n)}function l(c){o.removeEventListener("load",a,!1),o.removeEventListener("error",l,!1),i&&i(c),r.manager.itemError(n),r.manager.itemEnd(n)}return o.addEventListener("load",a,!1),o.addEventListener("error",l,!1),n.substr(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),r.manager.itemStart(n),o.src=n,o}});function gd(n){dt.call(this,n)}gd.prototype=Object.assign(Object.create(dt.prototype),{constructor:gd,load:function(n,e,t,i){const r=new ui,s=new Fo(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let o=0;function a(l){s.load(n[l],function(c){r.images[l]=c,o++,o===6&&(r.needsUpdate=!0,e&&e(r))},void 0,i)}for(let l=0;l<n.length;++l)a(l);return r}});function vd(n){dt.call(this,n)}vd.prototype=Object.assign(Object.create(dt.prototype),{constructor:vd,load:function(n,e,t,i){const r=this,s=new Fi,o=new Dn(this.manager);return o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setPath(this.path),o.setWithCredentials(r.withCredentials),o.load(n,function(a){const l=r.parse(a);l&&(l.image!==void 0?s.image=l.image:l.data!==void 0&&(s.image.width=l.width,s.image.height=l.height,s.image.data=l.data),s.wrapS=l.wrapS!==void 0?l.wrapS:Zt,s.wrapT=l.wrapT!==void 0?l.wrapT:Zt,s.magFilter=l.magFilter!==void 0?l.magFilter:zt,s.minFilter=l.minFilter!==void 0?l.minFilter:zt,s.anisotropy=l.anisotropy!==void 0?l.anisotropy:1,l.encoding!==void 0&&(s.encoding=l.encoding),l.flipY!==void 0&&(s.flipY=l.flipY),l.format!==void 0&&(s.format=l.format),l.type!==void 0&&(s.type=l.type),l.mipmaps!==void 0&&(s.mipmaps=l.mipmaps,s.minFilter=Zo),l.mipmapCount===1&&(s.minFilter=zt),s.needsUpdate=!0,e&&e(s,l))},t,i),s}});function yd(n){dt.call(this,n)}yd.prototype=Object.assign(Object.create(dt.prototype),{constructor:yd,load:function(n,e,t,i){const r=new ft,s=new Fo(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(n,function(o){r.image=o;const a=n.search(/\.jpe?g($|\?)/i)>0||n.search(/^data\:image\/jpeg/)===0;r.format=a?dr:bn,r.needsUpdate=!0,e!==void 0&&e(r)},t,i),r}});function je(){this.type="Curve",this.arcLengthDivisions=200}Object.assign(je.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(n,e){const t=this.getUtoTmapping(n);return this.getPoint(t,e)},getPoints:function(n=5){const e=[];for(let t=0;t<=n;t++)e.push(this.getPoint(t/n));return e},getSpacedPoints:function(n=5){const e=[];for(let t=0;t<=n;t++)e.push(this.getPointAt(t/n));return e},getLength:function(){const n=this.getLengths();return n[n.length-1]},getLengths:function(n){if(n===void 0&&(n=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===n+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let t,i=this.getPoint(0),r=0;e.push(0);for(let s=1;s<=n;s++)t=this.getPoint(s/n),r+=t.distanceTo(i),e.push(r),i=t;return this.cacheArcLengths=e,e},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(n,e){const t=this.getLengths();let i=0;const r=t.length;let s;e?s=e:s=n*t[r-1];let o=0,a=r-1,l;for(;o<=a;)if(i=Math.floor(o+(a-o)/2),l=t[i]-s,l<0)o=i+1;else if(l>0)a=i-1;else{a=i;break}if(i=a,t[i]===s)return i/(r-1);const c=t[i],u=t[i+1]-c,f=(s-c)/u;return(i+f)/(r-1)},getTangent:function(n,e){let i=n-1e-4,r=n+1e-4;i<0&&(i=0),r>1&&(r=1);const s=this.getPoint(i),o=this.getPoint(r),a=e||(s.isVector2?new Ee:new q);return a.copy(o).sub(s).normalize(),a},getTangentAt:function(n,e){const t=this.getUtoTmapping(n);return this.getTangent(t,e)},computeFrenetFrames:function(n,e){const t=new q,i=[],r=[],s=[],o=new q,a=new tt;for(let f=0;f<=n;f++){const h=f/n;i[f]=this.getTangentAt(h,new q),i[f].normalize()}r[0]=new q,s[0]=new q;let l=Number.MAX_VALUE;const c=Math.abs(i[0].x),d=Math.abs(i[0].y),u=Math.abs(i[0].z);c<=l&&(l=c,t.set(1,0,0)),d<=l&&(l=d,t.set(0,1,0)),u<=l&&t.set(0,0,1),o.crossVectors(i[0],t).normalize(),r[0].crossVectors(i[0],o),s[0].crossVectors(i[0],r[0]);for(let f=1;f<=n;f++){if(r[f]=r[f-1].clone(),s[f]=s[f-1].clone(),o.crossVectors(i[f-1],i[f]),o.length()>Number.EPSILON){o.normalize();const h=Math.acos(Ke.clamp(i[f-1].dot(i[f]),-1,1));r[f].applyMatrix4(a.makeRotationAxis(o,h))}s[f].crossVectors(i[f],r[f])}if(e===!0){let f=Math.acos(Ke.clamp(r[0].dot(r[n]),-1,1));f/=n,i[0].dot(o.crossVectors(r[0],r[n]))>0&&(f=-f);for(let h=1;h<=n;h++)r[h].applyMatrix4(a.makeRotationAxis(i[h],f*h)),s[h].crossVectors(i[h],r[h])}return{tangents:i,normals:r,binormals:s}},clone:function(){return new this.constructor().copy(this)},copy:function(n){return this.arcLengthDivisions=n.arcLengthDivisions,this},toJSON:function(){const n={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return n.arcLengthDivisions=this.arcLengthDivisions,n.type=this.type,n},fromJSON:function(n){return this.arcLengthDivisions=n.arcLengthDivisions,this}});function Sn(n,e,t,i,r,s,o,a){je.call(this),this.type="EllipseCurve",this.aX=n||0,this.aY=e||0,this.xRadius=t||1,this.yRadius=i||1,this.aStartAngle=r||0,this.aEndAngle=s||2*Math.PI,this.aClockwise=o||!1,this.aRotation=a||0}Sn.prototype=Object.create(je.prototype);Sn.prototype.constructor=Sn;Sn.prototype.isEllipseCurve=!0;Sn.prototype.getPoint=function(n,e){const t=e||new Ee,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const s=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(s?r=0:r=i),this.aClockwise===!0&&!s&&(r===i?r=-i:r=r-i);const o=this.aStartAngle+n*r;let a=this.aX+this.xRadius*Math.cos(o),l=this.aY+this.yRadius*Math.sin(o);if(this.aRotation!==0){const c=Math.cos(this.aRotation),d=Math.sin(this.aRotation),u=a-this.aX,f=l-this.aY;a=u*c-f*d+this.aX,l=u*d+f*c+this.aY}return t.set(a,l)};Sn.prototype.copy=function(n){return je.prototype.copy.call(this,n),this.aX=n.aX,this.aY=n.aY,this.xRadius=n.xRadius,this.yRadius=n.yRadius,this.aStartAngle=n.aStartAngle,this.aEndAngle=n.aEndAngle,this.aClockwise=n.aClockwise,this.aRotation=n.aRotation,this};Sn.prototype.toJSON=function(){const n=je.prototype.toJSON.call(this);return n.aX=this.aX,n.aY=this.aY,n.xRadius=this.xRadius,n.yRadius=this.yRadius,n.aStartAngle=this.aStartAngle,n.aEndAngle=this.aEndAngle,n.aClockwise=this.aClockwise,n.aRotation=this.aRotation,n};Sn.prototype.fromJSON=function(n){return je.prototype.fromJSON.call(this,n),this.aX=n.aX,this.aY=n.aY,this.xRadius=n.xRadius,this.yRadius=n.yRadius,this.aStartAngle=n.aStartAngle,this.aEndAngle=n.aEndAngle,this.aClockwise=n.aClockwise,this.aRotation=n.aRotation,this};function No(n,e,t,i,r,s){Sn.call(this,n,e,t,t,i,r,s),this.type="ArcCurve"}No.prototype=Object.create(Sn.prototype);No.prototype.constructor=No;No.prototype.isArcCurve=!0;function Lp(){let n=0,e=0,t=0,i=0;function r(s,o,a,l){n=s,e=a,t=-3*s+3*o-2*a-l,i=2*s-2*o+a+l}return{initCatmullRom:function(s,o,a,l,c){r(o,a,c*(a-s),c*(l-o))},initNonuniformCatmullRom:function(s,o,a,l,c,d,u){let f=(o-s)/c-(a-s)/(c+d)+(a-o)/d,h=(a-o)/d-(l-o)/(d+u)+(l-a)/u;f*=d,h*=d,r(o,a,f,h)},calc:function(s){const o=s*s,a=o*s;return n+e*s+t*o+i*a}}}const Al=new q,Fh=new Lp,Nh=new Lp,Bh=new Lp;function $t(n=[],e=!1,t="centripetal",i=.5){je.call(this),this.type="CatmullRomCurve3",this.points=n,this.closed=e,this.curveType=t,this.tension=i}$t.prototype=Object.create(je.prototype);$t.prototype.constructor=$t;$t.prototype.isCatmullRomCurve3=!0;$t.prototype.getPoint=function(n,e=new q){const t=e,i=this.points,r=i.length,s=(r-(this.closed?0:1))*n;let o=Math.floor(s),a=s-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/r)+1)*r:a===0&&o===r-1&&(o=r-2,a=1);let l,c;this.closed||o>0?l=i[(o-1)%r]:(Al.subVectors(i[0],i[1]).add(i[0]),l=Al);const d=i[o%r],u=i[(o+1)%r];if(this.closed||o+2<r?c=i[(o+2)%r]:(Al.subVectors(i[r-1],i[r-2]).add(i[r-1]),c=Al),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let h=Math.pow(l.distanceToSquared(d),f),p=Math.pow(d.distanceToSquared(u),f),x=Math.pow(u.distanceToSquared(c),f);p<1e-4&&(p=1),h<1e-4&&(h=p),x<1e-4&&(x=p),Fh.initNonuniformCatmullRom(l.x,d.x,u.x,c.x,h,p,x),Nh.initNonuniformCatmullRom(l.y,d.y,u.y,c.y,h,p,x),Bh.initNonuniformCatmullRom(l.z,d.z,u.z,c.z,h,p,x)}else this.curveType==="catmullrom"&&(Fh.initCatmullRom(l.x,d.x,u.x,c.x,this.tension),Nh.initCatmullRom(l.y,d.y,u.y,c.y,this.tension),Bh.initCatmullRom(l.z,d.z,u.z,c.z,this.tension));return t.set(Fh.calc(a),Nh.calc(a),Bh.calc(a)),t};$t.prototype.copy=function(n){je.prototype.copy.call(this,n),this.points=[];for(let e=0,t=n.points.length;e<t;e++){const i=n.points[e];this.points.push(i.clone())}return this.closed=n.closed,this.curveType=n.curveType,this.tension=n.tension,this};$t.prototype.toJSON=function(){const n=je.prototype.toJSON.call(this);n.points=[];for(let e=0,t=this.points.length;e<t;e++){const i=this.points[e];n.points.push(i.toArray())}return n.closed=this.closed,n.curveType=this.curveType,n.tension=this.tension,n};$t.prototype.fromJSON=function(n){je.prototype.fromJSON.call(this,n),this.points=[];for(let e=0,t=n.points.length;e<t;e++){const i=n.points[e];this.points.push(new q().fromArray(i))}return this.closed=n.closed,this.curveType=n.curveType,this.tension=n.tension,this};function O1(n,e,t,i,r){const s=(i-e)*.5,o=(r-t)*.5,a=n*n,l=n*a;return(2*t-2*i+s+o)*l+(-3*t+3*i-2*s-o)*a+s*n+t}function DT(n,e){const t=1-n;return t*t*e}function OT(n,e){return 2*(1-n)*n*e}function qT(n,e){return n*n*e}function La(n,e,t,i){return DT(n,e)+OT(n,t)+qT(n,i)}function zT(n,e){const t=1-n;return t*t*t*e}function FT(n,e){const t=1-n;return 3*t*t*n*e}function NT(n,e){return 3*(1-n)*n*n*e}function BT(n,e){return n*n*n*e}function Ca(n,e,t,i,r){return zT(n,e)+FT(n,t)+NT(n,i)+BT(n,r)}function jn(n=new Ee,e=new Ee,t=new Ee,i=new Ee){je.call(this),this.type="CubicBezierCurve",this.v0=n,this.v1=e,this.v2=t,this.v3=i}jn.prototype=Object.create(je.prototype);jn.prototype.constructor=jn;jn.prototype.isCubicBezierCurve=!0;jn.prototype.getPoint=function(n,e=new Ee){const t=e,i=this.v0,r=this.v1,s=this.v2,o=this.v3;return t.set(Ca(n,i.x,r.x,s.x,o.x),Ca(n,i.y,r.y,s.y,o.y)),t};jn.prototype.copy=function(n){return je.prototype.copy.call(this,n),this.v0.copy(n.v0),this.v1.copy(n.v1),this.v2.copy(n.v2),this.v3.copy(n.v3),this};jn.prototype.toJSON=function(){const n=je.prototype.toJSON.call(this);return n.v0=this.v0.toArray(),n.v1=this.v1.toArray(),n.v2=this.v2.toArray(),n.v3=this.v3.toArray(),n};jn.prototype.fromJSON=function(n){return je.prototype.fromJSON.call(this,n),this.v0.fromArray(n.v0),this.v1.fromArray(n.v1),this.v2.fromArray(n.v2),this.v3.fromArray(n.v3),this};function hi(n=new q,e=new q,t=new q,i=new q){je.call(this),this.type="CubicBezierCurve3",this.v0=n,this.v1=e,this.v2=t,this.v3=i}hi.prototype=Object.create(je.prototype);hi.prototype.constructor=hi;hi.prototype.isCubicBezierCurve3=!0;hi.prototype.getPoint=function(n,e=new q){const t=e,i=this.v0,r=this.v1,s=this.v2,o=this.v3;return t.set(Ca(n,i.x,r.x,s.x,o.x),Ca(n,i.y,r.y,s.y,o.y),Ca(n,i.z,r.z,s.z,o.z)),t};hi.prototype.copy=function(n){return je.prototype.copy.call(this,n),this.v0.copy(n.v0),this.v1.copy(n.v1),this.v2.copy(n.v2),this.v3.copy(n.v3),this};hi.prototype.toJSON=function(){const n=je.prototype.toJSON.call(this);return n.v0=this.v0.toArray(),n.v1=this.v1.toArray(),n.v2=this.v2.toArray(),n.v3=this.v3.toArray(),n};hi.prototype.fromJSON=function(n){return je.prototype.fromJSON.call(this,n),this.v0.fromArray(n.v0),this.v1.fromArray(n.v1),this.v2.fromArray(n.v2),this.v3.fromArray(n.v3),this};function on(n=new Ee,e=new Ee){je.call(this),this.type="LineCurve",this.v1=n,this.v2=e}on.prototype=Object.create(je.prototype);on.prototype.constructor=on;on.prototype.isLineCurve=!0;on.prototype.getPoint=function(n,e=new Ee){const t=e;return n===1?t.copy(this.v2):(t.copy(this.v2).sub(this.v1),t.multiplyScalar(n).add(this.v1)),t};on.prototype.getPointAt=function(n,e){return this.getPoint(n,e)};on.prototype.getTangent=function(n,e){const t=e||new Ee;return t.copy(this.v2).sub(this.v1).normalize(),t};on.prototype.copy=function(n){return je.prototype.copy.call(this,n),this.v1.copy(n.v1),this.v2.copy(n.v2),this};on.prototype.toJSON=function(){const n=je.prototype.toJSON.call(this);return n.v1=this.v1.toArray(),n.v2=this.v2.toArray(),n};on.prototype.fromJSON=function(n){return je.prototype.fromJSON.call(this,n),this.v1.fromArray(n.v1),this.v2.fromArray(n.v2),this};function Xn(n=new q,e=new q){je.call(this),this.type="LineCurve3",this.v1=n,this.v2=e}Xn.prototype=Object.create(je.prototype);Xn.prototype.constructor=Xn;Xn.prototype.isLineCurve3=!0;Xn.prototype.getPoint=function(n,e=new q){const t=e;return n===1?t.copy(this.v2):(t.copy(this.v2).sub(this.v1),t.multiplyScalar(n).add(this.v1)),t};Xn.prototype.getPointAt=function(n,e){return this.getPoint(n,e)};Xn.prototype.copy=function(n){return je.prototype.copy.call(this,n),this.v1.copy(n.v1),this.v2.copy(n.v2),this};Xn.prototype.toJSON=function(){const n=je.prototype.toJSON.call(this);return n.v1=this.v1.toArray(),n.v2=this.v2.toArray(),n};Xn.prototype.fromJSON=function(n){return je.prototype.fromJSON.call(this,n),this.v1.fromArray(n.v1),this.v2.fromArray(n.v2),this};function Yn(n=new Ee,e=new Ee,t=new Ee){je.call(this),this.type="QuadraticBezierCurve",this.v0=n,this.v1=e,this.v2=t}Yn.prototype=Object.create(je.prototype);Yn.prototype.constructor=Yn;Yn.prototype.isQuadraticBezierCurve=!0;Yn.prototype.getPoint=function(n,e=new Ee){const t=e,i=this.v0,r=this.v1,s=this.v2;return t.set(La(n,i.x,r.x,s.x),La(n,i.y,r.y,s.y)),t};Yn.prototype.copy=function(n){return je.prototype.copy.call(this,n),this.v0.copy(n.v0),this.v1.copy(n.v1),this.v2.copy(n.v2),this};Yn.prototype.toJSON=function(){const n=je.prototype.toJSON.call(this);return n.v0=this.v0.toArray(),n.v1=this.v1.toArray(),n.v2=this.v2.toArray(),n};Yn.prototype.fromJSON=function(n){return je.prototype.fromJSON.call(this,n),this.v0.fromArray(n.v0),this.v1.fromArray(n.v1),this.v2.fromArray(n.v2),this};function pi(n=new q,e=new q,t=new q){je.call(this),this.type="QuadraticBezierCurve3",this.v0=n,this.v1=e,this.v2=t}pi.prototype=Object.create(je.prototype);pi.prototype.constructor=pi;pi.prototype.isQuadraticBezierCurve3=!0;pi.prototype.getPoint=function(n,e=new q){const t=e,i=this.v0,r=this.v1,s=this.v2;return t.set(La(n,i.x,r.x,s.x),La(n,i.y,r.y,s.y),La(n,i.z,r.z,s.z)),t};pi.prototype.copy=function(n){return je.prototype.copy.call(this,n),this.v0.copy(n.v0),this.v1.copy(n.v1),this.v2.copy(n.v2),this};pi.prototype.toJSON=function(){const n=je.prototype.toJSON.call(this);return n.v0=this.v0.toArray(),n.v1=this.v1.toArray(),n.v2=this.v2.toArray(),n};pi.prototype.fromJSON=function(n){return je.prototype.fromJSON.call(this,n),this.v0.fromArray(n.v0),this.v1.fromArray(n.v1),this.v2.fromArray(n.v2),this};function Zn(n=[]){je.call(this),this.type="SplineCurve",this.points=n}Zn.prototype=Object.create(je.prototype);Zn.prototype.constructor=Zn;Zn.prototype.isSplineCurve=!0;Zn.prototype.getPoint=function(n,e=new Ee){const t=e,i=this.points,r=(i.length-1)*n,s=Math.floor(r),o=r-s,a=i[s===0?s:s-1],l=i[s],c=i[s>i.length-2?i.length-1:s+1],d=i[s>i.length-3?i.length-1:s+2];return t.set(O1(o,a.x,l.x,c.x,d.x),O1(o,a.y,l.y,c.y,d.y)),t};Zn.prototype.copy=function(n){je.prototype.copy.call(this,n),this.points=[];for(let e=0,t=n.points.length;e<t;e++){const i=n.points[e];this.points.push(i.clone())}return this};Zn.prototype.toJSON=function(){const n=je.prototype.toJSON.call(this);n.points=[];for(let e=0,t=this.points.length;e<t;e++){const i=this.points[e];n.points.push(i.toArray())}return n};Zn.prototype.fromJSON=function(n){je.prototype.fromJSON.call(this,n),this.points=[];for(let e=0,t=n.points.length;e<t;e++){const i=n.points[e];this.points.push(new Ee().fromArray(i))}return this};var R0=Object.freeze({__proto__:null,ArcCurve:No,CatmullRomCurve3:$t,CubicBezierCurve:jn,CubicBezierCurve3:hi,EllipseCurve:Sn,LineCurve:on,LineCurve3:Xn,QuadraticBezierCurve:Yn,QuadraticBezierCurve3:pi,SplineCurve:Zn});function cr(){je.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}cr.prototype=Object.assign(Object.create(je.prototype),{constructor:cr,add:function(n){this.curves.push(n)},closePath:function(){const n=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);n.equals(e)||this.curves.push(new on(e,n))},getPoint:function(n){const e=n*this.getLength(),t=this.getCurveLengths();let i=0;for(;i<t.length;){if(t[i]>=e){const r=t[i]-e,s=this.curves[i],o=s.getLength(),a=o===0?0:1-r/o;return s.getPointAt(a)}i++}return null},getLength:function(){const n=this.getCurveLengths();return n[n.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const n=[];let e=0;for(let t=0,i=this.curves.length;t<i;t++)e+=this.curves[t].getLength(),n.push(e);return this.cacheLengths=n,n},getSpacedPoints:function(n=40){const e=[];for(let t=0;t<=n;t++)e.push(this.getPoint(t/n));return this.autoClose&&e.push(e[0]),e},getPoints:function(n=12){const e=[];let t;for(let i=0,r=this.curves;i<r.length;i++){const s=r[i],o=s&&s.isEllipseCurve?n*2:s&&(s.isLineCurve||s.isLineCurve3)?1:s&&s.isSplineCurve?n*s.points.length:n,a=s.getPoints(o);for(let l=0;l<a.length;l++){const c=a[l];t&&t.equals(c)||(e.push(c),t=c)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e},copy:function(n){je.prototype.copy.call(this,n),this.curves=[];for(let e=0,t=n.curves.length;e<t;e++){const i=n.curves[e];this.curves.push(i.clone())}return this.autoClose=n.autoClose,this},toJSON:function(){const n=je.prototype.toJSON.call(this);n.autoClose=this.autoClose,n.curves=[];for(let e=0,t=this.curves.length;e<t;e++){const i=this.curves[e];n.curves.push(i.toJSON())}return n},fromJSON:function(n){je.prototype.fromJSON.call(this,n),this.autoClose=n.autoClose,this.curves=[];for(let e=0,t=n.curves.length;e<t;e++){const i=n.curves[e];this.curves.push(new R0[i.type]().fromJSON(i))}return this}});function Vn(n){cr.call(this),this.type="Path",this.currentPoint=new Ee,n&&this.setFromPoints(n)}Vn.prototype=Object.assign(Object.create(cr.prototype),{constructor:Vn,setFromPoints:function(n){this.moveTo(n[0].x,n[0].y);for(let e=1,t=n.length;e<t;e++)this.lineTo(n[e].x,n[e].y);return this},moveTo:function(n,e){return this.currentPoint.set(n,e),this},lineTo:function(n,e){const t=new on(this.currentPoint.clone(),new Ee(n,e));return this.curves.push(t),this.currentPoint.set(n,e),this},quadraticCurveTo:function(n,e,t,i){const r=new Yn(this.currentPoint.clone(),new Ee(n,e),new Ee(t,i));return this.curves.push(r),this.currentPoint.set(t,i),this},bezierCurveTo:function(n,e,t,i,r,s){const o=new jn(this.currentPoint.clone(),new Ee(n,e),new Ee(t,i),new Ee(r,s));return this.curves.push(o),this.currentPoint.set(r,s),this},splineThru:function(n){const e=[this.currentPoint.clone()].concat(n),t=new Zn(e);return this.curves.push(t),this.currentPoint.copy(n[n.length-1]),this},arc:function(n,e,t,i,r,s){const o=this.currentPoint.x,a=this.currentPoint.y;return this.absarc(n+o,e+a,t,i,r,s),this},absarc:function(n,e,t,i,r,s){return this.absellipse(n,e,t,t,i,r,s),this},ellipse:function(n,e,t,i,r,s,o,a){const l=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(n+l,e+c,t,i,r,s,o,a),this},absellipse:function(n,e,t,i,r,s,o,a){const l=new Sn(n,e,t,i,r,s,o,a);if(this.curves.length>0){const d=l.getPoint(0);d.equals(this.currentPoint)||this.lineTo(d.x,d.y)}this.curves.push(l);const c=l.getPoint(1);return this.currentPoint.copy(c),this},copy:function(n){return cr.prototype.copy.call(this,n),this.currentPoint.copy(n.currentPoint),this},toJSON:function(){const n=cr.prototype.toJSON.call(this);return n.currentPoint=this.currentPoint.toArray(),n},fromJSON:function(n){return cr.prototype.fromJSON.call(this,n),this.currentPoint.fromArray(n.currentPoint),this}});function hr(n){Vn.call(this,n),this.uuid=Ke.generateUUID(),this.type="Shape",this.holes=[]}hr.prototype=Object.assign(Object.create(Vn.prototype),{constructor:hr,getPointsHoles:function(n){const e=[];for(let t=0,i=this.holes.length;t<i;t++)e[t]=this.holes[t].getPoints(n);return e},extractPoints:function(n){return{shape:this.getPoints(n),holes:this.getPointsHoles(n)}},copy:function(n){Vn.prototype.copy.call(this,n),this.holes=[];for(let e=0,t=n.holes.length;e<t;e++){const i=n.holes[e];this.holes.push(i.clone())}return this},toJSON:function(){const n=Vn.prototype.toJSON.call(this);n.uuid=this.uuid,n.holes=[];for(let e=0,t=this.holes.length;e<t;e++){const i=this.holes[e];n.holes.push(i.toJSON())}return n},fromJSON:function(n){Vn.prototype.fromJSON.call(this,n),this.uuid=n.uuid,this.holes=[];for(let e=0,t=n.holes.length;e<t;e++){const i=n.holes[e];this.holes.push(new Vn().fromJSON(i))}return this}});function vt(n,e=1){We.call(this),this.type="Light",this.color=new Ue(n),this.intensity=e}vt.prototype=Object.assign(Object.create(We.prototype),{constructor:vt,isLight:!0,copy:function(n){return We.prototype.copy.call(this,n),this.color.copy(n.color),this.intensity=n.intensity,this},toJSON:function(n){const e=We.prototype.toJSON.call(this,n);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),e}});function bd(n,e,t){vt.call(this,n,t),this.type="HemisphereLight",this.position.copy(We.DefaultUp),this.updateMatrix(),this.groundColor=new Ue(e)}bd.prototype=Object.assign(Object.create(vt.prototype),{constructor:bd,isHemisphereLight:!0,copy:function(n){return vt.prototype.copy.call(this,n),this.groundColor.copy(n.groundColor),this}});function Bi(n){this.camera=n,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new Ee(512,512),this.map=null,this.mapPass=null,this.matrix=new tt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Ec,this._frameExtents=new Ee(1,1),this._viewportCount=1,this._viewports=[new ut(0,0,1,1)]}Object.assign(Bi.prototype,{_projScreenMatrix:new tt,_lightPositionWorld:new q,_lookTarget:new q,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(n){const e=this.camera,t=this.matrix,i=this._projScreenMatrix,r=this._lookTarget,s=this._lightPositionWorld;s.setFromMatrixPosition(n.matrixWorld),e.position.copy(s),r.setFromMatrixPosition(n.target.matrixWorld),e.lookAt(r),e.updateMatrixWorld(),i.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(i),t.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),t.multiply(e.projectionMatrix),t.multiply(e.matrixWorldInverse)},getViewport:function(n){return this._viewports[n]},getFrameExtents:function(){return this._frameExtents},copy:function(n){return this.camera=n.camera.clone(),this.bias=n.bias,this.radius=n.radius,this.mapSize.copy(n.mapSize),this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){const n={};return this.bias!==0&&(n.bias=this.bias),this.normalBias!==0&&(n.normalBias=this.normalBias),this.radius!==1&&(n.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(n.mapSize=this.mapSize.toArray()),n.camera=this.camera.toJSON(!1).object,delete n.camera.matrix,n}});function P0(){Bi.call(this,new Pt(50,1,.5,500)),this.focus=1}P0.prototype=Object.assign(Object.create(Bi.prototype),{constructor:P0,isSpotLightShadow:!0,updateMatrices:function(n){const e=this.camera,t=Ke.RAD2DEG*2*n.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=n.distance||e.far;(t!==e.fov||i!==e.aspect||r!==e.far)&&(e.fov=t,e.aspect=i,e.far=r,e.updateProjectionMatrix()),Bi.prototype.updateMatrices.call(this,n)}});function _d(n,e,t,i,r,s){vt.call(this,n,e),this.type="SpotLight",this.position.copy(We.DefaultUp),this.updateMatrix(),this.target=new We,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(o){this.intensity=o/Math.PI}}),this.distance=t!==void 0?t:0,this.angle=i!==void 0?i:Math.PI/3,this.penumbra=r!==void 0?r:0,this.decay=s!==void 0?s:1,this.shadow=new P0}_d.prototype=Object.assign(Object.create(vt.prototype),{constructor:_d,isSpotLight:!0,copy:function(n){return vt.prototype.copy.call(this,n),this.distance=n.distance,this.angle=n.angle,this.penumbra=n.penumbra,this.decay=n.decay,this.target=n.target.clone(),this.shadow=n.shadow.clone(),this}});function I0(){Bi.call(this,new Pt(90,1,.5,500)),this._frameExtents=new Ee(4,2),this._viewportCount=6,this._viewports=[new ut(2,1,1,1),new ut(0,1,1,1),new ut(3,1,1,1),new ut(1,1,1,1),new ut(3,0,1,1),new ut(1,0,1,1)],this._cubeDirections=[new q(1,0,0),new q(-1,0,0),new q(0,0,1),new q(0,0,-1),new q(0,1,0),new q(0,-1,0)],this._cubeUps=[new q(0,1,0),new q(0,1,0),new q(0,1,0),new q(0,1,0),new q(0,0,1),new q(0,0,-1)]}I0.prototype=Object.assign(Object.create(Bi.prototype),{constructor:I0,isPointLightShadow:!0,updateMatrices:function(n,e=0){const t=this.camera,i=this.matrix,r=this._lightPositionWorld,s=this._lookTarget,o=this._projScreenMatrix;r.setFromMatrixPosition(n.matrixWorld),t.position.copy(r),s.copy(t.position),s.add(this._cubeDirections[e]),t.up.copy(this._cubeUps[e]),t.lookAt(s),t.updateMatrixWorld(),i.makeTranslation(-r.x,-r.y,-r.z),o.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(o)}});function wd(n,e,t,i){vt.call(this,n,e),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return this.intensity*4*Math.PI},set:function(r){this.intensity=r/(4*Math.PI)}}),this.distance=t!==void 0?t:0,this.decay=i!==void 0?i:1,this.shadow=new I0}wd.prototype=Object.assign(Object.create(vt.prototype),{constructor:wd,isPointLight:!0,copy:function(n){return vt.prototype.copy.call(this,n),this.distance=n.distance,this.decay=n.decay,this.shadow=n.shadow.clone(),this}});function Bo(n=-1,e=1,t=1,i=-1,r=.1,s=2e3){di.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=n,this.right=e,this.top=t,this.bottom=i,this.near=r,this.far=s,this.updateProjectionMatrix()}Bo.prototype=Object.assign(Object.create(di.prototype),{constructor:Bo,isOrthographicCamera:!0,copy:function(n,e){return di.prototype.copy.call(this,n,e),this.left=n.left,this.right=n.right,this.top=n.top,this.bottom=n.bottom,this.near=n.near,this.far=n.far,this.zoom=n.zoom,this.view=n.view===null?null:Object.assign({},n.view),this},setViewOffset:function(n,e,t,i,r,s){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=n,this.view.fullHeight=e,this.view.offsetX=t,this.view.offsetY=i,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()},clearViewOffset:function(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const n=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),t=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=t-n,s=t+n,o=i+e,a=i-e;if(this.view!==null&&this.view.enabled){const l=(this.right-this.left)/this.view.fullWidth/this.zoom,c=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=l*this.view.offsetX,s=r+l*this.view.width,o-=c*this.view.offsetY,a=o-c*this.view.height}this.projectionMatrix.makeOrthographic(r,s,o,a,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(n){const e=We.prototype.toJSON.call(this,n);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}});function D0(){Bi.call(this,new Bo(-5,5,5,-5,.5,500))}D0.prototype=Object.assign(Object.create(Bi.prototype),{constructor:D0,isDirectionalLightShadow:!0,updateMatrices:function(n){Bi.prototype.updateMatrices.call(this,n)}});function Md(n,e){vt.call(this,n,e),this.type="DirectionalLight",this.position.copy(We.DefaultUp),this.updateMatrix(),this.target=new We,this.shadow=new D0}Md.prototype=Object.assign(Object.create(vt.prototype),{constructor:Md,isDirectionalLight:!0,copy:function(n){return vt.prototype.copy.call(this,n),this.target=n.target.clone(),this.shadow=n.shadow.clone(),this}});function Sd(n,e){vt.call(this,n,e),this.type="AmbientLight"}Sd.prototype=Object.assign(Object.create(vt.prototype),{constructor:Sd,isAmbientLight:!0});function Ed(n,e,t,i){vt.call(this,n,e),this.type="RectAreaLight",this.width=t!==void 0?t:10,this.height=i!==void 0?i:10}Ed.prototype=Object.assign(Object.create(vt.prototype),{constructor:Ed,isRectAreaLight:!0,copy:function(n){return vt.prototype.copy.call(this,n),this.width=n.width,this.height=n.height,this},toJSON:function(n){const e=vt.prototype.toJSON.call(this,n);return e.object.width=this.width,e.object.height=this.height,e}});class Oy{constructor(){Object.defineProperty(this,"isSphericalHarmonics3",{value:!0}),this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new q)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const i=e.x,r=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*r),t.addScaledVector(o[2],.488603*s),t.addScaledVector(o[3],.488603*i),t.addScaledVector(o[4],1.092548*(i*r)),t.addScaledVector(o[5],1.092548*(r*s)),t.addScaledVector(o[6],.315392*(3*s*s-1)),t.addScaledVector(o[7],1.092548*(i*s)),t.addScaledVector(o[8],.546274*(i*i-r*r)),t}getIrradianceAt(e,t){const i=e.x,r=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],2*.511664*r),t.addScaledVector(o[2],2*.511664*s),t.addScaledVector(o[3],2*.511664*i),t.addScaledVector(o[4],2*.429043*i*r),t.addScaledVector(o[5],2*.429043*r*s),t.addScaledVector(o[6],.743125*s*s-.247708),t.addScaledVector(o[7],2*.429043*i*s),t.addScaledVector(o[8],.429043*(i*i-r*r)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(e.coefficients[i],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let i=0;i<9;i++)this.coefficients[i].lerp(e.coefficients[i],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const i=this.coefficients;for(let r=0;r<9;r++)i[r].fromArray(e,t+r*3);return this}toArray(e=[],t=0){const i=this.coefficients;for(let r=0;r<9;r++)i[r].toArray(e,t+r*3);return e}static getBasisAt(e,t){const i=e.x,r=e.y,s=e.z;t[0]=.282095,t[1]=.488603*r,t[2]=.488603*s,t[3]=.488603*i,t[4]=1.092548*i*r,t[5]=1.092548*r*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*i*s,t[8]=.546274*(i*i-r*r)}}function Rn(n,e){vt.call(this,void 0,e),this.type="LightProbe",this.sh=n!==void 0?n:new Oy}Rn.prototype=Object.assign(Object.create(vt.prototype),{constructor:Rn,isLightProbe:!0,copy:function(n){return vt.prototype.copy.call(this,n),this.sh.copy(n.sh),this},fromJSON:function(n){return this.intensity=n.intensity,this.sh.fromArray(n.sh),this},toJSON:function(n){const e=vt.prototype.toJSON.call(this,n);return e.object.sh=this.sh.toArray(),e}});function Td(n){dt.call(this,n),this.textures={}}Td.prototype=Object.assign(Object.create(dt.prototype),{constructor:Td,load:function(n,e,t,i){const r=this,s=new Dn(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(n,function(o){try{e(r.parse(JSON.parse(o)))}catch(a){i?i(a):console.error(a),r.manager.itemError(n)}},t,i)},parse:function(n){const e=this.textures;function t(r){return e[r]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",r),e[r]}const i=new RT[n.type];if(n.uuid!==void 0&&(i.uuid=n.uuid),n.name!==void 0&&(i.name=n.name),n.color!==void 0&&i.color!==void 0&&i.color.setHex(n.color),n.roughness!==void 0&&(i.roughness=n.roughness),n.metalness!==void 0&&(i.metalness=n.metalness),n.sheen!==void 0&&(i.sheen=new Ue().setHex(n.sheen)),n.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(n.emissive),n.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(n.specular),n.shininess!==void 0&&(i.shininess=n.shininess),n.clearcoat!==void 0&&(i.clearcoat=n.clearcoat),n.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=n.clearcoatRoughness),n.fog!==void 0&&(i.fog=n.fog),n.flatShading!==void 0&&(i.flatShading=n.flatShading),n.blending!==void 0&&(i.blending=n.blending),n.combine!==void 0&&(i.combine=n.combine),n.side!==void 0&&(i.side=n.side),n.opacity!==void 0&&(i.opacity=n.opacity),n.transparent!==void 0&&(i.transparent=n.transparent),n.alphaTest!==void 0&&(i.alphaTest=n.alphaTest),n.depthTest!==void 0&&(i.depthTest=n.depthTest),n.depthWrite!==void 0&&(i.depthWrite=n.depthWrite),n.colorWrite!==void 0&&(i.colorWrite=n.colorWrite),n.stencilWrite!==void 0&&(i.stencilWrite=n.stencilWrite),n.stencilWriteMask!==void 0&&(i.stencilWriteMask=n.stencilWriteMask),n.stencilFunc!==void 0&&(i.stencilFunc=n.stencilFunc),n.stencilRef!==void 0&&(i.stencilRef=n.stencilRef),n.stencilFuncMask!==void 0&&(i.stencilFuncMask=n.stencilFuncMask),n.stencilFail!==void 0&&(i.stencilFail=n.stencilFail),n.stencilZFail!==void 0&&(i.stencilZFail=n.stencilZFail),n.stencilZPass!==void 0&&(i.stencilZPass=n.stencilZPass),n.wireframe!==void 0&&(i.wireframe=n.wireframe),n.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=n.wireframeLinewidth),n.wireframeLinecap!==void 0&&(i.wireframeLinecap=n.wireframeLinecap),n.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=n.wireframeLinejoin),n.rotation!==void 0&&(i.rotation=n.rotation),n.linewidth!==1&&(i.linewidth=n.linewidth),n.dashSize!==void 0&&(i.dashSize=n.dashSize),n.gapSize!==void 0&&(i.gapSize=n.gapSize),n.scale!==void 0&&(i.scale=n.scale),n.polygonOffset!==void 0&&(i.polygonOffset=n.polygonOffset),n.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=n.polygonOffsetFactor),n.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=n.polygonOffsetUnits),n.skinning!==void 0&&(i.skinning=n.skinning),n.morphTargets!==void 0&&(i.morphTargets=n.morphTargets),n.morphNormals!==void 0&&(i.morphNormals=n.morphNormals),n.dithering!==void 0&&(i.dithering=n.dithering),n.vertexTangents!==void 0&&(i.vertexTangents=n.vertexTangents),n.visible!==void 0&&(i.visible=n.visible),n.toneMapped!==void 0&&(i.toneMapped=n.toneMapped),n.userData!==void 0&&(i.userData=n.userData),n.vertexColors!==void 0&&(typeof n.vertexColors=="number"?i.vertexColors=n.vertexColors>0:i.vertexColors=n.vertexColors),n.uniforms!==void 0)for(const r in n.uniforms){const s=n.uniforms[r];switch(i.uniforms[r]={},s.type){case"t":i.uniforms[r].value=t(s.value);break;case"c":i.uniforms[r].value=new Ue().setHex(s.value);break;case"v2":i.uniforms[r].value=new Ee().fromArray(s.value);break;case"v3":i.uniforms[r].value=new q().fromArray(s.value);break;case"v4":i.uniforms[r].value=new ut().fromArray(s.value);break;case"m3":i.uniforms[r].value=new vn().fromArray(s.value);break;case"m4":i.uniforms[r].value=new tt().fromArray(s.value);break;default:i.uniforms[r].value=s.value}}if(n.defines!==void 0&&(i.defines=n.defines),n.vertexShader!==void 0&&(i.vertexShader=n.vertexShader),n.fragmentShader!==void 0&&(i.fragmentShader=n.fragmentShader),n.extensions!==void 0)for(const r in n.extensions)i.extensions[r]=n.extensions[r];if(n.shading!==void 0&&(i.flatShading=n.shading===1),n.size!==void 0&&(i.size=n.size),n.sizeAttenuation!==void 0&&(i.sizeAttenuation=n.sizeAttenuation),n.map!==void 0&&(i.map=t(n.map)),n.matcap!==void 0&&(i.matcap=t(n.matcap)),n.alphaMap!==void 0&&(i.alphaMap=t(n.alphaMap)),n.bumpMap!==void 0&&(i.bumpMap=t(n.bumpMap)),n.bumpScale!==void 0&&(i.bumpScale=n.bumpScale),n.normalMap!==void 0&&(i.normalMap=t(n.normalMap)),n.normalMapType!==void 0&&(i.normalMapType=n.normalMapType),n.normalScale!==void 0){let r=n.normalScale;Array.isArray(r)===!1&&(r=[r,r]),i.normalScale=new Ee().fromArray(r)}return n.displacementMap!==void 0&&(i.displacementMap=t(n.displacementMap)),n.displacementScale!==void 0&&(i.displacementScale=n.displacementScale),n.displacementBias!==void 0&&(i.displacementBias=n.displacementBias),n.roughnessMap!==void 0&&(i.roughnessMap=t(n.roughnessMap)),n.metalnessMap!==void 0&&(i.metalnessMap=t(n.metalnessMap)),n.emissiveMap!==void 0&&(i.emissiveMap=t(n.emissiveMap)),n.emissiveIntensity!==void 0&&(i.emissiveIntensity=n.emissiveIntensity),n.specularMap!==void 0&&(i.specularMap=t(n.specularMap)),n.envMap!==void 0&&(i.envMap=t(n.envMap)),n.envMapIntensity!==void 0&&(i.envMapIntensity=n.envMapIntensity),n.reflectivity!==void 0&&(i.reflectivity=n.reflectivity),n.refractionRatio!==void 0&&(i.refractionRatio=n.refractionRatio),n.lightMap!==void 0&&(i.lightMap=t(n.lightMap)),n.lightMapIntensity!==void 0&&(i.lightMapIntensity=n.lightMapIntensity),n.aoMap!==void 0&&(i.aoMap=t(n.aoMap)),n.aoMapIntensity!==void 0&&(i.aoMapIntensity=n.aoMapIntensity),n.gradientMap!==void 0&&(i.gradientMap=t(n.gradientMap)),n.clearcoatMap!==void 0&&(i.clearcoatMap=t(n.clearcoatMap)),n.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=t(n.clearcoatRoughnessMap)),n.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=t(n.clearcoatNormalMap)),n.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new Ee().fromArray(n.clearcoatNormalScale)),n.transmission!==void 0&&(i.transmission=n.transmission),n.transmissionMap!==void 0&&(i.transmissionMap=t(n.transmissionMap)),i},setTextures:function(n){return this.textures=n,this}});const Cp={decodeText:function(n){if(typeof TextDecoder<"u")return new TextDecoder().decode(n);let e="";for(let t=0,i=n.length;t<i;t++)e+=String.fromCharCode(n[t]);try{return decodeURIComponent(escape(e))}catch{return e}},extractUrlBase:function(n){const e=n.lastIndexOf("/");return e===-1?"./":n.substr(0,e+1)}};function ac(){Xe.call(this),this.type="InstancedBufferGeometry",this.instanceCount=1/0}ac.prototype=Object.assign(Object.create(Xe.prototype),{constructor:ac,isInstancedBufferGeometry:!0,copy:function(n){return Xe.prototype.copy.call(this,n),this.instanceCount=n.instanceCount,this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){const n=Xe.prototype.toJSON.call(this);return n.instanceCount=this.instanceCount,n.isInstancedBufferGeometry=!0,n}});function Ad(n,e,t,i){typeof t=="number"&&(i=t,t=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),Ze.call(this,n,e,t),this.meshPerAttribute=i||1}Ad.prototype=Object.assign(Object.create(Ze.prototype),{constructor:Ad,isInstancedBufferAttribute:!0,copy:function(n){return Ze.prototype.copy.call(this,n),this.meshPerAttribute=n.meshPerAttribute,this},toJSON:function(){const n=Ze.prototype.toJSON.call(this);return n.meshPerAttribute=this.meshPerAttribute,n.isInstancedBufferAttribute=!0,n}});function Ld(n){dt.call(this,n)}Ld.prototype=Object.assign(Object.create(dt.prototype),{constructor:Ld,load:function(n,e,t,i){const r=this,s=new Dn(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(n,function(o){try{e(r.parse(JSON.parse(o)))}catch(a){i?i(a):console.error(a),r.manager.itemError(n)}},t,i)},parse:function(n){const e={},t={};function i(f,h){if(e[h]!==void 0)return e[h];const x=f.interleavedBuffers[h],m=r(f,x.buffer),v=Ma(x.type,m),g=new yn(v,x.stride);return g.uuid=x.uuid,e[h]=g,g}function r(f,h){if(t[h]!==void 0)return t[h];const x=f.arrayBuffers[h],m=new Uint32Array(x).buffer;return t[h]=m,m}const s=n.isInstancedBufferGeometry?new ac:new Xe,o=n.data.index;if(o!==void 0){const f=Ma(o.type,o.array);s.setIndex(new Ze(f,1))}const a=n.data.attributes;for(const f in a){const h=a[f];let p;if(h.isInterleavedBufferAttribute){const x=i(n.data,h.data);p=new gr(x,h.itemSize,h.offset,h.normalized)}else{const x=Ma(h.type,h.array),m=h.isInstancedBufferAttribute?Ad:Ze;p=new m(x,h.itemSize,h.normalized)}h.name!==void 0&&(p.name=h.name),s.setAttribute(f,p)}const l=n.data.morphAttributes;if(l)for(const f in l){const h=l[f],p=[];for(let x=0,m=h.length;x<m;x++){const v=h[x];let g;if(v.isInterleavedBufferAttribute){const w=i(n.data,v.data);g=new gr(w,v.itemSize,v.offset,v.normalized)}else{const w=Ma(v.type,v.array);g=new Ze(w,v.itemSize,v.normalized)}v.name!==void 0&&(g.name=v.name),p.push(g)}s.morphAttributes[f]=p}n.data.morphTargetsRelative&&(s.morphTargetsRelative=!0);const d=n.data.groups||n.data.drawcalls||n.data.offsets;if(d!==void 0)for(let f=0,h=d.length;f!==h;++f){const p=d[f];s.addGroup(p.start,p.count,p.materialIndex)}const u=n.data.boundingSphere;if(u!==void 0){const f=new q;u.center!==void 0&&f.fromArray(u.center),s.boundingSphere=new Tr(f,u.radius)}return n.name&&(s.name=n.name),n.userData&&(s.userData=n.userData),s}});class UT extends dt{constructor(e){super(e)}load(e,t,i,r){const s=this,o=this.path===""?Cp.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||o;const a=new Dn(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(l){let c=null;try{c=JSON.parse(l)}catch(u){r!==void 0&&r(u),console.error("THREE:ObjectLoader: Can't parse "+e+".",u.message);return}const d=c.metadata;if(d===void 0||d.type===void 0||d.type.toLowerCase()==="geometry"){console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(c,t)},i,r)}parse(e,t){const i=this.parseAnimations(e.animations),r=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,r),o=this.parseImages(e.images,function(){t!==void 0&&t(c)}),a=this.parseTextures(e.textures,o),l=this.parseMaterials(e.materials,a),c=this.parseObject(e.object,s,l,i),d=this.parseSkeletons(e.skeletons,c);if(this.bindSkeletons(c,d),t!==void 0){let u=!1;for(const f in o)if(o[f]instanceof HTMLImageElement){u=!0;break}u===!1&&t(c)}return c}parseShapes(e){const t={};if(e!==void 0)for(let i=0,r=e.length;i<r;i++){const s=new hr().fromJSON(e[i]);t[s.uuid]=s}return t}parseSkeletons(e,t){const i={},r={};if(t.traverse(function(s){s.isBone&&(r[s.uuid]=s)}),e!==void 0)for(let s=0,o=e.length;s<o;s++){const a=new Za().fromJSON(e[s],r);i[a.uuid]=a}return i}parseGeometries(e,t){const i={};let r;if(e!==void 0){const s=new Ld;for(let o=0,a=e.length;o<a;o++){let l;const c=e[o];switch(c.type){case"PlaneGeometry":case"PlaneBufferGeometry":l=new Yt[c.type](c.width,c.height,c.widthSegments,c.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":l=new Yt[c.type](c.width,c.height,c.depth,c.widthSegments,c.heightSegments,c.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":l=new Yt[c.type](c.radius,c.segments,c.thetaStart,c.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":l=new Yt[c.type](c.radiusTop,c.radiusBottom,c.height,c.radialSegments,c.heightSegments,c.openEnded,c.thetaStart,c.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":l=new Yt[c.type](c.radius,c.height,c.radialSegments,c.heightSegments,c.openEnded,c.thetaStart,c.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":l=new Yt[c.type](c.radius,c.widthSegments,c.heightSegments,c.phiStart,c.phiLength,c.thetaStart,c.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":l=new Yt[c.type](c.radius,c.detail);break;case"RingGeometry":case"RingBufferGeometry":l=new Yt[c.type](c.innerRadius,c.outerRadius,c.thetaSegments,c.phiSegments,c.thetaStart,c.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":l=new Yt[c.type](c.radius,c.tube,c.radialSegments,c.tubularSegments,c.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":l=new Yt[c.type](c.radius,c.tube,c.tubularSegments,c.radialSegments,c.p,c.q);break;case"TubeGeometry":case"TubeBufferGeometry":l=new Yt[c.type](new R0[c.path.type]().fromJSON(c.path),c.tubularSegments,c.radius,c.radialSegments,c.closed);break;case"LatheGeometry":case"LatheBufferGeometry":l=new Yt[c.type](c.points,c.segments,c.phiStart,c.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":l=new Yt[c.type](c.vertices,c.indices,c.radius,c.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":r=[];for(let u=0,f=c.shapes.length;u<f;u++){const h=t[c.shapes[u]];r.push(h)}l=new Yt[c.type](r,c.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":r=[];for(let u=0,f=c.shapes.length;u<f;u++){const h=t[c.shapes[u]];r.push(h)}const d=c.options.extrudePath;d!==void 0&&(c.options.extrudePath=new R0[d.type]().fromJSON(d)),l=new Yt[c.type](r,c.options);break;case"BufferGeometry":case"InstancedBufferGeometry":l=s.parse(c);break;case"Geometry":console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+c.type+'"');continue}l.uuid=c.uuid,c.name!==void 0&&(l.name=c.name),l.isBufferGeometry===!0&&c.userData!==void 0&&(l.userData=c.userData),i[c.uuid]=l}}return i}parseMaterials(e,t){const i={},r={};if(e!==void 0){const s=new Td;s.setTextures(t);for(let o=0,a=e.length;o<a;o++){const l=e[o];if(l.type==="MultiMaterial"){const c=[];for(let d=0;d<l.materials.length;d++){const u=l.materials[d];i[u.uuid]===void 0&&(i[u.uuid]=s.parse(u)),c.push(i[u.uuid])}r[l.uuid]=c}else i[l.uuid]===void 0&&(i[l.uuid]=s.parse(l)),r[l.uuid]=i[l.uuid]}}return r}parseAnimations(e){const t={};if(e!==void 0)for(let i=0;i<e.length;i++){const r=e[i],s=gn.parse(r);t[s.uuid]=s}return t}parseImages(e,t){const i=this,r={};let s;function o(l){return i.manager.itemStart(l),s.load(l,function(){i.manager.itemEnd(l)},void 0,function(){i.manager.itemError(l),i.manager.itemEnd(l)})}function a(l){if(typeof l=="string"){const c=l,d=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:i.resourcePath+c;return o(d)}else return l.data?{data:Ma(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){const l=new Ap(t);s=new Fo(l),s.setCrossOrigin(this.crossOrigin);for(let c=0,d=e.length;c<d;c++){const u=e[c],f=u.url;if(Array.isArray(f)){r[u.uuid]=[];for(let h=0,p=f.length;h<p;h++){const x=f[h],m=a(x);m!==null&&(m instanceof HTMLImageElement?r[u.uuid].push(m):r[u.uuid].push(new Fi(m.data,m.width,m.height)))}}else{const h=a(u.url);h!==null&&(r[u.uuid]=h)}}}return r}parseTextures(e,t){function i(s,o){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),o[s])}const r={};if(e!==void 0)for(let s=0,o=e.length;s<o;s++){const a=e[s];a.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),t[a.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",a.image);let l;const c=t[a.image];Array.isArray(c)?(l=new ui(c),c.length===6&&(l.needsUpdate=!0)):(c&&c.data?l=new Fi(c.data,c.width,c.height):l=new ft(c),c&&(l.needsUpdate=!0)),l.uuid=a.uuid,a.name!==void 0&&(l.name=a.name),a.mapping!==void 0&&(l.mapping=i(a.mapping,GT)),a.offset!==void 0&&l.offset.fromArray(a.offset),a.repeat!==void 0&&l.repeat.fromArray(a.repeat),a.center!==void 0&&l.center.fromArray(a.center),a.rotation!==void 0&&(l.rotation=a.rotation),a.wrap!==void 0&&(l.wrapS=i(a.wrap[0],q1),l.wrapT=i(a.wrap[1],q1)),a.format!==void 0&&(l.format=a.format),a.type!==void 0&&(l.type=a.type),a.encoding!==void 0&&(l.encoding=a.encoding),a.minFilter!==void 0&&(l.minFilter=i(a.minFilter,z1)),a.magFilter!==void 0&&(l.magFilter=i(a.magFilter,z1)),a.anisotropy!==void 0&&(l.anisotropy=a.anisotropy),a.flipY!==void 0&&(l.flipY=a.flipY),a.premultiplyAlpha!==void 0&&(l.premultiplyAlpha=a.premultiplyAlpha),a.unpackAlignment!==void 0&&(l.unpackAlignment=a.unpackAlignment),r[a.uuid]=l}return r}parseObject(e,t,i,r){let s;function o(d){return t[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",d),t[d]}function a(d){if(d!==void 0){if(Array.isArray(d)){const u=[];for(let f=0,h=d.length;f<h;f++){const p=d[f];i[p]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",p),u.push(i[p])}return u}return i[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",d),i[d]}}let l,c;switch(e.type){case"Scene":s=new Sp,e.background!==void 0&&Number.isInteger(e.background)&&(s.background=new Ue(e.background)),e.fog!==void 0&&(e.fog.type==="Fog"?s.fog=new Vd(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(s.fog=new Hd(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":s=new Pt(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(s.focus=e.focus),e.zoom!==void 0&&(s.zoom=e.zoom),e.filmGauge!==void 0&&(s.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(s.filmOffset=e.filmOffset),e.view!==void 0&&(s.view=Object.assign({},e.view));break;case"OrthographicCamera":s=new Bo(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(s.zoom=e.zoom),e.view!==void 0&&(s.view=Object.assign({},e.view));break;case"AmbientLight":s=new Sd(e.color,e.intensity);break;case"DirectionalLight":s=new Md(e.color,e.intensity);break;case"PointLight":s=new wd(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":s=new Ed(e.color,e.intensity,e.width,e.height);break;case"SpotLight":s=new _d(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":s=new bd(e.color,e.groundColor,e.intensity);break;case"LightProbe":s=new Rn().fromJSON(e);break;case"SkinnedMesh":l=o(e.geometry),c=a(e.material),s=new Xa(l,c),e.bindMode!==void 0&&(s.bindMode=e.bindMode),e.bindMatrix!==void 0&&s.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(s.skeleton=e.skeleton);break;case"Mesh":l=o(e.geometry),c=a(e.material),s=new gt(l,c);break;case"InstancedMesh":l=o(e.geometry),c=a(e.material);const d=e.count,u=e.instanceMatrix;s=new Kl(l,c,d),s.instanceMatrix=new Ze(new Float32Array(u.array),16);break;case"LOD":s=new ja;break;case"Line":s=new In(o(e.geometry),a(e.material));break;case"LineLoop":s=new Ql(o(e.geometry),a(e.material));break;case"LineSegments":s=new tn(o(e.geometry),a(e.material));break;case"PointCloud":case"Points":s=new Io(o(e.geometry),a(e.material));break;case"Sprite":s=new $a(a(e.material));break;case"Group":s=new ar;break;case"Bone":s=new Ya;break;default:s=new We}if(s.uuid=e.uuid,e.name!==void 0&&(s.name=e.name),e.matrix!==void 0?(s.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(s.matrixAutoUpdate=e.matrixAutoUpdate),s.matrixAutoUpdate&&s.matrix.decompose(s.position,s.quaternion,s.scale)):(e.position!==void 0&&s.position.fromArray(e.position),e.rotation!==void 0&&s.rotation.fromArray(e.rotation),e.quaternion!==void 0&&s.quaternion.fromArray(e.quaternion),e.scale!==void 0&&s.scale.fromArray(e.scale)),e.castShadow!==void 0&&(s.castShadow=e.castShadow),e.receiveShadow!==void 0&&(s.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(s.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(s.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(s.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&s.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(s.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(s.visible=e.visible),e.frustumCulled!==void 0&&(s.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(s.renderOrder=e.renderOrder),e.userData!==void 0&&(s.userData=e.userData),e.layers!==void 0&&(s.layers.mask=e.layers),e.children!==void 0){const d=e.children;for(let u=0;u<d.length;u++)s.add(this.parseObject(d[u],t,i,r))}if(e.animations!==void 0){const d=e.animations;for(let u=0;u<d.length;u++){const f=d[u];s.animations.push(r[f])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(s.autoUpdate=e.autoUpdate);const d=e.levels;for(let u=0;u<d.length;u++){const f=d[u],h=s.getObjectByProperty("uuid",f.object);h!==void 0&&s.addLevel(h,f.distance)}}return s}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(i){if(i.isSkinnedMesh===!0&&i.skeleton!==void 0){const r=t[i.skeleton];r===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",i.skeleton):i.bind(r,i.bindMatrix)}})}setTexturePath(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}}const GT={UVMapping:Bd,CubeReflectionMapping:bc,CubeRefractionMapping:_c,EquirectangularReflectionMapping:jl,EquirectangularRefractionMapping:Xl,CubeUVReflectionMapping:Yo,CubeUVRefractionMapping:wc},q1={RepeatWrapping:Ia,ClampToEdgeWrapping:Zt,MirroredRepeatWrapping:Da},z1={NearestFilter:Dt,NearestMipmapNearestFilter:Yl,NearestMipmapLinearFilter:Zl,LinearFilter:zt,LinearMipmapNearestFilter:xp,LinearMipmapLinearFilter:Zo};function O0(n){typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),dt.call(this,n),this.options={premultiplyAlpha:"none"}}O0.prototype=Object.assign(Object.create(dt.prototype),{constructor:O0,isImageBitmapLoader:!0,setOptions:function(e){return this.options=e,this},load:function(n,e,t,i){n===void 0&&(n=""),this.path!==void 0&&(n=this.path+n),n=this.manager.resolveURL(n);const r=this,s=_s.get(n);if(s!==void 0)return r.manager.itemStart(n),setTimeout(function(){e&&e(s),r.manager.itemEnd(n)},0),s;const o={};o.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",fetch(n,o).then(function(a){return a.blob()}).then(function(a){return createImageBitmap(a,r.options)}).then(function(a){_s.add(n,a),e&&e(a),r.manager.itemEnd(n)}).catch(function(a){i&&i(a),r.manager.itemError(n),r.manager.itemEnd(n)}),r.manager.itemStart(n)}});function Rp(){this.type="ShapePath",this.color=new Ue,this.subPaths=[],this.currentPath=null}Object.assign(Rp.prototype,{moveTo:function(n,e){return this.currentPath=new Vn,this.subPaths.push(this.currentPath),this.currentPath.moveTo(n,e),this},lineTo:function(n,e){return this.currentPath.lineTo(n,e),this},quadraticCurveTo:function(n,e,t,i){return this.currentPath.quadraticCurveTo(n,e,t,i),this},bezierCurveTo:function(n,e,t,i,r,s){return this.currentPath.bezierCurveTo(n,e,t,i,r,s),this},splineThru:function(n){return this.currentPath.splineThru(n),this},toShapes:function(n,e){function t(v){const g=[];for(let w=0,y=v.length;w<y;w++){const M=v[w],b=new hr;b.curves=M.curves,g.push(b)}return g}function i(v,g){const w=g.length;let y=!1;for(let M=w-1,b=0;b<w;M=b++){let _=g[M],S=g[b],E=S.x-_.x,R=S.y-_.y;if(Math.abs(R)>Number.EPSILON){if(R<0&&(_=g[b],E=-E,S=g[M],R=-R),v.y<_.y||v.y>S.y)continue;if(v.y===_.y){if(v.x===_.x)return!0}else{const I=R*(v.x-_.x)-E*(v.y-_.y);if(I===0)return!0;if(I<0)continue;y=!y}}else{if(v.y!==_.y)continue;if(S.x<=v.x&&v.x<=_.x||_.x<=v.x&&v.x<=S.x)return!0}}return y}const r=zi.isClockWise,s=this.subPaths;if(s.length===0)return[];if(e===!0)return t(s);let o,a,l;const c=[];if(s.length===1)return a=s[0],l=new hr,l.curves=a.curves,c.push(l),c;let d=!r(s[0].getPoints());d=n?!d:d;const u=[],f=[];let h=[],p=0,x;f[p]=void 0,h[p]=[];for(let v=0,g=s.length;v<g;v++)a=s[v],x=a.getPoints(),o=r(x),o=n?!o:o,o?(!d&&f[p]&&p++,f[p]={s:new hr,p:x},f[p].s.curves=a.curves,d&&p++,h[p]=[]):h[p].push({h:a,p:x[0]});if(!f[0])return t(s);if(f.length>1){let v=!1;const g=[];for(let w=0,y=f.length;w<y;w++)u[w]=[];for(let w=0,y=f.length;w<y;w++){const M=h[w];for(let b=0;b<M.length;b++){const _=M[b];let S=!0;for(let E=0;E<f.length;E++)i(_.p,f[E].p)&&(w!==E&&g.push({froms:w,tos:E,hole:b}),S?(S=!1,u[E].push(_)):v=!0);S&&u[w].push(_)}}g.length>0&&(v||(h=u))}let m;for(let v=0,g=f.length;v<g;v++){l=f[v].s,c.push(l),m=h[v];for(let w=0,y=m.length;w<y;w++)l.holes.push(m[w].h)}return c}});class qy{constructor(e){Object.defineProperty(this,"isFont",{value:!0}),this.type="Font",this.data=e}generateShapes(e,t=100){const i=[],r=kT(e,t,this.data);for(let s=0,o=r.length;s<o;s++)Array.prototype.push.apply(i,r[s].toShapes());return i}}function kT(n,e,t){const i=Array.from?Array.from(n):String(n).split(""),r=e/t.resolution,s=(t.boundingBox.yMax-t.boundingBox.yMin+t.underlineThickness)*r,o=[];let a=0,l=0;for(let c=0;c<i.length;c++){const d=i[c];if(d===`
`)a=0,l-=s;else{const u=HT(d,r,a,l,t);a+=u.offsetX,o.push(u.path)}}return o}function HT(n,e,t,i,r){const s=r.glyphs[n]||r.glyphs["?"];if(!s){console.error('THREE.Font: character "'+n+'" does not exists in font family '+r.familyName+".");return}const o=new Rp;let a,l,c,d,u,f,h,p;if(s.o){const x=s._cachedOutline||(s._cachedOutline=s.o.split(" "));for(let m=0,v=x.length;m<v;)switch(x[m++]){case"m":a=x[m++]*e+t,l=x[m++]*e+i,o.moveTo(a,l);break;case"l":a=x[m++]*e+t,l=x[m++]*e+i,o.lineTo(a,l);break;case"q":c=x[m++]*e+t,d=x[m++]*e+i,u=x[m++]*e+t,f=x[m++]*e+i,o.quadraticCurveTo(u,f,c,d);break;case"b":c=x[m++]*e+t,d=x[m++]*e+i,u=x[m++]*e+t,f=x[m++]*e+i,h=x[m++]*e+t,p=x[m++]*e+i,o.bezierCurveTo(u,f,h,p,c,d);break}}return{offsetX:s.ha*e,path:o}}function q0(n){dt.call(this,n)}q0.prototype=Object.assign(Object.create(dt.prototype),{constructor:q0,load:function(n,e,t,i){const r=this,s=new Dn(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(r.withCredentials),s.load(n,function(o){let a;try{a=JSON.parse(o)}catch{console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),a=JSON.parse(o.substring(65,o.length-2))}const l=r.parse(a);e&&e(l)},t,i)},parse:function(n){return new qy(n)}});let Ll;const Pp={getContext:function(){return Ll===void 0&&(Ll=new(window.AudioContext||window.webkitAudioContext)),Ll},setContext:function(n){Ll=n}};function Cd(n){dt.call(this,n)}Cd.prototype=Object.assign(Object.create(dt.prototype),{constructor:Cd,load:function(n,e,t,i){const r=this,s=new Dn(r.manager);s.setResponseType("arraybuffer"),s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(n,function(o){try{const a=o.slice(0);Pp.getContext().decodeAudioData(a,function(c){e(c)})}catch(a){i?i(a):console.error(a),r.manager.itemError(n)}},t,i)}});function z0(n,e,t){Rn.call(this,void 0,t);const i=new Ue().set(n),r=new Ue().set(e),s=new q(i.r,i.g,i.b),o=new q(r.r,r.g,r.b),a=Math.sqrt(Math.PI),l=a*Math.sqrt(.75);this.sh.coefficients[0].copy(s).add(o).multiplyScalar(a),this.sh.coefficients[1].copy(s).sub(o).multiplyScalar(l)}z0.prototype=Object.assign(Object.create(Rn.prototype),{constructor:z0,isHemisphereLightProbe:!0,copy:function(n){return Rn.prototype.copy.call(this,n),this},toJSON:function(n){return Rn.prototype.toJSON.call(this,n)}});function F0(n,e){Rn.call(this,void 0,e);const t=new Ue().set(n);this.sh.coefficients[0].set(t.r,t.g,t.b).multiplyScalar(2*Math.sqrt(Math.PI))}F0.prototype=Object.assign(Object.create(Rn.prototype),{constructor:F0,isAmbientLightProbe:!0,copy:function(n){return Rn.prototype.copy.call(this,n),this},toJSON:function(n){return Rn.prototype.toJSON.call(this,n)}});const F1=new tt,N1=new tt;function zy(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Pt,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Pt,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}Object.assign(zy.prototype,{update:function(n){const e=this._cache;if(e.focus!==n.focus||e.fov!==n.fov||e.aspect!==n.aspect*this.aspect||e.near!==n.near||e.far!==n.far||e.zoom!==n.zoom||e.eyeSep!==this.eyeSep){e.focus=n.focus,e.fov=n.fov,e.aspect=n.aspect*this.aspect,e.near=n.near,e.far=n.far,e.zoom=n.zoom,e.eyeSep=this.eyeSep;const i=n.projectionMatrix.clone(),r=e.eyeSep/2,s=r*e.near/e.focus,o=e.near*Math.tan(Ke.DEG2RAD*e.fov*.5)/e.zoom;let a,l;N1.elements[12]=-r,F1.elements[12]=r,a=-o*e.aspect+s,l=o*e.aspect+s,i.elements[0]=2*e.near/(l-a),i.elements[8]=(l+a)/(l-a),this.cameraL.projectionMatrix.copy(i),a=-o*e.aspect-s,l=o*e.aspect-s,i.elements[0]=2*e.near/(l-a),i.elements[8]=(l+a)/(l-a),this.cameraR.projectionMatrix.copy(i)}this.cameraL.matrixWorld.copy(n.matrixWorld).multiply(N1),this.cameraR.matrixWorld.copy(n.matrixWorld).multiply(F1)}});class Fy{constructor(e){this.autoStart=e!==void 0?e:!0,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=B1(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=B1();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function B1(){return(typeof performance>"u"?Date:performance).now()}const Or=new q,U1=new Vt,VT=new q,qr=new q;class WT extends We{constructor(){super(),this.type="AudioListener",this.context=Pp.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Fy}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,i=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Or,U1,VT),qr.set(0,0,-1).applyQuaternion(U1),t.positionX){const r=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(Or.x,r),t.positionY.linearRampToValueAtTime(Or.y,r),t.positionZ.linearRampToValueAtTime(Or.z,r),t.forwardX.linearRampToValueAtTime(qr.x,r),t.forwardY.linearRampToValueAtTime(qr.y,r),t.forwardZ.linearRampToValueAtTime(qr.z,r),t.upX.linearRampToValueAtTime(i.x,r),t.upY.linearRampToValueAtTime(i.y,r),t.upZ.linearRampToValueAtTime(i.z,r)}else t.setPosition(Or.x,Or.y,Or.z),t.setOrientation(qr.x,qr.y,qr.z,i.x,i.y,i.z)}}class Ip extends We{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const zr=new q,G1=new Vt,$T=new q,Fr=new q;class jT extends Ip{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,i){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=i,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(zr,G1,$T),Fr.set(0,0,1).applyQuaternion(G1);const t=this.panner;if(t.positionX){const i=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(zr.x,i),t.positionY.linearRampToValueAtTime(zr.y,i),t.positionZ.linearRampToValueAtTime(zr.z,i),t.orientationX.linearRampToValueAtTime(Fr.x,i),t.orientationY.linearRampToValueAtTime(Fr.y,i),t.orientationZ.linearRampToValueAtTime(Fr.z,i)}else t.setPosition(zr.x,zr.y,zr.z),t.setOrientation(Fr.x,Fr.y,Fr.z)}}class Ny{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let i=0;i<t.length;i++)e+=t[i];return e/t.length}}function Dp(n,e,t){this.binding=n,this.valueSize=t;let i,r,s;switch(e){case"quaternion":i=this._slerp,r=this._slerpAdditive,s=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(t*6),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,s=this._setAdditiveIdentityOther,this.buffer=new Array(t*5);break;default:i=this._lerp,r=this._lerpAdditive,s=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(t*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=s,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}Object.assign(Dp.prototype,{accumulate:function(n,e){const t=this.buffer,i=this.valueSize,r=n*i+i;let s=this.cumulativeWeight;if(s===0){for(let o=0;o!==i;++o)t[r+o]=t[o];s=e}else{s+=e;const o=e/s;this._mixBufferRegion(t,r,0,o,i)}this.cumulativeWeight=s},accumulateAdditive:function(n){const e=this.buffer,t=this.valueSize,i=t*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(e,i,0,n,t),this.cumulativeWeightAdditive+=n},apply:function(n){const e=this.valueSize,t=this.buffer,i=n*e+e,r=this.cumulativeWeight,s=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const a=e*this._origIndex;this._mixBufferRegion(t,i,a,1-r,e)}s>0&&this._mixBufferRegionAdditive(t,i,this._addIndex*e,1,e);for(let a=e,l=e+e;a!==l;++a)if(t[a]!==t[a+e]){o.setValue(t,i);break}},saveOriginalState:function(){const n=this.binding,e=this.buffer,t=this.valueSize,i=t*this._origIndex;n.getValue(e,i);for(let r=t,s=i;r!==s;++r)e[r]=e[i+r%t];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0},restoreOriginalState:function(){const n=this.valueSize*3;this.binding.setValue(this.buffer,n)},_setAdditiveIdentityNumeric:function(){const n=this._addIndex*this.valueSize,e=n+this.valueSize;for(let t=n;t<e;t++)this.buffer[t]=0},_setAdditiveIdentityQuaternion:function(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1},_setAdditiveIdentityOther:function(){const n=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let t=0;t<this.valueSize;t++)this.buffer[e+t]=this.buffer[n+t]},_select:function(n,e,t,i,r){if(i>=.5)for(let s=0;s!==r;++s)n[e+s]=n[t+s]},_slerp:function(n,e,t,i){Vt.slerpFlat(n,e,n,e,n,t,i)},_slerpAdditive:function(n,e,t,i,r){const s=this._workIndex*r;Vt.multiplyQuaternionsFlat(n,s,n,e,n,t),Vt.slerpFlat(n,e,n,e,n,s,i)},_lerp:function(n,e,t,i,r){const s=1-i;for(let o=0;o!==r;++o){const a=e+o;n[a]=n[a]*s+n[t+o]*i}},_lerpAdditive:function(n,e,t,i,r){for(let s=0;s!==r;++s){const o=e+s;n[o]=n[o]+n[t+s]*i}}});const Op="\\[\\]\\.:\\/",XT=new RegExp("["+Op+"]","g"),qp="[^"+Op+"]",YT="[^"+Op.replace("\\.","")+"]",ZT=/((?:WC+[\/:])*)/.source.replace("WC",qp),JT=/(WCOD+)?/.source.replace("WCOD",YT),KT=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",qp),QT=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",qp),eA=new RegExp("^"+ZT+JT+KT+QT+"$"),tA=["material","materials","bones"];function By(n,e,t){const i=t||Wt.parseTrackName(e);this._targetGroup=n,this._bindings=n.subscribe_(e,i)}Object.assign(By.prototype,{getValue:function(n,e){this.bind();const t=this._targetGroup.nCachedObjects_,i=this._bindings[t];i!==void 0&&i.getValue(n,e)},setValue:function(n,e){const t=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=t.length;i!==r;++i)t[i].setValue(n,e)},bind:function(){const n=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=n.length;e!==t;++e)n[e].bind()},unbind:function(){const n=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=n.length;e!==t;++e)n[e].unbind()}});function Wt(n,e,t){this.path=e,this.parsedPath=t||Wt.parseTrackName(e),this.node=Wt.findNode(n,this.parsedPath.nodeName)||n,this.rootNode=n}Object.assign(Wt,{Composite:By,create:function(n,e,t){return n&&n.isAnimationObjectGroup?new Wt.Composite(n,e,t):new Wt(n,e,t)},sanitizeNodeName:function(n){return n.replace(/\s/g,"_").replace(XT,"")},parseTrackName:function(n){const e=eA.exec(n);if(!e)throw new Error("PropertyBinding: Cannot parse trackName: "+n);const t={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=t.nodeName&&t.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const r=t.nodeName.substring(i+1);tA.indexOf(r)!==-1&&(t.nodeName=t.nodeName.substring(0,i),t.objectName=r)}if(t.propertyName===null||t.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+n);return t},findNode:function(n,e){if(!e||e===""||e==="."||e===-1||e===n.name||e===n.uuid)return n;if(n.skeleton){const t=n.skeleton.getBoneByName(e);if(t!==void 0)return t}if(n.children){const t=function(r){for(let s=0;s<r.length;s++){const o=r[s];if(o.name===e||o.uuid===e)return o;const a=t(o.children);if(a)return a}return null},i=t(n.children);if(i)return i}return null}});Object.assign(Wt.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(e,t){e[t]=this.node[this.propertyName]},function(e,t){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)e[t++]=i[r]},function(e,t){e[t]=this.resolvedProperty[this.propertyIndex]},function(e,t){this.resolvedProperty.toArray(e,t)}],SetterByBindingTypeAndVersioning:[[function(e,t){this.targetObject[this.propertyName]=e[t]},function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=e[t++]},function(e,t){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=e[t++];this.targetObject.needsUpdate=!0},function(e,t){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty[this.propertyIndex]=e[t]},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty.fromArray(e,t)},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(e,t){this.bind(),this.getValue(e,t)},setValue:function(e,t){this.bind(),this.setValue(e,t)},bind:function(){let n=this.node;const e=this.parsedPath,t=e.objectName,i=e.propertyName;let r=e.propertyIndex;if(n||(n=Wt.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=n),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!n){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(t){let l=e.objectIndex;switch(t){case"materials":if(!n.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!n.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}n=n.material.materials;break;case"bones":if(!n.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}n=n.skeleton.bones;for(let c=0;c<n.length;c++)if(n[c].name===l){l=c;break}break;default:if(n[t]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}n=n[t]}if(l!==void 0){if(n[l]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,n);return}n=n[l]}}const s=n[i];if(s===void 0){const l=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+l+"."+i+" but it wasn't found.",n);return}let o=this.Versioning.None;this.targetObject=n,n.needsUpdate!==void 0?o=this.Versioning.NeedsUpdate:n.matrixWorldNeedsUpdate!==void 0&&(o=this.Versioning.MatrixWorldNeedsUpdate);let a=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!n.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(n.geometry.isBufferGeometry){if(!n.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}n.morphTargetDictionary[r]!==void 0&&(r=n.morphTargetDictionary[r])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}a=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=r}else s.fromArray!==void 0&&s.toArray!==void 0?(a=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(a=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=i;this.getValue=this.GetterByBindingType[a],this.setValue=this.SetterByBindingTypeAndVersioning[a][o]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}});Object.assign(Wt.prototype,{_getValue_unbound:Wt.prototype.getValue,_setValue_unbound:Wt.prototype.setValue});function Uy(){this.uuid=Ke.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const n={};this._indicesByUUID=n;for(let t=0,i=arguments.length;t!==i;++t)n[arguments[t].uuid]=t;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}Object.assign(Uy.prototype,{isAnimationObjectGroup:!0,add:function(){const n=this._objects,e=this._indicesByUUID,t=this._paths,i=this._parsedPaths,r=this._bindings,s=r.length;let o,a=n.length,l=this.nCachedObjects_;for(let c=0,d=arguments.length;c!==d;++c){const u=arguments[c],f=u.uuid;let h=e[f];if(h===void 0){h=a++,e[f]=h,n.push(u);for(let p=0,x=s;p!==x;++p)r[p].push(new Wt(u,t[p],i[p]))}else if(h<l){o=n[h];const p=--l,x=n[p];e[x.uuid]=h,n[h]=x,e[f]=p,n[p]=u;for(let m=0,v=s;m!==v;++m){const g=r[m],w=g[p];let y=g[h];g[h]=w,y===void 0&&(y=new Wt(u,t[m],i[m])),g[p]=y}}else n[h]!==o&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l},remove:function(){const n=this._objects,e=this._indicesByUUID,t=this._bindings,i=t.length;let r=this.nCachedObjects_;for(let s=0,o=arguments.length;s!==o;++s){const a=arguments[s],l=a.uuid,c=e[l];if(c!==void 0&&c>=r){const d=r++,u=n[d];e[u.uuid]=c,n[c]=u,e[l]=d,n[d]=a;for(let f=0,h=i;f!==h;++f){const p=t[f],x=p[d],m=p[c];p[c]=x,p[d]=m}}}this.nCachedObjects_=r},uncache:function(){const n=this._objects,e=this._indicesByUUID,t=this._bindings,i=t.length;let r=this.nCachedObjects_,s=n.length;for(let o=0,a=arguments.length;o!==a;++o){const l=arguments[o],c=l.uuid,d=e[c];if(d!==void 0)if(delete e[c],d<r){const u=--r,f=n[u],h=--s,p=n[h];e[f.uuid]=d,n[d]=f,e[p.uuid]=u,n[u]=p,n.pop();for(let x=0,m=i;x!==m;++x){const v=t[x],g=v[u],w=v[h];v[d]=g,v[u]=w,v.pop()}}else{const u=--s,f=n[u];u>0&&(e[f.uuid]=d),n[d]=f,n.pop();for(let h=0,p=i;h!==p;++h){const x=t[h];x[d]=x[u],x.pop()}}}this.nCachedObjects_=r},subscribe_:function(n,e){const t=this._bindingsIndicesByPath;let i=t[n];const r=this._bindings;if(i!==void 0)return r[i];const s=this._paths,o=this._parsedPaths,a=this._objects,l=a.length,c=this.nCachedObjects_,d=new Array(l);i=r.length,t[n]=i,s.push(n),o.push(e),r.push(d);for(let u=c,f=a.length;u!==f;++u){const h=a[u];d[u]=new Wt(h,n,e)}return d},unsubscribe_:function(n){const e=this._bindingsIndicesByPath,t=e[n];if(t!==void 0){const i=this._paths,r=this._parsedPaths,s=this._bindings,o=s.length-1,a=s[o],l=n[o];e[l]=t,s[t]=a,s.pop(),r[t]=r[o],r.pop(),i[t]=i[o],i.pop()}}});class nA{constructor(e,t,i=null,r=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=i,this.blendMode=r;const s=t.tracks,o=s.length,a=new Array(o),l={endingStart:Xr,endingEnd:Xr};for(let c=0;c!==o;++c){const d=s[c].createInterpolant(null);a[c]=d,d.settings=l}this._interpolantSettings=l,this._interpolants=a,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=ay,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,i){if(e.fadeOut(t),this.fadeIn(t),i){const r=this._clip.duration,s=e._clip.duration,o=s/r,a=r/s;e.warp(1,o,t),this.warp(a,1,t)}return this}crossFadeTo(e,t,i){return e.crossFadeFrom(this,t,i)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,i){const r=this._mixer,s=r.time,o=this.timeScale;let a=this._timeScaleInterpolant;a===null&&(a=r._lendControlInterpolant(),this._timeScaleInterpolant=a);const l=a.parameterPositions,c=a.sampleValues;return l[0]=s,l[1]=s+i,c[0]=e/o,c[1]=t/o,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,i,r){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const l=(e-s)*i;if(l<0||i===0)return;this._startTime=null,t=i*l}t*=this._updateTimeScale(e);const o=this._updateTime(t),a=this._updateWeight(e);if(a>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case gp:for(let d=0,u=l.length;d!==u;++d)l[d].evaluate(o),c[d].accumulateAdditive(a);break;case Ud:default:for(let d=0,u=l.length;d!==u;++d)l[d].evaluate(o),c[d].accumulate(r,a)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const i=this._weightInterpolant;if(i!==null){const r=i.evaluate(e)[0];t*=r,e>i.parameterPositions[1]&&(this.stopFading(),r===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const i=this._timeScaleInterpolant;if(i!==null){const r=i.evaluate(e)[0];t*=r,e>i.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,i=this.loop;let r=this.time+e,s=this._loopCount;const o=i===cy;if(e===0)return s===-1?r:o&&(s&1)===1?t-r:r;if(i===oy){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(r>=t)r=t;else if(r<0)r=0;else{this.time=r;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),r>=t||r<0){const a=Math.floor(r/t);r-=t*a,s+=Math.abs(a);const l=this.repetitions-s;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=e>0?t:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const c=e<0;this._setEndings(c,!c,o)}else this._setEndings(!1,!1,o);this._loopCount=s,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=r;if(o&&(s&1)===1)return t-r}return r}_setEndings(e,t,i){const r=this._interpolantSettings;i?(r.endingStart=Yr,r.endingEnd=Yr):(e?r.endingStart=this.zeroSlopeAtStart?Yr:Xr:r.endingStart=Fa,t?r.endingEnd=this.zeroSlopeAtEnd?Yr:Xr:r.endingEnd=Fa)}_scheduleFading(e,t,i){const r=this._mixer,s=r.time;let o=this._weightInterpolant;o===null&&(o=r._lendControlInterpolant(),this._weightInterpolant=o);const a=o.parameterPositions,l=o.sampleValues;return a[0]=s,l[0]=t,a[1]=s+e,l[1]=i,this}}function N0(n){this._root=n,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}N0.prototype=Object.assign(Object.create(Gi.prototype),{constructor:N0,_bindAction:function(n,e){const t=n._localRoot||this._root,i=n._clip.tracks,r=i.length,s=n._propertyBindings,o=n._interpolants,a=t.uuid,l=this._bindingsByRootAndName;let c=l[a];c===void 0&&(c={},l[a]=c);for(let d=0;d!==r;++d){const u=i[d],f=u.name;let h=c[f];if(h!==void 0)s[d]=h;else{if(h=s[d],h!==void 0){h._cacheIndex===null&&(++h.referenceCount,this._addInactiveBinding(h,a,f));continue}const p=e&&e._propertyBindings[d].binding.parsedPath;h=new Dp(Wt.create(t,f,p),u.ValueTypeName,u.getValueSize()),++h.referenceCount,this._addInactiveBinding(h,a,f),s[d]=h}o[d].resultBuffer=h.buffer}},_activateAction:function(n){if(!this._isActiveAction(n)){if(n._cacheIndex===null){const t=(n._localRoot||this._root).uuid,i=n._clip.uuid,r=this._actionsByClip[i];this._bindAction(n,r&&r.knownActions[0]),this._addInactiveAction(n,i,t)}const e=n._propertyBindings;for(let t=0,i=e.length;t!==i;++t){const r=e[t];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(n)}},_deactivateAction:function(n){if(this._isActiveAction(n)){const e=n._propertyBindings;for(let t=0,i=e.length;t!==i;++t){const r=e[t];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(n)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const n=this;this.stats={actions:{get total(){return n._actions.length},get inUse(){return n._nActiveActions}},bindings:{get total(){return n._bindings.length},get inUse(){return n._nActiveBindings}},controlInterpolants:{get total(){return n._controlInterpolants.length},get inUse(){return n._nActiveControlInterpolants}}}},_isActiveAction:function(n){const e=n._cacheIndex;return e!==null&&e<this._nActiveActions},_addInactiveAction:function(n,e,t){const i=this._actions,r=this._actionsByClip;let s=r[e];if(s===void 0)s={knownActions:[n],actionByRoot:{}},n._byClipCacheIndex=0,r[e]=s;else{const o=s.knownActions;n._byClipCacheIndex=o.length,o.push(n)}n._cacheIndex=i.length,i.push(n),s.actionByRoot[t]=n},_removeInactiveAction:function(n){const e=this._actions,t=e[e.length-1],i=n._cacheIndex;t._cacheIndex=i,e[i]=t,e.pop(),n._cacheIndex=null;const r=n._clip.uuid,s=this._actionsByClip,o=s[r],a=o.knownActions,l=a[a.length-1],c=n._byClipCacheIndex;l._byClipCacheIndex=c,a[c]=l,a.pop(),n._byClipCacheIndex=null;const d=o.actionByRoot,u=(n._localRoot||this._root).uuid;delete d[u],a.length===0&&delete s[r],this._removeInactiveBindingsForAction(n)},_removeInactiveBindingsForAction:function(n){const e=n._propertyBindings;for(let t=0,i=e.length;t!==i;++t){const r=e[t];--r.referenceCount===0&&this._removeInactiveBinding(r)}},_lendAction:function(n){const e=this._actions,t=n._cacheIndex,i=this._nActiveActions++,r=e[i];n._cacheIndex=i,e[i]=n,r._cacheIndex=t,e[t]=r},_takeBackAction:function(n){const e=this._actions,t=n._cacheIndex,i=--this._nActiveActions,r=e[i];n._cacheIndex=i,e[i]=n,r._cacheIndex=t,e[t]=r},_addInactiveBinding:function(n,e,t){const i=this._bindingsByRootAndName,r=this._bindings;let s=i[e];s===void 0&&(s={},i[e]=s),s[t]=n,n._cacheIndex=r.length,r.push(n)},_removeInactiveBinding:function(n){const e=this._bindings,t=n.binding,i=t.rootNode.uuid,r=t.path,s=this._bindingsByRootAndName,o=s[i],a=e[e.length-1],l=n._cacheIndex;a._cacheIndex=l,e[l]=a,e.pop(),delete o[r],Object.keys(o).length===0&&delete s[i]},_lendBinding:function(n){const e=this._bindings,t=n._cacheIndex,i=this._nActiveBindings++,r=e[i];n._cacheIndex=i,e[i]=n,r._cacheIndex=t,e[t]=r},_takeBackBinding:function(n){const e=this._bindings,t=n._cacheIndex,i=--this._nActiveBindings,r=e[i];n._cacheIndex=i,e[i]=n,r._cacheIndex=t,e[t]=r},_lendControlInterpolant:function(){const n=this._controlInterpolants,e=this._nActiveControlInterpolants++;let t=n[e];return t===void 0&&(t=new sc(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),t.__cacheIndex=e,n[e]=t),t},_takeBackControlInterpolant:function(n){const e=this._controlInterpolants,t=n.__cacheIndex,i=--this._nActiveControlInterpolants,r=e[i];n.__cacheIndex=i,e[i]=n,r.__cacheIndex=t,e[t]=r},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(n,e,t){const i=e||this._root,r=i.uuid;let s=typeof n=="string"?gn.findByName(i,n):n;const o=s!==null?s.uuid:n,a=this._actionsByClip[o];let l=null;if(t===void 0&&(s!==null?t=s.blendMode:t=Ud),a!==void 0){const d=a.actionByRoot[r];if(d!==void 0&&d.blendMode===t)return d;l=a.knownActions[0],s===null&&(s=l._clip)}if(s===null)return null;const c=new nA(this,s,e,t);return this._bindAction(c,l),this._addInactiveAction(c,o,r),c},existingAction:function(n,e){const t=e||this._root,i=t.uuid,r=typeof n=="string"?gn.findByName(t,n):n,s=r?r.uuid:n,o=this._actionsByClip[s];return o!==void 0&&o.actionByRoot[i]||null},stopAllAction:function(){const n=this._actions,e=this._nActiveActions;for(let t=e-1;t>=0;--t)n[t].stop();return this},update:function(n){n*=this.timeScale;const e=this._actions,t=this._nActiveActions,i=this.time+=n,r=Math.sign(n),s=this._accuIndex^=1;for(let l=0;l!==t;++l)e[l]._update(i,n,r,s);const o=this._bindings,a=this._nActiveBindings;for(let l=0;l!==a;++l)o[l].apply(s);return this},setTime:function(n){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(n)},getRoot:function(){return this._root},uncacheClip:function(n){const e=this._actions,t=n.uuid,i=this._actionsByClip,r=i[t];if(r!==void 0){const s=r.knownActions;for(let o=0,a=s.length;o!==a;++o){const l=s[o];this._deactivateAction(l);const c=l._cacheIndex,d=e[e.length-1];l._cacheIndex=null,l._byClipCacheIndex=null,d._cacheIndex=c,e[c]=d,e.pop(),this._removeInactiveBindingsForAction(l)}delete i[t]}},uncacheRoot:function(n){const e=n.uuid,t=this._actionsByClip;for(const s in t){const o=t[s].actionByRoot,a=o[e];a!==void 0&&(this._deactivateAction(a),this._removeInactiveAction(a))}const i=this._bindingsByRootAndName,r=i[e];if(r!==void 0)for(const s in r){const o=r[s];o.restoreOriginalState(),this._removeInactiveBinding(o)}},uncacheAction:function(n,e){const t=this.existingAction(n,e);t!==null&&(this._deactivateAction(t),this._removeInactiveAction(t))}});class $d{constructor(e){typeof e=="string"&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new $d(this.value.clone===void 0?this.value:this.value.clone())}}function B0(n,e,t){yn.call(this,n,e),this.meshPerAttribute=t||1}B0.prototype=Object.assign(Object.create(yn.prototype),{constructor:B0,isInstancedInterleavedBuffer:!0,copy:function(n){return yn.prototype.copy.call(this,n),this.meshPerAttribute=n.meshPerAttribute,this},clone:function(n){const e=yn.prototype.clone.call(this,n);return e.meshPerAttribute=this.meshPerAttribute,e},toJSON:function(n){const e=yn.prototype.toJSON.call(this,n);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}});function zp(n,e,t,i,r){this.buffer=n,this.type=e,this.itemSize=t,this.elementSize=i,this.count=r,this.version=0}Object.defineProperty(zp.prototype,"needsUpdate",{set:function(n){n===!0&&this.version++}});Object.assign(zp.prototype,{isGLBufferAttribute:!0,setBuffer:function(n){return this.buffer=n,this},setType:function(n,e){return this.type=n,this.elementSize=e,this},setItemSize:function(n){return this.itemSize=n,this},setCount:function(n){return this.count=n,this}});function Fp(n,e,t,i){this.ray=new Ko(n,e),this.near=t||0,this.far=i||1/0,this.camera=null,this.layers=new _p,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function k1(n,e){return n.distance-e.distance}function U0(n,e,t,i){if(n.layers.test(e.layers)&&n.raycast(e,t),i===!0){const r=n.children;for(let s=0,o=r.length;s<o;s++)U0(r[s],e,t,!0)}}Object.assign(Fp.prototype,{set:function(n,e){this.ray.set(n,e)},setFromCamera:function(n,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(n.x,n.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e&&e.isOrthographicCamera?(this.ray.origin.set(n.x,n.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)},intersectObject:function(n,e,t){const i=t||[];return U0(n,this,i,e),i.sort(k1),i},intersectObjects:function(n,e,t){const i=t||[];if(Array.isArray(n)===!1)return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),i;for(let r=0,s=n.length;r<s;r++)U0(n[r],this,i,e);return i.sort(k1),i}});class iA{constructor(e=1,t=0,i=0){return this.radius=e,this.phi=t,this.theta=i,this}set(e,t,i){return this.radius=e,this.phi=t,this.theta=i,this}clone(){return new this.constructor().copy(this)}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+t*t+i*i),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,i),this.phi=Math.acos(Ke.clamp(t/this.radius,-1,1))),this}}class rA{constructor(e,t,i){return this.radius=e!==void 0?e:1,this.theta=t!==void 0?t:0,this.y=i!==void 0?i:0,this}set(e,t,i){return this.radius=e,this.theta=t,this.y=i,this}clone(){return new this.constructor().copy(this)}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+i*i),this.theta=Math.atan2(e,i),this.y=t,this}}const H1=new Ee;class Gy{constructor(e,t){Object.defineProperty(this,"isBox2",{value:!0}),this.min=e!==void 0?e:new Ee(1/0,1/0),this.max=t!==void 0?t:new Ee(-1/0,-1/0)}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=H1.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return e===void 0&&(console.warn("THREE.Box2: .getCenter() target is now required"),e=new Ee),this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return e===void 0&&(console.warn("THREE.Box2: .getSize() target is now required"),e=new Ee),this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t===void 0&&(console.warn("THREE.Box2: .getParameter() target is now required"),t=new Ee),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t===void 0&&(console.warn("THREE.Box2: .clampPoint() target is now required"),t=new Ee),t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return H1.copy(e).clamp(this.min,this.max).sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const V1=new q,Cl=new q;class ky{constructor(e,t){this.start=e!==void 0?e:new q,this.end=t!==void 0?t:new q}set(e,t){return this.start.copy(e),this.end.copy(t),this}clone(){return new this.constructor().copy(this)}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e===void 0&&(console.warn("THREE.Line3: .getCenter() target is now required"),e=new q),e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e===void 0&&(console.warn("THREE.Line3: .delta() target is now required"),e=new q),e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return t===void 0&&(console.warn("THREE.Line3: .at() target is now required"),t=new q),this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){V1.subVectors(e,this.start),Cl.subVectors(this.end,this.start);const i=Cl.dot(Cl);let s=Cl.dot(V1)/i;return t&&(s=Ke.clamp(s,0,1)),s}closestPointToPoint(e,t,i){const r=this.closestPointToPointParameter(e,t);return i===void 0&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),i=new q),this.delta(i).multiplyScalar(r).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}}function cc(n){We.call(this),this.material=n,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}cc.prototype=Object.create(We.prototype);cc.prototype.constructor=cc;cc.prototype.isImmediateRenderObject=!0;const W1=new q;class sA extends We{constructor(e,t){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;const i=new Xe,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let o=0,a=1,l=32;o<l;o++,a++){const c=o/l*Math.PI*2,d=a/l*Math.PI*2;r.push(Math.cos(c),Math.sin(c),1,Math.cos(d),Math.sin(d),1)}i.setAttribute("position",new ke(r,3));const s=new wt({fog:!1,toneMapped:!1});this.cone=new tn(i,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),W1.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(W1),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const rr=new q,Rl=new tt,Uh=new tt;class Hy extends tn{constructor(e){const t=Vy(e),i=new Xe,r=[],s=[],o=new Ue(0,0,1),a=new Ue(0,1,0);for(let c=0;c<t.length;c++){const d=t[c];d.parent&&d.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),s.push(o.r,o.g,o.b),s.push(a.r,a.g,a.b))}i.setAttribute("position",new ke(r,3)),i.setAttribute("color",new ke(s,3));const l=new wt({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(i,l),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,i=this.geometry,r=i.getAttribute("position");Uh.copy(this.root.matrixWorld).invert();for(let s=0,o=0;s<t.length;s++){const a=t[s];a.parent&&a.parent.isBone&&(Rl.multiplyMatrices(Uh,a.matrixWorld),rr.setFromMatrixPosition(Rl),r.setXYZ(o,rr.x,rr.y,rr.z),Rl.multiplyMatrices(Uh,a.parent.matrixWorld),rr.setFromMatrixPosition(Rl),r.setXYZ(o+1,rr.x,rr.y,rr.z),o+=2)}i.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}function Vy(n){const e=[];n&&n.isBone&&e.push(n);for(let t=0;t<n.children.length;t++)e.push.apply(e,Vy(n.children[t]));return e}class oA extends gt{constructor(e,t,i){const r=new rc(t,4,2),s=new wn({wireframe:!0,fog:!1,toneMapped:!1});super(r,s),this.light=e,this.light.updateMatrixWorld(),this.color=i,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const aA=new q,$1=new Ue,j1=new Ue;class cA extends We{constructor(e,t,i){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i;const r=new nc(t);r.rotateY(Math.PI*.5),this.material=new wn({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=r.getAttribute("position"),o=new Float32Array(s.count*3);r.setAttribute("color",new Ze(o,3)),this.add(new gt(r,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");$1.copy(this.light.color),j1.copy(this.light.groundColor);for(let i=0,r=t.count;i<r;i++){const s=i<r/2?$1:j1;t.setXYZ(i,s.r,s.g,s.b)}t.needsUpdate=!0}e.lookAt(aA.setFromMatrixPosition(this.light.matrixWorld).negate())}}class Wy extends tn{constructor(e=10,t=10,i=4473924,r=8947848){i=new Ue(i),r=new Ue(r);const s=t/2,o=e/t,a=e/2,l=[],c=[];for(let f=0,h=0,p=-a;f<=t;f++,p+=o){l.push(-a,0,p,a,0,p),l.push(p,0,-a,p,0,a);const x=f===s?i:r;x.toArray(c,h),h+=3,x.toArray(c,h),h+=3,x.toArray(c,h),h+=3,x.toArray(c,h),h+=3}const d=new Xe;d.setAttribute("position",new ke(l,3)),d.setAttribute("color",new ke(c,3));const u=new wt({vertexColors:!0,toneMapped:!1});super(d,u),this.type="GridHelper"}}class lA extends tn{constructor(e=10,t=16,i=8,r=64,s=4473924,o=8947848){s=new Ue(s),o=new Ue(o);const a=[],l=[];for(let u=0;u<=t;u++){const f=u/t*(Math.PI*2),h=Math.sin(f)*e,p=Math.cos(f)*e;a.push(0,0,0),a.push(h,0,p);const x=u&1?s:o;l.push(x.r,x.g,x.b),l.push(x.r,x.g,x.b)}for(let u=0;u<=i;u++){const f=u&1?s:o,h=e-e/i*u;for(let p=0;p<r;p++){let x=p/r*(Math.PI*2),m=Math.sin(x)*h,v=Math.cos(x)*h;a.push(m,0,v),l.push(f.r,f.g,f.b),x=(p+1)/r*(Math.PI*2),m=Math.sin(x)*h,v=Math.cos(x)*h,a.push(m,0,v),l.push(f.r,f.g,f.b)}}const c=new Xe;c.setAttribute("position",new ke(a,3)),c.setAttribute("color",new ke(l,3));const d=new wt({vertexColors:!0,toneMapped:!1});super(c,d),this.type="PolarGridHelper"}}const X1=new q,Pl=new q,Y1=new q;class dA extends We{constructor(e,t,i){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,t===void 0&&(t=1);let r=new Xe;r.setAttribute("position",new ke([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new wt({fog:!1,toneMapped:!1});this.lightPlane=new In(r,s),this.add(this.lightPlane),r=new Xe,r.setAttribute("position",new ke([0,0,0,0,0,1],3)),this.targetLine=new In(r,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){X1.setFromMatrixPosition(this.light.matrixWorld),Pl.setFromMatrixPosition(this.light.target.matrixWorld),Y1.subVectors(Pl,X1),this.lightPlane.lookAt(Pl),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Pl),this.targetLine.scale.z=Y1.length()}}const Il=new q,Et=new di;class uA extends tn{constructor(e){const t=new Xe,i=new wt({color:16777215,vertexColors:!0,toneMapped:!1}),r=[],s=[],o={},a=new Ue(16755200),l=new Ue(16711680),c=new Ue(43775),d=new Ue(16777215),u=new Ue(3355443);f("n1","n2",a),f("n2","n4",a),f("n4","n3",a),f("n3","n1",a),f("f1","f2",a),f("f2","f4",a),f("f4","f3",a),f("f3","f1",a),f("n1","f1",a),f("n2","f2",a),f("n3","f3",a),f("n4","f4",a),f("p","n1",l),f("p","n2",l),f("p","n3",l),f("p","n4",l),f("u1","u2",c),f("u2","u3",c),f("u3","u1",c),f("c","t",d),f("p","c",u),f("cn1","cn2",u),f("cn3","cn4",u),f("cf1","cf2",u),f("cf3","cf4",u);function f(p,x,m){h(p,m),h(x,m)}function h(p,x){r.push(0,0,0),s.push(x.r,x.g,x.b),o[p]===void 0&&(o[p]=[]),o[p].push(r.length/3-1)}t.setAttribute("position",new ke(r,3)),t.setAttribute("color",new ke(s,3)),super(t,i),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update()}update(){const e=this.geometry,t=this.pointMap,i=1,r=1;Et.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),At("c",t,e,Et,0,0,-1),At("t",t,e,Et,0,0,1),At("n1",t,e,Et,-i,-r,-1),At("n2",t,e,Et,i,-r,-1),At("n3",t,e,Et,-i,r,-1),At("n4",t,e,Et,i,r,-1),At("f1",t,e,Et,-i,-r,1),At("f2",t,e,Et,i,-r,1),At("f3",t,e,Et,-i,r,1),At("f4",t,e,Et,i,r,1),At("u1",t,e,Et,i*.7,r*1.1,-1),At("u2",t,e,Et,-i*.7,r*1.1,-1),At("u3",t,e,Et,0,r*2,-1),At("cf1",t,e,Et,-i,0,1),At("cf2",t,e,Et,i,0,1),At("cf3",t,e,Et,0,-r,1),At("cf4",t,e,Et,0,r,1),At("cn1",t,e,Et,-i,0,-1),At("cn2",t,e,Et,i,0,-1),At("cn3",t,e,Et,0,-r,-1),At("cn4",t,e,Et,0,r,-1),e.getAttribute("position").needsUpdate=!0}}function At(n,e,t,i,r,s,o){Il.set(r,s,o).unproject(i);const a=e[n];if(a!==void 0){const l=t.getAttribute("position");for(let c=0,d=a.length;c<d;c++)l.setXYZ(a[c],Il.x,Il.y,Il.z)}}const Dl=new ki;class $y extends tn{constructor(e,t=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(24),s=new Xe;s.setIndex(new Ze(i,1)),s.setAttribute("position",new Ze(r,3)),super(s,new wt({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&Dl.setFromObject(this.object),Dl.isEmpty())return;const t=Dl.min,i=Dl.max,r=this.geometry.attributes.position,s=r.array;s[0]=i.x,s[1]=i.y,s[2]=i.z,s[3]=t.x,s[4]=i.y,s[5]=i.z,s[6]=t.x,s[7]=t.y,s[8]=i.z,s[9]=i.x,s[10]=t.y,s[11]=i.z,s[12]=i.x,s[13]=i.y,s[14]=t.z,s[15]=t.x,s[16]=i.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=i.x,s[22]=t.y,s[23]=t.z,r.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e){return tn.prototype.copy.call(this,e),this.object=e.object,this}}class fA extends tn{constructor(e,t=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new Xe;s.setIndex(new Ze(i,1)),s.setAttribute("position",new ke(r,3)),super(s,new wt({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}}class hA extends In{constructor(e,t=1,i=16776960){const r=i,s=[1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],o=new Xe;o.setAttribute("position",new ke(s,3)),o.computeBoundingSphere(),super(o,new wt({color:r,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const a=[1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],l=new Xe;l.setAttribute("position",new ke(a,3)),l.computeBoundingSphere(),this.add(new gt(l,new wn({color:r,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){let t=-this.plane.constant;Math.abs(t)<1e-8&&(t=1e-8),this.scale.set(.5*this.size,.5*this.size,t),this.children[0].material.side=t<0?Rt:Xo,this.lookAt(this.plane.normal),super.updateMatrixWorld(e)}}const Z1=new q;let Ol,Gh;class pA extends We{constructor(e,t,i,r,s,o){super(),this.type="ArrowHelper",e===void 0&&(e=new q(0,0,1)),t===void 0&&(t=new q(0,0,0)),i===void 0&&(i=1),r===void 0&&(r=16776960),s===void 0&&(s=.2*i),o===void 0&&(o=.2*s),Ol===void 0&&(Ol=new Xe,Ol.setAttribute("position",new ke([0,0,0,0,1,0],3)),Gh=new Oo(0,.5,1,5,1),Gh.translate(0,-.5,0)),this.position.copy(t),this.line=new In(Ol,new wt({color:r,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new gt(Gh,new wn({color:r,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(i,s,o)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{Z1.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(Z1,t)}}setLength(e,t,i){t===void 0&&(t=.2*e),i===void 0&&(i=.2*t),this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(i,t,i),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}}class jy extends tn{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],i=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],r=new Xe;r.setAttribute("position",new ke(t,3)),r.setAttribute("color",new ke(i,3));const s=new wt({vertexColors:!0,toneMapped:!1});super(r,s),this.type="AxesHelper"}}const Xy=new Float32Array(1),mA=new Int32Array(Xy.buffer),xA={toHalfFloat:function(n){Xy[0]=n;const e=mA[0];let t=e>>16&32768,i=e>>12&2047;const r=e>>23&255;return r<103?t:r>142?(t|=31744,t|=(r==255?0:1)&&e&8388607,t):r<113?(i|=2048,t|=(i>>114-r)+(i>>113-r&1),t):(t|=r-112<<10|i>>1,t+=i&1,t)}},_o=4,pr=8,ni=Math.pow(2,pr),Yy=[.125,.215,.35,.446,.526,.582],Zy=pr-_o+1+Yy.length,co=20,ai={[Qt]:0,[Mc]:1,[kd]:2,[vp]:3,[yp]:4,[bp]:5,[Gd]:6},Gr=new wn({side:Rt,depthWrite:!1,depthTest:!1}),gA=new gt(new us,Gr),kh=new Bo,{_lodPlanes:ga,_sizeLods:J1,_sigmas:ql}=bA(),K1=new Ue;let Hh=null;const kr=(1+Math.sqrt(5))/2,lo=1/kr,Q1=[new q(1,1,1),new q(-1,1,1),new q(1,1,-1),new q(-1,1,-1),new q(0,kr,lo),new q(0,kr,-lo),new q(lo,0,kr),new q(-lo,0,kr),new q(kr,lo,0),new q(-kr,lo,0)];function e3(n){const e=Math.max(n.r,n.g,n.b),t=Math.min(Math.max(Math.ceil(Math.log2(e)),-128),127);return n.multiplyScalar(Math.pow(2,-t)),(t+128)/255}class vA{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._blurMaterial=_A(co),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,r=100){Hh=this._renderer.getRenderTarget();const s=this._allocateTargets();return this._sceneToCubeUV(e,i,r,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e){return this._fromTexture(e)}fromCubemap(e){return this._fromTexture(e)}compileCubemapShader(){this._cubemapShader===null&&(this._cubemapShader=i3(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){this._equirectShader===null&&(this._equirectShader=n3(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),this._cubemapShader!==null&&this._cubemapShader.dispose(),this._equirectShader!==null&&this._equirectShader.dispose();for(let e=0;e<ga.length;e++)ga[e].dispose()}_cleanup(e){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(Hh),e.scissorTest=!1,zl(e,0,0,e.width,e.height)}_fromTexture(e){Hh=this._renderer.getRenderTarget();const t=this._allocateTargets(e);return this._textureToCubeUV(e,t),this._applyPMREM(t),this._cleanup(t),t}_allocateTargets(e){const t={magFilter:Dt,minFilter:Dt,generateMipmaps:!1,type:Jo,format:M2,encoding:yA(e)?e.encoding:kd,depthBuffer:!1},i=t3(t);return i.depthBuffer=!e,this._pingPongRenderTarget=t3(t),i}_compileMaterial(e){const t=new gt(ga[0],e);this._renderer.compile(t,kh)}_sceneToCubeUV(e,t,i,r){const a=new Pt(90,1,t,i),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],d=this._renderer,u=d.autoClear,f=d.outputEncoding,h=d.toneMapping;d.getClearColor(K1),d.toneMapping=es,d.outputEncoding=Qt,d.autoClear=!1;let p=!1;const x=e.background;if(x){if(x.isColor){Gr.color.copy(x).convertSRGBToLinear(),e.background=null;const m=e3(Gr.color);Gr.opacity=m,p=!0}}else{Gr.color.copy(K1).convertSRGBToLinear();const m=e3(Gr.color);Gr.opacity=m,p=!0}for(let m=0;m<6;m++){const v=m%3;v==0?(a.up.set(0,l[m],0),a.lookAt(c[m],0,0)):v==1?(a.up.set(0,0,l[m]),a.lookAt(0,c[m],0)):(a.up.set(0,l[m],0),a.lookAt(0,0,c[m])),zl(r,v*ni,m>2?ni:0,ni,ni),d.setRenderTarget(r),p&&d.render(gA,a),d.render(e,a)}d.toneMapping=h,d.outputEncoding=f,d.autoClear=u}_textureToCubeUV(e,t){const i=this._renderer;e.isCubeTexture?this._cubemapShader==null&&(this._cubemapShader=i3()):this._equirectShader==null&&(this._equirectShader=n3());const r=e.isCubeTexture?this._cubemapShader:this._equirectShader,s=new gt(ga[0],r),o=r.uniforms;o.envMap.value=e,e.isCubeTexture||o.texelSize.value.set(1/e.image.width,1/e.image.height),o.inputEncoding.value=ai[e.encoding],o.outputEncoding.value=ai[t.texture.encoding],zl(t,0,0,3*ni,2*ni),i.setRenderTarget(t),i.render(s,kh)}_applyPMREM(e){const t=this._renderer,i=t.autoClear;t.autoClear=!1;for(let r=1;r<Zy;r++){const s=Math.sqrt(ql[r]*ql[r]-ql[r-1]*ql[r-1]),o=Q1[(r-1)%Q1.length];this._blur(e,r-1,r,s,o)}t.autoClear=i}_blur(e,t,i,r,s){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,i,r,"latitudinal",s),this._halfBlur(o,e,i,i,r,"longitudinal",s)}_halfBlur(e,t,i,r,s,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const d=3,u=new gt(ga[r],c),f=c.uniforms,h=J1[i]-1,p=isFinite(s)?Math.PI/(2*h):2*Math.PI/(2*co-1),x=s/p,m=isFinite(s)?1+Math.floor(d*x):co;m>co&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${co}`);const v=[];let g=0;for(let b=0;b<co;++b){const _=b/x,S=Math.exp(-_*_/2);v.push(S),b==0?g+=S:b<m&&(g+=2*S)}for(let b=0;b<v.length;b++)v[b]=v[b]/g;f.envMap.value=e.texture,f.samples.value=m,f.weights.value=v,f.latitudinal.value=o==="latitudinal",a&&(f.poleAxis.value=a),f.dTheta.value=p,f.mipInt.value=pr-i,f.inputEncoding.value=ai[e.texture.encoding],f.outputEncoding.value=ai[e.texture.encoding];const w=J1[r],y=3*Math.max(0,ni-2*w),M=(r===0?0:2*ni)+2*w*(r>pr-_o?r-pr+_o:0);zl(t,y,M,3*w,2*w),l.setRenderTarget(t),l.render(u,kh)}}function yA(n){return n===void 0||n.type!==Jo?!1:n.encoding===Qt||n.encoding===Mc||n.encoding===Gd}function bA(){const n=[],e=[],t=[];let i=pr;for(let r=0;r<Zy;r++){const s=Math.pow(2,i);e.push(s);let o=1/s;r>pr-_o?o=Yy[r-pr+_o-1]:r==0&&(o=0),t.push(o);const a=1/(s-1),l=-a/2,c=1+a/2,d=[l,l,c,l,c,c,l,l,c,c,l,c],u=6,f=6,h=3,p=2,x=1,m=new Float32Array(h*f*u),v=new Float32Array(p*f*u),g=new Float32Array(x*f*u);for(let y=0;y<u;y++){const M=y%3*2/3-1,b=y>2?0:-1,_=[M,b,0,M+2/3,b,0,M+2/3,b+1,0,M,b,0,M+2/3,b+1,0,M,b+1,0];m.set(_,h*f*y),v.set(d,p*f*y);const S=[y,y,y,y,y,y];g.set(S,x*f*y)}const w=new Xe;w.setAttribute("position",new Ze(m,h)),w.setAttribute("uv",new Ze(v,p)),w.setAttribute("faceIndex",new Ze(g,x)),n.push(w),i>_o&&i--}return{_lodPlanes:n,_sizeLods:e,_sigmas:t}}function t3(n){const e=new ur(3*ni,3*ni,n);return e.texture.mapping=Yo,e.texture.name="PMREM.cubeUv",e.scissorTest=!0,e}function zl(n,e,t,i,r){n.viewport.set(e,t,i,r),n.scissor.set(e,t,i,r)}function _A(n){const e=new Float32Array(n),t=new q(0,1,0);return new Ni({name:"SphericalGaussianBlur",defines:{n},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:e},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:t},inputEncoding:{value:ai[Qt]},outputEncoding:{value:ai[Qt]}},vertexShader:Np(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			${Bp()}

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:qi,depthTest:!1,depthWrite:!1})}function n3(){const n=new Ee(1,1);return new Ni({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:n},inputEncoding:{value:ai[Qt]},outputEncoding:{value:ai[Qt]}},vertexShader:Np(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform vec2 texelSize;

			${Bp()}

			#include <common>

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				vec2 f = fract( uv / texelSize - 0.5 );
				uv -= f * texelSize;
				vec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x += texelSize.x;
				vec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.y += texelSize.y;
				vec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x -= texelSize.x;
				vec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;

				vec3 tm = mix( tl, tr, f.x );
				vec3 bm = mix( bl, br, f.x );
				gl_FragColor.rgb = mix( tm, bm, f.y );

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:qi,depthTest:!1,depthWrite:!1})}function i3(){return new Ni({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:ai[Qt]},outputEncoding:{value:ai[Qt]}},vertexShader:Np(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			${Bp()}

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;
				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:qi,depthTest:!1,depthWrite:!1})}function Np(){return`

		precision mediump float;
		precision mediump int;

		attribute vec3 position;
		attribute vec2 uv;
		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Bp(){return`

		uniform int inputEncoding;
		uniform int outputEncoding;

		#include <encodings_pars_fragment>

		vec4 inputTexelToLinear( vec4 value ) {

			if ( inputEncoding == 0 ) {

				return value;

			} else if ( inputEncoding == 1 ) {

				return sRGBToLinear( value );

			} else if ( inputEncoding == 2 ) {

				return RGBEToLinear( value );

			} else if ( inputEncoding == 3 ) {

				return RGBMToLinear( value, 7.0 );

			} else if ( inputEncoding == 4 ) {

				return RGBMToLinear( value, 16.0 );

			} else if ( inputEncoding == 5 ) {

				return RGBDToLinear( value, 256.0 );

			} else {

				return GammaToLinear( value, 2.2 );

			}

		}

		vec4 linearToOutputTexel( vec4 value ) {

			if ( outputEncoding == 0 ) {

				return value;

			} else if ( outputEncoding == 1 ) {

				return LinearTosRGB( value );

			} else if ( outputEncoding == 2 ) {

				return LinearToRGBE( value );

			} else if ( outputEncoding == 3 ) {

				return LinearToRGBM( value, 7.0 );

			} else if ( outputEncoding == 4 ) {

				return LinearToRGBM( value, 16.0 );

			} else if ( outputEncoding == 5 ) {

				return LinearToRGBD( value, 256.0 );

			} else {

				return LinearToGamma( value, 2.2 );

			}

		}

		vec4 envMapTexelToLinear( vec4 color ) {

			return inputTexelToLinear( color );

		}
	`}function wA(n,e,t,i,r,s,o){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new wp(n,e,t,r,s,o)}const MA=0,SA=1,EA=0,TA=1,AA=2;function LA(n){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),n}function CA(n=[]){return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),n.isMultiMaterial=!0,n.materials=n,n.clone=function(){return n.slice()},n}function RA(n,e){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new Io(n,e)}function PA(n){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new $a(n)}function IA(n,e){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new Io(n,e)}function DA(n){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new $n(n)}function OA(n){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new $n(n)}function qA(n){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new $n(n)}function zA(n,e,t){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new q(n,e,t)}function FA(n,e){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),new Ze(n,e).setUsage(cs)}function NA(n,e){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new Na(n,e)}function BA(n,e){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new Ba(n,e)}function UA(n,e){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new Ua(n,e)}function GA(n,e){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new Ga(n,e)}function kA(n,e){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new ls(n,e)}function HA(n,e){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new ka(n,e)}function VA(n,e){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new ds(n,e)}function WA(n,e){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new ke(n,e)}function $A(n,e){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new Va(n,e)}je.create=function(n,e){return console.log("THREE.Curve.create() has been deprecated"),n.prototype=Object.create(je.prototype),n.prototype.constructor=n,n.prototype.getPoint=e,n};Object.assign(Vn.prototype,{fromPoints:function(n){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(n)}});function Jy(n){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),$t.call(this,n),this.type="catmullrom",this.closed=!0}Jy.prototype=Object.create($t.prototype);function Ky(n){console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),$t.call(this,n),this.type="catmullrom"}Ky.prototype=Object.create($t.prototype);function Up(n){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),$t.call(this,n),this.type="catmullrom"}Up.prototype=Object.create($t.prototype);Object.assign(Up.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}});function jA(n){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new jy(n)}function XA(n,e){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new $y(n,e)}function YA(n,e){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new tn(new Ep(n.geometry),new wt({color:e!==void 0?e:16777215}))}Wy.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};Hy.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};function ZA(n,e){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new tn(new Tp(n.geometry),new wt({color:e!==void 0?e:16777215}))}Object.assign(dt.prototype,{extractUrlBase:function(n){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Cp.extractUrlBase(n)}});dt.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};function JA(n){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new Dn(n)}function KA(n){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new vd(n)}Object.assign(Gy.prototype,{center:function(n){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(n)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(n){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(n)},size:function(n){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(n)}});Object.assign(ki.prototype,{center:function(n){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(n)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(n){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(n)},isIntersectionSphere:function(n){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(n)},size:function(n){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(n)}});Object.assign(Tr.prototype,{empty:function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()}});Ec.prototype.setFromMatrix=function(n){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(n)};ky.prototype.center=function(n){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(n)};Object.assign(Ke,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(n){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),Ke.floorPowerOfTwo(n)},nextPowerOfTwo:function(n){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),Ke.ceilPowerOfTwo(n)}});Object.assign(vn.prototype,{flattenToArrayOffset:function(n,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(n,e)},multiplyVector3:function(n){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),n.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBufferAttribute:function(n){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),n.applyMatrix3(this)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},getInverse:function(n){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(n).invert()}});Object.assign(tt.prototype,{extractPosition:function(n){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(n)},flattenToArrayOffset:function(n,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(n,e)},getPosition:function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new q().setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(n){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(n)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(n){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),n.applyMatrix4(this)},multiplyVector4:function(n){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),n.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(n){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),n.transformDirection(this)},crossVector:function(n){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),n.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBufferAttribute:function(n){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),n.applyMatrix4(this)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(n,e,t,i,r,s){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(n,e,i,t,r,s)},getInverse:function(n){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(n).invert()}});ri.prototype.isIntersectionLine=function(n){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(n)};Object.assign(Vt.prototype,{multiplyVector3:function(n){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),n.applyQuaternion(this)},inverse:function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()}});Object.assign(Ko.prototype,{isIntersectionBox:function(n){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(n)},isIntersectionPlane:function(n){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(n)},isIntersectionSphere:function(n){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(n)}});Object.assign(kt.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},barycoordFromPoint:function(n,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(n,e)},midpoint:function(n){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(n)},normal:function(n){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(n)},plane:function(n){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(n)}});Object.assign(kt,{barycoordFromPoint:function(n,e,t,i,r){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),kt.getBarycoord(n,e,t,i,r)},normal:function(n,e,t,i){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),kt.getNormal(n,e,t,i)}});Object.assign(hr.prototype,{extractAllPoints:function(n){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(n)},extrude:function(n){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new hs(this,n)},makeGeometry:function(n){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new ic(this,n)}});Object.assign(Ee.prototype,{fromAttribute:function(n,e,t){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(n,e,t)},distanceToManhattan:function(n){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(n)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(q.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(n){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(n)},getScaleFromMatrix:function(n){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(n)},getColumnFromMatrix:function(n,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,n)},applyProjection:function(n){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(n)},fromAttribute:function(n,e,t){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(n,e,t)},distanceToManhattan:function(n){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(n)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(ut.prototype,{fromAttribute:function(n,e,t){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(n,e,t)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(We.prototype,{getChildByName:function(n){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(n)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(n,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,n)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},applyMatrix:function(n){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(n)}});Object.defineProperties(We.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(n){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=n}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});Object.assign(gt.prototype,{setDrawMode:function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}});Object.defineProperties(gt.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),ly},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}});Object.defineProperties(ja.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}});Object.defineProperty(Za.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}});Xa.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")};Object.defineProperty(je.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(n){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=n}});Pt.prototype.setLens=function(n,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),e!==void 0&&(this.filmGauge=e),this.setFocalLength(n)};Object.defineProperties(vt.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(n){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=n}},shadowCameraLeft:{set:function(n){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=n}},shadowCameraRight:{set:function(n){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=n}},shadowCameraTop:{set:function(n){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=n}},shadowCameraBottom:{set:function(n){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=n}},shadowCameraNear:{set:function(n){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=n}},shadowCameraFar:{set:function(n){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=n}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(n){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=n}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(n){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=n}},shadowMapHeight:{set:function(n){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=n}}});Object.defineProperties(Ze.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===cs},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(cs)}}});Object.assign(Ze.prototype,{setDynamic:function(n){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(n===!0?cs:Sc),this},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},setArray:function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}});Object.assign(Xe.prototype,{addIndex:function(n){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(n)},addAttribute:function(n,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),!(e&&e.isBufferAttribute)&&!(e&&e.isInterleavedBufferAttribute)?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(n,new Ze(arguments[1],arguments[2]))):n==="index"?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(n,e)},addDrawCall:function(n,e,t){t!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(n,e)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},removeAttribute:function(n){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(n)},applyMatrix:function(n){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(n)}});Object.defineProperties(Xe.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}});Object.defineProperties(ac.prototype,{maxInstancedCount:{get:function(){return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount},set:function(n){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount=n}}});Object.defineProperties(Fp.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(n){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=n}}});Object.defineProperties(yn.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.usage===cs},set:function(n){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(n)}}});Object.assign(yn.prototype,{setDynamic:function(n){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(n===!0?cs:Sc),this},setArray:function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}});Object.assign(hs.prototype,{getArrays:function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")}});Object.assign(Sp.prototype,{dispose:function(){console.error("THREE.Scene: .dispose() has been removed.")}});Object.defineProperties($d.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}});Object.defineProperties(Je.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Ue}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(n){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===hp}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(n){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=n}}});Object.defineProperties(wr.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}});Object.defineProperties(_r.prototype,{transparency:{get:function(){return console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission},set:function(n){console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission=n}}});Object.defineProperties(en.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(n){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=n}}});Object.assign(Tc.prototype,{clearTarget:function(n,e,t,i){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(n),this.clear(e,t,i)},animate:function(n){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(n)},getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(n){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(n)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()}});Object.defineProperties(Tc.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(n){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=n}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(n){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=n}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(n){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=n===!0?Mc:Qt}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}});Object.defineProperties(Ty.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});function QA(n,e,t){return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),new Mp(n,t)}Object.defineProperties(ur.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(n){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=n}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(n){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=n}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(n){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=n}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(n){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=n}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(n){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=n}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(n){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=n}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(n){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=n}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(n){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=n}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(n){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=n}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(n){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=n}}});Object.defineProperties(Ip.prototype,{load:{value:function(n){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return new Cd().load(n,function(i){e.setBuffer(i)}),this}},startTime:{set:function(){console.warn("THREE.Audio: .startTime is now .play( delay ).")}}});Ny.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()};fs.prototype.updateCubeMap=function(n,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(n,e)};fs.prototype.clear=function(n,e,t,i){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(n,e,t,i)};const eL={merge:function(n,e,t){console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");let i;e.isMesh&&(e.matrixAutoUpdate&&e.updateMatrix(),i=e.matrix,e=e.geometry),n.merge(e,i,t)},center:function(n){return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),n.center()}};As.crossOrigin=void 0;As.loadTexture=function(n,e,t,i){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const r=new yd;r.setCrossOrigin(this.crossOrigin);const s=r.load(n,t,void 0,i);return e&&(s.mapping=e),s};As.loadTextureCube=function(n,e,t,i){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const r=new gd;r.setCrossOrigin(this.crossOrigin);const s=r.load(n,t,void 0,i);return e&&(s.mapping=e),s};As.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")};As.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};function tL(){console.error("THREE.CanvasRenderer has been removed")}function nL(){console.error("THREE.JSONLoader has been removed.")}const iL={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};function rL(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:up}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=up);const sL=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:f2,AddEquation:Vr,AddOperation:c2,AdditiveAnimationBlendMode:gp,AdditiveBlending:o0,AlphaFormat:b2,AlwaysDepth:t2,AlwaysStencilFunc:py,AmbientLight:Sd,AmbientLightProbe:F0,AnimationClip:gn,AnimationLoader:L0,AnimationMixer:N0,AnimationObjectGroup:Uy,AnimationUtils:_t,ArcCurve:No,ArrayCamera:Jl,ArrowHelper:pA,Audio:Ip,AudioAnalyser:Ny,AudioContext:Pp,AudioListener:WT,AudioLoader:Cd,AxesHelper:jy,AxisHelper:jA,BackSide:Rt,BasicDepthPacking:uy,BasicShadowMap:v6,BinaryTextureLoader:KA,Bone:Ya,BooleanKeyframeTrack:hd,BoundingBoxHelper:XA,Box2:Gy,Box3:ki,Box3Helper:fA,BoxBufferGeometry:us,BoxGeometry:us,BoxHelper:$y,BufferAttribute:Ze,BufferGeometry:Xe,BufferGeometryLoader:Ld,ByteType:p2,Cache:_s,Camera:di,CameraHelper:uA,CanvasRenderer:tL,CanvasTexture:Ja,CatmullRomCurve3:$t,CineonToneMapping:u2,CircleBufferGeometry:ed,CircleGeometry:ed,ClampToEdgeWrapping:Zt,Clock:Fy,ClosedSplineCurve3:Jy,Color:Ue,ColorKeyframeTrack:pd,CompressedTexture:Do,CompressedTextureLoader:C0,ConeBufferGeometry:td,ConeGeometry:td,CubeCamera:fs,CubeReflectionMapping:bc,CubeRefractionMapping:_c,CubeTexture:ui,CubeTextureLoader:gd,CubeUVReflectionMapping:Yo,CubeUVRefractionMapping:wc,CubicBezierCurve:jn,CubicBezierCurve3:hi,CubicInterpolant:ud,CullFaceBack:s0,CullFaceFront:Uv,CullFaceFrontBack:g6,CullFaceNone:Bv,Curve:je,CurvePath:cr,CustomBlending:kv,CustomToneMapping:h2,CylinderBufferGeometry:Oo,CylinderGeometry:Oo,Cylindrical:rA,DataTexture:Fi,DataTexture2DArray:Ro,DataTexture3D:Po,DataTextureLoader:vd,DataUtils:xA,DecrementStencilOp:C6,DecrementWrapStencilOp:P6,DefaultLoadingManager:Dy,DepthFormat:ts,DepthStencilFormat:Lo,DepthTexture:Ka,DirectionalLight:Md,DirectionalLightHelper:dA,DiscreteInterpolant:fd,DodecahedronBufferGeometry:nd,DodecahedronGeometry:nd,DoubleSide:vc,DstAlphaFactor:Yv,DstColorFactor:Jv,DynamicBufferAttribute:FA,DynamicCopyUsage:W6,DynamicDrawUsage:cs,DynamicReadUsage:k6,EdgesGeometry:Ep,EdgesHelper:YA,EllipseCurve:Sn,EqualDepth:i2,EqualStencilFunc:q6,EquirectangularReflectionMapping:jl,EquirectangularRefractionMapping:Xl,Euler:Qo,EventDispatcher:Gi,ExtrudeBufferGeometry:hs,ExtrudeGeometry:hs,Face3:wp,Face4:wA,FaceColors:TA,FileLoader:Dn,FlatShading:hp,Float16BufferAttribute:Ha,Float32Attribute:WA,Float32BufferAttribute:ke,Float64Attribute:$A,Float64BufferAttribute:Va,FloatType:Pi,Fog:Vd,FogExp2:Hd,Font:qy,FontLoader:q0,FrontSide:Xo,Frustum:Ec,GLBufferAttribute:zp,GLSL1:j6,GLSL3:_0,GammaEncoding:Gd,GeometryUtils:eL,GreaterDepth:s2,GreaterEqualDepth:r2,GreaterEqualStencilFunc:B6,GreaterStencilFunc:F6,GridHelper:Wy,Group:ar,HalfFloatType:qa,HemisphereLight:bd,HemisphereLightHelper:cA,HemisphereLightProbe:z0,IcosahedronBufferGeometry:id,IcosahedronGeometry:id,ImageBitmapLoader:O0,ImageLoader:Fo,ImageUtils:As,ImmediateRenderObject:cc,IncrementStencilOp:L6,IncrementWrapStencilOp:R6,InstancedBufferAttribute:Ad,InstancedBufferGeometry:ac,InstancedInterleavedBuffer:B0,InstancedMesh:Kl,Int16Attribute:GA,Int16BufferAttribute:Ga,Int32Attribute:HA,Int32BufferAttribute:ka,Int8Attribute:NA,Int8BufferAttribute:Na,IntType:x2,InterleavedBuffer:yn,InterleavedBufferAttribute:gr,Interpolant:_n,InterpolateDiscrete:za,InterpolateLinear:Ta,InterpolateSmooth:Gl,InvertStencilOp:I6,JSONLoader:nL,KeepStencilOp:kl,KeyframeTrack:Nt,LOD:ja,LatheBufferGeometry:rd,LatheGeometry:rd,Layers:_p,LensFlare:rL,LessDepth:n2,LessEqualDepth:$l,LessEqualStencilFunc:z6,LessStencilFunc:O6,Light:vt,LightProbe:Rn,Line:In,Line3:ky,LineBasicMaterial:wt,LineCurve:on,LineCurve3:Xn,LineDashedMaterial:bs,LineLoop:Ql,LinePieces:SA,LineSegments:tn,LineStrip:MA,LinearEncoding:Qt,LinearFilter:zt,LinearInterpolant:sc,LinearMipMapLinearFilter:M6,LinearMipMapNearestFilter:w6,LinearMipmapLinearFilter:Zo,LinearMipmapNearestFilter:xp,LinearToneMapping:l2,Loader:dt,LoaderUtils:Cp,LoadingManager:Ap,LogLuvEncoding:dy,LoopOnce:oy,LoopPingPong:cy,LoopRepeat:ay,LuminanceAlphaFormat:w2,LuminanceFormat:_2,MOUSE:m6,Material:Je,MaterialLoader:Td,Math:Ke,MathUtils:Ke,Matrix3:vn,Matrix4:tt,MaxEquation:d0,Mesh:gt,MeshBasicMaterial:wn,MeshDepthMaterial:mr,MeshDistanceMaterial:xr,MeshFaceMaterial:LA,MeshLambertMaterial:vs,MeshMatcapMaterial:ys,MeshNormalMaterial:gs,MeshPhongMaterial:wr,MeshPhysicalMaterial:_r,MeshStandardMaterial:fi,MeshToonMaterial:xs,MinEquation:l0,MirroredRepeatWrapping:Da,MixOperation:a2,MultiMaterial:CA,MultiplyBlending:c0,MultiplyOperation:yc,NearestFilter:Dt,NearestMipMapLinearFilter:_6,NearestMipMapNearestFilter:b6,NearestMipmapLinearFilter:Zl,NearestMipmapNearestFilter:Yl,NeverDepth:e2,NeverStencilFunc:D6,NoBlending:qi,NoColors:EA,NoToneMapping:es,NormalAnimationBlendMode:Ud,NormalBlending:yo,NotEqualDepth:o2,NotEqualStencilFunc:N6,NumberKeyframeTrack:qo,Object3D:We,ObjectLoader:UT,ObjectSpaceNormalMap:hy,OctahedronBufferGeometry:nc,OctahedronGeometry:nc,OneFactor:$v,OneMinusDstAlphaFactor:Zv,OneMinusDstColorFactor:Kv,OneMinusSrcAlphaFactor:mp,OneMinusSrcColorFactor:Xv,OrthographicCamera:Bo,PCFShadowMap:fp,PCFSoftShadowMap:Gv,PMREMGenerator:vA,ParametricBufferGeometry:ps,ParametricGeometry:ps,Particle:PA,ParticleBasicMaterial:OA,ParticleSystem:IA,ParticleSystemMaterial:qA,Path:Vn,PerspectiveCamera:Pt,Plane:ri,PlaneBufferGeometry:Wa,PlaneGeometry:Wa,PlaneHelper:hA,PointCloud:RA,PointCloudMaterial:DA,PointLight:wd,PointLightHelper:oA,Points:Io,PointsMaterial:$n,PolarGridHelper:lA,PolyhedronBufferGeometry:yr,PolyhedronGeometry:yr,PositionalAudio:jT,PropertyBinding:Wt,PropertyMixer:Dp,QuadraticBezierCurve:Yn,QuadraticBezierCurve3:pi,Quaternion:Vt,QuaternionKeyframeTrack:oc,QuaternionLinearInterpolant:md,REVISION:up,RGBADepthPacking:fy,RGBAFormat:bn,RGBAIntegerFormat:C2,RGBA_ASTC_10x10_Format:k2,RGBA_ASTC_10x5_Format:B2,RGBA_ASTC_10x6_Format:U2,RGBA_ASTC_10x8_Format:G2,RGBA_ASTC_12x10_Format:H2,RGBA_ASTC_12x12_Format:V2,RGBA_ASTC_4x4_Format:P2,RGBA_ASTC_5x4_Format:I2,RGBA_ASTC_5x5_Format:D2,RGBA_ASTC_6x5_Format:O2,RGBA_ASTC_6x6_Format:q2,RGBA_ASTC_8x5_Format:z2,RGBA_ASTC_8x6_Format:F2,RGBA_ASTC_8x8_Format:N2,RGBA_BPTC_Format:W2,RGBA_ETC2_EAC_Format:b0,RGBA_PVRTC_2BPPV1_Format:v0,RGBA_PVRTC_4BPPV1_Format:g0,RGBA_S3TC_DXT1_Format:f0,RGBA_S3TC_DXT3_Format:h0,RGBA_S3TC_DXT5_Format:p0,RGBDEncoding:bp,RGBEEncoding:kd,RGBEFormat:M2,RGBFormat:dr,RGBIntegerFormat:L2,RGBM16Encoding:yp,RGBM7Encoding:vp,RGB_ETC1_Format:R2,RGB_ETC2_Format:y0,RGB_PVRTC_2BPPV1_Format:x0,RGB_PVRTC_4BPPV1_Format:m0,RGB_S3TC_DXT1_Format:u0,RGFormat:T2,RGIntegerFormat:A2,RawShaderMaterial:Ni,Ray:Ko,Raycaster:Fp,RectAreaLight:Ed,RedFormat:S2,RedIntegerFormat:E2,ReinhardToneMapping:d2,RepeatWrapping:Ia,ReplaceStencilOp:A6,ReverseSubtractEquation:Vv,RingBufferGeometry:sd,RingGeometry:sd,SRGB8_ALPHA8_ASTC_10x10_Format:iy,SRGB8_ALPHA8_ASTC_10x5_Format:ey,SRGB8_ALPHA8_ASTC_10x6_Format:ty,SRGB8_ALPHA8_ASTC_10x8_Format:ny,SRGB8_ALPHA8_ASTC_12x10_Format:ry,SRGB8_ALPHA8_ASTC_12x12_Format:sy,SRGB8_ALPHA8_ASTC_4x4_Format:$2,SRGB8_ALPHA8_ASTC_5x4_Format:j2,SRGB8_ALPHA8_ASTC_5x5_Format:X2,SRGB8_ALPHA8_ASTC_6x5_Format:Y2,SRGB8_ALPHA8_ASTC_6x6_Format:Z2,SRGB8_ALPHA8_ASTC_8x5_Format:J2,SRGB8_ALPHA8_ASTC_8x6_Format:K2,SRGB8_ALPHA8_ASTC_8x8_Format:Q2,Scene:Sp,SceneUtils:iL,ShaderChunk:nt,ShaderLib:kn,ShaderMaterial:en,ShadowMaterial:ms,Shape:hr,ShapeBufferGeometry:ic,ShapeGeometry:ic,ShapePath:Rp,ShapeUtils:zi,ShortType:m2,Skeleton:Za,SkeletonHelper:Hy,SkinnedMesh:Xa,SmoothShading:y6,Sphere:Tr,SphereBufferGeometry:rc,SphereGeometry:rc,Spherical:iA,SphericalHarmonics3:Oy,Spline:Up,SplineCurve:Zn,SplineCurve3:Ky,SpotLight:_d,SpotLightHelper:sA,Sprite:$a,SpriteMaterial:vr,SrcAlphaFactor:pp,SrcAlphaSaturateFactor:Qv,SrcColorFactor:jv,StaticCopyUsage:V6,StaticDrawUsage:Sc,StaticReadUsage:G6,StereoCamera:zy,StreamCopyUsage:$6,StreamDrawUsage:U6,StreamReadUsage:H6,StringKeyframeTrack:xd,SubtractEquation:Hv,SubtractiveBlending:a0,TOUCH:x6,TangentSpaceNormalMap:Ts,TetrahedronBufferGeometry:od,TetrahedronGeometry:od,TextBufferGeometry:ad,TextGeometry:ad,Texture:ft,TextureLoader:yd,TorusBufferGeometry:cd,TorusGeometry:cd,TorusKnotBufferGeometry:ld,TorusKnotGeometry:ld,Triangle:kt,TriangleFanDrawMode:E6,TriangleStripDrawMode:S6,TrianglesDrawMode:ly,TubeBufferGeometry:dd,TubeGeometry:dd,UVMapping:Bd,Uint16Attribute:kA,Uint16BufferAttribute:ls,Uint32Attribute:VA,Uint32BufferAttribute:ds,Uint8Attribute:BA,Uint8BufferAttribute:Ba,Uint8ClampedAttribute:UA,Uint8ClampedBufferAttribute:Ua,Uniform:$d,UniformsLib:De,UniformsUtils:gy,UnsignedByteType:Jo,UnsignedInt248Type:bo,UnsignedIntType:Ea,UnsignedShort4444Type:g2,UnsignedShort5551Type:v2,UnsignedShort565Type:y2,UnsignedShortType:Oa,VSMShadowMap:mo,Vector2:Ee,Vector3:q,Vector4:ut,VectorKeyframeTrack:zo,Vertex:zA,VertexColors:AA,VideoTexture:E0,WebGL1Renderer:M0,WebGLCubeRenderTarget:Mp,WebGLMultisampleRenderTarget:Y6,WebGLRenderTarget:ur,WebGLRenderTargetCube:QA,WebGLRenderer:Tc,WebGLUtils:Ay,WireframeGeometry:Tp,WireframeHelper:ZA,WrapAroundEnding:Fa,XHRLoader:JA,ZeroCurvatureEnding:Xr,ZeroFactor:Wv,ZeroSlopeEnding:Yr,ZeroStencilOp:T6,sRGBEncoding:Mc},Symbol.toStringTag,{value:"Module"})),oL=C8(sL);var r3;function aL(){return r3||(r3=1,(function(n){function e(g){"@babel/helpers - typeof";return typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?e=function(y){return typeof y}:e=function(y){return y&&typeof Symbol=="function"&&y.constructor===Symbol&&y!==Symbol.prototype?"symbol":typeof y},e(g)}Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0,e6(),p6();var t=r(oL);function i(g){if(typeof WeakMap!="function")return null;var w=new WeakMap,y=new WeakMap;return(i=function(b){return b?y:w})(g)}function r(g,w){if(g&&g.__esModule)return g;if(g===null||e(g)!=="object"&&typeof g!="function")return{default:g};var y=i(w);if(y&&y.has(g))return y.get(g);var M={},b=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var _ in g)if(_!=="default"&&Object.prototype.hasOwnProperty.call(g,_)){var S=b?Object.getOwnPropertyDescriptor(g,_):null;S&&(S.get||S.set)?Object.defineProperty(M,_,S):M[_]=g[_]}return M.default=g,y&&y.set(g,M),M}function s(g,w){if(!(g instanceof w))throw new TypeError("Cannot call a class as a function")}function o(g,w){if(typeof w!="function"&&w!==null)throw new TypeError("Super expression must either be null or a function");g.prototype=Object.create(w&&w.prototype,{constructor:{value:g,writable:!0,configurable:!0}}),w&&a(g,w)}function a(g,w){return a=Object.setPrototypeOf||function(M,b){return M.__proto__=b,M},a(g,w)}function l(g){var w=u();return function(){var M=f(g),b;if(w){var _=f(this).constructor;b=Reflect.construct(M,arguments,_)}else b=M.apply(this,arguments);return c(this,b)}}function c(g,w){return w&&(e(w)==="object"||typeof w=="function")?w:d(g)}function d(g){if(g===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return g}function u(){if(typeof Reflect>"u"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch{return!1}}function f(g){return f=Object.setPrototypeOf?Object.getPrototypeOf:function(y){return y.__proto__||Object.getPrototypeOf(y)},f(g)}function h(g,w,y){return w in g?Object.defineProperty(g,w,{value:y,enumerable:!0,configurable:!0,writable:!0}):g[w]=y,g}var p=Object.freeze({INACTIVE:Symbol("INACTIVE"),INDETERMINATE:Symbol("INDETERMINATE"),ROTATING:Symbol("ROTATING"),DOLLYING:Symbol("DOLLYING"),PANNING:Symbol("PANNING")}),x=2,m=(function(g){o(y,g);var w=l(y);function y(M,b){var _;return s(this,y),_=w.call(this),h(d(_),"reset",function(){_.target.copy(_.target0),_.object.position.copy(_.position0),_.update()}),h(d(_),"update",function(){_.object.lookAt(_.target),_.state!==p.ROTATING&&_.fixUp(),_.dispatchEvent(_.changeEvent)}),h(d(_),"onMouseDown",function(S){_.state=p.INDETERMINATE,_.prev=new t.Vector2(S.clientX,S.clientY),S.preventDefault(),_.domElement.focus?_.domElement.focus():window.focus(),document.addEventListener("mousemove",_.onMouseMove,!1),document.addEventListener("mouseup",_.onMouseUp,!1),_.domElement.addEventListener("contextmenu",_.onContextMenu,!1)}),h(d(_),"onMouseWheel",function(S){S.preventDefault(),_.state=p.DOLLYING,_.prev=new t.Vector2(0,0),_.dolly(0,-S.deltaY)}),h(d(_),"onMouseMove",function(S){switch(S.preventDefault(),S.buttons){case 1:_.eventHasPanModifier(S)?_.pan(S.clientX,S.clientY):_.rotate(S.clientX,S.clientY);break;case 2:_.pan(S.clientX,S.clientY);break;case 4:_.dolly(S.clientX,S.clientY);break}}),h(d(_),"onMouseUp",function(){_.state===p.ROTATING&&_.fixUp(),_.clicked=_.state===p.INDETERMINATE,_.state=p.INACTIVE,document.removeEventListener("mousemove",_.onMouseMove,!1),document.removeEventListener("mouseup",_.onMouseUp,!1),_.domElement.removeEventListener("contextmenu",_.onContextMenu,!1)}),h(d(_),"onKeyDown",function(S){var E=!1,R,I;switch(S.keyCode){case _.keys.UP:E=!0;var $=[0,_.keyPanSpeed];R=$[0],I=$[1];break;case _.keys.DOWN:E=!0,R=0,I=-_.keyPanSpeed;break;case _.keys.LEFT:E=!0;var W=[_.keyPanSpeed,0];R=W[0],I=W[1];break;case _.keys.RIGHT:E=!0,R=-_.keyPanSpeed,I=0;break}E&&(S.preventDefault(),_.state=p.PANNING,_.prev=new t.Vector2(0,0),_.pan(R,I))}),h(d(_),"onContextMenu",function(S){S.preventDefault()}),h(d(_),"eventHasPanModifier",function(S){return S.shiftKey&&_.usePanModShift||S.altKey&&_.usePanModAlt||S.ctrlKey&&_.usePanModCtrl||S.metaKey&&_.usePanModMeta}),h(d(_),"rotate",function(S,E){var R=new t.Vector2(S,E);if(_.state===p.INDETERMINATE){var I=R.manhattanDistanceTo(_.prev);if(I>x){_.state=p.ROTATING;var $=new t.Vector3().subVectors(_.object.position,_.target);_.radius=$.length(),$.divideScalar(_.radius);var W=_.object.up,L=new t.Vector3().crossVectors(W,$).normalize();_.basisMatrix=new t.Matrix4().makeBasis(L,W,$);var z=new t.Matrix4().makeTranslation(_.target.x,_.target.y,_.target.z);_.basisMatrix.premultiply(z)}}if(_.state===p.ROTATING){var U=new t.Vector2().subVectors(R,_.prev),X=2*_.rotateSpeed;U.multiplyScalar(X);var K=-U.x*(Math.PI/_.domElement.clientWidth),j=-U.y*(Math.PI/_.domElement.clientHeight)+Math.PI/2,ee=.01;j=Math.max(j,ee),j=Math.min(j,Math.PI-ee);var P=new t.Vector3;P.z=_.radius*Math.sin(j)*Math.cos(K),P.x=_.radius*Math.sin(j)*Math.sin(K),P.y=_.radius*Math.cos(j),P.applyMatrix4(_.basisMatrix),_.object.position.copy(P),_.update()}}),h(d(_),"dolly",function(S,E){var R=new t.Vector2(S,E);if(_.state===p.INDETERMINATE){var I=R.manhattanDistanceTo(_.prev);I>x&&(_.state=p.DOLLYING)}if(_.state===p.DOLLYING){var $=new t.Vector3().subVectors(_.target,_.object.position),W=$.length(),L=2*W,z=Math.min(_.maxDistance-_.minDistance,L),U=_.domElement.clientHeight,X=z/U,K=_.zoomSpeed*X,j=_.prev.y-E,ee=K*j;if(_.minDistance<=W+ee&&W+ee<=_.maxDistance){var P=$.multiplyScalar(ee/W);_.object.position.sub(P),_.update(),_.prev=R}}}),h(d(_),"pan",function(S,E){var R=new t.Vector2(S,E);if(_.state===p.INDETERMINATE){var I=R.manhattanDistanceTo(_.prev);I>x&&(_.state=p.PANNING)}if(_.state===p.PANNING){var $=new t.Vector3().subVectors(_.target,_.object.position),W=$.length();$.divideScalar(W);var L=_.object.up.clone(),z=new t.Vector3().crossVectors(L,$).normalize(),U=Math.tan(_.object.fov/2*(Math.PI/360))*W,X=_.domElement.clientHeight/2,K=U/X,j=new t.Vector2().subVectors(R,_.prev),ee=z.multiplyScalar(j.x*K),P=L.multiplyScalar(j.y*K);_.object.position.add(ee),_.object.position.add(P);var H=$.multiplyScalar(W),Y=new t.Vector3().addVectors(_.object.position,H);_.target=Y,_.update(),_.prev=R}}),h(d(_),"fixUp",function(){var S=new t.Vector3().subVectors(_.target,_.object.position).normalize(),E=new t.Vector3().crossVectors(S,_.object.up).normalize(),R=new t.Vector3().crossVectors(E,S).normalize();_.object.up.copy(R)}),_.object=M,_.domElement=b,_.keyPanSpeed=7,_.keys={LEFT:37,UP:38,RIGHT:39,DOWN:40},_.maxDistance=1/0,_.minDistance=0,_.rotateSpeed=1,_.target=new t.Vector3,_.zoomSpeed=1,_.clicked=!1,_.usePanModAlt=!0,_.usePanModShift=!1,_.usePanModCtrl=!1,_.usePanModMeta=!1,_.state=p.INACTIVE,_.changeEvent={type:"change"},_.domElement.addEventListener("mousedown",_.onMouseDown,!1),_.domElement.addEventListener("wheel",_.onMouseWheel,!1),_.domElement.addEventListener("keydown",_.onKeyDown,!1),_.domElement.tabIndex===-1&&(_.domElement.tabIndex=0),_.target0=_.target.clone(),_.position0=_.object.position.clone(),_.update(),_}return y})(t.EventDispatcher),v=m;n.default=v})(Pu)),Pu}var cL=aL();const lL=L8(cL);var Hl={exports:{}},dL=Hl.exports,s3;function uL(){return s3||(s3=1,(function(n,e){(function(t,i){n.exports=i()})(dL,(function(){const t=[],i=G=>G===0||G===1?1:(t[G]>0||(t[G]=i(G-1)*G),t[G]),r=[],s=(G,V)=>{if(V>G)return 0;for(;G>=r.length;){const ae=r.length,he=[];he[0]=1;for(let ve=1,T=ae-1;ve<ae;ve+=1)he[ve]=r[T][ve-1]+r[T][ve];he[ae]=1,r.push(he)}return r[G][V]},o=(G,V)=>Math.floor(Math.random()*(V-G+1))+G,a=(G,V)=>{const ae=G.slice(0);ae[V[0]]=G[V[V.length-1]];for(let he=1;he<V.length;he+=1)ae[V[he]]=G[V[he-1]];return ae},l=(G,V,ae)=>{const he=G[V];for(let ve=V;ve<ae;ve+=1)G[ve]=G[ve+1];G[ae]=he},c=(G,V,ae)=>{const he=G[ae];for(let ve=ae;ve>V;ve-=1)G[ve]=G[ve-1];G[V]=he},d=(G,V)=>{let ae=0;for(let he=0;he<G.length-1;he+=1)ae=V*ae+G[he];return ae},u=(G,V,ae)=>{const he=[];let ve=0;for(let T=V-2;T>=0;T-=1){const k=G%ae;G=Math.floor(G/ae),he[T]=k,ve+=k}return he[V-1]=(ae-ve%ae)%ae,he},f=G=>{let V=0;for(let ae=G.length-1;ae>0;ae-=1)for(let he=ae-1;he>=0;he-=1)G[he]>G[ae]&&(V+=1);return V%2},h=function(G,V){let ae=arguments.length>2&&arguments[2]!==void 0&&arguments[2],he=G.length-1,ve=0,T=1;const k=[];if(ae)for(let B=G.length-1;B>=0;B-=1)V.indexOf(G[B])>=0&&(he=Math.min(he,G[B]),ve+=s(G.length-1-B,T),k.unshift(G[B]),T+=1);else for(let B=0;B<G.length;B+=1)V.indexOf(G[B])>=0&&(he=Math.min(he,G[B]),ve+=s(B,T),k.push(G[B]),T+=1);let J=0;for(let B=k.length-1;B>0;B-=1){let te=0;for(;k[B]!==V[B];)l(k,0,B),te+=1;J=(B+1)*J+te}return i(V.length)*ve+J},p=function(G,V,ae){let he=arguments.length>3&&arguments[3]!==void 0&&arguments[3];const ve=i(V.length);let T=Math.floor(G/ve),k=G%ve;const J=[];for(let te=0;te<ae;te+=1)J.push(-1);for(let te=1;te<V.length;te+=1){let Ae=k%(te+1);for(k=Math.floor(k/(te+1));Ae>0;)c(V,0,te),Ae-=1}let B=V.length-1;if(he)for(let te=0;te<ae;te+=1){const Ae=s(ae-1-te,B+1);T-Ae>=0&&(J[te]=V[V.length-1-B],T-=Ae,B-=1)}else for(let te=ae-1;te>=0;te-=1){const Ae=s(te,B+1);T-Ae>=0&&(J[te]=V[B],T-=Ae,B-=1)}return J},x={"":0,2:1,"'":2},m=G=>/^([FRUBLDfrubldxyzMSE][2']?\s*)+$/.test(G),v={f:["z","B"],r:["x","L"],u:["y","D"],b:["z'","F"],l:["x'","R"],d:["y'","U"],M:["x'","R","L'"],S:["z","F'","B"],E:["y'","U","D'"]},g={x:"DRFULB",y:"RBULFD",z:"FULBDR"},w=function(G){let V=arguments.length>1&&arguments[1]!==void 0&&arguments[1];if(!m(G))throw new Error("Invalid algorithm provided to algorithm parser");const ae=[],[he,ve]=(T=>{T=T.reduce(((B,te)=>{const Ae=te.charAt(0),Pe=x[te.charAt(1)];if(v[Ae]){for(let Ve=0;Ve<=Pe;Ve+=1)B=B.concat(v[Ae]);return B}return B.concat(te)}),[]);let k=[];const J=[];for(let B=T.length-1;B>=0;B-=1){const te=T[B].charAt(0),Ae=x[T[B].charAt(1)];if("xyz".includes(te)){J.unshift(T[B]);for(let Pe=0;Pe<=Ae;Pe+=1)k=k.map((Ve=>g[te]["FRUBLD".indexOf(Ve[0])]+Ve.charAt(1)))}else k.unshift(T[B])}return[k,J]})(G.match(/[FRUBLDfrubldxyzMSE][2']?/g));return he.forEach((T=>{const k="FRUBLD".indexOf(T.charAt(0)),J=x[T.charAt(1)];ae.push(3*k+J)})),V?[ae,ve]:ae},y=G=>{let V="";return G.forEach((ae=>{switch(V+=" ",V+="FRUBLD".charAt(Math.floor(ae/3)),ae%3){case 1:V+="2";break;case 2:V+="'"}})),V.trim()},M=0,b=1,_=2,S=3,E=5,R=7,I=8,$=0,W=1,L=2,z=3,U=4,X=[[1,8,5,9],[0,11,4,8],[1,2,3,0],[3,10,7,11],[2,9,6,10],[5,4,7,6]],K=[[1,0,4,5],[0,3,7,4],[0,1,2,3],[3,2,6,7],[2,1,5,6],[5,4,7,6]],j=(G,V,ae)=>{let he=G;const ve=ae[Math.floor(V/3)],T=V%3;for(let k=0;k<=T;k+=1)he=a(he,ve);return he},ee=(G,V)=>j(G,V,X),P=(G,V)=>j(G,V,K),H=(G,V)=>{const ae=Math.floor(V/3),he=X[ae],ve=V%3,T=ee(G,V);if((ae===0||ae===3)&&ve%2==0)for(let k=0;k<4;k+=1)T[he[k]]=(T[he[k]]+1)%2;return T},Y=(G,V)=>{const ae=Math.floor(V/3),he=K[ae],ve=V%3,T=P(G,V);if(ae!==2&&ae!==5&&ve%2==0)for(let k=0;k<4;k+=1)T[he[k]]=(T[he[k]]+(k+1)%2+1)%3;return T},Q=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17];class F{constructor(V){if(this.name=V.name,this.size=V.size,this.defaultIndex=V.defaultIndex||0,this.solvedIndexes=V.solvedIndexes||[this.defaultIndex],V.doMove&&(this.doMove=(k,J)=>V.doMove(this.table,k,J)),V.table)return void(this.table=V.table);const ae=(he=V.getVector,ve=V.cubieMove,T=V.getIndex,(k,J)=>{let B=he(k);return B=ve(B,J),T(B)});var he,ve,T;this.createMoveTable(V.size,ae,V.moves)}doMove(V,ae){return this.table[V][ae]}createMoveTable(V,ae){let he=arguments.length>2&&arguments[2]!==void 0?arguments[2]:Q;this.table=[];for(let ve=0;ve<V;ve+=1)this.table.push([]);for(let ve=0;ve<V;ve+=1)for(let T=0;T<he.length;T+=1){const k=he[T];if(!this.table[ve][k]){const J=ae(ve,k),B=k-k%3*2+2;this.table[ve][k]=J,this.table[J][B]=ve}}}}const oe=G=>new F({name:G.name,moves:G.moves,defaultIndex:h([0,1,2,3,4,5,6,7],G.affected,G.reversed),size:G.size||i(8)/i(8-G.affected.length),getVector:V=>p(V,G.affected.slice(),8,G.reversed),cubieMove:P,getIndex:V=>h(V,G.affected,G.reversed)}),Se=G=>new F({name:G.name,moves:G.moves,defaultIndex:h([0,1,2,3,4,5,6,7,8,9,10,11],G.affected,G.reversed),size:G.size||i(12)/i(12-G.affected.length),getVector:V=>p(V,G.affected.slice(),12,G.reversed),cubieMove:ee,getIndex:V=>h(V,G.affected,G.reversed)}),Me=(G,V,ae)=>{const he=[],ve=ae**(V-1),T=ae**(V-G.length-1);for(let k=0;k<ve&&he.length<T;k+=1){const J=u(k,V,ae);G.every((B=>J[B]===0))&&he.push(k)}return he},be=G=>new F({name:G.name,size:2048,solvedIndexes:Me(G.affected,12,2),getVector:V=>u(V,12,2),cubieMove:H,getIndex:V=>d(V,2)}),_e=G=>new F({name:G.name,size:2187,solvedIndexes:Me(G.affected,8,3),getVector:V=>u(V,8,3),cubieMove:Y,getIndex:V=>d(V,3)});class Ie{constructor(V,ae){this.computePruningTable(V,ae)}setPruningValue(V,ae){this.table[V>>3]^=(15^ae)<<((7&V)<<2)}getPruningValue(V){return this.table[V>>3]>>((7&V)<<2)&15}computePruningTable(V,ae){const he=V.reduce(((B,te)=>B*te.size),1);this.table=[];for(let B=0;B<he+7>>3;B+=1)this.table.push(-1);let ve=0,T=0;const k=[1];for(let B=1;B<V.length;B+=1)k.push(V[B-1].size*k[B-1]);const J=(B=>{const te=[],Ae=B.length-1,Pe=(Ve,He)=>{for(let et=0;et<B[He].length;et+=1){const $e=Ve.slice(0);$e.push(B[He][et]),He===Ae?te.push($e):Pe($e,He+1)}};return Pe([],0),te})(V.map((B=>B.solvedIndexes)));for(let B=0;B<J.length;B+=1){let te=0;for(let Ae=0;Ae<J[B].length;Ae+=1)te+=k[Ae]*J[B][Ae];this.setPruningValue(te,0),T+=1}for(;T!==he;){const B=T>he/2,te=B?15:ve,Ae=B?ve:15;ve+=1;for(let Pe=0;Pe<he;Pe+=1)if(this.getPruningValue(Pe)===te)for(let Ve=0;Ve<ae.length;Ve+=1){const He=ae[Ve];let et=Pe,$e=0;for(let Qe=k.length-1;Qe>=0;Qe-=1)$e+=k[Qe]*V[Qe].doMove(Math.floor(et/k[Qe]),He),et%=k[Qe];if(this.getPruningValue($e)===Ae){if(T+=1,B){this.setPruningValue(Pe,ve);break}this.setPruningValue($e,ve)}}}}}class fe{constructor(V){let ae=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Q;this.createTables=V,this.moves=ae}initialize(){if(this.initialized)return;this.initialized=!0;const{moveTables:V,pruningTables:ae}=this.createTables();this.moveTables=V,this.pruningTables=[],ae.forEach((he=>{const ve=he.map((J=>this.moveTables.map((B=>B.name)).indexOf(J)));ve.sort(((J,B)=>this.moveTables[J].size-this.moveTables[B].size));const T=[];ve.forEach((J=>T.push(this.moveTables[J])));const k=new Ie(T,this.moves);this.pruningTables.push({pruningTable:k,moveTableIndexes:ve})}))}handleSolution(V,ae){return{solution:V,indexes:ae}}search(V,ae,he,ve){let T=0;for(let k=0;k<this.pruningTables.length;k+=1){let J=V[this.pruningTables[k].moveTableIndexes[0]],B=1;for(let Ae=1;Ae<this.pruningTables[k].moveTableIndexes.length;Ae+=1)B*=this.moveTables[this.pruningTables[k].moveTableIndexes[Ae-1]].size,J+=V[this.pruningTables[k].moveTableIndexes[Ae]]*B;const te=this.pruningTables[k].pruningTable.getPruningValue(J);if(te>ae)return!1;te>T&&(T=te)}if(T===0)return this.handleSolution(ve,V);if(ae>0)for(let k=0;k<this.moves.length;k+=1){const J=this.moves[k];if(Math.floor(J/3)!==Math.floor(he/3)&&Math.floor(J/3)!==Math.floor(he/3)-3){const B=[];for(let Ae=0;Ae<V.length;Ae+=1)B.push(this.moveTables[Ae].doMove(V[Ae],J));const te=this.search(B,ae-1,J,ve.concat([J]));if(te)return te}}return!1}solve(V){this.initialize(),this.settings={maxDepth:22,lastMove:null,format:!0,...V};const ae=this.settings.indexes||[];let he;if(this.settings.scramble){const[ve,T]=w(this.settings.scramble,!0);T.length>0&&(he=(k=>{if(!m(k))throw new Error("Invalid algorithm provided to algorithm parser");return k.match(/[FRUBLDfrubldxyzMSE][2']?/g).reverse().map((J=>{const B=J.charAt(0),te=x[J.charAt(1)],Ae=te-te%3*2+2;return Ae===1?`${B}2`:Ae===2?`${B}'`:B})).join(" ")})(T.join(" ")));for(let k=0;k<this.moveTables.length;k+=1)ae.push(this.moveTables[k].defaultIndex);ve.forEach((k=>{for(let J=0;J<ae.length;J+=1)ae[J]=this.moveTables[J].doMove(ae[J],k)}))}for(let ve=0;ve<=this.settings.maxDepth;ve+=1){const T=this.search(ae,ve,this.settings.lastMove,[]);if(T){if(this.settings.format){const k=y(T.solution);return he?y(w(`${he} ${k}`)):k}return T}}return!1}}const pe=new fe((()=>({moveTables:[Se({name:"EdgePermutation",affected:[4,5,6,7]}),be({name:"EdgeOrientation",affected:[4,5,6,7]})],pruningTables:[["EdgePermutation"],["EdgeOrientation"]]}))),Te=G=>pe.solve({scramble:G}),ze=new fe((()=>({moveTables:[be({name:"EdgeOrientation",affected:[0,1,2,3,4,5,6,7,8,9,10,11]}),Se({name:"EdgePermutation",affected:[5,7]})],pruningTables:[["EdgeOrientation"],["EdgePermutation"]]}))),Ce=G=>ze.solve({scramble:G}),O=new fe((()=>({moveTables:[be({name:"EdgeOrientation",affected:[6,9,10]}),_e({name:"CornerOrientation",affected:[5,6]}),Se({name:"EdgePermutation",affected:[6,9,10]}),oe({name:"CornerPermutation",affected:[5,6]})],pruningTables:[["EdgeOrientation","CornerPermutation"],["CornerOrientation","CornerPermutation"],["EdgePermutation","CornerPermutation"]]}))),D=G=>O.solve({scramble:G}),me=[1,10,4,13,6,7,8,15,16,17];let ye,Z,C,A;const ie=new fe((()=>{const G=(V,ae)=>{const he=p(V,[0,1,2],12),ve=p(ae,[3,4,5],12);for(let T=0;T<8;T+=1)if(he[T]!==-1){if(ve[T]!==-1)return-1;ve[T]=he[T]}return h(ve,[0,1,2,3,4,5])};A=[];for(let V=0;V<336;V+=1){A.push([]);for(let ae=0;ae<336;ae+=1)A[V][ae]=G(V,ae)}return{moveTables:[new F({name:"slicePermutation",size:24,table:C.table}),ye,Z,Se({name:"URToDF",size:20160,moves:me,affected:[0,1,2,3,4,5]})],pruningTables:[["slicePermutation","parity","URFToDLF"],["slicePermutation","parity","URToDF"]]}}),me),se=new class extends fe{constructor(){super(...arguments),this.maxDepth=22,this.solution=null}handleSolution(G,V){const ae=G.slice(-1)[0];if(ae%2==0&&Math.floor(ae/3)===6&&Math.floor(ae/3)===15)return!1;const he=ie.solve({indexes:[V[3],V[4],V[5],A[V[6]][V[7]]],maxDepth:this.maxDepth-G.length,lastMove:ae,format:!1});if(he){if(this.solution=G.concat(he.solution),this.maxDepth<=this.settings.maxDepth)return{solution:this.solution,indexes:V};this.maxDepth=this.solution.length-1}return!1}}((()=>(ye=new F({name:"parity",size:2,table:[[1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1],[0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0]]}),Z=oe({name:"URFToDLF",affected:[0,1,2,3,4,5]}),C=Se({name:"slice",affected:[8,9,10,11],reversed:!0}),ie.initialize(),{moveTables:[new F({name:"slicePosition",size:495,table:C.table,doMove:(G,V,ae)=>Math.floor(G[24*V][ae]/24)}),_e({name:"twist",affected:[0,1,2,3,4,5,6,7]}),be({name:"flip",affected:[0,1,2,3,4,5,6,7,8,9,10,11]}),C,ye,Z,Se({name:"URToUL",affected:[0,1,2]}),Se({name:"UBToDF",affected:[3,4,5]})],pruningTables:[["slicePosition","flip"],["slicePosition","twist"]]}))),le=function(G){let V=arguments.length>1&&arguments[1]!==void 0?arguments[1]:22;return Array.isArray(G)?se.solve({indexes:G,maxDepth:V}):se.solve({scramble:G,maxDepth:V})},xe=(G,V,ae,he)=>le([Math.floor(h(V,[8,9,10,11],!0)/24),d(ae,3),d(G,2),h(V,[8,9,10,11],!0),f(he),h(he,[0,1,2,3,4,5]),h(V,[0,1,2]),h(V,[3,4,5])]),Re=new fe((()=>({moveTables:[Se({name:"EdgePermutation",affected:[4,5,6,7,9]}),be({name:"EdgeOrientation",affected:[4,5,6,7,9]}),oe({name:"CornerPermutation",affected:[5]}),_e({name:"CornerOrientation",affected:[5]})],pruningTables:[["EdgePermutation","CornerPermutation"],["EdgeOrientation","CornerOrientation"]]}))),ne=G=>Re.solve({scramble:G}),we=[0,1,2,3],Le=(G,V,ae)=>{const he=u(o(0,V**(G.length-1)),G.length,V),ve=Array(ae).fill(0);return G.forEach(((T,k)=>{ve[T]=he[k]})),ve},Ne=(G,V)=>{const ae=p(o(0,i(G.length)),G.slice(0),G.length),he=[0,1,2,3,4,5,6,7,8,9,10,11].slice(0,V);return G.forEach(((ve,T)=>{he[ve]=ae[T]})),he},Ge=(G,V)=>{V=V||o(0,4);for(let ae=0;ae<V;ae+=1)G=a(G,we);return G},Ye=function(G,V){let ae,he,ve,T,k=arguments.length>2&&arguments[2]!==void 0?arguments[2]:G,J=arguments.length>3&&arguments[3]!==void 0?arguments[3]:V,B=arguments.length>4&&arguments[4]!==void 0&&arguments[4],te=arguments.length>5&&arguments[5]!==void 0&&arguments[5];do ae=Le(k,2,12),he=Ne(G,12),B&&(he=Ge(he)),ve=Le(J,3,8),T=Ne(V,8),te&&(T=Ge(T));while(f(he)!==f(T));return xe(ae,he,ve,T)},st=()=>Ye([M,b,_,S],[],[],[$,W,L,z],!1,!0),bt=()=>{let G,V,ae,he;do G=u(o(0,2048),12,2),ae=u(o(0,2187),8,3),V=p(o(0,479001600),[0,1,2,3,4,5,6,7,8,9,10,11],12),he=p(o(0,40320),[0,1,2,3,4,5,6,7],8);while(f(V)!==f(he));return xe(G,V,ae,he)},re=()=>Ye([M,b,_,S,E,R],[$,W,L,z]),Be=()=>Ye([],[0,1,2,3,4,5,6,7]),ge=()=>Ye([0,1,2,3,4,5,6,7,8,9,10,11],[]),Fe=[M,b,_,S,E,R],qe=()=>Ye(Fe,[],Fe,[],!1,!0),it=()=>Ye([M,b,_,S,I],[$,W,L,z,U]),ot=()=>Ye([M,b,_,S],[$,W,L,z],[],[]),ht=[M,b,_,S],cn=[$,W,L,z],pt=()=>Ye(ht,cn,[],cn),N=[$,W,L,z,U],de=()=>Ye([M,b,_,S,I],N,[],N);var ue={solveCoordinates:xe,solve:function(G){let V=arguments.length>1&&arguments[1]!==void 0?arguments[1]:"kociemba";const ae={kociemba:le,cross:Te,eoline:Ce,fb:D,xcross:ne};if(ae[V])return ae[V](G);throw new Error("Specified solver does not exist.")},scramble:function(){let G=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"3x3";const V={"3x3":bt,"2gll":st,cmll:re,corners:Be,edges:ge,lse:qe,lsll:it,pll:ot,zbll:pt,zzls:de};if(V[G])return V[G]();throw new Error("Specified scrambler does not exist.")},initialize:G=>{const V={cross:pe,eoline:ze,fb:O,xcross:Re};if(G==="kociemba")se.initialize(),ie.initialize();else{if(!V[G])throw new Error("Specified solver does not exist.");V[G].initialize()}}};return ue}))})(Hl)),Hl.exports}var Uo=uL();const fL="#FFFFFF",hL="#B90000",pL="#FFD500",mL="#FF5900",xL="#009B48",gL="#0045AD",Ci=1.04,o3=[6,8,26,24,0,2,20,18],a3=[15,7,17,25,9,1,11,19,3,5,23,21],c3=[4,5,5,8,-1,9,0,1,1,4,-1,6,-1,-1,-1,0,-1,2,7,7,6,11,-1,10,3,3,2],ns=new St,Di=new St,lc=new St,dc=new St,Zr=new St,ws=new St,Ms=new St,vL=new St,G0=new St,k0=new St;vL.setFromAxisAngle(new ce(0,0,1),-Math.PI);G0.setFromAxisAngle(new ce(0,0,1),-Math.PI/2);k0.setFromAxisAngle(new ce(0,0,1),Math.PI/2);Zr.setFromAxisAngle(new ce(0,1,0),-Math.PI);ws.setFromAxisAngle(new ce(0,1,0),-Math.PI/2);Ms.setFromAxisAngle(new ce(0,1,0),Math.PI/2);Di.setFromAxisAngle(new ce(1,0,0),-Math.PI);lc.setFromAxisAngle(new ce(1,0,0),-Math.PI/2);dc.setFromAxisAngle(new ce(1,0,0),Math.PI/2);const l3=[ns,ws,Zr,Ms,Di.clone().multiply(Ms),Di.clone().multiply(Zr),Di.clone().multiply(ws),Di],d3=[ns,ws,Zr,Ms,Di,Ms.clone().premultiply(Di),Zr.clone().multiply(Di),ws.clone().premultiply(Di),lc,dc.clone().premultiply(Zr),lc.clone().premultiply(Zr),dc];class li extends wa{static DEFAULT_COLORS=[hL,mL,fL,pL,xL,gL];static DEFAULT_INTERNAL_COLOR="#300040";colors;internalColor;cubies=new Array(27);permutation=new Array(27);cubieSize;turnTime;constructor(e){if(super(),e.colors!==void 0&&e.colors.length!==6)throw new Error("Unexpected number of colors, expected 6.");const t=e.cubieSize===void 0?1:e.cubieSize,i=e.colors===void 0?li.DEFAULT_COLORS:e.colors,r=e.internalColor===void 0?li.DEFAULT_INTERNAL_COLOR:e.internalColor;this.cubieSize=t,this.turnTime=e.turnTime===void 0?100:e.turnTime;for(let l=0;l<27;l++)this.permutation[l]=l;this.colors=new Array(6);for(let l=0;l<6;l++){const c=i[l];typeof c=="string"?this.colors[l]=new Yc({color:c}):this.colors[l]=c}typeof r=="string"?this.internalColor=new Yc({color:r}):this.internalColor=r;const s=[this.colors[5],this.colors[4]],o=[this.colors[2],this.colors[3]],a=[this.colors[1],this.colors[0]];for(let l=0;l<=2;l++)for(let c=0;c<=2;c++)for(let d=0;d<=2;d++){if(l===1&&c===1&&d===1)continue;const u=new Dd(t,t,t),f=[d==2?a[0]:this.internalColor,d==0?a[1]:this.internalColor,c==2?o[0]:this.internalColor,c==0?o[1]:this.internalColor,l==2?s[0]:this.internalColor,l==0?s[1]:this.internalColor],h=new Ii(u,f);h.name=`Cubie_${l}${c}${d}`,h.position.x=this.position.x+t*(d-1)*Ci,h.position.y=this.position.y+t*(c-1)*Ci,h.position.z=this.position.z+t*(l-1)*Ci;const p=9*l+3*c+d;this.cubies[p]=h,this.add(h)}}setState(e){const t=e.corners.length;for(let s=0;s<t;s++)this.permutation[o3[s]]=o3[e.corners[s]];const i=e.edges.length;for(let s=0;s<i;s++)this.permutation[a3[s]]=a3[e.edges[s]];const r=new St;for(let s=0;s<=2;s++)for(let o=0;o<=2;o++)for(let a=0;a<=2;a++){const l=Math.abs(s-1)+Math.abs(o-1)+Math.abs(a-1);if(l===0)continue;const c=9*s+3*o+a,d=this.permutation[c],u=this.cubies[d],f=new ce(a-1,o-1,s-1).normalize(),h=c3[c],p=c3[d];if(l===3){r.copy(l3[p]).invert().premultiply(l3[h]),u.setRotationFromQuaternion(r);const x=e.cornerOrientations[h];r.setFromAxisAngle(f,-((x+1)%3-1)*2*Math.PI/3),u.applyQuaternion(r)}else if(l===2){r.copy(d3[p]).invert().premultiply(d3[h]),u.setRotationFromQuaternion(r);const x=e.edgeOrientations[h];r.setFromAxisAngle(f,x*Math.PI),u.applyQuaternion(r)}u.position.x=this.position.x+this.cubieSize*(a-1)*Ci,u.position.y=this.position.y+this.cubieSize*(o-1)*Ci,u.position.z=this.position.z+this.cubieSize*(s-1)*Ci}}center(){this.setRotationFromQuaternion(ns)}reset(){for(let e=0;e<27;e++)this.permutation[e]=e;for(let e=0;e<=2;e++)for(let t=0;t<=2;t++)for(let i=0;i<=2;i++){if(e===1&&t===1&&i===1)continue;const r=this.cubies[9*e+3*t+i];r.position.x=this.position.x+this.cubieSize*(i-1)*Ci,r.position.y=this.position.y+this.cubieSize*(t-1)*Ci,r.position.z=this.position.z+this.cubieSize*(e-1)*Ci,r.setRotationFromQuaternion(ns)}}turnQueue=[];workOutstanding=!1;animate(){if(!this.workOutstanding){this.workOutstanding=!0;const e=()=>{if(this.turnQueue.length>0){const[t,i,r]=this.turnQueue[0];this.turnQueue=this.turnQueue.slice(1),this.doTurn(t,i,()=>{r(),e()})}else this.workOutstanding=!1};e()}}static MOVE_INFO={F:{stride1:3,stride2:1,offset:0,endQ:k0,perm:[2,5,8,1,4,7,0,3,6,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"F'":{stride1:3,stride2:1,offset:0,endQ:G0,perm:[6,3,0,7,4,1,8,5,2,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},B:{stride1:3,stride2:1,offset:18,endQ:G0,perm:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,24,21,18,25,22,19,26,23,20]},"B'":{stride1:3,stride2:1,offset:18,endQ:k0,perm:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,26,19,22,25,18,21,24]},U:{stride1:9,stride2:1,offset:6,endQ:ws,perm:[0,1,2,3,4,5,8,17,26,9,10,11,12,13,14,7,16,25,18,19,20,21,22,23,6,15,24]},"U'":{stride1:9,stride2:1,offset:6,endQ:Ms,perm:[0,1,2,3,4,5,24,15,6,9,10,11,12,13,14,25,16,7,18,19,20,21,22,23,26,17,8]},D:{stride1:9,stride2:1,offset:0,endQ:Ms,perm:[18,9,0,3,4,5,6,7,8,19,10,1,12,13,14,15,16,17,20,11,2,21,22,23,24,25,26]},"D'":{stride1:9,stride2:1,offset:0,endQ:ws,perm:[2,11,20,3,4,5,6,7,8,1,10,19,12,13,14,15,16,17,0,9,18,21,22,23,24,25,26]},R:{stride1:9,stride2:3,offset:0,endQ:dc,perm:[6,1,2,15,4,5,24,7,8,3,10,11,12,13,14,21,16,17,0,19,20,9,22,23,18,25,26]},"R'":{stride1:9,stride2:3,offset:0,endQ:lc,perm:[18,1,2,9,4,5,0,7,8,21,10,11,12,13,14,3,16,17,24,19,20,15,22,23,6,25,26]},L:{stride1:9,stride2:3,offset:2,endQ:lc,perm:[0,1,20,3,4,11,6,7,2,9,10,23,12,13,14,15,16,5,18,19,26,21,22,17,24,25,8]},"L'":{stride1:9,stride2:3,offset:2,endQ:dc,perm:[0,1,8,3,4,17,6,7,26,9,10,5,12,13,14,15,16,23,18,19,2,21,22,11,24,25,20]}};doTurn(e,t,i){const r=[],{stride1:s,stride2:o,offset:a,endQ:l,perm:c}=li.MOVE_INFO[e];for(let m=0;m<=2;m++)for(let v=0;v<=2;v++){const g=this.permutation[s*m+o*v+a];r.push(this.cubies[g])}const d=this.permutation.slice();for(let m=0;m<27;m++)this.permutation[c[m]]=d[m];let u=null;const f=new St,h=new St;let p=new St;const x=m=>{if(u===null)u=m,requestAnimationFrame(x);else{const v=m-u,g=Math.min(v/t,1);h.slerpQuaternions(ns,l,u3(u3(g))),f.copy(p),f.invert().premultiply(h),p.copy(h);for(const w of r)w.position.applyQuaternion(f),w.applyQuaternion(f);g!==1?requestAnimationFrame(x):i()}};requestAnimationFrame(x)}turn(e,t=this.turnTime){return new Promise((i,r)=>{this.turnQueue.push([e,Math.min(this.turnTime,t),i]),this.animate()})}updateOptions(e){if(e.turnTime!==void 0&&(this.turnTime=e.turnTime),e.colors!==void 0){this.colors=new Array(6);for(let t=0;t<6;t++){const i=e.colors[t];typeof i=="string"?this.colors[t]=new Yc({color:i}):this.colors[t]=i}}if(e.internalColor!==void 0&&(typeof e.internalColor=="string"?this.internalColor=new Yc({color:e.internalColor}):this.internalColor=e.internalColor),e.internalColor!==void 0||e.colors!==void 0){const t=[this.colors[5],this.colors[4]],i=[this.colors[2],this.colors[3]],r=[this.colors[1],this.colors[0]];for(let s=0;s<=2;s++)for(let o=0;o<=2;o++)for(let a=0;a<=2;a++){if(s===1&&o===1&&a===1)continue;const l=[a==2?r[0]:this.internalColor,a==0?r[1]:this.internalColor,o==2?i[0]:this.internalColor,o==0?i[1]:this.internalColor,s==2?t[0]:this.internalColor,s==0?t[1]:this.internalColor],c=9*s+3*o+a;this.cubies[c].material=l}}}}function u3(n){return Math.max(0,Math.min(1,3*n*n-2*n*n*n))}var H0=function(n,e){return H0=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,i){t.__proto__=i}||function(t,i){for(var r in i)Object.prototype.hasOwnProperty.call(i,r)&&(t[r]=i[r])},H0(n,e)};function Ac(n,e){if(typeof e!="function"&&e!==null)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");H0(n,e);function t(){this.constructor=n}n.prototype=e===null?Object.create(e):(t.prototype=e.prototype,new t)}function yL(n,e,t,i){function r(s){return s instanceof t?s:new t(function(o){o(s)})}return new(t||(t=Promise))(function(s,o){function a(d){try{c(i.next(d))}catch(u){o(u)}}function l(d){try{c(i.throw(d))}catch(u){o(u)}}function c(d){d.done?s(d.value):r(d.value).then(a,l)}c((i=i.apply(n,[])).next())})}function Qy(n,e){var t={label:0,sent:function(){if(s[0]&1)throw s[1];return s[1]},trys:[],ops:[]},i,r,s,o;return o={next:a(0),throw:a(1),return:a(2)},typeof Symbol=="function"&&(o[Symbol.iterator]=function(){return this}),o;function a(c){return function(d){return l([c,d])}}function l(c){if(i)throw new TypeError("Generator is already executing.");for(;t;)try{if(i=1,r&&(s=c[0]&2?r.return:c[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,c[1])).done)return s;switch(r=0,s&&(c=[c[0]&2,s.value]),c[0]){case 0:case 1:s=c;break;case 4:return t.label++,{value:c[1],done:!1};case 5:t.label++,r=c[1],c=[0];continue;case 7:c=t.ops.pop(),t.trys.pop();continue;default:if(s=t.trys,!(s=s.length>0&&s[s.length-1])&&(c[0]===6||c[0]===2)){t=0;continue}if(c[0]===3&&(!s||c[1]>s[0]&&c[1]<s[3])){t.label=c[1];break}if(c[0]===6&&t.label<s[1]){t.label=s[1],s=c;break}if(s&&t.label<s[2]){t.label=s[2],t.ops.push(c);break}s[2]&&t.ops.pop(),t.trys.pop();continue}c=e.call(n,t)}catch(d){c=[6,d],r=0}finally{i=s=0}if(c[0]&5)throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}}function Go(n){var e=typeof Symbol=="function"&&Symbol.iterator,t=e&&n[e],i=0;if(t)return t.call(n);if(n&&typeof n.length=="number")return{next:function(){return n&&i>=n.length&&(n=void 0),{value:n&&n[i++],done:!n}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")}function uc(n,e){var t=typeof Symbol=="function"&&n[Symbol.iterator];if(!t)return n;var i=t.call(n),r,s=[],o;try{for(;(e===void 0||e-- >0)&&!(r=i.next()).done;)s.push(r.value)}catch(a){o={error:a}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return s}function Rd(n,e,t){if(arguments.length===2)for(var i=0,r=e.length,s;i<r;i++)(s||!(i in e))&&(s||(s=Array.prototype.slice.call(e,0,i)),s[i]=e[i]);return n.concat(s||Array.prototype.slice.call(e))}function wo(n){return this instanceof wo?(this.v=n,this):new wo(n)}function bL(n,e,t){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i=t.apply(n,e||[]),r,s=[];return r={},o("next"),o("throw"),o("return"),r[Symbol.asyncIterator]=function(){return this},r;function o(f){i[f]&&(r[f]=function(h){return new Promise(function(p,x){s.push([f,h,p,x])>1||a(f,h)})})}function a(f,h){try{l(i[f](h))}catch(p){u(s[0][3],p)}}function l(f){f.value instanceof wo?Promise.resolve(f.value.v).then(c,d):u(s[0][2],f)}function c(f){a("next",f)}function d(f){a("throw",f)}function u(f,h){f(h),s.shift(),s.length&&a(s[0][0],s[0][1])}}function _L(n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e=n[Symbol.asyncIterator],t;return e?e.call(n):(n=typeof Go=="function"?Go(n):n[Symbol.iterator](),t={},i("next"),i("throw"),i("return"),t[Symbol.asyncIterator]=function(){return this},t);function i(s){t[s]=n[s]&&function(o){return new Promise(function(a,l){o=n[s](o),r(a,l,o.done,o.value)})}}function r(s,o,a,l){Promise.resolve(l).then(function(c){s({value:c,done:a})},o)}}function yt(n){return typeof n=="function"}function eb(n){var e=function(i){Error.call(i),i.stack=new Error().stack},t=n(e);return t.prototype=Object.create(Error.prototype),t.prototype.constructor=t,t}var Vh=eb(function(n){return function(t){n(this),this.message=t?t.length+` errors occurred during unsubscription:
`+t.map(function(i,r){return r+1+") "+i.toString()}).join(`
  `):"",this.name="UnsubscriptionError",this.errors=t}});function V0(n,e){if(n){var t=n.indexOf(e);0<=t&&n.splice(t,1)}}var ta=(function(){function n(e){this.initialTeardown=e,this.closed=!1,this._parentage=null,this._finalizers=null}return n.prototype.unsubscribe=function(){var e,t,i,r,s;if(!this.closed){this.closed=!0;var o=this._parentage;if(o)if(this._parentage=null,Array.isArray(o))try{for(var a=Go(o),l=a.next();!l.done;l=a.next()){var c=l.value;c.remove(this)}}catch(x){e={error:x}}finally{try{l&&!l.done&&(t=a.return)&&t.call(a)}finally{if(e)throw e.error}}else o.remove(this);var d=this.initialTeardown;if(yt(d))try{d()}catch(x){s=x instanceof Vh?x.errors:[x]}var u=this._finalizers;if(u){this._finalizers=null;try{for(var f=Go(u),h=f.next();!h.done;h=f.next()){var p=h.value;try{f3(p)}catch(x){s=s??[],x instanceof Vh?s=Rd(Rd([],uc(s)),uc(x.errors)):s.push(x)}}}catch(x){i={error:x}}finally{try{h&&!h.done&&(r=f.return)&&r.call(f)}finally{if(i)throw i.error}}}if(s)throw new Vh(s)}},n.prototype.add=function(e){var t;if(e&&e!==this)if(this.closed)f3(e);else{if(e instanceof n){if(e.closed||e._hasParent(this))return;e._addParent(this)}(this._finalizers=(t=this._finalizers)!==null&&t!==void 0?t:[]).push(e)}},n.prototype._hasParent=function(e){var t=this._parentage;return t===e||Array.isArray(t)&&t.includes(e)},n.prototype._addParent=function(e){var t=this._parentage;this._parentage=Array.isArray(t)?(t.push(e),t):t?[t,e]:e},n.prototype._removeParent=function(e){var t=this._parentage;t===e?this._parentage=null:Array.isArray(t)&&V0(t,e)},n.prototype.remove=function(e){var t=this._finalizers;t&&V0(t,e),e instanceof n&&e._removeParent(this)},n.EMPTY=(function(){var e=new n;return e.closed=!0,e})(),n})(),tb=ta.EMPTY;function nb(n){return n instanceof ta||n&&"closed"in n&&yt(n.remove)&&yt(n.add)&&yt(n.unsubscribe)}function f3(n){yt(n)?n():n.unsubscribe()}var wL={Promise:void 0},ML={setTimeout:function(n,e){for(var t=[],i=2;i<arguments.length;i++)t[i-2]=arguments[i];return setTimeout.apply(void 0,Rd([n,e],uc(t)))},clearTimeout:function(n){return clearTimeout(n)},delegate:void 0};function ib(n){ML.setTimeout(function(){throw n})}function W0(){}function Vl(n){n()}var Gp=(function(n){Ac(e,n);function e(t){var i=n.call(this)||this;return i.isStopped=!1,t?(i.destination=t,nb(t)&&t.add(i)):i.destination=TL,i}return e.create=function(t,i,r){return new $0(t,i,r)},e.prototype.next=function(t){this.isStopped||this._next(t)},e.prototype.error=function(t){this.isStopped||(this.isStopped=!0,this._error(t))},e.prototype.complete=function(){this.isStopped||(this.isStopped=!0,this._complete())},e.prototype.unsubscribe=function(){this.closed||(this.isStopped=!0,n.prototype.unsubscribe.call(this),this.destination=null)},e.prototype._next=function(t){this.destination.next(t)},e.prototype._error=function(t){try{this.destination.error(t)}finally{this.unsubscribe()}},e.prototype._complete=function(){try{this.destination.complete()}finally{this.unsubscribe()}},e})(ta),SL=(function(){function n(e){this.partialObserver=e}return n.prototype.next=function(e){var t=this.partialObserver;if(t.next)try{t.next(e)}catch(i){Fl(i)}},n.prototype.error=function(e){var t=this.partialObserver;if(t.error)try{t.error(e)}catch(i){Fl(i)}else Fl(e)},n.prototype.complete=function(){var e=this.partialObserver;if(e.complete)try{e.complete()}catch(t){Fl(t)}},n})(),$0=(function(n){Ac(e,n);function e(t,i,r){var s=n.call(this)||this,o;return yt(t)||!t?o={next:t??void 0,error:i??void 0,complete:r??void 0}:o=t,s.destination=new SL(o),s}return e})(Gp);function Fl(n){ib(n)}function EL(n){throw n}var TL={closed:!0,next:W0,error:EL,complete:W0},kp=(function(){return typeof Symbol=="function"&&Symbol.observable||"@@observable"})();function rb(n){return n}function AL(n){return n.length===0?rb:n.length===1?n[0]:function(t){return n.reduce(function(i,r){return r(i)},t)}}var an=(function(){function n(e){e&&(this._subscribe=e)}return n.prototype.lift=function(e){var t=new n;return t.source=this,t.operator=e,t},n.prototype.subscribe=function(e,t,i){var r=this,s=CL(e)?e:new $0(e,t,i);return Vl(function(){var o=r,a=o.operator,l=o.source;s.add(a?a.call(s,l):l?r._subscribe(s):r._trySubscribe(s))}),s},n.prototype._trySubscribe=function(e){try{return this._subscribe(e)}catch(t){e.error(t)}},n.prototype.forEach=function(e,t){var i=this;return t=h3(t),new t(function(r,s){var o=new $0({next:function(a){try{e(a)}catch(l){s(l),o.unsubscribe()}},error:s,complete:r});i.subscribe(o)})},n.prototype._subscribe=function(e){var t;return(t=this.source)===null||t===void 0?void 0:t.subscribe(e)},n.prototype[kp]=function(){return this},n.prototype.pipe=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return AL(e)(this)},n.prototype.toPromise=function(e){var t=this;return e=h3(e),new e(function(i,r){var s;t.subscribe(function(o){return s=o},function(o){return r(o)},function(){return i(s)})})},n.create=function(e){return new n(e)},n})();function h3(n){var e;return(e=n??wL.Promise)!==null&&e!==void 0?e:Promise}function LL(n){return n&&yt(n.next)&&yt(n.error)&&yt(n.complete)}function CL(n){return n&&n instanceof Gp||LL(n)&&nb(n)}function RL(n){return yt(n?.lift)}function na(n){return function(e){if(RL(e))return e.lift(function(t){try{return n(t,this)}catch(i){this.error(i)}});throw new TypeError("Unable to lift unknown Observable type")}}function ko(n,e,t,i,r){return new PL(n,e,t,i,r)}var PL=(function(n){Ac(e,n);function e(t,i,r,s,o,a){var l=n.call(this,t)||this;return l.onFinalize=o,l.shouldUnsubscribe=a,l._next=i?function(c){try{i(c)}catch(d){t.error(d)}}:n.prototype._next,l._error=s?function(c){try{s(c)}catch(d){t.error(d)}finally{this.unsubscribe()}}:n.prototype._error,l._complete=r?function(){try{r()}catch(c){t.error(c)}finally{this.unsubscribe()}}:n.prototype._complete,l}return e.prototype.unsubscribe=function(){var t;if(!this.shouldUnsubscribe||this.shouldUnsubscribe()){var i=this.closed;n.prototype.unsubscribe.call(this),!i&&((t=this.onFinalize)===null||t===void 0||t.call(this))}},e})(Gp),sb={now:function(){return(sb.delegate||performance).now()},delegate:void 0},IL={schedule:function(n){var e=requestAnimationFrame,t=cancelAnimationFrame,i=e(function(r){t=void 0,n(r)});return new ta(function(){return t?.(i)})}};function ob(n){return n?ab():DL}function ab(n){var e=IL.schedule;return new an(function(t){var i=new ta,r=sb,s=r.now(),o=function(a){var l=r.now();t.next({timestamp:a,elapsed:l-s}),t.closed||i.add(e(o))};return i.add(e(o)),i})}var DL=ab(),OL=eb(function(n){return function(){n(this),this.name="ObjectUnsubscribedError",this.message="object unsubscribed"}}),nn=(function(n){Ac(e,n);function e(){var t=n.call(this)||this;return t.closed=!1,t.currentObservers=null,t.observers=[],t.isStopped=!1,t.hasError=!1,t.thrownError=null,t}return e.prototype.lift=function(t){var i=new p3(this,this);return i.operator=t,i},e.prototype._throwIfClosed=function(){if(this.closed)throw new OL},e.prototype.next=function(t){var i=this;Vl(function(){var r,s;if(i._throwIfClosed(),!i.isStopped){i.currentObservers||(i.currentObservers=Array.from(i.observers));try{for(var o=Go(i.currentObservers),a=o.next();!a.done;a=o.next()){var l=a.value;l.next(t)}}catch(c){r={error:c}}finally{try{a&&!a.done&&(s=o.return)&&s.call(o)}finally{if(r)throw r.error}}}})},e.prototype.error=function(t){var i=this;Vl(function(){if(i._throwIfClosed(),!i.isStopped){i.hasError=i.isStopped=!0,i.thrownError=t;for(var r=i.observers;r.length;)r.shift().error(t)}})},e.prototype.complete=function(){var t=this;Vl(function(){if(t._throwIfClosed(),!t.isStopped){t.isStopped=!0;for(var i=t.observers;i.length;)i.shift().complete()}})},e.prototype.unsubscribe=function(){this.isStopped=this.closed=!0,this.observers=this.currentObservers=null},Object.defineProperty(e.prototype,"observed",{get:function(){var t;return((t=this.observers)===null||t===void 0?void 0:t.length)>0},enumerable:!1,configurable:!0}),e.prototype._trySubscribe=function(t){return this._throwIfClosed(),n.prototype._trySubscribe.call(this,t)},e.prototype._subscribe=function(t){return this._throwIfClosed(),this._checkFinalizedStatuses(t),this._innerSubscribe(t)},e.prototype._innerSubscribe=function(t){var i=this,r=this,s=r.hasError,o=r.isStopped,a=r.observers;return s||o?tb:(this.currentObservers=null,a.push(t),new ta(function(){i.currentObservers=null,V0(a,t)}))},e.prototype._checkFinalizedStatuses=function(t){var i=this,r=i.hasError,s=i.thrownError,o=i.isStopped;r?t.error(s):o&&t.complete()},e.prototype.asObservable=function(){var t=new an;return t.source=this,t},e.create=function(t,i){return new p3(t,i)},e})(an),p3=(function(n){Ac(e,n);function e(t,i){var r=n.call(this)||this;return r.destination=t,r.source=i,r}return e.prototype.next=function(t){var i,r;(r=(i=this.destination)===null||i===void 0?void 0:i.next)===null||r===void 0||r.call(i,t)},e.prototype.error=function(t){var i,r;(r=(i=this.destination)===null||i===void 0?void 0:i.error)===null||r===void 0||r.call(i,t)},e.prototype.complete=function(){var t,i;(i=(t=this.destination)===null||t===void 0?void 0:t.complete)===null||i===void 0||i.call(t)},e.prototype._subscribe=function(t){var i,r;return(r=(i=this.source)===null||i===void 0?void 0:i.subscribe(t))!==null&&r!==void 0?r:tb},e})(nn),qL=new an(function(n){return n.complete()});function zL(n){return n&&yt(n.schedule)}function cb(n){return n[n.length-1]}function FL(n){return zL(cb(n))?n.pop():void 0}function NL(n,e){return typeof cb(n)=="number"?n.pop():e}var Hp=(function(n){return n&&typeof n.length=="number"&&typeof n!="function"});function lb(n){return yt(n?.then)}function db(n){return yt(n[kp])}function ub(n){return Symbol.asyncIterator&&yt(n?.[Symbol.asyncIterator])}function fb(n){return new TypeError("You provided "+(n!==null&&typeof n=="object"?"an invalid object":"'"+n+"'")+" where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.")}function BL(){return typeof Symbol!="function"||!Symbol.iterator?"@@iterator":Symbol.iterator}var hb=BL();function pb(n){return yt(n?.[hb])}function mb(n){return bL(this,arguments,function(){var t,i,r,s;return Qy(this,function(o){switch(o.label){case 0:t=n.getReader(),o.label=1;case 1:o.trys.push([1,,9,10]),o.label=2;case 2:return[4,wo(t.read())];case 3:return i=o.sent(),r=i.value,s=i.done,s?[4,wo(void 0)]:[3,5];case 4:return[2,o.sent()];case 5:return[4,wo(r)];case 6:return[4,o.sent()];case 7:return o.sent(),[3,2];case 8:return[3,10];case 9:return t.releaseLock(),[7];case 10:return[2]}})})}function xb(n){return yt(n?.getReader)}function Ar(n){if(n instanceof an)return n;if(n!=null){if(db(n))return UL(n);if(Hp(n))return GL(n);if(lb(n))return kL(n);if(ub(n))return gb(n);if(pb(n))return HL(n);if(xb(n))return VL(n)}throw fb(n)}function UL(n){return new an(function(e){var t=n[kp]();if(yt(t.subscribe))return t.subscribe(e);throw new TypeError("Provided object does not correctly implement Symbol.observable")})}function GL(n){return new an(function(e){for(var t=0;t<n.length&&!e.closed;t++)e.next(n[t]);e.complete()})}function kL(n){return new an(function(e){n.then(function(t){e.closed||(e.next(t),e.complete())},function(t){return e.error(t)}).then(null,ib)})}function HL(n){return new an(function(e){var t,i;try{for(var r=Go(n),s=r.next();!s.done;s=r.next()){var o=s.value;if(e.next(o),e.closed)return}}catch(a){t={error:a}}finally{try{s&&!s.done&&(i=r.return)&&i.call(r)}finally{if(t)throw t.error}}e.complete()})}function gb(n){return new an(function(e){WL(n,e).catch(function(t){return e.error(t)})})}function VL(n){return gb(mb(n))}function WL(n,e){var t,i,r,s;return yL(this,void 0,void 0,function(){var o,a;return Qy(this,function(l){switch(l.label){case 0:l.trys.push([0,5,6,11]),t=_L(n),l.label=1;case 1:return[4,t.next()];case 2:if(i=l.sent(),!!i.done)return[3,4];if(o=i.value,e.next(o),e.closed)return[2];l.label=3;case 3:return[3,1];case 4:return[3,11];case 5:return a=l.sent(),r={error:a},[3,11];case 6:return l.trys.push([6,,9,10]),i&&!i.done&&(s=t.return)?[4,s.call(t)]:[3,8];case 7:l.sent(),l.label=8;case 8:return[3,10];case 9:if(r)throw r.error;return[7];case 10:return[7];case 11:return e.complete(),[2]}})})}function is(n,e,t,i,r){i===void 0&&(i=0),r===void 0&&(r=!1);var s=e.schedule(function(){t(),r?n.add(this.schedule(null,i)):this.unsubscribe()},i);if(n.add(s),!r)return s}function vb(n,e){return e===void 0&&(e=0),na(function(t,i){t.subscribe(ko(i,function(r){return is(i,n,function(){return i.next(r)},e)},function(){return is(i,n,function(){return i.complete()},e)},function(r){return is(i,n,function(){return i.error(r)},e)}))})}function yb(n,e){return e===void 0&&(e=0),na(function(t,i){i.add(n.schedule(function(){return t.subscribe(i)},e))})}function $L(n,e){return Ar(n).pipe(yb(e),vb(e))}function jL(n,e){return Ar(n).pipe(yb(e),vb(e))}function XL(n,e){return new an(function(t){var i=0;return e.schedule(function(){i===n.length?t.complete():(t.next(n[i++]),t.closed||this.schedule())})})}function YL(n,e){return new an(function(t){var i;return is(t,e,function(){i=n[hb](),is(t,e,function(){var r,s,o;try{r=i.next(),s=r.value,o=r.done}catch(a){t.error(a);return}o?t.complete():t.next(s)},0,!0)}),function(){return yt(i?.return)&&i.return()}})}function bb(n,e){if(!n)throw new Error("Iterable cannot be null");return new an(function(t){is(t,e,function(){var i=n[Symbol.asyncIterator]();is(t,e,function(){i.next().then(function(r){r.done?t.complete():t.next(r.value)})},0,!0)})})}function ZL(n,e){return bb(mb(n),e)}function JL(n,e){if(n!=null){if(db(n))return $L(n,e);if(Hp(n))return XL(n,e);if(lb(n))return jL(n,e);if(ub(n))return bb(n,e);if(pb(n))return YL(n,e);if(xb(n))return ZL(n,e)}throw fb(n)}function KL(n,e){return e?JL(n,e):Ar(n)}function Ss(n,e){return na(function(t,i){var r=0;t.subscribe(ko(i,function(s){i.next(n.call(e,s,r++))}))})}var QL=Array.isArray;function eC(n,e){return QL(e)?n.apply(void 0,Rd([],uc(e))):n(e)}function tC(n){return Ss(function(e){return eC(n,e)})}function nC(n,e,t,i,r,s,o,a){var l=[],c=0,d=0,u=!1,f=function(){u&&!l.length&&!c&&e.complete()},h=function(x){return c<i?p(x):l.push(x)},p=function(x){c++;var m=!1;Ar(t(x,d++)).subscribe(ko(e,function(v){e.next(v)},function(){m=!0},void 0,function(){if(m)try{c--;for(var v=function(){var g=l.shift();o||p(g)};l.length&&c<i;)v();f()}catch(g){e.error(g)}}))};return n.subscribe(ko(e,h,function(){u=!0,f()})),function(){}}function Vp(n,e,t){return t===void 0&&(t=1/0),yt(e)?Vp(function(i,r){return Ss(function(s,o){return e(i,s,r,o)})(Ar(n(i,r)))},t):(typeof e=="number"&&(t=e),na(function(i,r){return nC(i,r,n,t)}))}function iC(n){return n===void 0&&(n=1/0),Vp(rb,n)}var rC=["addListener","removeListener"],sC=["addEventListener","removeEventListener"],oC=["on","off"];function An(n,e,t,i){if(yt(t)&&(i=t,t=void 0),i)return An(n,e,t).pipe(tC(i));var r=uc(lC(n)?sC.map(function(a){return function(l){return n[a](e,l,t)}}):aC(n)?rC.map(m3(n,e)):cC(n)?oC.map(m3(n,e)):[],2),s=r[0],o=r[1];if(!s&&Hp(n))return Vp(function(a){return An(a,e,t)})(Ar(n));if(!s)throw new TypeError("Invalid event target");return new an(function(a){var l=function(){for(var c=[],d=0;d<arguments.length;d++)c[d]=arguments[d];return a.next(1<c.length?c:c[0])};return s(l),function(){return o(l)}})}function m3(n,e){return function(t){return function(i){return n[t](e,i)}}}function aC(n){return yt(n.addListener)&&yt(n.removeListener)}function cC(n){return yt(n.on)&&yt(n.off)}function lC(n){return yt(n.addEventListener)&&yt(n.removeEventListener)}function dC(){for(var n=[],e=0;e<arguments.length;e++)n[e]=arguments[e];var t=FL(n),i=NL(n,1/0),r=n;return r.length?r.length===1?Ar(r[0]):iC(i)(KL(r,t)):qL}function _b(n,e){return na(function(t,i){var r=0;t.subscribe(ko(i,function(s){return n.call(e,s,r++)&&i.next(s)}))})}function uC(n){return na(function(e,t){Ar(n).subscribe(ko(t,function(){return t.complete()},W0)),!t.closed&&e.subscribe(t)})}class Lc{constructor(e,t,i,r){this.corners=e,this.cornerOrientations=t,this.edges=i,this.edgeOrientations=r}static SOLVED=new Lc([0,1,2,3,4,5,6,7],[0,0,0,0,0,0,0],[0,1,2,3,4,5,6,7,8,9,10,11],[0,0,0,0,0,0,0,0,0,0,0,0])}class Ho{constructor(e,t){this.timestamp=e,this.value=t}}function Wp(n){const e=n.length;let t=-n[0].timestamp;for(let i=0;i<e;i++)t+=n[i].timestamp;return t}class fC{constructor(e,t,i,r,s){this.dt=e,this.dqx=t,this.dqy=i,this.dqz=r,this.dqw=s}}function hC(n,e,t,i,r){const s=n.length/20,o=e.length,a=i.length,l=new Array(s);let c=0;for(let d=0;d<s;d++){let u=0,f=!0,h=0;for(let p=0;p<o;p++){const x=n[c+u];f=f&&(t[p]&x>>8)===x>>12&&(e[p]&x&15)===(x>>4&15),h+=t[p]&x>>10,u++}for(let p=0;p<a;p++){const x=n[c+u];f=f&&(r[p]&x>>8)===x>>12&&(i[p]&x&15)===(x>>4&15),h-=r[p]&x>>10,u++}c+=20,l[d]=f&&h===0}return l}const pC=[3855,3871,3887,3903,3919,3935,3951,3967,3855,3871,3887,3903,3919,3935,3951,3967,3983,3999,4015,4031,3903,3855,3871,3887,3919,3935,3951,3967,3903,3855,3871,3887,3919,3935,3951,3967,3983,3999,4015,4031,3887,3903,3855,3871,3919,3935,3951,3967,3887,3903,3855,3871,3919,3935,3951,3967,3983,3999,4015,4031,3871,3887,3903,3855,3919,3935,3951,3967,3871,3887,3903,3855,3919,3935,3951,3967,3983,3999,4015,4031,3855,3871,3887,3903,3935,3951,3967,3919,3855,3871,3887,3903,3935,3951,3967,3919,3983,3999,4015,4031,3855,3871,3887,3903,3951,3967,3919,3935,3855,3871,3887,3903,3951,3967,3919,3935,3983,3999,4015,4031,3855,3871,3887,3903,3967,3919,3935,3951,3855,3871,3887,3903,3967,3919,3935,3951,3983,3999,4015,4031,7967,12127,3887,3903,12047,8015,3951,3967,3855,8095,3887,3903,3919,8079,3951,3967,7967,8031,4015,4031,3935,3919,3887,3903,3871,3855,3951,3967,3855,3935,3887,3903,3919,3871,3951,3967,3999,3983,4015,4031,8015,12047,3887,3903,12127,7967,3951,3967,3855,8079,3887,3903,3919,8095,3951,3967,8031,7967,4015,4031,3855,3871,7999,12159,3919,3935,12079,8047,3855,3871,3887,8127,3919,3935,3951,8111,3983,3999,7999,8063,3855,3871,3967,3951,3919,3935,3903,3887,3855,3871,3887,3967,3919,3935,3951,3903,3983,3999,4031,4015,3855,3871,8047,12079,3919,3935,12159,7999,3855,3871,3887,8111,3919,3935,3951,8127,3983,3999,8063,7999,3855,7983,12143,3903,3919,12063,8031,3967,3855,3871,4015,3903,3919,3935,3999,3967,3983,3887,3951,4031,3855,3951,3935,3903,3919,3887,3871,3967,3855,3871,3951,3903,3919,3935,3887,3967,3983,4015,3999,4031,3855,8031,12063,3903,3919,12143,7983,3967,3855,3871,3999,3903,3919,3935,4015,3967,3983,3951,3887,4031,12111,3871,3887,7951,8063,3935,3951,12095,3983,3871,3887,3903,4031,3935,3951,3967,3919,3999,4015,3855,3967,3871,3887,3919,3903,3935,3951,3855,3919,3871,3887,3903,3855,3935,3951,3967,4031,3999,4015,3983,12095,3871,3887,8063,7951,3935,3951,12111,4031,3871,3887,3903,3983,3935,3951,3967,3855,3999,4015,3919,3840,3840,3840,3840,3919,3935,3951,3967,3840,3840,3840,3840,3919,3935,3951,3967,3983,3999,4015,4031,3855,3871,3887,3903,3840,3840,3840,3840,3855,3871,3887,3903,3840,3840,3840,3840,3983,3999,4015,4031,256,3871,3887,512,512,3935,3951,256,3840,3871,3887,3903,3840,3935,3951,3967,3840,3999,4015,3840,3855,512,256,3903,3919,256,512,3967,3855,3871,3840,3903,3919,3935,3840,3967,3983,3840,3840,4031,3855,3871,1536,256,3919,3935,256,1536,3855,3871,3887,1024,3919,3935,3951,0,3983,3999,0,1024,1536,256,3887,3903,256,1536,3951,3967,3855,1024,3887,3903,3919,0,3951,3967,0,1024,4015,4031,0,0,0,0,3919,3935,3951,3967,0,0,0,0,3919,3935,3951,3967,3983,3999,4015,4031,3855,3871,3887,3903,0,0,0,0,3855,3871,3887,3903,0,0,0,0,3983,3999,4015,4031,0,3871,3887,0,0,3935,3951,0,0,3871,3887,3903,0,3935,3951,3967,0,3999,4015,0,3855,0,0,3903,3919,0,0,3967,3855,3871,0,3903,3919,3935,0,3967,3983,0,0,4031,3855,3871,0,0,3919,3935,0,0,3855,3871,3887,0,3919,3935,3951,0,3983,3999,0,0,0,0,3887,3903,0,0,3951,3967,3855,0,3887,3903,3919,0,3951,3967,0,0,4015,4031,0,0,0,0,3919,3935,3951,3967,0,0,0,0,3919,3935,3951,3967,0,0,0,0,3855,3871,3887,3903,0,0,0,0,3855,3871,3887,3903,0,0,0,0,0,0,0,0,0,3871,3887,0,0,3935,3951,0,0,0,3887,0,0,0,3951,0,0,3999,4015,0,3855,0,0,3903,3919,0,0,3967,3855,0,0,0,3919,0,0,0,3983,0,0,4031,3855,3871,0,0,3919,3935,0,0,0,3871,0,0,0,3935,0,0,3983,3999,0,0,0,0,3887,3903,0,0,3951,3967,0,0,0,3903,0,0,0,3967,0,0,4015,4031,0,0,0,0,0,0,0,0,0,0,0,0,3919,3935,3951,3967,0,0,0,0,0,0,0,0,0,0,0,0,3855,3871,3887,3903,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3887,0,0,0,3951,0,0,3999,4015,0,0,0,0,0,0,0,0,0,3855,0,0,0,3919,0,0,0,3983,0,0,4031,0,0,0,0,0,0,0,0,0,3871,0,0,0,3935,0,0,3983,3999,0,0,0,0,0,0,0,0,0,0,0,0,0,3903,0,0,0,3967,0,0,4015,4031],va=[{label:"Solved",stage:"Solved"},{label:"U",bottom:"Yellow",stage:"PLL"},{label:"U2",bottom:"Yellow",stage:"PLL"},{label:"U'",bottom:"Yellow",stage:"PLL"},{label:"D",bottom:"White",stage:"PLL"},{label:"D2",bottom:"White",stage:"PLL"},{label:"D'",bottom:"White",stage:"PLL"},{label:"F",bottom:"Blue",stage:"PLL"},{label:"F2",bottom:"Blue",stage:"PLL"},{label:"F'",bottom:"Blue",stage:"PLL"},{label:"B",bottom:"Green",stage:"PLL"},{label:"B2",bottom:"Green",stage:"PLL"},{label:"B'",bottom:"Green",stage:"PLL"},{label:"L",bottom:"Red",stage:"PLL"},{label:"L2",bottom:"Red",stage:"PLL"},{label:"L'",bottom:"Red",stage:"PLL"},{label:"R",bottom:"Orange",stage:"PLL"},{label:"R2",bottom:"Orange",stage:"PLL"},{label:"R'",bottom:"Orange",stage:"PLL"},{label:"OLL - Yellow Bottom",bottom:"Yellow",stage:"OLL"},{label:"OLL - White Bottom",bottom:"White",stage:"OLL"},{label:"OLL - Orange Bottom",bottom:"Orange",stage:"OLL"},{label:"OLL - Red Bottom",bottom:"Red",stage:"OLL"},{label:"OLL - Green Bottom",bottom:"Green",stage:"OLL"},{label:"OLL - Blue Bottom",bottom:"Blue",stage:"OLL"},{label:"F2L - Yellow Bottom",bottom:"Yellow",stage:"F2L"},{label:"F2L - White Bottom",bottom:"White",stage:"F2L"},{label:"F2L - Orange Bottom",bottom:"Orange",stage:"F2L"},{label:"F2L - Red Bottom",bottom:"Red",stage:"F2L"},{label:"F2L - Green Bottom",bottom:"Green",stage:"F2L"},{label:"F2L - Blue Bottom",bottom:"Blue",stage:"F2L"},{label:"First Layer - Yellow Bottom",bottom:"Yellow",stage:"First Layer"},{label:"First Layer - White Bottom",bottom:"White",stage:"First Layer"},{label:"First Layer - Orange Bottom",bottom:"Orange",stage:"First Layer"},{label:"First Layer - Red Bottom",bottom:"Red",stage:"First Layer"},{label:"First Layer - Green Bottom",bottom:"Green",stage:"First Layer"},{label:"First Layer - Blue Bottom",bottom:"Blue",stage:"First Layer"},{label:"Yellow Cross",bottom:"Yellow",stage:"Cross"},{label:"White Cross",bottom:"White",stage:"Cross"},{label:"Orange Cross",bottom:"Orange",stage:"Cross"},{label:"Red Cross",bottom:"Red",stage:"Cross"},{label:"Green Cross",bottom:"Green",stage:"Cross"},{label:"Blue Cross",bottom:"Blue",stage:"Cross"}],x3=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],g3=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],v3=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0],y3=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1];class Es{corners=[0,1,2,3,4,5,6,7];cornerOrientations=[0,0,0,0,0,0,0,0];edges=[0,1,2,3,4,5,6,7,8,9,10,11];edgeOrientations=[0,0,0,0,0,0,0,0,0,0,0,0];_patterns=null;constructor(){}static MOVE_INFO={F:{cornerPerm:[1,5,2,3,0,4,6,7],edgePerm:[0,9,2,3,4,8,6,7,1,5,10,11],edgeFlip:[0,1,0,0,0,1,0,0,1,1,0,0],cornerTwists:[1,2,0,0,2,1,0,0]},"F'":{cornerPerm:[4,0,2,3,5,1,6,7],edgePerm:[0,8,2,3,4,9,6,7,5,1,10,11],edgeFlip:[0,1,0,0,0,1,0,0,1,1,0,0],cornerTwists:[1,2,0,0,2,1,0,0]},B:{cornerPerm:[0,1,3,7,4,5,2,6],edgePerm:[0,1,2,11,4,5,6,10,8,9,3,7],edgeFlip:[0,0,0,1,0,0,0,1,0,0,1,1],cornerTwists:[0,0,1,2,0,0,2,1]},"B'":{cornerPerm:[0,1,6,2,4,5,7,3],edgePerm:[0,1,2,10,4,5,6,11,8,9,7,3],edgeFlip:[0,0,0,1,0,0,0,1,0,0,1,1],cornerTwists:[0,0,1,2,0,0,2,1]},R:{cornerPerm:[4,1,2,0,7,5,6,3],edgePerm:[8,1,2,3,11,5,6,7,4,9,10,0],edgeFlip:[0,0,0,0,0,0,0,0,0,0,0,0],cornerTwists:[2,0,0,1,1,0,0,2]},"R'":{cornerPerm:[3,1,2,7,0,5,6,4],edgePerm:[11,1,2,3,8,5,6,7,0,9,10,4],edgeFlip:[0,0,0,0,0,0,0,0,0,0,0,0],cornerTwists:[2,0,0,1,1,0,0,2]},L:{cornerPerm:[0,2,6,3,4,1,5,7],edgePerm:[0,1,10,3,4,5,9,7,8,2,6,11],edgeFlip:[0,0,0,0,0,0,0,0,0,0,0,0],cornerTwists:[0,1,2,0,0,2,1,0]},"L'":{cornerPerm:[0,5,1,3,4,6,2,7],edgePerm:[0,1,9,3,4,5,10,7,8,6,2,11],edgeFlip:[0,0,0,0,0,0,0,0,0,0,0,0],cornerTwists:[0,1,2,0,0,2,1,0]},U:{cornerPerm:[3,0,1,2,4,5,6,7],edgePerm:[3,0,1,2,4,5,6,7,8,9,10,11],edgeFlip:[0,0,0,0,0,0,0,0,0,0,0,0],cornerTwists:[0,0,0,0,0,0,0,0]},"U'":{cornerPerm:[1,2,3,0,4,5,6,7],edgePerm:[1,2,3,0,4,5,6,7,8,9,10,11],edgeFlip:[0,0,0,0,0,0,0,0,0,0,0,0],cornerTwists:[0,0,0,0,0,0,0,0]},D:{cornerPerm:[0,1,2,3,5,6,7,4],edgePerm:[0,1,2,3,5,6,7,4,8,9,10,11],edgeFlip:[0,0,0,0,0,0,0,0,0,0,0,0],cornerTwists:[0,0,0,0,0,0,0,0]},"D'":{cornerPerm:[0,1,2,3,7,4,5,6],edgePerm:[0,1,2,3,7,4,5,6,8,9,10,11],edgeFlip:[0,0,0,0,0,0,0,0,0,0,0,0],cornerTwists:[0,0,0,0,0,0,0,0]}};applyMove(e){this._patterns=null;const{cornerPerm:t,edgePerm:i,edgeFlip:r,cornerTwists:s}=Es.MOVE_INFO[e],o=this.corners.slice();for(let d=0;d<o.length;d++)this.corners[d]=o[t[d]];const a=this.edges.slice();for(let d=0;d<a.length;d++)this.edges[d]=a[i[d]];const l=this.cornerOrientations.slice();for(let d=0;d<l.length;d++)this.cornerOrientations[d]=(l[t[d]]+s[d])%3;const c=this.edgeOrientations.slice();for(let d=0;d<c.length;d++)this.edgeOrientations[d]=(c[i[d]]+r[d])%2}isSolved(){const e=this.corners.length;for(let i=0;i<e;i++)if(this.corners[i]!==i||this.cornerOrientations[i]!==0)return!1;const t=this.edges.length;for(let i=0;i<t;i++)if(this.edges[i]!==i||this.edgeOrientations[i]!==0)return!1;return!0}get patterns(){return this._patterns!==null?this._patterns:(this._patterns=hC(pC,this.corners,this.cornerOrientations,this.edges,this.edgeOrientations),this._patterns)}match(){const e=this.patterns;return va.filter((t,i)=>e[i])}isF2L(e){const t=this.patterns;return e===void 0?t.some((i,r)=>i&&v3[r]===1):t.some((i,r)=>i&&v3[r]===1&&e(va[r]))}isOLL(e){const t=this.patterns;return e===void 0?t.some((i,r)=>i&&g3[r]===1):t.some((i,r)=>i&&g3[r]===1&&e(va[r]))}isPLL(e){const t=this.patterns;return e===void 0?t.some((i,r)=>i&&x3[r]===1):t.some((i,r)=>i&&x3[r]===1&&e(va[r]))}isCross(e){const t=this.patterns;return e===void 0?t.some((i,r)=>i&&y3[r]===1):t.some((i,r)=>i&&y3[r]===1&&e(va[r]))}setState(e){this._patterns=null;const t=this.corners.length;for(let r=0;r<t;r++)this.corners[r]=e.corners[r],this.cornerOrientations[r]=e.cornerOrientations[r];const i=this.edges.length;for(let r=0;r<i;r++)this.edges[r]=e.edges[r],this.edgeOrientations[r]=e.edgeOrientations[r]}getState(){return new Lc(this.corners.slice(),this.cornerOrientations.slice(),this.edges.slice(),this.edgeOrientations.slice())}reset(){this._patterns=null;const e=this.corners.length;for(let i=0;i<e;i++)this.corners[i]=i,this.cornerOrientations[i]=0;const t=this.edges.length;for(let i=0;i<t;i++)this.edges[i]=i,this.edgeOrientations[i]=0}solution(){return Uo.solveCoordinates(this.edgeOrientations,this.edges,this.cornerOrientations,this.corners)}toString(){return JSON.stringify(this)}}function wb(n){return n.indexOf("'")===-1?n+"'":n[0]}function j0(n){return n.map(wb).reverse()}function mC(n){const e=[];for(let t=0;t<n.length;t++){const i=n[t];if(i.indexOf("2")!==-1){const r=i.replace("2","");e.push(r),e.push(r)}else e.push(i)}return e}function b3(n){const e=new Es;return j0(n).forEach(t=>e.applyMove(t)),j0(e.solution().split(" "))}function jd(n){const e=[];let t=null;for(let i=0;i<n.length;i++)t===n[i]?(e.push(t[0]+"2"+t.substring(1)),t=null):(t!==null&&e.push(t),t=n[i]);return t!==null&&e.push(t),e}const _3={F:1,F2:2,"F'":3,B:17,B2:18,"B'":19,U:33,U2:34,"U'":35,D:49,D2:50,"D'":51,R:65,R2:66,"R'":67,L:81,L2:82,"L'":83},xC=["F","B","U","D","R","L"],gC=["","","2","'"];function vC(n,e){return(n&224)===(e&224)}function yC(n,e,t){const i=n&240,r=e&240,s=t!==void 0?t&240:240;if(i===r){const o=(e&3)+4-(n&3)&3;if(o===0)return t===void 0?[]:[t];{const a=i|o;return t===void 0?[a]:[a,t]}}else if(vC(n,e)&&i===s){const o=(t&3)+4-(n&3)&3;if(o===0)return[e];{const a=i|o;return[e,a]}}else{const o=n+2&243;return t===void 0?[o,e]:[o,e,t]}}class Vo{sequence=[];constructor(e){this.sequence=e.length===1&&e[0]===""?[]:e.map(t=>_3[t])}applyMove(e){const t=_3[e],i=this.sequence,r=i.shift(),s=i.shift();return r===void 0?i.push(t):i.unshift(...yC(t,r,s)),i.length===0}get done(){return this.sequence.length===0}toString(){return this.sequence.map(e=>xC[e>>4]+gC[e&15]).join(" ")}}class bC{sim=new Es;startState;moves;times=[];actionSubject=new nn;gyroUpdates;playingSub=null;stepIndex=0;elapsedTimeBase=0;constructor(e,t,i){this.moves=e.slice(),this.sim=new Es;for(let s=0;s<t.length;s++)this.sim.applyMove(t[s]);this.startState=this.sim.getState(),this.moves[0]=new Ho(100,e[0].value);let r=-100;for(const s of this.moves)r+=s.timestamp,this.times.push(r);this.gyroUpdates=i===void 0?[]:i.map(({dt:s,dqx:o,dqy:a,dqz:l,dqw:c})=>({dt:s,dq:new St(o,a,l,c)}))}get actions(){return this.actionSubject}step(){if(this.stepIndex<this.moves.length){const e=this.moves[this.stepIndex];this.stepIndex++,this.sim.applyMove(e.value),this.actionSubject.next({type:"MOVE",move:e})}else this.actionSubject.next({type:"END"})}stepBack(){if(this.stepIndex>0){const{timestamp:e}=this.moves[this.stepIndex];this.stepIndex--;const{value:t}=this.moves[this.stepIndex],i=wb(t);this.sim.applyMove(i),this.actionSubject.next({type:"MOVE",move:new Ho(e,i)})}}emitState(){this.actionSubject.next({type:"SET_CUBE",cubeState:this.sim.getState()})}play(){if(this.actionSubject.next({type:"SET_CUBE",cubeState:this.sim.getState()}),this.playingSub?.unsubscribe(),this.stepIndex===0){const a=this.moves[0];this.actionSubject.next({type:"MOVE",move:a}),this.sim.applyMove(a.value)}const e=this.elapsedTimeBase,t=this.moves.length-1;let i=0,r=0;const s=this.gyroUpdates,o=s.length;this.playingSub=ob().subscribe(({elapsed:a})=>{const l=e+a;if(this.elapsedTimeBase=l,this.stepIndex>=t){const d=this.times[this.stepIndex];this.actionSubject.next({type:"TIME",elapsedTime:Math.min(d,l)}),l>d&&(this.playingSub?.unsubscribe(),this.playingSub=null,this.actionSubject.next({type:"END"}),this.sim.setState(this.startState),this.elapsedTimeBase=0,this.stepIndex=0);return}for(this.actionSubject.next({type:"TIME",elapsedTime:l});this.stepIndex<t&&l>this.times[this.stepIndex];){this.stepIndex++;const d=this.moves[this.stepIndex];this.actionSubject.next({type:"MOVE",move:d}),this.sim.applyMove(d.value)}const c=new St;for(;r<a&&i<o;){const{dt:d,dq:u}=s[i];r+=d,i++,c.multiply(u)}this.actionSubject.next({type:"GYRO",dq:c})})}pause(){this.playingSub?.unsubscribe(),this.playingSub=null}goToBeginning(){this.pause(),this.stepIndex=0,this.elapsedTimeBase=0,this.sim.setState(this.startState),this.actionSubject.next({type:"SET_CUBE",cubeState:this.startState})}}function mn(n,e){const t=typeof n=="string"?document.querySelector(n):n;if(t===null)throw new Error(`Selector ${n} didn't find an element.`);return An(t,"click").pipe(Ss(e)).pipe(_b(i=>i!==void 0))}function uo(n,e){const t=typeof n=="string"?document.querySelector(n):n;if(t===null)throw new Error(`Selector ${n} didn't find an element.`);return An(t,"click").pipe(Ss(i=>e(i.target.checked)))}var Wh={exports:{}};/*! MIT License. Copyright 2015-2018 Richard Moore <me@ricmoo.com>. See LICENSE.txt. */var w3;function _C(){return w3||(w3=1,(function(n,e){(function(t){function i(P){return parseInt(P)===P}function r(P){if(!i(P.length))return!1;for(var H=0;H<P.length;H++)if(!i(P[H])||P[H]<0||P[H]>255)return!1;return!0}function s(P,H){if(P.buffer&&P.name==="Uint8Array")return H&&(P.slice?P=P.slice():P=Array.prototype.slice.call(P)),P;if(Array.isArray(P)){if(!r(P))throw new Error("Array contains invalid value: "+P);return new Uint8Array(P)}if(i(P.length)&&r(P))return new Uint8Array(P);throw new Error("unsupported array-like object")}function o(P){return new Uint8Array(P)}function a(P,H,Y,Q,F){(Q!=null||F!=null)&&(P.slice?P=P.slice(Q,F):P=Array.prototype.slice.call(P,Q,F)),H.set(P,Y)}var l=(function(){function P(Y){var Q=[],F=0;for(Y=encodeURI(Y);F<Y.length;){var oe=Y.charCodeAt(F++);oe===37?(Q.push(parseInt(Y.substr(F,2),16)),F+=2):Q.push(oe)}return s(Q)}function H(Y){for(var Q=[],F=0;F<Y.length;){var oe=Y[F];oe<128?(Q.push(String.fromCharCode(oe)),F++):oe>191&&oe<224?(Q.push(String.fromCharCode((oe&31)<<6|Y[F+1]&63)),F+=2):(Q.push(String.fromCharCode((oe&15)<<12|(Y[F+1]&63)<<6|Y[F+2]&63)),F+=3)}return Q.join("")}return{toBytes:P,fromBytes:H}})(),c=(function(){function P(Q){for(var F=[],oe=0;oe<Q.length;oe+=2)F.push(parseInt(Q.substr(oe,2),16));return F}var H="0123456789abcdef";function Y(Q){for(var F=[],oe=0;oe<Q.length;oe++){var Se=Q[oe];F.push(H[(Se&240)>>4]+H[Se&15])}return F.join("")}return{toBytes:P,fromBytes:Y}})(),d={16:10,24:12,32:14},u=[1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145],f=[99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22],h=[82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125],p=[3328402341,4168907908,4000806809,4135287693,4294111757,3597364157,3731845041,2445657428,1613770832,33620227,3462883241,1445669757,3892248089,3050821474,1303096294,3967186586,2412431941,528646813,2311702848,4202528135,4026202645,2992200171,2387036105,4226871307,1101901292,3017069671,1604494077,1169141738,597466303,1403299063,3832705686,2613100635,1974974402,3791519004,1033081774,1277568618,1815492186,2118074177,4126668546,2211236943,1748251740,1369810420,3521504564,4193382664,3799085459,2883115123,1647391059,706024767,134480908,2512897874,1176707941,2646852446,806885416,932615841,168101135,798661301,235341577,605164086,461406363,3756188221,3454790438,1311188841,2142417613,3933566367,302582043,495158174,1479289972,874125870,907746093,3698224818,3025820398,1537253627,2756858614,1983593293,3084310113,2108928974,1378429307,3722699582,1580150641,327451799,2790478837,3117535592,0,3253595436,1075847264,3825007647,2041688520,3059440621,3563743934,2378943302,1740553945,1916352843,2487896798,2555137236,2958579944,2244988746,3151024235,3320835882,1336584933,3992714006,2252555205,2588757463,1714631509,293963156,2319795663,3925473552,67240454,4269768577,2689618160,2017213508,631218106,1269344483,2723238387,1571005438,2151694528,93294474,1066570413,563977660,1882732616,4059428100,1673313503,2008463041,2950355573,1109467491,537923632,3858759450,4260623118,3218264685,2177748300,403442708,638784309,3287084079,3193921505,899127202,2286175436,773265209,2479146071,1437050866,4236148354,2050833735,3362022572,3126681063,840505643,3866325909,3227541664,427917720,2655997905,2749160575,1143087718,1412049534,999329963,193497219,2353415882,3354324521,1807268051,672404540,2816401017,3160301282,369822493,2916866934,3688947771,1681011286,1949973070,336202270,2454276571,201721354,1210328172,3093060836,2680341085,3184776046,1135389935,3294782118,965841320,831886756,3554993207,4068047243,3588745010,2345191491,1849112409,3664604599,26054028,2983581028,2622377682,1235855840,3630984372,2891339514,4092916743,3488279077,3395642799,4101667470,1202630377,268961816,1874508501,4034427016,1243948399,1546530418,941366308,1470539505,1941222599,2546386513,3421038627,2715671932,3899946140,1042226977,2521517021,1639824860,227249030,260737669,3765465232,2084453954,1907733956,3429263018,2420656344,100860677,4160157185,470683154,3261161891,1781871967,2924959737,1773779408,394692241,2579611992,974986535,664706745,3655459128,3958962195,731420851,571543859,3530123707,2849626480,126783113,865375399,765172662,1008606754,361203602,3387549984,2278477385,2857719295,1344809080,2782912378,59542671,1503764984,160008576,437062935,1707065306,3622233649,2218934982,3496503480,2185314755,697932208,1512910199,504303377,2075177163,2824099068,1841019862,739644986],x=[2781242211,2230877308,2582542199,2381740923,234877682,3184946027,2984144751,1418839493,1348481072,50462977,2848876391,2102799147,434634494,1656084439,3863849899,2599188086,1167051466,2636087938,1082771913,2281340285,368048890,3954334041,3381544775,201060592,3963727277,1739838676,4250903202,3930435503,3206782108,4149453988,2531553906,1536934080,3262494647,484572669,2923271059,1783375398,1517041206,1098792767,49674231,1334037708,1550332980,4098991525,886171109,150598129,2481090929,1940642008,1398944049,1059722517,201851908,1385547719,1699095331,1587397571,674240536,2704774806,252314885,3039795866,151914247,908333586,2602270848,1038082786,651029483,1766729511,3447698098,2682942837,454166793,2652734339,1951935532,775166490,758520603,3000790638,4004797018,4217086112,4137964114,1299594043,1639438038,3464344499,2068982057,1054729187,1901997871,2534638724,4121318227,1757008337,0,750906861,1614815264,535035132,3363418545,3988151131,3201591914,1183697867,3647454910,1265776953,3734260298,3566750796,3903871064,1250283471,1807470800,717615087,3847203498,384695291,3313910595,3617213773,1432761139,2484176261,3481945413,283769337,100925954,2180939647,4037038160,1148730428,3123027871,3813386408,4087501137,4267549603,3229630528,2315620239,2906624658,3156319645,1215313976,82966005,3747855548,3245848246,1974459098,1665278241,807407632,451280895,251524083,1841287890,1283575245,337120268,891687699,801369324,3787349855,2721421207,3431482436,959321879,1469301956,4065699751,2197585534,1199193405,2898814052,3887750493,724703513,2514908019,2696962144,2551808385,3516813135,2141445340,1715741218,2119445034,2872807568,2198571144,3398190662,700968686,3547052216,1009259540,2041044702,3803995742,487983883,1991105499,1004265696,1449407026,1316239930,504629770,3683797321,168560134,1816667172,3837287516,1570751170,1857934291,4014189740,2797888098,2822345105,2754712981,936633572,2347923833,852879335,1133234376,1500395319,3084545389,2348912013,1689376213,3533459022,3762923945,3034082412,4205598294,133428468,634383082,2949277029,2398386810,3913789102,403703816,3580869306,2297460856,1867130149,1918643758,607656988,4049053350,3346248884,1368901318,600565992,2090982877,2632479860,557719327,3717614411,3697393085,2249034635,2232388234,2430627952,1115438654,3295786421,2865522278,3633334344,84280067,33027830,303828494,2747425121,1600795957,4188952407,3496589753,2434238086,1486471617,658119965,3106381470,953803233,334231800,3005978776,857870609,3151128937,1890179545,2298973838,2805175444,3056442267,574365214,2450884487,550103529,1233637070,4289353045,2018519080,2057691103,2399374476,4166623649,2148108681,387583245,3664101311,836232934,3330556482,3100665960,3280093505,2955516313,2002398509,287182607,3413881008,4238890068,3597515707,975967766],m=[1671808611,2089089148,2006576759,2072901243,4061003762,1807603307,1873927791,3310653893,810573872,16974337,1739181671,729634347,4263110654,3613570519,2883997099,1989864566,3393556426,2191335298,3376449993,2106063485,4195741690,1508618841,1204391495,4027317232,2917941677,3563566036,2734514082,2951366063,2629772188,2767672228,1922491506,3227229120,3082974647,4246528509,2477669779,644500518,911895606,1061256767,4144166391,3427763148,878471220,2784252325,3845444069,4043897329,1905517169,3631459288,827548209,356461077,67897348,3344078279,593839651,3277757891,405286936,2527147926,84871685,2595565466,118033927,305538066,2157648768,3795705826,3945188843,661212711,2999812018,1973414517,152769033,2208177539,745822252,439235610,455947803,1857215598,1525593178,2700827552,1391895634,994932283,3596728278,3016654259,695947817,3812548067,795958831,2224493444,1408607827,3513301457,0,3979133421,543178784,4229948412,2982705585,1542305371,1790891114,3410398667,3201918910,961245753,1256100938,1289001036,1491644504,3477767631,3496721360,4012557807,2867154858,4212583931,1137018435,1305975373,861234739,2241073541,1171229253,4178635257,33948674,2139225727,1357946960,1011120188,2679776671,2833468328,1374921297,2751356323,1086357568,2408187279,2460827538,2646352285,944271416,4110742005,3168756668,3066132406,3665145818,560153121,271589392,4279952895,4077846003,3530407890,3444343245,202643468,322250259,3962553324,1608629855,2543990167,1154254916,389623319,3294073796,2817676711,2122513534,1028094525,1689045092,1575467613,422261273,1939203699,1621147744,2174228865,1339137615,3699352540,577127458,712922154,2427141008,2290289544,1187679302,3995715566,3100863416,339486740,3732514782,1591917662,186455563,3681988059,3762019296,844522546,978220090,169743370,1239126601,101321734,611076132,1558493276,3260915650,3547250131,2901361580,1655096418,2443721105,2510565781,3828863972,2039214713,3878868455,3359869896,928607799,1840765549,2374762893,3580146133,1322425422,2850048425,1823791212,1459268694,4094161908,3928346602,1706019429,2056189050,2934523822,135794696,3134549946,2022240376,628050469,779246638,472135708,2800834470,3032970164,3327236038,3894660072,3715932637,1956440180,522272287,1272813131,3185336765,2340818315,2323976074,1888542832,1044544574,3049550261,1722469478,1222152264,50660867,4127324150,236067854,1638122081,895445557,1475980887,3117443513,2257655686,3243809217,489110045,2662934430,3778599393,4162055160,2561878936,288563729,1773916777,3648039385,2391345038,2493985684,2612407707,505560094,2274497927,3911240169,3460925390,1442818645,678973480,3749357023,2358182796,2717407649,2306869641,219617805,3218761151,3862026214,1120306242,1756942440,1103331905,2578459033,762796589,252780047,2966125488,1425844308,3151392187,372911126],v=[1667474886,2088535288,2004326894,2071694838,4075949567,1802223062,1869591006,3318043793,808472672,16843522,1734846926,724270422,4278065639,3621216949,2880169549,1987484396,3402253711,2189597983,3385409673,2105378810,4210693615,1499065266,1195886990,4042263547,2913856577,3570689971,2728590687,2947541573,2627518243,2762274643,1920112356,3233831835,3082273397,4261223649,2475929149,640051788,909531756,1061110142,4160160501,3435941763,875846760,2779116625,3857003729,4059105529,1903268834,3638064043,825316194,353713962,67374088,3351728789,589522246,3284360861,404236336,2526454071,84217610,2593830191,117901582,303183396,2155911963,3806477791,3958056653,656894286,2998062463,1970642922,151591698,2206440989,741110872,437923380,454765878,1852748508,1515908788,2694904667,1381168804,993742198,3604373943,3014905469,690584402,3823320797,791638366,2223281939,1398011302,3520161977,0,3991743681,538992704,4244381667,2981218425,1532751286,1785380564,3419096717,3200178535,960056178,1246420628,1280103576,1482221744,3486468741,3503319995,4025428677,2863326543,4227536621,1128514950,1296947098,859002214,2240123921,1162203018,4193849577,33687044,2139062782,1347481760,1010582648,2678045221,2829640523,1364325282,2745433693,1077985408,2408548869,2459086143,2644360225,943212656,4126475505,3166494563,3065430391,3671750063,555836226,269496352,4294908645,4092792573,3537006015,3452783745,202118168,320025894,3974901699,1600119230,2543297077,1145359496,387397934,3301201811,2812801621,2122220284,1027426170,1684319432,1566435258,421079858,1936954854,1616945344,2172753945,1330631070,3705438115,572679748,707427924,2425400123,2290647819,1179044492,4008585671,3099120491,336870440,3739122087,1583276732,185277718,3688593069,3772791771,842159716,976899700,168435220,1229577106,101059084,606366792,1549591736,3267517855,3553849021,2897014595,1650632388,2442242105,2509612081,3840161747,2038008818,3890688725,3368567691,926374254,1835907034,2374863873,3587531953,1313788572,2846482505,1819063512,1448540844,4109633523,3941213647,1701162954,2054852340,2930698567,134748176,3132806511,2021165296,623210314,774795868,471606328,2795958615,3031746419,3334885783,3907527627,3722280097,1953799400,522133822,1263263126,3183336545,2341176845,2324333839,1886425312,1044267644,3048588401,1718004428,1212733584,50529542,4143317495,235803164,1633788866,892690282,1465383342,3115962473,2256965911,3250673817,488449850,2661202215,3789633753,4177007595,2560144171,286339874,1768537042,3654906025,2391705863,2492770099,2610673197,505291324,2273808917,3924369609,3469625735,1431699370,673740880,3755965093,2358021891,2711746649,2307489801,218961690,3217021541,3873845719,1111672452,1751693520,1094828930,2576986153,757954394,252645662,2964376443,1414855848,3149649517,370555436],g=[1374988112,2118214995,437757123,975658646,1001089995,530400753,2902087851,1273168787,540080725,2910219766,2295101073,4110568485,1340463100,3307916247,641025152,3043140495,3736164937,632953703,1172967064,1576976609,3274667266,2169303058,2370213795,1809054150,59727847,361929877,3211623147,2505202138,3569255213,1484005843,1239443753,2395588676,1975683434,4102977912,2572697195,666464733,3202437046,4035489047,3374361702,2110667444,1675577880,3843699074,2538681184,1649639237,2976151520,3144396420,4269907996,4178062228,1883793496,2403728665,2497604743,1383856311,2876494627,1917518562,3810496343,1716890410,3001755655,800440835,2261089178,3543599269,807962610,599762354,33778362,3977675356,2328828971,2809771154,4077384432,1315562145,1708848333,101039829,3509871135,3299278474,875451293,2733856160,92987698,2767645557,193195065,1080094634,1584504582,3178106961,1042385657,2531067453,3711829422,1306967366,2438237621,1908694277,67556463,1615861247,429456164,3602770327,2302690252,1742315127,2968011453,126454664,3877198648,2043211483,2709260871,2084704233,4169408201,0,159417987,841739592,504459436,1817866830,4245618683,260388950,1034867998,908933415,168810852,1750902305,2606453969,607530554,202008497,2472011535,3035535058,463180190,2160117071,1641816226,1517767529,470948374,3801332234,3231722213,1008918595,303765277,235474187,4069246893,766945465,337553864,1475418501,2943682380,4003061179,2743034109,4144047775,1551037884,1147550661,1543208500,2336434550,3408119516,3069049960,3102011747,3610369226,1113818384,328671808,2227573024,2236228733,3535486456,2935566865,3341394285,496906059,3702665459,226906860,2009195472,733156972,2842737049,294930682,1206477858,2835123396,2700099354,1451044056,573804783,2269728455,3644379585,2362090238,2564033334,2801107407,2776292904,3669462566,1068351396,742039012,1350078989,1784663195,1417561698,4136440770,2430122216,775550814,2193862645,2673705150,1775276924,1876241833,3475313331,3366754619,270040487,3902563182,3678124923,3441850377,1851332852,3969562369,2203032232,3868552805,2868897406,566021896,4011190502,3135740889,1248802510,3936291284,699432150,832877231,708780849,3332740144,899835584,1951317047,4236429990,3767586992,866637845,4043610186,1106041591,2144161806,395441711,1984812685,1139781709,3433712980,3835036895,2664543715,1282050075,3240894392,1181045119,2640243204,25965917,4203181171,4211818798,3009879386,2463879762,3910161971,1842759443,2597806476,933301370,1509430414,3943906441,3467192302,3076639029,3776767469,2051518780,2631065433,1441952575,404016761,1942435775,1408749034,1610459739,3745345300,2017778566,3400528769,3110650942,941896748,3265478751,371049330,3168937228,675039627,4279080257,967311729,135050206,3635733660,1683407248,2076935265,3576870512,1215061108,3501741890],w=[1347548327,1400783205,3273267108,2520393566,3409685355,4045380933,2880240216,2471224067,1428173050,4138563181,2441661558,636813900,4233094615,3620022987,2149987652,2411029155,1239331162,1730525723,2554718734,3781033664,46346101,310463728,2743944855,3328955385,3875770207,2501218972,3955191162,3667219033,768917123,3545789473,692707433,1150208456,1786102409,2029293177,1805211710,3710368113,3065962831,401639597,1724457132,3028143674,409198410,2196052529,1620529459,1164071807,3769721975,2226875310,486441376,2499348523,1483753576,428819965,2274680428,3075636216,598438867,3799141122,1474502543,711349675,129166120,53458370,2592523643,2782082824,4063242375,2988687269,3120694122,1559041666,730517276,2460449204,4042459122,2706270690,3446004468,3573941694,533804130,2328143614,2637442643,2695033685,839224033,1973745387,957055980,2856345839,106852767,1371368976,4181598602,1033297158,2933734917,1179510461,3046200461,91341917,1862534868,4284502037,605657339,2547432937,3431546947,2003294622,3182487618,2282195339,954669403,3682191598,1201765386,3917234703,3388507166,0,2198438022,1211247597,2887651696,1315723890,4227665663,1443857720,507358933,657861945,1678381017,560487590,3516619604,975451694,2970356327,261314535,3535072918,2652609425,1333838021,2724322336,1767536459,370938394,182621114,3854606378,1128014560,487725847,185469197,2918353863,3106780840,3356761769,2237133081,1286567175,3152976349,4255350624,2683765030,3160175349,3309594171,878443390,1988838185,3704300486,1756818940,1673061617,3403100636,272786309,1075025698,545572369,2105887268,4174560061,296679730,1841768865,1260232239,4091327024,3960309330,3497509347,1814803222,2578018489,4195456072,575138148,3299409036,446754879,3629546796,4011996048,3347532110,3252238545,4270639778,915985419,3483825537,681933534,651868046,2755636671,3828103837,223377554,2607439820,1649704518,3270937875,3901806776,1580087799,4118987695,3198115200,2087309459,2842678573,3016697106,1003007129,2802849917,1860738147,2077965243,164439672,4100872472,32283319,2827177882,1709610350,2125135846,136428751,3874428392,3652904859,3460984630,3572145929,3593056380,2939266226,824852259,818324884,3224740454,930369212,2801566410,2967507152,355706840,1257309336,4148292826,243256656,790073846,2373340630,1296297904,1422699085,3756299780,3818836405,457992840,3099667487,2135319889,77422314,1560382517,1945798516,788204353,1521706781,1385356242,870912086,325965383,2358957921,2050466060,2388260884,2313884476,4006521127,901210569,3990953189,1014646705,1503449823,1062597235,2031621326,3212035895,3931371469,1533017514,350174575,2256028891,2177544179,1052338372,741876788,1606591296,1914052035,213705253,2334669897,1107234197,1899603969,3725069491,2631447780,2422494913,1635502980,1893020342,1950903388,1120974935],y=[2807058932,1699970625,2764249623,1586903591,1808481195,1173430173,1487645946,59984867,4199882800,1844882806,1989249228,1277555970,3623636965,3419915562,1149249077,2744104290,1514790577,459744698,244860394,3235995134,1963115311,4027744588,2544078150,4190530515,1608975247,2627016082,2062270317,1507497298,2200818878,567498868,1764313568,3359936201,2305455554,2037970062,1047239e3,1910319033,1337376481,2904027272,2892417312,984907214,1243112415,830661914,861968209,2135253587,2011214180,2927934315,2686254721,731183368,1750626376,4246310725,1820824798,4172763771,3542330227,48394827,2404901663,2871682645,671593195,3254988725,2073724613,145085239,2280796200,2779915199,1790575107,2187128086,472615631,3029510009,4075877127,3802222185,4107101658,3201631749,1646252340,4270507174,1402811438,1436590835,3778151818,3950355702,3963161475,4020912224,2667994737,273792366,2331590177,104699613,95345982,3175501286,2377486676,1560637892,3564045318,369057872,4213447064,3919042237,1137477952,2658625497,1119727848,2340947849,1530455833,4007360968,172466556,266959938,516552836,0,2256734592,3980931627,1890328081,1917742170,4294704398,945164165,3575528878,958871085,3647212047,2787207260,1423022939,775562294,1739656202,3876557655,2530391278,2443058075,3310321856,547512796,1265195639,437656594,3121275539,719700128,3762502690,387781147,218828297,3350065803,2830708150,2848461854,428169201,122466165,3720081049,1627235199,648017665,4122762354,1002783846,2117360635,695634755,3336358691,4234721005,4049844452,3704280881,2232435299,574624663,287343814,612205898,1039717051,840019705,2708326185,793451934,821288114,1391201670,3822090177,376187827,3113855344,1224348052,1679968233,2361698556,1058709744,752375421,2431590963,1321699145,3519142200,2734591178,188127444,2177869557,3727205754,2384911031,3215212461,2648976442,2450346104,3432737375,1180849278,331544205,3102249176,4150144569,2952102595,2159976285,2474404304,766078933,313773861,2570832044,2108100632,1668212892,3145456443,2013908262,418672217,3070356634,2594734927,1852171925,3867060991,3473416636,3907448597,2614737639,919489135,164948639,2094410160,2997825956,590424639,2486224549,1723872674,3157750862,3399941250,3501252752,3625268135,2555048196,3673637356,1343127501,4130281361,3599595085,2957853679,1297403050,81781910,3051593425,2283490410,532201772,1367295589,3926170974,895287692,1953757831,1093597963,492483431,3528626907,1446242576,1192455638,1636604631,209336225,344873464,1015671571,669961897,3375740769,3857572124,2973530695,3747192018,1933530610,3464042516,935293895,3454686199,2858115069,1863638845,3683022916,4085369519,3292445032,875313188,1080017571,3279033885,621591778,1233856572,2504130317,24197544,3017672716,3835484340,3247465558,2220981195,3060847922,1551124588,1463996600],M=[4104605777,1097159550,396673818,660510266,2875968315,2638606623,4200115116,3808662347,821712160,1986918061,3430322568,38544885,3856137295,718002117,893681702,1654886325,2975484382,3122358053,3926825029,4274053469,796197571,1290801793,1184342925,3556361835,2405426947,2459735317,1836772287,1381620373,3196267988,1948373848,3764988233,3385345166,3263785589,2390325492,1480485785,3111247143,3780097726,2293045232,548169417,3459953789,3746175075,439452389,1362321559,1400849762,1685577905,1806599355,2174754046,137073913,1214797936,1174215055,3731654548,2079897426,1943217067,1258480242,529487843,1437280870,3945269170,3049390895,3313212038,923313619,679998e3,3215307299,57326082,377642221,3474729866,2041877159,133361907,1776460110,3673476453,96392454,878845905,2801699524,777231668,4082475170,2330014213,4142626212,2213296395,1626319424,1906247262,1846563261,562755902,3708173718,1040559837,3871163981,1418573201,3294430577,114585348,1343618912,2566595609,3186202582,1078185097,3651041127,3896688048,2307622919,425408743,3371096953,2081048481,1108339068,2216610296,0,2156299017,736970802,292596766,1517440620,251657213,2235061775,2933202493,758720310,265905162,1554391400,1532285339,908999204,174567692,1474760595,4002861748,2610011675,3234156416,3693126241,2001430874,303699484,2478443234,2687165888,585122620,454499602,151849742,2345119218,3064510765,514443284,4044981591,1963412655,2581445614,2137062819,19308535,1928707164,1715193156,4219352155,1126790795,600235211,3992742070,3841024952,836553431,1669664834,2535604243,3323011204,1243905413,3141400786,4180808110,698445255,2653899549,2989552604,2253581325,3252932727,3004591147,1891211689,2487810577,3915653703,4237083816,4030667424,2100090966,865136418,1229899655,953270745,3399679628,3557504664,4118925222,2061379749,3079546586,2915017791,983426092,2022837584,1607244650,2118541908,2366882550,3635996816,972512814,3283088770,1568718495,3499326569,3576539503,621982671,2895723464,410887952,2623762152,1002142683,645401037,1494807662,2595684844,1335535747,2507040230,4293295786,3167684641,367585007,3885750714,1865862730,2668221674,2960971305,2763173681,1059270954,2777952454,2724642869,1320957812,2194319100,2429595872,2815956275,77089521,3973773121,3444575871,2448830231,1305906550,4021308739,2857194700,2516901860,3518358430,1787304780,740276417,1699839814,1592394909,2352307457,2272556026,188821243,1729977011,3687994002,274084841,3594982253,3613494426,2701949495,4162096729,322734571,2837966542,1640576439,484830689,1202797690,3537852828,4067639125,349075736,3342319475,4157467219,4255800159,1030690015,1155237496,2951971274,1757691577,607398968,2738905026,499347990,3794078908,1011452712,227885567,2818666809,213114376,3034881240,1455525988,3414450555,850817237,1817998408,3092726480],b=[0,235474187,470948374,303765277,941896748,908933415,607530554,708780849,1883793496,2118214995,1817866830,1649639237,1215061108,1181045119,1417561698,1517767529,3767586992,4003061179,4236429990,4069246893,3635733660,3602770327,3299278474,3400528769,2430122216,2664543715,2362090238,2193862645,2835123396,2801107407,3035535058,3135740889,3678124923,3576870512,3341394285,3374361702,3810496343,3977675356,4279080257,4043610186,2876494627,2776292904,3076639029,3110650942,2472011535,2640243204,2403728665,2169303058,1001089995,899835584,666464733,699432150,59727847,226906860,530400753,294930682,1273168787,1172967064,1475418501,1509430414,1942435775,2110667444,1876241833,1641816226,2910219766,2743034109,2976151520,3211623147,2505202138,2606453969,2302690252,2269728455,3711829422,3543599269,3240894392,3475313331,3843699074,3943906441,4178062228,4144047775,1306967366,1139781709,1374988112,1610459739,1975683434,2076935265,1775276924,1742315127,1034867998,866637845,566021896,800440835,92987698,193195065,429456164,395441711,1984812685,2017778566,1784663195,1683407248,1315562145,1080094634,1383856311,1551037884,101039829,135050206,437757123,337553864,1042385657,807962610,573804783,742039012,2531067453,2564033334,2328828971,2227573024,2935566865,2700099354,3001755655,3168937228,3868552805,3902563182,4203181171,4102977912,3736164937,3501741890,3265478751,3433712980,1106041591,1340463100,1576976609,1408749034,2043211483,2009195472,1708848333,1809054150,832877231,1068351396,766945465,599762354,159417987,126454664,361929877,463180190,2709260871,2943682380,3178106961,3009879386,2572697195,2538681184,2236228733,2336434550,3509871135,3745345300,3441850377,3274667266,3910161971,3877198648,4110568485,4211818798,2597806476,2497604743,2261089178,2295101073,2733856160,2902087851,3202437046,2968011453,3936291284,3835036895,4136440770,4169408201,3535486456,3702665459,3467192302,3231722213,2051518780,1951317047,1716890410,1750902305,1113818384,1282050075,1584504582,1350078989,168810852,67556463,371049330,404016761,841739592,1008918595,775550814,540080725,3969562369,3801332234,4035489047,4269907996,3569255213,3669462566,3366754619,3332740144,2631065433,2463879762,2160117071,2395588676,2767645557,2868897406,3102011747,3069049960,202008497,33778362,270040487,504459436,875451293,975658646,675039627,641025152,2084704233,1917518562,1615861247,1851332852,1147550661,1248802510,1484005843,1451044056,933301370,967311729,733156972,632953703,260388950,25965917,328671808,496906059,1206477858,1239443753,1543208500,1441952575,2144161806,1908694277,1675577880,1842759443,3610369226,3644379585,3408119516,3307916247,4011190502,3776767469,4077384432,4245618683,2809771154,2842737049,3144396420,3043140495,2673705150,2438237621,2203032232,2370213795],_=[0,185469197,370938394,487725847,741876788,657861945,975451694,824852259,1483753576,1400783205,1315723890,1164071807,1950903388,2135319889,1649704518,1767536459,2967507152,3152976349,2801566410,2918353863,2631447780,2547432937,2328143614,2177544179,3901806776,3818836405,4270639778,4118987695,3299409036,3483825537,3535072918,3652904859,2077965243,1893020342,1841768865,1724457132,1474502543,1559041666,1107234197,1257309336,598438867,681933534,901210569,1052338372,261314535,77422314,428819965,310463728,3409685355,3224740454,3710368113,3593056380,3875770207,3960309330,4045380933,4195456072,2471224067,2554718734,2237133081,2388260884,3212035895,3028143674,2842678573,2724322336,4138563181,4255350624,3769721975,3955191162,3667219033,3516619604,3431546947,3347532110,2933734917,2782082824,3099667487,3016697106,2196052529,2313884476,2499348523,2683765030,1179510461,1296297904,1347548327,1533017514,1786102409,1635502980,2087309459,2003294622,507358933,355706840,136428751,53458370,839224033,957055980,605657339,790073846,2373340630,2256028891,2607439820,2422494913,2706270690,2856345839,3075636216,3160175349,3573941694,3725069491,3273267108,3356761769,4181598602,4063242375,4011996048,3828103837,1033297158,915985419,730517276,545572369,296679730,446754879,129166120,213705253,1709610350,1860738147,1945798516,2029293177,1239331162,1120974935,1606591296,1422699085,4148292826,4233094615,3781033664,3931371469,3682191598,3497509347,3446004468,3328955385,2939266226,2755636671,3106780840,2988687269,2198438022,2282195339,2501218972,2652609425,1201765386,1286567175,1371368976,1521706781,1805211710,1620529459,2105887268,1988838185,533804130,350174575,164439672,46346101,870912086,954669403,636813900,788204353,2358957921,2274680428,2592523643,2441661558,2695033685,2880240216,3065962831,3182487618,3572145929,3756299780,3270937875,3388507166,4174560061,4091327024,4006521127,3854606378,1014646705,930369212,711349675,560487590,272786309,457992840,106852767,223377554,1678381017,1862534868,1914052035,2031621326,1211247597,1128014560,1580087799,1428173050,32283319,182621114,401639597,486441376,768917123,651868046,1003007129,818324884,1503449823,1385356242,1333838021,1150208456,1973745387,2125135846,1673061617,1756818940,2970356327,3120694122,2802849917,2887651696,2637442643,2520393566,2334669897,2149987652,3917234703,3799141122,4284502037,4100872472,3309594171,3460984630,3545789473,3629546796,2050466060,1899603969,1814803222,1730525723,1443857720,1560382517,1075025698,1260232239,575138148,692707433,878443390,1062597235,243256656,91341917,409198410,325965383,3403100636,3252238545,3704300486,3620022987,3874428392,3990953189,4042459122,4227665663,2460449204,2578018489,2226875310,2411029155,3198115200,3046200461,2827177882,2743944855],S=[0,218828297,437656594,387781147,875313188,958871085,775562294,590424639,1750626376,1699970625,1917742170,2135253587,1551124588,1367295589,1180849278,1265195639,3501252752,3720081049,3399941250,3350065803,3835484340,3919042237,4270507174,4085369519,3102249176,3051593425,2734591178,2952102595,2361698556,2177869557,2530391278,2614737639,3145456443,3060847922,2708326185,2892417312,2404901663,2187128086,2504130317,2555048196,3542330227,3727205754,3375740769,3292445032,3876557655,3926170974,4246310725,4027744588,1808481195,1723872674,1910319033,2094410160,1608975247,1391201670,1173430173,1224348052,59984867,244860394,428169201,344873464,935293895,984907214,766078933,547512796,1844882806,1627235199,2011214180,2062270317,1507497298,1423022939,1137477952,1321699145,95345982,145085239,532201772,313773861,830661914,1015671571,731183368,648017665,3175501286,2957853679,2807058932,2858115069,2305455554,2220981195,2474404304,2658625497,3575528878,3625268135,3473416636,3254988725,3778151818,3963161475,4213447064,4130281361,3599595085,3683022916,3432737375,3247465558,3802222185,4020912224,4172763771,4122762354,3201631749,3017672716,2764249623,2848461854,2331590177,2280796200,2431590963,2648976442,104699613,188127444,472615631,287343814,840019705,1058709744,671593195,621591778,1852171925,1668212892,1953757831,2037970062,1514790577,1463996600,1080017571,1297403050,3673637356,3623636965,3235995134,3454686199,4007360968,3822090177,4107101658,4190530515,2997825956,3215212461,2830708150,2779915199,2256734592,2340947849,2627016082,2443058075,172466556,122466165,273792366,492483431,1047239e3,861968209,612205898,695634755,1646252340,1863638845,2013908262,1963115311,1446242576,1530455833,1277555970,1093597963,1636604631,1820824798,2073724613,1989249228,1436590835,1487645946,1337376481,1119727848,164948639,81781910,331544205,516552836,1039717051,821288114,669961897,719700128,2973530695,3157750862,2871682645,2787207260,2232435299,2283490410,2667994737,2450346104,3647212047,3564045318,3279033885,3464042516,3980931627,3762502690,4150144569,4199882800,3070356634,3121275539,2904027272,2686254721,2200818878,2384911031,2570832044,2486224549,3747192018,3528626907,3310321856,3359936201,3950355702,3867060991,4049844452,4234721005,1739656202,1790575107,2108100632,1890328081,1402811438,1586903591,1233856572,1149249077,266959938,48394827,369057872,418672217,1002783846,919489135,567498868,752375421,209336225,24197544,376187827,459744698,945164165,895287692,574624663,793451934,1679968233,1764313568,2117360635,1933530610,1343127501,1560637892,1243112415,1192455638,3704280881,3519142200,3336358691,3419915562,3907448597,3857572124,4075877127,4294704398,3029510009,3113855344,2927934315,2744104290,2159976285,2377486676,2594734927,2544078150],E=[0,151849742,303699484,454499602,607398968,758720310,908999204,1059270954,1214797936,1097159550,1517440620,1400849762,1817998408,1699839814,2118541908,2001430874,2429595872,2581445614,2194319100,2345119218,3034881240,3186202582,2801699524,2951971274,3635996816,3518358430,3399679628,3283088770,4237083816,4118925222,4002861748,3885750714,1002142683,850817237,698445255,548169417,529487843,377642221,227885567,77089521,1943217067,2061379749,1640576439,1757691577,1474760595,1592394909,1174215055,1290801793,2875968315,2724642869,3111247143,2960971305,2405426947,2253581325,2638606623,2487810577,3808662347,3926825029,4044981591,4162096729,3342319475,3459953789,3576539503,3693126241,1986918061,2137062819,1685577905,1836772287,1381620373,1532285339,1078185097,1229899655,1040559837,923313619,740276417,621982671,439452389,322734571,137073913,19308535,3871163981,4021308739,4104605777,4255800159,3263785589,3414450555,3499326569,3651041127,2933202493,2815956275,3167684641,3049390895,2330014213,2213296395,2566595609,2448830231,1305906550,1155237496,1607244650,1455525988,1776460110,1626319424,2079897426,1928707164,96392454,213114376,396673818,514443284,562755902,679998e3,865136418,983426092,3708173718,3557504664,3474729866,3323011204,4180808110,4030667424,3945269170,3794078908,2507040230,2623762152,2272556026,2390325492,2975484382,3092726480,2738905026,2857194700,3973773121,3856137295,4274053469,4157467219,3371096953,3252932727,3673476453,3556361835,2763173681,2915017791,3064510765,3215307299,2156299017,2307622919,2459735317,2610011675,2081048481,1963412655,1846563261,1729977011,1480485785,1362321559,1243905413,1126790795,878845905,1030690015,645401037,796197571,274084841,425408743,38544885,188821243,3613494426,3731654548,3313212038,3430322568,4082475170,4200115116,3780097726,3896688048,2668221674,2516901860,2366882550,2216610296,3141400786,2989552604,2837966542,2687165888,1202797690,1320957812,1437280870,1554391400,1669664834,1787304780,1906247262,2022837584,265905162,114585348,499347990,349075736,736970802,585122620,972512814,821712160,2595684844,2478443234,2293045232,2174754046,3196267988,3079546586,2895723464,2777952454,3537852828,3687994002,3234156416,3385345166,4142626212,4293295786,3841024952,3992742070,174567692,57326082,410887952,292596766,777231668,660510266,1011452712,893681702,1108339068,1258480242,1343618912,1494807662,1715193156,1865862730,1948373848,2100090966,2701949495,2818666809,3004591147,3122358053,2235061775,2352307457,2535604243,2653899549,3915653703,3764988233,4219352155,4067639125,3444575871,3294430577,3746175075,3594982253,836553431,953270745,600235211,718002117,367585007,484830689,133361907,251657213,2041877159,1891211689,1806599355,1654886325,1568718495,1418573201,1335535747,1184342925];function R(P){for(var H=[],Y=0;Y<P.length;Y+=4)H.push(P[Y]<<24|P[Y+1]<<16|P[Y+2]<<8|P[Y+3]);return H}var I=function(P){if(!(this instanceof I))throw Error("AES must be instanitated with `new`");Object.defineProperty(this,"key",{value:s(P,!0)}),this._prepare()};I.prototype._prepare=function(){var P=d[this.key.length];if(P==null)throw new Error("invalid key size (must be 16, 24 or 32 bytes)");this._Ke=[],this._Kd=[];for(var H=0;H<=P;H++)this._Ke.push([0,0,0,0]),this._Kd.push([0,0,0,0]);for(var Y=(P+1)*4,Q=this.key.length/4,F=R(this.key),oe,H=0;H<Q;H++)oe=H>>2,this._Ke[oe][H%4]=F[H],this._Kd[P-oe][H%4]=F[H];for(var Se=0,Me=Q,be;Me<Y;){if(be=F[Q-1],F[0]^=f[be>>16&255]<<24^f[be>>8&255]<<16^f[be&255]<<8^f[be>>24&255]^u[Se]<<24,Se+=1,Q!=8)for(var H=1;H<Q;H++)F[H]^=F[H-1];else{for(var H=1;H<Q/2;H++)F[H]^=F[H-1];be=F[Q/2-1],F[Q/2]^=f[be&255]^f[be>>8&255]<<8^f[be>>16&255]<<16^f[be>>24&255]<<24;for(var H=Q/2+1;H<Q;H++)F[H]^=F[H-1]}for(var H=0,_e,Ie;H<Q&&Me<Y;)_e=Me>>2,Ie=Me%4,this._Ke[_e][Ie]=F[H],this._Kd[P-_e][Ie]=F[H++],Me++}for(var _e=1;_e<P;_e++)for(var Ie=0;Ie<4;Ie++)be=this._Kd[_e][Ie],this._Kd[_e][Ie]=b[be>>24&255]^_[be>>16&255]^S[be>>8&255]^E[be&255]},I.prototype.encrypt=function(P){if(P.length!=16)throw new Error("invalid plaintext size (must be 16 bytes)");for(var H=this._Ke.length-1,Y=[0,0,0,0],Q=R(P),F=0;F<4;F++)Q[F]^=this._Ke[0][F];for(var oe=1;oe<H;oe++){for(var F=0;F<4;F++)Y[F]=p[Q[F]>>24&255]^x[Q[(F+1)%4]>>16&255]^m[Q[(F+2)%4]>>8&255]^v[Q[(F+3)%4]&255]^this._Ke[oe][F];Q=Y.slice()}for(var Se=o(16),Me,F=0;F<4;F++)Me=this._Ke[H][F],Se[4*F]=(f[Q[F]>>24&255]^Me>>24)&255,Se[4*F+1]=(f[Q[(F+1)%4]>>16&255]^Me>>16)&255,Se[4*F+2]=(f[Q[(F+2)%4]>>8&255]^Me>>8)&255,Se[4*F+3]=(f[Q[(F+3)%4]&255]^Me)&255;return Se},I.prototype.decrypt=function(P){if(P.length!=16)throw new Error("invalid ciphertext size (must be 16 bytes)");for(var H=this._Kd.length-1,Y=[0,0,0,0],Q=R(P),F=0;F<4;F++)Q[F]^=this._Kd[0][F];for(var oe=1;oe<H;oe++){for(var F=0;F<4;F++)Y[F]=g[Q[F]>>24&255]^w[Q[(F+3)%4]>>16&255]^y[Q[(F+2)%4]>>8&255]^M[Q[(F+1)%4]&255]^this._Kd[oe][F];Q=Y.slice()}for(var Se=o(16),Me,F=0;F<4;F++)Me=this._Kd[H][F],Se[4*F]=(h[Q[F]>>24&255]^Me>>24)&255,Se[4*F+1]=(h[Q[(F+3)%4]>>16&255]^Me>>16)&255,Se[4*F+2]=(h[Q[(F+2)%4]>>8&255]^Me>>8)&255,Se[4*F+3]=(h[Q[(F+1)%4]&255]^Me)&255;return Se};var $=function(P){if(!(this instanceof $))throw Error("AES must be instanitated with `new`");this.description="Electronic Code Block",this.name="ecb",this._aes=new I(P)};$.prototype.encrypt=function(P){if(P=s(P),P.length%16!==0)throw new Error("invalid plaintext size (must be multiple of 16 bytes)");for(var H=o(P.length),Y=o(16),Q=0;Q<P.length;Q+=16)a(P,Y,0,Q,Q+16),Y=this._aes.encrypt(Y),a(Y,H,Q);return H},$.prototype.decrypt=function(P){if(P=s(P),P.length%16!==0)throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");for(var H=o(P.length),Y=o(16),Q=0;Q<P.length;Q+=16)a(P,Y,0,Q,Q+16),Y=this._aes.decrypt(Y),a(Y,H,Q);return H};var W=function(P,H){if(!(this instanceof W))throw Error("AES must be instanitated with `new`");if(this.description="Cipher Block Chaining",this.name="cbc",!H)H=o(16);else if(H.length!=16)throw new Error("invalid initialation vector size (must be 16 bytes)");this._lastCipherblock=s(H,!0),this._aes=new I(P)};W.prototype.encrypt=function(P){if(P=s(P),P.length%16!==0)throw new Error("invalid plaintext size (must be multiple of 16 bytes)");for(var H=o(P.length),Y=o(16),Q=0;Q<P.length;Q+=16){a(P,Y,0,Q,Q+16);for(var F=0;F<16;F++)Y[F]^=this._lastCipherblock[F];this._lastCipherblock=this._aes.encrypt(Y),a(this._lastCipherblock,H,Q)}return H},W.prototype.decrypt=function(P){if(P=s(P),P.length%16!==0)throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");for(var H=o(P.length),Y=o(16),Q=0;Q<P.length;Q+=16){a(P,Y,0,Q,Q+16),Y=this._aes.decrypt(Y);for(var F=0;F<16;F++)H[Q+F]=Y[F]^this._lastCipherblock[F];a(P,this._lastCipherblock,0,Q,Q+16)}return H};var L=function(P,H,Y){if(!(this instanceof L))throw Error("AES must be instanitated with `new`");if(this.description="Cipher Feedback",this.name="cfb",!H)H=o(16);else if(H.length!=16)throw new Error("invalid initialation vector size (must be 16 size)");Y||(Y=1),this.segmentSize=Y,this._shiftRegister=s(H,!0),this._aes=new I(P)};L.prototype.encrypt=function(P){if(P.length%this.segmentSize!=0)throw new Error("invalid plaintext size (must be segmentSize bytes)");for(var H=s(P,!0),Y,Q=0;Q<H.length;Q+=this.segmentSize){Y=this._aes.encrypt(this._shiftRegister);for(var F=0;F<this.segmentSize;F++)H[Q+F]^=Y[F];a(this._shiftRegister,this._shiftRegister,0,this.segmentSize),a(H,this._shiftRegister,16-this.segmentSize,Q,Q+this.segmentSize)}return H},L.prototype.decrypt=function(P){if(P.length%this.segmentSize!=0)throw new Error("invalid ciphertext size (must be segmentSize bytes)");for(var H=s(P,!0),Y,Q=0;Q<H.length;Q+=this.segmentSize){Y=this._aes.encrypt(this._shiftRegister);for(var F=0;F<this.segmentSize;F++)H[Q+F]^=Y[F];a(this._shiftRegister,this._shiftRegister,0,this.segmentSize),a(P,this._shiftRegister,16-this.segmentSize,Q,Q+this.segmentSize)}return H};var z=function(P,H){if(!(this instanceof z))throw Error("AES must be instanitated with `new`");if(this.description="Output Feedback",this.name="ofb",!H)H=o(16);else if(H.length!=16)throw new Error("invalid initialation vector size (must be 16 bytes)");this._lastPrecipher=s(H,!0),this._lastPrecipherIndex=16,this._aes=new I(P)};z.prototype.encrypt=function(P){for(var H=s(P,!0),Y=0;Y<H.length;Y++)this._lastPrecipherIndex===16&&(this._lastPrecipher=this._aes.encrypt(this._lastPrecipher),this._lastPrecipherIndex=0),H[Y]^=this._lastPrecipher[this._lastPrecipherIndex++];return H},z.prototype.decrypt=z.prototype.encrypt;var U=function(P){if(!(this instanceof U))throw Error("Counter must be instanitated with `new`");P!==0&&!P&&(P=1),typeof P=="number"?(this._counter=o(16),this.setValue(P)):this.setBytes(P)};U.prototype.setValue=function(P){if(typeof P!="number"||parseInt(P)!=P)throw new Error("invalid counter value (must be an integer)");if(P>Number.MAX_SAFE_INTEGER)throw new Error("integer value out of safe range");for(var H=15;H>=0;--H)this._counter[H]=P%256,P=parseInt(P/256)},U.prototype.setBytes=function(P){if(P=s(P,!0),P.length!=16)throw new Error("invalid counter bytes size (must be 16 bytes)");this._counter=P},U.prototype.increment=function(){for(var P=15;P>=0;P--)if(this._counter[P]===255)this._counter[P]=0;else{this._counter[P]++;break}};var X=function(P,H){if(!(this instanceof X))throw Error("AES must be instanitated with `new`");this.description="Counter",this.name="ctr",H instanceof U||(H=new U(H)),this._counter=H,this._remainingCounter=null,this._remainingCounterIndex=16,this._aes=new I(P)};X.prototype.encrypt=function(P){for(var H=s(P,!0),Y=0;Y<H.length;Y++)this._remainingCounterIndex===16&&(this._remainingCounter=this._aes.encrypt(this._counter._counter),this._remainingCounterIndex=0,this._counter.increment()),H[Y]^=this._remainingCounter[this._remainingCounterIndex++];return H},X.prototype.decrypt=X.prototype.encrypt;function K(P){P=s(P,!0);var H=16-P.length%16,Y=o(P.length+H);a(P,Y);for(var Q=P.length;Q<Y.length;Q++)Y[Q]=H;return Y}function j(P){if(P=s(P,!0),P.length<16)throw new Error("PKCS#7 invalid length");var H=P[P.length-1];if(H>16)throw new Error("PKCS#7 padding byte out of range");for(var Y=P.length-H,Q=0;Q<H;Q++)if(P[Y+Q]!==H)throw new Error("PKCS#7 invalid padding byte");var F=o(Y);return a(P,F,0,0,Y),F}var ee={AES:I,Counter:U,ModeOfOperation:{ecb:$,cbc:W,cfb:L,ofb:z,ctr:X},utils:{hex:c,utf8:l},padding:{pkcs7:{pad:K,strip:j}},_arrayTest:{coerceArray:s,createArray:o,copyArray:a}};n.exports=ee})()})(Wh)),Wh.exports}var wC=_C();class MC{key;ivKey;constructor(e){const t=new Uint8Array([1,2,66,40,49,145,22,7,32,5,24,84,66,17,18,83]),i=new Uint8Array([17,3,50,40,33,1,118,39,32,149,120,20,50,18,2,67]);this.key=new Uint8Array(16),this.ivKey=new Uint8Array(16);const r=e.split(":");if(r.length!==6)throw new Error("Expected device MAC to have 6 elements");for(let s=0;s<6;s++){const o=parseInt(r[5-s],16);this.key[s]=(t[s]+o)%255,this.ivKey[s]=(i[s]+o)%255}this.key.set(t.slice(6),6),this.ivKey.set(i.slice(6),6)}get cryptor(){return new wC.ModeOfOperation.cbc(this.key,this.ivKey)}decrypt(e){const i=new Uint8Array(e.buffer).slice(0),r=this.cryptor.decrypt(i.slice(i.length-16));i.set(r,i.length-16);const s=this.cryptor.decrypt(i.slice(0,16));return i.set(s,0),new DataView(i.buffer)}encrypt(e){const i=new Uint8Array(e.buffer).slice(0),r=this.cryptor.encrypt(i.slice(0,16));i.set(r,0);const s=this.cryptor.encrypt(i.slice(i.length-16));return i.set(s,i.length-16),new DataView(i.buffer)}}function SC(n){n=8-n;let e=0;for(let t=0;t<n;t++)e+=Math.pow(2,t);return e}function ti(n,e,t,i,r){let s=0;const o=[];for(;n<r.byteLength;){let a=0,l=0;for(;a<t&&n<r.byteLength;){let c=8-e,d=Math.min(a+c,t),u=d-a,f=c-u;if(l+=(r.getUint8(n)&SC(e))>>f<<t-d,a+=u,e+=u,f==0&&(n++,e=0),a==t){o.push(l),s++;break}}if(i>0&&s>=i)break}return o}const M3=["U","U'","R","R'","F","F'","D","D'","L","L'","B","B'"];function EC(n){return n.getUint8(0)>>4}function Nl(n){return(n.getUint8(0)&15)<<4|n.getUint8(1)>>4}function TC(n,e,t,i){let r=0;const s=n.length;if(s!==11)throw new Error("Expected exactly 11 edges.");const o={};for(let m=0;m<s;m++){const v=e[m],g=n[m];o[g]=!0,r+=v}const a=[0,1,2,3,4,5,6,7,8,9,10,11].filter(m=>!(m in o))[0],l=n.slice();l.push(a);const c=e.slice();c.push((2-r%2)%2);let d=0;const u=t.length;if(u!==7)throw new Error("Expected exactly 7 corners.");const f={};for(let m=0;m<u;m++){const v=i[m],g=t[m];f[g]=!0,d+=v}const h=[0,1,2,3,4,5,6,7].filter(m=>!(m in f))[0],p=t.slice();p.push(h);const x=i.slice();return x.push((3-d%3)%3),new Lc(p,x,l,c)}class or{constructor(e,t){this.messageHandler=t,this.codec=new MC(e)}codec;consumeEvent(e){this.consumeDecryptedEvent(this.codec.decrypt(e))}consumeDecryptedEvent(e){const t=EC(e);switch(t){case 1:{let[i,r,s,o]=ti(0,4,16,4,e),a=ti(8,4,4,3,e),[l,c,d,u]=[e.getUint16(10),e.getUint16(12),e.getUint16(14),e.getUint16(16)],f=ti(18,0,4,3,e);a=a.map(h=>8&h?-(7&h):h),f=f.map(h=>8&h?-(7&h):h),[i,r,s,o]=[i,r,s,o].map(h=>32768&h?-(32767&h):h),[l,c,d,u]=[l,c,d,u].map(h=>32768&h?-(32767&h):h),this.messageHandler.gyroUpdate(i,r,s,o,l,c,d,u,a,f);break}case 2:{const i=Nl(e),r=ti(1,4,5,7,e),s=ti(5,7,16,7,e),o=r.map(l=>M3[l]),a=[];for(let l=0;l<7;l++)a.push(new Ho(s[l],o[l]));this.messageHandler.moveResponse(i,a);break}case 4:{const i=Nl(e),r=ti(1,4,3,7,e),s=ti(4,1,2,7,e),o=ti(5,7,4,11,e),a=ti(11,3,1,11,e),l=TC(o,a,r,s);this.messageHandler.cubeStateResponse(i,l);break}case 5:{const i=e.getUint8(0)&15,r=[e.getUint8(1),e.getUint8(2)],s=[e.getUint8(3),e.getUint8(4)],o=[e.getUint8(5),e.getUint8(6),e.getUint8(7),e.getUint8(8),e.getUint8(9),e.getUint8(10),e.getUint8(11),e.getUint8(12)],a=e.getUint8(13)>>7===1,l=(e.getUint8(13)>>6&1)===1,c=s.join("."),d=r.join("."),u=String.fromCharCode(...o);this.messageHandler.infoResponse(i,c,d,u,a,l);break}case 6:{const i=Nl(e),r=e.getUint8(1)&15,s=[];for(let o=1;o<=r;o++)s.push(e.getUint16(o<<1));this.messageHandler.moveIntervalsResponse(i,s);break}case 7:{const i=Nl(e),r=(e.getUint8(1)&15)<<1|e.getUint8(2)>>7,o=ti(2,1,5,r,e).map(a=>M3[a]);this.messageHandler.movesResponse(i,o);break}case 9:{const i=e.getUint8(0)&15,r=e.getUint8(1);this.messageHandler.powerResponse(i,r);break}case 13:{this.messageHandler.goneToSleep();break}default:{console.log({messageType:t,message:OC(e)});break}}}static CUBE_STATE_REQUEST_MSG=new Uint8Array([4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);cubeStateRequest(){return this.codec.encrypt(new DataView(or.CUBE_STATE_REQUEST_MSG.buffer))}static INFO_REQUEST_MSG=new Uint8Array([5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);infoRequest(){return this.codec.encrypt(new DataView(or.INFO_REQUEST_MSG.buffer))}static MOVES_INTERVAL_REQUEST_MSG=new Uint8Array([6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);movesIntervalRequest(e,t){const i=new DataView(or.MOVES_INTERVAL_REQUEST_MSG.buffer);return i.setUint8(1,e),i.setUint8(2,t),this.codec.encrypt(i)}static MOVES_REQUEST_MSG=new Uint8Array([7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);movesRequest(e,t){const i=new DataView(or.MOVES_REQUEST_MSG.buffer);return i.setUint8(1,e),i.setUint8(2,t),this.codec.encrypt(i)}static POWER_REQUEST_MSG=new Uint8Array([9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);powerRequest(){return this.codec.encrypt(new DataView(or.POWER_REQUEST_MSG.buffer))}static RESET_REQUEST_MSG=new Uint8Array([10,5,57,119,0,0,1,35,69,103,137,171,0,0,0,0,0,0,0,0]);resetRequest(){return this.codec.encrypt(new DataView(or.RESET_REQUEST_MSG.buffer))}}class AC{constructor(e,t,i,r,s,o){this.reboot=e,this.softwareVersion=t,this.hardwareVersion=i,this.deviceName=r,this.gyroEnabled=s,this.gyroCorrect=o}}class LC{constructor(e,t){this.sequenceNumber=e,this.lastTurns=t}}class CC{constructor(e,t,i,r,s,o,a,l,c,d){this.ox=e,this.oy=t,this.oz=i,this.ow=r,this.nx=s,this.ny=o,this.nz=a,this.nw=l,this.odirs=c,this.ndirs=d}}class RC{constructor(e,t){this.start=e,this.timestamps=t}}class PC{constructor(e,t){this.start=e,this.moves=t}}class IC{constructor(e,t){this.sequenceNumber=e,this.cubeState=t}}class DC{constructor(e,t){this.chargeState=e,this.power=t}}function OC(n){const e=n.byteLength;let t="";for(let i=0;i<e;++i)t+=n.getUint8(i).toString(16).padStart(2,"0");return t}const S3="6e400001-b5a3-f393-e0a9-e50e24dc4179",qC="28be4a4a-cd67-11e9-a32f-2a2ae2dbcce4",zC="28be4cb6-cd67-11e9-a32f-2a2ae2dbcce4";class FC extends Error{constructor(){super("Reconnection required")}}class Mb extends Error{constructor(){super("Bluetooth is not supported on this platform.")}}class NC{_isReceivingNotifications;operating=!1;requestQueue=[];_notifications;gatt;writeCharacteristic;readCharacteristic;readCharacteristicSubscription=null;constructor(){this._isReceivingNotifications=!1,this._notifications=new nn}async reconnect(){if(window.navigator.bluetooth===void 0)throw new Mb;const t=(await window.navigator.bluetooth.requestDevice({filters:[{namePrefix:"GANi3"}],optionalServices:[S3]})).gatt;if(t===void 0)throw new Error("GATT server not found.");this.gatt=t;const r=await(await t.connect()).getPrimaryService(S3);this.writeCharacteristic=await r.getCharacteristic(qC),this.readCharacteristic=await r.getCharacteristic(zC);const s=this.readCharacteristicSubscription;return s!==null&&s.unsubscribe(),this.readCharacteristicSubscription=An(this.readCharacteristic,"characteristicvaluechanged").pipe(_b(o=>o?.target?.value)).pipe(Ss(o=>o.target.value)).subscribe(o=>this._notifications.next(o)),this._isReceivingNotifications&&await this.readCharacteristic.startNotifications(),this}async writeValue(e,t){if(this.gatt.connected)return await this.writeCharacteristic.writeValue(e);if(!t)throw new FC}async sendMessage(e,t=!1){const i=this.requestQueue;if(this.operating)return new Promise((r,s)=>i.push([e,r]));for(this.operating=!0,await this.writeValue(e,t);i.length>0;){const[r,s]=i[0];i.splice(0,1),await this.writeValue(r,t),s()}this.operating=!1}readValue(){return this.readCharacteristic.readValue()}get notifications(){return this._notifications}async startNotifications(){await this.readCharacteristic.startNotifications(),this._isReceivingNotifications=!0}async stopNotifications(){await this.readCharacteristic.stopNotifications(),this._isReceivingNotifications=!1}get isReceivingNotifications(){return this._isReceivingNotifications}}function BC(){return new NC().reconnect()}class UC{infoResponses;moveResponses;gyroUpdates;moveIntervalsResponses;movesResponses;cubeStateResponses;powerResponses;goneToSleepNotifications;constructor(){this.infoResponses=new nn,this.moveResponses=new nn,this.gyroUpdates=new nn,this.moveIntervalsResponses=new nn,this.movesResponses=new nn,this.cubeStateResponses=new nn,this.powerResponses=new nn,this.goneToSleepNotifications=new nn}infoResponse(e,t,i,r,s,o){this.infoResponses.next(new AC(e,t,i,r,s,o))}moveResponse(e,t){this.moveResponses.next(new LC(e,t))}gyroUpdate(e,t,i,r,s,o,a,l,c,d){this.gyroUpdates.next(new CC(e,t,i,r,s,o,a,l,c,d))}moveIntervalsResponse(e,t){this.moveIntervalsResponses.next(new RC(e,t))}movesResponse(e,t){this.movesResponses.next(new PC(e,t))}cubeStateResponse(e,t){this.cubeStateResponses.next(new IC(e,t))}powerResponse(e,t){this.powerResponses.next(new DC(e,t))}goneToSleep(){this.goneToSleepNotifications.next()}}class GC{device;codec;handler;constructor(e){this.handler=new UC,this.codec=new or(e,this.handler),this.device=null}get infoResponses(){return this.handler.infoResponses}get moveResponses(){return this.handler.moveResponses}get gyroUpdates(){return this.handler.gyroUpdates}get moveIntervalsResponses(){return this.handler.moveIntervalsResponses}get movesResponses(){return this.handler.movesResponses}get cubeStateResponses(){return this.handler.cubeStateResponses}get powerResponses(){return this.handler.powerResponses}get goneToSleepNotifications(){return this.handler.goneToSleepNotifications}async connect(){this.device===null&&(this.device=await BC(),this.device.notifications.subscribe(e=>this.codec.consumeEvent(e)))}async startNotifications(){return this.device?.startNotifications()}async stopNotifications(){return this.device?.stopNotifications()}async reset(){await this.device?.sendMessage(this.codec.resetRequest())}async emitCubeStateRequest(){await this.device?.sendMessage(this.codec.cubeStateRequest())}async emitInfoRequest(){await this.device?.sendMessage(this.codec.infoRequest())}async emitPowerRequest(e=!0){await this.device?.sendMessage(this.codec.powerRequest(),e)}async emitMoveIntervalsRequest(e,t=9){await this.device?.sendMessage(this.codec.movesIntervalRequest(e,t))}async emitMovesRequest(e,t=28){await this.device?.sendMessage(this.codec.movesRequest(e,t))}async fullMoveHistory(e=0){const t=new Array(256),i=new Array(256);let r,s;const a=[new Promise((c,d)=>{let u=0,f=0;r=this.movesResponses.subscribe(h=>{const p=h.moves,x=p.length,m=e+h.start;u+=x;for(let v=0;v<x;v++)i[m+v&255]=p[v];u>=256&&f>=256&&c()}),s=this.moveIntervalsResponses.subscribe(h=>{const p=h.timestamps,x=p.length,m=e+h.start;f+=x;for(let v=0;v<x;v++)t[m+v&255]=p[v];u>=256&&f>=256&&c()})})];for(let c=0;c<10;c++){const d=28*c;a.push(this.emitMovesRequest(d,Math.min(28,256-d)))}for(let c=0;c<29;c++){const d=9*c;a.push(this.emitMoveIntervalsRequest(d,Math.min(9,256-d)))}await Promise.all(a),r.unsubscribe(),s.unsubscribe();const l=new Array(256);for(let c=0;c<256;c++)l[c]=new Ho(t[c],i[c]);return l}}const X0={SETTINGS_PAGE:"settings/",SOLVE_PAGE:"solve/",SCRAMBLE_PAGE:"scramble/",TRAIN_PAGE:"train/",HISTORY_PAGE:"history/",DETAILED_STATS_PAGE:"detailed/",RECONSTRUCTION_PAGE:"reconstruction/",ADMIN_PAGE:"admin/",HELP_PAGE:"help/"};function Sb(n,e){const t=e.hash,r=`${(t===void 0?[""]:t.split("/"))[0].replace("#","")}/`;for(const s of Object.keys(X0))if(X0[s]===r)return s;return null}class kC{constructor(e,t,i){this.when=e,this.moves=t,this.gyroUpdates=i}}const HC={3:"Lw-",4:"Lw-",8:"Rw",9:"Rw",x:"Lw",",":"Rw-",j:"U",f:"U-",d:"L",e:"L-",h:"F",g:"F-",i:"R",k:"R-",w:"B",o:"B-",s:"D",l:"D-",J:"U",F:"U-",D:"2L",E:"2L-",H:"Fw",G:"Fw-",I:"2R",K:"2R-",W:"Bw",O:"Bw-",S:"Dw",L:"Dw-",a:"Y-",A:"Y-",";":"Y",R:"X",r:"X",U:"X",u:"X",T:"X",t:"X",Y:"X",y:"X",V:"X-",v:"X-",C:"X-",c:"X-",N:"X-",n:"X-",M:"X-",m:"X-",Q:"Z-",q:"Z-",P:"Z",p:"Z"},VC={basePath:"/",page:"TRAIN_PAGE",stage:null,previousMove:null,moveSequence:null,pbTime:1/0,recording:[],settings:{macAddress:"",showCube:!0,invertX:!1,invertY:!1,invertZ:!1,enableGyroscope:!0,recordGyroscope:!1,colors:li.DEFAULT_COLORS,internalColor:li.DEFAULT_INTERNAL_COLOR,keyMapping:HC},sim:new Es,history:[],pageNumber:0,buffer:null},Y0=50;function $p(n){return Math.floor(Math.max(0,n-1)/Y0)+1}function WC(n,e){return n!==null&&e[0]===n[0]&&e.length!==n.length}function mi(n,e){n.stage=null,n.recording.length=0,n.previousMove=null,n.moveSequence=null;const t=e.page,i=e.params;if(t!==n.page){n.page=t,n.pageParams=i;const r=X0[t]+(i!==void 0?i.num.toString():"");e.popping||window.history.pushState(i,"",`${n.basePath}#${r}`)}switch(t){case"SOLVE_PAGE":return n.moveSequence=new Vo(n.sim.solution().split(" ")),[{type:"START_NOTIFICATIONS"},{type:"UPDATE_PROPS",props:{page:t,buttonAText:"Cancel",scrambleText:n.moveSequence.toString()}}];case"SCRAMBLE_PAGE":return n.moveSequence=new Vo(Uo.scramble("3x3").split(" ")),[{type:"START_NOTIFICATIONS"},{type:"UPDATE_PROPS",props:{page:t,buttonAText:"Cancel",scrambleText:n.moveSequence.toString()}}];case"TRAIN_PAGE":return[{type:"START_NOTIFICATIONS"},{type:"UPDATE_PROPS",props:{page:t,buttonAText:"Start",scrambleText:"Perform a move and undo it to start, e.g. U U'."}}];case"RECONSTRUCTION_PAGE":{const r=n.pageParams?.num,s=Math.min(n.history.length,r===void 0?n.history.length:r),o=n.history[s-1],a=o?.moves??[],l=o?.gyroUpdates;return[{type:"STOP_NOTIFICATIONS"},{type:"INIT_REPLAY",moves:a,gyroEntries:l},{type:"UPDATE_PROPS",props:{page:t,buttonAText:"Start",scrambleText:jd(a.map(c=>c.value.toString())).join(" ")}}]}case"HISTORY_PAGE":return[{type:"STOP_NOTIFICATIONS"},{type:"UPDATE_PROPS",props:{page:t,history:n.history,pageNumber:n.pageNumber+1,totalPages:$p(n.history.length),buttonAText:"",scrambleText:""}}];case"DETAILED_STATS_PAGE":{const r=n.pageParams?.num,s=Math.min(n.history.length,r===void 0?n.history.length:r);return[{type:"STOP_NOTIFICATIONS"},{type:"UPDATE_PROPS",props:{page:t,selectedRecording:n.history[s-1],buttonAText:"Reconstruct",scrambleText:""}}]}default:return[{type:"STOP_NOTIFICATIONS"},{type:"UPDATE_PROPS",props:{page:t,buttonAText:"",scrambleText:""}}]}}function $C(n,e){switch(e.type){case"UPDATE_SETTINGS":return e.showCube!==void 0&&(n.settings.showCube=e.showCube),e.invertX!==void 0&&(n.settings.invertX=e.invertX),e.invertY!==void 0&&(n.settings.invertY=e.invertY),e.invertZ!==void 0&&(n.settings.invertZ=e.invertZ),e.enableGyroscope!==void 0&&(n.settings.enableGyroscope=e.enableGyroscope),e.recordGyroscope!==void 0&&(n.settings.recordGyroscope=e.recordGyroscope),localStorage.setItem("settings",JSON.stringify(n.settings)),[{type:"UPDATE_PROPS",props:{showCube:e.showCube,invertX:e.invertX,invertY:e.invertY,invertZ:e.invertZ,enableGyroscope:e.enableGyroscope,recordGyroscope:e.recordGyroscope}}];case"GO_TO_PAGE":return mi(n,e);default:return[]}}function jC(n,e){switch(e.type){case"START":return n.moveSequence=new Vo(n.sim.solution().split(" ")),[{type:"UPDATE_PROPS",props:{buttonAText:"Cancel",scrambleText:n.moveSequence.toString()}}];case"TURN":return n.moveSequence!==null?(n.moveSequence.applyMove(e.move.value),[{type:"UPDATE_PROPS",props:{scrambleText:n.moveSequence.toString()}}]):[];case"CANCEL":return n.moveSequence=null,[{type:"UPDATE_PROPS",props:{buttonAText:"Start",scrambleText:""}}];case"GO_TO_PAGE":return mi(n,e);default:return[]}}function XC(n,e){switch(e.type){case"START":return n.moveSequence=new Vo(Uo.scramble("3x3").split(" ")),[{type:"UPDATE_PROPS",props:{buttonAText:"Cancel",scrambleText:n.moveSequence.toString()}}];case"TURN":return n.moveSequence!==null?(n.moveSequence.applyMove(e.move.value),[{type:"UPDATE_PROPS",props:{scrambleText:n.moveSequence.toString()}}]):[];case"CANCEL":return n.moveSequence=null,[{type:"UPDATE_PROPS",props:{buttonAText:"Start",scrambleText:""}}];case"GO_TO_PAGE":return mi(n,e);default:return[]}}function YC(n,e){switch(e.type){case"START":return n.stage="SCRAMBLING",n.moveSequence=new Vo(Uo.scramble("3x3").split(" ")),n.recording.length=0,[{type:"UPDATE_PROPS",props:{buttonAText:"Cancel",scrambleText:n.moveSequence.toString()}},{type:"WAKELOCK",enable:!0}];case"CANCEL":return n.stage=null,n.moveSequence=null,n.previousMove=null,n.recording.length=0,n.buffer=null,[{type:"STOP_TIMER"},{type:"WAKELOCK",enable:!1},{type:"UPDATE_PROPS",props:{buttonAText:"Start",scrambleText:"Perform a move and undo it to start, e.g. U U'."}}];case"TURN":if(n.stage===null&&WC(n.previousMove,e.move.value))return n.stage="SCRAMBLING",n.previousMove=null,n.moveSequence=new Vo(Uo.scramble("3x3").split(" ")),[{type:"UPDATE_PROPS",props:{buttonAText:"Cancel",scrambleText:n.moveSequence.toString()}},{type:"WAKELOCK",enable:!0}];if(n.stage===null)n.previousMove=e.move.value;else{if(n.stage==="SCRAMBLING"&&n.moveSequence?.done)return n.stage="SOLVING",n.moveSequence=null,n.recording.length=0,n.recording.push(e.move),n.settings.recordGyroscope&&(n.buffer=[]),[{type:"START_TIMER"}];if(n.stage==="SCRAMBLING")return n.moveSequence.applyMove(e.move.value),[{type:"UPDATE_PROPS",props:{scrambleText:n.moveSequence.toString()}}];if(n.stage==="SOLVING"&&n.sim.isSolved()){n.stage=null;const i=n.recording.slice();n.recording.length=0,i.push(e.move);const r=n.buffer;n.buffer=null;const s=r===null||r.length===0?void 0:r;n.history.push(new kC(new Date,i,s));const o=Wp(i);let a="";return o<n.pbTime&&(n.pbTime=o,a="New Personal Best"),localStorage.setItem("history",JSON.stringify(n.history)),[{type:"STOP_TIMER"},{type:"WAKELOCK",enable:!1},{type:"UPDATE_PROPS",props:{history:n.history,totalPages:$p(n.history.length),scrambleText:a}}]}else n.stage==="SOLVING"&&n.recording.push(e.move)}return[];case"GO_TO_PAGE":const t=mi(n,e);return t.push({type:"WAKELOCK",enable:!1}),t.push({type:"STOP_TIMER"}),t;default:return[]}}function ZC(n,e){switch(e.type){case"ADJUST_PAGE":const t=$p(n.history.length)-1;return n.pageNumber=Math.max(0,Math.min(t,e.pageDelta+n.pageNumber)),[{type:"UPDATE_PROPS",props:{history:n.history,pageNumber:n.pageNumber+1}}];case"GO_TO_PAGE":return mi(n,e);default:return[]}}function JC(n,e){switch(e.type){case"CANCEL":return mi(n,{page:"RECONSTRUCTION_PAGE",params:n.pageParams});case"GO_TO_PAGE":return mi(n,e);default:return[]}}function KC(n,e){switch(e.type){case"START":return[{type:"UPDATE_PROPS",props:{buttonAText:"Pause"}},{type:"STOP_NOTIFICATIONS"},{type:"START_REPLAY"},{type:"WAKELOCK",enable:!0}];case"CANCEL":return[{type:"UPDATE_PROPS",props:{buttonAText:"Start"}},{type:"PAUSE_REPLAY"},{type:"WAKELOCK",enable:!1}];case"GO_TO_PAGE":const t=mi(n,e);return t.push({type:"PAUSE_REPLAY"}),t.push({type:"WAKELOCK",enable:!1}),t;default:return[]}}function QC(n,e){switch(e.type){case"CLEAR_HISTORY":return confirm("Clear history?")?(n.history.length=0,localStorage.removeItem("history"),n.pbTime=1/0,n.pageNumber=0,[{type:"UPDATE_PROPS",props:{pageNumber:1,totalPages:1}}]):[];case"GO_TO_PAGE":return mi(n,e);default:return[]}}function eR(n,e){switch(e.type){case"GO_TO_PAGE":return mi(n,e);default:return[]}}const tR={SETTINGS_PAGE:$C,SOLVE_PAGE:jC,SCRAMBLE_PAGE:XC,TRAIN_PAGE:YC,HISTORY_PAGE:ZC,DETAILED_STATS_PAGE:JC,RECONSTRUCTION_PAGE:KC,ADMIN_PAGE:QC,HELP_PAGE:eR};function nR(n,e){switch(e.type){case"TURN":n.sim.applyMove(e.move.value);break;case"CENTER":return[{type:"CENTER"}];case"RESET":return[{type:"SET_CUBE_STATE",cubeState:Lc.SOLVED}];case"CUBE_STATE":return n.sim.setState(e.cubeState),[];case"CONNECT":return n.settings.macAddress=e.macAddress,localStorage.setItem("settings",JSON.stringify(n.settings)),[{type:"CONNECT",macAddress:e.macAddress}]}return tR[n.page](n,e)}function E3(n,e=!0){n.rotateX((e?Math.PI:-Math.PI)/2)}function T3(n,e=!0){n.rotateY((e?Math.PI:-Math.PI)/2)}function A3(n,e=!0){n.rotateZ((e?Math.PI:-Math.PI)/2)}const L3={U:[["U"],null],"U-":[["U'"],null],D:[["D"],null],"D-":[["D'"],null],F:[["F"],null],"F-":[["F'"],null],B:[["B"],null],"B-":[["B'"],null],R:[["R"],null],"R-":[["R'"],null],L:[["L"],null],"L-":[["L'"],null],"2U":[["U'","D"],"y"],"2U-":[["U","D'"],"y'"],"2D":[["U","D'"],"y'"],"2D-":[["U'","D"],"y"],"2F":[["F'","B"],"z"],"2F-":[["F","B'"],"z'"],"2B":[["F","B'"],"z'"],"2B-":[["F'","B"],"z"],"2L":[["R","L'"],"x'"],"2L-":[["R'","L"],"x"],"2R":[["R'","L"],"x"],"2R-":[["R","L'"],"x'"],Uw:[["D"],"y"],"Uw-":[["D'"],"y'"],Dw:[["U"],"y'"],"Dw-":[["U'"],"y"],Fw:[["B"],"z"],"Fw-":[["B'"],"z'"],Bw:[["F"],"z"],"Bw-":[["F'"],"z"],Lw:[["R"],"x'"],"Lw-":[["R'"],"x"],Rw:[["L"],"x"],"Rw-":[["L'"],"x'"],Y:[[],"y"],"Y-":[[],"y'"],X:[[],"x"],"X-":[[],"x'"],Z:[[],"z"],"Z-":[[],"z'"]};function C3(n,e){const t=n.slice();for(let i=0;i<n.length;i++)n[i]=e[t[i]];return n}const iR={x:0,"x'":1,y:2,"y'":3,z:4,"z'":5},rR=["x","x'","y","y'","z","z'"],sR={F:0,"F'":1,B:2,"B'":3,U:4,"U'":5,D:6,"D'":7,L:8,"L'":9,R:10,"R'":11},oR=["F","F'","B","B'","U","U'","D","D'","L","L'","R","R'"],aR={x:[[0,1,4,5,3,2],[6,7,4,5,0,1,2,3,8,9,10,11]],"x'":[[0,1,5,4,2,3],[4,5,6,7,2,3,0,1,8,9,10,11]],y:[[5,4,2,3,0,1],[10,11,8,9,4,5,6,7,0,1,2,3]],"y'":[[4,5,2,3,1,0],[8,9,10,11,4,5,6,7,2,3,0,1]],z:[[2,3,1,0,4,5],[0,1,2,3,8,9,10,11,6,7,4,5]],"z'":[[2,3,0,1,4,5],[0,1,2,3,10,11,8,9,4,5,6,7]]},R3=[0,1,2,3,4,5],P3=[0,1,2,3,4,5,6,7,8,9,10,11];function cR(n,e){if(!(e in L3))return[];const[t,i]=L3[e];if(console.log(JSON.stringify({extendedMove:e,moves:t,rotation:i})),i!==null){const r=rR[R3[iR[i]]],[s,o]=aR[r];switch(C3(R3,s),C3(P3,o),r){case"x":E3(n,!0);break;case"x'":E3(n,!1);break;case"y":T3(n,!1);break;case"y'":T3(n,!0);break;case"z":A3(n,!0);break;case"z'":A3(n,!1);break}}return t===void 0?[]:t.map(r=>oR[P3[sR[r]]])}function $h(n){const e=Math.floor(n/6e4),t=Math.floor(n/1e3)%60,i=Math.floor(n/10)%100;return`${e}:${t<10?"0"+t:t}.${i<10?"0"+i:i}`}function Eb(n,e){const t=[],i=n.moves.length;let r=-n.moves[0].timestamp;for(let l=0;l<i;l++)r+=n.moves[l].timestamp,t.push(n.moves[l].value);const s=jd(t),o=(typeof n.when=="string"?new Date(n.when):n.when).toISOString(),a=1e3*s.length/r;return`<tr><td>${e}</td><td>${o}</td><td>${r/1e3}</td><td>${s.length}</td><td>${a.toPrecision(3)}</td><td><button data-num="${e}">Details</button></td></tr>`}function I3(n,e){const t=n.length,i=e*Y0,r=i+Y0;return n.slice(Math.max(0,t-r),t-i).reverse().map((o,a)=>Eb(o,t-a-i)).join("")}function Tb(n){let e=1/0;return n.forEach(t=>{e=Math.min(Wp(t.moves),e)}),e}function D3(n){if(n.length===0)return"";let e,t=1/0;return n.forEach((i,r)=>{const s=Wp(i.moves);s<t&&(e=r,t=s)}),Eb(n[e],e+1)}function lR(n,e){const t=[],i=[],r=[],s=[],o=[],a=[t,i,r,s,o],l=e.length;let c=0;const d=n.getState();for(;c<l&&!n.isF2L();)n.applyMove(e[c].value),c++;const u=n.match().find(f=>f.stage==="F2L")?.bottom;for(n.setState(d),c=0;c<l&&!n.isCross(f=>f.bottom===u);){const f=e[c];n.applyMove(f.value),t.push(f),c++}for(;c<l&&!n.isF2L();){const f=e[c];n.applyMove(f.value),i.push(f),c++}for(;c<l&&!n.isOLL(f=>f.bottom===u);){const f=e[c];n.applyMove(f.value),r.push(f),c++}for(;c<l&&!n.isPLL(f=>f.bottom===u);){const f=e[c];n.applyMove(f.value),s.push(f),c++}for(;c<l;c++)o.push(e[c]);return a}function ya(n,e,t=!1){const i=jd(e.map(c=>c.value)),r=e.map(c=>c.timestamp),s=r.reduce((c,d)=>c+d,t?-r[0]:0)/1e3,o=s.toString(),a=i.length.toString(),l=i.length===0?"N/A":(i.length/s).toPrecision(3);return`<tr><td>${n}</td><td>${o}</td><td>${a}</td><td>${l}</td></tr>`}function dR(n){const e=new Es;j0(n.map(a=>a.value)).forEach(a=>e.applyMove(a));const[t,i,r,s,o]=lR(e,n);return[ya("Cross",t,!0),ya("F2L",i),ya("OLL",r),ya("PLL",s),ya("AUF",o)].join("")}function Nr(n,e){return mn(n,()=>({type:"GO_TO_PAGE",page:e}))}function uR(n){const e=VC;e.basePath=n,e.history=[{when:new Date("2022-10-13T01:19:54.137Z"),moves:[{timestamp:6817,value:"R'"},{timestamp:79,value:"R'"},{timestamp:520,value:"L"},{timestamp:143,value:"B'"},{timestamp:944,value:"L"},{timestamp:298,value:"U"},{timestamp:68,value:"B'"},{timestamp:100,value:"U'"},{timestamp:2296,value:"D'"},{timestamp:561,value:"D'"},{timestamp:923,value:"B'"},{timestamp:235,value:"D'"},{timestamp:312,value:"D'"},{timestamp:318,value:"B"},{timestamp:208,value:"D'"},{timestamp:86,value:"B'"},{timestamp:748,value:"D"},{timestamp:344,value:"B"},{timestamp:1134,value:"D"},{timestamp:1499,value:"D"},{timestamp:258,value:"D"},{timestamp:260,value:"F"},{timestamp:175,value:"D'"},{timestamp:153,value:"F'"},{timestamp:524,value:"D"},{timestamp:1305,value:"L'"},{timestamp:38,value:"D"},{timestamp:263,value:"D"},{timestamp:107,value:"L"},{timestamp:78,value:"L"},{timestamp:163,value:"D"},{timestamp:170,value:"L'"},{timestamp:2183,value:"D"},{timestamp:1574,value:"D"},{timestamp:262,value:"D"},{timestamp:262,value:"L'"},{timestamp:52,value:"D"},{timestamp:155,value:"L"},{timestamp:594,value:"R'"},{timestamp:38,value:"D"},{timestamp:95,value:"R"},{timestamp:711,value:"D"},{timestamp:619,value:"D"},{timestamp:602,value:"B"},{timestamp:155,value:"D'"},{timestamp:386,value:"D"},{timestamp:177,value:"B'"},{timestamp:333,value:"B"},{timestamp:117,value:"D'"},{timestamp:159,value:"B'"},{timestamp:69,value:"D"},{timestamp:396,value:"B"},{timestamp:97,value:"D"},{timestamp:226,value:"D"},{timestamp:107,value:"B'"},{timestamp:309,value:"D"},{timestamp:129,value:"D"},{timestamp:156,value:"B"},{timestamp:136,value:"D'"},{timestamp:105,value:"B'"},{timestamp:745,value:"B"},{timestamp:290,value:"D"},{timestamp:139,value:"D"},{timestamp:334,value:"B'"},{timestamp:120,value:"B'"},{timestamp:71,value:"D'"},{timestamp:111,value:"B"},{timestamp:60,value:"B"},{timestamp:127,value:"D'"},{timestamp:147,value:"B'"},{timestamp:69,value:"B'"},{timestamp:290,value:"D"},{timestamp:126,value:"D"},{timestamp:64,value:"B"},{timestamp:492,value:"D"},{timestamp:522,value:"D"},{timestamp:560,value:"F"},{timestamp:6,value:"B'"},{timestamp:213,value:"F"},{timestamp:10,value:"B'"},{timestamp:182,value:"U'"},{timestamp:89,value:"B"},{timestamp:25,value:"F'"},{timestamp:170,value:"L'"},{timestamp:242,value:"L'"},{timestamp:20,value:"F"},{timestamp:13,value:"B'"},{timestamp:240,value:"F"},{timestamp:11,value:"B'"},{timestamp:1050,value:"B"},{timestamp:344,value:"F'"},{timestamp:106,value:"U'"},{timestamp:387,value:"U'"},{timestamp:308,value:"U"},{timestamp:181,value:"F"},{timestamp:12,value:"B'"},{timestamp:519,value:"F"},{timestamp:10,value:"B'"}],gyroUpdates:[{dt:59.799999952316284,dqx:-.013568322650997694,dqy:-.0017728307596899806,dqz:-.006512067509339317,dqw:.999885168741036},{dt:114.20000004768372,dqx:-.038194024920881336,dqy:-.009269512937835456,dqz:-.01612098682890563,dqw:.9990972957494684},{dt:50.799999952316284,dqx:-.033945584343719165,dqy:-.014218933454510307,dqz:-.006062886499723696,dqw:.9993041382093196},{dt:56.200000047683716,dqx:-.025935084078579473,dqy:-.00936209986910691,dqz:.001619297331528033,dqw:.9996184774082709},{dt:112.89999997615814,dqx:-.02429942107006383,dqy:-.00851415564585073,dqz:.0020690506297758593,dqw:.999666327490723},{dt:1.600000023841858,dqx:-.016529225069624454,dqy:-.011207839123813512,dqz:.00799387480768167,dqw:.999768606741746},{dt:113.79999995231628,dqx:-.14683486314049024,dqy:-.03419548010748702,dqz:-.030572675483021172,dqw:.9880969100349125},{dt:54,dqx:.0024177011751776445,dqy:-.004394263188898295,dqz:-.0066555395219445035,dqw:.9999652738799113},{dt:55.40000003576279,dqx:-.004108086908024056,dqy:-.005632245789341572,dqz:-.010032956716683722,dqw:.9999253678194419},{dt:57.69999998807907,dqx:-.004404357555378657,dqy:-.00609836501817812,dqz:-.00427736816827165,dqw:.9999625571491078},{dt:54.5,dqx:-.13236652657801912,dqy:.018303681685218953,dqz:-.11287927271523387,dqw:.9845823214285927},{dt:112.5,dqx:-.006188129042417556,dqy:.007428606134818688,dqz:-.011165764554628865,dqw:.9998909183364748},{dt:56.19999998807907,dqx:.013413037617089452,dqy:.004102484648559973,dqz:-.005426494131412968,dqw:.9998869002057347},{dt:59.10000002384186,dqx:.026055641640687965,dqy:-.0027471868972785973,dqz:-.012471979207068967,dqw:.9995789144622361},{dt:53.80000001192093,dqx:.005833490463834273,dqy:-.006432259331676127,dqz:-.025448630195989808,dqw:.9996384164536927},{dt:56.89999997615814,dqx:-.013334363115557857,dqy:.005137119597221407,dqz:-.013638811815332608,dqw:.9998048747504745},{dt:111.80000001192093,dqx:-.007065455419885208,dqy:.006132085773433937,dqz:.0009352725910583004,dqw:.9999558000876625},{dt:61.89999997615814,dqx:-.21095726968331588,dqy:.49232073906977536,dqz:-.4188599751786914,dqw:.7332623278492201},{dt:50.69999998807907,dqx:-.016299740200669308,dqy:.05744681747403593,dqz:-.025072339620799633,dqw:.9979005759179794},{dt:55.90000003576279,dqx:-.012020141247583577,dqy:.03079138544597837,dqz:-.016014725177974753,dqw:.9993252400315822},{dt:112.5,dqx:2080111953789432e-20,dqy:.00813866622424994,dqz:-.0031074964982165665,dqw:.9999620518524278},{dt:56.59999996423721,dqx:-.07279519420662703,dqy:.20654639837168487,dqz:-.05751070391458196,dqw:.9740287285061742},{dt:112.10000002384186,dqx:.002987256038198577,dqy:.008810869651686704,dqz:-.018343352805761493,dqw:.9997884607681701},{dt:1.399999976158142,dqx:.00949250251283465,dqy:.009232403825704866,dqz:-.017154363619775848,dqw:.9997651638882222},{dt:58.90000003576279,dqx:.008090977993449738,dqy:.012497194907976239,dqz:-.01430408941677419,dqw:.9997868518941917},{dt:108.5,dqx:-.003738013569574844,dqy:.0050535841622182665,dqz:-.0159488646031829,dqw:.9998530503326668},{dt:59.30000001192093,dqx:-.015591850796030843,dqy:-.004874524089885368,dqz:-.007144400133574258,dqw:.9998410327398964},{dt:53.09999996423721,dqx:-.009413083291349766,dqy:-.004087119265643702,dqz:.0003448020907144689,dqw:.9999472838257908},{dt:113.60000002384186,dqx:.20442466551236904,dqy:-.18581157732227166,dqz:.17222267482201534,dqw:.9455284047242135},{dt:.800000011920929,dqx:.009171848288336316,dqy:-.00923900713004052,dqz:.015782223481849544,dqw:.9997906977803884},{dt:118.59999996423721,dqx:.008575383767233533,dqy:-.007769873727517286,dqz:.012653228745218958,dqw:.9998529830219162},{dt:48.69999998807907,dqx:.35113190816921785,dqy:.07290367648023546,dqz:.1351464452757955,dqw:.9236486752821257},{dt:57.5,dqx:-.019967710803919916,dqy:-.007083536424416975,dqz:.008516467532194316,dqw:.9997392579156567},{dt:111.10000002384186,dqx:-.05637133554748712,dqy:-.026384924450862976,dqz:-.014105572767814989,dqw:.9979614927977967},{dt:1.199999988079071,dqx:-.12730772041869978,dqy:-.035939722035701685,dqz:-.1027583596881354,dqw:.985871087016956},{dt:112.40000003576279,dqx:-.07893271584845556,dqy:-.03505878932769597,dqz:-.07879553354667174,dqw:.9931423722471809},{dt:54.69999998807907,dqx:.009099643071467503,dqy:-.010853336259286764,dqz:-.008851256962186471,dqw:.9998605186915843},{dt:61.39999997615814,dqx:.03550458348003066,dqy:.008151888158487147,dqz:.0009160094165706067,dqw:.9993358455484873},{dt:53.19999998807907,dqx:.03110378475356721,dqy:.010536621394084053,dqz:-.008012400517253992,dqw:.9994285045072272},{dt:116.5,dqx:.5358950838375007,dqy:.0586694371487594,dqz:-.6134050735225984,dqw:.5771555873767328},{dt:.30000001192092896,dqx:.007282602180435344,dqy:.01514333618089609,dqz:-.004239070145156162,dqw:.9998498254033444},{dt:106.40000003576279,dqx:.003800969597304106,dqy:.015698655135350403,dqz:-.004002609749996222,dqw:.9998615323994872},{dt:57.09999996423721,dqx:-.14262130745819934,dqy:.08418575376603096,dqz:-.03354627552585557,dqw:.9856198906881406},{dt:55.10000002384186,dqx:-.006925910044091661,dqy:-.004759144276628943,dqz:-.0016673255324920755,dqw:.9999633004972653},{dt:61.39999997615814,dqx:-.006395628610596027,dqy:-.010789078728727825,dqz:-.0006194317077851674,dqw:.9999211509010199},{dt:107.40000003576279,dqx:-.010122759436733483,dqy:-.01200099179043777,dqz:.003544338836780875,dqw:.999870463409957},{dt:60.799999952316284,dqx:-.010831200243201076,dqy:-.009153320831001403,dqz:.0046928932029032255,dqw:.9998884330626305},{dt:51.80000001192093,dqx:-.011650188008520367,dqy:-.006865686355900437,dqz:.005585200547105568,dqw:.9998929647742689},{dt:57.19999998807907,dqx:-.011206070389236407,dqy:-.01189131052829815,dqz:.009113398776452925,dqw:.9998249680234497},{dt:168.20000004768372,dqx:-.17821195431168801,dqy:-.29192012674339307,dqz:.1492877185033143,dqw:.9277587596172863},{dt:4.699999988079071,dqx:.03838678195737226,dqy:.019426385992581563,dqz:.005048608116713878,dqw:.9990613504957084},{dt:51.69999998807907,dqx:.051095616180225435,dqy:.023528106927197145,dqz:.007448938127561193,dqw:.9983887917601826},{dt:56.10000002384186,dqx:.05695495116885189,dqy:.02156738033776212,dqz:.006764303057263322,dqw:.9981208473160298},{dt:60.09999996423721,dqx:.05317432696405569,dqy:.015548952938256089,dqz:.004315051655377333,dqw:.9984548569382871},{dt:108.30000001192093,dqx:.04766220356604202,dqy:.007485810270721094,dqz:.009360934985888445,dqw:.9987915948244711},{dt:59.19999998807907,dqx:.03537597261363591,dqy:.00119381076457159,dqz:.011073703705968056,dqw:.9993120075650699},{dt:53.30000001192093,dqx:.4596405045347242,dqy:.26370009957229057,dqz:-.062347885336418024,dqw:.8457574151437898},{dt:56.60000002384186,dqx:.008628125261392238,dqy:.01800391366973597,dqz:-.0010475197374232303,dqw:.9998001386524439},{dt:112.39999997615814,dqx:.0021043067319857995,dqy:.011739368243495633,dqz:.0008152068426833525,dqw:.9999285447291848},{dt:59.19999998807907,dqx:-.0020995908546649813,dqy:.005534805299881554,dqz:-.0002897065904292062,dqw:.9999824367050789},{dt:109.40000003576279,dqx:-.10080764915819168,dqy:-.03402745236531086,dqz:.0473017440726759,dqw:.9931981148614856},{dt:1.199999988079071,dqx:-.02546772134155925,dqy:-.005498850392075326,dqz:.004399171220715176,dqw:.9996508415975075},{dt:57.30000001192093,dqx:-.024577429957616786,dqy:-.004042416763802105,dqz:.005446308818230355,dqw:.9996749204234556},{dt:110.89999997615814,dqx:-.028747209018759795,dqy:-.003633341290234118,dqz:.003935976757074716,dqw:.9995723610082804},{dt:56.10000002384186,dqx:-.034708126740326535,dqy:-.005827029271275461,dqz:.001538841353372039,dqw:.9993793191953385},{dt:56.09999996423721,dqx:-.03607023222900302,dqy:-.01044165239051546,dqz:.0023179863814493107,dqw:.999292017971442},{dt:112.80000001192093,dqx:-.016773997547418325,dqy:-.006253382826637302,dqz:.002613509436958178,dqw:.999836335495928},{dt:1.100000023841858,dqx:-.15897416991608246,dqy:-.17364685284968492,dqz:.09591856037879047,dqw:.9671471519731384},{dt:113.69999998807907,dqx:-.0055076807479378645,dqy:-.002091640384867921,dqz:.013240417540946816,dqw:.9998949854042777},{dt:53.19999998807907,dqx:-.007945584619688457,dqy:.0032753057405402186,dqz:.012664524161168738,dqw:.9998828680826212},{dt:56.5,dqx:-.03097569245610177,dqy:-.015729010187515047,dqz:-.025955051321574687,dqw:.999059277533761},{dt:56.60000002384186,dqx:.0032714568646678953,dqy:-.006286619700283408,dqz:.01742023615489101,dqw:.9998231400377942},{dt:116,dqx:-.0015689565398765478,dqy:-.005815934133876405,dqz:.008321058490778712,dqw:.9999472352435002},{dt:52.799999952316284,dqx:-.007549438311256345,dqy:-.007374990635342499,dqz:.0017546684206169345,dqw:.9999427666786969},{dt:55.90000003576279,dqx:-.012875406747736188,dqy:-.008139826374739478,dqz:-.002658871399299885,dqw:.9998804416181725},{dt:61.89999997615814,dqx:-.01375153905311657,dqy:-.009581743474485344,dqz:-.002764685484677322,dqw:.9998557105301897},{dt:66.5,dqx:-.015297429129399793,dqy:-.011075898597935618,dqz:-.0011849170205661466,dqw:.99982093852046},{dt:98.30000001192093,dqx:.08909670662102376,dqy:.08643745550578627,dqz:-.03536918651887262,dqw:.9916346927170133},{dt:54,dqx:.01425758888591662,dqy:.020236871411919877,dqz:-.006678696772086358,dqw:.9996712385599799},{dt:61.10000002384186,dqx:.01736644873264889,dqy:.009018843843825758,dqz:-.006730521476789132,dqw:.9997858605695461},{dt:53.39999997615814,dqx:.020351195275544274,dqy:.006688422312230241,dqz:.006730286338701562,dqw:.999747866766231},{dt:114.10000002384186,dqx:.15166707246026312,dqy:.16714090877976062,dqz:-.03837820788863425,dqw:.9734413844206882},{dt:109.59999996423721,dqx:.0008879669231435581,dqy:.0028948827658521227,dqz:-.007769294932859577,dqw:.9999652340080435},{dt:1.4000000357627869,dqx:-.006060183808849453,dqy:.003260764055582767,dqz:-.007484677017204039,dqw:.9999483092639961},{dt:56.19999998807907,dqx:-.010157831766647306,dqy:.005859197040884327,dqz:-.0059918316254394255,dqw:.9999132893494361},{dt:54.30000001192093,dqx:-.0046941843552562685,dqy:.002251266103455569,dqz:-.0034558366888807757,dqw:.9999804766228939},{dt:113.39999997615814,dqx:-.005467200959105315,dqy:.0015921685889362241,dqz:-.0032444320512223512,dqw:.9999785239561508},{dt:56.39999997615814,dqx:-.013027880189963294,dqy:.004994002685338145,dqz:-.012251148837626541,dqw:.9998276069538655},{dt:58.700000047683716,dqx:-.3128849443700267,dqy:-.17562987323977106,dqz:.1265606135590226,dqw:.9247916361580651},{dt:52.89999997615814,dqx:.007531229090408063,dqy:.0018182333545735396,dqz:.0059213784988372715,dqw:.9999524548159926},{dt:115,dqx:-.0033932328625644616,dqy:.001995324056922154,dqz:.0073557410625762504,dqw:.9999651982574538},{dt:53.80000001192093,dqx:-.004713475662504603,dqy:-.0011397342662041454,dqz:-3205520960720704e-20,dqw:.9999882414935914},{dt:56.80000001192093,dqx:-.0578885396247097,dqy:-.0334450701247446,dqz:-.021584846603324437,dqw:.9975291668224945},{dt:56.09999996423721,dqx:.0035629032886262246,dqy:.00025012872776189465,dqz:.006270286862042859,dqw:.9999739629902586},{dt:112.60000002384186,dqx:-.0008296189429410905,dqy:.004006677949495413,dqz:-.00393457151272065,dqw:.999983888575826},{dt:.19999998807907104,dqx:-.011787204425566373,dqy:-9880888609065108e-20,dqz:-.012586783968021993,dqw:.999851301403352},{dt:112.10000002384186,dqx:-.017917064386349844,dqy:-.012888809513179361,dqz:-.009272562006254904,dqw:.9997133974229557},{dt:58.39999997615814,dqx:-.01312086614520559,dqy:-.010322202092597349,dqz:.013007301567054106,dqw:.9997760274789063},{dt:54.10000002384186,dqx:-.0019569766339864714,dqy:-.00575169466545325,dqz:.0041005954950207885,dqw:.9999731363229294},{dt:56.5,dqx:.10445377284530556,dqy:-.03756824879257256,dqz:.036824106779736195,dqw:.9931374633860689},{dt:57.5,dqx:-.01887671948505053,dqy:-.005442728753552867,dqz:.001301888748009284,dqw:.9998061568378571},{dt:115,dqx:.00417568345518062,dqy:-.0042009987279364724,dqz:.0022493979677955037,dqw:.9999799275416245},{dt:58.19999998807907,dqx:.008442189819718567,dqy:.0034697937118771394,dqz:-.000821633142517506,dqw:.9999580065590873},{dt:51.69999998807907,dqx:-.007691386418575947,dqy:.010770704146097043,dqz:-.018873393082252922,dqw:.9997342794666592},{dt:58.10000002384186,dqx:.007112125952251256,dqy:.004060678023155961,dqz:-.014297289879973602,dqw:.9998642488160677},{dt:166,dqx:.0070674922507307876,dqy:.0012251325457297013,dqz:-.004522661488488931,dqw:.9999640469219839},{dt:1,dqx:-.046733308712952976,dqy:-.0486243918049131,dqz:.08618388910128302,dqw:.993993965594218},{dt:54.59999996423721,dqx:.005198816676429472,dqy:-.0189975302704235,dqz:-.016168320497060226,dqw:.9996752730567529},{dt:59.60000002384186,dqx:.01018225383533025,dqy:-.015053371522558034,dqz:-.024549744827445583,dqw:.999533405015332},{dt:52.69999998807907,dqx:.049993934676816364,dqy:-.1327218246970932,dqz:-.25247467641131266,dqw:.9571531024426589},{dt:116,dqx:.034404910540090886,dqy:-.017753713035202512,dqz:-.024194170284563526,dqw:.9989573313852969},{dt:52.60000002384186,dqx:.03150590386759554,dqy:-.015223206331014094,dqz:-.02207305354367417,dqw:.9991438396536043},{dt:57.5,dqx:.028797485731849592,dqy:-.012148712771099912,dqz:-.020634903009167482,dqw:.999298411072154},{dt:56.09999996423721,dqx:.02494086238819032,dqy:-.005609977036166169,dqz:-.012361652159462888,dqw:.9995967542448683},{dt:114.80000001192093,dqx:.011658460310918078,dqy:.0006663596679748474,dqz:-.003930764321980196,dqw:.999924089798729},{dt:53.89999997615814,dqx:-.007188469681288473,dqy:.010338665713392259,dqz:.005818424785529741,dqw:.9999037872855185},{dt:55.5,dqx:-.24418699044178985,dqy:.13361925676712283,dqz:.4100445237860603,dqw:.8685517235220055},{dt:59.10000002384186,dqx:.005555206012289225,dqy:.0009263692415906188,dqz:-.009026010209770632,dqw:.9999434047314291},{dt:53.80000001192093,dqx:.010292966649946611,dqy:.007487230072934503,dqz:.004496820535523097,dqw:.9999088832630947},{dt:114.80000001192093,dqx:.005576773473646775,dqy:.002821250688015031,dqz:-.0007278697608653073,dqw:.9999802049779736},{dt:53.59999996423721,dqx:.002627736522661357,dqy:.05748934893327173,dqz:-.11238253136016768,dqw:.9919970949579826},{dt:62.19999998807907,dqx:-.012991666014676159,dqy:-.003417095507159962,dqz:.010492758247870536,dqw:.9998547104938845},{dt:51.40000003576279,dqx:-.00034162271411101834,dqy:-.0012516802225929768,dqz:.02909977660029141,dqw:.9995756697681044},{dt:55.19999998807907,dqx:.039569110491963905,dqy:.02362306614308199,dqz:.05437326225022185,dqw:.9974566580023128},{dt:112,dqx:.056064592599492466,dqy:.030321017699015018,dqz:.03155130824032579,dqw:.9974677500003059},{dt:56.69999998807907,dqx:.05299375335966924,dqy:.02539934704151131,dqz:.003301843106784011,dqw:.9982663137193488},{dt:112.40000003576279,dqx:.027302744954261535,dqy:.012773472066815339,dqz:.00024750231187854743,dqw:.9995455653805516},{dt:2.899999976158142,dqx:.36143321490360353,dqy:.1081904521775659,dqz:.033549657500542014,dqw:.9254919112037964},{dt:58.30000001192093,dqx:.008865659639220473,dqy:.01905674481768037,dqz:-.01066797034717164,dqw:.999722178890109},{dt:107.5,dqx:.008194022310293609,dqy:.01925261620988266,dqz:-.007321125725825546,dqw:.9997542677506108},{dt:59.30000001192093,dqx:-.02291264579129314,dqy:.12002394532982898,dqz:-.05792419798606504,dqw:.9908148416823277},{dt:110,dqx:-.007328915438653895,dqy:-.0033024212291618196,dqz:.012096135082236142,dqw:.9998945267019871},{dt:1.399999976158142,dqx:-.003111940470609806,dqy:.003189737259249579,dqz:.0023805509955420745,dqw:.9999872371083953},{dt:56.60000002384186,dqx:-.0012201356104183901,dqy:.0054488570366784915,dqz:19681334291477004e-22,dqw:.99998441048959},{dt:110.29999995231628,dqx:-.004653551894476933,dqy:.005304742850369125,dqz:.0003278327674365311,dqw:.9999750480305665},{dt:113.30000001192093,dqx:-.001519933929788884,dqy:.005785982153210657,dqz:-.001443790673201828,dqw:.9999810636606394},{dt:1.4000000357627869,dqx:.0036645805397061988,dqy:.005709297821768897,dqz:-.003252260821605152,dqw:.9999716983832082},{dt:59.19999998807907,dqx:.06846247743548019,dqy:-.2785776291960136,dqz:.12998091317643762,dqw:.9491113506352897},{dt:107.30000001192093,dqx:-.007460707489328505,dqy:-.05673079410965959,dqz:.024834583919515263,dqw:.9980527031600037},{dt:59,dqx:-.005579685078233261,dqy:-.05190837425681086,dqz:.021615636803874766,dqw:.998402299697875},{dt:115.5,dqx:-.00011884703196778784,dqy:-.028265016567877776,dqz:.012860384824805893,dqw:.9995177263140251},{dt:.3999999761581421,dqx:-.0771397463604125,dqy:-.0298360057968228,dqz:-.05163028108462783,dqw:.9952354426791007},{dt:50.80000001192093,dqx:-.01271953330732168,dqy:.027705104241491252,dqz:-.02245325490183922,dqw:.9992829889554435},{dt:116.89999997615814,dqx:-.02029990587987529,dqy:.018912645301058822,dqz:-.01796229263366242,dqw:.9994536416024145},{dt:51.10000002384186,dqx:-.018778632731511757,dqy:.02115469227613706,dqz:-.017063876819818163,dqw:.999454184070143},{dt:57,dqx:-.018318099705287194,dqy:.025333962919684455,dqz:-.020263351608878877,dqw:.9993057760903548},{dt:57.80000001192093,dqx:-.023348437441399895,dqy:.026438793565718405,dqz:-.023998469381901352,dqw:.9990895425992407},{dt:110.5,dqx:-.01218972971582884,dqy:.013815900390682118,dqz:-.010257477902222228,dqw:.9997776330429358},{dt:56.799999952316284,dqx:-.22933550370284744,dqy:-.006676055739831571,dqz:-.16983566507548187,dqw:.9583926668591997},{dt:55.40000003576279,dqx:-.00589204541432853,dqy:-.012916398259116252,dqz:.012971801125364115,dqw:.9998150743174518},{dt:59.69999998807907,dqx:.013353151880017938,dqy:-.010327266978148952,dqz:.014959153150195928,dqw:.9997455999546386},{dt:52.89999997615814,dqx:.5152835702516101,dqy:-.013656248616988748,dqz:.19725083072456984,dqw:.833899549634686},{dt:115.20000004768372,dqx:.030747504615906397,dqy:.0031282590155057854,dqz:.0016504307726012274,dqw:.9995209257607822},{dt:53.39999997615814,dqx:.026959926743150415,dqy:-.00031792370835914685,dqz:.001641919986356051,dqw:.9996351161165149},{dt:56.89999997615814,dqx:.025866810420450147,dqy:-.0025163098780132814,dqz:.0034211224375849947,dqw:.999656377073911},{dt:56.10000002384186,dqx:.02179632033842656,dqy:-.0021133888654355226,dqz:.0056062549265059256,dqw:.9997444793110423},{dt:115.89999997615814,dqx:.015245238921837424,dqy:-5744893281815766e-20,dqz:.004295825706696232,dqw:.9998745547674137},{dt:52.60000002384186,dqx:.011170635870335469,dqy:.0019092410955155736,dqz:.0026431559124459256,dqw:.9999322904174632},{dt:56.19999998807907,dqx:-.09777009739616821,dqy:.3672263601260615,dqz:-.07625736894538475,dqw:.9218300397390158},{dt:58.10000002384186,dqx:-.028565701739068878,dqy:-.01592903819349803,dqz:.005878277829528766,dqw:.9994477036224275},{dt:54.09999996423721,dqx:-.004608373271451955,dqy:-.014291738614630805,dqz:.004471885127825148,dqw:.9998772481392733},{dt:113.5,dqx:-.00422042693800176,dqy:-.030371849597224568,dqz:.01862991850228589,dqw:.9993561251551434},{dt:55.700000047683716,dqx:-.04387084111575832,dqy:-.04472734455135935,dqz:.015018306054619374,dqw:.9979224741594054},{dt:60.09999996423721,dqx:-.03936012565456074,dqy:.010834483310615227,dqz:-.016472190093071548,dqw:.9990305608105223},{dt:52.69999998807907,dqx:.0031933865061996598,dqy:.010692651211837795,dqz:-.013775069378641813,dqw:.9998428461294794},{dt:55.80000001192093,dqx:.04593479937918585,dqy:-.17972607147277075,dqz:.05331439738261163,dqw:.9811962639914031},{dt:113.10000002384186,dqx:.0037874885999300183,dqy:-.014370086794133138,dqz:.005764381576337314,dqw:.999872955650205},{dt:55.69999998807907,dqx:.005215563663252644,dqy:-.01378231792066778,dqz:.006723727407346871,dqw:.9998688099436644},{dt:112.60000002384186,dqx:.011073303706199971,dqy:-.012607068906771712,dqz:.00814283197310458,dqw:.9998260538944101},{dt:2.899999976158142,dqx:-.1739132073974886,dqy:.07449478445634339,dqz:-.0737094900395257,dqw:.9791688487996512},{dt:109.80000001192093,dqx:-.020185170846446415,dqy:.021035688531583913,dqz:-.01808330676550267,dqw:.9994113530985761},{dt:116.59999996423721,dqx:-.017296481125776884,dqy:.007330550048991802,dqz:.0025716801142728896,dqw:.9998202244593948},{dt:.7000000476837158,dqx:-.007767046697814363,dqy:.004543933558545099,dqz:-.002558938614861478,dqw:.9999562377857218},{dt:51.19999998807907,dqx:-.004499914122131328,dqy:.0002966891288962714,dqz:.003357974349389614,dqw:.9999841932534348},{dt:113.59999996423721,dqx:-.01770540627363404,dqy:-.0009187314887449116,dqz:.0037464554590340843,dqw:.9998358058164503},{dt:54.700000047683716,dqx:-.01540658057725738,dqy:-.0014254578228896364,dqz:.0022754738004873154,dqw:.9998777063040732},{dt:56.69999998807907,dqx:-.2737957695891101,dqy:.25020860273571965,dqz:-.082473007542732,dqw:.9250025592932174},{dt:56.09999996423721,dqx:-.025940632565636987,dqy:.019733838489021546,dqz:-.012276535861656945,dqw:.9993932888847219},{dt:57.90000003576279,dqx:-.01613322167868399,dqy:.017721598041084814,dqz:-.011483803558879457,dqw:.9996468308242453},{dt:112.39999997615814,dqx:-.006965486924147545,dqy:.0070760863414744204,dqz:-.0034940601005609695,dqw:.9999445997344109},{dt:55.40000003576279,dqx:.07097295281345849,dqy:-.05364967703326369,dqz:-.019051654323247957,dqw:.9958521911361711},{dt:57,dqx:.0014401952857375443,dqy:-.00828163913224585,dqz:-.01043483045291227,dqw:.9999102232721901},{dt:54.69999998807907,dqx:-.0039599624965974654,dqy:-.0015158277815692667,dqz:-.007432901843083872,dqw:.9999633857963767},{dt:56.80000001192093,dqx:-.002227431896234995,dqy:-.00012567040465568356,dqz:-.004970996824722795,dqw:.9999851558621584},{dt:112.29999995231628,dqx:.0022910185040268356,dqy:-.0019551546004462758,dqz:-.0007555161154801371,dqw:.9999951788884291},{dt:60.30000001192093,dqx:.003127462388939676,dqy:-.003245991375835507,dqz:.0027057429357404406,dqw:.9999861806415922},{dt:52,dqx:.0007530081201469641,dqy:-.0015517711626082918,dqz:.0016261016047744714,dqw:.9999971903853535},{dt:56.5,dqx:.03711100350438124,dqy:-.09126484053234944,dqz:.0711192871607822,dqw:.9925903229909331},{dt:58.30000001192093,dqx:.022492033187231864,dqy:-.0203779166327114,dqz:.025392406438272536,dqw:.9992167305705447},{dt:110.5,dqx:-.00325374467103019,dqy:-.01102992430924718,dqz:.029616808443768836,dqw:.9994951718607514},{dt:56.5,dqx:.08445506806019545,dqy:-.024549028699907702,dqz:.020066847540408994,dqw:.9959226919287604},{dt:116.60000002384186,dqx:-.011186955353145862,dqy:.004128512562400863,dqz:.0010624276787834092,dqw:.9999283367628781},{dt:.2999999523162842,dqx:-.00530221768565934,dqy:.0005339427701476634,dqz:.0027283072844061507,dqw:.9999820787054604},{dt:107.90000003576279,dqx:-.005704398652797343,dqy:-.0014672401896018566,dqz:.002516254221002795,dqw:.9999794875430851},{dt:58.59999996423721,dqx:-.004189300536323699,dqy:-.0044962213990345085,dqz:.0004086453666836687,dqw:.999981033201686},{dt:53.5,dqx:-.00977709938610313,dqy:-.005739095537139319,dqz:-.004413402316667939,dqw:.9999259937565387},{dt:55.90000003576279,dqx:-.009382701221189857,dqy:-.009156854238987017,dqz:-.010824408320658133,dqw:.999855464116063},{dt:56.89999997615814,dqx:.045281538741148306,dqy:-.5919492821373673,dqz:-.3386607235004653,dqw:.7299688650787998},{dt:116.69999998807907,dqx:.011713232313627725,dqy:-.02577277684917323,dqz:.01768547459650073,dqw:.9994427388052536},{dt:51.80000001192093,dqx:.008126540837620877,dqy:-.01275840716064025,dqz:.00477903173002607,dqw:.9998741637008435},{dt:56.30000001192093,dqx:.011928879861809988,dqy:-.000606255743453743,dqz:.00186080401696051,dqw:.9999269331744329},{dt:58.80000001192093,dqx:.09093065683071477,dqy:-.02700878020138764,dqz:.030608619821214295,dqw:.9950202278511772},{dt:110.19999998807907,dqx:-.003930649992065577,dqy:.001475688940194675,dqz:.010989658825753645,dqw:.9999307974713476},{dt:56.30000001192093,dqx:-.0035384696668153692,dqy:.001028577032242961,dqz:.008485315993532222,dqw:.9999572094215811},{dt:57.19999998807907,dqx:-.003839158657236913,dqy:-.002011178457310747,dqz:.0029705690019493636,dqw:.9999861957756329},{dt:59.10000002384186,dqx:-.0022406237579165322,dqy:.002060219378042183,dqz:-.006665662735684169,dqw:.9999731516603754},{dt:52.299999952316284,dqx:.02088852170793734,dqy:.005482819432658381,dqz:-.004391096450664267,dqw:.9997571338199527},{dt:116,dqx:.0028260076061890627,dqy:.0026857642899666967,dqz:.0011689401956937184,dqw:.9999917169306989},{dt:52.40000003576279,dqx:-.370297130930462,dqy:.23658046002179234,dqz:-.1395355221549106,dqw:.8873779120631196},{dt:56.59999996423721,dqx:.008665308312645267,dqy:-.007332531887798643,dqz:-.017675870164218926,dqw:.9997793306634712},{dt:58.30000001192093,dqx:.009981795978423913,dqy:-.0002452372730875063,dqz:.005274317072915244,dqw:.9999362405609364},{dt:114.80000001192093,dqx:.0054420900573913245,dqy:.0015238698629322922,dqz:.004032412426188903,dqw:.9999759002728381},{dt:51.80000001192093,dqx:.060445846409531295,dqy:-.00833283633553511,dqz:.005730557318815277,dqw:.9981202453628804},{dt:56.09999996423721,dqx:.009479837390018286,dqy:-.0025728881869234166,dqz:-.010170606453364484,dqw:.9999000308499881},{dt:112.70000004768372,dqx:.0027978023808583607,dqy:.004537450949758326,dqz:-.017959269609775924,dqw:.999824508839326},{dt:1.0999999642372131,dqx:-.002417609301100937,dqy:.007878142506653807,dqz:-.015660191453955558,dqw:.9998434119598616},{dt:112.5,dqx:.0007037917746481048,dqy:.0073873109029008455,dqz:-.007879498502734339,dqw:.9999414211933151},{dt:54.90000003576279,dqx:.005656197911458216,dqy:.0022728536930479715,dqz:29530269742422677e-21,dqw:.9999814201720145},{dt:61,dqx:.003110383511304493,dqy:-.0007991173499511395,dqz:.0028814122790433716,dqw:.9999906921512577},{dt:51.799999952316284,dqx:-.17896201708387052,dqy:-.2367431580197074,dqz:.054959393136513345,dqw:.9533649556587416},{dt:56.10000002384186,dqx:.0024237464328983674,dqy:-.024667483181358862,dqz:.017337062302103044,dqw:.9995424288130341},{dt:60.30000001192093,dqx:-.010502767653894511,dqy:-.03195533947121021,dqz:.011672009777732691,dqw:.9993659551628904},{dt:108.59999996423721,dqx:-.010851588188164292,dqy:-.014302516808578691,dqz:.002677283578207061,dqw:.9998352430272581},{dt:57.700000047683716,dqx:-.09916179383714774,dqy:-.21359512778589607,dqz:.14061083685640952,dqw:.9616510035286533},{dt:55.39999997615814,dqx:.0019117859560450062,dqy:-.007670682920689897,dqz:.010549050944324824,dqw:.9999131078359573},{dt:61.10000002384186,dqx:.010198564155029316,dqy:2140239834558244e-20,dqz:.0085321800143646,dqw:.9999115914596228},{dt:51.19999998807907,dqx:.01601227872269373,dqy:.007609510946749443,dqz:.008019530187363906,dqw:.9998106767827758},{dt:115.5,dqx:.017433761955661972,dqy:.008091748504569896,dqz:.005188418314319071,dqw:.999801814294017},{dt:52.59999996423721,dqx:.011815066692623721,dqy:.004481833131868007,dqz:.003309591188690033,dqw:.9999146783486033},{dt:56.40000003576279,dqx:.0033934751230429855,dqy:.0021597492831036957,dqz:.0011780907027283197,dqw:.9999912159173795},{dt:58.19999998807907,dqx:.5215340087215725,dqy:.35891174446681706,dqz:.2097174626767226,dqw:.7451196033383033},{dt:167.69999998807907,dqx:.013955821556426828,dqy:.005519110400050653,dqz:.007734877821674396,dqw:.9998574629066691},{dt:1.5,dqx:.0077472455285822195,dqy:.003106864418203903,dqz:.002308898746302579,dqw:.9999624975801775},{dt:54.5,dqx:.006336821681346472,dqy:-.0014955419279692461,dqz:.003616708204516761,dqw:.999972263348881},{dt:59.40000003576279,dqx:.010290261194403627,dqy:-.0005234416951610532,dqz:.008609863651264399,dqw:.9999098493270526},{dt:108.59999996423721,dqx:.021696440744580325,dqy:.0021720918348385743,dqz:.012574529484563557,dqw:.9996831636495234},{dt:58.10000002384186,dqx:.013352740046081418,dqy:.0005300674091489321,dqz:.006160461577489923,dqw:.9998917301763006},{dt:54.59999996423721,dqx:.08751657699620949,dqy:.05018593028884749,dqz:.0064844742351693185,dqw:.9948769636220364},{dt:56.700000047683716,dqx:.0002456267468499418,dqy:.005305976623926401,dqz:-.0029309339754262087,dqw:.9999815977834787},{dt:56.69999998807907,dqx:-.0062303564240759335,dqy:.006178009723826761,dqz:-.005111690673903019,dqw:.9999484414074234},{dt:115.59999996423721,dqx:-.2534828520992197,dqy:-.11151994940695692,dqz:-.01955596577440652,dqw:.960691057925775},{dt:52.10000002384186,dqx:-.062110477408857834,dqy:-.01972685079618508,dqz:-.01971324458700452,dqw:.9976795717772122},{dt:114.80000001192093,dqx:-.03331375258379918,dqy:-.005694284083252343,dqz:-.016843621083358545,dqw:.9992867763792159},{dt:.3999999761581421,dqx:-.002206046610699036,dqy:.009308423606628091,dqz:-.008490820658833165,dqw:.9999181929402278},{dt:110,dqx:-.0024660886200572607,dqy:.004499006779057846,dqz:-.0015220792091411028,dqw:.9999856802073723},{dt:56.30000001192093,dqx:-.007382338665504945,dqy:.0016999950197214564,dqz:-.006676683624206481,dqw:.9999490151945464},{dt:56,dqx:.001001785714252551,dqy:-.0015999969151120896,dqz:-.0021078354274093047,dqw:.9999959967245196},{dt:59.80000001192093,dqx:.039367402052568,dqy:.015727364566289703,dqz:.020413354328303407,dqw:.998892462993138},{dt:54.5,dqx:.04858296198648321,dqy:-.02689169559905924,dqz:.023775585943888844,dqw:.9981739598013225},{dt:113.39999997615814,dqx:.051276578371601295,dqy:-.03496732304355127,dqz:.02423490324050634,dqw:.9977778652057742},{dt:53.69999998807907,dqx:.027965347919256894,dqy:-.021079085061984693,dqz:.010610245346874575,dqw:.99933029283735},{dt:56.200000047683716,dqx:.12002953290272764,dqy:-.10025711971778287,dqz:.008707013308663913,dqw:.9876566250961362},{dt:57.299999952316284,dqx:-.007572544322227398,dqy:.00387008412707629,dqz:-.004265649035468916,dqw:.9999547406056153},{dt:170.10000002384186,dqx:-.01396347896035427,dqy:.0017870064544448505,dqz:-.006494722867573993,dqw:.9998798159969673},{dt:1,dqx:-.022912941713602503,dqy:.002199843257755185,dqz:-.01066817541015394,dqw:.9996781221098562},{dt:52.60000002384186,dqx:-.030384407774945416,dqy:.0020671677244103737,dqz:-.012960475236421604,dqw:.9994521202455932},{dt:58.89999997615814,dqx:-.030869911764664804,dqy:-.002841092123168243,dqz:-.013372960473992598,dqw:.9994299078331361},{dt:110.69999998807907,dqx:-.014289998896593603,dqy:-.0046540355523554955,dqz:-.004652115869641982,dqw:.9998762391929056},{dt:58.10000002384186,dqx:-.5879800643686867,dqy:-.1096139475296839,dqz:-.30052560929992733,dqw:.7429324226111435},{dt:55.5,dqx:.008682207396249864,dqy:.0340515134787292,dqz:-.02554918088809209,dqw:.9990557307079941},{dt:58.5,dqx:.02037450957537916,dqy:.040797804837293616,dqz:-.029386835737196276,dqw:.9985273318068845},{dt:52.69999998807907,dqx:.01177327163001643,dqy:.019958482090926932,dqz:-.020210943201744554,dqw:.9995271716379939},{dt:56.19999998807907,dqx:.18671225375027295,dqy:.23773459473974,dqz:-.2182669445796694,dqw:.92789026165128},{dt:112,dqx:.0015325752270300003,dqy:-.0009468965239873839,dqz:-.005435681057751857,dqw:.9999836038513754},{dt:56.80000001192093,dqx:.002308543059681839,dqy:-.0032313738601128517,dqz:-.0026942282433198017,dqw:.9999884849267466},{dt:58.30000001192093,dqx:.004708745337587306,dqy:.004576692527852033,dqz:-.006777997423001114,dqw:.9999554691853957},{dt:54.09999996423721,dqx:.0035292278465949845,dqy:.01629804450161687,dqz:-.010699418563067942,dqw:.9998037011026928},{dt:62.10000002384186,dqx:-.0004631141417149043,dqy:.021386143077012865,dqz:-.014812749711703016,dqw:.9996614431173987},{dt:106.5,dqx:-.0034944444422841114,dqy:.011063325388782186,dqz:-.008281559423513107,dqw:.999898398570023},{dt:59.80000001192093,dqx:.0076979916903724965,dqy:-.10080065145465783,dqz:.08502418545912137,dqw:.9912370339516497},{dt:52.80000001192093,dqx:.021872201473452715,dqy:.0034389547641060503,dqz:.028677211549543724,dqw:.9993434834583039},{dt:56.09999996423721,dqx:-.018956650515163917,dqy:.011532185598542188,dqz:.04410330186342844,dqw:.9987805328806273},{dt:112.40000003576279,dqx:-.0067311922300570814,dqy:-.0017836659381486042,dqz:-.017691376101948736,dqw:.9998192460633083},{dt:57,dqx:.0011986305053393598,dqy:.03562536162479418,dqz:-.0059576659677309934,dqw:.9993467381796125},{dt:56.299999952316284,dqx:.018154527770109813,dqy:-.010623665972428475,dqz:.00173899743272396,dqw:.9997772385540087},{dt:55.5,dqx:.026357639296583066,dqy:-.015327057042800574,dqz:-.0042554125618047,dqw:.9995260114859676},{dt:56.60000002384186,dqx:.027319301253830863,dqy:-.009880016710662298,dqz:.002613720412502074,dqw:.9995745142381357},{dt:55.39999997615814,dqx:.0029697363859182146,dqy:.0009344118204832608,dqz:.03834049529812292,dqw:.9992598830938039},{dt:168.9000000357628,dqx:-.009684964837076399,dqy:-.003479084625745754,dqz:.0008358970992840137,dqw:.9999466979306002},{dt:57.09999996423721,dqx:-.0018250058308149908,dqy:-.005602577507376305,dqz:-.007958506691149808,dqw:.9999509701231548},{dt:5.800000011920929,dqx:-.06588156779635526,dqy:-.05781333794880317,dqz:.023495096863022792,dqw:.9958740971645509},{dt:106.69999998807907,dqx:-.008828413540129046,dqy:-.0006831533929326228,dqz:-.004038227114279258,dqw:.9999526414473736},{dt:2.400000035762787,dqx:.02046079154127265,dqy:-.008443039361792137,dqz:.003050187594150884,dqw:.9997503525638187},{dt:109.69999998807907,dqx:.01734731438466404,dqy:.008802625737522662,dqz:-.005851616151457448,dqw:.9997936502359779},{dt:56.60000002384186,dqx:.2593300453778342,dqy:.10180295773245285,dqz:-.0967071225081092,dqw:.9555269843481433},{dt:58.5,dqx:-.006423979397003593,dqy:-.005483392780178009,dqz:.00782555054898193,dqw:.999933710628325},{dt:53.299999952316284,dqx:-.04920386423994577,dqy:.00037868098978027787,dqz:.0034050868372804965,dqw:.9987828801737623},{dt:65.70000004768372,dqx:-.04961115284076498,dqy:-.007957821476806015,dqz:-.0028858418165690347,dqw:.998732736275408},{dt:101.5,dqx:-.02188992041878557,dqy:-.002839348599855518,dqz:-.0015217983331195784,dqw:.9997551968424176},{dt:61.59999996423721,dqx:.0032241904653224907,dqy:.001670745040760091,dqz:.015912826403185032,dqw:.9998667887087329},{dt:52.40000003576279,dqx:-.009139268780064547,dqy:.0011593362845022104,dqz:.013039397244989481,dqw:.9998725437899734},{dt:56.5,dqx:-.07265861336076948,dqy:-.03807103415951596,dqz:.021925630146701625,dqw:.9963887740260752},{dt:112.69999998807907,dqx:-.00843383141516918,dqy:-.008033439191724445,dqz:.007414291678649057,dqw:.9999046767673994},{dt:56.30000001192093,dqx:-.007329996090495727,dqy:-.007542762379996182,dqz:.009915451743535933,dqw:.9998955253973856},{dt:56.299999952316284,dqx:-.0029092765842035073,dqy:-.008153524771069953,dqz:.009855450934801419,dqw:.9999139594137267},{dt:56.10000002384186,dqx:.002675546161087325,dqy:-.009511041541332754,dqz:.010622321000741786,dqw:.9998947683822014},{dt:60,dqx:.005914444503230892,dqy:-.01821032626004704,dqz:.019515175354623604,dqw:.999626210788112},{dt:109,dqx:.002172371163946238,dqy:-.01021772546627403,dqz:.013246037526647395,dqw:.9998577005652678},{dt:58.80000001192093,dqx:.25332782102178075,dqy:-.2657226999887175,dqz:.21267852156657485,dqw:.9055298494645656},{dt:53.39999997615814,dqx:-.003586668365487433,dqy:.010477724492039209,dqz:-.021588970846087928,dqw:.9997055913804385},{dt:56.19999998807907,dqx:-.008449038814470136,dqy:.005816775192138135,dqz:-.006234109155031628,dqw:.9999279547810028},{dt:57.40000003576279,dqx:-.00039075608113864346,dqy:.007887120286855342,dqz:-.005732410907339655,dqw:.9999523889208204},{dt:115.5,dqx:-.0008762157235354118,dqy:.0050915771433585055,dqz:-.0039456905921087665,dqw:.999978869583728},{dt:53.69999998807907,dqx:-.001969088451864387,dqy:.0020092263506584773,dqz:-.002958378864172412,dqw:.9999916668125972},{dt:54.60000002384186,dqx:-.0014683504244588363,dqy:-.0003182180698695358,dqz:-.0008863897086055644,dqw:.9999984784976303},{dt:60.89999997615814,dqx:-.30137646939500196,dqy:.24563357212079212,dqz:-.18414618437958102,dqw:.9027328257688565},{dt:50.5,dqx:-.005631644189808729,dqy:.0169919531539231,dqz:-.010697920052346474,dqw:.9997825326631227},{dt:115.19999998807907,dqx:-.007492134207524356,dqy:.01971214638191854,dqz:-.005979329463145541,dqw:.999759744553263},{dt:55.10000002384186,dqx:-.052165245290485496,dqy:.1850411623519656,dqz:-.01927776316113254,dqw:.9811559118033794},{dt:61.19999998807907,dqx:.004439462576671882,dqy:.03190055121925367,dqz:-.018719431502324857,dqw:.9993058735383116},{dt:51.30000001192093,dqx:.010870418554669456,dqy:.026241218198211846,dqz:-.018476863848358824,dqw:.9994257541059512},{dt:115.69999998807907,dqx:.0037929785007702055,dqy:.029420898657219363,dqz:.0030603744269441097,dqw:.9995552301622261},{dt:53.80000001192093,dqx:.006433572172625662,dqy:.04312803395652143,dqz:.032438342121703746,dqw:.9985220757682526},{dt:55.39999997615814,dqx:.006982970186530834,dqy:.06164440540970417,dqz:.06714143546012105,dqw:.9958128504158866},{dt:58.10000002384186,dqx:-.01581382349052855,dqy:.051618312059380056,dqz:.10314711708395735,dqw:.9931999522170849},{dt:110.5,dqx:-.058351435726532924,dqy:.08993216775637775,dqz:-.03445322706672081,dqw:.9936399198381575},{dt:56.30000001192093,dqx:.04571230397228821,dqy:.03243615832495292,dqz:.04411709146929273,dqw:.9974527372958346},{dt:57.59999996423721,dqx:.02908462611528344,dqy:.029453617447369768,dqz:.03993968139740536,dqw:.998344324766196},{dt:57.90000003576279,dqx:.0005823812282689626,dqy:.009026815895323587,dqz:-.005987914141672282,dqw:.9999411594244577},{dt:53.09999996423721,dqx:-.01566369587094592,dqy:.003913502305954608,dqz:-.037885702648819436,dqw:.9991516434786907},{dt:112.5,dqx:.010689781190226334,dqy:.00239056856794459,dqz:-.0012490738184772476,dqw:.9999392249405075},{dt:55.10000002384186,dqx:.006610042592985709,dqy:-.0023602774255204184,dqz:.0013478057214035694,dqw:.9999744595974094},{dt:57.59999996423721,dqx:.07998870701940189,dqy:.06534541702577254,dqz:-.0008538152797458731,dqw:.994651222400375},{dt:58.5,dqx:.010244286773332794,dqy:-.005338859764990378,dqz:.005161120321639234,dqw:.999919953797273},{dt:114,dqx:-.01267165635809933,dqy:-.007931025975459,dqz:-.009825168829941007,dqw:.9998399842022632},{dt:52.700000047683716,dqx:-.0052173626372866485,dqy:-.005785878213075274,dqz:-.007701667930269489,dqw:.9999399917252566},{dt:56.299999952316284,dqx:.007471549256923506,dqy:.00010681299370712827,dqz:.02995867893666771,dqw:.9995232073839283},{dt:58.60000002384186,dqx:.004260325896195297,dqy:.0009413852355179553,dqz:.02735152236791566,dqw:.999616355228972},{dt:110.80000001192093,dqx:.0027791549270350414,dqy:.0008164192089807343,dqz:.0051287829918728045,dqw:.9999826525208271},{dt:5.199999988079071,dqx:-.1398551617431132,dqy:-.05334783732264178,dqz:-.0983431706451427,dqw:.9838308608568167},{dt:106.30000001192093,dqx:-.002363725642744209,dqy:.0010703085803036583,dqz:.0022114382275091743,dqw:.9999941883739096},{dt:59.69999998807907,dqx:-.004692663989435341,dqy:-.00028068564467464974,dqz:.0006101283954636702,dqw:.9999887638686707},{dt:55,dqx:.12680555065615726,dqy:.05868011715217614,dqz:.024919990643841074,dqw:.9898767550761594},{dt:54.30000001192093,dqx:.001420842946799782,dqy:.0008506671523286213,dqz:.005839617800820263,dqw:.9999815780476444},{dt:112.09999996423721,dqx:.0029436577608870137,dqy:.002151024035926208,dqz:.003060656246717322,dqw:.9999886701147783},{dt:56.80000001192093,dqx:.0033366170748865883,dqy:-.0021165915668081847,dqz:.006558026211792516,dqw:.9999706892298594},{dt:56.5,dqx:.007496279825093497,dqy:-.005359748669605757,dqz:.0027999857060324734,dqw:.999953618405888},{dt:55.5,dqx:-.003145207501473157,dqy:-.010272733416345686,dqz:-.004248269093502129,dqw:.9999332631869179},{dt:113.5,dqx:-.022775217243343557,dqy:-.011233626795334545,dqz:-.02618289287701104,dqw:.9993345542055135},{dt:55.40000003576279,dqx:-.08686571245983948,dqy:-.022706304959318163,dqz:-.013660636461828503,dqw:.9958675407529842},{dt:112.5,dqx:8857310221036495e-20,dqy:-.004937862428393364,dqz:.002457245533287994,dqw:.9999847856911788},{dt:2.799999952316284,dqx:.0023397876498326177,dqy:-.005257576183218815,dqz:.002128989760232805,dqw:.9999811751673288},{dt:110.60000002384186,dqx:.0011714847427545163,dqy:-3862377425162267e-20,dqz:.0024578581690762463,dqw:.9999962925255884},{dt:55,dqx:.3830315771305071,dqy:.12211137764324208,dqz:-.022925127386175692,dqw:.9153414996083776},{dt:56.19999998807907,dqx:.003792629405044683,dqy:-.0029039499268128655,dqz:-.0038309934830653147,dqw:.9999812530872524},{dt:56.19999998807907,dqx:-.009748620390500293,dqy:.0034234002957801712,dqz:-.012984834808611519,dqw:.9998623099186658},{dt:116.80000001192093,dqx:-.007061703242911195,dqy:-.0005241029250880186,dqz:-.0013399797701169197,dqw:.9999740307216227},{dt:54.10000002384186,dqx:-.007819798895463526,dqy:.0012975905524728049,dqz:.0008419954283623021,dqw:.9999682285191324},{dt:55.69999998807907,dqx:-.001597149306823296,dqy:-.0005036749725486483,dqz:.006695420311835953,dqw:.9999761831026085},{dt:55.60000002384186,dqx:.0010757142076155283,dqy:.00044685774396570344,dqz:.003368030195372629,dqw:.9999936497446887},{dt:55.299999952316284,dqx:-.23339330093699678,dqy:-.07293976701296252,dqz:.03240239894741506,dqw:.9691013579643153},{dt:56.40000003576279,dqx:.009864364640226756,dqy:.012059890259445899,dqz:-.006307510271368071,dqw:.9998587243562721},{dt:112.69999998807907,dqx:.006654450359732665,dqy:.01137841951526769,dqz:-.016296363167069904,dqw:.9997803150729021},{dt:61.19999998807907,dqx:.0040749616789472615,dqy:.005141228962197764,dqz:-.009710288583762123,dqw:.9999313340163379},{dt:51.5,dqx:-.0001702010707577352,dqy:.003780813318099846,dqz:.002228372260613915,dqw:.9999903553731494},{dt:56.19999998807907,dqx:.009594585048743408,dqy:.007759107434033463,dqz:.0077708692741003515,dqw:.9998936712372445},{dt:112.80000001192093,dqx:.008053813457030575,dqy:.003549048543955269,dqz:.0004729044451581149,dqw:.9999611575979427},{dt:55.90000003576279,dqx:.053599183391366205,dqy:.016469427366509415,dqz:.05517054620575568,dqw:.9969012470316991},{dt:57.69999998807907,dqx:-.004813361276364908,dqy:.007175616339782601,dqz:-.006784900597977241,dqw:.9999396517826679},{dt:54.59999996423721,dqx:.02061018070201154,dqy:.006500548327676464,dqz:.003065511380200031,dqw:.9997617546009888},{dt:61.30000001192093,dqx:.04496845705805444,dqy:.021164451694059797,dqz:.00488966508674251,dqw:.9987522190361565},{dt:51.69999998807907,dqx:-.013047899657914683,dqy:-.006557900329875993,dqz:.004875068942261203,dqw:.9998814829571493},{dt:168.80000001192093,dqx:.009820570797358819,dqy:.0034279145102481118,dqz:-.003987498005791047,dqw:.9999379509004437},{dt:1.100000023841858,dqx:.011348529828384859,dqy:.003324233255079606,dqz:-.004220614273907312,dqw:.9999211702725126},{dt:54.69999998807907,dqx:.008127216980264685,dqy:.0015099859214837974,dqz:-.0013192923200628327,dqw:.9999649632634369},{dt:56.5,dqx:.000631353862711673,dqy:.0003274625698157091,dqz:-.0014268795688322173,dqw:.9999987290868231},{dt:57.5,dqx:-.004433030056274904,dqy:-.00019094726334241419,dqz:-.0019498456924114432,dqw:.9999882548737453},{dt:111.10000002384186,dqx:-.2141941791925046,dqy:-.06796781317091316,dqz:-.03018957907573145,dqw:.9739557583833277},{dt:56.39999997615814,dqx:.007262813699934764,dqy:.004719522241792007,dqz:-.00531581852228326,dqw:.9999483585267828},{dt:58.30000001192093,dqx:.007571804609859622,dqy:.006099640831835451,dqz:-.004152375673068458,dqw:.9999441084045361},{dt:53.59999996423721,dqx:.0054057407885824684,dqy:.006034421373405652,dqz:-.00396591467383428,dqw:.9999593167954458},{dt:113.90000003576279,dqx:-.00015734183571909242,dqy:.003277209788760782,dqz:.0003626564920772299,dqw:.9999945517950665},{dt:55.19999998807907,dqx:-.015133430179233345,dqy:-.0026398257159930827,dqz:.004013883311602703,dqw:.9998739417306366},{dt:112.39999997615814,dqx:-.014366811394007103,dqy:-.003427834378699146,dqz:.0022125119158504674,dqw:.9998884685167959},{dt:1.5,dqx:.09368016732851586,dqy:.011396539765120534,dqz:.0036518706593555612,dqw:.995530415894648},{dt:114,dqx:-.015153481570531431,dqy:-.007044756395038737,dqz:-.00773783596508904,dqw:.9998304202704593},{dt:53.5,dqx:-.02110908265495303,dqy:-.0107496553183343,dqz:-.012905201557735752,dqw:.9996360874402032},{dt:56.10000002384186,dqx:-.030823489005348453,dqy:.03366794850349285,dqz:.023256494848263982,dqw:.9986868964878212},{dt:57.5,dqx:-.011297337191044804,dqy:-.010778835384063434,dqz:-.015362463486275298,dqw:.9997600620127749},{dt:55.30000001192093,dqx:.018114022593468667,dqy:-.00972624755690403,dqz:.01007067114006642,dqw:.99973789758953},{dt:59.09999996423721,dqx:.018207057151948328,dqy:.005997969948778742,dqz:-.011758830029428537,dqw:.9997470966913071},{dt:109.5,dqx:.024233202067616203,dqy:.005469804854975169,dqz:-.0022383369966293143,dqw:.9996888630968576},{dt:58.5,dqx:.01861864749711486,dqy:.003998616450489684,dqz:-.003930215495013486,dqw:.9998109373466679},{dt:53.700000047683716,dqx:.016137190694049282,dqy:.0011302518618426793,dqz:-.0010670137390822454,dqw:.999868578908705},{dt:62.19999998807907,dqx:-.1457702979841292,dqy:-.04306022321507112,dqz:.021876608233237806,dqw:.9881387814545565},{dt:108.09999996423721,dqx:.007966232972467294,dqy:-.009607159656284475,dqz:-.005184492986948544,dqw:.9999086771540864},{dt:59.200000047683716,dqx:.005661508453062391,dqy:-.0003789639201698114,dqz:-.03231854988262615,dqw:.9994615125365595},{dt:51.799999952316284,dqx:.0023534661693136367,dqy:.0066152657887972866,dqz:.00434275028430775,dqw:.9999659194070072},{dt:58,dqx:.23429441709055546,dqy:.039217327871569466,dqz:-.02083821980103149,dqw:.9711508100755177},{dt:58.60000002384186,dqx:.03689190620495693,dqy:-.009502043523059112,dqz:.027206441551519002,dqw:.9989036529933976},{dt:52.80000001192093,dqx:.03251218176640182,dqy:-.016640612520951906,dqz:.027959039097560274,dqw:.9989416099975297},{dt:115.5,dqx:.04044341452015012,dqy:.000270229217370313,dqz:-.0008494272811302717,dqw:.999181432809585},{dt:53.09999996423721,dqx:.00982596476334707,dqy:.03581414185806214,dqz:-.025790445696626467,dqw:.9989773023298427},{dt:60.60000002384186,dqx:-.027767152180109448,dqy:.016114645320858892,dqz:.014999527985060719,dqw:.9993719615969896},{dt:51.5,dqx:.0013151865172284513,dqy:.0031490201411726593,dqz:.0007930587012234258,dqw:.9999938624884013},{dt:56.10000002384186,dqx:-.12780128312656142,dqy:-.045952973938465216,dqz:.024319527077835676,dqw:.9904361245532828},{dt:112.59999996423721,dqx:.007542518013686439,dqy:.0013412032883220182,dqz:.006308411925841034,dqw:.9999507565549048},{dt:113.40000003576279,dqx:.01045916297731892,dqy:.0016524283989373667,dqz:.00509144989514271,dqw:.9999309738817803},{dt:1.2999999523162842,dqx:.0022377810147481284,dqy:.0016264774315635638,dqz:-.0012621739824773934,dqw:.9999953769013797},{dt:55,dqx:-.0526114429992998,dqy:-.015379176144827963,dqz:.027030184409923066,dqw:.9981306959198296},{dt:165.80000001192093,dqx:-.045273591964863434,dqy:.0007625855595281839,dqz:-.025547561645149958,dqw:.9986476067301474},{dt:.19999998807907104,dqx:.006018858121261507,dqy:-.007961874300409955,dqz:-.0016828511404769642,dqw:.9999487736462201},{dt:59,dqx:.02171151070287447,dqy:.010435878135857779,dqz:.001985656835554608,dqw:.9997078372792043},{dt:53.10000002384186,dqx:.022735041582980557,dqy:.00919829326876384,dqz:-.018233438611976644,dqw:.9995329164172361},{dt:56.19999998807907,dqx:-.0006381989454427594,dqy:.0013455566788101725,dqz:-.006925710850822723,dqw:.9999749080394671},{dt:113,dqx:-.01513939804246521,dqy:.00370228769911804,dqz:-.0031976985354618993,dqw:.9998734251978003},{dt:57,dqx:-.11169193126033716,dqy:.13706219655195195,dqz:-.1029116620492332,dqw:.9788503749715554},{dt:55.80000001192093,dqx:.004748961388005507,dqy:-.006303851223934593,dqz:-.006394092100141274,dqw:.9999484108751293},{dt:55.5,dqx:.008247610792142066,dqy:-.01040654877758631,dqz:-.006729372976355785,dqw:.999889191959842},{dt:112.60000002384186,dqx:.006112139359839699,dqy:-.0066834667278514205,dqz:5130456503738001e-20,dqw:.999958984355251},{dt:56.09999996423721,dqx:-.041201798387117586,dqy:-.0627045699179081,dqz:.019698425166614728,dqw:.9969867204567137},{dt:59,dqx:-.013821404710045202,dqy:-.011297042506770105,dqz:.01284765659989745,dqw:.9997581124063625},{dt:53.60000002384186,dqx:-.015654343462244223,dqy:-.014837990748093263,dqz:.018724823990959247,dqw:.9995919950298889},{dt:56.80000001192093,dqx:-.021949406569167457,dqy:-.016245977483290777,dqz:.012254866382905377,dqw:.9995519546360816},{dt:172.0999999642372,dqx:-.025678040840745833,dqy:-.016150353013364704,dqz:.012509723228724227,dqw:.9994615105850078},{dt:.5,dqx:-.030818241939871958,dqy:-.015600721300453091,dqz:.007823512352949806,dqw:.9993726262576462},{dt:51.80000001192093,dqx:-.013760426579401304,dqy:-.006438612093451868,dqz:.0017996339901241165,dqw:.9998829712782215},{dt:56.10000002384186,dqx:.10124169377093183,dqy:.05499369248950736,dqz:-.016339531254897684,dqw:.9932063395624964},{dt:59.299999952316284,dqx:.0054155181859466455,dqy:.0011943389578813746,dqz:.007018274232793109,dqw:.9999599939717713},{dt:109.5,dqx:.003633421644688415,dqy:.002837408127780036,dqz:.009188253171175942,dqw:.9999471602869475},{dt:56.90000003576279,dqx:-.0014102737784439465,dqy:-.002387343957974533,dqz:.0045095647054371815,dqw:.9999859876732592},{dt:55.80000001192093,dqx:-.004930902424352331,dqy:-.006879182996502142,dqz:.008498009938438689,dqw:.9999280708479327},{dt:56.09999996423721,dqx:-.001078426461489976,dqy:.0005160400974380946,dqz:.004352072682398567,dqw:.9999898150293092},{dt:112.69999998807907,dqx:.000765745841710512,dqy:.0042769660197974485,dqz:-.0042897031160124,dqw:.9999813596473424},{dt:58.200000047683716,dqx:-.7420939895709647,dqy:-.028964787686750856,dqz:-.12398050342998347,dqw:.6580929922785672},{dt:54.19999998807907,dqx:-.005520956359298758,dqy:-.0061058645977933035,dqz:.0043164953432076325,dqw:.9999568017301269},{dt:57.39999997615814,dqx:.010755843849248938,dqy:-.0029284627615412673,dqz:.016113353361922815,dqw:.9998080294598453},{dt:55.90000003576279,dqx:.01261723073301874,dqy:.0013678547206124742,dqz:.007782418988435222,dqw:.9998891780676405},{dt:55.39999997615814,dqx:-.5582226503934375,dqy:-.07955403472012632,dqz:-.1421030836042792,dqw:.8135510689425897},{dt:112.80000001192093,dqx:-.0026837122564980897,dqy:.0005118127941790701,dqz:.007912807778954402,dqw:.9999649609907544},{dt:56,dqx:.003115917720774075,dqy:-.0023485703126362133,dqz:.008132614120316718,dqw:.9999593171033581},{dt:58.5,dqx:.0015615758174826414,dqy:.0011604172421731535,dqz:-.010491236963392787,dqw:.9999430728095318},{dt:53.89999997615814,dqx:-.0011920224380706657,dqy:.006536300797782078,dqz:-.008643125304951985,dqw:.9999405743539719},{dt:114.40000003576279,dqx:.012288308150129105,dqy:.00919722977260683,dqz:.0031701481692746752,dqw:.999877171760563},{dt:54.5,dqx:.007281109888397313,dqy:-5106729773160165e-20,dqz:-.0004132047414070125,dqw:.9999734056927543},{dt:56.19999998807907,dqx:.682187596726171,dqy:.12908238277071302,dqz:.1860746144269732,dqw:.695222309191139},{dt:57.19999998807907,dqx:-.0006378824561437313,dqy:-.001085382003086638,dqz:-.004849539289300945,dqw:.9999874484315098},{dt:56.39999997615814,dqx:.002723688278459557,dqy:-.0012895088223086049,dqz:-.0018974030523634766,dqw:.9999936592553054},{dt:111.5,dqx:.002856499009899298,dqy:.00045872683864003894,dqz:-.0016822933596135328,dqw:.9999943999203925},{dt:56.200000047683716,dqx:.008551365900809316,dqy:-.0006390897052016842,dqz:.01136311191797511,dqw:.999898667562428},{dt:58,dqx:.003188622826632508,dqy:.00556791809469126,dqz:-.019097784683545616,dqw:.9997970321984063},{dt:55,dqx:-.009064699222621474,dqy:.002664592999936405,dqz:-.011057491563995884,dqw:.9998942259321534},{dt:55.69999998807907,dqx:-.9592549831282637,dqy:-.14804196795814345,dqz:-.24005105583281072,dqw:-.016998342867093355},{dt:112.5,dqx:-.004476244335799926,dqy:.002528517352326733,dqz:.0025849810903907505,dqw:.9999834437176484},{dt:60.30000001192093,dqx:-.0051298971337567474,dqy:.0063323748542335485,dqz:-.0014758220916243903,dqw:.9999657029784851},{dt:52.09999996423721,dqx:-.1601555819419321,dqy:-.047503685299172704,dqz:-.020652106185213306,dqw:.9857317484822898},{dt:56.30000001192093,dqx:.008512028445579021,dqy:-.0011841298120218197,dqz:.003113313552968358,dqw:.9999582243709236},{dt:112.60000002384186,dqx:.011913067572452966,dqy:.0032999336488858787,dqz:.003865127629771467,dqw:.9999161215058655},{dt:56.19999998807907,dqx:-.0006970250266402328,dqy:.004589077191424147,dqz:.002761879889971855,dqw:.9999854131666704},{dt:56.80000001192093,dqx:-.004863976903080567,dqy:.0026926309594624337,dqz:.0030168304535644758,dqw:.999979994900506},{dt:55.799999952316284,dqx:-.0015231303279912773,dqy:.0031107709587165685,dqz:.0002333694802739983,dqw:.9999939743402115},{dt:112.20000004768372,dqx:-.0014814179240610138,dqy:.00277213783958628,dqz:-.005866488560027208,dqw:.9999778522370921},{dt:56.39999997615814,dqx:-.01975597650372782,dqy:.05705014518095105,dqz:-.019868208355802157,dqw:.9979780742200435},{dt:58.39999997615814,dqx:.002774161156958465,dqy:-.002496059324496803,dqz:.006259182027770996,dqw:.9999734478265244},{dt:54,dqx:.0005216792290381879,dqy:-.002485750601412838,dqz:.0032188817870188458,dqw:.9999915938120535},{dt:113.40000003576279,dqx:-.0018948335746395081,dqy:.0003479873749163455,dqz:-.00018564412113529494,dqw:.9999981270216317},{dt:1,dqx:.34413091406637925,dqy:.07268103117411281,dqz:-.0011428421353849097,dqw:.9361036671240848},{dt:113.59999996423721,dqx:.20521036982373878,dqy:.01121441468258807,dqz:-.0030525942247384454,dqw:.978648876098384},{dt:53.5,dqx:.1707762167980856,dqy:.02115289695613001,dqz:.04143190253265907,dqw:.9842110729813096},{dt:56.200000047683716,dqx:-.024024296861203366,dqy:-.0018852822519281175,dqz:.014777657080788547,dqw:.9996003700091142},{dt:58.799999952316284,dqx:-.00984621386116785,dqy:-.0038768308743366334,dqz:.011418565172891214,dqw:.9998788119689128},{dt:167.80000001192093,dqx:-.008995826904829692,dqy:-.004663883221003703,dqz:.0055639079511183714,dqw:.9999331808775578},{dt:.5,dqx:-.004308527828121457,dqy:-.0019823418227874075,dqz:.0001425482757405564,dqw:.999988743231063},{dt:54,dqx:.1886017243202795,dqy:-.005544118671357394,dqz:.06627051287073497,dqw:.9797994036819092},{dt:56.5,dqx:-.006256430016309862,dqy:-.0074409446485595825,dqz:.01709074540034937,dqw:.9998066792374658},{dt:112.40000003576279,dqx:.0022707773092715145,dqy:-.003843069711425541,dqz:.004638282844793744,dqw:.9999792801442721},{dt:59.299999952316284,dqx:-7855682826268806e-21,dqy:-.002548863567998199,dqz:-.0010860709707729444,dqw:.9999961618339575},{dt:53.10000002384186,dqx:-.0011566755011677803,dqy:.0008675669363870202,dqz:9288843304010481e-20,dqw:.9999989504000165},{dt:56.69999998807907,dqx:-.001554405048807203,dqy:.0027664354240595976,dqz:.0015870786468637696,dqw:.9999937059008707},{dt:112.10000002384186,dqx:-.0014906190149571487,dqy:.001133325806983252,dqz:.0012143990018603674,dqw:.9999975094282145},{dt:.3999999761581421,dqx:-.029709713407167396,dqy:.02318455851070488,dqz:-.05665472285702765,dqw:.9976823400030298},{dt:112.69999998807907,dqx:.0026145706632014643,dqy:-.000657440463508064,dqz:-.000633881543773313,dqw:.9999961649858826},{dt:55.700000047683716,dqx:.005238215821881309,dqy:-60933985009489766e-21,dqz:.0014374859840250035,dqw:.9999852453992002},{dt:59.19999998807907,dqx:.03540161286204812,dqy:-.01815541003293184,dqz:.03625117333709045,dqw:.9985504290345012},{dt:53.30000001192093,dqx:.0011129933292776048,dqy:-.008191342909025318,dqz:.04168066759913404,dqw:.9990967846488581},{dt:113.5,dqx:.013702523221161826,dqy:10894580036766022e-21,dqz:.03149014884750344,dqw:.9994101316597926},{dt:55.69999998807907,dqx:.00932583192719261,dqy:-.0024815927207761795,dqz:.00316616408139549,dqw:.9999484216505589},{dt:112.59999996423721,dqx:-.002325265338728528,dqy:.00020857061954594053,dqz:-.011144946974156638,dqw:.9999351677965649},{dt:.5,dqx:-.007504188361502313,dqy:.0005252868888668202,dqz:-.010760089669381915,dqw:.9999138121363393},{dt:115,dqx:-.025920919416004225,dqy:-.0017849894050026155,dqz:-.017929689105534347,dqw:.9995015987971364},{dt:53,dqx:-.7343595837117938,dqy:-.0943541156954921,dqz:-.19275319461447382,dqw:.6439406095501954},{dt:55.90000003576279,dqx:.00802070551749373,dqy:-.00907756189464098,dqz:.01465411839278643,dqw:.9998192451474323},{dt:57.69999998807907,dqx:.017050367678882513,dqy:-.005876982986946271,dqz:.022705333461170304,dqw:.9995795185303686},{dt:55.60000002384186,dqx:.012721171632768815,dqy:-.0007331176009268553,dqz:.012412341066262857,dqw:.9998417715419415}]}];const t=Sb(n,window.location);t!==null&&(e.page=t,e.pageParams=window.history.state);const i=localStorage.getItem("settings");i!==null&&(e.settings=JSON.parse(i));const r=localStorage.getItem("history");return r!==null&&(e.history=JSON.parse(r)),e.pbTime=Tb(e.history),e}const O3={Start:"start",Cancel:"cancel",Pause:"pause",Reconstruct:"reconstruct"};function sr(n){const e=n.value;if(/^#[0-9a-fA-F]{3}([0-9a-fA-F]{3})?$/.test(e))return e}function jh(n){if(/^[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}$/.test(n))return n}class fR{constructor(e,t){this.cube=t,this.containerDiv=document.getElementById("container"),this.overlayDiv=document.getElementById("overlay");const i=document.getElementById("importHistory"),r=document.getElementById("enableGyroscope"),s=document.getElementById("recordGyroscope"),o=document.getElementById("showCube"),a=document.getElementById("invertX"),l=document.getElementById("invertY"),c=document.getElementById("invertZ");this.macInput=document.getElementById("mac"),this.btnA=document.getElementById("start"),this.connectBtn=document.getElementById("connect"),this.scrambleTxt=document.getElementById("scramble"),this.timerTxt=document.getElementById("timer"),this.powerBar=document.getElementById("powerBar"),this.historyTable=document.getElementById("historyTable"),this.stageTable=document.getElementById("stageTable"),this.pbTable=document.getElementById("pbTable"),this.dateField=document.getElementById("dateField"),this.timeField=document.getElementById("timeField"),this.countField=document.getElementById("countField"),this.tpsField=document.getElementById("tpsField"),this.scrambleField=document.getElementById("scrambleField"),this.moveField=document.getElementById("moveField"),this.pageNumberTxt=document.getElementById("pageNumber"),this.totalPagesTxt=document.getElementById("totalPages");const d=document.getElementById("redColor"),u=document.getElementById("redSwatch"),f=document.getElementById("orangeColor"),h=document.getElementById("orangeSwatch"),p=document.getElementById("whiteColor"),x=document.getElementById("whiteSwatch"),m=document.getElementById("yellowColor"),v=document.getElementById("yellowSwatch"),g=document.getElementById("greenColor"),w=document.getElementById("greenSwatch"),y=document.getElementById("blueColor"),M=document.getElementById("blueSwatch"),b=document.getElementById("internalColor"),_=document.getElementById("internalSwatch");An(this.macInput,"input").subscribe(()=>{const O=jh(this.macInput.value);this.connectBtn.classList.toggle("disabled",!O)}),An(document.getElementById("settingsBody"),"input").subscribe(O=>{if(O.target?.className=="colorInput"&&sr(O.target)!==void 0){const D=sr(d),me=sr(f),ye=sr(p),Z=sr(m),C=sr(g),A=sr(y),ie=sr(b),se=this.state.settings.colors,le=[D!==void 0?D:se[0],me!==void 0?me:se[1],ye!==void 0?ye:se[2],Z!==void 0?Z:se[3],C!==void 0?C:se[4],A!==void 0?A:se[5]],xe=ie!==void 0?ie:this.state.settings.internalColor;u.style.backgroundColor=le[0],h.style.backgroundColor=le[1],x.style.backgroundColor=le[2],v.style.backgroundColor=le[3],w.style.backgroundColor=le[4],M.style.backgroundColor=le[5],_.style.backgroundColor=xe,this.state.settings.colors=le,this.state.settings.internalColor=xe,localStorage.setItem("settings",JSON.stringify(this.state.settings)),this.cube.updateOptions({colors:le,internalColor:xe})}});const S=uo("#enableGyroscope",O=>({type:"UPDATE_SETTINGS",enableGyroscope:O})),E=uo("#recordGyroscope",O=>({type:"UPDATE_SETTINGS",recordGyroscope:O})),R=uo("#showCube",O=>({type:"UPDATE_SETTINGS",showCube:O})),I=uo("#invertX",O=>({type:"UPDATE_SETTINGS",invertX:O})),$=uo("#invertY",O=>({type:"UPDATE_SETTINGS",invertY:O})),W=uo("#invertZ",O=>({type:"UPDATE_SETTINGS",invertZ:O})),L=mn("#resetSettings",()=>{const O=li.DEFAULT_COLORS,D=li.DEFAULT_INTERNAL_COLOR;return d.value=u.style.backgroundColor=O[0],f.value=h.style.backgroundColor=O[1],p.value=x.style.backgroundColor=O[2],m.value=v.style.backgroundColor=O[3],g.value=w.style.backgroundColor=O[4],y.value=M.style.backgroundColor=O[5],b.value=_.style.backgroundColor=D,o.checked=!0,a.checked=!1,l.checked=!1,c.checked=!1,r.checked=!0,s.checked=!1,this.state.settings.colors=li.DEFAULT_COLORS,this.state.settings.internalColor=D,this.cube.updateOptions({colors:O,internalColor:D}),{type:"UPDATE_SETTINGS",showCube:!0,invertX:!1,invertY:!1,invertZ:!1,enableGyroscope:!0,recordGyroscope:!1}}),z=mn("#historyBody",O=>{const D=O?.target?.dataset.num;if(D!=null)return{type:"GO_TO_PAGE",page:"DETAILED_STATS_PAGE",params:{num:parseInt(D)}}}),U=mn("#connect",()=>{const O=jh(this.macInput.value);return O===void 0?void 0:{type:"CONNECT",macAddress:O}}),X=mn("#clearHistory",()=>({type:"CLEAR_HISTORY"})),K=mn("#exportHistory",()=>null);An(i,"change").subscribe(()=>{const O=i.files;O!==null&&O[0].text().then(D=>{const me=JSON.parse(D);me!=null&&(this.state.history.unshift(...me),this.state.pbTime=Tb(this.state.history),localStorage.setItem("history",JSON.stringify(this.state.history)))})});const j=An(window,"popstate").pipe(Ss(O=>{const D=O,me=Sb(e,window.location);return me!==null?{type:"GO_TO_PAGE",page:me,params:D.state,popping:!0}:{type:"GO_TO_PAGE",page:"TRAIN_PAGE"}})),ee=Nr("#settingsTab","SETTINGS_PAGE"),P=Nr("#solveTab","SOLVE_PAGE"),H=Nr("#scrambleTab","SCRAMBLE_PAGE"),Y=Nr("#trainTab","TRAIN_PAGE"),Q=Nr("#historyTab","HISTORY_PAGE"),F=Nr("#adminTab","ADMIN_PAGE"),oe=Nr("#helpTab","HELP_PAGE"),Se=mn("#start",()=>({type:this.btnA.textContent==="Start"?"START":"CANCEL"})),Me=mn("#center",()=>({type:"CENTER"})),be=mn("#reset",()=>({type:"RESET"})),_e=mn("#firstPage",()=>({type:"ADJUST_PAGE",pageDelta:-1/0})),Ie=mn("#prevPage",()=>({type:"ADJUST_PAGE",pageDelta:-1})),fe=mn("#nextPage",()=>({type:"ADJUST_PAGE",pageDelta:1})),pe=mn("#lastPage",()=>({type:"ADJUST_PAGE",pageDelta:1/0})),Te=document.getElementById("menuBtn"),ze=document.getElementById("tabBar");An(Te,"click").subscribe(()=>ze.classList.toggle("open",!0)),An(ze,"click").subscribe(()=>ze.classList.toggle("open",!1)),this.turnSubject=new nn,this.stopTimerSubject=new nn,this.cubeStateSubject=new nn,An(window,"keypress").subscribe(O=>{const D=this.state.settings.keyMapping[O.key];cR(this.cube,D).forEach(ye=>{this.turnSubject.next({type:"TURN",move:new Ho(100,ye)}),this.cube.turn(ye,100)})});const Ce=dC(j,S,E,R,I,$,W,L,U,z,X,ee,P,H,Y,Q,F,oe,Se,Me,be,_e,Ie,fe,pe,this.turnSubject,this.cubeStateSubject);this.state=uR(e),this.cube.updateOptions({colors:this.state.settings.colors,internalColor:this.state.settings.internalColor}),u.style.backgroundColor=this.state.settings.colors[0],h.style.backgroundColor=this.state.settings.colors[1],x.style.backgroundColor=this.state.settings.colors[2],v.style.backgroundColor=this.state.settings.colors[3],w.style.backgroundColor=this.state.settings.colors[4],M.style.backgroundColor=this.state.settings.colors[5],_.style.backgroundColor=this.state.settings.internalColor,d.value=this.state.settings.colors[0],f.value=this.state.settings.colors[1],p.value=this.state.settings.colors[2],m.value=this.state.settings.colors[3],g.value=this.state.settings.colors[4],y.value=this.state.settings.colors[5],b.value=this.state.settings.internalColor,K.subscribe(()=>{const O=`data:text/json;chatset=utf-8,${encodeURIComponent(JSON.stringify(this.state.history))}`,D=document.createElement("a");D.href=O,D.download=`history-${new Date().toISOString()}.json`,D.click()}),this.macInput.value=this.state.settings.macAddress,this.historyTable.innerHTML=I3(this.state.history,this.state.pageNumber),this.pbTable.innerHTML=D3(this.state.history),r.checked=this.state.settings.enableGyroscope,s.checked=this.state.settings.recordGyroscope,o.checked=this.state.settings.showCube,a.checked=this.state.settings.invertX,l.checked=this.state.settings.invertY,c.checked=this.state.settings.invertZ,this.containerDiv.classList.toggle("hidden",!this.state.settings.showCube),this.connectBtn.classList.toggle("disabled",!jh(this.macInput.value)),Ce.subscribe(O=>this.intentHandler(O)),this.intentHandler({type:"GO_TO_PAGE",page:this.state.page,params:this.state.pageParams,popping:!0})}containerDiv;overlayDiv;macInput;btnA;connectBtn;scrambleTxt;timerTxt;powerBar;historyTable;stageTable;pbTable;dateField;timeField;countField;tpsField;scrambleField;moveField;pageNumberTxt;totalPagesTxt;state;turnSubject;stopTimerSubject;cubeStateSubject;adapter=null;timerSub=null;wakeLock=null;replayer=null;replayerSub=null;viewOrientation=ns.clone();currentOrientation=ns.clone();async setupAdapter(){const e=this.adapter;if(e===null)throw new Error("adapter is null. This shouldn't happen.");let t=0;e.gyroUpdates.subscribe(({nx:r,ny:s,nz:o,nw:a,ox:l,oy:c,oz:d,ow:u})=>{const f=window.performance.now(),h=f-t;if(t=f,this.state.settings.enableGyroscope){const p=this.state.settings.invertX?-1:1,x=this.state.settings.invertY?-1:1,m=this.state.settings.invertZ?-1:1,v=new St(m*o,p*r,x*s,a).normalize(),g=new St(m*d,p*l,x*c,u).normalize(),w=v.clone().multiply(g.invert()),y=v,M=this.viewOrientation.clone().multiply(y);this.currentOrientation=y,this.cube.setRotationFromQuaternion(M);const b=this.state.buffer;b!==null&&b.push(new fC(h,w.x,w.y,w.z,w.w))}}),e.emitPowerRequest(),setInterval(()=>{e.emitPowerRequest()},1e4),e.powerResponses.subscribe(({chargeState:r,power:s})=>{r===0?this.powerBar.textContent=s+"%":r===1?this.powerBar.textContent="Charging":this.powerBar.textContent="Charged",this.powerBar.classList.toggle("low",s<=10),this.powerBar.style.width=`${s}%`});let i=-1;e.moveResponses.subscribe(({sequenceNumber:r,lastTurns:s})=>{let o=0;i===-1?o=1:(o=r-i,o<0&&(o+=256),o>s.length&&console.log("WARNING: Some moves were missed."),o=Math.min(s.length,o)),i=r;for(let a=o-1;a>=0;a--){const l=s[a],c=l.value.toString();this.turnSubject.next({type:"TURN",move:new Ho(l.timestamp,c)}),this.cube.turn(c,l.timestamp)}}),this.adapter.goneToSleepNotifications.subscribe(()=>{this.connectBtn.classList.remove("hidden")}),await this.adapter.startNotifications(),this.adapter.emitCubeStateRequest(),this.adapter.cubeStateResponses.subscribe(r=>{this.cube.setState(r.cubeState),this.cubeStateSubject.next({type:"CUBE_STATE",cubeState:r.cubeState})}),this.connectBtn.classList.add("hidden"),this.macInput.classList.add("hidden")}intentHandler(e){nR(this.state,e).forEach(t=>this.dispatcher(t))}dispatcher(e){switch(e.type){case"CONNECT":this.adapter=new GC(e.macAddress),this.adapter.connect().then(()=>this.setupAdapter()).catch(i=>{if(i instanceof Mb)window.isSecureContext?window.alert('Currently, Web Bluetooth is only supported in Google Chrome, Edge, and Opera and must be enabled by enabling "Experimental Web Platform features" at about://flags/#enable-experimental-web-platform-features_name.'):window.alert("Web Bluetooth is only supported in a secure context, i.e. localhost or HTTPS with a valid certificate.");else throw i});break;case"UPDATE_PROPS":if(e.props.scrambleText!==void 0&&(this.scrambleTxt.textContent=e.props.scrambleText),e.props.page!==void 0&&(this.overlayDiv.className=e.props.page,this.timerTxt.textContent=$h(0)),e.props.buttonAText!==void 0&&(e.props.buttonAText===""?this.btnA.classList.add("hidden"):(this.btnA.classList.remove("hidden"),this.btnA.textContent=e.props.buttonAText,this.btnA.className=O3[e.props.buttonAText])),e.props.history!==void 0&&(this.historyTable.innerHTML=I3(e.props.history,this.state.pageNumber),this.pbTable.innerHTML=D3(e.props.history)),e.props.selectedRecording!==void 0){const i=e.props.selectedRecording.moves,r=e.props.selectedRecording.when,s=(typeof r=="string"?new Date(r):r).toISOString(),o=b3(i.map(d=>d.value)),a=jd(i.map(d=>d.value)),l=i.map(d=>d.timestamp),c=l.reduce((d,u)=>d+u,-l[0])/1e3;this.dateField.textContent=s,this.timeField.textContent=c.toString(),this.countField.textContent=a.length.toString(),this.tpsField.textContent=(a.length/c).toPrecision(3),this.scrambleField.textContent=o.join(" "),this.moveField.textContent=a.join(" "),this.stageTable.innerHTML=dR(i)}e.props.showCube!==void 0&&this.containerDiv.classList.toggle("hidden",!e.props.showCube),e.props.pageNumber!==void 0&&(this.pageNumberTxt.textContent=e.props.pageNumber.toString()),e.props.totalPages!==void 0&&(this.totalPagesTxt.textContent=e.props.totalPages.toString());break;case"START_TIMER":this.timerSub?.unsubscribe(),this.timerSub=ob().pipe(Ss(({elapsed:i})=>i)).pipe(uC(this.stopTimerSubject)).subscribe(i=>{this.timerTxt.textContent=$h(i)});break;case"STOP_TIMER":this.stopTimerSubject.next();break;case"START_NOTIFICATIONS":this.adapter!==null&&(this.adapter.startNotifications(),this.adapter.emitCubeStateRequest());break;case"STOP_NOTIFICATIONS":this.adapter!==null&&this.adapter.stopNotifications();break;case"FETCH_CUBE_STATE":this.adapter!==null&&this.adapter.emitCubeStateRequest();break;case"SET_CUBE_STATE":this.adapter!==null&&this.adapter.reset(),this.cube.reset();break;case"CENTER":this.viewOrientation=this.currentOrientation.clone().invert();break;case"INIT_REPLAY":this.replayer?.pause(),this.replayerSub?.unsubscribe();const t=b3(e.moves.map(i=>i.value));this.replayer=new bC(e.moves,mC(t),e.gyroEntries),this.replayerSub=this.replayer.actions.subscribe(i=>{switch(i.type){case"SET_CUBE":this.cube.setState(i.cubeState),this.cube.center();break;case"MOVE":this.cube.turn(i.move.value,i.move.timestamp);break;case"GYRO":this.state.settings.enableGyroscope&&this.cube.applyQuaternion(i.dq);break;case"TIME":this.timerTxt.textContent=$h(i.elapsedTime);break;case"END":this.btnA.textContent="Start",this.btnA.className=O3.Start;break}}),this.replayer.emitState();break;case"START_REPLAY":this.replayer?.play();break;case"PAUSE_REPLAY":this.replayer?.pause();break;case"WAKELOCK":e.enable?this.wakeLock!==null?this.wakeLock?.release().then(()=>{navigator.wakeLock.request("screen").then(i=>{this.wakeLock=i})}):navigator.wakeLock.request("screen").then(i=>{this.wakeLock=i}):this.wakeLock?.release().then(()=>{this.wakeLock=null});break;default:console.log(JSON.stringify(e))}}}function hR(n,e){new fR(n,e)}function pR(n,e=100){const t=window.innerWidth,i=window.innerHeight,r=new Cn(75,t/i,.1,1e3);r.position.y=25,r.position.z=-50;const s=new hv({antialias:!0});s.setSize(t,i),n.appendChild(s.domElement);const o=new lL(r,s.domElement);o.enableZoom=!0,o.enablePan=!1,o.minDistance=5,o.maxDistance=1e3,o.rotateSpeed=2,o.usePanModAlt=!1;const a=new E8,l=getComputedStyle(document.querySelector("body")).backgroundColor;a.background=new lt(l);const c=new A8(16777215);a.add(c);const d=new li({cubieSize:5,turnTime:e});a.add(d),window.addEventListener("resize",()=>{const f=window.innerWidth,h=window.innerHeight;r.aspect=f/h,r.updateProjectionMatrix(),s.setSize(f,h)});function u(){requestAnimationFrame(u),s.render(a,r)}return u(),d}function mR(n){hR(n,pR(document.getElementById("container"),100));const e=document.getElementById("splash");window.requestIdleCallback(()=>{Uo.initialize("kociemba"),e.style.display="none"})}mR("/");
